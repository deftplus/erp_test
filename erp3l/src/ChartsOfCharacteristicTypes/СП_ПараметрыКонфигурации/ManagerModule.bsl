
#Область ПрограммныйИнтерфейс

// Получить таблицу параметров по умолчанию.
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
// 		* Ключ - Строка - наименование параметра конфигурации. 
// 		* Значение - Строка, Число - значение по умолчанию для параметра.
// 
Функция ПолучитьТаблицуПараметровПоУмолчанию(РестАПИ = Ложь) Экспорт
	
	ТаблицаПараметров = Новый ТаблицаЗначений;
	ТаблицаПараметров.Колонки.Добавить("Ключ");
	ТаблицаПараметров.Колонки.Добавить("Значение");
	
	ПараметрыКафка = ПланыВидовХарактеристик.СП_ПараметрыКонфигурации;
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить(ПараметрыКафка.MetadataBrokerList);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивИсключений", МассивИсключений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Параметры.Наименование КАК Ключ
	|ИЗ
	|	ПланВидовХарактеристик.СП_ПараметрыКонфигурации КАК Параметры
	|ГДЕ
	|	НЕ Параметры.ПометкаУдаления
	|	И НЕ Параметры.Ссылка В (&МассивИсключений)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаПараметров.Добавить();
			НоваяСтрока.Ключ = Выборка.Ключ;
			НоваяСтрока.Значение = ЗначениеПоУмолчаниюПоИмениКлюча(Выборка.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаПараметров;
	
КонецФункции

// Получает таблицу предопределенных элементов.
// 
// Возвращаемое значение:
//  ТаблицаЗначений:
//		* ИмяПредопределенныхДанных - Строка - имя предопределенных данных.
//		* Код - Строка - код предопределенных данных.
//		* Наименование - Строка - наименование предопределенных данных.
//		* ТипЗначения - ОписаниеТипов - тип значения предопределенных данных.
// 
Функция ПолучитьТаблицуПредопределенныхЭлементов() Экспорт
	
	Таблица = НоваяТаблицаПредопределенныхПараметров();
	
	МакетПредопределенных = ПолучитьМакет("ПредопределенныеЭлементы");
	
	ИменаКолонок = Новый Структура;
	ОбластьШапка = МакетПредопределенных.ПолучитьОбласть("Шапка");
	Для НомерКолонки = 1 По ОбластьШапка.ШиринаТаблицы Цикл
		ИмяКолонки = СокрЛП(ОбластьШапка.Область(1, НомерКолонки).Текст);
		ИменаКолонок.Вставить(ИмяКолонки, НомерКолонки);
	КонецЦикла;
	
	ОбластьСтроки = МакетПредопределенных.ПолучитьОбласть("Строки");
	Для НомерСтроки = 1 По ОбластьСтроки.ВысотаТаблицы Цикл
		
		ТекстИмя          = СокрЛП(ОбластьСтроки.Область(НомерСтроки, ИменаКолонок.Имя).Текст);
		ТекстКод          = СокрЛП(ОбластьСтроки.Область(НомерСтроки, ИменаКолонок.Код).Текст);
		ТекстНаименование = СокрЛП(ОбластьСтроки.Область(НомерСтроки, ИменаКолонок.Наименование).Текст);
		ТекстТип          = СокрЛП(ОбластьСтроки.Область(НомерСтроки, ИменаКолонок.Тип).Текст);
		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.ИмяПредопределенныхДанных = ТекстИмя;
		НоваяСтрока.Код                       = ТекстКод;
		НоваяСтрока.Наименование              = ТекстНаименование;
		НоваяСтрока.ТипЗначения               = ПолучитьОписаниеТипаИзСтроки(ТекстТип);
		
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначениеПоУмолчаниюПоИмениКлюча(ИмяКлюча)
	
	Если ИмяКлюча = "enable.auto.commit"
		ИЛИ ИмяКлюча = "enable.auto.offset.store" Тогда
		
		Результат = "true";
		
	ИначеЕсли ИмяКлюча = "auto.offset.reset" Тогда
		Результат = "earliest";
	
	ИначеЕсли ИмяКлюча = "security.protocol" Тогда
		Результат = "SASL_SSL";
		
	ИначеЕсли ИмяКлюча = "sasl.mechanism" Тогда
		Результат = "SCRAM-SHA-256";
		
	ИначеЕсли ИмяКлюча = "session.timeout.ms" Тогда
		Результат = 30000;
		
	ИначеЕсли ИмяКлюча = "auto.commit.interval.ms" Тогда
		Результат = 1000;
		
	Иначе
		Результат = "";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НоваяТаблицаПредопределенныхПараметров()
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипОписаниеТипа = Новый ОписаниеТипов("ОписаниеТипов");
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИмяПредопределенныхДанных", ТипСтрока);
	Таблица.Колонки.Добавить("Код"                      , ТипСтрока);
	Таблица.Колонки.Добавить("Наименование"             , ТипСтрока);
	Таблица.Колонки.Добавить("ТипЗначения"              , ТипОписаниеТипа);
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьОписаниеТипаИзСтроки(ТипСтрокой)
	
	ТипСтрокой = СтрЗаменить(ТипСтрокой, "(", ",");
	ТипСтрокой = СтрЗаменить(ТипСтрокой, ")", "");
	
	ПараметрыТипа = СтрРазделить(ТипСтрокой, ",");
	ИмяТипа = ПараметрыТипа[0];
	
	Если ИмяТипа = "Строка" Тогда
		Длина = ПараметрыТипа[1];
		ОписаниеТипа = Новый ОписаниеТипов(ИмяТипа, , Новый КвалификаторыСтроки(Длина));
		
	ИначеЕсли ИмяТипа = "Число" Тогда
		Длина = ПараметрыТипа[1];
		Точность = ПараметрыТипа[2]; 
		ОписаниеТипа = Новый ОписаниеТипов(ИмяТипа, Новый КвалификаторыЧисла(Длина, Точность));
		
	Иначе
		ОписаниеТипа = Неопределено;
		
	КонецЕсли;
	
	Возврат ОписаниеТипа;
	
КонецФункции

#КонецОбласти
