#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ТипРасходов");
	Результат.Добавить("ВариантРаспределенияРасходовУпр");
	Результат.Добавить("ВариантРаспределенияРасходовРегл");
	Результат.Добавить("ВариантРаспределенияРасходовНУ");
	Результат.Добавить("ТипЗначения; ТипЗначения");
	Результат.Добавить("ВидДеятельностиРасходов");
	Результат.Добавить("ВариантРаздельногоУчетаНДС");
	
	СтатьиРасходовЛокализация.ДополнитьБлокируемыеРеквизитыОбъекта(Результат);
	
	Возврат Результат;
	
КонецФункции

// Функция определяет реквизиты выбранной статьи расходов.
//
// Параметры:
//  СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - Ссылка на статью расходов.
//
// Возвращаемое значение:
//	Структура - реквизиты статьи расходов.
//
Функция ПолучитьРеквизитыСтатьиРасходов(Знач СтатьяРасходов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СтатьиРасходов.СпособРаспределенияПоНаправлениямДеятельности КАК СпособРаспределения,
	|	СтатьиРасходов.ТипЗначения КАК ТипЗначения,
	|	СтатьиРасходов.СтатьяРасходов КАК СтатьяРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка = &СтатьяРасходов
	|");
	
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СпособРаспределения = Выборка.СпособРаспределения;
		ТребуетсяСпособРаспределения = Не Выборка.ТипЗначения.СодержитТип(Тип("СправочникСсылка.НаправленияДеятельности"));
		ТипЗначения = Выборка.ТипЗначения;
		СтатьяРасходовРаспределение = Выборка.СтатьяРасходов;
	Иначе
		СпособРаспределения = Справочники.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка();
		ТребуетсяСпособРаспределения = Ложь;
		ТипЗначения = Неопределено;
		СтатьяРасходовРаспределение = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("СпособРаспределения, ТребуетсяСпособРаспределения, ТипЗначения",
		СпособРаспределения,
		ТребуетсяСпособРаспределения,
		ТипЗначения);
	СтруктураРеквизитов.Вставить("СтатьяРасходов", СтатьяРасходовРаспределение);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Функция определяет правило распределения на себестоимость товаров для статьи расходов.
//
// Параметры:
//  СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - Ссылка на статью расходов.
//
// Возвращаемое значение:
//	ПеречислениеСсылка.ПравилаРаспределенияНаСебестоимостьТоваров - правило распределения статьи расходов.
//
Функция ПолучитьПравилоРаспределения(СтатьяРасходов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СтатьиРасходов.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка = &СтатьяРасходов
	|	И (СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|");
	
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПравилоРаспределения = Выборка.ПравилоРаспределения;
	Иначе
		ПравилоРаспределения = Неопределено;
	КонецЕсли;
	
	Возврат ПравилоРаспределения;

КонецФункции

// Процедура заполняет список хозяйственных операций, для которых используется
// ограничение отбора статьей расходов.
//
// Параметры:
//	СписокОпераций - СписокЗначений - Список хозяйственных операций и их представлений.
//	ВариантРаспределенияРасходовУпр - ПеречислениеСсылка.ВариантыРаспределенияРасходов - вариант распределения в упр. учете
//	ВариантРаспределенияРасходовРегл - ПеречислениеСсылка.ВариантыРаспределенияРасходов - вариант распределения в регл. учете
//
Процедура ЗаполнитьСписокХозяйственныхОпераций(СписокОпераций, ВариантРаспределенияРасходовУпр = Неопределено, ВариантРаспределенияРасходовРегл = Неопределено) Экспорт
	
	СписокОпераций.Очистить();
	СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.АвансовыйОтчет, НСтр("ru = 'Прочие расходы подотчетного лица';
																					|en = 'Other expenses of advance holders'"));
	СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика, НСтр("ru = 'Услуги сторонних организаций';
																						|en = 'Third party services'"));
	СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеРасходы, НСтр("ru = 'Выдача денежных средств на прочие расходы';
																					|en = 'Cash issue for other expenses'"));
	
	Если ВариантРаспределенияРасходовУпр <> Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров
	 И ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление") Тогда
			СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию, НСтр("ru = 'Внутреннее потребление товаров';
																										|en = 'Inventory consumption — Non-operational activities'"));
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров") Тогда
			СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваров, НСтр("ru = 'Изменение стоимости испорченного товара';
																							|en = 'Change of the spoiled goods cost'"));
		КонецЕсли;
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваров, НСтр("ru = 'Изменение стоимости при пересортице';
																							|en = 'Cost change in case of misgrading'"));
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваров, НСтр("ru = 'Списания недостач товаров';
																						|en = 'Inventory shortage write-offs'"));
	КонецЕсли;
	
	Если ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
	 ИЛИ ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности Тогда
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности, НСтр("ru = 'Списание задолженности партнеров';
																											|en = 'Partner AR/AP write-off'"));
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
			СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетБанкаПоОперациямЭквайринга, НСтр("ru = 'Эквайринговая комиссия';
																											|en = 'Acquiring fee'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Производит проверку заполнения реквизитов аналитик статей расходов в переданном объекте.
//
// Параметры:
// 		Объект - СправочникОбъект, ДокументОбъект, ДанныеФормыСтруктура - Объект ИБ предназначенный для проверки
// 		Реквизиты - Строка, Структура, Массив - Реквизиты статей расходов для проверки
// 			<Строка> Перечисление пар реквизитов для проверки в формате "СтатьяРаходов1, АналитикаРасходов1, СтатьяРаходов2, АналитикаРасходов2, ..."
// 				Пустая строка трактуется как "СтатьяРасходов, АналитикаРасходов"
// 			<Структура> Ключ: Строка с именем табличной части; Значение - Строка в нотации как у параметра типа <Строка>
// 			<Массив> Массив, элементы которого либо структуры в нотации как у параметра с типа <Структура>, либо строки в нотации <Строка>
// 		НепроверяемыеРеквизиты - Массив - Массив для накопления не проверяемых реквизитов переданного объекта
// 		Отказ - Булево - Признак наличия ошибок заполнения аналитик расходов переданного объекта
// 		ДополнительныеПараметры - Структура - При наличии свойства "ПрограммнаяПроверка", ошибки записываются в эту структуру, пользователю не выводятся.
//
Процедура ПроверитьЗаполнениеАналитик(Объект, Реквизиты = "", НепроверяемыеРеквизиты = Неопределено, Отказ = Ложь,
	ДополнительныеПараметры = Неопределено) Экспорт
	
	Ошибки = Новый Структура;
	Ошибки.Вставить("СписокОшибок", Новый Массив);
	Ошибки.Вставить("ГруппыОшибок", Новый Соответствие);
	Ошибки.Вставить("ПрефиксОбъекта", ?(ТипЗнч(Объект)=Тип("ФормаКлиентскогоПриложения"), "", "Объект."));
	
	МассивОбработки = Новый Массив;
	Если ТипЗнч(Реквизиты) = Тип("Массив") Тогда
		МассивОбработки = Реквизиты;
	Иначе
		МассивОбработки.Добавить(Реквизиты);
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивОбработки Цикл
		
		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			ПроверкаЗаполненияАналитикТЧОбъекта(Объект, ЭлементМассива, НепроверяемыеРеквизиты, Ошибки);
		Иначе
			ПроверкаЗаполненияАналитикОбъекта(Объект, ЭлементМассива, НепроверяемыеРеквизиты, Ошибки);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ПрограммнаяПроверка") Тогда
		ДополнительныеПараметры.Вставить("Ошибки", Ошибки);
	Иначе
		Если Ошибки.СписокОшибок.Количество() <> 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает статьи, для которых требуется заполнение аналитики.
// 
// Параметры:
//  МассивСтатей - Массив из ПланВидовХарактеристикСсылка.СтатьиРасходов - Массив статей.
// 
// Возвращаемое значение:
//  Массив из ПланВидовХарактеристикСсылка.СтатьиРасходов - Статьи, для которых требуется заполнение аналитики.
Функция СтатьиСОбязательнымЗаполнениемАналитики(МассивСтатей) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Статьи.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|ГДЕ
	|	Статьи.Ссылка В (&МассивСтатей)
	|	И Статьи.КонтролироватьЗаполнениеАналитики");
	
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	Результат = Запрос.Выполнить();

	СписокСтатей = Новый Массив;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСтатей.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокСтатей;
	
КонецФункции

// Возвращает статьи расходов, использование которых запрещено
//
// Возвращаемое значение:
// 	СписокЗначений - Список заблокированных статей расходов.
//
Функция ЗаблокированныеСтатьиРасходов() Экспорт
	
	ЗаблокированныеСтатьи = Новый СписокЗначений;
	ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж);
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.НачисленныйНДСПриВыкупеМногооборотнойТары);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПрибыльУбытокПрошлыхЛет);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ФормированиеРезервовПоСомнительнымДолгам);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента);
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС);
		ЗаблокированныеСтатьи.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС);
	КонецЕсли; 
	
	СтатьиРасходовЛокализация.ДополнитьСписокЗаблокированныхСтатей(ЗаблокированныеСтатьи);
	
	Возврат ЗаблокированныеСтатьи;
	
КонецФункции

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	#Область ВыбытияТоваровВПрошлыхПериодах
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыбытияТоваровВПрошлыхПериодах";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выбытия товаров в прошлых периодах';
																					|en = 'Outflows of goods in past periods'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000012";
	#КонецОбласти
	
	#Область ДоначислениеИмущественныхНалоговИАмортизации
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДоначислениеИмущественныхНалоговИАмортизации";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доначисление имущественных налогов и амортизации';
																					|en = 'Additional accrual of property taxes and depreciation'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000011";
	#КонецОбласти

	#Область КурсовыеРазницы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницы";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Курсовые разницы';
																					|en = 'Exchange differences'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000003";
	#КонецОбласти

	#Область НачисленныйНДСПриВыкупеМногооборотнойТары
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НачисленныйНДСПриВыкупеМногооборотнойТары";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Начисленный НДС при выкупе многооборотной тары';
																					|en = 'VAT accrued at the redemption of reusable packaging'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000005";
	#КонецОбласти

	#Область НДСНалоговогоАгента
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДСНалоговогоАгента";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'НДС Налогового агента';
																					|en = 'Tax agent VAT'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000009";
	#КонецОбласти

	#Область ПогрешностьРасчетаСебестоимости
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПогрешностьРасчетаСебестоимости";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Погрешность расчета себестоимости';
																					|en = 'Cost calculation error'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000002";
	#КонецОбласти

	#Область ПрибыльУбытокПрошлыхЛет
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрибыльУбытокПрошлыхЛет";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прибыль (убыток) прошлых лет';
																					|en = 'Previous years profit (loss)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000007";
	#КонецОбласти

	#Область РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Разницы стоимости возврата и фактической стоимости товаров';
																					|en = 'Differences in the cost of return and the actual cost of goods'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000004";
	#КонецОбласти

	#Область РасходыЛизинговыеПлатежи
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыЛизинговыеПлатежи";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по лизинговым платежам за вычетом сумм амортизации';
																					|en = 'Lease payment costs, net of depreciation'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000015";
	#КонецОбласти

	#Область РасходыНаПлатон
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыНаПлатон";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы на ""Платон""';
																					|en = 'Expenses for Platon'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000013";
	#КонецОбласти

	#Область РасходыПриКонвертацииВалюты
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыПриКонвертацииВалюты";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы при конвертации валюты';
																					|en = 'Currency conversion costs'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000014";
	#КонецОбласти

	#Область СебестоимостьПродаж
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СебестоимостьПродаж";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Себестоимость продаж';
																					|en = 'COGS'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000001";
	#КонецОбласти

	#Область ТорговыйСбор
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТорговыйСбор";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Торговый сбор';
																					|en = 'Sales charge'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000010";
	#КонецОбласти

	#Область ФормированиеРезервовПоСомнительнымДолгам
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФормированиеРезервовПоСомнительнымДолгам";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Формирование резервов по сомнительным долгам';
																					|en = 'Generate loss allowance'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000008";
	#КонецОбласти

	#Область ОтклонениеВСтоимостиТоваров
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОтклонениеВСтоимостиТоваров";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Отклонение в стоимости товаров';
																					|en = 'Goods value variance'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000016";
	#КонецОбласти
	
	#Область СторноПроизводственныхЗатрат
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СторноПроизводственныхЗатрат";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Сторно производственных затрат';
																					|en = 'Production costs storno'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000017";
	#КонецОбласти
	
	#Область ПроизводственныеРасходыПрошлыхПериодов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПроизводственныеРасходыПрошлыхПериодов";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Производственные расходы прошлых периодов';
																					|en = 'Production costs in past periods'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000018";
	#КонецОбласти
	
	#Область РасходыПриСписанииОС
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыПриСписанииОС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы, связанные со списанием ОС';
																					|en = 'Fixed asset disposal expenses'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000019";
	#КонецОбласти

	#Область РасходыПриПродажеОС
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыПриПродажеОС";
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы, связанные с продажей ОС';
																					|en = 'Fixed asset sale expenses'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "000000020";
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - ПланВидовХарактеристикОбъект.СтатьиРасходов - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// Возвращает соответствие статей, для которых нельзя изменить вариант распределения, значению варианта распределения.
// 
// Возвращаемое значение:
//	Соответствие - значения для статей
//		Ключ - ПланВидовХарактеристикСсылка.СтатьиРасходов - статья, для которой используется неизменяемый вариант распределния;
//		Значение - ПеречислениеСсылка.ВариантыРаспределенияРасходов - вариант распределения который должен использоваться для статьи.
//
Функция СоответствиеСтатейВариантамРаспределения() Экспорт
	
	СоответствиеСтатейВариантамРаспределения = Новый Соответствие;
	
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.НачисленныйНДСПриВыкупеМногооборотнойТары, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.ПрибыльУбытокПрошлыхЛет, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.ФормированиеРезервовПоСомнительнымДолгам, Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента, Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	
	//++ НЕ УТ
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС, Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	СоответствиеСтатейВариантамРаспределения.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС, Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	//-- НЕ УТ
	
	Возврат СоответствиеСтатейВариантамРаспределения;
	
КонецФункции

// Возвращает соответствие статей, для которых нельзя изменить тип расходов, соответствующему значению.
// 
// Возвращаемое значение:
//	Соответствие:
//		Ключ - ПланВидовХарактеристикСсылка.СтатьиРасходов - статья, для которой используется неизменяемый тип расходов;
//		Значение - ПеречислениеСсылка.ТипыРасходов - тип расхода который должен использоваться для статьи.
//
Функция СоответствиеСтатейТипамРасходов() Экспорт
	
	СоответствиеСтатейТипамРасходов = Новый Соответствие;
	
	//++ НЕ УТ
	СоответствиеСтатейТипамРасходов.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС, Перечисления.ТипыРасходов.ПрочиеРасходы);
	СоответствиеСтатейТипамРасходов.Вставить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС, Перечисления.ТипыРасходов.ПрочиеРасходы);
	//-- НЕ УТ
	
	Возврат СоответствиеСтатейТипамРасходов;
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

//++ НЕ УТ

// Заполняет отбор в параметрах при обработке получения данных выбора и открытии формы выбора.
//
// Параметры:
// 		Параметры - Структура - Структура параметров в формате параметров формы выбора или процедуры "ОбработкаПолученияДанныхВыбора".
//
Процедура ОбработкаПараметровВыбора(Параметры) Экспорт
	
	ВнеоборотныеАктивы.ОбработкаПараметровВыбораСтатьиРасходов(Параметры);

	//++ Локализация
	ТМЦВЭксплуатацииСервер.ОбработкаПараметровВыбораСтатьиРасходов(Параметры);
	//-- Локализация
	
КонецПроцедуры

// Заполняет реквизиты параметров настройки счетов учета расходов, которые влияют на настройку,
// 	соответствующими им именам реквизитов аналитики учета.
//
// Параметры:
// 	СоответствиеИмен - Соответствие - ключом выступает имя реквизита, используемое в настройке счетов учета,
// 		значением является соответствующее имя реквизита аналитики учета.
// 
Процедура ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИмен) Экспорт
	
	СоответствиеИмен.ВидДеятельностиРасходов = "ВидДеятельностиРасходов";
	СоответствиеИмен.ВариантРаспределенияРасходовРегл = "ВариантРаспределенияРасходовРегл";
	СоответствиеИмен.РасходыНаОбъектыЭксплуатации = "РасходыНаОбъектыЭксплуатации";
	СоответствиеИмен.РасходыНаОбъектыСтроительства = "РасходыНаОбъектыСтроительства";
	СоответствиеИмен.РасходыНаНМАиНИОКР = "РасходыНаНМАиНИОКР";
	СтатьиРасходовЛокализация.ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИмен);
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ДоходыИРасходыСервер.ОбработкаПолученияДанныхВыбораПВХСтатьиРасходов(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииЗаполненияАналитик

Функция ИменаРеквизитовСтатьиИАналитики(СтрокаРеквизитов, НепроверяемыеРеквизиты = Неопределено, ПрефиксТабличнойЧасти = "")
	
	Если ПустаяСтрока(СтрокаРеквизитов) Тогда
		Если НепроверяемыеРеквизиты <> Неопределено Тогда
			НепроверяемыеРеквизиты.Добавить(ПрефиксТабличнойЧасти + "АналитикаРасходов");
		КонецЕсли;
		Возврат Новый Структура("СтатьяРасходов", "АналитикаРасходов");
	КонецЕсли;
	
	СтруктураОбработки = Новый Структура(СтрокаРеквизитов);
	СтруктураВозврата = Новый Структура;
	ПредыдущийКлюч = Неопределено;
	Для Каждого КлючИЗначение Из СтруктураОбработки Цикл
		Если ПредыдущийКлюч = Неопределено Тогда
			ПредыдущийКлюч = КлючИЗначение.Ключ;
		Иначе
			СтруктураВозврата.Вставить(ПредыдущийКлюч, КлючИЗначение.Ключ);
			ПредыдущийКлюч = Неопределено;
			Если НепроверяемыеРеквизиты <> Неопределено Тогда
				НепроверяемыеРеквизиты.Добавить(ПрефиксТабличнойЧасти + КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ПроверкаЗаполненияАналитикОбъекта(Объект, Реквизиты, НепроверяемыеРеквизиты, Ошибки)
	
	СтруктураРеквизитов = ИменаРеквизитовСтатьиИАналитики(Реквизиты, НепроверяемыеРеквизиты);
	МассивСтатей = Новый Массив;
	
	// Определим список статей для контроля
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Статья = Объект[КлючИЗначение.Ключ];
		
		Если ЗначениеЗаполнено(Статья) Тогда
			МассивСтатей.Добавить(Статья);
		КонецЕсли;
		
	КонецЦикла;
	
	// Проверим заполнение аналитики
	ОбязательныеСтатьи = СтатьиСОбязательнымЗаполнениемАналитики(МассивСтатей);
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Статья = Объект[КлючИЗначение.Ключ];
		Аналитика = Объект[КлючИЗначение.Значение];
		
		Если Не (ОбязательныеСтатьи.Найти(Статья) = Неопределено Или ЗначениеЗаполнено(Аналитика)) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				Ошибки,
				Ошибки.ПрефиксОбъекта + КлючИЗначение.Значение,
				НСтр("ru = 'Аналитика расходов не заполнена';
					|en = 'Expense dimension is required'"), "");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаЗаполненияАналитикТЧОбъекта(Объект, Реквизиты, НепроверяемыеРеквизиты, Ошибки)
	
	// Определим список статей для контроля
	ОбщийМассивСтатей = Новый Массив;
	Для Каждого ОписаниеТЧ Из Реквизиты Цикл
		
		ИмяТЧ = ОписаниеТЧ.Ключ;
		
		СтруктураРеквизитов = ИменаРеквизитовСтатьиИАналитики(ОписаниеТЧ.Значение, НепроверяемыеРеквизиты, ИмяТЧ + ".");
		
		Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
			
			МассивСтатей = Объект[ИмяТЧ].ВыгрузитьКолонку(КлючИЗначение.Ключ);
			Для Каждого Статья Из МассивСтатей Цикл
				ОбщийМассивСтатей.Добавить(Статья);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Проверим заполнение аналитики
	ОбязательныеСтатьи = СтатьиСОбязательнымЗаполнениемАналитики(ОбщийМассивСтатей);
	Для Каждого ОписаниеТЧ Из Реквизиты Цикл // Табличные части
		
		ИмяТЧ = ОписаниеТЧ.Ключ;
		ТЧ = Объект[ИмяТЧ];
		
		МетаданныеОбъекта = Объект.Метаданные();
		ТабличнаяЧасть = МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяТЧ);
		
		СтруктураРеквизитов = ИменаРеквизитовСтатьиИАналитики(ОписаниеТЧ.Значение, Неопределено, ИмяТЧ + ".");
		
		Для Индекс = 0 По ТЧ.Количество() - 1 Цикл // Строки табличной части
			
			СтрокаТЧ = ТЧ[Индекс];
			
			Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
				
				РеквизитАналитика = ТабличнаяЧасть.Реквизиты.Найти(КлючИЗначение.Значение);
				
				Статья = СтрокаТЧ[КлючИЗначение.Ключ];
				Аналитика = СтрокаТЧ[КлючИЗначение.Значение];
				
				Если Не (ОбязательныеСтатьи.Найти(Статья) = Неопределено Или ЗначениеЗаполнено(Аналитика)) Тогда
					
					
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
						Ошибки,
						Ошибки.ПрефиксОбъекта + ИмяТЧ + "[%1]." + КлючИЗначение.Значение,
						СтрШаблон(НСтр("ru = 'Не заполнено поле ""%1"" в строке %2 списка ""%3""';
										|en = '""%1"" in line %2 of list ""%3"" is required'"), 
							РеквизитАналитика.Синоним, СтрокаТЧ.НомерСтроки, ТабличнаяЧасть.Синоним),
						ИмяТЧ,
						Индекс,
						СтрШаблон(НСтр("ru = 'Не заполнено поле ""%1"" в строке %2 списка ""%3""';
										|en = '""%1"" in line %2 of list ""%3"" is required'"), 
							РеквизитАналитика.Синоним, СтрокаТЧ.НомерСтроки, ТабличнаяЧасть.Синоним));
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область ЗаполнитьЭлементыНачальнымиДанными

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьЭлементыНачальнымиДанными";
	Обработчик.Версия = "11.5.7.273";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("47f1eb47-aa1e-418e-bc7f-9e77a4b72233");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ПланыВидовХарактеристик.СтатьиРасходов.ЗарегистрироватьПредопределенныеЭлементыДляОбновления";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновление наименований предопределенных элементов.
	|До завершения обработки наименования этих элементов в ряде случаев будет отображаться некорректно.';
	|en = 'Updates the names of predefined items.
	|While the update is in progress, names of predefined items might be displayed incorrectly.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "МультиязычностьСервер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";
	//++ НЕ УТ
	//++ Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "Любой";
	//-- Локализация
	//-- НЕ УТ

#КонецОбласти

#Область ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.7.346";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("7e4eea7f-3a6b-4f16-9ec6-729c9ff6ac59");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ПланыВидовХарактеристик.СтатьиРасходов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Для статей расходов с вариантам распределения на РБП, на фин. рез. заполняются реквизиты %Парам1%/Упр, по значениям реквизитов %Парам2% и %Парам3%. 
	|	Вариант распределения НУ заполняется в соответствии с настройками бух. учета и значением реквизита %Парам4%.
	|	Для варианта на фин. рез. правило распределения НУ заполняется в соответствии с правилом БУ.
	|	ГФУ настроек счетов учета заполняются значениями (если ранее не были настроены).';
	|en = 'Для статей расходов с вариантам распределения на РБП, на фин. рез. заполняются реквизиты %Парам1%/Упр, по значениям реквизитов %Парам2% и %Парам3%. 
	|	Вариант распределения НУ заполняется в соответствии с настройками бух. учета и значением реквизита %Парам4%.
	|	Для варианта на фин. рез. правило распределения НУ заполняется в соответствии с правилом БУ.
	|	ГФУ настроек счетов учета заполняются значениями (если ранее не были настроены).'");
	
	Обработчик.Комментарий = СтрЗаменить(Обработчик.Комментарий, "%Парам1%", "ПравилоРаспределенияРасходовРегл");
	Обработчик.Комментарий = СтрЗаменить(Обработчик.Комментарий, "%Парам2%", "УдалитьСпособРаспределенияПоНаправлениямДеятельности");
	Обработчик.Комментарий = СтрЗаменить(Обработчик.Комментарий, "%Парам3%", "УдалитьСтатьяРасходов");
	Обработчик.Комментарий = СтрЗаменить(Обработчик.Комментарий, "%Парам4%", "КосвенныеЗатратыНУ");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ПравилаРаспределенияРасходов.ПолноеИмя());
	//++ НЕ УТ
	//++ Локализация
	Читаемые.Добавить(Метаданные.РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПолноеИмя());
	//-- Локализация
	//-- НЕ УТ
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.Справочники.ГруппыФинансовогоУчетаДоходовРасходов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "МультиязычностьСервер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьЭлементыНачальнымиДанными";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ПравилаРаспределенияРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//++ НЕ УТ
	//++ Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";
	//-- Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства.ОбработатьЗаполнениеНастроекКомпоновки";
	НоваяСтрока.Порядок = "Любой";
	//-- НЕ УТ

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ГруппыФинансовогоУчетаДоходовРасходов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ЭквайринговыеТерминалы.СгенерироватьДоговорыЭквайринга";
	НоваяСтрока.Порядок = "До";

#КонецОбласти

КонецПроцедуры

Процедура ЗаполнитьПредопределенныеСтатьиРасходов() Экспорт
	
	МассивСтатей = Новый Массив;
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.НачисленныйНДСПриВыкупеМногооборотнойТары);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПрибыльУбытокПрошлыхЛет);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ФормированиеРезервовПоСомнительнымДолгам);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ТорговыйСбор);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров);
	//++ НЕ УТ
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС);
	МассивСтатей.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС);
	//-- НЕ УТ
	
	Для Каждого СтатьяРасходов Из МассивСтатей Цикл
		
		Если Не ЗначениеЗаполнено(СтатьяРасходов.ВариантРаспределенияРасходовРегл) Тогда
			СтатьяРасходовОбъект = СтатьяРасходов.ПолучитьОбъект();
			Если СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.АналитикаКурсовыхРазниц");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриКонвертацииВалюты Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.АналитикаКурсовыхРазниц");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.НачисленныйНДСПриВыкупеМногооборотнойТары Тогда
				СтатьяРасходовОбъект.ТипРасходов = Перечисления.ТипыРасходов.ПродажаТоваров;
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Партнеры");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ФормированиеРезервовПоСомнительнымДолгам Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
					СтатьяРасходовОбъект.Наименование = НСтр("ru = 'Прочие расходы';
															|en = 'Other expenses'");;
				КонецЕсли;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента Тогда
				СтатьяРасходовОбъект.ТипРасходов = Перечисления.ТипыРасходов.ЗакупкаТоваров;
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("ДокументСсылка.ПриобретениеТоваровУслуг");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров;
				СтатьяРасходовОбъект.ПравилоРаспределенияНаСебестоимость = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ТорговыйСбор Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Склады");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПрибыльУбытокПрошлыхЛет Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПрочиеРасходы");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			//++ НЕ УТ
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
				СтатьяРасходовОбъект.ХарактерПроизводственныхЗатрат = Перечисления.ХарактерПроизводственныхЗатрат.Переменные;
			//-- НЕ УТ
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
				
			//++ НЕ УТ
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС Тогда
				
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
				
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС Тогда
				
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
				
			ИначеЕсли СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат Тогда
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
				СтатьяРасходовОбъект.ХарактерПроизводственныхЗатрат = Перечисления.ХарактерПроизводственныхЗатрат.Переменные;
			//-- НЕ УТ
			Иначе
				СтатьяРасходовОбъект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности");
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				СтатьяРасходовОбъект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтатьяРасходовОбъект.ТипРасходов) Тогда
				СтатьяРасходовОбъект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтатьяРасходовОбъект.ВариантРаспределенияРасходовУпр) Тогда
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовУпр = СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтатьяРасходовОбъект.ВариантРаспределенияРасходовНУ) Тогда
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовНУ = СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл;
			КонецЕсли;
			УказатьГФУПредопределеннойСтатьи(СтатьяРасходовОбъект);
			
			СтатьиРасходовЛокализация.ЗаполнитьРеквизитыПредопределеннойСтатьиРасходов(СтатьяРасходовОбъект);
			
			СтатьяРасходовОбъект.ДополнительныеСвойства.Вставить("ИзменениеКлючевыхРеквизитов", Истина);
			СтатьяРасходовОбъект.Записать();

		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления
// Заполняет реквизиты ТипРасходов, ВариантРаспределенияРасходовУпр, ХарактерПроизводственныхЗатрат, ВариантРаспределенияРасходовНУ, ПравилоРаспределенияРасходовНУ. 
// 
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "ПланВидовХарактеристик.СтатьиРасходов";
	МетаданныеОбъекта = Метаданные.ПланыВидовХарактеристик.СтатьиРасходов;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДополнительныеПараметрыВыборкиДанных = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанных.ВыбиратьПорциями = Ложь;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
																					ПолноеИмяОбъекта,
																					МенеджерВременныхТаблиц,
																					ДополнительныеПараметрыВыборкиДанных);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
		|	Реквизиты.ВерсияДанных КАК ВерсияДанных,
		|	1 КАК НомерУсловия
		|ПОМЕСТИТЬ ВТУсловия
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И (НЕ СтатьиРасходов.УдалитьСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|					ИЛИ СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаРБП))
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|						ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	2
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И (НЕ СтатьиРасходов.УдалитьСпособРаспределенияПоНаправлениямДеятельности = ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
		|					ИЛИ СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат))
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|						ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	3
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства)
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|						ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|							И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	4
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И НЕ СтатьиРасходов.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка)
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|						И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|					ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|						И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	5
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)
		|				ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка))
		|			)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	6
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И НЕ СтатьиРасходов.ПравилоРаспределенияНаСебестоимостьПродажУпр = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьПродаж.ПустаяСсылка)
		|				И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж)
		|				И СтатьиРасходов.ПравилоРаспределенияНаСебестоимостьПродажРегл = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьПродаж.ПустаяСсылка)
		|			)
		//++ НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	7
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				И (СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|					ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка))
		|				И СтатьиРасходов.ПравилоРаспределенияРасходовРегл <> СтатьиРасходов.ПравилоРаспределенияРасходовНУ
		|				И СтатьиРасходов.ПравилоРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|			)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	8
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И СтатьиРасходов.Ссылка В (
		|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат),
		|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов),
		|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
		|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС),
		|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров))
		|				И (	СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.Производственные)
		|					ИЛИ СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПустаяСсылка)
		|					ИЛИ СтатьиРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|				)
		|			)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	9
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	ИСТИНА В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|			ГДЕ
		|				СтатьиРасходов.Ссылка = ОбъектыДляОбработки.Ссылка
		|				И СтатьиРасходов.ВариантРаспределенияРасходовНУ <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|				И СтатьиРасходов.ВариантРаспределенияРасходовРегл В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства)
		|				)
		|				И СтатьиРасходов.ВидРасходов В (
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование),
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников),
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов),
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности),
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПредставительскиеРасходы),
		|					ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.РасходыНаРекламуНормируемые)
		|				)
		|			)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	10
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|ГДЕ
		|	Реквизиты.Ссылка В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС))
		|	И (Реквизиты.ВариантРаспределенияРасходовУпр <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
		|	ИЛИ Реквизиты.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка,
		|	Реквизиты.ВерсияДанных,
		|	11
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		//++ Локализация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьПорядокОтраженияРасходов КАК СтарыеНастройкиСчетов
		|		ПО ОбъектыДляОбработки.Ссылка = СтарыеНастройкиСчетов.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НовыеНастройкиСчетов
		|		ПО ОбъектыДляОбработки.Ссылка = НовыеНастройкиСчетов.АналитикаУчета
		|			И НовыеНастройкиСчетов.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		//-- Локализация
		|ГДЕ
		|	Реквизиты.Предопределенный
		|	И (Реквизиты.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка)
		|		ИЛИ Реквизиты.ГруппаФинансовогоУчетаРегл = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка)
		|		ИЛИ Реквизиты.ГруппаФинансовогоУчетаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка))
		//++ Локализация
		|	И (СтарыеНастройкиСчетов.СтатьяРасходов ЕСТЬ NULL
		|		И НовыеНастройкиСчетов.АналитикаУчета ЕСТЬ NULL
		|		И Реквизиты.УдалитьСчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		И Реквизиты.УдалитьСчетСписанияОСНО = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		И Реквизиты.УдалитьСчетСписанияЕНВД = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		//-- Локализация
		//-- НЕ УТ
		|
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НомерУсловия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(НаРБП.ВерсияДанных,
		|		ЕСТЬNULL(НаНД.ВерсияДанных,
		|			ЕСТЬNULL(НаПроизводство.ВерсияДанных, 
		|				ЕСТЬNULL(НаСебестоимость.ВерсияДанных, 
		|					ЕСТЬNULL(ВариантыУпрНУ.ВерсияДанных, 
		|						ЕСТЬNULL(НаСебестоимостьПродаж.ВерсияДанных, 
		|							ЕСТЬNULL(ОбновлениеПредопределенныхЭлементов.ВерсияДанных, 
		|								ЕСТЬNULL(ОбновлениеПредопределенныхЭлементов.ВерсияДанных, 
		|									ОбъектыДляОбработки.Ссылка.ВерсияДанных
		|							)))))))) КАК ВерсияДанных,
		|	ВЫБОР
		|		КОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат)
		|			ТОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов
		|		ИНАЧЕ
		|			ЕСТЬNULL(ПравилаНаНД.Ссылка, ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	КОНЕЦ КАК ПравилоНаНД,
		|	ВЫБОР
		|		КОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаРБП)
		|			ТОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов
		|		ИНАЧЕ
		|			ЕСТЬNULL(ПравилаНаРБП.Ссылка, ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	КОНЕЦ КАК ПравилоНаРБП,
		|	ВЫБОР
		|		КОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства)
		|			ТОГДА Реквизиты.УдалитьПравилоРаспределенияРасходов
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|	КОНЕЦ КАК ПравилоНаПроизводство,
		|	Реквизиты.ПравилоРаспределенияНаСебестоимостьПродажУпр КАК ПравилоРаспределенияНаСебестоимостьПродажРегл,
		|	ЕСТЬNULL(ПравилаНаСебестоимость.Ссылка, ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)) КАК ПравилоНаСебестоимость,
		|	ЕСТЬNULL(Реквизиты.ПравилоРаспределенияРасходовУпр.НазначениеПравила, 
		|		ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.ПустаяСсылка)) КАК ТекущееНазначениеПравилаУпр,
		|	ЕСТЬNULL(Реквизиты.ПравилоРаспределенияРасходовРегл.НазначениеПравила,
		|		ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.ПустаяСсылка)) КАК ТекущееНазначениеПравилаРегл,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) И Реквизиты.КосвенныеЗатратыНУ
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|		ИНАЧЕ
		|			Реквизиты.ВариантРаспределенияРасходовРегл
		|	КОНЕЦ КАК ВариантРаспределенияРасходовНУ,
		|	Реквизиты.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
		|	Реквизиты.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
		|	НЕ (НаРБП.Ссылка ЕСТЬ NULL И НаНД.Ссылка ЕСТЬ NULL И НаПроизводство.Ссылка ЕСТЬ NULL И НаСебестоимость.Ссылка ЕСТЬ NULL) КАК ИзменениеПравил,
		|	НЕ НаСебестоимостьПродаж.Ссылка ЕСТЬ NULL КАК ИзменениеПравилаНаСебестоимостьПродажРегл,
		|	НЕ ВариантыУпрНУ.Ссылка ЕСТЬ NULL КАК ЗаполнениеВариантовРаспределенияУпрНУ,
		|	НЕ ПравилаНУ.Ссылка ЕСТЬ NULL КАК ЗаполнениеПравилРаспределенияНУ,
		|	Реквизиты.ПравилоРаспределенияРасходовРегл КАК ПравилоРаспределенияРасходовРегл,
		|	ВЫБОР
		|		КОГДА НЕ ОбновлениеПредопределенныхЭлементов.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПрочиеРасходы)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПустаяСсылка)
		|	КОНЕЦ КАК ТипРасходов,
		|	НЕ ОбновлениеПредопределенныхЭлементов.Ссылка ЕСТЬ NULL КАК ОбработатьПредопределенныеЭлементы,
		|	НЕ КосвенныеНормируемые.Ссылка ЕСТЬ NULL КАК ОбработатьКосвенныеНормируемые,
		|	НЕ ИзменениеОбновленияПредопределенных.Ссылка ЕСТЬ NULL КАК ОбработатьИзменениеОбновленияПредопределенных,
		|	НЕ БезГФУ.Ссылка ЕСТЬ NULL КАК ОбработатьБезГФУ
		|ИЗ
		|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Реквизиты
		|		ПО ОбъектыДляОбработки.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК ПравилаНаРБП
		|		ПО Реквизиты.УдалитьСтатьяРасходов = ПравилаНаРБП.СтатьяСписанияРБП
		|			И НЕ Реквизиты.УдалитьСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК ПравилаНаНД
		|		ПО Реквизиты.УдалитьСпособРаспределенияПоНаправлениямДеятельности = ПравилаНаНД.УдалитьСпособРаспределения
		|			И НЕ Реквизиты.УдалитьСпособРаспределенияПоНаправлениямДеятельности = ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК НаРБП
		|		ПО ОбъектыДляОбработки.Ссылка = НаРБП.Ссылка
		|			И (НаРБП.НомерУсловия = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК НаНД
		|		ПО ОбъектыДляОбработки.Ссылка = НаНД.Ссылка
		|			И (НаНД.НомерУсловия = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК НаПроизводство
		|		ПО ОбъектыДляОбработки.Ссылка = НаПроизводство.Ссылка
		|			И (НаПроизводство.НомерУсловия = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК НаСебестоимость
		|		ПО ОбъектыДляОбработки.Ссылка = НаСебестоимость.Ссылка
		|			И (НаСебестоимость.НомерУсловия = 4)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК ВариантыУпрНУ
		|		ПО ОбъектыДляОбработки.Ссылка = ВариантыУпрНУ.Ссылка
		|			И (ВариантыУпрНУ.НомерУсловия = 5)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК НаСебестоимостьПродаж
		|		ПО ОбъектыДляОбработки.Ссылка = НаСебестоимостьПродаж.Ссылка
		|			И (НаСебестоимостьПродаж.НомерУсловия = 6)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК ПравилаНУ
		|		ПО ОбъектыДляОбработки.Ссылка = ПравилаНУ.Ссылка
		|			И (ПравилаНУ.НомерУсловия = 7)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК ОбновлениеПредопределенныхЭлементов
		|		ПО ОбъектыДляОбработки.Ссылка = ОбновлениеПредопределенныхЭлементов.Ссылка
		|			И (ОбновлениеПредопределенныхЭлементов.НомерУсловия = 8)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК КосвенныеНормируемые
		|		ПО ОбъектыДляОбработки.Ссылка = КосвенныеНормируемые.Ссылка
		|			И (КосвенныеНормируемые.НомерУсловия = 9)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК ИзменениеОбновленияПредопределенных
		|		ПО ОбъектыДляОбработки.Ссылка = ИзменениеОбновленияПредопределенных.Ссылка
		|			И ИзменениеОбновленияПредопределенных.НомерУсловия = 10
		|			И ОбновлениеПредопределенныхЭлементов.Ссылка ЕСТЬ NULL
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловия КАК БезГФУ
		|		ПО ОбъектыДляОбработки.Ссылка = БезГФУ.Ссылка
		|			И БезГФУ.НомерУсловия = 11
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК ПравилаНаСебестоимость
		|		ПО НЕ Реквизиты.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка)
		|			И НЕ НаСебестоимость.Ссылка ЕСТЬ NULL
		|			И ВЫБОР
		|				КОГДА Реквизиты.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству)
		|					ТОГДА ПравилаНаСебестоимость.БазаРаспределенияПоПартиям = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоТоваров)
		|				КОГДА Реквизиты.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу)
		|					ТОГДА ПравилаНаСебестоимость.БазаРаспределенияПоПартиям = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесТоваров)
		|				КОГДА Реквизиты.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему)
		|					ТОГДА ПравилаНаСебестоимость.БазаРаспределенияПоПартиям = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемТоваров)
		|				КОГДА Реквизиты.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости)
		|					ТОГДА ПравилаНаСебестоимость.БазаРаспределенияПоПартиям = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СебестоимостьТоваров)
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|			";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Объект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка,
																			Выборка.ВерсияДанных,
																			Параметры.Очередь);
			Если Объект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			// Обработка предопределенных статей
			Если Выборка.ОбработатьПредопределенныеЭлементы Тогда

				Если Выборка.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров Тогда
					Объект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
					Объект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы;
					Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
					//++ НЕ УТ
					Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
					Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
					Объект.ХарактерПроизводственныхЗатрат = Перечисления.ХарактерПроизводственныхЗатрат.Переменные;
					//++ Локализация
					Объект.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
					//-- Локализация
					//-- НЕ УТ
					Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.Товары;
					Объект.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
					Объект.ПризнаватьРасходамиПриУСН = Истина;
					Объект.ПринятиеКНалоговомуУчету = Истина;
				
				//++ НЕ УТ
				ИначеЕсли Выборка.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат Тогда
					Объект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
					Объект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы;
					Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
					Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
					Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
					Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
					Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
					Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
					Объект.ХарактерПроизводственныхЗатрат = Перечисления.ХарактерПроизводственныхЗатрат.Переменные;
					//++ Локализация
					Объект.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
					//-- Локализация
					Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.Товары;
					Объект.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
					Объект.ПризнаватьРасходамиПриУСН = Истина;
					Объект.ПринятиеКНалоговомуУчету = Истина;
				
				ИначеЕсли Выборка.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов Тогда
					Объект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
					Объект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы;
					Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
					Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
					Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
					Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
					Объект.ХарактерПроизводственныхЗатрат = Перечисления.ХарактерПроизводственныхЗатрат.Переменные;
					//++ Локализация
					Объект.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
					//-- Локализация
					Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.Товары;
					Объект.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
					Объект.ПризнаватьРасходамиПриУСН = Истина;
					Объект.ПринятиеКНалоговомуУчету = Истина;
					
				ИначеЕсли (Выборка.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС
						ИЛИ Выборка.Ссылка = ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС) Тогда
							
					Объект.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации");
					Объект.ТипРасходов = Перечисления.ТипыРасходов.ПрочиеРасходы;
	
					Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
					Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
					Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
	
					Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
					Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
					
					Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.ПрочиеРасходы;
					
					Объект.ВидЦенностиНДС = Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги;
					Объект.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.Распределение;
					
					Объект.ПризнаватьРасходамиПриУСН = Истина;
					Объект.ПринятиеКНалоговомуУчету = Истина;
					
					//-- НЕ УТ
					
				КонецЕсли;
				
			КонецЕсли;
			
			//++ НЕ УТ
			Если Выборка.ОбработатьИзменениеОбновленияПредопределенных Тогда
				
				Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
				Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
				Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять;
				
			КонецЕсли;
			
			Если Выборка.ОбработатьБезГФУ Тогда
				
				УказатьГФУПредопределеннойСтатьи(Объект);
				
			КонецЕсли;
			//-- НЕ УТ

			Если Выборка.ИзменениеПравил Тогда
				
				Если Выборка.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов
					И Не Выборка.ТекущееНазначениеПравилаРегл = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаРБП Тогда
					Объект.ПравилоРаспределенияРасходовРегл = Выборка.ПравилоНаРБП;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
					И Не Выборка.ТекущееНазначениеПравилаРегл = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат Тогда
					Объект.ПравилоРаспределенияРасходовРегл = Выборка.ПравилоНаНД;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
					И Не Выборка.ТекущееНазначениеПравилаРегл = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства Тогда
					Объект.ПравилоРаспределенияРасходовРегл = Выборка.ПравилоНаПроизводство;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров
					И Не Выборка.ТекущееНазначениеПравилаРегл = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаСебестоимостьТоваров Тогда
					Объект.ПравилоРаспределенияРасходовРегл = Выборка.ПравилоНаСебестоимость;
				КонецЕсли;
				
				Если Выборка.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов
					И Не Выборка.ТекущееНазначениеПравилаУпр = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаРБП Тогда
					Объект.ПравилоРаспределенияРасходовУпр = Выборка.ПравилоНаРБП;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
					И Не Выборка.ТекущееНазначениеПравилаУпр = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат Тогда
					Объект.ПравилоРаспределенияРасходовУпр = Выборка.ПравилоНаНД;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
					И Не Выборка.ТекущееНазначениеПравилаУпр = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства Тогда
					Объект.ПравилоРаспределенияРасходовУпр = Выборка.ПравилоНаПроизводство;
				ИначеЕсли Выборка.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров
					И Не Выборка.ТекущееНазначениеПравилаУпр = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаСебестоимостьТоваров Тогда
					Объект.ПравилоРаспределенияРасходовУпр = Выборка.ПравилоНаСебестоимость;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Выборка.ЗаполнениеВариантовРаспределенияУпрНУ И НЕ ЗначениеЗаполнено(Объект.ВариантРаспределенияРасходовУпр) Тогда
				Объект.ВариантРаспределенияРасходовУпр = Объект.ВариантРаспределенияРасходовРегл;
			КонецЕсли;
			
			Если Выборка.ЗаполнениеВариантовРаспределенияУпрНУ И НЕ ЗначениеЗаполнено(Объект.ВариантРаспределенияРасходовНУ) Тогда
				Объект.ВариантРаспределенияРасходовНУ = Выборка.ВариантРаспределенияРасходовНУ;
			КонецЕсли; 
			
			Если Выборка.ИзменениеПравилаНаСебестоимостьПродажРегл Тогда
				Объект.ПравилоРаспределенияНаСебестоимостьПродажРегл = Выборка.ПравилоРаспределенияНаСебестоимостьПродажРегл;
			КонецЕсли;
			 
			Если Выборка.ЗаполнениеПравилРаспределенияНУ И НЕ ЗначениеЗаполнено(Объект.ПравилоРаспределенияРасходовНУ) Тогда
				Объект.ПравилоРаспределенияРасходовНУ = Выборка.ПравилоРаспределенияРасходовРегл;
			КонецЕсли;
			
			Если Выборка.ОбработатьКосвенныеНормируемые Тогда
				Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
				Объект.КосвенныеЗатратыНУ = Истина;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент: %Ссылка% по причине: %Причина%';
									|en = 'Cannot process the item: %Ссылка%. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

// Регистрирует данные для обработчика обновления.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Ссылка КАК Ссылка
		|ИЗ
		|	(
		//	Пул данных 1
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка КАК Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		(НЕ СтатьиРасходов.УдалитьСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ИЛИ СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаРБП))
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|				ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 2
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		(НЕ СтатьиРасходов.УдалитьСпособРаспределенияПоНаправлениямДеятельности = ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
		|			ИЛИ СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат))
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|				ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 3
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		СтатьиРасходов.УдалитьПравилоРаспределенияРасходов.НазначениеПравила = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства)
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|				ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 4
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		НЕ СтатьиРасходов.ПравилоРаспределенияНаСебестоимость = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка)
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|				ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|					И СтатьиРасходов.ПравилоРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 5
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)
		|		ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 6
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		НЕ СтатьиРасходов.ПравилоРаспределенияНаСебестоимостьПродажУпр = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьПродаж.ПустаяСсылка)
		|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж)
		|		И СтатьиРасходов.ПравилоРаспределенияНаСебестоимостьПродажРегл = ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьПродаж.ПустаяСсылка)
		//++ НЕ УТ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		//	Пул данных 7
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|			ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка))
		|		И СтатьиРасходов.ПравилоРаспределенияРасходовРегл <> СтатьиРасходов.ПравилоРаспределенияРасходовНУ
		|		И СтатьиРасходов.ПравилоРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		//	Пул данных 8
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		СтатьиРасходов.Ссылка В (
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СторноПроизводственныхЗатрат),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПроизводственныеРасходыПрошлыхПериодов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров))
		|		И (	СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.Производственные)
		|			ИЛИ СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПустаяСсылка)
		|			ИЛИ СтатьиРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|		) 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		//	Пул данных 9
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|		СтатьиРасходов.ВариантРаспределенияРасходовНУ <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
		|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства)
		|		)
		|		И СтатьиРасходов.ВидРасходов В (
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПредставительскиеРасходы),
		|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.РасходыНаРекламуНормируемые)
		|		)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		//	Пул данных 10
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ГДЕ
		|	СтатьиРасходов.Ссылка В (
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
		|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС))
		|	И (СтатьиРасходов.ВариантРаспределенияРасходовУпр <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
		|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
		|	И СтатьиРасходов.ТипРасходов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.Производственные)
		|	И СтатьиРасходов.ТипРасходов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПустаяСсылка)
		|	И СтатьиРасходов.ХарактерПроизводственныхЗатрат <> ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		//	Пул данных 11
		|	ВЫБРАТЬ
		|		СтатьиРасходов.Ссылка
		|	ИЗ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		//++ Локализация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьПорядокОтраженияРасходов КАК СтарыеНастройкиСчетов
		|		ПО СтатьиРасходов.Ссылка = СтарыеНастройкиСчетов.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НовыеНастройкиСчетов
		|		ПО СтатьиРасходов.Ссылка = НовыеНастройкиСчетов.АналитикаУчета
		|			И НовыеНастройкиСчетов.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		//-- Локализация
		|	ГДЕ
		|	СтатьиРасходов.Предопределенный
		|	И (СтатьиРасходов.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка)
		|			ИЛИ СтатьиРасходов.ГруппаФинансовогоУчетаРегл = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка)
		|			ИЛИ СтатьиРасходов.ГруппаФинансовогоУчетаНУ = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка))
		|	И СтатьиРасходов.ТипРасходов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.Производственные)
		|	И СтатьиРасходов.ТипРасходов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ПустаяСсылка)
		|	И СтатьиРасходов.ХарактерПроизводственныхЗатрат <> ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.ПустаяСсылка)
		|	И СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
		|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять)
		//++ Локализация
		|	И СтарыеНастройкиСчетов.СтатьяРасходов ЕСТЬ NULL
		|		И НовыеНастройкиСчетов.АналитикаУчета ЕСТЬ NULL
		|		И СтатьиРасходов.УдалитьСчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		И СтатьиРасходов.УдалитьСчетСписанияОСНО = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		И СтатьиРасходов.УдалитьСчетСписанияЕНВД = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		//-- Локализация
		//-- НЕ УТ
		|) КАК ВложенныйЗапрос";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ЗарегистрироватьПредопределенныеЭлементыДляОбновления(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗарегистрироватьПредопределенныеЭлементыДляОбновления(Параметры, Метаданные.ПланыВидовХарактеристик.СтатьиРасходов);
	
КонецПроцедуры

Процедура ЗаполнитьЭлементыНачальнымиДанными(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьЭлементыНачальнымиДанными(Параметры, Метаданные.ПланыВидовХарактеристик.СтатьиРасходов, Ложь, "Наименование");
	
КонецПроцедуры

Процедура УказатьГФУПредопределеннойСтатьи(СтатьяРасходов)
	
	УказаннаяСтатья = Неопределено;
	
	Если Не СтатьяРасходов.ГруппаФинансовогоУчета.Пустая() Тогда
		УказаннаяСтатья = СтатьяРасходов.ГруппаФинансовогоУчета;
	КонецЕсли;
	
	Если Не СтатьяРасходов.ГруппаФинансовогоУчетаРегл.Пустая() Тогда
		УказаннаяСтатья = СтатьяРасходов.ГруппаФинансовогоУчетаРегл;
	КонецЕсли;
	
	//++ Локализация
	Если Не СтатьяРасходов.ГруппаФинансовогоУчетаНУ.Пустая() И УказаннаяСтатья = Неопределено Тогда
		УказаннаяСтатья = СтатьяРасходов.ГруппаФинансовогоУчетаНУ;
	КонецЕсли;
	//-- Локализация
	
	Если УказаннаяСтатья = Неопределено Тогда
		// Создадим ГФУ доходов/расходов:
		
		ШаблонНаименования = НСтр("ru = 'Настройки счетов для статьи расходов ""%1""';
									|en = 'Set up accounts for expense item ""%1""'");
		НаименованиеГФУ = СтрШаблон(ШаблонНаименования, СтатьяРасходов.Наименование);
		
		ГФУ = Справочники.ГруппыФинансовогоУчетаДоходовРасходов.СоздатьЭлемент();
		
		ГФУСсылка = Справочники.ГруппыФинансовогоУчетаДоходовРасходов.ПолучитьСсылку();
		ГФУ.УстановитьСсылкуНового(ГФУСсылка);
		
		ГФУ.Наименование = НаименованиеГФУ;
		ГФУ.Расходы = Истина;
		ГФУ.Доходы = Ложь;
		
		ШаблонОписания = НСтр("ru = 'Служебная группа настроек финансового учета доходов/расходов для счетов учета предопределенной статьи расходов ""%1""';
								|en = 'Internal income/expense accounting groups for ledger accounts of predefined expense item ""%1""'");
		ГФУ.Описание = СтрШаблон(ШаблонОписания, СтатьяРасходов.Наименование);
		
		ГФУ.ОбменДанными.Загрузка = Истина;
		ГФУ.Записать();
		
		//++ Локализация
		СтатьяРасходов.ГруппаФинансовогоУчета = ГФУСсылка;
		СтатьяРасходов.ГруппаФинансовогоУчетаРегл = ГФУСсылка;
		СтатьяРасходов.ГруппаФинансовогоУчетаНУ = ГФУСсылка;
		//-- Локализация
		
	Иначе
		// Заполним незаполненные ГФУ по уже указанной:
		
		Если СтатьяРасходов.ГруппаФинансовогоУчета.Пустая() Тогда
			СтатьяРасходов.ГруппаФинансовогоУчета = УказаннаяСтатья;
		КонецЕсли;
		
		Если СтатьяРасходов.ГруппаФинансовогоУчетаРегл.Пустая() Тогда
			СтатьяРасходов.ГруппаФинансовогоУчетаРегл = УказаннаяСтатья;
		КонецЕсли;
		
		//++ Локализация
		Если СтатьяРасходов.ГруппаФинансовогоУчетаНУ.Пустая() Тогда
			СтатьяРасходов.ГруппаФинансовогоУчетаНУ = УказаннаяСтатья;
		КонецЕсли;
		//-- Локализация
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область УХ_Встраивание
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаГруппы" Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаГруппы";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
