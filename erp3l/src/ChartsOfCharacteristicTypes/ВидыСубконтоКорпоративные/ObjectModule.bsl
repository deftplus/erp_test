
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если НЕ СтроковыеФункцииКлиентСерверУХ.ЭтоКорректноеИмяПеременной(СокрЛП(Код)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Ошибка записи элемента: код элемента задан некорректно. Код не может начинаться с цифры или содержать символы, отличные от букв, цифр либо знака подчеркивания'"),,,Код, Отказ);		
	КонецЕсли;	
	
	Если СокрЛП(Код) = "Проекты" ИЛИ СокрЛП(Код) = "Организации" ИЛИ  СокрЛП(Код) = "Сценарии" ИЛИ СокрЛП(Код) = "Периоды" ИЛИ СокрЛП(Код) = "Валюты" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Ошибка записи элемента: код элемента задан некорректно. Код должен отличаться от имени ключевых измерений (Сценарии, Проекты, Валюты, Организации,Периоды)'"),,,Код, Отказ);		
	КонецЕсли;	
	
	ТаблицаАналитики = ОбщегоНазначенияУХ.ПолучитьСправочникПоВидуСубконто(Ссылка).ПолноеИмя();
	
	Если ТаблицаАналитики = "Справочник.ПроизвольныйКлассификаторУХ" Тогда
		
		ТипОбъектаКонсолидации = "ВидСубконто";
		ИмяОбъектаМетаДанных = Ссылка;
		
	Иначе
		
		ДанныеОбъекта = ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(ТаблицаАналитики,".");
		ТипОбъектаКонсолидации	= ДанныеОбъекта[0];
		ИмяОбъектаМетаДанных 	= ДанныеОбъекта[1];
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаОбработки.Ссылка
	|ИЗ
	|	Справочник.ПравилаОбработки КАК ПравилаОбработки
	|ГДЕ
	|	ПравилаОбработки.ТипБД В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СоответствиеВнешнимИБ.Владелец
	|			ИЗ
	|				Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|			ГДЕ
	|				СоответствиеВнешнимИБ.ТипОбъектаКонсолидации = &ТипОбъектаКонсолидации
	|				И СоответствиеВнешнимИБ.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных)";
	
	Запрос.УстановитьПараметр("ТипОбъектаКонсолидации",	ТипОбъектаКонсолидации);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных",	ИмяОбъектаМетаданных);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		УправлениеОтчетамиУХ.ОчиститьЗаписиРегистраПараметрическихНастроек(Результат.Ссылка);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		ТипЗначения_ = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(Ссылка, "ТипЗначения");
		Если НЕ ТипЗначения = ТипЗначения_ И ЗначениеЗаполнено(ТипЗначения_) Тогда
			ДополнительныеСвойства.Вставить("ТипЗначения", ТипЗначения_);
		КонецЕсли;
	КонецЕсли;
	
	ПроизвольныйКласификаторУХ=(ТипЗначения.Типы()[0]=Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ"));
	
	Если ПустаяСтрока(Код) Тогда
		Код = ОбщегоНазначенияУХ.ПолучитьВозможныйКодПВХ(ОбщегоНазначенияУХ.СформироватьКодНаОснованииНаименования(Наименование,10), Метаданные().ДлинаКода, "ВидыСубконтоКорпоративные");
	КонецЕсли;
	
	Код  = СтроковыеФункцииКлиентСерверУХ.ДополнитьСтроку(Код,10,"0","Справа");
	
	ЭтотОбъект.ПредставлениеТипа = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПолучитьОписаниеТиповСтрокой(ЭтотОбъект.ТипЗначения);
	
КонецПроцедуры

