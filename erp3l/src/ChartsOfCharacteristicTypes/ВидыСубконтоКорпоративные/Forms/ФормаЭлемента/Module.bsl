
// Обновляет содержимое табличного поля "Реквизиты".
//
&НаСервере
Процедура ОбновитьТабличноеПолеРеквизиты()
	
	Вн_ТабличноеПолеРеквизиты = РеквизитФормыВЗначение("ТабличноеПолеРеквизиты");
	
	Вн_ТабличноеПолеРеквизиты.Очистить();
	
	ТаблицаРеквизитов=ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПолучитьТаблицуРеквизитовСинхронизации(Объект.ТипЗначения,Истина);
	
	Для Каждого Строка ИЗ ТаблицаРеквизитов Цикл
		
		Если СтрНайти(Строка.Имя,"НСИ_")>0 Тогда
			
			Продолжить;
			
		Иначе
			
			НоваяСтрока=Вн_ТабличноеПолеРеквизиты.Добавить();
			НоваяСтрока.ИмяРеквизита=Строка.Имя;
			НоваяСтрока.ПредставлениеРеквизита=Строка.Синоним;
			
		КонецЕсли;
		
	КонецЦикла;
				
	КоличествоПомеченных = 0;
	Для Каждого РеквизитСинхронизации Из Объект.РеквизитыДляСинхронизации Цикл
		РезультатПоиска = Вн_ТабличноеПолеРеквизиты.Найти(РеквизитСинхронизации.ИмяРеквизита, "ИмяРеквизита");
		Если РезультатПоиска <> Неопределено Тогда
			РезультатПоиска.Макет = Истина;
			РезультатПоиска.Ключ = РеквизитСинхронизации.Ключ;
			Вн_ТабличноеПолеРеквизиты.Сдвинуть(РезультатПоиска, КоличествоПомеченных - Вн_ТабличноеПолеРеквизиты.Индекс(РезультатПоиска));
			
			КоличествоПомеченных = КоличествоПомеченных + 1;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Вн_ТабличноеПолеРеквизиты, "ТабличноеПолеРеквизиты");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаФлажки.Видимость=Объект.ТипЗначения.Типы()[0]=Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ");
		
КонецПроцедуры // УстановитьВидимость()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьТабличноеПолеРеквизиты();
	
	Если Не Параметры.Ключ.Пустая() Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ЗначенияАналитикПоУмолчанию.ЗначениеПоУмолчанию
		|ИЗ
		|	РегистрСведений.ЗначенияАналитикПоУмолчанию КАК ЗначенияАналитикПоУмолчанию
		|ГДЕ
		|	ЗначенияАналитикПоУмолчанию.ВидАналитики = &ВидАналитики";
		
		Запрос.УстановитьПараметр("ВидАналитики",Объект.Ссылка);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			ЗначениеПоУмолчанию=Результат.ЗначениеПоУмолчанию;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРеквизитыДляСинхронизации(ТекущийОбъект);
	
	ТекущийОбъект.РеквизитыДляСинхронизации.Очистить();
	Для Каждого РеквизитСинхронизации Из ТабличноеПолеРеквизиты Цикл
		Если РеквизитСинхронизации.Макет Тогда
			НовСтр = ТекущийОбъект.РеквизитыДляСинхронизации.Добавить();
			НовСтр.ИмяРеквизита = РеквизитСинхронизации.ИмяРеквизита;
			НовСтр.Ключ = РеквизитСинхронизации.Ключ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеТипаЗначения()
	
	ЗагрузитьРеквизитыДляСинхронизации(Объект);
	ОбновитьТабличноеПолеРеквизиты();
	
	УстановитьВидимость();
	
	ЗначениеПоУмолчанию = Объект.ТипЗначения.ПривестиЗначение(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	ОбработатьИзменениеТипаЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗагрузитьРеквизитыДляСинхронизации(ТекущийОбъект);
	
КонецПроцедуры

Процедура ТабличноеПолеРеквизитыПриИзмененииФлажка(ИмяКолонки)
	
	ТекущиеДанные = ТабличноеПолеРеквизиты.НайтиПоИдентификатору(Элементы.ТабличноеПолеРеквизиты.ТекущаяСтрока);
	
	Если ИмяКолонки = "Макет" и Не ТекущиеДанные.Макет Тогда
		ТекущиеДанные.Ключ = Ложь;
	ИначеЕсли ИмяКолонки = "Ключ" и ТекущиеДанные.Ключ Тогда
		ТекущиеДанные.Макет = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовМакетПриИзменении(Элемент)
	ТабличноеПолеРеквизитыПриИзмененииФлажка("Макет");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовКлючПриИзменении(Элемент)
	ТабличноеПолеРеквизитыПриИзмененииФлажка("Ключ");
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОграничениеТипа = Объект.ТипЗначения;
	
	Если  ОграничениеТипа.Типы().Количество()=1 Тогда
		
		Если ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ")) Тогда
			
			ТекФорма = ПолучитьФорму("Справочник.ПроизвольныйКлассификаторУХ.Форма.ФормаВыбораУправляемая", Новый Структура("Отбор", Новый Структура("Владелец", Объект.Ссылка)), Элемент);
			ТекФорма.Открыть();
			СтандартнаяОбработка = Ложь;
			
		Иначе
			
			Элемент.ОграничениеТипа 	= ОграничениеТипа;
			
			Значение 					= ЗначениеПоУмолчанию;
			ЗначениеПоУмолчанию 		= Элемент.ОграничениеТипа.ПривестиЗначение(Значение);
			
		КонецЕсли;
		
		Элемент.ВыбиратьТип = Ложь;
		
	Иначе
		
		Элемент.ОграничениеТипа 	= ОграничениеТипа;
		Значение 					= ЗначениеПоУмолчанию;
		ЗначениеПоУмолчанию 		= Элемент.ОграничениеТипа.ПривестиЗначение(Значение);

		Элемент.ВыбиратьТип = Истина;
		
	КонецЕсли;
	
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НаборЗаписей=РегистрыСведений.ЗначенияАналитикПоУмолчанию.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидАналитики.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Если ЗначениеЗаполнено(ЗначениеПоУмолчанию) Тогда
		
		НоваяСтрока=НаборЗаписей.Добавить();
		НоваяСтрока.ВидАналитики=Объект.Ссылка;
		НоваяСтрока.ЗначениеПоУмолчанию=ЗначениеПоУмолчанию;
		
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
		
КонецПроцедуры
