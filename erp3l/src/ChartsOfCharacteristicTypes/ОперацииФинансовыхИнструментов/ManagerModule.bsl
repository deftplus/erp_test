#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Функция - Получить параметры ФИ
//
// Параметры:
//  ИмяПредопределеннойГруппы	 - <Строка>	- Имя финансового инструмента (имя предопределенного элемента)
// 
// Возвращаемое значение:
//   - Структура: Ключ - имя колонки предопределенного дочернего элемента, Значение - ссылка на предопределенный элемент 
//
Функция ПолучитьПараметрыФИ(ИмяПредопределеннойГруппы) Экспорт

	Результат = Новый Структура;
	
	Выборка = Выбрать(ПланыВидовХарактеристик.ОперацииФинансовыхИнструментов[ИмяПредопределеннойГруппы]);
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ИмяПредопределенныхДанных) Тогда
			Результат.Вставить(СтрЗаменить(Выборка.ИмяПредопределенныхДанных, ИмяПредопределеннойГруппы + "_", ""), Выборка.Ссылка);		
		КонецЕсли;		
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

Функция ПолучитьПараметрыПоВидуФИ(ВидФИ, Выданный = Истина) Экспорт
	Возврат ПолучитьПараметрыФИ(ПолучитьИмяФИ(ВидФИ, Выданный));
КонецФункции

Функция ПолучитьИмяФИ(ВидФИ, Выданный = Истина) Экспорт

	Если ВидФИ = ПредопределенноеЗначение("Перечисление.ВидыФинансовыхИнструментов.Вексель") Тогда
		Возврат ?(Выданный, "ВексельВыданный", "ВексельПолученный");
	ИначеЕсли ВидФИ = ПредопределенноеЗначение("Перечисление.ВидыФинансовыхИнструментов.Облигация") Тогда
		Возврат ?(Выданный, "ОблигацияВыпущенная", "ОблигацияКупленная");
	Иначе 
		Возврат ОбщегоНазначения.ИмяЗначенияПеречисления(ВидФИ);
	КонецЕсли;
	
КонецФункции

#Область ОбновлениеПредопределенных

Процедура ОбновитьПредопределенные(Параметры = Неопределено) Экспорт

	Если Параметры <> Неопределено Тогда
		Если НЕ Параметры.МонопольныйРежим Тогда
			Параметры.МонопольныйРежим = Истина;
			Возврат; // Требуется изменение
		КонецЕсли;
	КонецЕсли;	
	
	ТабДок = ПолучитьМакет("ЗаполнениеПредопределенных");
	
	Для НомерСтроки = 2 По ТабДок.ВысотаТаблицы Цикл
		
		ИмяПредопр = СокрЛП(ТабДок.Область(НомерСтроки, 1).Текст);
		ИмяЭлСтруктуры = СокрЛП(ТабДок.Область(НомерСтроки, 2).Текст);
		ВидФИ = СокрЛП(ТабДок.Область(НомерСтроки, 3).Текст);
		КолонкаСекции = СокрЛП(ТабДок.Область(НомерСтроки, 4).Текст);
		ВидБюджета = СокрЛП(ТабДок.Область(НомерСтроки, 5).Текст);
		НаправлениеДвижения = СокрЛП(ТабДок.Область(НомерСтроки, 6).Текст);
		НаправлениеВзаиморасчетов = СокрЛП(ТабДок.Область(НомерСтроки, 7).Текст);
		ВидОперацииУХ = СокрЛП(ТабДок.Область(НомерСтроки, 8).Текст);
		
		Если Не ЗначениеЗаполнено(ИмяЭлСтруктуры) И Не ЗначениеЗаполнено(ВидФИ)
			И НЕ ЗначениеЗаполнено(КолонкаСекции)Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ОбъектПФ = ПланыВидовХарактеристик.ОперацииФинансовыхИнструментов[ИмяПредопр].ПолучитьОбъект();
		Если ЗначениеЗаполнено(ИмяЭлСтруктуры) Тогда
			ОбъектПФ.ЭлементСтруктурыЗадолженности = Перечисления.ЭлементыСтруктурыЗадолженности[ИмяЭлСтруктуры];
		КонецЕсли;

		Если ЗначениеЗаполнено(ВидФИ) Тогда
			ОбъектПФ.ВидФинансовогоИнструмента = Перечисления.ВидыФинансовыхИнструментов[ВидФИ];
		КонецЕсли;

		Если ЗначениеЗаполнено(КолонкаСекции) Тогда
			ОбъектПФ.КолонкаСекции = Перечисления.ВидыДвиженийПриходРасход[КолонкаСекции];
		КонецЕсли;

		Если ЗначениеЗаполнено(ВидБюджета) Тогда
			ОбъектПФ.ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета[ВидБюджета];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаправлениеДвижения) Тогда
			ОбъектПФ.НаправлениеДвижения = Перечисления.ВидыДвиженийПриходРасход[НаправлениеДвижения];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаправлениеВзаиморасчетов) Тогда
			ОбъектПФ.НаправлениеВзаиморасчетов = Перечисления.ВидыДвиженийПриходРасход[НаправлениеВзаиморасчетов];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидОперацииУХ) Тогда
			ОбъектПФ.ВидОперацииУХ = Справочники.ВидыОперацийУХ[ВидОперацииУХ];
		КонецЕсли;

		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектПФ);
	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли

