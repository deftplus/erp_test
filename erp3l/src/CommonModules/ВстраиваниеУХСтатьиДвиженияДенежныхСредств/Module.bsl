#Область ПрограммныйИнтерфейс

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Элементы = Форма.Элементы;
	
	ИнициализироватьРеквизитыИЭлементыФормы(Форма);
	
	ЗаполнитьСписокВыбораОчередностиПлатежа(Форма);
	ВстраиваниеУХСтатьиДвиженияДенежныхСредствКлиентСервер.ОбновитьПодсказкуОчередностьПлатежа(Форма);
	
	#Область УниверсальныеПроцессыСогласование
	ДействияСогласованиеУХСервер.НарисоватьПанельСогласованияИОпределитьСостояниеОбъекта(Форма);
	#КонецОбласти
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
КонецПроцедуры

Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	// ОПК
	АналитикиСтатейБюджетовУХ.ЗаполнитьВидыАналитикиИзТаблицы(Форма, ТекущийОбъект, Отказ);
	// Конец ОПК
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьРеквизитыИЭлементыФормы(Форма) 
	
	СоздатьРеквизитыФормы(Форма);
	СоздатьЭлементыФормы(Форма);
	
	// ОПК
	АналитикиСтатейБюджетовУХ.ПодготовитьТаблицуВидовАналитик(Форма, Форма.Элементы.ГруппаУХ, Форма.Элементы.Приоритет);
	// Конец ОПК
	
	Форма.Элементы.ДекорацияВидыАналитик.Ширина = 18;
	
	Форма[ФормыУХ.ИмяРеквизитаИнициализацияВыполнена()] = Истина;
	
КонецПроцедуры

Процедура СоздатьРеквизитыФормы(Форма)
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	РасшифровкаОчередностиПлатежа = Новый РеквизитФормы(
		"РасшифровкаОчередностиПлатежа", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	
	ДобавляемыеРеквизиты.Добавить(РасшифровкаОчередностиПлатежа);
	
	ДобавляемыеРеквизиты.Добавить(ФормыУХ.НовыйРеквизитИнициализацияВыполнена());
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

Процедура СоздатьЭлементыФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	// невидимая группа реквизитов УХ.

	ГруппаУХ = ФормыУХ.СоздатьГруппуФормы(
		Элементы,
		"ГруппаУХ",
		НСтр("ru = 'Реквизиты УХ'"),
		ВидГруппыФормы.ОбычнаяГруппа,
		Форма,
		Элементы.ГруппаДополнительныеРеквизиты,
		ФормыУХ.ПараметрыНевидимойГруппы()
		);
		
	// Поле ПриходРасход
	ПолеПриходРасход = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"ПриходРасход",
		НСтр("ru = 'Приход/Расход'"),
		"Объект.ПриходРасход",
		ВидПоляФормы.ПолеПереключателя,
		ГруппаУХ);
	Список = ПолеПриходРасход.СписокВыбора;
	Список.Добавить(Перечисления.ВидыДвиженийПриходРасход.ПустаяСсылка(), НСтр("ru = 'Приход или расход'"));
	Список.Добавить(Перечисления.ВидыДвиженийПриходРасход.Приход, НСтр("ru = 'Только приход'"));
	Список.Добавить(Перечисления.ВидыДвиженийПриходРасход.Расход, НСтр("ru = 'Только расход'"));
	
	// Группа раскрытия
	ГруппаРаскрытия = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"ГруппаРаскрытия",
		НСтр("ru = 'Группа раскрытия'"),
		"Объект.ГруппаРаскрытия",
		ВидПоляФормы.ПолеВвода,
		ГруппаУХ,
		,
		,
		Новый Структура("ПриИзменении", "Подключаемый_ГруппаРаскрытияПриИзмененииУХ"));
	// Приоритет
	Приоритет = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"Приоритет",
		НСтр("ru = 'Приоритет'"),
		"Объект.Приоритет",
		ВидПоляФормы.ПолеВвода,
		ГруппаУХ);
		
	// Группа "Очередность платежа"
	ПараметрыГруппы = ФормыУХ.ПараметрыНевидимойГруппы();
	ПараметрыГруппы.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ГруппаОчередность = ФормыУХ.СоздатьГруппуФормы(
		Элементы,
		"ГруппаОчередностьПлатежа",
		НСтр("ru = 'Очередность платежа'"),
		ВидГруппыФормы.ОбычнаяГруппа,
		ГруппаУХ,
		,
		ПараметрыГруппы);
		
	// Поле "Очередность платежа"
	Обработчики = Новый Структура("ПриИзменении", "Подключаемый_ОчередностьПлатежаПриИзмененииУХ");
	ПараметрыПоля = Новый Структура;
	ПараметрыПоля.Вставить("КнопкаВыпадающегоСписка", Истина);
	Очередность = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"ОчередностьПлатежа",
		НСтр("ru = 'Очередность платежа'"),
		"Объект.ОчередностьПлатежа",
		ВидПоляФормы.ПолеВвода,
		ГруппаОчередность,
		,
		ПараметрыПоля,
		Обработчики);
		
	// Поле "Расшифровка очередности платежа"
	ПараметрыПоля = Новый Структура;
	ПараметрыПоля.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	ПараметрыПоля.Вставить("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	РасшифровкаОчередностиПлатежа = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"РасшифровкаОчередностиПлатежа",
		НСтр("ru = 'Расшифровка очередности платежа'"),
		"РасшифровкаОчередностиПлатежа",
		ВидПоляФормы.ПолеНадписи,
		ГруппаОчередность,
		,
		ПараметрыПоля);
		
	// Поле "Функциональное направление"
	ПараметрыПоля = Новый Структура;
	ПараметрыПоля.Вставить("ПодсказкаВвода", "<" + НСтр("ru = 'Все направления'") + ">");
	ФункциональноеНаправление = ФормыУХ.СоздатьПолеФормы(
		Элементы,
		"ФункциональноеНаправление",
		НСтр("ru = 'Функциональное направление'"),
		"Объект.ФункциональноеНаправление",
		ВидПоляФормы.ПолеВвода,
		ГруппаУХ,
		,
		ПараметрыПоля);
	
	// Группа "Лимиты аналитик"
	ПараметрыГруппы = ФормыУХ.ПараметрыНевидимойГруппы();
	ПараметрыГруппы.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
	ГруппаЛимитыАналитик = ФормыУХ.СоздатьГруппуФормы(
		Элементы,
		"ГруппаЛимитыАналитик",
		НСтр("ru = 'Лимиты аналитик'"),
		ВидГруппыФормы.ОбычнаяГруппа,
		ГруппаУХ,
		,
		ПараметрыГруппы);
		
	// Декорация-отступ
	ПараметрыПоля = Новый Структура;
	ПараметрыПоля.Вставить("Ширина", 1);
	ПараметрыПоля.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Лево);
	ПараметрыПоля.Вставить("РастягиватьПоГоризонтали", Ложь);
	ФормыУХ.СоздатьДекорациюФормы(
		Элементы,
		"ДекорацияОтступУХ",
		" ",
		ВидДекорацииФормы.Надпись,
		ГруппаЛимитыАналитик,
		,
		ПараметрыПоля);
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораОчередностиПлатежа(Форма)
	
	Элементы = Форма.Элементы;
	
	// Заполним список выбор
	СписокОчередностьПлатежа = ДенежныеСредстваВстраиваниеУХКлиентСервер.ПолучитьСписокОчередностьПлатежа(ТекущаяДатаСеанса());
	СписокВыбора = Элементы.ОчередностьПлатежа.СписокВыбора;
	СписокВыбора.Очистить();
	Для каждого ЭлементДанных Из СписокОчередностьПлатежа Цикл
		СписокВыбора.Добавить(ЭлементДанных.Значение, ЭлементДанных.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
