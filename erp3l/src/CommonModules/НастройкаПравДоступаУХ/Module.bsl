
Процедура УстановитьПараметрыСеанса() Экспорт
	
КонецПроцедуры

Процедура НастройкиПередЗаписью(Объект, Отказ) Экспорт
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ = "ОбщийМодуль.НастройкаПравДоступаУХ.НастройкаПравДоступаПередЗаписью";
	
	Для Каждого Запись Из Объект Цикл
		Если НЕ ЗначениеЗаполнено(Запись.ВидДоступа) Тогда
			ПротоколируемыеСобытияУХ.ДобавитьЗаписьОшибка(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, "В наборе записей присутствуют записи с незаполненным видом доступа.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура НастройкиПриЗаписи(Объект, Раздел) Экспорт
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстОтбора = "ИСТИНА";
	НастройкиРазвернутые = РегистрыСведений["НастройкиПравДоступаПользователей" + Раздел + "Развернутые"].СоздатьНаборЗаписей();
			
	Если Раздел = "ВидыОтчетов" Тогда
		
		Для Каждого Элемент Из Объект.Отбор Цикл
			Если Элемент.Использование И (НЕ Элемент.Имя="УдалитьПользователь") Тогда
				Запрос.УстановитьПараметр(Элемент.Имя, Элемент.Значение);
				ТекстОтбора = ТекстОтбора + " И Т." + Элемент.Имя + " = &" + Элемент.Имя;
				НастройкиРазвернутые.Отбор[Элемент.Имя + "Источник"].Установить(Элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ТекстОтбора = ТекстОтбора + " И (НЕ Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ДоступЗакрыт))";
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Т.Организация КАК ОрганизацияИсточник,
		|	Т.ВидОтчета КАК ВидОтчетаИсточник,
		|	Т.Пользователь КАК ПользовательИсточник,
		|	ВЫБОР
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗапись)
		|			ТОГДА ИСТИНА
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗаписьУтверждение)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Запись,
		|	ВЫБОР
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗаписьУтверждение)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Утверждение,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Организация) = ТИП(Справочник.ГруппыДоступаОрганизацииВидыОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОрганизацияГруппа,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.ВидОтчета) = ТИП(Справочник.ГруппыДоступаКВидамОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Пользователь) = ТИП(Справочник.ГруппыДоступаПользователиВидыОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПользовательГруппа
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК Т
		|ГДЕ
		|	&_Отбор_
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОрганизацияГруппа,
		|	ОрганизацияИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	Т.ПользовательГруппа КАК ПользовательГруппа,
		|	Т.ВидОтчетаГруппа КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА Т.ОрганизацияГруппа
		|			ТОГДА ГруппыДоступаКОрганизациямОрганизации.Организация
		|		ИНАЧЕ Т.ОрганизацияИсточник
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ Т1
		|ИЗ
		|	Т КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаОрганизацииВидыОтчетов.Организации КАК ГруппыДоступаКОрганизациямОрганизации
		|		ПО Т.ОрганизацияИсточник = ГруппыДоступаКОрганизациямОрганизации.Ссылка
		|			И (Т.ОрганизацияГруппа)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПользовательГруппа,
		|	ПользовательИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.Организация КАК Организация,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	Т.ВидОтчетаГруппа КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА Т.ПользовательГруппа
		|			ТОГДА ГруппыПользователейПользователиГруппы.Пользователь
		|		ИНАЧЕ Т.ПользовательИсточник
		|	КОНЕЦ КАК Пользователь
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	Т1 КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаПользователиВидыОтчетов.Пользователи КАК ГруппыПользователейПользователиГруппы
		|		ПО Т.ПользовательИсточник = ГруппыПользователейПользователиГруппы.Ссылка
		|			И (Т.ПользовательГруппа)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидОтчетаГруппа,
		|	ВидОтчетаИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.Организация КАК Организация,
		|	Т.Пользователь КАК Пользователь,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	ВЫБОР
		|		КОГДА Т.ВидОтчетаГруппа
		|			ТОГДА ГруппыДоступаКВидамОтчетовВидыОтчетов.ВидОтчета
		|		ИНАЧЕ Т.ВидОтчетаИсточник
		|	КОНЕЦ КАК ВидОтчета
		|ИЗ
		|	Т2 КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаКВидамОтчетов.ВидыОтчетов КАК ГруппыДоступаКВидамОтчетовВидыОтчетов
		|		ПО Т.ВидОтчетаИсточник = ГруппыДоступаКВидамОтчетовВидыОтчетов.Ссылка
		|			И (Т.ВидОтчетаГруппа)";
		
	ИначеЕсли  Раздел = "БланкиДанные" Тогда
		
		ИмяРегистра="НастройкиПравДоступаПользователейБланкиДанные";
		
		Для Каждого Элемент Из Объект.Отбор Цикл
			
			Если Элемент.Использование И (НЕ Элемент.Имя="УдалитьПользователь") Тогда
				Запрос.УстановитьПараметр(Элемент.Имя, Элемент.Значение);
				ТекстОтбора = ТекстОтбора + " И Т." + Элемент.Имя + " = &" + Элемент.Имя;
				
				Если НЕ Элемент.Имя="БланкОтчета" Тогда
					
					НастройкиРазвернутые.Отбор[Элемент.Имя + "Источник"].Установить(Элемент.Значение);
					
				Иначе
					
					НастройкиРазвернутые.Отбор[Элемент.Имя].Установить(Элемент.Значение);
					
				КонецЕсли	
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТекстОтбора = ТекстОтбора + " И (НЕ Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ДоступЗакрыт))";
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Т.Организация КАК ОрганизацияИсточник,
		|	Т.ВидОтчета КАК ВидОтчетаИсточник,
		|	Т.Пользователь КАК ПользовательИсточник,
		|	Т.БланкОтчета КАК БланкОтчета,
		|	ВЫБОР
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗапись)
		|			ТОГДА ИСТИНА
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗаписьУтверждение)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Запись,
		|	ВЫБОР
		|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ЧтениеЗаписьУтверждение)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Утверждение,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Организация) = ТИП(Справочник.ГруппыДоступаОрганизацииВидыОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОрганизацияГруппа,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.ВидОтчета) = ТИП(Справочник.ГруппыДоступаКВидамОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Пользователь) = ТИП(Справочник.ГруппыДоступаПользователиВидыОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПользовательГруппа
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	РегистрСведений."+ИмяРегистра+" КАК Т
		|ГДЕ
		|	&_Отбор_
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОрганизацияГруппа,
		|	ОрганизацияИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.БланкОтчета КАК БланкОтчета,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	Т.ПользовательГруппа КАК ПользовательГруппа,
		|	Т.ВидОтчетаГруппа КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА Т.ОрганизацияГруппа
		|			ТОГДА ГруппыДоступаКОрганизациямОрганизации.Организация
		|		ИНАЧЕ Т.ОрганизацияИсточник
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ Т1
		|ИЗ
		|	Т КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаОрганизацииВидыОтчетов.Организации КАК ГруппыДоступаКОрганизациямОрганизации
		|		ПО Т.ОрганизацияИсточник = ГруппыДоступаКОрганизациямОрганизации.Ссылка
		|			И (Т.ОрганизацияГруппа)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПользовательГруппа,
		|	ПользовательИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.Организация КАК Организация,
		|	Т.БланкОтчета КАК БланкОтчета,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	Т.ВидОтчетаГруппа КАК ВидОтчетаГруппа,
		|	ВЫБОР
		|		КОГДА Т.ПользовательГруппа
		|			ТОГДА ГруппыПользователейПользователиГруппы.Пользователь
		|		ИНАЧЕ Т.ПользовательИсточник
		|	КОНЕЦ КАК Пользователь
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	Т1 КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаПользователиВидыОтчетов.Пользователи КАК ГруппыПользователейПользователиГруппы
		|		ПО Т.ПользовательИсточник = ГруппыПользователейПользователиГруппы.Ссылка
		|			И (Т.ПользовательГруппа)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидОтчетаГруппа,
		|	ВидОтчетаИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ОрганизацияИсточник КАК ОрганизацияИсточник,
		|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
		|	Т.ПользовательИсточник КАК ПользовательИсточник,
		|	Т.Организация КАК Организация,
		|	Т.Пользователь КАК Пользователь,
		|	Т.БланкОтчета КАК БланкОтчета,
		|	Т.Запись КАК Запись,
		|	Т.Утверждение КАК Утверждение,
		|	ВЫБОР
		|		КОГДА Т.ВидОтчетаГруппа
		|			ТОГДА ГруппыДоступаКВидамОтчетовВидыОтчетов.ВидОтчета
		|		ИНАЧЕ Т.ВидОтчетаИсточник
		|	КОНЕЦ КАК ВидОтчета
		|ИЗ
		|	Т2 КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаКВидамОтчетов.ВидыОтчетов КАК ГруппыДоступаКВидамОтчетовВидыОтчетов
		|		ПО Т.ВидОтчетаИсточник = ГруппыДоступаКВидамОтчетовВидыОтчетов.Ссылка
		|			И (Т.ВидОтчетаГруппа)";
		
	ИначеЕсли  Раздел = "Бланки" Тогда	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|
		|	Т.Бланк КАК БланкИсточник,
		|	Т.Пользователь КАК ПользовательИсточник,
		|	Т.Чтение КАК Чтение,
		|	Т.Запись КАК Запись,
		|	Т.ИзменениеСтатусов КАК ИзменениеСтатусов,
		|	Т.ИзменениеСтруктуры КАК ИзменениеСтруктуры,
		
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Бланк) = ТИП(Справочник.ГруппыДоступаКБланкамОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК БланкГруппа,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Т.Пользователь) = ТИП(Справочник.ГруппыДоступаПользователиВидыОтчетов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПользовательГруппа
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	РегистрСведений.НастройкиПравДоступаПользователейБланки КАК Т
		|ГДЕ
		|	&_Отбор_
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.БланкИсточник,
		|	Т.ПользовательИсточник,
		|	Т.Чтение,
		|	Т.Запись,
		|	Т.ИзменениеСтатусов,
		|	Т.ИзменениеСтруктуры,
		|	Т.БланкГруппа КАК БланкГруппа,
		|	ВЫБОР
		|		КОГДА Т.ПользовательГруппа
		|			ТОГДА ГруппыПользователейПользователиГруппы.Пользователь
		|		ИНАЧЕ Т.ПользовательИсточник
		|	КОНЕЦ КАК Пользователь
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	Т КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаПользователиВидыОтчетов.Пользователи КАК ГруппыПользователейПользователиГруппы
		|		ПО Т.ПользовательИсточник = ГруппыПользователейПользователиГруппы.Ссылка
		|			И (Т.ПользовательГруппа)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	БланкГруппа,
		|	БланкИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.БланкИсточник,
		|	Т.ПользовательИсточник,
		|	Т.Пользователь,
		|	Т.Чтение,
		|	Т.Запись,
		|	Т.ИзменениеСтатусов,
		|	Т.ИзменениеСтруктуры,
		|	ВЫБОР
		|		КОГДА Т.БланкГруппа
		|			ТОГДА ГруппыДоступаКБланкам.Бланк
		|		ИНАЧЕ Т.БланкИсточник
		|	КОНЕЦ КАК Бланк
		|ИЗ
		|	Т2 КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаКБланкамОтчетов.Состав КАК ГруппыДоступаКБланкам
		|		ПО Т.БланкИсточник = ГруппыДоступаКБланкам.Ссылка
		|			И (Т.БланкГруппа)";
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&_Отбор_", ТекстОтбора);
	
	НастройкиРазвернутые.Загрузить(Запрос.Выполнить().Выгрузить());
	НастройкиРазвернутые.Записать();
	
	Если Раздел="ВидыОтчетов" Тогда
		
		ОбновитьПраваДоступаБланки(Объект);
		
	КонецЕсли
		
	
КонецПроцедуры

Процедура ОбновитьПраваДоступаБланки(Объект)
	
	ИмяРегистра="НастройкиПравДоступаПользователейБланкиДанные";
	
	РегистрБланки=РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	
	Запрос = Новый Запрос;
	ТекстОтбора = "ИСТИНА";
	
	Для Каждого Элемент Из Объект.Отбор Цикл
		Если Элемент.Использование И (НЕ Элемент.Имя="УдалитьПользователь") Тогда
			
			Запрос.УстановитьПараметр(Элемент.Имя, Элемент.Значение);
			ТекстОтбора = ТекстОтбора + " И Т." + Элемент.Имя + " = &" + Элемент.Имя;
			
			РегистрБланки.Отбор[Элемент.Имя].Установить(Элемент.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.ВидОтчета КАК ВидОтчета,
	|	Т.БланкОтчета КАК БланкОтчета,
	|	Т.Пользователь КАК Пользователь,
	|	Т.ВидДоступа КАК ВидДоступа,
	|	ВЫБОР
	|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ДоступЗакрыт)
	|			ТОГДА 0
	|		КОГДА Т.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.Чтение)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК УровеньДоступа
	|ПОМЕСТИТЬ ТекущиеНастройки
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейБланкиДанные КАК Т
	|ГДЕ
	|	&_Отбор_
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.ВидОтчета КАК ВидОтчетаИсточник,
	|	Т.Пользователь КАК Пользователь,
	|	Т.ВидДоступа КАК ВидДоступа,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Т.ВидОтчета) = ТИП(Справочник.ГруппыДоступаКВидамОтчетов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВидОтчетаГруппа
	|ПОМЕСТИТЬ Т
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК Т
	|ГДЕ
	|	&_Отбор_
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидОтчетаГруппа,
	|	ВидОтчетаИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.ВидОтчетаИсточник КАК ВидОтчетаИсточник,
	|	Т.Пользователь КАК Пользователь,
	|	Т.ВидДоступа КАК ВидДоступа,
	|	ВЫБОР
	|		КОГДА Т.ВидОтчетаГруппа
	|			ТОГДА ГруппыДоступаКВидамОтчетовВидыОтчетов.ВидОтчета
	|		ИНАЧЕ Т.ВидОтчетаИсточник
	|	КОНЕЦ КАК ВидОтчета
	|ПОМЕСТИТЬ Т1
	|ИЗ
	|	Т КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаКВидамОтчетов.ВидыОтчетов КАК ГруппыДоступаКВидамОтчетовВидыОтчетов
	|		ПО Т.ВидОтчетаИсточник = ГруппыДоступаКВидамОтчетовВидыОтчетов.Ссылка
	|			И (Т.ВидОтчетаГруппа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т1.Организация КАК Организация,
	|	Т1.ВидОтчетаИсточник КАК ВидОтчета,
	|	Т1.Пользователь КАК Пользователь,
	|	Т1.ВидДоступа КАК ВидДоступа,
	|	БланкиОтчетов.Ссылка КАК БланкОтчета,
	|	ВЫБОР
	|		КОГДА Т1.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.ДоступЗакрыт)
	|			ТОГДА 0
	|		КОГДА Т1.ВидДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыДоступа.Чтение)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК УровеньДоступа
	|ПОМЕСТИТЬ НовыеНастройки
	|ИЗ
	|	Т1 КАК Т1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БланкиОтчетов КАК БланкиОтчетов
	|		ПО Т1.ВидОтчета = БланкиОтчетов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеНастройки.Организация КАК Организация,
	|	НовыеНастройки.ВидОтчета КАК ВидОтчета,
	|	НовыеНастройки.Пользователь КАК Пользователь,
	|	НовыеНастройки.БланкОтчета КАК БланкОтчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТекущиеНастройки.УровеньДоступа, 10) < НовыеНастройки.УровеньДоступа
	|			ТОГДА ТекущиеНастройки.ВидДоступа
	|		ИНАЧЕ НовыеНастройки.ВидДоступа
	|	КОНЕЦ КАК ВидДоступа
	|ИЗ
	|	НовыеНастройки КАК НовыеНастройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеНастройки КАК ТекущиеНастройки
	|		ПО НовыеНастройки.Организация = ТекущиеНастройки.Организация
	|			И НовыеНастройки.ВидОтчета = ТекущиеНастройки.ВидОтчета
	|			И НовыеНастройки.Пользователь = ТекущиеНастройки.Пользователь
	|			И НовыеНастройки.БланкОтчета = ТекущиеНастройки.БланкОтчета";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&_Отбор_", ТекстОтбора);		
	
	РегистрБланки.Загрузить(Запрос.Выполнить().Выгрузить());
	РегистрБланки.Записать();
	
КонецПроцедуры // ОбновитьПраваДоступаБланки()

Процедура НастройкиРазвернутыеПриЗаписи(Объект, Раздел) Экспорт
	
	Если НЕ ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Раздел = "ВидыОтчетов" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Т.Пользователь КАК Пользователь,
		|	Т.Организация КАК Организация,
		|	Т.ВидОтчета КАК ВидОтчета,
		|	МАКСИМУМ(Т.Запись) КАК Запись,
		|	МАКСИМУМ(Т.Утверждение) КАК Утверждение
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетовРазвернутые КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Пользователь,
		|	Т.Организация,
		|	Т.ВидОтчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Пользователь,
		|	Организация,
		|	ВидОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТекущиеПрава.Пользователь, НовыеПрава.Пользователь) КАК Пользователь,
		|	ЕСТЬNULL(ТекущиеПрава.Организация, НовыеПрава.Организация) КАК Организация,
		|	ЕСТЬNULL(ТекущиеПрава.ВидОтчета, НовыеПрава.ВидОтчета) КАК ВидОтчета,
		|	ВЫБОР
		|		КОГДА НовыеПрава.Запись ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Удалить,
		|	НовыеПрава.Запись КАК Запись,
		|	НовыеПрава.Утверждение КАК Утверждение
		|ИЗ
		|	РегистрСведений.ПраваДоступаПользователейВидыОтчетов КАК ТекущиеПрава
		|		ПОЛНОЕ СОЕДИНЕНИЕ НовыеПрава КАК НовыеПрава
		|		ПО ТекущиеПрава.Пользователь = НовыеПрава.Пользователь
		|			И ТекущиеПрава.Организация = НовыеПрава.Организация
		|			И ТекущиеПрава.ВидОтчета = НовыеПрава.ВидОтчета
		|ГДЕ
		|	(НовыеПрава.Запись ЕСТЬ NULL 
		|			ИЛИ ТекущиеПрава.Запись ЕСТЬ NULL 
		|			ИЛИ НЕ НовыеПрава.Запись = ТекущиеПрава.Запись
		|			ИЛИ НЕ НовыеПрава.Утверждение = ТекущиеПрава.Утверждение)";
		
		СтрокаИзмерений = "Пользователь,Организация,ВидОтчета";
		СтрокаИзмеренийИРесурсов = СтрокаИзмерений + ",Запись,Утверждение";
				
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МенеджерРегистраПравДоступа = РегистрыСведений["ПраваДоступаПользователей" + Раздел];
	
	Пока Выборка.Следующий() Цикл
		
		ЗаписьПравоДоступа = МенеджерРегистраПравДоступа.СоздатьМенеджерЗаписи();
		
		Если Выборка.Удалить Тогда
			ЗаполнитьЗначенияСвойств(ЗаписьПравоДоступа, Выборка, СтрокаИзмерений);
			ЗаписьПравоДоступа.Удалить();
		Иначе
			ЗаполнитьЗначенияСвойств(ЗаписьПравоДоступа, Выборка, СтрокаИзмеренийИРесурсов);
			ЗаписьПравоДоступа.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьДляГруппы(ИмяОтбора, ЗначениеОтбора) Экспорт
	
	ОбновлятьВидыОтчетов = Ложь;
	ОбновлятьБланкиОтчетов = Ложь;
	
	Если ИмяОтбора = "Пользователь" Тогда
		ОбновлятьВидыОтчетов = Истина;
		ОбновлятьБланкиОтчетов = Истина;
	ИначеЕсли ИмяОтбора = "Организация" Тогда
		ОбновлятьВидыОтчетов = Истина;
	ИначеЕсли ИмяОтбора = "ВидОтчета" Тогда
		ОбновлятьВидыОтчетов = Истина;	
	ИначеЕсли ИмяОтбора = "Бланк" Тогда
		ОбновлятьБланкиОтчетов = Истина;	
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Если ОбновлятьВидыОтчетов Тогда
			НаборЗаписей = РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор[ИмяОтбора].Установить(ЗначениеОтбора);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Записать();
		КонецЕсли;
				
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьПраваБланкаПоВидуОтчета(ВидОтчета,БланкОтчета) Экспорт
	
	Если Константы.ИспользоватьГруппыДоступаКВидамОтчетов.Получить() Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ГруппыДоступаКВидамОтчетов.ГруппыВидыОтчетов КАК ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов
		|ГДЕ
		|	ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов.ВидОтчета = &ВидОтчета";
		
		Запрос.УстановитьПараметр("ВидОтчета",ВидОтчета);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Не Результат.Следующий() Тогда
			
			Возврат;
			
		Иначе
			
			ВладелецПрав=Результат.Ссылка;
			
		КонецЕсли;
		
	Иначе
		
		ВладелецПрав=ВидОтчета;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	НастройкиПравДоступаПользователейВидыОтчетов.Организация КАК Организация,
	|	НастройкиПравДоступаПользователейВидыОтчетов.ВидОтчета КАК ВидОтчета,
	|	НастройкиПравДоступаПользователейВидыОтчетов.Пользователь КАК Пользователь,
	|	НастройкиПравДоступаПользователейВидыОтчетов.ВидДоступа КАК ВидДоступа,
	|	&БланкОтчета КАК БланкОтчета
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов
	|ГДЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.ВидОтчета = &ВидОтчета";
	
	Запрос.УстановитьПараметр("ВидОтчета",ВладелецПрав);
	Запрос.УстановитьПараметр("БланкОтчета",БланкОтчета);
	
	ИмяРегистра="НастройкиПравДоступаПользователейБланкиДанные";
	
	НаборЗаписей=РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.БланкОтчета.Установить(БланкОтчета);
	
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры // УстановитьПраваПоВладельцу()

Процедура ОбработатьИзменениеНастройкиПравДоступаОрганизации() Экспорт
	
	ИмяРегистраБланки="НастройкиПравДоступаПользователейБланкиДанныеРазвернутые";
	
	ПоГруппамОрганизация=Константы.ИспользоватьГруппыДоступаОрганизацииВидыОтчетов.Получить();
	
	ТипКОчистке=?(ПоГруппамОрганизация,Тип("СправочникСсылка.Организации"),Тип("СправочникСсылка.ГруппыДоступаОрганизацииВидыОтчетов"));
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.Организация КАК Организация,
	|	ТИПЗНАЧЕНИЯ(НастройкиПравДоступаПользователейВидыОтчетов.Организация) КАК ТипЗначения
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ТипЗначения=ТипКОчистке Тогда
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетовРазвернутые.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ОрганизацияИсточник.Установить(Результат.Организация);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
				НаборЗаписей=РегистрыСведений[ИмяРегистраБланки].СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ОрганизацияИсточник.Установить(Результат.Организация);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
			
		Иначе
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Организация.Установить(Результат.Организация);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // ОбработатьИзменениеНастройкиПравДоступаОрганизации() 

Процедура ОбработатьИзменениеНастройкиПравДоступаВидыОтчетов() Экспорт
	
	ПоГруппамВидыОтчетов=Константы.ИспользоватьГруппыДоступаКВидамОтчетов.Получить();
	ИмяРегистраБланки="НастройкиПравДоступаПользователейБланкиДанныеРазвернутые";
	
	ТипКОчистке=?(ПоГруппамВидыОтчетов,Тип("СправочникСсылка.ВидыОтчетов"),Тип("СправочникСсылка.ГруппыДоступаКВидамОтчетов"));
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.ВидОтчета КАК ВидОтчета,
	|	ТИПЗНАЧЕНИЯ(НастройкиПравДоступаПользователейВидыОтчетов.ВидОтчета) КАК ТипЗначения
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ТипЗначения=ТипКОчистке Тогда
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетовРазвернутые.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидОтчетаИсточник.Установить(Результат.ВидОтчета);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
				НаборЗаписей=РегистрыСведений[ИмяРегистраБланки].СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидОтчетаИсточник.Установить(Результат.ВидОтчета);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
			
		Иначе
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидОтчета.Установить(Результат.ВидОтчета);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // ОбработатьИзменениеНастройкиПравДоступаВидыОтчетов()

Процедура ОбработатьИзменениеНастройкиПравДоступаПользователи() Экспорт
	
	ИмяРегистраБланки="НастройкиПравДоступаПользователейБланкиДанныеРазвернутые";
	
	ПоГруппамПользователи=Константы.ИспользоватьГруппыДоступаПользователиВидыОтчетов.Получить();
	
	ТипКОчистке=?(ПоГруппамПользователи,Тип("СправочникСсылка.Пользователи"),Тип("СправочникСсылка.ГруппыДоступаПользователиВидыОтчетов"));
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.Пользователь КАК Пользователь,
	|	ТИПЗНАЧЕНИЯ(НастройкиПравДоступаПользователейВидыОтчетов.Пользователь) КАК ТипЗначения
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ТипЗначения=ТипКОчистке Тогда
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетовРазвернутые.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПользовательИсточник.Установить(Результат.Пользователь);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
				НаборЗаписей=РегистрыСведений[ИмяРегистраБланки].СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПользовательИсточник.Установить(Результат.Пользователь);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
			
		Иначе
			
			Попытка
				
				НаборЗаписей=РегистрыСведений.НастройкиПравДоступаПользователейВидыОтчетов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Пользователь.Установить(Результат.Пользователь);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Записать();
				
			Исключение
				
				ВызватьИсключение;
				Прервать;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // ОбработатьИзменениеНастройкиПравДоступаВидыОтчетов()

Функция ПолучитьКоличествоЗаписейВидыОтчетов() Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КОЛИЧЕСТВО(НастройкиПравДоступаПользователейВидыОтчетов.ВидДоступа) КАК ВидДоступа
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов
	|ГДЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.ВидОтчета ССЫЛКА Справочник.ВидыОтчетов";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() И (НЕ Результат.ВидДоступа=Null)  Тогда
		
		Возврат Результат.ВидДоступа;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции // ПолучитьКоличествоЗаписейВидыОтчетов()

Функция ПолучитьКоличествоЗаписейОрганизации() Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КОЛИЧЕСТВО(НастройкиПравДоступаПользователейВидыОтчетов.ВидДоступа) КАК ВидДоступа
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов
	|ГДЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.Организация ССЫЛКА Справочник.Организации";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() И (НЕ Результат.ВидДоступа=Null)  Тогда
		
		Возврат Результат.ВидДоступа;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции // ПолучитьКоличествоЗаписейОрганизации()

Функция ПолучитьКоличествоЗаписейПользователи() Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КОЛИЧЕСТВО(НастройкиПравДоступаПользователейВидыОтчетов.ВидДоступа) КАК ВидДоступа
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователейВидыОтчетов КАК НастройкиПравДоступаПользователейВидыОтчетов
	|ГДЕ
	|	НастройкиПравДоступаПользователейВидыОтчетов.Пользователь ССЫЛКА Справочник.Пользователи";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() И (НЕ Результат.ВидДоступа=Null)  Тогда
		
		Возврат Результат.ВидДоступа;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции // ПолучитьКоличествоЗаписейОрганизации()
