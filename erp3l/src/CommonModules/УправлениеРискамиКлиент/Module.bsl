////////////////////////////////////////////////////////////////////////////////
// Модуль Реализует логику работы подсистемы УправлениеРисками в контексте 
// клиентского кода.
////////////////////////////////////////////////////////////////////////////////

// Возвращает период отбора, установленной на форме ФормаВход отчета ДиаграммаРисков.
Функция ПолучитьПериодОтбораДиаграммыРисков(ФормаВход)
	РезультатФункции = Новый СтандартныйПериод;
	ПараметрПериодОтбора = Новый ПараметрКомпоновкиДанных("ПериодОтбора");
	Если СокрЛП(ФормаВход.ИмяФормы) = "Отчет.ДиаграммаРисков.Форма" Тогда
		Для Каждого ТекЭлементы Из ФормаВход.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			Если ТекЭлементы.Параметр = ПараметрПериодОтбора Тогда
				РезультатФункции = ТекЭлементы.Значение;
				Прервать;			// Значение найдено.
			Иначе
				// Выполняем поиск далее.
			КонецЕсли;
		КонецЦикла;	
	Иначе
		ПараметрПериодОтбора = Новый ПараметрКомпоновкиДанных("ПериодОтбора");
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ПолучитьПериодОтбораДиаграммыРисков()

// См. ОтчетыКлиентПереопределяемый.ОбработкаРасшифровки.
Процедура ОбработкаРасшифровкиДиаграммаРисков(ФормаОтчета, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	Если ФормаОтчета.НастройкиОтчета.ПолноеИмя = "Отчет.ДиаграммаРисков" Тогда
		// Инициализация.
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПоляРисков = УправлениеРискамиВызовСервера.ПолучитьПоляРасшифровкиДиаграммаРисков(ФормаОтчета.ОтчетДанныеРасшифровки, Расшифровка, СтандартнаяОбработка);
		// Формировать при открытии.
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		// Период отбора.
		НовыйПериодОтбора = ПолучитьПериодОтбораДиаграммыРисков(ФормаОтчета);
		НовыеПользовательскиеНастройки = ОбщегоНазначенияУХ.УстановитьЗначениеПараметраВПользовательскиеНастройки("АнализРисков", "ПериодОтбора", НовыйПериодОтбора);
		// Вероятность.
		ПустаяСсылкаСтепеньРиска = "Справочник.СтепениРиска.ПустаяСсылка";
		Вероятность = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПоляРисков, "Вероятность", ПредопределенноеЗначение(ПустаяСсылкаСтепеньРиска));	
		Если ЗначениеЗаполнено(Вероятность) Тогда
			ОбщегоНазначенияУХ.УстановитьЗначениеОтбораВПользовательскиеНастройкиОтчета("АнализРисков", "Вероятность", Вероятность, НовыеПользовательскиеНастройки);
		Иначе
			// Пропускаем установку отбора вероятности, т.к. значение не задаено.
		КонецЕсли;
		// Ущерб.
		ПустаяСсылкаКатегорииУщерба = "Справочник.КатегорииУщерба.ПустаяСсылка";
		Ущерб = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПоляРисков, "Ущерб", ПредопределенноеЗначение(ПустаяСсылкаКатегорииУщерба));	
		Если ЗначениеЗаполнено(Ущерб) Тогда
			ОбщегоНазначенияУХ.УстановитьЗначениеОтбораВПользовательскиеНастройкиОтчета("АнализРисков", "Ущерб", Ущерб, НовыеПользовательскиеНастройки);
		Иначе
			// Пропускаем установку отбора вероятности, т.к. значение не задаено.
		КонецЕсли;
		ПараметрыФормы.Вставить("ПользовательскиеНастройки", НовыеПользовательскиеНастройки);
		// Открытие формы.
		Имя = "Отчет.АнализРисков.ФормаОбъекта";
		ОткрытьФорму(Имя, ПараметрыФормы);
	Иначе
		// Другой отчет. Пропускаем.
	КонецЕсли;	
КонецПроцедуры		// ОбработкаРасшифровки()
