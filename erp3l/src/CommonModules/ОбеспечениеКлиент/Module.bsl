////////////////////////////////////////////////////////////////////////////////
// Клиентские процедуры работы с механизмами обеспечения
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Предназначена для проверки заполнения полей перед выполнением команды по заполнению обеспечения в документах.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - основной реквизит формы документа, связанный с редактируемым объектом-документом в
//                                  которым нужно выполнить проверки заполнения полей.
//  ТаблицаТовары - ДанныеФормыКоллекция - список в котором необходимо выполнить проверки заполнения полей
//  Идентификатор - Число - идентификатор строки.
//  ПараметрыПроверки - Структура - структура параметров проверки, формируемая функцией ОбеспечениеКлиентСервер.ИнициализироватьПараметрыПроверкиЗаполнения
//  Склад - СправочникСсылка.Склады - значение поля склад (склад - отгрузки) из шапки документа.
//  Режим - Строка  - режим выполнения команды.
//
// Возвращаемое значение:
//  Булево - истина, если проверка заполнения выполнена успешно, ложь - в противном случае.
//
Функция ПроверитьЗаполнение(Объект, ТаблицаТовары, Идентификатор, ПараметрыПроверки, Склад, Режим) Экспорт
	
	ВыдаватьСообщения = Режим <> ОбеспечениеВДокументахКлиентСервер.РежимПодборСкладов();
	Пути = "НомерСтроки,
	       |Отменено,
	       |Номенклатура, Характеристика, ВариантОбеспечения,
	       |ТипНоменклатуры, ХарактеристикиИспользуются,
	       |Количество, КоличествоУпаковок";

	ДанныеСтроки = Новый Структура(Пути);
	Ошибки = Новый Массив();

	Хранилище = Новый Структура(Пути);

	ЗаполнитьЗначенияСвойств(Хранилище, Объект);

	ЕстьОшибкиСклад         = Ложь;
	
	СтрокаТовары = ТаблицаТовары.НайтиПоИдентификатору(Идентификатор);
	ЗаполнитьЗначенияСвойств(Хранилище, СтрокаТовары);
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, Хранилище);
	
	Если Режим = ОбеспечениеВДокументахКлиентСервер.РежимПросмотрДоступности()
			И ДанныеСтроки.ВариантОбеспечения <> ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Требуется") Тогда
		Возврат Ложь;
	КонецЕсли;

	Если ДанныеСтроки.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
			И ДанныеСтроки.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара") Тогда
			
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ДанныеСтроки.Отменено = Истина Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Для отмененной строки обеспечение и отгрузка невозможны.';
										|en = 'Supply and shipment are not available for a canceled line.'"));
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ДанныеСтроки.Количество = 0 И ДанныеСтроки.КоличествоУпаковок = 0 Тогда
		
		Ошибка = Новый Структура("Поле, НомерСтроки", "Количество", ДанныеСтроки.НомерСтроки);
		Ошибки.Добавить(Ошибка);
		
	КонецЕсли;
	
	Если ДанныеСтроки.Количество = 0 И ДанныеСтроки.КоличествоУпаковок <> 0 Тогда
		
		Ошибка = Новый Структура("Поле, НомерСтроки", "КоличествоУпаковок", ДанныеСтроки.НомерСтроки);
		Ошибки.Добавить(Ошибка);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) Тогда
		
		Ошибка = Новый Структура("Поле, НомерСтроки", "Номенклатура", ДанныеСтроки.НомерСтроки);
		Ошибки.Добавить(Ошибка);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеСтроки.Характеристика) И ДанныеСтроки.ХарактеристикиИспользуются = Истина Тогда
		
		Ошибка = Новый Структура("Поле, НомерСтроки", "Характеристика", ДанныеСтроки.НомерСтроки);
		Ошибки.Добавить(Ошибка);
		
	КонецЕсли;

	Если ПараметрыПроверки.Поля.Свойство("Склад") И Не ЗначениеЗаполнено(Склад) Тогда
		
		Если Не ЕстьОшибкиСклад Тогда
			Ошибка = Новый Структура("Поле, НомерСтроки", "Склад", ДанныеСтроки.НомерСтроки);
			Ошибки.Добавить(Ошибка);
			ЕстьОшибкиСклад = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ОшибкиПользователю = Неопределено;
	
	Для Каждого Ошибка Из Ошибки Цикл
		
		Поле  = СтрЗаменить(ПараметрыПроверки.Поля[Ошибка.Поле], "%1", Ошибка.НомерСтроки - 1);
		Текст = СтрЗаменить(ПараметрыПроверки.Тексты[Ошибка.Поле], "%1", Ошибка.НомерСтроки);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(ОшибкиПользователю, Поле, Текст, "");
		
	КонецЦикла;
	
	Если ВыдаватьСообщения Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(ОшибкиПользователю);
	КонецЕсли;
	
	Возврат Ошибки.Количество() = 0;
	
КонецФункции

// Возвращает структуру параметров, используемую при открытии формы обработки "ОбеспечениеПотребностей".
//  Возвращаемое значение:
//   Структура - 
//    ОтборПоТипуОбеспечения - ПеречислениеСсылка.ТипыОбеспечения, Неопределено - отбор по типу обеспечения.
//    ОтборПоПодразделению - СправочникСсылка.СтруктураПредприятия, Неопределено - отбор по подразделению.
//    ЕстьШагЗапасы - Булево - если Ложь, то шаг поддержания запасов игнорируется.
//
Функция ПараметрыОткрытияФормыОбработкиОбеспечениеПотребностей() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ОтборПоТипуОбеспечения", Неопределено);
	Результат.Вставить("ОтборПоИсточникуОбеспечения", Неопределено);
	Результат.Вставить("ОтборПоПодразделению", Неопределено);
	Результат.Вставить("ЕстьШагЗапасы", Истина);
	Результат.Вставить("ОтборПоЦеховымКладовым", Ложь);
	
	Возврат Результат;
	
КонецФункции

// Сообщает о том, что в заказе нет ни одного товара с действием "Обеспечивать обособленно" по собственному назначению.
//
Процедура СообщитьОбОтсутствииТовараКОбособленномуОбеспечению() Экспорт
	
	ТекстОшибки = НСтр("ru = 'Заказ не является объектом обособления. Выполнение команды не предусмотрено.';
						|en = 'The order is not a assigned object. Cannot execute the command.'");
	
	ПоказатьПредупреждение(, ТекстОшибки);
	
КонецПроцедуры

// Сообщает о том, что все присутствующие в документе товары с действием "Обеспечивать обособленно" - по стороннему назначению.
//
// Параметры:
//  ЭтоРезервирование	 - Булево - Это резервирование или снятие резерва.
//
Процедура СообщитьОбОтсутствииТовараКОбособленномуОбеспечениюПоТекущемуЗаказу(ЭтоРезервирование) Экспорт
	
	Если ЭтоРезервирование Тогда
		
		ТекстОшибки = НСтр("ru = 'Резервирование для указанного в строках назначения доступно из соответствующего заказа,
		|или с помощью документа ""Корректировка назначения товаров"".';
		|en = 'Reservation for the assignment specified in lines is available
		|from the corresponding order, or using the ""Inventory assignment adjustment"" document.'");
		
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Снятие резерва для указанного в строках назначения доступно из соответствующего заказа,
		|или с помощью документа ""Корректировка назначения товаров"".';
		|en = 'You can remove reserve for the specified assignment from the corresponding order,
		|or using the ""Inventory assignment adjustment"" document.'");
		
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстОшибки);
	
КонецПроцедуры

// Сообщает о невозможности запуска обработки резервирования/снятия резерва из документа с 
// неподходящим статусов.
//
// Параметры:
//  ЭтоРезервирование	 - Булево - Это резервирование или снятие резерва
//  МинимальныйСтатус	 - Строка - Минимальный статус, начиная с которого доступен запуск обработки резервирования/снятия резерва.
//
Процедура СообщитьОНеобходимомМинимальномСтатусеДокумента(ЭтоРезервирование, МинимальныйСтатус) Экспорт
	
	ТекстОшибки = ?(ЭтоРезервирование,
		НСтр("ru = 'Минимальный статус документа для резервирования под назначение - ""%1"".';
			|en = 'Minimum document status to reserve for assignment: ""%1"".'"),
		НСтр("ru = 'Минимальный статус документа для снятия резерва под назначение - ""%1"".';
			|en = 'Minimum document status to remove from reserve for assignment: ""%1"".'"));
	
	ТекстОшибки = СтрШаблон(ТекстОшибки, МинимальныйСтатус);
	
	ПоказатьПредупреждение(, ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти
