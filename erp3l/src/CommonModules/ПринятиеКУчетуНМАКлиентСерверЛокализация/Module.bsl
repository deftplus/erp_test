////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуНМА) Экспорт

	//++ Локализация
	
	// Определяет доступность параметров начисления амортизации
	ДоступныПараметрыАмортизацииБУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
									
	ДоступныПараметрыАмортизацииНУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"))
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
									
	// Определяет доступность реквизитов, которые связаны с отражением расходов (амортизации)
	ДоступноОтражениеРасходовБУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"));
			
	//
	АмортизацияБУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	//
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И (НЕ ДоступноОтражениеРасходовБУ
				И НЕ ДоступноОтражениеРасходовНУ
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
				И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы")));
		
	СтатьяРасходовНУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (НЕ ДоступноОтражениеРасходовБУ
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"));
		
	//
	ПоНаработке = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции");
				
	ПараметрыПринятияКУчетуНМА.Вставить("ПоНаработке", 
		ПараметрыПринятияКУчетуНМА.ПоНаработке ИЛИ ПоНаработке);
		
	ПоИнвентаризации = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации"));
	ПараметрыПринятияКУчетуНМА.Вставить("ПоИнвентаризации", ПоИнвентаризации);
	
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступноОтражениеРасходовБУ",    ДоступноОтражениеРасходовБУ);
	ПараметрыПринятияКУчетуНМА.Вставить("ДоступноОтражениеРасходовНУ",    ДоступноОтражениеРасходовНУ);
	ПараметрыПринятияКУчетуНМА.Вставить("СтатьяРасходовУУОбязательна",    СтатьяРасходовУУОбязательна);
	ПараметрыПринятияКУчетуНМА.Вставить("СтатьяРасходовНУОбязательна",    СтатьяРасходовНУОбязательна);
	ПараметрыПринятияКУчетуНМА.Вставить("АмортизацияБУДоступна",          АмортизацияБУДоступна);

	//
	НаправлениеДеятельностиОбязательно = 
		(НЕ ВспомогательныеРеквизиты.Свойство("ХозяйственнаяОперация")
			ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР"))
		И (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
			ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
			
	ПараметрыПринятияКУчетуНМА.Вставить("НаправлениеДеятельностиОбязательно", НаправлениеДеятельностиОбязательно);
	
	//-- Локализация
	
КонецПроцедуры

#Область ФормаДокумента

Процедура ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ЗначенияРеквизитовДоИзменения.Вставить("СрокИспользованияБУ", Объект.СрокИспользованияБУ);
	ЗначенияРеквизитовДоИзменения.Вставить("ПервоначальнаяСтоимостьБУ", Объект.ПервоначальнаяСтоимостьБУ);
	ЗначенияРеквизитовДоИзменения.Вставить("ПервоначальнаяСтоимостьНУ", Объект.ПервоначальнаяСтоимостьНУ);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСпособыНачисленияАмортизации(Форма) Экспорт
	
	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СписокВыбора = Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции"));
	
	Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыПринятияКУчетуНМА, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ПараметрыПринятияКУчетуНМА = ВнеоборотныеАктивыКлиентСервер.ПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты);
	
	ДоступныНастройкиРеглУчета = (Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);

	ЭтоНМА = Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ОтражатьВРеглУчете Тогда
			
			Если ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
				ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости Тогда
				
				Элементы.ЗаполнитьПервоначальнуюСтоимостьРегл.Видимость = Ложь;
				
				Элементы.ПервоначальнаяСтоимостьБУ.Заголовок = НСтр("ru = 'Бухгалтерский учет';
																	|en = 'Bookkeeping'");
				Элементы.ПервоначальнаяСтоимостьНУ.Заголовок = НСтр("ru = 'Налоговый учет';
																	|en = 'Tax accounting'");
				Элементы.ПервоначальнаяСтоимостьПР.Заголовок = НСтр("ru = 'Постоянная разница';
																	|en = 'Permanent difference'");
				Элементы.ПервоначальнаяСтоимостьВР.Заголовок = НСтр("ru = 'Временная разница';
																	|en = 'Temporary difference'");
				
			КонецЕсли; 
			
		Иначе
			
			Элементы.ЗаполнитьПервоначальнуюСтоимостьРегл.Видимость = Ложь;
			
		КонецЕсли;
		
		Если Объект.ОтражатьВУпрУчете Тогда
			
			Если ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
				ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости Тогда
				
				Элементы.ЗаполнитьПервоначальнуюСтоимостьУпр.Видимость = Ложь;
				
				Элементы.ПервоначальнаяСтоимостьУУ.Заголовок = НСтр("ru = 'Первоначальная';
																	|en = 'Initial'");
				Элементы.ЛиквидационнаяСтоимость.Заголовок = НСтр("ru = 'Ликвидационная';
																	|en = 'Residual'");
				
				Элементы.ГруппаСтоимостьУпр.ОтображатьЗаголовок = Истина;
				
			КонецЕсли; 
			
		Иначе
			
			Элементы.ЗаполнитьПервоначальнуюСтоимостьУпр.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
									
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаУУ.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		Элементы.ГруппаОбщее.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ЭтоНМА Тогда
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru = 'Способ начисления амортизации';
																	|en = 'Depreciation accrual method'");
			Элементы.ПорядокУчетаБУ.Заголовок = НСтр("ru = 'Порядок учета';
													|en = 'Accounting procedure'");
			Элементы.ПорядокУчетаНУ.Заголовок = НСтр("ru = 'Порядок включения стоимости в расходы';
													|en = 'Procedure of including cost in expenses'");
			Элементы.СрокИспользованияБУ.Заголовок = НСтр("ru = 'Срок использования';
															|en = 'Useful life'");
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru = 'Срок использования';
															|en = 'Useful life'");
			
			ПорядокНачислятьАмортизациюПредставлениеБУ = НСтр("ru = 'Начислять амортизацию';
																|en = 'Accrue depreciation '");
			ПорядокНеНачислятьАмортизациюПредставлениеБУ = НСтр("ru = 'Не начислять амортизацию';
																|en = 'Do not accrue depreciation'");
			
			ПорядокНеНачислятьАмортизациюПредставлениеНУ = НСтр("ru = 'Стоимость не включается в расходы';
																|en = 'Cost is not included in expenses'");
			ПорядокСписыватьПриПринятииКУчетуПредставлениеНУ = НСтр("ru = 'Включить в расходы при принятии к учету';
																	|en = 'Include in expenses on recognition'");
			
		Иначе
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru = 'Способ списания расходов';
																	|en = 'Expenses write-off method'");
			Элементы.ПорядокУчетаБУ.Заголовок = НСтр("ru = 'Порядок списания';
													|en = 'Write-off procedure'");
			Элементы.ПорядокУчетаНУ.Заголовок = НСтр("ru = 'Порядок списания на расходы';
													|en = 'Procedure of writing off as expenses'");
			Элементы.СрокИспользованияБУ.Заголовок = НСтр("ru = 'Срок списания';
															|en = 'Write-off period'");
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru = 'Срок списания';
															|en = 'Write-off period'");
			
			ПорядокНачислятьАмортизациюПредставлениеБУ = НСтр("ru = 'Списание расходов';
																|en = 'Expense write-off'");
			ПорядокНеНачислятьАмортизациюПредставлениеБУ = НСтр("ru = 'Не списывать расходы';
																|en = 'Do not write off expenses'");
			
			ПорядокНеНачислятьАмортизациюПредставлениеНУ = НСтр("ru = 'Не списывать';
																|en = 'Do not write off'");
			ПорядокСписыватьПриПринятииКУчетуПредставлениеНУ = НСтр("ru = 'При принятии к учету';
																	|en = 'While recognition'");
		
		КонецЕсли;
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьПредставлениеЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора,
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию"),
			ПорядокНачислятьАмортизациюПредставлениеБУ);
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьПредставлениеЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора,
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию"),
			ПорядокНеНачислятьАмортизациюПредставлениеБУ);
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьПредставлениеЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию"),
			ПорядокНеНачислятьАмортизациюПредставлениеНУ);
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьПредставлениеЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"),
			ПорядокСписыватьПриПринятииКУчетуПредставлениеНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
	
		Если Форма.ПлательщикНалогаНаПрибыль Тогда
			Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
				ПорядокНачислятьАмортизациюПредставлениеНУ = НСтр("ru = 'Начислять амортизацию';
																	|en = 'Accrue depreciation '");
			Иначе
				ПорядокНачислятьАмортизациюПредставлениеНУ = НСтр("ru = 'Равномерно';
																	|en = 'Evenly'");
			КонецЕсли;
		Иначе
			ПорядокНачислятьАмортизациюПредставлениеНУ = НСтр("ru = 'Включить в состав амортизируемого имущества';
																|en = 'Include in depreciable fixed assets'");
		КонецЕсли;
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьПредставлениеЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию"),
			ПорядокНачислятьАмортизациюПредставлениеНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
	
		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
			
			СписокВыбораНУ = Форма.Элементы.ПорядокУчетаНУ.СписокВыбора;
	
			НеПолныйВариантПримененияЦФ = 
				Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное");
	
			//
			ВидимостьПорядкаУчета = 
				НеПолныйВариантПримененияЦФ
				И Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации");
					
			ПредставлениеЗначения = 
				?(ЭтоНМА, НСтр("ru = 'Начислять амортизацию или включить в расходы';
								|en = 'Accrue depreciation or include in expenses'"),
							НСтр("ru = 'Равномерно или при принятии к учету';
								|en = 'Evenly or when recognized'"));
				
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				ВидимостьПорядкаУчета, 
				ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"),
				ПредставлениеЗначения, 
				2);
				
		КонецЕсли;
				
	КонецЕсли;
				
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
			
			СписокВыбораНУ = Форма.Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			Причина = "";
			Форма.РекомендуемыйПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
				
			Если ЗначениеЗаполнено(Форма.Объект.СрокИспользованияБУ) И Форма.Объект.СрокИспользованияБУ <= 12 Тогда
				Причина = ?(ЭтоНМА,
					НСтр("ru = 'Срок полезного использования не превышает 12 месяцев';
						|en = 'Useful life does not exceed 12 months'"),
					НСтр("ru = 'Срок списания не превышает 12 месяцев';
						|en = 'Write-off period does not exceed 12 months'"));
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету");
			ИначеЕсли ЗначениеЗаполнено(Форма.Объект.ПервоначальнаяСтоимостьБУ) И Форма.Объект.ПервоначальнаяСтоимостьБУ <= 100000 Тогда
				Причина = НСтр("ru = 'Первоначальная стоимость не превышает 100 000 руб.';
								|en = 'Initial cost does not exceed 100,000 rub.'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету");
			КонецЕсли;
			
			МассивСтрок = Новый Массив;
			Если ЗначениеЗаполнено(Причина) И Форма.Объект.ПорядокУчетаНУ <> Форма.РекомендуемыйПорядокУчетаНУ Тогда
				МассивСтрок.Добавить(Причина);
				МассивСтрок.Добавить("," + " ");
				МассивСтрок.Добавить(НСтр("ru = 'рекомендуется установить значение';
											|en = 'recommended value'"));
				МассивСтрок.Добавить(" ");
				ПредставлениеРекомендуемогоПорядкаУчетаНУ = СписокВыбораНУ.НайтиПоЗначению(Форма.РекомендуемыйПорядокУчетаНУ).Представление;
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеРекомендуемогоПорядкаУчетаНУ,,,, "УстановкаПорядкаУчетаНУ"));
				МассивСтрок.Добавить(".");
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Истина;
			Иначе
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			КонецЕсли;
			
			Форма.УстановитьПорядокУчетаНУ = Новый ФорматированнаяСтрока(МассивСтрок);
		Иначе
			Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
		КонецЕсли; 
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы") Тогда
			ПодсказкаЭлемента = 
				?(ЭтоНМА,
					НСтр("ru = 'Если после закрытия месяца первоначальная стоимость не превысит 100 000 рублей, то она автоматически будет включена в расходы при принятии к учету, иначе - начисление амортизации';
						|en = 'If after month-end closing the initial cost does not exceed 100,000 rubles, it will automatically be included in expenses upon recognition, otherwise - depreciation accrual'"),
					НСтр("ru = 'Если после закрытия месяца расходы на НИОКР не превысят 100 000 рублей, то они автоматически будут списаны при принятии к учету, иначе - равномерно';
						|en = 'If, after the month-end closing, R&D expenses do not exceed 100,000 rubles, these will be automatically written off upon recognition, otherwise - evenly'"));
					
			Элементы.ПорядокУчетаНУ.ОтображениеПодсказки  = ОтображениеПодсказки.ОтображатьСнизу;
		Иначе
			ПодсказкаЭлемента = НСтр("ru = 'Порядок включения стоимости в состав расходов в налоговом учете';
									|en = 'Procedure of including the value into the cost structure in accounting'");
			Элементы.ПорядокУчетаНУ.ОтображениеПодсказки  = ОтображениеПодсказки.Авто;
		КонецЕсли;	
		
		Элементы.ПорядокУчетаНУ.Подсказка = ПодсказкаЭлемента;
		 
	КонецЕсли;

	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаРасходыУУ.ОтображатьЗаголовок = 
			Объект.ОтражатьВРеглУчете
			ИЛИ Элементы.СтатьяРасходовБУ.Видимость
			ИЛИ Элементы.СтатьяРасходовНУ.Видимость
			ИЛИ Элементы.СтатьяДоходовПоИнвентаризации.Видимость
			ИЛИ Элементы.ПередаватьРасходыВДругуюОрганизацию.Видимость;
		
		Если Элементы.СтатьяРасходовУУ.АвтоОтметкаНезаполненного
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовУУ) Тогда
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
		Иначе
			Если ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииБУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
											|en = 'matches accounting'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с налоговым учетом';
											|en = 'matches tax accounting'");
			КонецЕсли;
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.СтатьяРасходовНУ.АвтоОтметкаНезаполненного 
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовНУ) Тогда
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = "";
		Иначе
			ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
										|en = 'matches accounting'");
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
			Элементы.СтатьяРасходовБУ.Подсказка = НСтр("ru = 'Статья расходов, по которой отражаются амортизационные расходы';
														|en = 'Expense item recording depreciation expenses'");
		Иначе
			Элементы.СтатьяРасходовБУ.Подсказка = НСтр("ru = 'Статья расходов, по которой отражается списание расходов';
														|en = 'Expense item on which the expenses write-off is recognized'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
			
			Элементы.СтатьяРасходовНУ.Подсказка = 
				?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"),
					НСтр("ru = 'Статья расходов, на которую списывается стоимость при принятии к учету';
						|en = 'Expense item to which the cost is charged to on initial recognition'"),
					НСтр("ru = 'Статья расходов, по которой отражаются амортизационные расходы';
						|en = 'Expense item recording depreciation expenses'"));
					
		Иначе
			
			Элементы.СтатьяРасходовНУ.Подсказка = 
				?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"),
					НСтр("ru = 'Статья расходов, на которую списываются расходы при принятии к учету';
						|en = 'Expense item to which the expenses are charged to on initial recognition'"),
					НСтр("ru = 'Статья расходов, по которой отражается списание расходов';
						|en = 'Expense item on which the expenses write-off is recognized'"));
					
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
			
			Элементы.ГруппаРасходыБУ.Заголовок = 
				?(ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииБУ,
					НСтр("ru = 'Включение в расходы (бухгалтерский учет)';
						|en = 'Inclusion in expenses (bookkeeping)'"),
					НСтр("ru = 'Включение в расходы';
						|en = 'Inclusion in expenses'"));
					
		Иначе
			
			Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
				
				Если ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ 
					ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииНУ Тогда
					Элементы.ГруппаРасходыБУ.Заголовок = НСтр("ru = 'Амортизация (бухгалтерский учет)';
																|en = 'Depreciation (bookkeeping)'");
				Иначе
					Элементы.ГруппаРасходыБУ.Заголовок = НСтр("ru = 'Амортизация';
																|en = 'Depreciation'");
				КонецЕсли;
															
			Иначе
	
				Если ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ 
					ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииНУ Тогда
					Элементы.ГруппаРасходыБУ.Заголовок = НСтр("ru = 'Списание расходов (бухгалтерский учет)';
																|en = 'Expense write-off (bookkeeping)'");
				Иначе
					Элементы.ГруппаРасходыБУ.Заголовок = НСтр("ru = 'Списание расходов';
																|en = 'Expense write-off'");
				КонецЕсли; 
															
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
			
			Элементы.ГруппаРасходыНУ.Заголовок = 
				?(ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииБУ,
					НСтр("ru = 'Включение в расходы (налоговый учет)';
						|en = 'Inclusion in expenses (tax accounting)'"),
					НСтр("ru = 'Включение в расходы';
						|en = 'Inclusion in expenses'"));
					
		Иначе
			
			Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
				
				Если ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ 
					ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииБУ Тогда
						
					Элементы.ГруппаРасходыНУ.Заголовок = 
						?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"),
							НСтр("ru = 'Амортизация / Включение в расходы (налоговый учет)';
								|en = 'Depreciation / Inclusion in expenses (tax accounting)'"),
							НСтр("ru = 'Амортизация (налоговый учет)';
								|en = 'Depreciation (tax accounting)'"));
				Иначе
					
					Элементы.ГруппаРасходыНУ.Заголовок = 
						?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы"),
							НСтр("ru = 'Амортизация / Включение в расходы';
								|en = 'Depreciation / Inclusion in expenses'"),
							НСтр("ru = 'Амортизация';
								|en = 'Depreciation'"));						
					
				КонецЕсли;
															
			Иначе

				Если ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииУУ 
					ИЛИ ПараметрыПринятияКУчетуНМА.ДоступныПараметрыАмортизацииНУ Тогда
					Элементы.ГруппаРасходыНУ.Заголовок = НСтр("ru = 'Списание расходов (налоговый учет)';
																|en = 'Expense write-off (tax accounting)'");
				Иначе
					Элементы.ГруппаРасходыНУ.Заголовок = НСтр("ru = 'Списание расходов';
																|en = 'Expense write-off'");
				КонецЕсли; 
															
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
			
			Элементы.ГруппаРасходыУУ.Заголовок = 
				?(ДоступныНастройкиРеглУчета,
					НСтр("ru = 'Списание на расходы (управленческий учет)';
						|en = 'Write-off for expenses (management accounting)'"),
					НСтр("ru = 'Списание на расходы';
						|en = 'Write off as expenses'"));
			
		Иначе
			
			Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
				
				Элементы.ГруппаРасходыУУ.Заголовок = 
					?(ДоступныНастройкиРеглУчета,
						НСтр("ru = 'Амортизация (управленческий учет)';
							|en = 'Depreciation (management accounting)'"),
						НСтр("ru = 'Амортизация';
							|en = 'Depreciation'"));
						
			Иначе

				Элементы.ГруппаРасходыУУ.Заголовок = 
					?(ДоступныНастройкиРеглУчета, 
						НСтр("ru = 'Списание расходов (управленческий учет)';
							|en = 'Expense write-off (management accounting)'"), 
						НСтр("ru = 'Списание расходов';
							|en = 'Expense write-off'"));
						
			КонецЕсли;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.СтраницаОтражениеРасходов.Заголовок = ?(
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации,
			НСтр("ru = 'Отражение доходов и расходов';
				|en = 'Record income and expenses'"),
			НСтр("ru = 'Отражение расходов';
				|en = 'Record expenses'"));
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетВНАПоНалогообложениюНДС", Форма.РаздельныйУчетВНАПоНалогообложениюНДС);
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", Форма.ПоддержкаПБУ18);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.ВедетсяУчетПостоянныхИВременныхРазниц);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(ИзмененныеРеквизиты, Объект, ПараметрыРеквизита) Экспорт

	//++ Локализация
	
	#Область СтраницаОсновное
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантРаздельногоУчетаНДС" Тогда
		Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС");
		ИзмененныеРеквизиты.Добавить("ВариантРаздельногоУчетаНДС");
		ИзмененныеРеквизиты.Добавить("НалогообложениеНДС");
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НалогообложениеНДС" Тогда
		Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС");
		ИзмененныеРеквизиты.Добавить("НалогообложениеНДС");
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантПримененияЦелевогоФинансирования" Тогда
		Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = Истина;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов(Форма, СтруктураИзмененныхРеквизитов) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	ЭтоИнвентаризация = Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации");
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
			И ЭтоИнвентаризация
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
		
		Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
		СтруктураИзмененныхРеквизитов.Вставить("ВариантПримененияЦелевогоФинансирования");
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		И ЭтоИнвентаризация Тогда
			
		Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		СтруктураИзмененныхРеквизитов.Вставить("ВидОбъектаУчета");
		
		Если Форма.ПлательщикНалогаНаПрибыль Тогда
			Объект.ПервоначальнаяСтоимостьНУ = Объект.ПервоначальнаяСтоимостьБУ;
		КонецЕсли;
		Объект.ПервоначальнаяСтоимостьПР = 0;
		Объект.ПервоначальнаяСтоимостьВР = 0;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования") Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислениеАмортизацииИлиСписаниеНаРасходы")
			И (ЭтоИнвентаризация
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")) Тогда
					
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
			СтруктураИзмененныхРеквизитов.Вставить("ПорядокУчетаНУ");
		КонецЕсли;
	
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		Если Не Форма.ЕстьСвязанныеОрганизации Тогда
			Объект.ПередаватьРасходыВДругуюОрганизацию = Ложь;
			СтруктураИзмененныхРеквизитов.Вставить("ПередаватьРасходыВДругуюОрганизацию");
		КонецЕсли;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Процедура ПересчитатьСуммуВР(Форма) Экспорт

	Если (Форма.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации")
			ИЛИ НЕ Форма.СлужебныеПараметрыФормы.ЕстьУчетСебестоимости)
		И Форма.ПоддержкаПБУ18 Тогда
		
		Форма.Объект.ПервоначальнаяСтоимостьВР = 
				Форма.Объект.ПервоначальнаяСтоимостьБУ 
				- Форма.Объект.ПервоначальнаяСтоимостьНУ 
				- Форма.Объект.ПервоначальнаяСтоимостьПР;
				
	КонецЕсли; 

КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
