////////////////////////////////////////////////////////////////////////////////
// Модуль содержит методы, касающиеся управления НСИ.
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Функция проверяет, контролируется ли указанный справочник системой управления НСИ.
//
// Параметры:
//  СправочникМетаданные - ОбъектМетаданных: Справочник - Справочник, который необходимо проверить.
// 
// Возвращаемое значение:
//  Булево - Истина, если справочник контролируется системой НСИ.
//
Функция ЭтоКонтролируемыйСправочник(СправочникМетаданные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Контролируется
	|ИЗ
	|	Справочник.СправочникиБД КАК СправочникиБД
	|ГДЕ
	|	СправочникиБД.Владелец = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ТекущаяИБ)
	|	И СправочникиБД.Наименование = &Наименование
	|	И СправочникиБД.Контролируемый";

	Запрос.УстановитьПараметр("Наименование", СправочникМетаданные.Имя);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Функция возвращает данные объекта НСИ
//
// Параметры:
//  ИмяОбъекта	 - Строка - Имя объекта метаданных, для которого требуется получить параметры.
// 
// Возвращаемое значение:
//  Структура, Неопределено - Структура параметров объекта НСИ, или Неопределено, если описание объекта не найдено.
//
Функция ПолучитьДанныеОбъектаНСИ(ИмяОбъекта) Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СправочникиБД.ЕстьРеквизитыНСИ КАК ЕстьРеквизитыНСИ,
	             |	СправочникиБД.ЕстьРеквизитНСИ_ВИБ КАК ЕстьРеквизитНСИ_ВИБ,
	             |	СправочникиБД.РазделятьПоОрганизациям КАК РазделятьПоОрганизациям,
	             |	СправочникиБД.Контролируемый КАК Контролируемый,
	             |	СправочникиБД.Согласуется КАК Согласуется,
	             |	СправочникиБД.Ссылка КАК Ссылка,
	             |	СправочникиБД.Наименование КАК Наименование,
	             |	ВЫБОР
	             |		КОГДА СправочникиБД.ВидИерархии = ЗНАЧЕНИЕ(Перечисление.ВидИерархии.ИерархияГруппИЭлементов)
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК УчитыватьГруппы
	             |ИЗ
	             |	Справочник.СправочникиБД КАК СправочникиБД
	             |ГДЕ
	             |	СправочникиБД.Наименование = &Наименование
	             |	И СправочникиБД.Владелец = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ТекущаяИБ)";
	
	Запрос.УстановитьПараметр("Наименование",ИмяОбъекта);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат=Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() Тогда
		Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат[0]);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
				 			 	
КонецФункции // ПолучитьДанныеОбъектаНСИ() 

Процедура УстановитьРеквизитыКонтроляНСИ(Объект, Отказ) Экспорт
	
	Если Объект.ОбменДанными.Загрузка=Истина Тогда
		
		Возврат;
		
	КонецЕсли;
		
	Если НЕ Объект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	УправлятьНСИ = ПолучитьФункциональнуюОпцию("УправлениеНСИ");
	
	Если НЕ УправлятьНСИ Тогда
		Возврат;
	КонецЕсли; 
	
	МетаданныеОбъекта=Объект.Метаданные();	
	ИмяОбъекта=МетаданныеОбъекта.Имя;

	ОписаниеОбъекта = УправлениеНСИ.ПолучитьДанныеОбъектаНСИ(ИмяОбъекта);
	
	Если ОписаниеОбъекта=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
			
	Если НЕ ОписаниеОбъекта.ЕстьРеквизитыНСИ Тогда
		
		Возврат;
		
	КонецЕсли;
			
	Если ОписаниеОбъекта.РазделятьПоОрганизациям Тогда
		ТекОрганизация = Объект.Организация;
	Иначе
		ТекОрганизация = Неопределено;
	КонецЕсли;
			
    ТребуетсяСогласованиеЭлементов = ОписаниеОбъекта.Контролируемый;
		
	ТипОбъектаКонсолидации="Справочник";
	ИмяОбъектаМетаданных=ИмяОбъекта;
		
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	
	КонтролироватьНСИ=ТребуетсяСогласованиеЭлементов И (НЕ Объект.ОбменДанными.Загрузка);
	
	Если КонтролироватьНСИ Тогда
		
		ТекстОшибки=ПроверитьКонтролируемыеРеквизитыОбъекта(Объект,ОписаниеОбъекта);
		
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Запись объекта отменена по причине:
			|%1'"), ТекстОшибки),Отказ,,СтатусСообщения.Внимание);
			
			Возврат
			
		КонецЕсли;
		
		Исполнители = УправлениеОтчетамиУХ.ПолучитьОтветственногоЗаТипОбъекта(Документы.ЗаявкаНаИзменениеНСИ.ПустаяСсылка(),ТекОрганизация,ОписаниеОбъекта.Ссылка,"Исполнитель", Истина);
		Согласующие = УправлениеОтчетамиУХ.ПолучитьОтветственногоЗаТипОбъекта(Документы.ЗаявкаНаИзменениеНСИ.ПустаяСсылка(),ТекОрганизация,ОписаниеОбъекта.Ссылка,"Согласующий", Истина);
				
	КонецЕсли;
		
	Если НЕ Объект.ЭтоНовый() Тогда // Проверим возможность записи измененного объекта
		
		Если НЕ КонтролироватьНСИ Тогда	
			
			УстановитьОтметкуРедактирования(Объект,ТекущийПользователь);
			УстановитьПривилегированныйРежим(Ложь);
			Возврат;
			
		Иначе	
							
			Если Объект.НСИ_НеАктивный 
				ИЛИ Согласующие.Найти(ТекущийПользователь) <> Неопределено Тогда			
				УстановитьОтметкуРедактирования(Объект,ТекущийПользователь);
			Иначе
				ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Объект контролируется системой ЦНСИ.
				|Для изменения воспользуйтесь заявкой на изменение НСИ.'"),Отказ,,СтатусСообщения.Внимание);
			КонецЕсли;
			
		КонецЕсли;
						
	Иначе
		
		Если КонтролироватьНСИ Тогда
				
			Если Исполнители.Найти(ТекущийПользователь) <> Неопределено ИЛИ Исполнители.Количество() = 0 Тогда
							
				Объект.НСИ_Автор=ТекущийПользователь;
				Объект.НСИ_ДатаИзменения=ТекущаяДата();
				Объект.НСИ_ПоследнийРедактировавший=ТекущийПользователь;
				
				Объект.НСИ_НеАктивный = (Согласующие.Найти(ТекущийПользователь) = Неопределено);
								
			Иначе	
				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Текущий пользователь не имеет права создавать объект %1'"), 
					Объект),Отказ,,СтатусСообщения.Внимание);
				
				УстановитьПривилегированныйРежим(Ложь);
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОписаниеОбъекта.ЕстьРеквизитНСИ_ВИБ
			И ЗначениеЗаполнено(Объект.НСИ_ВИБ) 
			И Объект.НСИ_ВИБ.НСИ_ТребуетСинхронизации Тогда
			
			Объект.НСИ_ТребуетСинхронизации=Истина;
			Объект.НСИ_НеАктивный=Истина;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // УстановитьРеквизитыКонтроляНСИ()

Процедура УстановитьОтметкуРедактирования(Объект,ТекущийПользователь) Экспорт
	
	Объект.НСИ_ДатаИзменения=ТекущаяДата();
	Объект.НСИ_ПоследнийРедактировавший=ТекущийПользователь;
		
КонецПроцедуры // УстановитьОтметкуРедактирования() 

Функция ПроверитьКонтролируемыеРеквизитыОбъекта(Объект,Знач ОписаниеОбъекта=Неопределено) Экспорт
	
	Если ОписаниеОбъекта=Неопределено Тогда
				
		ОписаниеОбъекта = УправлениеНСИ.ПолучитьДанныеОбъектаНСИ(Объект.Метаданные().Имя);
		
		Если ОписаниеОбъекта=Неопределено Тогда
			
			Возврат "";
			
		КонецЕсли;
		
	КонецЕсли;
			
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СправочникиБДРеквизиты.Имя,
	|	СправочникиБДРеквизиты.Обязательный,
	|	СправочникиБДРеквизиты.КонтрольУникальности,
	|	СправочникиБДРеквизиты.Синоним
	|ИЗ
	|	Справочник.СправочникиБД.Реквизиты КАК СправочникиБДРеквизиты
	|ГДЕ
	|	СправочникиБДРеквизиты.Ссылка = &Ссылка
	|	И (СправочникиБДРеквизиты.Обязательный
	|			ИЛИ СправочникиБДРеквизиты.КонтрольУникальности)";
	
	Если ОписаниеОбъекта.УчитыватьГруппы И Объект.ЭтоГруппа Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И (СправочникиБДРеквизиты.Использование=ЗНАЧЕНИЕ(Перечисление.ИспользованиеРеквизита.ДляГруппы)
		|ИЛИ СправочникиБДРеквизиты.Использование=ЗНАЧЕНИЕ(Перечисление.ИспользованиеРеквизита.ДляГруппыИЭлемента))";
		
	Иначе
		
		Запрос.Текст=Запрос.Текст+"
		|И (НЕ СправочникиБДРеквизиты.Использование=ЗНАЧЕНИЕ(Перечисление.ИспользованиеРеквизита.ДляГруппы))";
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Ссылка",ОписаниеОбъекта.Ссылка);
	
	ТабКонтролируемыхРеквизитов=Запрос.Выполнить().Выгрузить();
	
	Если ТабКонтролируемыхРеквизитов.Количество()=0 Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	ЗапросУникальность=Новый Запрос;
	ТекстОтбор="";
	ТекстНезаполненныеРеквизиты="";
	ТекстУникальныеРеквизиты="";
	
	Для Каждого Строка ИЗ ТабКонтролируемыхРеквизитов Цикл
		
		Если Строка.Обязательный И НЕ ЗначениеЗаполнено(Объект[Строка.Имя]) Тогда
			
			ТекстНезаполненныеРеквизиты=ТекстНезаполненныеРеквизиты+Символы.ПС+Строка.Синоним;
			
		КонецЕсли;
		
		Если Строка.КонтрольУникальности Тогда
			
			ТекстОтбор=ТекстОтбор+"КонтролируемыйОбъект."+Строка.Имя+"=&"+Строка.Имя+" И ";
			ТекстУникальныеРеквизиты=ТекстУникальныеРеквизиты+Символы.ПС+Строка.Синоним+": "+Объект[Строка.Имя];
			ЗапросУникальность.УстановитьПараметр(Строка.Имя,Объект[Строка.Имя]);
			
		КонецЕсли;
		
	КонецЦикла;
		
	Если НЕ ПустаяСтрока(ТекстНезаполненныеРеквизиты) Тогда
		
		Возврат НСтр("ru='При записи элемента справочника обнаружены следующие незаполненные реквизиты, отмеченные как обязательные: '")+ТекстНезаполненныеРеквизиты;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстОтбор) Тогда
		Возврат "";
	КонецЕсли;
	
	ЗапросУникальность.Текст="ВЫБРАТЬ Первые 1
	|	КонтролируемыйОбъект.Ссылка
	|ИЗ
	|	Справочник."+ОписаниеОбъекта.Наименование+" КАК КонтролируемыйОбъект
	|ГДЕ "+ТекстОтбор+"
	|	КонтролируемыйОбъект.Ссылка <> &Ссылка";
	
	ЗапросУникальность.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Результат=ЗапросУникальность.Выполнить();
		
	Если НЕ Результат.Пустой() Тогда
		
		Возврат НСтр("ru='В базе данных уже присутствует запись с уникальными реквизитами: '")+ТекстУникальныеРеквизиты;
		
	КонецЕсли;	
	
КонецФункции // ПолучитьТаблицуКонтролируемыхРеквизитов()

Процедура ОтметитьИзменениеКонтролируемогоЭлемента(Объект, Отказ) Экспорт
	
	Если Объект.ОбменДанными.Загрузка=Истина Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	УправлятьНСИ = КэшируемыеПроцедурыУХ.ИспользоватьУправлениеНСИ();
	
	Если НЕ УправлятьНСИ Тогда
		Возврат;
	КонецЕсли;

	МетаданныеОбъекта = Объект.Метаданные();
		
	ИмяОбъекта = МетаданныеОбъекта.Имя;
	
	ТекОбъект = Справочники.СправочникиБД.НайтиПоНаименованию(ИмяОбъекта,,, Справочники.ТипыБазДанных.ТекущаяИБ);

	Если НЕ ТекОбъект.Контролируемый Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъектаКонсолидации="Справочник";
	ИмяОбъектаМетаданных=ИмяОбъекта;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнешниеИнформационныеБазы.Ссылка КАК ИспользуемаяИБ,
	|	НастройкиСоответствия.НастройкаСоответствия
	|ИЗ
	|	Справочник.ВнешниеИнформационныеБазы КАК ВнешниеИнформационныеБазы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СоответствиеВнешнимИБ.Владелец КАК Владелец,
	|			СоответствиеВнешнимИБ.Ссылка КАК НастройкаСоответствия
	|		ИЗ
	|			Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СправочникиБД КАК СправочникиБД
	|				ПО (СоответствиеВнешнимИБ.ТипОбъектаКонсолидации = ""Справочник"")
	|					И СоответствиеВнешнимИБ.ИмяОбъектаМетаданных = СправочникиБД.Наименование
	|					И (СправочникиБД.Владелец = &ТекущаяИБ)
	|		ГДЕ
	|			СоответствиеВнешнимИБ.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|			И СоответствиеВнешнимИБ.ТипОбъектаКонсолидации = &ТипОбъектаКонсолидации
	|			И НЕ СоответствиеВнешнимИБ.Владелец.ВерсияПлатформы = &Платформа77
	|			И СправочникиБД.Контролируемый = ИСТИНА
	|			И НЕ СоответствиеВнешнимИБ.ПометкаУдаления) КАК НастройкиСоответствия
	|		ПО ВнешниеИнформационныеБазы.ТипБД = НастройкиСоответствия.Владелец
	|ГДЕ
	|	ВнешниеИнформационныеБазы.ЭкспортироватьЭлементыНСИ
	|	И НЕ ВнешниеИнформационныеБазы.ПометкаУдаления";
	
	Если Объект.ЭтоНовый() И ЗначениеЗаполнено(Объект.НСИ_ВИБ) Тогда // Нет необходимости выгрузки в ИБ справочника, только что загруженного из нее же
		Запрос.Текст=Запрос.Текст+"
		|И (НЕ ВнешниеИнформационныеБазы.Ссылка=&БазаЗагрузки)";
		
		Запрос.УстановитьПараметр("БазаЗагрузки",Объект.НСИ_ВИБ);
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ТекущаяИБ",Справочники.ТипыБазДанных.ТекущаяИБ);
	Запрос.УстановитьПараметр("ТипОбъектаКонсолидации",ТипОбъектаКонсолидации);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных",ИмяОбъектаМетаданных);
	Запрос.УстановитьПараметр("Платформа77",Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие77);
	
	Результат=Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей=РегистрыСведений.ИзмененныеОбъектыДляВыгрузки.СоздатьНаборЗаписей();

	ТаблицаВИБ=Результат.Выбрать();
	
	Пока ТаблицаВИБ.Следующий() Цикл
		
		НаборЗаписей.Отбор.НастройкаСоответствия.Установить(ТаблицаВИБ.НастройкаСоответствия);
		НаборЗаписей.Отбор.ИспользуемаяИБ.Установить(ТаблицаВИБ.ИспользуемаяИБ);
		НаборЗаписей.Отбор.Элемент.Установить(Объект.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()=0 Тогда
			
			НоваяСтрока=НаборЗаписей.Добавить();
			НоваяСтрока.ИспользуемаяИБ=ТаблицаВИБ.ИспользуемаяИБ;
			НоваяСтрока.НастройкаСоответствия=ТаблицаВИБ.НастройкаСоответствия;
			НоваяСтрока.Элемент=Объект.Ссылка;
			
			НаборЗаписей.Записать();
						
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ОтметитьИзменениеКонтролируемогоЭлемента()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//Код процедур и функций
#КонецОбласти
