
// Создает справочник Претензия по одной или нескольким заказам поставщику.
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются документы
//	ИмяДокумента - Строка - имя документа в метаданных, который будет создан на основании заявок.
//
Процедура СоздатьСправочникПретензииНаОснованииЗаказаПоставщику(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	ОчиститьСообщения();
	Основание = МассивСсылок;
	Если ТипЗнч(МассивСсылок) = Тип("Массив") Тогда
		Если МассивСсылок.Количество() > 0 Тогда
			Основание = МассивСсылок[0];
		Иначе
			Основание = ПредопределенноеЗначение("Документ.ЗаказПоставщику.ПустаяСсылка");
		КонецЕсли;
	Иначе
		Основание = МассивСсылок;
	КонецЕсли;
	ИмяФормы = "Справочник.Претензии.ФормаОбъекта";
	ОткрытьФорму(ИмяФормы, Новый Структура("Основание", Основание));
	
КонецПроцедуры		// СоздатьСправочникПретензииНаОснованииЗаказаПоставщику()

// Создает справочник Претензия по одной или нескольким Возвратов Товаров Поставщику.
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются документы
//	ИмяДокумента - Строка - имя документа в метаданных, который будет создан на основании заявок.
//
Процедура СоздатьСправочникПретензииНаОснованииВозвратаТоваровПоставщику(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	ОчиститьСообщения();
	Основание = МассивСсылок;
	Если ТипЗнч(МассивСсылок) = Тип("Массив") Тогда
		Если МассивСсылок.Количество() > 0 Тогда
			Основание = МассивСсылок[0];
		Иначе
			Основание = ПредопределенноеЗначение("Документ.ВозвратТоваровПоставщику.ПустаяСсылка");
		КонецЕсли;
	Иначе
		Основание = МассивСсылок;
	КонецЕсли;
	ИмяФормы = "Справочник.Претензии.ФормаОбъекта";
	ОткрытьФорму(ИмяФормы, Новый Структура("Основание", Основание));
	
КонецПроцедуры		// СоздатьСправочникПретензииНаОснованииВозвратаТоваровПоставщику()
