
#Область ПрограммныйИнтерфейс

Функция СформироватьРасшифровкуКонтроля(СтрокаКонтроля) Экспорт
	
	Проверка = КонтрольУХПовтИсп.ПроверкаПоВидуКонтроля(СтрокаКонтроля.ВидКонтроля);
	Если НЕ ЗначениеЗаполнено(Проверка) Тогда
		Возврат неопределено;
	КонецЕсли;
	
	Возврат Проверка.Объект.СформироватьРасшифровкуКонтроля(Проверка, СтрокаКонтроля);
	
КонецФункции

Процедура ВыполнитьИнтерактивныйКонтроль(Знач Объект, ПараметрыКонтроля) Экспорт
	
	ПараметрыКонтроля.Вставить("Документ",	Объект.Ссылка);
	ПараметрыКонтроля.Вставить("ИмяДокумента", Объект.Ссылка.Метаданные().Имя);
	ПараметрыКонтроля.Вставить("Источники", КонтрольУХ.ПолучитьИсточникиДокумента(Объект));
	ПараметрыКонтроля.Вставить("РеквизитыКонтроляВДокументе", КонтрольУХ.ТипыДокументовИсключенияДляПодключаемойКоманды());
	
	Если ПараметрыКонтроля.Источники <> неопределено Тогда
		КонтрольУХ.ВыполнитьКонтрольИнтерактивно(ПараметрыКонтроля);
	Иначе
		РеквизитыДокумента = Новый Структура;
		// Обнуляем значения реквизитов документа
		Для Каждого Проверка Из КонтрольУХПовтИсп.ЗарегистрированныеПроверки(ПараметрыКонтроля.ИмяДокумента) Цикл
			Если ЗначениеЗаполнено(Проверка.ИмяРеквизита) Тогда
				РеквизитыДокумента.Вставить(Проверка.ИмяРеквизита, Ложь);
			КонецЕсли;
		КонецЦикла;
		
		// Установка признака наличия превышений в документе
		РеквизитыЭлементы = КонтрольУХКлиентСервер.ИменаРеквизитовЭлементовКонтроля();
		РеквизитыДокумента.Вставить(РеквизитыЭлементы.ЕстьНарушения, Ложь);
		ПараметрыКонтроля.Вставить("РеквизитыДокумента", РеквизитыДокумента);
		
	КонецЕсли;
	
	ПараметрыКонтроля.Удалить("Источники");
	
КонецПроцедуры

#КонецОбласти

