////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Объединение ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.СлужебныеПараметрыФормы.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", Форма.СлужебныеПараметрыФормы.ТребуетсяНастройкаОтраженияРасходовПоНалогам);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетВНАПоНалогообложениюНДС", Форма.СлужебныеПараметрыФормы.РаздельныйУчетВНАПоНалогообложениюНДС);
	ВспомогательныеРеквизиты.Вставить("ГруппаОС", Форма.СлужебныеПараметрыФормы.ГруппаОС);
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", Форма.СлужебныеПараметрыФормы.ИспользоватьРеглУчет);
	ВспомогательныеРеквизиты.Вставить("ПорядокУчетаБУ", Форма.СлужебныеПараметрыФормы.ПорядокУчетаБУ);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяФСБУ6", Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыОбъединенияОС = ВнеоборотныеАктивыКлиентСервер.ПараметрыОбъединенияОС(Объект, ВспомогательныеРеквизиты);
	
	ДоступныНастройкиРеглУчета = (Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
	
	#Область СтраницаУчет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.СрокИспользованияОстаточныйБУ_ОбъединениеОднотипныхОС.Заголовок = 
			?(НЕ Объект.ОтражатьВУпрУчете,
				НСтр("ru = 'Остаточный срок';
					|en = 'Residual period'"),
				НСтр("ru = 'Остаточный срок (БУ)';
					|en = 'Residual lifetime (AC)'"));
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияОстаточныйБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияОстаточныйБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияОстаточныйБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаУчетУУ.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОбъединениеОднотипныхОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
	
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ"), 
			ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ"));
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеВидно = НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПоказатьПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОССрокИспользованияБУ.Видимость = Форма.ПоказатьПараметрыУчета И Объект.ОтражатьВРеглУчете;
		Элементы.ОСОстаточныйСрокИспользованияБУ.Видимость = Форма.ПоказатьПараметрыУчета И Объект.ОтражатьВРеглУчете;
		Элементы.ОСМетодНачисленияАмортизацииБУ.Видимость = Форма.ПоказатьПараметрыУчета И Объект.ОтражатьВРеглУчете;
		
		Элементы.ОССрокИспользованияНУ.Видимость = 
			Форма.ПоказатьПараметрыУчета 
			И Объект.ОтражатьВРеглУчете
			И Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль;
		
		Элементы.ОСОстаточныйСрокИспользованияНУ.Видимость = 
			Форма.ПоказатьПараметрыУчета 
			И Объект.ОтражатьВРеглУчете
			И Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль;
		
		Элементы.ОСНалогообложениеНДС.Видимость = 
			Форма.ПоказатьПараметрыУчета 
			И Объект.ОтражатьВРеглУчете
			И Форма.СлужебныеПараметрыФормы.РаздельныйУчетВНАПоНалогообложениюНДС;
			
		Если Объект.ОтражатьВРеглУчете 
				И Форма.ВедетсяРегламентированныйУчетВНА
				И Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль
			ИЛИ Объект.ОтражатьВРеглУчете
				И Объект.ОтражатьВУпрУчете Тогда
				
			Элементы.ОССрокИспользованияБУ.Заголовок = НСтр("ru = 'БУ';
															|en = 'BKG'");
			Элементы.ОСОстаточныйСрокИспользованияБУ.Заголовок = НСтр("ru = 'БУ';
																		|en = 'BKG'");
			Элементы.ОСГруппаСПИ.ОтображатьВШапке = Истина;
			Элементы.ОСГруппаОстаточныйСПИ.ОтображатьВШапке = Истина;
			
		Иначе
			Элементы.ОССрокИспользованияБУ.Заголовок = НСтр("ru = 'Срок использования, мес';
															|en = 'Useful life, months'");
			Элементы.ОСОстаточныйСрокИспользованияБУ.Заголовок = НСтр("ru = 'Остаточный срок использования, мес';
																		|en = 'Residual useful life, months'");
			Элементы.ОСГруппаСПИ.ОтображатьВШапке = Ложь;
			Элементы.ОСГруппаОстаточныйСПИ.ОтображатьВШапке = Ложь;
		КонецЕсли; 			
		
		Элементы.ОСМетодНачисленияАмортизацииБУ.Заголовок = 
			?(Объект.ОтражатьВУпрУчете И Форма.ВедетсяРегламентированныйУчетВНА,
				НСтр("ru = 'БУ';
					|en = 'BKG'"),
				НСтр("ru = 'Метод начисления амортизации';
					|en = 'Accrual method of accounting'"));
		
		Элементы.ОСУзлыКомпонентыСрокИспользованияБУ.Видимость = Элементы.ОССрокИспользованияБУ.Видимость;
		Элементы.ОСУзлыКомпонентыОстаточныйСрокИспользованияБУ.Видимость = Элементы.ОСОстаточныйСрокИспользованияБУ.Видимость;
		Элементы.ОСУзлыКомпонентыМетодНачисленияАмортизацииБУ.Видимость = Элементы.ОСМетодНачисленияАмортизацииБУ.Видимость;
		Элементы.ОСУзлыКомпонентыСрокИспользованияНУ.Видимость = Элементы.ОССрокИспользованияНУ.Видимость;
		Элементы.ОСУзлыКомпонентыОстаточныйСрокИспользованияНУ.Видимость = Элементы.ОСОстаточныйСрокИспользованияНУ.Видимость;
		Элементы.ОСУзлыКомпонентыНалогообложениеНДС.Видимость = Элементы.ОСНалогообложениеНДС.Видимость;
		
		Элементы.ОСУзлыКомпонентыСрокИспользованияБУ.Заголовок = Элементы.ОССрокИспользованияБУ.Заголовок;
		Элементы.ОСУзлыКомпонентыОстаточныйСрокИспользованияБУ.Заголовок = Элементы.ОСОстаточныйСрокИспользованияБУ.Заголовок;
		Элементы.ОСУзлыКомпонентыМетодНачисленияАмортизацииБУ.Заголовок = Элементы.ОСМетодНачисленияАмортизацииБУ.Заголовок;
		
		Элементы.ОСУзлыКомпонентыГруппаСПИ.ОтображатьВШапке = Элементы.ОСГруппаСПИ.ОтображатьВШапке;
		Элементы.ОСУзлыКомпонентыГруппаОстаточныйСПИ.ОтображатьВШапке = Элементы.ОСГруппаОстаточныйСПИ.ОтображатьВШапке;

	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ОтражатьВУпрУчете 
			И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
			
			Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.Заголовок = 
				?(ДоступныНастройкиРеглУчета, НСтр("ru = 'Отражение расходов (управленческий учет)';
													|en = 'Record expenses (management accounting)'"), НСтр("ru = 'Амортизация';
																											|en = 'Depreciation'"));
		Иначе	
			Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.Заголовок = 
				?(ДоступныНастройкиРеглУчета, НСтр("ru = 'Амортизация (управленческий учет)';
													|en = 'Depreciation (management accounting)'"), НСтр("ru = 'Амортизация';
																									|en = 'Depreciation'"));
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыОбъединенияОС.ДоступноОтражениеРасходовБУ 
			И ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский и налоговый учет)';
									|en = 'Depreciation (bookkeeping and tax accounting)'");
		ИначеЕсли ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (налоговый учет)';
									|en = 'Depreciation (tax accounting)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский учет)';
									|en = 'Depreciation (bookkeeping)'");
		КонецЕсли; 
		Элементы.ГруппаОтражениеРасходовПоАмортизацииРегл.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыОбъединенияОС.СтатьяРасходовУУОбязательна 
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовУУ) Тогда
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
			
		ИначеЕсли НЕ ПараметрыОбъединенияОС.СтатьяРасходовУУОбязательна Тогда
			Если ПараметрыОбъединенияОС.ДоступноОтражениеРасходовБУ 
				И ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским и налоговым учетом';
											|en = 'matches accounting and tax accounting'");
			ИначеЕсли ПараметрыОбъединенияОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с налоговым учетом';
											|en = 'matches tax accounting'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
											|en = 'matches accounting'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.ОтображатьЗаголовок = 
			(Объект.ОтражатьВУпрУчете И Объект.ОтражатьВРеглУчете);
	КонецЕсли;
		
	#КонецОбласти
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов(Объект, ВспомогательныеРеквизиты, СписокРеквизитов) Экспорт
	
	//++ Локализация
	
	Если СписокРеквизитов.Найти("Дата") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено Тогда
		
		Если НЕ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли; 
		
		Если ВспомогательныеРеквизиты.ПрименяетсяФСБУ6
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования") 
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")) Тогда
					
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
			СписокРеквизитов.Добавить("МетодНачисленияАмортизацииБУ");
		КонецЕсли;

	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ОсновноеСредство") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОбъединениеОднотипныхОС") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Дата") <> Неопределено Тогда
	
		Если ВспомогательныеРеквизиты.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И НЕ Объект.ОбъединениеОднотипныхОС Тогда
			
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
			СписокРеквизитов.Добавить("ПорядокУчетаБУ,ПорядокУчетаНУ");
			
		ИначеЕсли ВспомогательныеРеквизиты.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И НЕ Объект.ОбъединениеОднотипныхОС Тогда
			
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			СписокРеквизитов.Добавить("ПорядокУчетаБУ,ПорядокУчетаНУ");
			
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти
