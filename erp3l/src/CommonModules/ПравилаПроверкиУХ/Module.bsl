
// Проверяет текущие значения показателей по указанному правилу проверки.
// ОбъектРасчета: структура, содержащая:
//	- ключевые реквизиты
//  - правило проверки
//	- мПоказатели: таблица текущих синтетических значений показателей с колонками:
//		- Ссылка (ссылка на показатель)
//		- ПериодОтчета (в случае проверки по нескольким периодам) 
//		- Наименование - (наименование показателя)
//		- Значение (текущее значение показателя)
//	- мПоказателиРаскрытия: таблица текущих аналитических раскрытий с колонками:
//		- Показатель (ссылка на показатель)
//		- ПериодОтчета (в случае проверки по нескольким периодам) 
//		- Аналитика1
//		- Аналитика2
//		- Аналитика3
//		- Аналитика4
//		- Аналитика5
//		- Аналитика6
//		- АналитикаВалюта
//		- Значение (текущее значение строки аналитического раскрытия)
//
// Возвращаемое значение: структура, содаржащая:
// 	- Протокол: табличный документ с результатом проверки
//	- СтатусПроверки: истина, если проверка пройдена, или ложь
//
Функция Проверить(ОбъектРасчета,ПротоколироватьОшибки=Ложь,РежимВывода="",СтруктураВозврата=Неопределено) Экспорт
	
	Перем ТаблДок;
		
	СтруктураВозврата=Новый Структура;
	СтруктураВозврата.Вставить("СтатусПроверки",Истина);
	СтруктураВозврата.Вставить("Протокол",		Новый ТабличныйДокумент);
	
	Если Не ЗначениеЗаполнено(ОбъектРасчета.ПравилоПроверки) Тогда
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если ОбъектРасчета.Свойство("АнализЧувствительности") И ОбъектРасчета.АнализЧувствительности Тогда // Не выполняем проверку, т.к. показатели по совокупности могут быть неконсистентны
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
		
	ТабПротоколаПроверок=Новый ДеревоЗначений;
	ТабПротоколаПроверок.Колонки.Добавить("ТекстОшибки");
	ТабПротоколаПроверок.Колонки.Добавить("ПериодОтчета");
	ТабПротоколаПроверок.Колонки.Добавить("ПоказательИсточник");
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТабПротоколаПроверок.Колонки.Добавить("Аналитика"+Индекс);
		
	КонецЦикла;
	
	ТабПротоколаПроверок.Колонки.Добавить("ЭтоСинтетика");
    ТабПротоколаПроверок.Колонки.Добавить("ТекущееЗначение");
    ТабПротоколаПроверок.Колонки.Добавить("КонтрольноеЗначение");
    ТабПротоколаПроверок.Колонки.Добавить("Описание");
    ТабПротоколаПроверок.Колонки.Добавить("РезультатРасчета");
	
	Если НЕ ОбъектРасчета.Свойство("МассивПериодов") Тогда
		
		ОбъектРасчета.Вставить("МассивПериодов",УправлениеОтчетамиУХ.ПолучитьМассивПериодов(ОбъектРасчета));
		
	КонецЕсли;
 	
	СтатусПроверки = ПроверитьКонтролируемыеПоказатели(ОбъектРасчета, ПротоколироватьОшибки, ТабПротоколаПроверок);
		
	Если НЕ СтатусПроверки Тогда
		ТекстСообщения = НСтр("ru = 'Проверка отчета не пройдена. Организационная единица: ""%Организация%""; период: %ПериодОтчета%; сценарий: %Сценарий%; вид отчета: %ВидОтчета%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%",	 ОбъектРасчета.Организация);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПериодОтчета%",	 ОбъектРасчета.ПериодОтчета);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сценарий%",		 ОбъектРасчета.Сценарий);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидОтчета%",		 ОбъектРасчета.ВидОтчета);
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, , , СтатусСообщения.Важное);
	КонецЕсли;
	
	ТабДокПротокол = ПолучитьПротоколПроверки(ОбъектРасчета,СтатусПроверки,ТабПротоколаПроверок,РежимВывода);
	СтруктураВозврата.Вставить("Протокол", ТабДокПротокол);
	СтруктураВозврата.Вставить("СтатусПроверки", СтатусПроверки);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Процедура отрабатывает при расчете контрольных соотношений
//
Функция ПроверитьКонтролируемыеПоказатели(ОбъектРасчета,ПротоколироватьОшибки=Ложь,ТабПротоколаПроверок)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПоказательОтчета,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ВидСравнения,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.КонтрольноеЗначение,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПроверятьСтрокиАналитическогоРаскрытия,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.Описание,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПорядокУстранения,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.УровеньКритичности,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПоказательОтчета.Описание КАК ОписаниеПоказатель,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПоказательОтчета.ПорядокУстранения КАК ПорядокУстраненияПоказатель,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПоказательОтчета.УровеньКритичности КАК УровеньКритичностиПоказатель,
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПроверятьСинтетическиеЗначения
	|ИЗ
	|	Справочник.ПравилаПроверки.КонтролируемыеПоказателиОтчетов КАК ПравилаПроверкиКонтролируемыеПоказателиОтчетов
	|ГДЕ
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.Ссылка = &ПравилоПроверки";
	
	Запрос.УстановитьПараметр("ПравилоПроверки",ОбъектРасчета.ПравилоПроверки);
	
	ПроверкаПройдена=Истина;
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
				
		Если ОбъектРасчета.МассивПериодов.Количество()=1 Тогда
			
			ВыполнитьПроверкуПоказателей(ОбъектРасчета,Результат,ТабПротоколаПроверок,ПроверкаПройдена);
			
		Иначе
			
			Для Каждого ПериодОтчета ИЗ ОбъектРасчета.МассивПериодов Цикл
				
				ВыполнитьПроверкуПоказателей(ОбъектРасчета,Результат,ТабПротоколаПроверок,ПроверкаПройдена,ПериодОтчета);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПроверкаПройдена
	
КонецФункции // РассчитатьКонтрольныеСоотношения()

Процедура ВыполнитьПроверкуПоказателей(ОбъектРасчета,Результат,ТабПротоколаПроверок,ПроверкаПройдена,ПериодОтчета=Неопределено)
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("Ссылка",Результат.ПоказательОтчета);
	
	Если НЕ ПериодОтчета=Неопределено Тогда
		
		СтруктураПоиска.Вставить("ПериодОтчета",ПериодОтчета);
		
	КонецЕсли;
	
	 
	
	СтрПоказательСсылка 		= Результат.ПоказательОтчета;
	СтрПоказательНаименование 	= Результат.ПоказательОтчета.Наименование;
	
	СтрПоказатель=ОбъектРасчета.мПоказатели.НайтиСтроки(СтруктураПоиска);
	
	Если СтрПоказатель.Количество()>0 Тогда
		СтрПоказательЗначение 		= СтрПоказатель[0].Значение;
	Иначе	
		Если СтрПоказательСсылка.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда
			СтрПоказательЗначение 		= 0;
		ИначеЕсли СтрПоказательСсылка.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Строка Тогда	
			СтрПоказательЗначение 		= "";
		ИначеЕсли СтрПоказательСсылка.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Дата Тогда	
			СтрПоказательЗначение 		= Дата(1,1,1);	
		КонецЕсли;			
	КонецЕсли;	
	
	ТекОписание				=?(ПустаяСтрока(Результат.Описание)				, Результат.ОписаниеПоказатель,Результат.Описание);
	ТекПорядокУстранения	=?(ПустаяСтрока(Результат.ПорядокУстранения)	, Результат.ПорядокУстраненияПоказатель,Результат.ПорядокУстранения);
	ТекУровеньКритичности	=?(ПустаяСтрока(Результат.УровеньКритичности)	, Результат.УровеньКритичностиПоказатель,Результат.УровеньКритичности);
	
	Если Результат.ПроверятьСинтетическиеЗначения Тогда
		
		НовСтрПротокола=ТабПротоколаПроверок.Строки.Добавить();
		НовСтрПротокола.ПоказательИсточник=СтрПоказательСсылка;
		НовСтрПротокола.КонтрольноеЗначение=Строка(Результат.ВидСравнения)+" "+Результат.КонтрольноеЗначение;
		НовСтрПротокола.ТекущееЗначение=СтрПоказательЗначение;	
		НовСтрПротокола.Описание=Результат.Описание+" "+Результат.ПорядокУстранения;
		НовСтрПротокола.ПериодОтчета=?(ПериодОтчета=Неопределено,ОбъектРасчета.ПериодОтчета,ПериодОтчета);
		
		Если НЕ ПроверитьКонтрольныйПоказатель(СтрПоказательЗначение,Результат.КонтрольноеЗначение,Результат.ВидСравнения) Тогда
			
			ТекстОшибки = НСтр("ru = 'Не пройдено контрольное соотношение: %ПоказательНаименование%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПоказательНаименование%", Строка(СтрПоказательНаименование));
			
			Если НЕ Результат.КонтрольноеЗначение=Истина Тогда
				
				ТекстОшибки=ТекстОшибки+" "+Результат.ВидСравнения+" "+Результат.КонтрольноеЗначение;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекОписание) Тогда
				ТекстОшибки=ТекстОшибки+"
				|"+ТекОписание;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекПорядокУстранения) Тогда
				ТекстСпособУстранения = НСтр("ru = 'Способ устранения ошибки: %ПорядокУстранения%'");
				ТекстСпособУстранения = СтрЗаменить(ТекстСпособУстранения, "%ПорядокУстранения%", Строка(ТекПорядокУстранения));
				ТекстОшибки = ТекстОшибки + "
				|" + ТекстСпособУстранения;
			КонецЕсли;
			
			НовСтрПротокола.ТекстОшибки=ТекстОшибки;
			
			Если ТекУровеньКритичности=Перечисления.УровниКритичностиКонтрольныхСоотношений.Предупреждение Тогда
				
				ПротоколируемыеСобытияУХ.ДобавитьЗаписьПредупреждение("Документ.НастраиваемыйОтчет.МодульОбъекта.РассчитатьКонтрольныеСоотношения.1",,Результат.ПоказательОтчета,ТекстОшибки);
				
			Иначе
				
				ПротоколируемыеСобытияУХ.ДобавитьЗаписьОшибка("Документ.НастраиваемыйОтчет.МодульОбъекта.РассчитатьКонтрольныеСоотношения.1",,Результат.ПоказательОтчета,ТекстОшибки);
				ПроверкаПройдена=Ложь;
				
			КонецЕсли;
			
			НовСтрПротокола.РезультатРасчета="Ошибка";
			
		Иначе				
			НовСтрПротокола.РезультатРасчета="ОК";

		КонецЕсли;
		
				
	КонецЕсли;
	
	Если Результат.ПроверятьСтрокиАналитическогоРаскрытия Тогда
		
		СтруктураПоиска=Новый Структура("Показатель",Результат.ПоказательОтчета);
		
		Если НЕ ПериодОтчета=Неопределено Тогда
			
			СтруктураПоиска.Вставить("ПериодОтчета",ПериодОтчета);
			
		КонецЕсли;
		
		МассивРаскрытий = ОбъектРасчета.мПоказателиРаскрытия.НайтиСтроки(СтруктураПоиска);
		
		НовСтрПротокола=ТабПротоколаПроверок.Строки.Добавить();
		НовСтрПротокола.ТекстОшибки=ТекстОшибки;
		НовСтрПротокола.ПоказательИсточник=СтрПоказательСсылка;
		НовСтрПротокола.ПериодОтчета=?(ПериодОтчета=Неопределено,ОбъектРасчета.ПериодОтчета,ПериодОтчета);
		
		НовСтрПротокола.Описание=Результат.Описание+" "+Результат.ПорядокУстранения;
		
		Для Каждого СтрРаскрытие ИЗ МассивРаскрытий Цикл
			
			НовСтрАналитика=НовСтрПротокола.Строки.Добавить();
			НовСтрАналитика.КонтрольноеЗначение=Строка(Результат.ВидСравнения)+" "+Результат.КонтрольноеЗначение;
			НовСтрАналитика.ТекущееЗначение=СтрРаскрытие.Значение;
			
			Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
				
				НовСтрАналитика["Аналитика"+Индекс]=СтрРаскрытие["Аналитика"+Индекс];
				
			КонецЦикла;
							
			Если НЕ ПроверитьКонтрольныйПоказатель(СтрРаскрытие.Значение,Результат.КонтрольноеЗначение,Результат.ВидСравнения) Тогда
				
				ТекстОшибки = НСтр("ru = 'Не пройдена проверка одной или нескольких строк аналитического раскрытия: %ПоказательНаименование%'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПоказательНаименование%", Строка(СтрПоказательНаименование));
				
				Если НЕ Результат.КонтрольноеЗначение=Истина Тогда
					
					ТекстОшибки=ТекстОшибки+" "+Результат.ВидСравнения+" "+Результат.КонтрольноеЗначение;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ТекОписание) Тогда
					ТекстОшибки=ТекстОшибки+"
					|"+ТекОписание;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ТекПорядокУстранения) Тогда
					ТекстСпособУстранения = НСтр("ru = 'Способ устранения ошибки: %ПорядокУстранения%'");
					ТекстСпособУстранения = СтрЗаменить(ТекстСпособУстранения, "%ПорядокУстранения%", Строка(ТекПорядокУстранения));
					ТекстОшибки = ТекстОшибки + "
					|" + ТекстСпособУстранения;
				КонецЕсли;
				
				Если ТекУровеньКритичности=Перечисления.УровниКритичностиКонтрольныхСоотношений.Предупреждение Тогда
					
					ПротоколируемыеСобытияУХ.ДобавитьЗаписьПредупреждение("Документ.НастраиваемыйОтчет.МодульОбъекта.РассчитатьКонтрольныеСоотношения.2",,Результат.ПоказательОтчета,ТекстОшибки);
					
				Иначе
					
					ПротоколируемыеСобытияУХ.ДобавитьЗаписьОшибка("Документ.НастраиваемыйОтчет.МодульОбъекта.РассчитатьКонтрольныеСоотношения.2",,Результат.ПоказательОтчета,ТекстОшибки);
					ПроверкаПройдена=Ложь;
					
				КонецЕсли;
				
				НовСтрАналитика.РезультатРасчета="Ошибка";
				
				Продолжить;
				
			КонецЕсли;
			
			НовСтрАналитика.РезультатРасчета="ОК";
			
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры // ВыполнитьПроверкуПоказателей() 

Функция ПроверитьКонтрольныйПоказатель(ЗначениеПоказателя,КонтрольноеЗначение,ВидСравнения)
	
	ЗнакСравнения=Перечисления.ВидыСравнения.ВернутьЗнакСравненияПоВиду(ВидСравнения);
		
	Возврат Вычислить("ЗначениеПоказателя"+ЗнакСравнения+"КонтрольноеЗначение");
			
КонецФункции // ПроверитьКонтрольныйПоказатель() 

// Функция формирует табличный документ протокола отчета.
//
// Параметры:
//  РезультатПроверки  – Булево - результат метода Проверить()
//                
//  РежимВывода		   – Строка "ТолькоОшибочные", ""
//
// Возвращаемое значение:
//   ТабличныйДокумент - Результирующий документ.
//
Функция ПолучитьПротоколПроверки(ОбъектРасчета,РезультатПроверки,ТабПротоколаПроверок,РежимВывода = "") Экспорт
	
	Макет=Документы.НастраиваемыйОтчет.ПолучитьМакет("МакетКонтрольныеСоотношения");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.Очистить();
	
	ОбластьШапкаОтчета=Макет.ПолучитьОбласть("ШапкаОтчета");
	ОбластьШапкаКС=Макет.ПолучитьОбласть("ШапкаСоотношение");
	ОбластьСтрокаКС=Макет.ПолучитьОбласть("СтрокаСоотношение");
	ОбластьРеквизиты=Макет.ПолучитьОбласть("ОбластьРеквизиты");
	ОбластьАналитикаКС=Макет.ПолучитьОбласть("СтрокаАналитикиСоотношения");
	
	ТекстШапки=СокрЛП(ОбъектРасчета.Организация)+", "+?(ПустаяСтрока(ОбъектРасчета.ВидОтчета.ПолноеНаименование),ОбъектРасчета.ВидОтчета.Наименование,ОбъектРасчета.ВидОтчета.ПолноеНаименование);
	
	ОбластьШапкаОтчета.Параметры.ТекстШапка=ТекстШапки;
	ОбластьШапкаОтчета.Параметры.ТекстРезультат=?(РезультатПроверки,Нстр("ru = 'Ошибок не обнаружено.'"),Нстр("ru = 'Обнаружены ошибки!'"));
	ТабДокумент.Вывести(ОбластьШапкаОтчета);
	
	ВывестиОбластьРеквизита(Нстр("ru = 'Сценарий'"),ОбъектРасчета.Сценарий,ОбластьРеквизиты,ТабДокумент);
	ВывестиОбластьРеквизита(Нстр("ru = 'Валюта'"),ОбъектРасчета.ОсновнаяВалюта,ОбластьРеквизиты,ТабДокумент);
	
	Для Инд=1 По ОбъектРасчета.ЧислоДопАналитик Цикл
		
		Если ЗначениеЗаполнено(ОбъектРасчета["Аналитика" + Инд]) Тогда
			
			ВывестиОбластьРеквизита(СтрШаблон(Нстр("ru = 'Аналитика %1'"), Инд),ОбъектРасчета["Аналитика" + Инд],ОбластьРеквизиты,ТабДокумент);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДокумент.НачатьГруппуСтрок(,Ложь);
		
	Для Каждого ПериодОтчета ИЗ ОбъектРасчета.МассивПериодов Цикл
		
		ВывестиОбластьРеквизита(Нстр("ru = 'Период'"),ПериодОтчета,ОбластьРеквизиты,ТабДокумент);
		
		МассивСтрок=ТабПротоколаПроверок.Строки.НайтиСтроки(Новый Структура("ПериодОтчета",ПериодОтчета));
		
		ТабДокумент.Вывести(ОбластьШапкаКС);
		
		Для Каждого СтрСоотношение ИЗ МассивСтрок Цикл
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаКС.Параметры,СтрСоотношение);		
			
			Если СтрСоотношение.Строки.Количество()=0 Тогда
				ОбластьСтрокаКС.Область(0,4,0,4).ЦветТекста=?(СтрСоотношение.РезультатРасчета="ОК",Новый Цвет(0,255,0),Новый Цвет(255,0,0)); 
				ОбластьСтрокаКС.Область(0,5,0,5).ЦветТекста=?(СтрСоотношение.РезультатРасчета="ОК",Новый Цвет(0,255,0),Новый Цвет(255,0,0));
			КонецЕсли;	
			
			ТабДокумент.Вывести(ОбластьСтрокаКС);
			ТабДокумент.НачатьГруппуСтрок(,Ложь);
			
			Для Каждого СтрАналитика из СтрСоотношение.Строки Цикл 
				
				ЗаполнитьЗначенияСвойств(ОбластьАналитикаКС.Параметры,СтрАналитика);	  
				ОбластьАналитикаКС.Область(0,4,0,4).ЦветТекста=?(СтрАналитика.РезультатРасчета="ОК",Новый Цвет(0,255,0),Новый Цвет(255,0,0)); 
				ОбластьАналитикаКС.Область(0,5,0,5).ЦветТекста=?(СтрАналитика.РезультатРасчета="ОК",Новый Цвет(0,255,0),Новый Цвет(255,0,0));
				Если СтрАналитика.РезультатРасчета<>"ОК" Тогда
					ТабДокумент.Вывести(ОбластьАналитикаКС);
				КонецЕсли;
				
			КонецЦикла;
			
			ТабДокумент.ЗакончитьГруппуСтрок();
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДокумент.ЗакончитьГруппуСтрок();
	
	Возврат ТабДокумент;
	
КонецФункции // ПолучитьПротоколПроверки()

Процедура ВывестиОбластьРеквизита(ИмяРеквизита,ЗначениеРеквизита,ОбластьРеквизита,ТабДокумент)
	
	ОбластьРеквизита.Параметры.ИмяРеквизита=ИмяРеквизита+": ";
	ОбластьРеквизита.Параметры.ЗначениеРеквизита=ЗначениеРеквизита;
	
	ТабДокумент.Вывести(ОбластьРеквизита);
	
КонецПроцедуры // ВывестиОбластьРеквизита()

