
#Область СлужебныйПрограммныйИнтерфейс

// Процедура формирует измерения ключа в структуре ИнформацияОКлюче
Процедура ДобавитьИзмеренияКлюча(ПараметрыКлюча) Экспорт
	
	МассивИзмерений = Новый Массив;
	МассивОбязательныхИзмерений = Новый Массив;
	
	Измерения = Новый Соответствие;
	                      
	Для Каждого Реквизит Из ПараметрыКлюча.РегистрМетаданные.Измерения Цикл
		
		Измерение = Новый Структура;
		Измерение.Вставить("Имя", Реквизит.Имя);
		Измерение.Вставить("Тип", Реквизит.Тип);
		Измерение.Вставить("Обязательный", Реквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку);
		
		Если Реквизит.Тип.Типы().Количество() = 1 Тогда
			ТипИзмерения = Реквизит.Тип.Типы()[0];
			Если ТипИзмерения = Тип("Число") Тогда
				ПустоеЗначение = 0;
			Иначе
				ПустоеЗначение = Новый (Реквизит.Тип.Типы()[0]);
			КонецЕсли;
		Иначе
			ПустоеЗначение = неопределено;
		КонецЕсли;
		Измерение.Вставить("ПустоеЗначение", ПустоеЗначение);
		Измерение.Вставить("ПустоеЗначениеДляЗапроса", ПолучитьПустоеЗначениеДляЗапроса(ПустоеЗначение));
		
		//
		Измерения.Вставить(Измерение.Имя, Измерение);
		
		//
		МассивИзмерений.Добавить(Измерение.Имя);
		Если Измерение.Обязательный Тогда
			МассивОбязательныхИзмерений.Добавить(Измерение.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыКлюча.Вставить("Измерения", Измерения);
	ПараметрыКлюча.Вставить("мИзмерения", МассивИзмерений);
	ПараметрыКлюча.Вставить("сИзмерения", СтрСоединить(МассивИзмерений, ","));
	
	ПараметрыКлюча.Вставить("мИзмеренияОбязательные", МассивОбязательныхИзмерений);
	ПараметрыКлюча.Вставить("сИзмеренияОбязательные", СтрСоединить(МассивОбязательныхИзмерений, ","));
	
	ПараметрыКлюча.Вставить("СтруктураАналитики", Новый Структура(ПараметрыКлюча.сИзмерения));
	
КонецПроцедуры

// Функция получает элемент справочника - ключ аналитики контроля по договорам.
//
// Параметры:
//	ПараметрыАналитики - Выборка, Структура - Содержит полями "Контрагент, Организация, Договор, ВерсияСоглашения":
//		* Контрагент - СправочникСсылка.Контрагенты.
//		* Организация - СправочникСсылка.Организации.
//		* Договор - СправочникСсылка.ДоговорыКонтрагентов.
//		* ВерсияСоглашения - ДокументСсылка.ВерсияСоглашенияКоммерческийДоговор.
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиКонтроляПоДоговорам - Созданный элемент справочника.
//
Функция ЗначениеКлючаАналитики(ПараметрыКлюча, ПараметрыАналитики) Экспорт
	
	НаборЗаписей = ПолучитьНаборЗаписей(ПараметрыКлюча, ПараметрыАналитики);
	
	Если НаборЗаписей <> Неопределено Тогда
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() > 0
			И Не ЗначениеЗаполнено(НаборЗаписей[0].КлючАналитики) Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		КонецЕсли;

		Если НаборЗаписей.Количество() > 0
			И ЗначениеЗаполнено(НаборЗаписей[0].КлючАналитики) Тогда
			Результат = НаборЗаписей[0].КлючАналитики;
		Иначе
			Результат = СоздатьКлючАналитики(ПараметрыКлюча, ПараметрыАналитики);
		КонецЕсли;

		Возврат Результат;
	КонецЕсли;

КонецФункции

// Функция получает элемент справочника - ключ аналитики учета.
//
// Параметры:
//	ПараметрыАналитики - Выборка или Структура  с полями ключа:
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитики* - Найденный элемент справочника.
//
Функция СоздатьКлючАналитики(ПараметрыКлюча, ПараметрыАналитики) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(ТекстЗапросаСоздатьКлючАналитики(ПараметрыКлюча));
	
	НаборЗаписей = ПараметрыКлюча.РегистрМенеджер.СоздатьНаборЗаписей();
	
	ПоляРегистраКЗаполнению = ПараметрыКлюча.сИзмерения;
	ЗаполнитьЗначенияСвойств(ПараметрыКлюча.СтруктураАналитики, ПараметрыАналитики);
	
	Для Каждого КлючЗначение Из ПараметрыКлюча.СтруктураАналитики Цикл
		Отбор = НаборЗаписей.Отбор[КлючЗначение.Ключ]; // ЭлементОтбора
		Отбор.Установить(КлючЗначение.Значение);
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
		
	НоваяСтрока = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыКлюча.СтруктураАналитики, ПоляРегистраКЗаполнению);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда // создание нового ключа
		
		// Создание нового ключа аналитики.
		СправочникОбъект = ПараметрыКлюча.СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = ПараметрыКлюча.РегистрМенеджер.ПолучитьПолноеНаименованиеКлючаАналитики(НоваяСтрока);
		ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыКлюча.СтруктураАналитики, ПоляРегистраКЗаполнению);
		СправочникОбъект.Записать();
		
		Ключ = СправочникОбъект.Ссылка;
		
		НоваяСтрока.КлючАналитики = Ключ;
		НаборЗаписей.Записать(Ложь);
		
	Иначе // во время инициализации ключа, данный ключ уже был создан в ИБ другим сеансом.
		
		ДанныеКЗаполнению = Результат.Выгрузить()[0];
		Ключ = ДанныеКЗаполнению.КлючАналитики;
		
	КонецЕсли;
	
	Возврат Ключ;
	
КонецФункции

// Возвращает параметры генерации ключей аналитики. Используется в обработчиках обновления.
// Возвращаемое значение:
//	Структура - Структура содержит поля: ЕстьНеобработанныеКлючи, ИзмененаАналитика, СоздаватьНовыеКлючи.
Функция ПараметрыЗаполненияКлючейАналитики() Экспорт
	Возврат Новый Структура("ИзмененаАналитика,СоздаватьВКлючи", Ложь, Истина);
КонецФункции

// Заполняет поле АналитикаКонтроляПоДоговорам в коллекции, содержащей колонки Контрагент и РольКонтрагента.
//
// Параметры:
//
//	ПараметрыКлюча - Структура - Информация о ключе
//
//	Коллекция - ТабличнаяЧасть - Коллекция, в которой производится заполнение аналитики контроля по договорам.
//
//	ИменаПолей - Структура - содержит реальные имена полей коллекции для получения и формирования аналитики.
//		содержит две секции, если значение ключа Неопределено, то имя поля берется из имени ключа.
//		секция идентификации {Контрагент, Организация, Договор, ВерсияСоглашения, АналитикаКонтроляПоДоговорам},
//	
//	ПараметрыЗаполнения - Структура - см. метод ПараметрыЗаполненияКлючейАналитики()
//
// Пример 1:
//	ИменаПолей = РегистрыСведений.АналитикаКонтроляПоДоговорам.ИменаПолейКоллекцииПоУмолчанию();
//	РегистрыСведений.АналитикаКонтроляПоДоговорам.ЗаполнитьВКоллекции(ДвиженияОперации, ИменаПолей);
//
// Пример 2:
//	РегистрыСведений.АналитикаКонтроляПоДоговорам.ЗаполнитьВКоллекции(ДвиженияОперации);
//
Процедура ЗаполнитьВКоллекции(ПараметрыКлюча, Коллекция, 
								ИменаПолей = Неопределено, ДополнитьКлюч = Ложь, ПараметрыЗаполнения = Неопределено) Экспорт
								
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПараметрыЗаполненияКлючейАналитики();
	КонецЕсли;
	
	Если ДополнитьКлюч Тогда
		Если ИменаПолей = Неопределено Тогда
			ИменаПолей = ИменаПолейДополненияКоллекцииПоУмолчанию(ПараметрыКлюча);
		КонецЕсли;
		Запрос = Новый Запрос(ТекстДополнениеКлючейАналитикиВКоллекции(ПараметрыКлюча, ИменаПолей));
		Запрос.УстановитьПараметр("Коллекция", Коллекция);
	Иначе
		Если ИменаПолей = Неопределено Тогда
			ИменаПолей = ИменаПолейКоллекцииПоУмолчанию(ПараметрыКлюча);
		КонецЕсли;
		Запрос = Новый Запрос(ТекстЗначенияКлючейАналитикиВКоллекции(ПараметрыКлюча, ИменаПолей));
		Запрос.УстановитьПараметр("Коллекция", Коллекция);
		
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.АналитикаКонтроляПоДоговорам) Тогда
			Если ПараметрыЗаполнения.СоздаватьВКлючи Тогда
				КлючАналитики = ЗначениеКлючаАналитики(ПараметрыКлюча, Выборка);
			Иначе
				ТекстИсключения = НСтр("ru = 'Ошибка при заполнении ключей в коллекции: есть аналитики, по которым ключи еще не созданы.'");
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.КлючиКонтроляПоДоговорам,
					,
					ТекстИсключения);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
		Иначе
			КлючАналитики = Выборка.АналитикаКонтроляПоДоговорам;
		КонецЕсли;
		Если ДополнитьКлюч Тогда
			Коллекция[Выборка.Индекс][ИменаПолей.ЗаполняемаяАналитикаКонтроляПоДоговорам] = КлючАналитики;
		Иначе
			Коллекция[Выборка.Индекс][ИменаПолей.АналитикаКонтроляПоДоговорам] = КлючАналитики;
		КонецЕсли;
		ПараметрыЗаполнения.ИзмененаАналитика = Истина;
	КонецЦикла;
КонецПроцедуры

// Возвращает структуру полей выбора информации из коллекции для формирования аналитики контроля по договорам.
//
// Параметры:
//
//	ПараметрыКлюча - Структура - Информация о ключе
//
// Возвращаемое значение:
//	Структура - содержит реальные имена полей коллекции для получения и формирования аналитики.
//		содержит две секции, если значение ключа Неопределено, то имя поля должно браться из имени ключа.
//		секция идентификации {Контрагент, Организация, Договор, ВерсияСоглашения},
//			все ключи заданы.
//
Функция ИменаПолейКоллекцииПоУмолчанию(ПараметрыКлюча) Экспорт
	
	ИменаПолей = Новый Структура();
	ИменаПолей.Вставить(ПараметрыКлюча.ИмяПоляАналитика, ПараметрыКлюча.ИмяПоляАналитика);
	Для Каждого Измерение Из ПараметрыКлюча.мИзмерения Цикл
		ИменаПолей.Вставить(Измерение, Измерение);
	КонецЦикла;
	
	Возврат ИменаПолей;
КонецФункции

// Возвращает структуру полей выбора информации из коллекции для формирования аналитики контроля по договорам.
//
// Возвращаемое значение:
//	Структура - содержит реальные имена полей коллекции для получения и формирования аналитики.
//
Функция ИменаПолейДополненияКоллекцииПоУмолчанию(ПараметрыКлюча) Экспорт
	
	ИменаПолей = Новый Структура();
	ИменаПолей.Вставить(ПараметрыКлюча.ИмяПоляАналитика, ПараметрыКлюча.ИмяПоляАналитика);
	ИменаПолей.Вставить("Заполняемая"+ПараметрыКлюча.ИмяПоляАналитика, ПараметрыКлюча.ИмяПоляАналитика);
	Для Каждого Измерение Из ПараметрыКлюча.мИзмерения Цикл
		ИменаПолей.Вставить(Измерение, Измерение);
	КонецЦикла;
	
	Возврат ИменаПолей;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ПолучитьПустоеЗначениеДляЗапроса(ПустоеЗначение)
	
	Если ПустоеЗначение = неопределено Тогда
		Возврат "НЕОПРЕДЕЛЕНО";
	ИначеЕсли ПустоеЗначение = 0 Тогда
		Возврат "0";
	Иначе
		Возврат СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)",ПустоеЗначение.Метаданные().ПолноеИмя());
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНаборЗаписей(ПараметрыКлюча, ПараметрыАналитики)
	
	// В параметрах аналитики могут быть не все свойства
	ЗаполнитьЗначенияСвойств(ПараметрыКлюча.СтруктураАналитики, ПараметрыАналитики);
	Если НЕ ДанныеЗаполнены(ПараметрыКлюча) Тогда
		Возврат Неопределено
	Иначе
		НаборЗаписей = ПараметрыКлюча.РегистрМенеджер.СоздатьНаборЗаписей();
		
		Для Каждого КлючЗначение Из ПараметрыКлюча.СтруктураАналитики Цикл
			НаборЗаписей.Отбор[КлючЗначение.Ключ].Установить(КлючЗначение.Значение);
		КонецЦикла;
		
		НоваяСтрока = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыКлюча.СтруктураАналитики, ПараметрыКлюча.сИзмерения);
		ПроверитьЗаполнениеПоляСтруктуры(ПараметрыКлюча, НоваяСтрока);
		Возврат НаборЗаписей;
	КонецЕсли;
	
КонецФункции

Процедура ПроверитьЗаполнениеПоляСтруктуры(ПараметрыКлюча, МенеджерЗаписи)

	Шаблон = НСтр("ru = 'Должно быть заполнено значение параметра ""%1""'");
	Для Каждого Измерение Из ПараметрыКлюча.мИзмеренияОбязательные Цикл
		
		Если НЕ ЗначениеЗаполнено(МенеджерЗаписи[Измерение]) Тогда
			ВызватьИсключение СтрШаблон(Шаблон, Измерение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеЗаполнены(ПараметрыКлюча)

	Результат = Ложь;
	Для Каждого Измерение Из ПараметрыКлюча.Измерения Цикл
		Результат = Результат ИЛИ ЗначениеЗаполнено(ПараметрыКлюча.СтруктураАналитики[Измерение.Ключ]);
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ЗаполнениеКлючейАналитикиВКоллекции

Функция ТекстЗначенияКлючейАналитикиВКоллекции(ПараметрыКлюча, ИменаПолей)
	
	ПоляТаблицы = Новый Массив;
	ПоляКоллекции = Новый Массив;
	ПоляСоединения = Новый Массив;
	ШаблонПоля = "%1 КАК %2";
	ШаблонСоединения = "Аналитика.%1 = Коллекция.%2";
	
	ПоляТаблицы.Добавить  (СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[ПараметрыКлюча.ИмяПоляАналитика], ПараметрыКлюча.ИмяПоляАналитика));
	ПоляКоллекции.Добавить(СтрШаблон(ШаблонПоля, "Аналитика.КлючАналитики", ПараметрыКлюча.ИмяПоляАналитика));
	
	Для Каждого Измерение Из ПараметрыКлюча.мИзмерения Цикл
		ПоляТаблицы.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[Измерение], Измерение));
		ПоляКоллекции.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+Измерение, Измерение));
		ПоляСоединения.Добавить(СтрШаблон(ШаблонСоединения, Измерение, Измерение));
	КонецЦикла;
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК Индекс,
	|	%1
	|ПОМЕСТИТЬ Коллекция
	|ИЗ
	|	&Коллекция КАК Коллекция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Коллекция.Индекс - 1 КАК Индекс,
	|	%2
	|ИЗ
	|	Коллекция КАК Коллекция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.%3 КАК Аналитика
	|		ПО %4
	|ГДЕ
	|	(Аналитика.КлючАналитики ЕСТЬ NULL
	|			ИЛИ Аналитика.КлючАналитики <> Коллекция.%5
	|			ИЛИ Аналитика.КлючАналитики = ЗНАЧЕНИЕ(Справочник.%6.ПустаяСсылка))";
	
	ТекстЗапроса = СтрШаблон(ШаблонЗапроса,
		СтрСоединить(ПоляТаблицы, ","+Символы.ПС+Символы.Таб),
		СтрСоединить(ПоляКоллекции, ","+Символы.ПС+Символы.Таб),
		ПараметрыКлюча.РегистрИмя,
		СтрСоединить(ПоляСоединения, Символы.ПС+Символы.Таб+Символы.Таб+Символы.Таб+"И "),
		ПараметрыКлюча.ИмяПоляАналитика,
		ПараметрыКлюча.СправочникИмя);
		
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстДополнениеКлючейАналитикиВКоллекции(ПараметрыКлюча, ИменаПолей)
	
	ПоляТаблицы = Новый Массив;
	ПоляКоллекции1 = Новый Массив;
	ПоляКоллекции2 = Новый Массив;
	ПоляСоединения = Новый Массив;
	ШаблонПоля = "%1 КАК %2";
	ШаблонСоединения = "Аналитика.%1 = Коллекция.%2";
	ШаблонПоляКоллекции1 = 
	"	ВЫБОР КОГДА Коллекция.%1 = %2
	|		ТОГДА ЕСТЬNULL(Аналитика.%1, %2)
	|		ИНАЧЕ Коллекция.%1
	|	КОНЕЦ КАК %1";
	
	ПоляТаблицы.Добавить  (СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[ПараметрыКлюча.ИмяПоляАналитика], ПараметрыКлюча.ИмяПоляАналитика));
	ПоляТаблицы.Добавить  (СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей["Заполняемая"+ПараметрыКлюча.ИмяПоляАналитика], ПараметрыКлюча.ИмяПоляАналитика));
	
	ПоляКоллекции1.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[ПараметрыКлюча.ИмяПоляАналитика], ПараметрыКлюча.ИмяПоляАналитика));
	ПоляКоллекции1.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[ПараметрыКлюча.ИмяПоляАналитика]+"Приемник", ПараметрыКлюча.ИмяПоляАналитика+"Приемник"));

	ПоляКоллекции2.Добавить(СтрШаблон(ШаблонПоля, "Аналитика.КлючАналитики", ПараметрыКлюча.ИмяПоляАналитика));
	
	Для Каждого ИмяИзмерения Из ПараметрыКлюча.мИзмерения Цикл
		
		Измерение = ПараметрыКлюча.Измерения[ИмяИзмерения];
		Если НЕ ЗначениеЗаполнено(Измерение) Тогда
			Продолжить;
		КонецЕсли;
		
		ПоляТаблицы.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+ИменаПолей[ИмяИзмерения], ИмяИзмерения));
		ПоляКоллекции1.Добавить(СтрШаблон(ШаблонПоляКоллекции1, ИмяИзмерения, Измерение.ПустоеЗначениеДляЗапроса));
		ПоляКоллекции2.Добавить(СтрШаблон(ШаблонПоля, "Коллекция."+ИмяИзмерения, ИмяИзмерения));
		ПоляСоединения.Добавить(СтрШаблон(ШаблонСоединения, ИмяИзмерения, ИмяИзмерения));
	КонецЦикла;
	
	ШаблонЗапроса = "
		|ВЫБРАТЬ
		|	Коллекция.НомерСтроки - 1 КАК Индекс,
		|	&ПолеАналитика            КАК АналитикаКонтроляПоДоговорам,
		|	&ПолеПриемник             КАК АналитикаКонтроляПоДоговорамПриемник,
		|	&ПолеКонтрагент			  КАК Контрагент,
		|	&ПолеРольКонтрагента	  КАК РольКонтрагента
		|ПОМЕСТИТЬ ВтКоллекция
		|ИЗ &Коллекция КАК Коллекция
		|;
		|ВЫБРАТЬ
		|	Коллекция.Индекс                       КАК Индекс,
		|	Коллекция.АналитикаКонтроляПоДоговорам КАК АналитикаКонтроляПоДоговорам,
		|	Коллекция.АналитикаКонтроляПоДоговорамПриемник КАК АналитикаКонтроляПоДоговорамПриемник,
		|	ВЫБОР КОГДА Коллекция.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|		ТОГДА ЕСТЬNULL(Аналитика.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|		ИНАЧЕ Коллекция.Контрагент
		|	КОНЕЦ                                КАК Контрагент,
		|	ВЫБОР КОГДА Коллекция.РольКонтрагента = ЗНАЧЕНИЕ(Перечисление.РолиКонтрагентов.ПустаяСсылка)
		|		ТОГДА ЕСТЬNULL(Аналитика.РольКонтрагента, ЗНАЧЕНИЕ(Перечисление.РолиКонтрагентов.ПустаяСсылка))
		|		ИНАЧЕ Коллекция.РольКонтрагента
		|	КОНЕЦ                                КАК РольКонтрагента
		|ПОМЕСТИТЬ Коллекция
		|ИЗ
		|	ВтКоллекция КАК Коллекция
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаКонтроляПоДоговорам КАК Аналитика
		|	ПО Коллекция.АналитикаКонтроляПоДоговорам = Аналитика.КлючАналитики
		|;
		|ВЫБРАТЬ
		|	Коллекция.Индекс КАК Индекс,
		|	Ключи.КлючАналитики КАК АналитикаКонтроляПоДоговорам,
		|	Коллекция.Контрагент КАК Контрагент,
		|	Коллекция.РольКонтрагента КАК РольКонтрагента
		|ИЗ
		|	Коллекция КАК Коллекция
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаКонтроляПоДоговорам КАК Ключи
		|	ПО Ключи.Контрагент = Коллекция.Контрагент
		|		И Ключи.РольКонтрагента = Коллекция.РольКонтрагента
		|ГДЕ
		|	Ключи.КлючАналитики ЕСТЬ NULL
		|	ИЛИ Ключи.КлючАналитики <> Коллекция.АналитикаКонтроляПоДоговорам
		|	ИЛИ Коллекция.АналитикаКонтроляПоДоговорамПриемник = ЗНАЧЕНИЕ(Справочник.КлючиКонтроляПоДоговорам.ПустаяСсылка)";
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК Индекс,
	|	%1
	|ПОМЕСТИТЬ ВтКоллекция
	|ИЗ
	|	&Коллекция КАК Коллекция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Коллекция.Индекс                       КАК Индекс,
	|	%7
	|ПОМЕСТИТЬ Коллекция
	|ИЗ
	|	ВтКоллекция КАК Коллекция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.%3 КАК Аналитика
	|	ПО Коллекция.%5 = Аналитика.КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Коллекция.Индекс - 1 КАК Индекс,
	|	%2
	|ИЗ
	|	Коллекция КАК Коллекция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.%3 КАК Аналитика
	|		ПО %4
	|ГДЕ
	|	(Аналитика.КлючАналитики ЕСТЬ NULL
	|			ИЛИ Аналитика.КлючАналитики <> Коллекция.%5
	|			ИЛИ Аналитика.КлючАналитики = ЗНАЧЕНИЕ(Справочник.%6.ПустаяСсылка))";

	
	ТекстЗапроса = СтрШаблон(ШаблонЗапроса,
		СтрСоединить(ПоляТаблицы, ","+Символы.ПС+Символы.Таб),
		СтрСоединить(ПоляКоллекции2, ","+Символы.ПС+Символы.Таб),
		ПараметрыКлюча.РегистрИмя,
		СтрСоединить(ПоляСоединения, Символы.ПС+Символы.Таб+Символы.Таб+Символы.Таб+"И "),
		ПараметрыКлюча.ИмяПоляАналитика,
		ПараметрыКлюча.СправочникИмя,
		СтрСоединить(ПоляКоллекции1, ","+Символы.ПС+Символы.Таб));
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаСоздатьКлючАналитики(ПараметрыКлюча)
	
	ПоляТаблицы = Новый Массив; ШаблонПоля = "Аналитика.%1";
	ПоляГде = Новый Массив; ШаблонГде = "Аналитика.%1 = &%2";
	Для Каждого Измерение Из ПараметрыКлюча.мИзмерения Цикл
		ПоляТаблицы.Добавить(СтрШаблон(ШаблонПоля, Измерение));
		ПоляГде.Добавить(СтрШаблон(ШаблонГде, Измерение, Измерение));
	КонецЦикла;
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	%1,
	|	Аналитика.КлючАналитики
	|ИЗ
	|	РегистрСведений.%2 КАК Аналитика
	|ГДЕ
	|	%3";
	
	//
	ТекстЗапроса = СтрШаблон(ШаблонЗапроса,
		СтрСоединить(ПоляТаблицы, ","+Символы.ПС+Символы.Таб),
		ПараметрыКлюча.РегистрИмя,
		СтрСоединить(ПоляГде, Символы.ПС+Символы.Таб+Символы.Таб+Символы.Таб+"И "));
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти



