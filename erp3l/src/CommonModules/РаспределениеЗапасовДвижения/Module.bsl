////////////////////////////////////////////////////////////////////////////////
// Модуль "Распределение запасов (движения)", содержит процедуры и функции
// обслуживающие движения документов по регистру накопления "Распределение запасов - Движения".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	Параметры.ЕстьПроизводныеДвижения = Истина;
	
	ТипДокумента = ТипЗнч(Документ);
	
	ДополнительныеДокументы = Новый Структура;
	ПроведениеДокументовЛокализация.ЗаполнитьЛокальныеДокументыОбеспечения(ДополнительныеДокументы);
	Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда

			ИсправительныйДокумент = ИсправлениеДокументов.ЭтоИсправительныйДокумент(Документ);
		
		Если Не ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(Документ)
			И (Не Документ.ДополнительныеСвойства.Свойство("КонтролироватьОбеспечение")
				Или Документ.ДополнительныеСвойства.КонтролироватьОбеспечение) Тогда
			
				Если ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеОтгрузки")
					Или ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеПеремещения")
					Или ТипДокумента = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаВнутреннееПотребление")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаПеремещение")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаСборку")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаНазначенияТоваров")
						И Не Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаРеализации")
					Или ТипДокумента = Тип("ДокументОбъект.ОтгрузкаТоваровСХранения")
					Или ТипДокумента = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
					Или ТипДокумента = Тип("ДокументОбъект.ПередачаТоваровХранителю")
					Или ТипДокумента = Тип("ДокументОбъект.ПеремещениеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровНаСклад")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровОтХранителя")
					Или ТипДокумента = Тип("ДокументОбъект.ПриемкаТоваровНаХранение")
					Или ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.ПриходныйОрдерНаТовары")
					Или ТипДокумента = Тип("ДокументОбъект.ПрочееОприходованиеТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг")
					Или ТипДокумента = Тип("ДокументОбъект.СборкаТоваров")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМ")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМВозврат")
					Или ТипДокумента = Тип("ДокументОбъект.ЧекККМКоррекции")
					
					//++ НЕ УТ
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратСырьяОтПереработчика")
					Или ТипДокумента = Тип("ДокументОбъект.ДвижениеПродукцииИМатериалов")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказМатериаловВПроизводство")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказПереработчику")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаявкаНаВозвратТоваровОтКлиента")
					Или ТипДокумента = Тип("ДокументОбъект.ПередачаСырьяПереработчику")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеОтПереработчика")
					Или ТипДокумента = Тип("ДокументОбъект.ПроизводствоБезЗаказа")
					//++ Устарело_Производство21
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратМатериаловИзПроизводства")
					Или ТипДокумента = Тип("ДокументОбъект.ВыпускПродукции")
					Или ТипДокумента = Тип("ДокументОбъект.ПередачаМатериаловВПроизводство")
					//-- Устарело_Производство21
					//-- НЕ УТ
					
					//++ НЕ УТКА
					Или ТипДокумента = Тип("ДокументОбъект.ВозвратСырьяДавальцу")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказДавальца")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаПроизводство2_2")
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаРемонт")
					Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеСырьяОтДавальца")
					Или ТипДокумента = Тип("ДокументОбъект.ЭтапПроизводства2_2")
					//++ Устарело_Производство21
					Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаПроизводство")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаМатериаловВПроизводство")
					//-- Устарело_Производство21
					//-- НЕ УТКА
					Или ИсправительныйДокумент
						И НЕ Документ.ДополнительныеСвойства.Свойство("ПрограммноеСозданиеДокумента") 
					
					Или (ДополнительныеДокументы.Свойство("КонтрольныеРегистрыИзменений")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.Свойство("РаспределениеЗапасовДвижения")
						И ДополнительныеДокументы.КонтрольныеРегистрыИзменений.РаспределениеЗапасовДвижения.Найти(ТипДокумента)<>Неопределено)
					Тогда
						Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
//
	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения;
	ТекстСторнирования = ПроведениеДокументов.ТекстСторнирующегоЗапроса(МетаданныеРегистра, МетаданныеДокумента);
	ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстСторнирования);
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам обеспечения.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "РаспределениеЗапасовДвижения");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРаспределениеЗапасовДвиженияИзменение") Тогда
		
		ТекстЗапросаКонтроль = РаспределениеЗапасов.ТекстЗапросаКонтроль();
		ТекстыЗапроса.Добавить(ТекстЗапросаКонтроль, "РаспределениеЗапасовДвиженияРезультатыКонтроля");
		
	КонецЕсли;
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРаспределениеЗапасовДвиженияИзменение") Тогда
		
		ТаблицаРезультатовКонтроля = РезультатыКонтроля.РаспределениеЗапасовДвиженияРезультатыКонтроля;
		РаспределениеЗапасов.СообщитьОбОшибкахПроведения(Документ, Отказ, ТаблицаРезультатовКонтроля);
		
	КонецЕсли;
	
КонецПроцедуры

// Перераспределяет запасы при групповом изменении приоритета заказов на отгрузку.
// 
// Параметры:
// 	Заказы - Массив - ссылки на заказы.
//
Процедура ПриИзмененииПриоритета(Заказы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Если РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием() Тогда
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Заказы", Заказы);
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Сведения.Номенклатура        КАК Номенклатура,
			|	Сведения.Характеристика      КАК Характеристика,
			|	Сведения.Склад               КАК Склад,
			|	Сведения.Назначение          КАК Назначение
			|ИЗ
			|	РегистрСведений.РаспределениеЗапасов КАК Сведения
			|ГДЕ
			|	Сведения.ЗаказНаОтгрузку В(&Заказы)
			|		И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|		И Сведения.КОбеспечению <> 0";
		Таблица = Запрос.Выполнить().Выгрузить();
		Таблица.Колонки.Добавить("РазделительЗаписи");
		РазделительЗаписи = Новый УникальныйИдентификатор();
		Таблица.ЗаполнитьЗначения(РазделительЗаписи, "РазделительЗаписи");
		Таблица.Колонки.Добавить("ДатаЗаписи");
		Таблица.ЗаполнитьЗначения(ТекущаяДатаСеанса(), "ДатаЗаписи");
		
		Набор = РегистрыСведений.ЗаданияКРаспределениюЗапасов.СоздатьНаборЗаписей();
		Набор.Загрузить(Таблица);
		Набор.Отбор.РазделительЗаписи.Установить(РазделительЗаписи);
		Набор.Записать(Ложь);
		
	Иначе
		
		НачатьТранзакцию();
		Попытка
			
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("Заказы", Заказы);
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
			Запрос.Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Сведения.Номенклатура        КАК Номенклатура,
				|	Сведения.Характеристика      КАК Характеристика,
				|	Сведения.Склад               КАК Склад,
				|	Сведения.Назначение          КАК Назначение
				|ПОМЕСТИТЬ ТоварыДляРаспределенияЗапасов
				|ИЗ
				|	РегистрСведений.РаспределениеЗапасов КАК Сведения
				|ГДЕ
				|	Сведения.ЗаказНаОтгрузку В(&Заказы)
				|		И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
				|		И Сведения.КОбеспечению <> 0
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура, Характеристика, Склад, Назначение";
			Запрос.Выполнить();
			
			РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "ТоварыДляРаспределенияЗапасов", "ПередЗаписью");
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Товары.Номенклатура    КАК Номенклатура,
				|	Товары.Характеристика  КАК Характеристика,
				|	Товары.Склад           КАК Склад,
				|	Товары.Назначение      КАК Назначение
				|ИЗ
				|	ТоварыДляРаспределенияЗапасов КАК Товары";
				
			РезультатЗапроса = Запрос.Выполнить();
			
			БлокировкаДанных = Новый БлокировкаДанных();
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Назначение",     "Назначение");
			
			БлокировкаДанных.Заблокировать();
			
			ЗаписатьРаспределениеЗапасов(Запрос, Истина);
			
			РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "ТоварыДляРаспределенияЗапасов", "ПриЗаписи");
			РаспределениеЗапасов.ТаблицаИзмененийРаспределениеЗапасовДляРасчетаСостояний(Запрос);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияЗаказовКлиентовИзменение КАК Таблица
				|;
				|//////////////////////////////
				|
				|ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияВнутреннихЗаказовИзменение КАК Таблица
				|;
				|//////////////////////////////
				|
				|ВЫБРАТЬ
				|	Таблица.Заказ КАК Заказ
				|ИЗ
				|	СостоянияЭтаповПроизводстваИзменение КАК Таблица";
			Пакет = Запрос.ВыполнитьПакет();
			МассивЗаказов = Пакет[0].Выгрузить().ВыгрузитьКолонку("Заказ");
			РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(МассивЗаказов, Ложь, Ложь);
			МассивЗаказов = Пакет[1].Выгрузить().ВыгрузитьКолонку("Заказ");
			РегистрыСведений.СостоянияВнутреннихЗаказов.ОтразитьСостояниеЗаказа(МассивЗаказов);
			МассивЗаказов = Пакет[2].Выгрузить().ВыгрузитьКолонку("Заказ");
			//++ НЕ УТКА
			ОбеспечениеПроизводства.ПриИзмененииОбеспечения(МассивЗаказов);
			//-- НЕ УТКА
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Изменение приоритета заказа завершилось неудачно по причине: %Причина%';
									|en = 'Order priority change failed. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			СобытиеЖурнала = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			ЗаписьЖурналаРегистрации(СобытиеЖурнала,
			                         УровеньЖурналаРегистрации.Ошибка,
			                         Метаданные.РегламентныеЗадания.РаспределениеЗапасов,
			                         ,
			                         ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Шаблоны движений документов.

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию движения товаров к отгрузке (списание из доступного остатка).
// Уменьшает фактический и свободный остаток товара на складе, работы в подразделении.
// Проведение документа может быть выполнено с контролем остатков.
// Если свободного остатка недостаточно могут быть задействованы запасы на складе,
// распределенные ранее на указанный документ планируемого расхода запаса.
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                        - отражаемый документ.
//   * Период                                     - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура         - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -             - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -         - назначение номенклатуры.
//   * Количество                                 - Число                                 - списываемое количество.
//   * ЗапланированныйРасходРаспределенногоЗапаса - ОпределяемыйТип.ОжидаемаяОтгрузка     - документ планирования расхода запасов,
//                                                                                          распределенные запасы которого будут израсходованы.
//   * КонтрольСвободногоОстатка                  - Булево                                - контроль свободного остатка при списании запасов.
//   * ИгнорироватьРезервыПриКонтролеОстатков     - Булево                                - контроль только наличия при списании запасов.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
Процедура РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ТекстыШаблоновВременныхТаблиц = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                                     КАК Регистратор,
		|	ТабЧасть.Период                                     КАК Период,
		|	ТабЧасть.Номенклатура                               КАК Номенклатура,
		|	ТабЧасть.Характеристика                             КАК Характеристика,
		|	ТабЧасть.Склад                                      КАК Склад,
		|	ТабЧасть.Назначение                                 КАК Назначение,
		|	ТабЧасть.ЗапланированныйРасходРаспределенногоЗапаса КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)                                    КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО                                        КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)                                    КАК ДатаПоступления,
		|	ВЫБОР КОГДА ТабЧасть.КонтрольСвободногоОстатка ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ                                           КАК Отгрузить,
		|	0                                                   КАК Резервировать,
		|	0                                                   КАК КОбеспечению,
		|	0                                                   КАК НеОбеспечивать,
		|	0                                                   КАК ЗакрытьГрафикОтгрузки,
		|	ВЫБОР КОГДА ТабЧасть.КонтрольСвободногоОстатка ТОГДА
		|				0
		|			ИНАЧЕ
		|				-ТабЧасть.Количество
		|		КОНЕЦ                                           КАК Поступило,
		|	0                                                   КАК ПоступитКДате,
		|	0                                                   КАК ПоставкаНаСогласовании,
		|	0                                                   КАК ЗакрытьГрафикПоступления,
		|	ТабЧасть.ИгнорироватьРезервыПриКонтролеОстатков     КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                                                КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию планируемого расхода товаров.
// Резервировать: уменьшает свободный остаток с контролем остатка, формирует резерв товара на складе по заказу.
// НеОбеспечивать: не формирует потребности и резервов, фиксирует факт приема заказа
// КОбеспечению, если есть свободный остаток на складе / в ожидаемых поступлениях: уменьшает свободный остаток,
// формирует резерв товара на складе по заказуКОбеспечению, если нет свободного остатка на складе / в ожидаемых поступлениях: формирует потребность в товаре / работах
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка                                     - ДокументСсылка                         - отражаемый документ.
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * Заказ                                      - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ПоГрафику                                  - Булево - признак, что расход товара происходит по ранее запланированному в графике расходу.
//   * РаспоряжениеВГрафике                       - ОпределяемыйТип.ОжидаемаяОтгрузка      - документ планирования расхода запаса,
//                                                                                           запасы которого будут уменьшены.
//   * КоличествоВГрафике                         - Число                                  - количество запаса, на которое будет уменьшен запас
//                                                                                           ранее запланированного в графике расхода.
//
Процедура ЗапланироватьРасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	ТабЧасть.Заказ                КАК ЗаказНаОтгрузку,
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Резервировать,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КОбеспечению,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК НеОбеспечивать,
		|	
		|	0 КАК ЗакрытьГрафикОтгрузки,
		|	0 КАК Поступило,
		|	0 КАК ПоступитКДате,
		|	0 КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И ТабЧасть.Количество <> 0
		|	И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|				И ТабЧасть.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.УдалитьОбособленно)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК КОбеспечению,
		|	0                             КАК НеОбеспечивать,
		|	ТабЧасть.КоличествоВГрафике   КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	0                             КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И ТабЧасть.ПоГрафику
		|	И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию фактического поступления товаров на склад (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены на величину данного прихода запаса.
//  ТекстыШаблоновВременныхТаблиц - см. ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента.ТекстыШаблоновВременныхТаблиц
Процедура ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть, ТекстыШаблоновВременныхТаблиц = Неопределено) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ДатаПоступления,
		|	0                       КАК Отгрузить,
		|	0                       КАК Резервировать,
		|	0                       КАК КОбеспечению,
		|	0                       КАК НеОбеспечивать,
		|	0                       КАК ЗакрытьГрафикОтгрузки,
		|	ТабЧасть.Количество     КАК Поступило,
		|	0                       КАК ПоступитКДате,
		|	0                       КАК ПоставкаНаСогласовании,
		|	0                       КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                    КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                    КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК КОбеспечению,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.Количество           КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.ПоГрафику
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения,
		ТекстыЗапросовТаблицДокумента, ТекстыШаблоновВременныхТаблиц);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию фактического поступления товаров на склад (пополнение доступного остатка).
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Если приход товара ранее был запланирован документом планового прихода запаса (приход по графику),
// то при проведении будет уменьшен запас и свободный остаток в данном ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - приходуемое количество.
//   * Заказ                - ОпределяемыйТип.ОжидаемоеПоступление  - заказ по которому планируется поступление.
//   * ДатаПоступления      - Булево                                - дата на которую планируется поступление.
//   * ДоступенДляРасхода   - Булево                                - признак, что данный запас можно использовать для обеспечения запланированного расхода запаса.
//   * ПоГрафику            - Булево                                - признак, что приход товара происходит по ранее запланированному в графике поступлению.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
//   * КоличествоВГрафике   - Число                                 - количество запаса, на которое будет уменьшен запас ранее запланированного в графике поступления.
Процедура ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)        КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.Заказ          КАК ЗаказНаПоступление,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				НАЧАЛОПЕРИОДА(ТабЧасть.ДатаПоступления, ДЕНЬ)
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ КАК ДатаПоступления,
		|	
		|	0                       КАК Отгрузить,
		|	0                       КАК Резервировать,
		|	0                       КАК КОбеспечению,
		|	0                       КАК НеОбеспечивать,
		|	0                       КАК ЗакрытьГрафикОтгрузки,
		|	0                       КАК Поступило,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК ПоступитКДате,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ДоступенДляРасхода ТОГДА
		|				0
		|			ИНАЧЕ
		|				ТабЧасть.Количество
		|		КОНЕЦ КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.Количество <> 0
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК КОбеспечению,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.КоличествоВГрафике   КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И ТабЧасть.ПоГрафику
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию отмены запланированного прихода товаров на склад.
// Увеличивает фактический и свободный остаток товара на складе, работы в подразделении.
// Будет уменьшен запас и свободный остаток в ожидаемом приходе (распоряжении).
//
// Параметры:
//  Запрос - Запрос - Запрос отражения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
//  Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа. Выражения выборки должны содержать следующие поля:
//   * Ссылка               - ДокументСсылка                        - отражаемый документ.
//   * Период               - Дата                                  - дата отражения операции (соответствует дате документа).
//   * Номенклатура         - СправочникСсылка.Номенклатура         - приходуемая номенклатура.
//   * Характеристика       - СправочникСсылка.ХарактеристикиНоменклатуры - приходуемая характеристика номенклатуры.
//   * Склад                - СправочникСсылка.Склады -             - склад оприходования.
//   * Назначение           - СправочникСсылка.Назначения -         - назначение приходуемой номенклатуры.
//   * Количество           - Число                                 - отменяемое количество.
//   * РаспоряжениеВГрафике - ОпределяемыйТип.ОжидаемоеПоступление  - документ планирования прихода запаса,
//                                                                    запасы которого будут уменьшены.
Процедура ОтменитьЗапланированныйПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Регистратор,
		|	ТабЧасть.Период               КАК Период,
		|	ТабЧасть.Номенклатура         КАК Номенклатура,
		|	ТабЧасть.Характеристика       КАК Характеристика,
		|	ТабЧасть.Склад                КАК Склад,
		|	ТабЧасть.Назначение           КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ЖелаемаяДатаОтгрузки,
		|	ТабЧасть.РаспоряжениеВГрафике КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	0                             КАК Отгрузить,
		|	0                             КАК Резервировать,
		|	0                             КАК КОбеспечению,
		|	0                             КАК НеОбеспечивать,
		|	0                             КАК ЗакрытьГрафикОтгрузки,
		|	0                             КАК Поступило,
		|	0                             КАК ПоступитКДате,
		|	0                             КАК ПоставкаНаСогласовании,
		|	ТабЧасть.Количество           КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ                          КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ                          КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|		И (ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				И ТабЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))";
	
	ТекстыШаблоновОтражения = ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации);
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовТаблицДокумента);
	
КонецПроцедуры

// Возвращает текст запроса движений регистра РаспределениеЗапасовДвижения,
// отражающего операцию планирования графика отгрузки по датам, а также движения товаров к отгрузке.
//
// Параметры:
//  ТекстЗапросаТабЧасть - Строка - Текст запроса получения данных документа
//  	Выражения выборки должны содержать следующие поля:
//   * Период                                     - Дата                                   - дата отражения операции (соответствует дате документа).
//   * Номенклатура                               - СправочникСсылка.Номенклатура          - списываемая из запаса номенклатура.
//   * Характеристика                             - СправочникСсылка.ХарактеристикиНоменклатуры - списываемая из запаса характеристика номенклатуры.
//   * Склад                                      - СправочникСсылка.Склады -              - склад списания.
//   * Назначение                                 - СправочникСсылка.Назначения -          - назначение номенклатуры.
//   * Количество                                 - Число                                  - заказываемое количество.
//   * ВариантОбеспечения                         - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения.
//   * ЗаказНаОтгрузку                            - ОпределяемыйТип.ОжидаемаяОтгрузка      - заказ.
//   * ЖелаемаяДатаОтгрузки                       - Дата                                   - планируемая дата списания запасов.
//   * ДатаПриема - Дата - 
//   * ПорядокПоПриоритету - Число - 
//   * ГотовКОбеспечению - Булево - 
//   * ГотовКОтгрузке - Булево - 
//  ИгнорироватьГотовностьКОбеспечению - Булево -
//
//	Возвращаемое значение:
//   Строка - Текст запроса.
Функция ТекстЗапросаРаспоряжениеНаОбеспечениеИОтгрузку(ТекстЗапросаТабЧасть, ИгнорироватьГотовностьКОбеспечению) Экспорт
	
	ТекстЗапросаОперации =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Регистратор,
		|	ТабЧасть.Период         КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Склад          КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Обособленно ТОГДА
		|				ТабЧасть.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.ЗаказНаОтгрузку      КАК ЗаказНаОтгрузку,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ЖелаемаяДатаОтгрузки = НЕОПРЕДЕЛЕНО ТОГДА
		|				ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ
		|				ТабЧасть.ЖелаемаяДатаОтгрузки
		|		КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
		|	
		|	НЕОПРЕДЕЛЕНО                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1,1,1)              КАК ДатаПоступления,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ГотовКОтгрузке И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Отгрузить,
		|	
		|	ВЫБОР КОГДА НЕ ТабЧасть.ГотовКОтгрузке И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить) // не Готов к отгрузке и Вариант обеспечения отгрузить
		|					ИЛИ ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Резервировать,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ГотовКОбеспечению И ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КОбеспечению,
		|	
		|	ВЫБОР КОГДА ТабЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется) ТОГДА
		|				ТабЧасть.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК НеОбеспечивать,
		|	
		|	0 КАК Поступило,
		|	0 КАК ПоступитКДате,
		|	0 КАК ПоставкаНаСогласовании,
		|	0 КАК ЗакрытьГрафикПоступления,
		|	ЛОЖЬ КАК ИгнорироватьРезервыПриКонтролеОстатков,
		|	ЛОЖЬ КАК Сторно
		|ИЗ
		|	#ТабЧасть КАК ТабЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВсяНоменклатура
		|		ПО ВсяНоменклатура.Ссылка = ТабЧасть.Номенклатура
		|ГДЕ
		|	ТабЧасть.Ссылка = &Ссылка
		|	И(ВсяНоменклатура.ТипНоменклатуры В(
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ИЛИ ВсяНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|					И ТабЧасть.Обособленно
		|		)
		|	И(ТабЧасть.ГотовКОбеспечению
		|		ИЛИ ТабЧасть.ВариантОбеспечения В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)))";
	
	Если ИгнорироватьГотовностьКОбеспечению Тогда
	
		ТекстЗапросаОперации = СтрЗаменить(ТекстЗапросаОперации, "ТабЧасть.ГотовКОбеспечению", "ИСТИНА");
	
	КонецЕсли;
	
	
	ТекстыЗапросовТаблицДокумента = Новый Структура;
	ТекстыЗапросовТаблицДокумента.Вставить("ТабЧасть", ТекстЗапросаТабЧасть);
	ПроведениеДокументов.ПодготовитьТекстЗапросаОтраженияДокумента(ТекстЗапросаОперации, ТекстыЗапросовТаблицДокумента);
	
	Возврат ТекстЗапросаОперации;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции обслуживающие регистр накопления РаспределениеЗапасовДвижения

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Набор = Документ.Движения.РаспределениеЗапасовДвижения;
	
	Если Набор.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц; // здесь есть временная таблица изменений регистра Реестр документов.
	
	// Для нового документа расчет и так идет по всем записям набора, так как все они есть в таблице изменений набора.
	ИзменилосьМестоВОчереди =
		Метаданные.ОпределяемыеТипы.ОжидаемаяОтгрузка.Тип.СодержитТип(ТипЗнч(Набор.Отбор.Регистратор.Значение))
		И Набор.ДополнительныеСвойства.Свойство("СвойстваДокумента") // при пакетном проведении этапов свойства документа могут быть не инициализированы.
		И Набор.ДополнительныеСвойства.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Не Набор.ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый
		И ИзменилосьМестоВОчереди(Запрос);
		
	Если ИзменилосьМестоВОчереди Тогда
		Набор.ДополнительныеСвойства.Вставить("ИзменилосьМестоВОчередиРаспределенияЗапасов", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ДвиженияПриЗаписиВоВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Движения.Регистратор                            КАК Регистратор,
		|	Движения.Номенклатура                           КАК Номенклатура,
		|	Движения.Характеристика                         КАК Характеристика,
		|	Движения.Склад                                  КАК Склад,
		|	Движения.Назначение                             КАК Назначение,
		|	Движения.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|	Движения.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|	Движения.ДатаПоступления                        КАК ДатаПоступления,
		|	Движения.Отгрузить                              КАК Отгрузить,
		|	Движения.Резервировать                          КАК Резервировать,
		|	Движения.КОбеспечению                           КАК КОбеспечению,
		|	Движения.НеОбеспечивать                         КАК НеОбеспечивать,
		|	Движения.Поступило                              КАК Поступило,
		|	Движения.ПоступитКДате                          КАК ПоступитКДате,
		|	Движения.ЗакрытьГрафикПоступления               КАК ЗакрытьГрафикПоступления,
		|	Движения.ЗакрытьГрафикОтгрузки                  КАК ЗакрытьГрафикОтгрузки,
		|	Движения.ПоставкаНаСогласовании                 КАК ПоставкаНаСогласовании,
		|	Движения.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|ПОМЕСТИТЬ ДвиженияПриЗаписи
		|ИЗ
		|	&НаборЗаписейРаспределениеЗапасовДвижения КАК Движения";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РаспределениеЗапасовДвиженияИзменениеВоВременнуюТаблицу(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Изменения.Номенклатура                                     КАК Номенклатура,
		|	Изменения.Характеристика                                   КАК Характеристика,
		|	Изменения.Склад                                            КАК Склад,
		|	Изменения.Назначение                                       КАК Назначение,
		|	Изменения.ЗаказНаОтгрузку                                  КАК ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки                             КАК ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление                               КАК ЗаказНаПоступление,
		|	Изменения.ДатаПоступления                                  КАК ДатаПоступления,
		|	СУММА(Изменения.Отгрузить)                                 КАК Отгрузить,
		|	СУММА(Изменения.Резервировать)                             КАК Резервировать,
		|	СУММА(Изменения.КОбеспечению)                              КАК КОбеспечению,
		|	СУММА(Изменения.НеОбеспечивать)                            КАК НеОбеспечивать,
		|	СУММА(Изменения.Поступило)                                 КАК Поступило,
		|	СУММА(Изменения.ПоступитКДате)                             КАК ПоступитКДате,
		|	СУММА(Изменения.ЗакрытьГрафикПоступления)                  КАК ЗакрытьГрафикПоступления,
		|	СУММА(Изменения.ЗакрытьГрафикОтгрузки)                     КАК ЗакрытьГрафикОтгрузки,
		|	СУММА(Изменения.ПоставкаНаСогласовании)                    КАК ПоставкаНаСогласовании,
		|	МАКСИМУМ(Изменения.ИгнорироватьРезервыПриКонтролеОстатков) КАК ИгнорироватьРезервыПриКонтролеОстатков
		|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		ДвиженияПриЗаписи.Номенклатура                           КАК Номенклатура,
		|		ДвиженияПриЗаписи.Характеристика                         КАК Характеристика,
		|		ДвиженияПриЗаписи.Склад                                  КАК Склад,
		|		ДвиженияПриЗаписи.Назначение                             КАК Назначение,
		|		ДвиженияПриЗаписи.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|		ДвиженияПриЗаписи.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|		ДвиженияПриЗаписи.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|		ДвиженияПриЗаписи.ДатаПоступления                        КАК ДатаПоступления,
		|		ДвиженияПриЗаписи.Отгрузить                              КАК Отгрузить,
		|		ДвиженияПриЗаписи.Резервировать                          КАК Резервировать,
		|		ДвиженияПриЗаписи.КОбеспечению                           КАК КОбеспечению,
		|		ДвиженияПриЗаписи.НеОбеспечивать                         КАК НеОбеспечивать,
		|		ДвиженияПриЗаписи.Поступило                              КАК Поступило,
		|		ДвиженияПриЗаписи.ПоступитКДате                          КАК ПоступитКДате,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикПоступления               КАК ЗакрытьГрафикПоступления,
		|		ДвиженияПриЗаписи.ЗакрытьГрафикОтгрузки                  КАК ЗакрытьГрафикОтгрузки,
		|		ДвиженияПриЗаписи.ПоставкаНаСогласовании                 КАК ПоставкаНаСогласовании,
		|		ДвиженияПриЗаписи.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|	ИЗ
		|		ДвиженияПриЗаписи КАК ДвиженияПриЗаписи
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияПередЗаписью.Номенклатура                           КАК Номенклатура,
		|		ДвиженияПередЗаписью.Характеристика                         КАК Характеристика,
		|		ДвиженияПередЗаписью.Склад                                  КАК Склад,
		|		ДвиженияПередЗаписью.Назначение                             КАК Назначение,
		|		ДвиженияПередЗаписью.ЗаказНаОтгрузку                        КАК ЗаказНаОтгрузку,
		|		ДвиженияПередЗаписью.ЖелаемаяДатаОтгрузки                   КАК ЖелаемаяДатаОтгрузки,
		|		ДвиженияПередЗаписью.ЗаказНаПоступление                     КАК ЗаказНаПоступление,
		|		ДвиженияПередЗаписью.ДатаПоступления                        КАК ДатаПоступления,
		|		-ДвиженияПередЗаписью.Отгрузить                             КАК Отгрузить,
		|		-ДвиженияПередЗаписью.Резервировать                         КАК Резервировать,
		|		-ДвиженияПередЗаписью.КОбеспечению                          КАК КОбеспечению,
		|		-ДвиженияПередЗаписью.НеОбеспечивать                        КАК НеОбеспечивать,
		|		-ДвиженияПередЗаписью.Поступило                             КАК Поступило,
		|		-ДвиженияПередЗаписью.ПоступитКДате                         КАК ПоступитКДате,
		|		-ДвиженияПередЗаписью.ЗакрытьГрафикПоступления              КАК ЗакрытьГрафикПоступления,
		|		-ДвиженияПередЗаписью.ЗакрытьГрафикОтгрузки                 КАК ЗакрытьГрафикОтгрузки,
		|		-ДвиженияПередЗаписью.ПоставкаНаСогласовании                КАК ПоставкаНаСогласовании,
		|		ДвиженияПередЗаписью.ИгнорироватьРезервыПриКонтролеОстатков КАК ИгнорироватьРезервыПриКонтролеОстатков
		|	ИЗ
		|		РегистрНакопления.РаспределениеЗапасовДвижения КАК ДвиженияПередЗаписью
		|	ГДЕ
		|		ДвиженияПередЗаписью.Регистратор В(&Регистратор)
		|			И ДвиженияПередЗаписью.Активность) КАК Изменения
		|СГРУППИРОВАТЬ ПО
		|	Изменения.Номенклатура,
		|	Изменения.Характеристика,
		|	Изменения.Склад,
		|	Изменения.Назначение,
		|	Изменения.ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление,
		|	Изменения.ДатаПоступления
		|ИМЕЮЩИЕ
		|	СУММА(Изменения.Отгрузить)                        <> 0
		|		ИЛИ СУММА(Изменения.Резервировать)            <> 0
		|		ИЛИ СУММА(Изменения.КОбеспечению)             <> 0
		|		ИЛИ СУММА(Изменения.НеОбеспечивать)           <> 0
		|		ИЛИ СУММА(Изменения.Поступило)                <> 0
		|		ИЛИ СУММА(Изменения.ПоступитКДате)            <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикОтгрузки)    <> 0
		|		ИЛИ СУММА(Изменения.ПоставкаНаСогласовании)   <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаОтгрузку,
		|	ЖелаемаяДатаОтгрузки,
		|	ЗаказНаПоступление,
		|	ДатаПоступления";
	Запрос.Выполнить();
		
КонецПроцедуры

// Параметры:
//  Запрос - Запрос - 
Процедура ЗаписатьРаспределениеЗапасовНаПотребностиПоТаблицеРазличныеТовары(Запрос) Экспорт
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РазличныеТовары.Номенклатура                                     КАК Номенклатура,
		|	РазличныеТовары.Характеристика                                   КАК Характеристика,
		|	РазличныеТовары.Склад                                            КАК Склад,
		|	РазличныеТовары.Назначение                                       КАК Назначение,
		|	СУММА(ЕСТЬNULL(ОжидаемаяОтгрузка.КОбеспечению, 0))               КАК Количество,
		|	МАКСИМУМ(РазличныеТовары.РаспределятьЕслиОстатокНеотрицательный) КАК РаспределятьЕслиОстатокНеотрицательный
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РазличныеТовары КАК РазличныеТовары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК ОжидаемаяОтгрузка
		|		ПО ОжидаемаяОтгрузка.Номенклатура    = РазличныеТовары.Номенклатура
		|		 И ОжидаемаяОтгрузка.Характеристика  = РазличныеТовары.Характеристика
		|		 И ОжидаемаяОтгрузка.Склад           = РазличныеТовары.Склад
		|		 И ОжидаемаяОтгрузка.Назначение      = РазличныеТовары.Назначение
		|		 И ОжидаемаяОтгрузка.Состояние       = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|		 И ОжидаемаяОтгрузка.КОбеспечению > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	РазличныеТовары.Номенклатура,
		|	РазличныеТовары.Характеристика,
		|	РазличныеТовары.Склад,
		|	РазличныеТовары.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Количество                             КАК Количество,
		|	Остатки.Состояние                                  КАК Состояние,
		|	1                                                  КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.Номенклатура                               КАК Номенклатура,
		|	Остатки.Характеристика                             КАК Характеристика,
		|	Остатки.Склад                                      КАК Склад,
		|	Остатки.Назначение                                 КАК Назначение,
		|	Остатки.ЗаказНаПоступление                         КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления                            КАК ДатаПоступления,
		|	Остатки.Запас                                      КАК Запас,
		|	Остатки.Резерв                                     КАК Резерв,
		|	Остатки.Свободно                                   КАК Свободно,
		|	Остатки.ВНаличии                                   КАК ВНаличии,
		|	Потребности.РаспределятьЕслиОстатокНеотрицательный
		|		И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК РаспределятьЕслиОстатокНеотрицательный,
		|	ВЫБОР КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) ТОГДА
		|					1
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление) ТОГДА
		|					2
		|				КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное) ТОГДА
		|					3
		|		КОНЕЦ КАК Порядок
		|ИЗ
		|	Потребности КАК Потребности
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ПО Остатки.Номенклатура    = Потребности.Номенклатура
		|		 И Остатки.Характеристика  = Потребности.Характеристика
		|		 И Остатки.Склад           = Потребности.Склад
		|		 И Остатки.Назначение      = Потребности.Назначение
		|		 И Остатки.Состояние       В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, Порядок, ДатаПоступления, ЗаказНаПоступление
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Потребности";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[1].Выбрать();
	
	Количество = 0;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
	Набор.Отбор.ЗаказНаПоступление.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Использование = Истина;
	Набор.Отбор.ЗаказНаОтгрузку.Значение = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Номенклатура <> Набор.Отбор.Номенклатура.Значение
				Или Выборка.Характеристика <> Набор.Отбор.Характеристика.Значение
				Или Выборка.Склад <> Набор.Отбор.Склад.Значение
				Или Выборка.Назначение <> Набор.Отбор.Назначение.Значение Тогда
				
				Набор.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Выборка.Характеристика);
				Набор.Отбор.Склад.Установить(Выборка.Склад);
				Набор.Отбор.Назначение.Установить(Выборка.Назначение);
				
				Количество = Выборка.Количество;
				
		КонецЕсли;
		
		Если Не Выборка.РаспределятьЕслиОстатокНеотрицательный Или Выборка.Свободно >= 0 Тогда
			
			КоличествоРаспределить = Мин(Количество, Макс(Выборка.Запас - Выборка.Резерв, 0));
			Свободно = Выборка.Запас - Выборка.Резерв - КоличествоРаспределить;
			Количество = Количество - КоличествоРаспределить;
			
			Набор.Отбор.Состояние.Установить(Выборка.Состояние);
			Набор.Отбор.ЗаказНаПоступление.Значение = Выборка.ЗаказНаПоступление;
			Набор.Отбор.ДатаПоступления.Установить(Выборка.ДатаПоступления);
			
			Если Выборка.Запас <> 0
					Или Выборка.Резерв <> 0
					Или Свободно <> 0
					Или Выборка.ВНаличии <> 0 Тогда
					
				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Свободно = Свободно;
				
			КонецЕсли;
			
			Набор.Записать();
			Набор.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для пакетной работы с регистром сведений "Распределение запасов"

//++ НЕ УТКА

Процедура ПередЗаписьюПакетно(Заказы, ТекстЗапросаРаспределениеЗапасовДвижения, Параметры) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Заказы", Заказы);
	
	ТекстНабор = СтрЗаменить(ТекстЗапросаРаспределениеЗапасовДвижения, "= &Ссылка", "В (&Заказы)");
	Текст =
		"ВЫБРАТЬ
		|	Изменения.Регистратор                     КАК Регистратор,
		|	Изменения.Номенклатура                    КАК Номенклатура,
		|	Изменения.Характеристика                  КАК Характеристика,
		|	Изменения.Склад                           КАК Склад,
		|	Изменения.Назначение                      КАК Назначение,
		|	Изменения.ЗаказНаОтгрузку                 КАК ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки            КАК ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление              КАК ЗаказНаПоступление,
		|	Изменения.ДатаПоступления                 КАК ДатаПоступления,
		|	СУММА(Изменения.Отгрузить)                КАК Отгрузить,
		|	СУММА(Изменения.Резервировать)            КАК Резервировать,
		|	СУММА(Изменения.КОбеспечению)             КАК КОбеспечению,
		|	СУММА(Изменения.НеОбеспечивать)           КАК НеОбеспечивать,
		|	СУММА(Изменения.Поступило)                КАК Поступило,
		|	СУММА(Изменения.ПоступитКДате)            КАК ПоступитКДате,
		|	СУММА(Изменения.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления,
		|	СУММА(Изменения.ЗакрытьГрафикОтгрузки)    КАК ЗакрытьГрафикОтгрузки,
		|	СУММА(Изменения.ПоставкаНаСогласовании)   КАК ПоставкаНаСогласовании
		|ПОМЕСТИТЬ РаспределениеЗапасовДвиженияИзменение
		|ИЗ
		|	НаборЗаписейРаспределениеЗапасовДвижения КАК Изменения
		|СГРУППИРОВАТЬ ПО
		|	Изменения.Номенклатура,
		|	Изменения.Характеристика,
		|	Изменения.Склад,
		|	Изменения.Назначение,
		|	Изменения.ЗаказНаОтгрузку,
		|	Изменения.ЖелаемаяДатаОтгрузки,
		|	Изменения.ЗаказНаПоступление,
		|	Изменения.ДатаПоступления,
		|	Изменения.Регистратор
		|ИМЕЮЩИЕ
		|	СУММА(Изменения.Отгрузить)                        <> 0
		|		ИЛИ СУММА(Изменения.Резервировать)            <> 0
		|		ИЛИ СУММА(Изменения.КОбеспечению)             <> 0
		|		ИЛИ СУММА(Изменения.НеОбеспечивать)           <> 0
		|		ИЛИ СУММА(Изменения.Поступило)                <> 0
		|		ИЛИ СУММА(Изменения.ПоступитКДате)            <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(Изменения.ЗакрытьГрафикОтгрузки)    <> 0
		|		ИЛИ СУММА(Изменения.ПоставкаНаСогласовании)   <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказНаОтгрузку
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изменения.Номенклатура           КАК Номенклатура,
		|	Изменения.Характеристика         КАК Характеристика,
		|	Изменения.Склад                  КАК Склад
		|ПОМЕСТИТЬ РазличныеТоварыБезНазначений
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Изменения
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура                   КАК Номенклатура,
		|	Товары.Характеристика                 КАК Характеристика,
		|	Товары.Склад                          КАК Склад,
		|	РасчетПереопределяемый.ДатаПоставки   КАК ДатаПоставки,
		|	РасчетПереопределяемый.ГраницаПериода КАК ГраницаПериода,
		|	ЕСТЬNULL(НастройкаКонтроляОбеспечения.ПерераспределятьСкладскиеЗапасы, ЛОЖЬ)
		|		ИЛИ НЕ ЕСТЬNULL(НастройкаКонтроляОбеспеченияХарактеристика.КонтролироватьСвободныеОстатки,
		|				ЕСТЬNULL(НастройкаКонтроляОбеспеченияНоменклатура.КонтролироватьСвободныеОстатки,
		|					ЕСТЬNULL(НастройкаКонтроляОбеспечения.КонтролироватьСвободныеОстатки, ЛОЖЬ)))
		|		ИЛИ ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) КАК ПерераспределятьСкладскиеЗапасы
		|ПОМЕСТИТЬ ГраницыПериодаОбеспечения
		|ИЗ
		|	РазличныеТоварыБезНазначений КАК Товары
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетПереопределяемый ПО ИСТИНА
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспеченияХарактеристика
		|		ПО НастройкаКонтроляОбеспеченияХарактеристика.Склад = Товары.Склад
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура = Товары.Номенклатура
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Характеристика = Товары.Характеристика
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспеченияНоменклатура
		|		ПО НастройкаКонтроляОбеспеченияНоменклатура.Склад = Товары.Склад
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Номенклатура = Товары.Номенклатура
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура ЕСТЬ NULL
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспечения
		|		ПО НастройкаКонтроляОбеспечения.Склад = Товары.Склад
		|		 И НастройкаКонтроляОбеспечения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспечения.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура ЕСТЬ NULL
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Номенклатура ЕСТЬ NULL
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РазличныеТоварыБезНазначений
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе) КАК Состояние,
		|	МАКСИМУМ(ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0))       КАК Порядок,
		|	Движения.Регистратор                                                 КАК Регистратор,
		|	1                                                                    КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура                                                КАК Номенклатура,
		|	Движения.Характеристика                                              КАК Характеристика,
		|	Движения.Склад                                                       КАК Склад,
		|	Движения.Назначение                                                  КАК Назначение,
		|	СУММА(Движения.Поступило) - СУММА(Движения.Отгрузить)                КАК Запас,
		|	СУММА(Движения.Резервировать)                                        КАК Резерв,
		|	МАКСИМУМ(ЕСТЬNULL(НастройкаКонтроляОбеспеченияХарактеристика.КонтролироватьСвободныеОстатки,
		|		ЕСТЬNULL(НастройкаКонтроляОбеспеченияНоменклатура.КонтролироватьСвободныеОстатки,
		|			ЕСТЬNULL(НастройкаКонтроляОбеспечения.КонтролироватьСвободныеОстатки, ЛОЖЬ)))
		|		И ВЫРАЗИТЬ(Движения.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)) КАК РассчитыватьСвободныйОстаток
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Движения.Регистратор
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспеченияХарактеристика
		|		ПО НастройкаКонтроляОбеспеченияХарактеристика.Склад = Движения.Склад
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура = Движения.Номенклатура
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Характеристика = Движения.Характеристика
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспеченияНоменклатура
		|		ПО НастройкаКонтроляОбеспеченияНоменклатура.Склад = Движения.Склад
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Номенклатура = Движения.Номенклатура
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура ЕСТЬ NULL
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаКонтроляОбеспечения
		|		ПО НастройкаКонтроляОбеспечения.Склад = Движения.Склад
		|		 И НастройкаКонтроляОбеспечения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспечения.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаКонтроляОбеспеченияХарактеристика.Номенклатура ЕСТЬ NULL
		|		 И НастройкаКонтроляОбеспеченияНоменклатура.Номенклатура ЕСТЬ NULL
		|	
		|СГРУППИРОВАТЬ ПО
		|	Движения.Номенклатура,
		|	Движения.Характеристика,
		|	Движения.Склад,
		|	Движения.Назначение,
		|	Движения.Регистратор
		|ИМЕЮЩИЕ
		|		СУММА(Движения.Отгрузить) <> 0
		|		ИЛИ СУММА(Движения.Резервировать) <> 0
		|		ИЛИ СУММА(Движения.Поступило) <> 0
		|УПОРЯДОЧИТЬ ПО
		|	Порядок, Регистратор
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0)                   КАК Порядок,
		|	Движения.Регистратор                                                   КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка) КАК Состояние,
		|	1                                                                      КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура                                                  КАК Номенклатура,
		|	Движения.Характеристика                                                КАК Характеристика,
		|	Движения.Склад                                                         КАК Склад,
		|	Движения.Назначение                                                    КАК Назначение,
		|	Движения.ЗаказНаОтгрузку                                               КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки                                          КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО                                                           КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1)                                                     КАК ДатаПоступления,
		|	0                                                                      КАК Запас,
		|	0                                                                      КАК Свободно,
		|	Движения.Резервировать                                                 КАК Резервировать,
		|	ВЫБОР КОГДА Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|					ИЛИ Границы.ГраницаПериода >= Движения.ЖелаемаяДатаОтгрузки ТОГДА
		|				Движения.КОбеспечению
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК КОбеспечению,
		|	ВЫБОР КОГДА Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|					ИЛИ Границы.ГраницаПериода >= Движения.ЖелаемаяДатаОтгрузки ТОГДА
		|				0
		|			ИНАЧЕ
		|				Движения.КОбеспечению
		|		КОНЕЦ КАК ОтложитьОбеспечение,
		|	ВЫБОР КОГДА Границы.ГраницаПериода = ДАТАВРЕМЯ(1,1,1)
		|					ИЛИ Границы.ГраницаПериода >= Движения.ЖелаемаяДатаОтгрузки ТОГДА
		|				Движения.КОбеспечению
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК КОбеспечениюИтогНаДату,
		|	Движения.НеОбеспечивать                                                КАК НеОбеспечивать,
		|	0                                                                      КАК Распределено,
		|	0                                                                      КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Движения.Регистратор
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГраницыПериодаОБеспечения КАК Границы
		|		ПО Границы.Номенклатура = Движения.Номенклатура
		|		 И Границы.Характеристика = Движения.Характеристика
		|		 И Границы.Склад = Движения.Склад
		|ГДЕ
		|	Движения.КОбеспечению <> 0
		|		ИЛИ Движения.Резервировать <> 0
		|		ИЛИ Движения.НеОбеспечивать <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0)          КАК Порядок,
		|	Движения.Регистратор                                          КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ВРезерве) КАК Состояние,
		|	1                                                             КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура                                         КАК Номенклатура,
		|	Движения.Характеристика                                       КАК Характеристика,
		|	Движения.Склад                                                КАК Склад,
		|	Движения.Назначение                                           КАК Назначение,
		|	Движения.ЗаказНаОтгрузку                                      КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки                                 КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО                                                  КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1)                                            КАК ДатаПоступления,
		|	0                                                             КАК Запас,
		|	0                                                             КАК Свободно,
		|	0                                                             КАК Резервировать,
		|	0                                                             КАК КОбеспечению,
		|	0                                                             КАК ОтложитьОбеспечение,
		|	0                                                             КАК КОбеспечениюИтогНаДату,
		|	0                                                             КАК НеОбеспечивать,
		|	Движения.Резервировать                                        КАК Распределено,
		|	0                                                             КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Движения.Регистратор
		|ГДЕ
		|	Движения.Резервировать <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0)                КАК Порядок,
		|	Движения.Регистратор                                                КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.НеОбеспечивать) КАК Состояние,
		|	1                                                                   КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура                                               КАК Номенклатура,
		|	Движения.Характеристика                                             КАК Характеристика,
		|	Движения.Склад                                                      КАК Склад,
		|	Движения.Назначение                                                 КАК Назначение,
		|	Движения.ЗаказНаОтгрузку                                            КАК ЗаказНаОтгрузку,
		|	Движения.ЖелаемаяДатаОтгрузки                                       КАК ЖелаемаяДатаОтгрузки,
		|	НЕОПРЕДЕЛЕНО                                                        КАК ЗаказНаПоступление,
		|	ДАТАВРЕМЯ(1, 1, 1)                                                  КАК ДатаПоступления,
		|	0                                                                   КАК Запас,
		|	0                                                                   КАК Свободно,
		|	0                                                                   КАК Резервировать,
		|	0                                                                   КАК КОбеспечению,
		|	0                                                                   КАК ОтложитьОбеспечение,
		|	0                                                                   КАК КОбеспечениюИтогНаДату,
		|	0                                                                   КАК НеОбеспечивать,
		|	0                                                                   КАК Распределено,
		|	Движения.НеОбеспечивать                                             КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Движения.Регистратор
		|ГДЕ
		|	Движения.НеОбеспечивать <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0)     КАК Порядок,
		|	Движения.Регистратор                                     КАК Регистратор,
		|	
		|	ВЫБОР КОГДА Движения.ПоступитКДате <> 0 ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|		КОНЕЦ КАК Состояние,
		|	1                                                        КАК ТипЗаписиРаспределенияЗапасов,
		|	Движения.Номенклатура                                    КАК Номенклатура,
		|	Движения.Характеристика                                  КАК Характеристика,
		|	Движения.Склад                                           КАК Склад,
		|	Движения.Назначение                                      КАК Назначение,
		|	НЕОПРЕДЕЛЕНО                                             КАК ЗаказНаОтгрузку,
		|	ДАТАВРЕМЯ(1, 1, 1)                                       КАК ЖелаемаяДатаОтгрузки,
		|	Движения.ЗаказНаПоступление                              КАК ЗаказНаПоступление,
		|	Движения.ДатаПоступления                                 КАК ДатаПоступления,
		|	Движения.ПоставкаНаСогласовании + Движения.ПоступитКДате КАК Запас,
		|	0                                                        КАК Свободно,
		|	0                                                        КАК Резервировать,
		|	0                                                        КАК КОбеспечению,
		|	0                                                        КАК ОтложитьОбеспечение,
		|	0                                                        КАК КОбеспечениюИтогНаДату,
		|	0                                                        КАК НеОбеспечивать,
		|	0                                                        КАК Распределено,
		|	0                                                        КАК НеОбеспечено
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Движения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Движения.Регистратор
		|ГДЕ
		|	Движения.ПоставкаНаСогласовании <> 0
		|		ИЛИ Движения.ПоступитКДате <> 0
		|УПОРЯДОЧИТЬ ПО
		|	Порядок, Регистратор
		|;
		|
		|/////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Порядок КАК Порядок,
		|	Набор.Регистратор КАК Регистратор,
		|	Набор.ЗаказНаПоступление КАК ЗаказНаПоступление
		|ИЗ(
		|	ВЫБРАТЬ
		|		ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0) КАК Порядок,
		|		Изменения.Регистратор КАК Регистратор,
		|		Изменения.ЗаказНаПоступление КАК ЗаказНаПоступление
		|	ИЗ
		|		РаспределениеЗапасовДвиженияИзменение КАК Изменения
		|		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|			ПО НормативныйГрафик.ЭтапПроизводства = Изменения.Регистратор
		|	ГДЕ
		|		Изменения.ЗакрытьГрафикПоступления <> 0
		|			И ИСТИНА В(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						ИСТИНА
		|					ИЗ
		|						РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
		|					ГДЕ
		|						Движения.Активность
		|							И Движения.ЗаказНаПоступление = Изменения.ЗаказНаПоступление
		|							И Движения.Номенклатура = Изменения.Номенклатура
		|							И Движения.Характеристика = Изменения.Характеристика
		|							И Движения.Склад = Изменения.Склад
		|							И Движения.Назначение = Изменения.Назначение
		|							И (Движения.ПоступитКДате <> 0
		|								ИЛИ Движения.ПоставкаНаСогласовании <> 0))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0) КАК Порядок,
		|		Изменения.Регистратор КАК Регистратор,
		|		Изменения.ЗаказНаОтгрузку КАК ЗаказНаПоступление
		|	ИЗ
		|		РаспределениеЗапасовДвиженияИзменение КАК Изменения
		|		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|			ПО НормативныйГрафик.ЭтапПроизводства = Изменения.Регистратор
		|	ГДЕ
		|		Изменения.ЗакрытьГрафикОтгрузки <> 0
		|			И ИСТИНА В(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						ИСТИНА
		|					ИЗ
		|						РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
		|					ГДЕ
		|						Движения.Активность
		|							И Движения.ЗаказНаОтгрузку = Изменения.ЗаказНаОтгрузку
		|							И Движения.Номенклатура = Изменения.Номенклатура
		|							И Движения.Характеристика = Изменения.Характеристика
		|							И Движения.Склад = Изменения.Склад
		|							И Движения.Назначение = Изменения.Назначение
		|							И Движения.НеОбеспечивать <> 0)) КАК Набор
		|УПОРЯДОЧИТЬ ПО
		|	Порядок, Регистратор
		|;
		|
		|/////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска, 0) КАК Порядок,
		|	Изменения.Регистратор КАК Регистратор,
		|	Изменения.Номенклатура КАК Номенклатура,
		|	Изменения.Характеристика КАК Характеристика,
		|	Изменения.Склад КАК Склад,
		|	Изменения.Назначение КАК Назначение,
		|	Изменения.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК Изменения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО НормативныйГрафик.ЭтапПроизводства = Изменения.Регистратор
		|ГДЕ
		|	&ДосчитыватьРегистрРегламентнымЗаданием
		|УПОРЯДОЧИТЬ ПО
		|	Порядок, Регистратор";
		
	Текст = СтрЗаменить(Текст, "НаборЗаписейРаспределениеЗапасовДвижения", СтрШаблон("(%1)", ТекстНабор));
	
	Подстановки = ОбеспечениеВДокументахСервер.ПодстановкиГраницыОбеспечиваемогоПериода(
		"Товары.Номенклатура", "Товары.Характеристика", "Товары.Склад", "&НачалоТекущегоДня", "ИСТИНА");
	
	Текст = СтрЗаменить(Текст, "РасчетПереопределяемый.ГраницаПериода",             Подстановки.Поле);
	Текст = СтрЗаменить(Текст, "РасчетПереопределяемый.ДатаПоставки",               Подстановки.ПолеДатаПоставки);
	Текст = СтрЗаменить(Текст, "ЛЕВОЕ СОЕДИНЕНИЕ РасчетПереопределяемый ПО ИСТИНА", Подстановки.Соединения);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	ДосчитыватьРегистрРегламентнымЗаданием = РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием();
	Запрос.УстановитьПараметр("ДосчитыватьРегистрРегламентнымЗаданием", ДосчитыватьРегистрРегламентнымЗаданием);
	Запрос.Текст = Текст;
	
	ВыборкаТовар = Неопределено;
	Выборка = Неопределено;
	ВыборкаЗаказНаПроизводство = Неопределено;
	ВыборкаЗаданий = Неопределено;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Отражение = РезультатЗапроса[РезультатЗапроса.ВГраница() - 3];
	Если Не Отражение.Пустой() Тогда
		ВыборкаТовар = Отражение.Выбрать();
		ВыборкаТовар.Следующий();
	КонецЕсли;
	
	Отражение = РезультатЗапроса[РезультатЗапроса.ВГраница() - 2];
	Если Не Отражение.Пустой() Тогда
		Выборка = Отражение.Выбрать();
		Выборка.Следующий();
	КонецЕсли;
	
	Отражение = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1];
	Если Не Отражение.Пустой() Тогда
		ВыборкаЗаказНаПроизводство = Отражение.Выбрать();
		ВыборкаЗаказНаПроизводство.Следующий();
	КонецЕсли;
	
	Отражение = РезультатЗапроса[РезультатЗапроса.ВГраница()];
	Если Не Отражение.Пустой() Тогда
		ВыборкаЗаданий = Отражение.Выбрать();
		ВыборкаЗаданий.Следующий();
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Запрос", Запрос);
	Параметры.Вставить("Выборка", Выборка);
	Параметры.Вставить("ВыборкаТовар", ВыборкаТовар);
	Параметры.Вставить("ВыборкаЗаказНаПроизводство", ВыборкаЗаказНаПроизводство);
	Параметры.Вставить("ВыборкаЗаданий", ВыборкаЗаданий);
	
КонецПроцедуры

Процедура ОтразитьДвиженияПриЗаписиДокументаПакетно(Запрос, Заказ, Параметры) Экспорт
	
	Выборка = Параметры.Выборка;
	ВыборкаТовар = Параметры.ВыборкаТовар;
	ВыборкаЗаказНаПроизводство = Параметры.ВыборкаЗаказНаПроизводство;
	ВыборкаЗаданий = Параметры.ВыборкаЗаданий;
	
	// Записи по этапу как по заказу на отгрузку и заказу на поступление.
	ЕстьЗаписи = Выборка <> Неопределено И Выборка.Регистратор = Заказ;
	
	Если ЕстьЗаписи Тогда
		
		Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
		
		Пока ЕстьЗаписи Цикл
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Если Не Выборка.Следующий() Тогда
				Выборка = Неопределено;
			КонецЕсли;
			
			ЕстьЗаписи = Выборка <> Неопределено И Выборка.Регистратор = Заказ;
		КонецЦикла;
		
		Набор.Записать(Ложь);
		
	КонецЕсли;
	
	// Записи по этапу по состоянию остаток на складе.
	ЕстьЗаписи = ВыборкаТовар <> Неопределено И ВыборкаТовар.Регистратор = Заказ;
	
	Если ЕстьЗаписи Тогда
		
		Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
		
		Пока ЕстьЗаписи Цикл
		
			Набор.Отбор.Номенклатура.Установить(ВыборкаТовар.Номенклатура);
			Набор.Отбор.Характеристика.Установить(ВыборкаТовар.Характеристика);
			Набор.Отбор.Склад.Установить(ВыборкаТовар.Склад);
			Набор.Отбор.Назначение.Установить(ВыборкаТовар.Назначение);
			Набор.Отбор.Состояние.Установить(ВыборкаТовар.Состояние);
			
			Набор.Прочитать();
			
			Если Набор.Количество() = 0 Тогда
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаТовар,
					"Номенклатура,Характеристика,Склад,Назначение,Состояние,ТипЗаписиРаспределенияЗапасов");
			КонецЕсли;
			Запись = Набор[0];
			Запись.Запас = Запись.Запас + ВыборкаТовар.Запас;
			Запись.Резерв = Запись.Резерв + ВыборкаТовар.Резерв;
			
			Если Запись.Назначение.Пустая() Тогда
				Запись.ВНаличии = Запись.ВНаличии + ВыборкаТовар.Запас;
			КонецЕсли;
			
			Если ВыборкаТовар.РассчитыватьСвободныйОстаток Тогда
				
				Запись.Свободно = Запись.Свободно + ВыборкаТовар.Запас - ВыборкаТовар.Резерв;
				
			Иначе
				
				Запись.Свободно = 0;
				
			КонецЕсли;
				
			Если Запись.ВНаличии = 0 И Запись.Запас = 0 И Запись.Резерв = 0 И Запись.Свободно = 0 Тогда
				Набор.Очистить();
			КонецЕсли;
			
			Набор.Записать();
			Набор.Очистить();
			
			Если Не ВыборкаТовар.Назначение.Пустая() И ВыборкаТовар.Запас <> 0 Тогда
				Набор.Отбор.Назначение.Установить(Справочники.Назначения.ПустаяСсылка());
				Набор.Прочитать();
				Если Набор.Количество() = 0 Тогда
					Запись = Набор.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВыборкаТовар,
						"Номенклатура,Характеристика,Склад,Состояние,ТипЗаписиРаспределенияЗапасов");
				КонецЕсли;
				Запись = Набор[0];
				Запись.ВНаличии = Запись.ВНаличии + ВыборкаТовар.Запас;
				Если Запись.ВНаличии = 0 И Запись.Запас = 0 И Запись.Резерв = 0 И Запись.Свободно = 0 Тогда
					Набор.Очистить();
				КонецЕсли;
				
				Набор.Записать();
				Набор.Очистить();
				
			КонецЕсли;
			
			Если Не ВыборкаТовар.Следующий() Тогда
				ВыборкаТовар = Неопределено;
			КонецЕсли;
			
			ЕстьЗаписи = ВыборкаТовар <> Неопределено И ВыборкаТовар.Регистратор = Заказ;
		КонецЦикла;
		
	КонецЕсли;
	
	// Записи по графику поступления заказа на производство.
	ЕстьЗаписи = ВыборкаЗаказНаПроизводство <> Неопределено И ВыборкаЗаказНаПроизводство.Регистратор = Заказ;
	
	Если ЕстьЗаписи Тогда
		
		Запрос.УстановитьПараметр("ЗаказНаПроизводство", ВыборкаЗаказНаПроизводство.ЗаказНаПоступление);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Движения.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	Движения.Номенклатура       КАК Номенклатура,
			|	Движения.Характеристика     КАК Характеристика,
			|	Движения.Склад              КАК Склад,
			|	Движения.Назначение         КАК Назначение,
			|	
			|	СУММА(ЕСТЬNULL(
			|			Движения.ПоставкаНаСогласовании
			|				+ Движения.ПоступитКДате
			|				- Движения.ЗакрытьГрафикПоступления, 0)) КАК Количество
			|	
			|ПОМЕСТИТЬ ОстаткиПланируемыхПоступлений
			|ИЗ
			|	РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
			|ГДЕ
			|	Движения.ЗаказНаПоступление = &ЗаказНаПроизводство
			|		И Движения.Активность
			|СГРУППИРОВАТЬ ПО
			|	Движения.ЗаказНаПоступление,
			|	Движения.Номенклатура,
			|	Движения.Характеристика,
			|	Движения.Склад,
			|	Движения.Назначение
			|ИНДЕКСИРОВАТЬ ПО
			|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение
			|;
			|
			|////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Остатки.Номенклатура       КАК Номенклатура,
			|	Остатки.Характеристика     КАК Характеристика,
			|	Остатки.Склад              КАК Склад,
			|	Остатки.Назначение         КАК Назначение,
			|	Остатки.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	1                          КАК ТипЗаписиРаспределенияЗапасов,
			|
			|	ВЫБОР КОГДА Движения.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
			|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
			|			ИНАЧЕ
			|				ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
			|		КОНЕЦ КАК Состояние,
			|	
			|	Движения.ДатаПоступления КАК ДатаПоступления,
			|	МАКСИМУМ(Остатки.Количество) КАК КоличествоВсего,
			|	СУММА(Движения.ПоставкаНаСогласовании + Движения.ПоступитКДате) КАК Запас,
			// так как ниже пересчитываться будет только номенклатура этапа, нужно сохранить остаток по остальной номенклатуре.
			|	МАКСИМУМ(РаспределениеЗапасов.Свободно) КАК Свободно
			|ИЗ
			|	ОстаткиПланируемыхПоступлений КАК Остатки
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
			|		ПО Движения.Номенклатура         = Остатки.Номенклатура
			|		 И Движения.Характеристика       = Остатки.Характеристика
			|		 И Движения.Склад                = Остатки.Склад
			|		 И Движения.Назначение           = Остатки.Назначение
			|		 И Движения.ЗаказНаОтгрузку      = НЕОПРЕДЕЛЕНО       // для использования индекса
			|		 И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1) // для использования индекса
			|		 И Движения.ЗаказНаПоступление   = Остатки.ЗаказНаПоступление
			|		 И Движения.Активность
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК РаспределениеЗапасов
			|		ПО РаспределениеЗапасов.Номенклатура         = Движения.Номенклатура
			|		 И РаспределениеЗапасов.Характеристика       = Движения.Характеристика
			|		 И РаспределениеЗапасов.Склад                = Движения.Склад
			|		 И РаспределениеЗапасов.Назначение           = Движения.Назначение
			|		 И РаспределениеЗапасов.ЗаказНаОтгрузку      = НЕОПРЕДЕЛЕНО       // для использования индекса
			|		 И РаспределениеЗапасов.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1) // для использования индекса
			|		 И РаспределениеЗапасов.ЗаказНаПоступление   = Движения.ЗаказНаПоступление
			|		 И РаспределениеЗапасов.ДатаПоступления      = Движения.ДатаПоступления
			|		 И РаспределениеЗапасов.Состояние =
			|			ВЫБОР КОГДА Движения.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
			|						ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
			|					ИНАЧЕ
			|						ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
			|				КОНЕЦ
			|ГДЕ
			|	Остатки.Количество > 0
			|СГРУППИРОВАТЬ ПО
			|	Остатки.ЗаказНаПоступление,
			|	Остатки.Номенклатура,
			|	Остатки.Характеристика,
			|	Остатки.Склад,
			|	Остатки.Назначение,
			|	Движения.ДатаПоступления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказНаПоступление, Номенклатура, Характеристика, Склад, Назначение, ДатаПоступления УБЫВ
			|;
			|
			|////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ГруппировкаЗаписей.ЗаказНаОтгрузку       КАК ЗаказНаОтгрузку,
			|	ГруппировкаЗаписей.Номенклатура          КАК Номенклатура,
			|	ГруппировкаЗаписей.Характеристика        КАК Характеристика,
			|	ГруппировкаЗаписей.Склад                 КАК Склад,
			|	ГруппировкаЗаписей.Назначение            КАК Назначение,
			|	1                                        КАК ТипЗаписиРаспределенияЗапасов,
			|	ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка) КАК Состояние,
			|	ВЫБОР КОГДА ГруппировкаЗаписей.НеОбеспечивать < ГруппировкаЗаписей.ЗакрытьГрафикОтгрузки ТОГДА
			|				0
			|			ИНАЧЕ
			|				ГруппировкаЗаписей.НеОбеспечивать - ГруппировкаЗаписей.ЗакрытьГрафикОтгрузки
			|		КОНЕЦ КАК НеОбеспечивать
			|ИЗ(
			|	ВЫБРАТЬ
			|		Движения.ЗаказНаОтгрузку                           КАК ЗаказНаОтгрузку,
			|		Движения.Номенклатура                              КАК Номенклатура,
			|		Движения.Характеристика                            КАК Характеристика,
			|		Движения.Склад                                     КАК Склад,
			|		Движения.Назначение                                КАК Назначение,
			|		СУММА(Движения.НеОбеспечивать)                     КАК НеОбеспечивать,
			|		СУММА(Движения.ЗакрытьГрафикОтгрузки)              КАК ЗакрытьГрафикОтгрузки
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
			|			
			|	ГДЕ
			|		Движения.ЗаказНаОтгрузку = &ЗаказНаПроизводство
			|			И Движения.Активность
			|	СГРУППИРОВАТЬ ПО
			|		Движения.Номенклатура,
			|		Движения.Характеристика,
			|		Движения.Склад,
			|		Движения.Назначение,
			|		Движения.ЗаказНаОтгрузку
			|	ИМЕЮЩИЕ
			|		СУММА(Движения.НеОбеспечивать) <> 0) ГруппировкаЗаписей
			|ГДЕ
			|	ВЫБОР КОГДА ГруппировкаЗаписей.НеОбеспечивать < ГруппировкаЗаписей.ЗакрытьГрафикОтгрузки ТОГДА
			|				0
			|			ИНАЧЕ
			|				ГруппировкаЗаписей.НеОбеспечивать - ГруппировкаЗаписей.ЗакрытьГрафикОтгрузки
			|		КОНЕЦ  <> 0
			|;
			|
			|/////////////////////////////////////////
			|УНИЧТОЖИТЬ ОстаткиПланируемыхПоступлений";
		Пакет = Запрос.ВыполнитьПакет();
		
		ВыборкаОжидаемоеПоступление = Пакет[1].Выбрать();
		
		Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
		Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
		Набор.Отбор.ЗаказНаПоступление.Установить(ВыборкаЗаказНаПроизводство.ЗаказНаПоступление);
		
		Пока ВыборкаОжидаемоеПоступление.СледующийПоЗначениюПоля("Номенклатура") Цикл
			
			Пока ВыборкаОжидаемоеПоступление.СледующийПоЗначениюПоля("Характеристика") Цикл
				
				Пока ВыборкаОжидаемоеПоступление.СледующийПоЗначениюПоля("Склад") Цикл
					
					Пока ВыборкаОжидаемоеПоступление.СледующийПоЗначениюПоля("Назначение") Цикл
						
						Распределить = ВыборкаОжидаемоеПоступление.КоличествоВсего;
						Пока ВыборкаОжидаемоеПоступление.Следующий() Цикл
							
							Запас = Макс(Мин(Распределить, ВыборкаОжидаемоеПоступление.Запас), 0);
							Распределить = Распределить - Запас;
							
							Если Запас <> 0 Тогда
								НоваяСтрока = Набор.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОжидаемоеПоступление);
								НоваяСтрока.Запас = Запас;
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Набор.Записать();
		
		ТаблицаОжидаемаяОтгрузка = Пакет[2].Выгрузить();
		Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
		Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(1);
		Набор.Отбор.ЗаказНаОтгрузку.Установить(ВыборкаЗаказНаПроизводство.ЗаказНаПоступление);
		Набор.Загрузить(ТаблицаОжидаемаяОтгрузка);
		Набор.Записать();
		
		Если Не ВыборкаЗаказНаПроизводство.Следующий() Тогда
			ВыборкаЗаказНаПроизводство = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РазличныеТовары.Номенклатура           КАК Номенклатура,
		|	РазличныеТовары.Характеристика         КАК Характеристика,
		|	РазличныеТовары.Склад                  КАК Склад,
		|	РазличныеТовары.Назначение             КАК Назначение,
		|	СУММА(РазличныеТовары.Отгрузить) <> 0
		|		ИЛИ СУММА(РазличныеТовары.Резервировать) <> 0
		|		ИЛИ СУММА(РазличныеТовары.Поступило) <> 0 КАК РаспределятьЕслиОстатокНеотрицательный
		|ПОМЕСТИТЬ РазличныеТовары
		|ИЗ
		|	РаспределениеЗапасовДвиженияИзменение КАК РазличныеТовары
		|ГДЕ
		|	РазличныеТовары.Регистратор = &Заказ
		|СГРУППИРОВАТЬ ПО
		|	РазличныеТовары.Номенклатура,
		|	РазличныеТовары.Характеристика,
		|	РазличныеТовары.Склад,
		|	РазличныеТовары.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение";
	Запрос.Выполнить();
	
	ЗаписатьРаспределениеЗапасовНаПотребностиПоТаблицеРазличныеТовары(Запрос);
	
	ДосчитыватьРегистрРегламентнымЗаданием = РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием();
	
	//
	Если Не ДосчитыватьРегистрРегламентнымЗаданием Тогда
		
		РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "РазличныеТовары", "ПередЗаписью");
		
		ЗаписатьРаспределениеЗапасов(Запрос, Ложь, "РазличныеТовары");
		
		РаспределениеЗапасов.ДобавитьВременныеТаблицыАктуализацииСостояний(Запрос, "РазличныеТовары", "ПриЗаписи");
		РаспределениеЗапасов.ТаблицаИзмененийРаспределениеЗапасовДляРасчетаСостояний(Запрос);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Таблица.Заказ КАК Заказ
			|ИЗ
			|	СостоянияЗаказовКлиентовИзменение КАК Таблица
			|;
			|//////////////////////////////
			|
			|ВЫБРАТЬ
			|	Таблица.Заказ КАК Заказ
			|ИЗ
			|	СостоянияВнутреннихЗаказовИзменение КАК Таблица
			|;
			|//////////////////////////////
			|
			|ВЫБРАТЬ
			|	Таблица.Заказ КАК Заказ
			|ИЗ
			|	СостоянияЭтаповПроизводстваИзменение КАК Таблица";
		Пакет = Запрос.ВыполнитьПакет();
		МассивЗаказов = Пакет[0].Выгрузить().ВыгрузитьКолонку("Заказ");
		РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(МассивЗаказов, Ложь, Ложь);
		МассивЗаказов = Пакет[1].Выгрузить().ВыгрузитьКолонку("Заказ");
		РегистрыСведений.СостоянияВнутреннихЗаказов.ОтразитьСостояниеЗаказа(МассивЗаказов);
		МассивЗаказов = Пакет[2].Выгрузить().ВыгрузитьКолонку("Заказ");
		ОбеспечениеПроизводства.ПриИзмененииОбеспечения(МассивЗаказов);
		
		Запрос.Текст =
			"УНИЧТОЖИТЬ РаспределеноПоЗаказам;
			|УНИЧТОЖИТЬ ПотребностиПоЗаказамГруппировка;
			|УНИЧТОЖИТЬ ПотребностиПоЗаказам;
			|УНИЧТОЖИТЬ ПотребностиПоТовару;
			|УНИЧТОЖИТЬ ГрафикПоступления;
			|УНИЧТОЖИТЬ ГрафикПоступленияПоТовару;
			|УНИЧТОЖИТЬ СостоянияЗаказовКлиентовИзменение;
			|УНИЧТОЖИТЬ СостоянияВнутреннихЗаказовИзменение;
			|УНИЧТОЖИТЬ СостоянияЭтаповПроизводстваИзменение";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = "УНИЧТОЖИТЬ РазличныеТовары";
	Запрос.Выполнить();
	
	// Записи заданий к распределению запасов.
	ЕстьЗаписи = ВыборкаЗаданий <> Неопределено И ВыборкаЗаданий.Регистратор = Заказ;
	
	Если ЕстьЗаписи Тогда
		
		РазделительЗаписи = Новый УникальныйИдентификатор();
		ТекущаяДатаСеанса = ТекущаяДатаСеанса();
		Набор = РегистрыСведений.ЗаданияКРаспределениюЗапасов.СоздатьНаборЗаписей();
		Набор.Отбор.РазделительЗаписи.Установить(РазделительЗаписи);
		
		Пока ЕстьЗаписи Цикл
			Запись = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаЗаданий);
			Запись.РазделительЗаписи = РазделительЗаписи;
			Запись.ДатаЗаписи = ТекущаяДатаСеанса;
			
			Если Не ВыборкаЗаданий.Следующий() Тогда
				ВыборкаЗаданий = Неопределено;
			КонецЕсли;
			
			ЕстьЗаписи = ВыборкаЗаданий <> Неопределено И ВыборкаЗаданий.Регистратор = Заказ;
		КонецЦикла;
		
		Набор.Записать(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТКА

////////////////////////////////////////////////////////////////////////////////
// Служебные

// Параметры:
//  Таблица - ТаблицаЗначений - таблица в которую нужно добавить колонки.
Процедура ДобавитьКолонкиРегистра(Таблица) Экспорт
	
	ДобавляемыеКолонки =
		"Регистратор,
		|Номенклатура,
		|Характеристика,
		|Склад,
		|Назначение,
		|ЗаказНаОтгрузку,
		|ЖелаемаяДатаОтгрузки,
		|ЗаказНаПоступление,
		|ДатаПоступления,
		|Отгрузить,
		|Резервировать,
		|КОбеспечению,
		|НеОбеспечивать,
		|Поступило,
		|ПоступитКДате,
		|ЗакрытьГрафикПоступления,
		|ЗакрытьГрафикОтгрузки,
		|ПоставкаНаСогласовании";
	ДобавляемыеКолонки = Новый Структура(ДобавляемыеКолонки);
	
	ВсеКолонки = РегистрыНакопления.РаспределениеЗапасовДвижения.СоздатьНаборЗаписей().ВыгрузитьКолонки().Колонки;
	Для Каждого Колонка Из ДобавляемыеКолонки Цикл
		Если Таблица.Колонки.Найти(Колонка.Ключ) = Неопределено Тогда
			Таблица.Колонки.Добавить(Колонка.Ключ, ВсеКолонки.Найти(Колонка.Ключ).ТипЗначения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//  ПолноеИмяДокумента - Строка - полное имя документа.
// Возвращаемое значение:
//  Строка - текст запроса.
Функция ТекстыЗапросовПроведенияДокументов(ПолноеИмяДокумента) Экспорт
	
	ИмяРегистра = "РаспределениеЗапасовДвижения";
	Регистры = Новый Структура(ИмяРегистра);
	ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	ДопПараметры.ПолучитьТекстыЗапроса = Истина;
	ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
	
	Если ПолноеИмяДокумента = "Документ.ЗаказКлиента"
			Или ПолноеИмяДокумента = "Документ.ЗаявкаНаВозвратТоваровОтКлиента"
			Или ПолноеИмяДокумента = "Документ.КорректировкаРеализации"
			Или ПолноеИмяДокумента = "Документ.ЗаказНаПеремещение"
			Или ПолноеИмяДокумента = "Документ.ЗаказНаСборку"
			//++ НЕ УТ
			Или ПолноеИмяДокумента = "Документ.ЗаказМатериаловВПроизводство"
			Или ПолноеИмяДокумента = "Документ.ЗаказПереработчику"
			//-- НЕ УТ
			//++ НЕ УТКА
			Или ПолноеИмяДокумента = "Документ.ЗаказДавальца"
			//++ Устарело_Производство21
			Или ПолноеИмяДокумента = "Документ.ЗаказНаПроизводство"
			Или ПолноеИмяДокумента = "Документ.КорректировкаЗаказаМатериаловВПроизводство"
			//-- Устарело_Производство21
			Или ПолноеИмяДокумента = "Документ.ЗаказНаРемонт"
			Или ПолноеИмяДокумента = "Документ.ЭтапПроизводства2_2"
			//-- НЕ УТКА
			Или ПолноеИмяДокумента = "Документ.ЗаказНаВнутреннееПотребление"
			Или ПолноеИмяДокумента = "Документ.АктВыполненныхРабот"
			Или ПолноеИмяДокумента = "Документ.РеализацияТоваровУслуг"
			Или ПолноеИмяДокумента = "Документ.ВводОстатков" Тогда
				
			ТекстыЗапроса = Документы[ИмяДокумента].ТекстыЗапросаРаспределениеЗапасовДвиженияДляОбновленияИБ();
			
	//++ Локализация
	ИначеЕсли ПолноеИмяДокумента = "Документ.МаркировкаТоваровГИСМ" Тогда
		
		ТекстыЗапроса = МаркировкаТоваровГИСМУТ.ДанныеДокументаДляПроведения(
			Тип("ДокументСсылка.МаркировкаТоваровГИСМ"), Регистры, ДопПараметры);
		
	ИначеЕсли ПолноеИмяДокумента = "Документ.ПеремаркировкаТоваровГИСМ" Тогда
		
		ТекстыЗапроса = МаркировкаТоваровГИСМУТ.ДанныеДокументаДляПроведения(
			Тип("ДокументСсылка.ПеремаркировкаТоваровГИСМ"), Регистры, ДопПараметры);
		
	//-- Локализация
	Иначе
		
		ТекстыЗапроса = Документы[ИмяДокумента].ДанныеДокументаДляПроведения(Неопределено, Регистры, ДопПараметры);
		
	КонецЕсли;
	
	Тексты = Новый Массив();
	Для Каждого Элемент Из ТекстыЗапроса Цикл
		Если Элемент.Представление = "РаспределениеЗапасовДвижения" Тогда
			Тексты.Добавить(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(Тексты, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Ссылка) = &Ссылка", ".Ссылка.Проведен)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Ссылка В (&Ссылка)", ".Ссылка.Проведен");
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращаемое значение:
//  Структура - структура с полями:
//   * ИспользоватьРасширенныеВозможностиЗаказаКлиента - Булево -
//   * ТипыОжидаемоеПоступление - Массив из Тип -
Функция ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов() Экспорт

	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
		ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	ЗначенияПараметров.Вставить("ТипыОжидаемоеПоступление",
		Метаданные.ОпределяемыеТипы.ОжидаемоеПоступление.Тип.Типы());
	Возврат ЗначенияПараметров;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьРаспределениеЗапасов(Запрос, ПолучатьГраницыПериодаОбеспечения, ИмяТаблицыТовары = "ТоварыДляРаспределенияЗапасов")
	
	Результат = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	Результат.Колонки.Добавить("Пустая", Новый ОписаниеТипов("Булево"));
	Запрос.Текст = РаспределениеЗапасов.ТекстЗапросаРаспределенияЗапасов(ПолучатьГраницыПериодаОбеспечения, ИмяТаблицыТовары);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	Таблица = Пакет[Пакет.ВГраница() - 1].Выгрузить();
	График = Пакет[Пакет.ВГраница()].Выгрузить();
	
	РаспределениеЗапасов.РаспределитьЗапасыВТаблицу(Результат, Таблица, График, Истина);
	ВсегоСтрок = Результат.Количество();
	
	Номенклатура   = Неопределено;
	Характеристика = Неопределено;
	Склад          = Неопределено;
	Назначение     = Неопределено;
	
	Набор = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей();
	
	Для Индекс = 0 По ВсегоСтрок - 1 Цикл
		
		ТекСтрока = Результат[Индекс];
		Если Номенклатура <> ТекСтрока.Номенклатура
				Или Характеристика <> ТекСтрока.Характеристика
				Или Склад <> ТекСтрока.Склад
				Или Назначение <> ТекСтрока.Назначение Тогда
					
					Если Номенклатура <> Неопределено Тогда
						Набор.Записать();
						Набор.Очистить();
					КонецЕсли;
					
					Номенклатура   = ТекСтрока.Номенклатура;
					Характеристика = ТекСтрока.Характеристика;
					Склад          = ТекСтрока.Склад;
					Назначение     = ТекСтрока.Назначение;
					
					Набор.Отбор.ТипЗаписиРаспределенияЗапасов.Установить(0);
					Набор.Отбор.Номенклатура.Установить(Номенклатура);
					Набор.Отбор.Характеристика.Установить(Характеристика);
					Набор.Отбор.Склад.Установить(Склад);
					Набор.Отбор.Назначение.Установить(Назначение);
		КонецЕсли;
		
		Если Не ТекСтрока.Пустая Тогда
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), ТекСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Номенклатура <> Неопределено Тогда
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстыШаблоновОтражения(Регистры, ТекстЗапросаОперации)
	
	ТекстыШаблоновОтражения = Новый Структура();
	ИмяРегистра = "РаспределениеЗапасовДвижения";
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить(ИмяРегистра, ТекстЗапросаОперации);
	КонецЕсли;
	Возврат ТекстыШаблоновОтражения;
	
КонецФункции

Функция ИзменилосьМестоВОчереди(Запрос)
	
	Результат = Ложь;
	Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("РеестрДокументовИзменения") <> Неопределено Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ИзменилосьМестоВОчереди
			|ИЗ
			|	РеестрДокументовИзменения КАК Таблица
			|ГДЕ
			|	НЕ Таблица.ДополнительнаяЗаписьДоИзменения
			|		ИЛИ НЕ Таблица.ДополнительнаяЗапись
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Ссылка
			|ИМЕЮЩИЕ
			|	НЕ МАКСИМУМ(Таблица.ПриоритетДоИзменения) ЕСТЬ NULL
			|		И НЕ МАКСИМУМ(Таблица.Приоритет) ЕСТЬ NULL
			|		И (МАКСИМУМ(Таблица.ПриоритетДоИзменения) <> МАКСИМУМ(Таблица.Приоритет)
			|			ИЛИ МАКСИМУМ(Таблица.ДатаДокументаИБ) <> МИНИМУМ(Таблица.ДатаДокументаИБ))";
		Результат = Не Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
