#Область ПрограммныйИнтерфейс

Процедура ОбновитьПризнакВнутригрупповогоПеремещенияВЗаявках() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	НЕ ЗаявкаНаРасходованиеДенежныхСредств.ЭтоВнутригрупповоеПеремещение
	|	И ЗаявкаНаРасходованиеДенежныхСредств.Контрагент.ВидКонтрагентаДляВГО = &ВидКонтрагентаДляВГО
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ЗаявкаНаРасход.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасход КАК ЗаявкаНаРасход
	|ГДЕ
	|	НЕ ЗаявкаНаРасход.ЭтоВнутригрупповоеПеремещение
	|	И ЗаявкаНаРасход.Контрагент.ВидКонтрагентаДляВГО = &ВидКонтрагентаДляВГО
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ОжидаемоеПоступлениеДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОжидаемоеПоступлениеДенежныхСредств КАК ОжидаемоеПоступлениеДенежныхСредств
	|ГДЕ
	|	НЕ ОжидаемоеПоступлениеДенежныхСредств.ЭтоВнутригрупповоеПеремещение
	|	И ОжидаемоеПоступлениеДенежныхСредств.Контрагент.ВидКонтрагентаДляВГО = &ВидКонтрагентаДляВГО
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ПланируемыйДоход.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПланируемыйДоход КАК ПланируемыйДоход
	|ГДЕ
	|	НЕ ПланируемыйДоход.ЭтоВнутригрупповоеПеремещение
	|	И ПланируемыйДоход.Контрагент.ВидКонтрагентаДляВГО = &ВидКонтрагентаДляВГО
	|";
	
	Запрос.УстановитьПараметр("ВидКонтрагентаДляВГО", Перечисления.ВидыКонтрагентовДляВГО.ВнутренниеКонтрагенты);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокОбъект.ЭтоВнутригрупповоеПеремещение = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВидОперацииУХВЗаявках() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|	ЗаявкаНаРасходованиеДенежныхСредств.УдалитьВидОперацииБюджетирование.ВидОперацииУХ КАК ВидОперацииУХ
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.УдалитьВидОперацииБюджетирование.ВидБюджета = Значение(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств)
	|	И НЕ ЗаявкаНаРасходованиеДенежныхСредств.УдалитьВидОперацииБюджетирование = &ПустойВидОперацииБюджетирование
	|	И ЗаявкаНаРасходованиеДенежныхСредств.ВидОперацииУХ = &ПустойВидОперацииУХ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаРасход.Ссылка,
	|	ЗаявкаНаРасход.УдалитьВидОперацииБюджетирование.ВидОперацииУХ
	|ИЗ
	|	Документ.ЗаявкаНаРасход КАК ЗаявкаНаРасход
	|ГДЕ
	|	НЕ ЗаявкаНаРасход.УдалитьВидОперацииБюджетирование = &ПустойВидОперацииБюджетирование
	|	И ЗаявкаНаРасход.ВидОперацииУХ = &ПустойВидОперацииУХ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОжидаемоеПоступлениеДенежныхСредств.Ссылка,
	|	ОжидаемоеПоступлениеДенежныхСредств.УдалитьВидОперацииБюджетирование.ВидОперацииУХ
	|ИЗ
	|	Документ.ОжидаемоеПоступлениеДенежныхСредств КАК ОжидаемоеПоступлениеДенежныхСредств
	|ГДЕ
	|	НЕ ОжидаемоеПоступлениеДенежныхСредств.УдалитьВидОперацииБюджетирование = &ПустойВидОперацииБюджетирование
	|	И ОжидаемоеПоступлениеДенежныхСредств.ВидОперацииУХ = &ПустойВидОперацииУХ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланируемыйДоход.Ссылка,
	|	ПланируемыйДоход.УдалитьВидОперацииБюджетирование.ВидОперацииУХ
	|ИЗ
	|	Документ.ПланируемыйДоход КАК ПланируемыйДоход
	|ГДЕ
	|	НЕ ПланируемыйДоход.УдалитьВидОперацииБюджетирование = &ПустойВидОперацииБюджетирование
	|	И ПланируемыйДоход.ВидОперацииУХ = &ПустойВидОперацииУХ
	|";
	Запрос.Параметры.Вставить("ПустойВидОперацииБюджетирование", Справочники.УдалитьВидыОперацийБюджетирование.ПустаяСсылка());
	Запрос.Параметры.Вставить("ПустойВидОперацииУХ", Справочники.ВидыОперацийУХ.ПустаяСсылка()); 
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаявкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаявкаОбъект.ВидОперацииУХ = Выборка.ВидОперацииУХ;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЗаявкаОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВидОперацииУХВРазмещениеЗаявок() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	ВЫБОР
	|		КОГДА РазмещениеЗаявок.ЗаявкаНаОперацию ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			ТОГДА ЗНАЧЕНИЕ(перечисление.ВидыДвиженийПриходРасход.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(перечисление.ВидыДвиженийПриходРасход.Приход)
	|	КОНЕЦ КАК ПриходРасход,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.ВидОперацииУХ КАК ВидОперацииУХ,
	|	ВЫБОР КОГДА РазмещениеЗаявок.ЗаявкаНаОперацию.ЭтоВнутригрупповоеПеремещение ТОГДА РазмещениеЗаявок.ЗаявкаНаОперацию.ВидОперацииУХ.ВстречныйВидОперацииВГО
	|	 ИНАЧЕ РазмещениеЗаявок.ЗаявкаНаОперацию.ВидОперацииУХ.ВстречныйВидОперацииПереводСобственныхСредств КОНЕЦ КАК ВстречныйВидОперации
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|ГДЕ
	|	РазмещениеЗаявок.ВидОперацииУХ = ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НЗ = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
		НЗ.Отбор.ЗаявкаНаОперацию.Установить(Выборка.ЗаявкаНаОперацию);
		НЗ.Прочитать();
		
		Для Каждого ТекЗапись Из НЗ Цикл
			Если ЗначениеЗаполнено(ТекЗапись.ВидоперацииУХ) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТекЗапись.ПриходРасход = Выборка.ПриходРасход Тогда
				ТекЗапись.ВидоперацииУХ = Выборка.ВидОперацииУХ;
			Иначе
				ТекЗапись.ВидоперацииУХ = Выборка.ВстречныйВидОперации;
			КонецЕсли
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НЗ);
		
	КонецЦикла	
КонецПроцедуры

Процедура ЗаполнитьОсновныеСтатьиВидовОпераций() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	УдалитьВидыОперацийБюджетированиеДвиженияОперации.Ссылка.ВидОперацииУХ КАК ВидОперацииУХ,
	|	ВЫБОР
	|		КОГДА УдалитьВидыОперацийБюджетированиеДвиженияОперации.Ссылка.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств)
	|			ТОГДА УдалитьВидыОперацийБюджетированиеДвиженияОперации.СтатьяДвиженияДенежныхСредств
	|		ИНАЧЕ УдалитьВидыОперацийБюджетированиеДвиженияОперации.СтатьяДоходовИРасходов
	|	КОНЕЦ КАК СтатьяБюджета
	|ПОМЕСТИТЬ ВТ_ДанныеСтатей
	|ИЗ
	|	Справочник.УдалитьВидыОперацийБюджетирование.ДвиженияОперации КАК УдалитьВидыОперацийБюджетированиеДвиженияОперации
	|ГДЕ
	|	УдалитьВидыОперацийБюджетированиеДвиженияОперации.Ссылка.ВидОперацииУХ <> ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПустаяСсылка)
	|	И НЕ ВЫБОР
	|				КОГДА УдалитьВидыОперацийБюджетированиеДвиженияОперации.Ссылка.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств)
	|					ТОГДА УдалитьВидыОперацийБюджетированиеДвиженияОперации.СтатьяДвиженияДенежныхСредств
	|				ИНАЧЕ УдалитьВидыОперацийБюджетированиеДвиженияОперации.СтатьяДоходовИРасходов
	|			КОНЕЦ В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.СтатьиДоходовИРасходов.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПереводСДругогоСчета),
	|	&СтатьяПереводЗачисление
	|ГДЕ
	|	&СтатьяПереводЗачисление <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПолучениеНаличныхВБанке),
	|	&СтатьяПереводЗачисление
	|ГДЕ
	|	&СтатьяПереводЗачисление <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПоступлениеИнкассированныхСредств),
	|	&СтатьяПереводЗачисление
	|ГДЕ
	|	&СтатьяПереводЗачисление <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПоступлениеОтПродажиВалюты),
	|	&СтатьяКонвертацияЗачисление
	|ГДЕ
	|	&СтатьяКонвертацияЗачисление <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПоступлениеПриобретеннойВалюты),
	|	&СтатьяКонвертацияЗачисление
	|ГДЕ
	|	&СтатьяКонвертацияЗачисление <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ВзносНаличнымиВБанк),
	|	&СтатьяПереводСписание
	|ГДЕ
	|	&СтатьяПереводСписание <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.Инкассация),
	|	&СтатьяПереводСписание
	|ГДЕ
	|	&СтатьяПереводСписание <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПереводНаДругойСчетОрганизации),
	|	&СтатьяПереводСписание
	|ГДЕ
	|	&СтатьяПереводСписание <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПриобретениеВалюты),
	|	&СтатьяКонвертацияСписание
	|ГДЕ
	|	&СтатьяКонвертацияСписание <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ПродажаВалюты),
	|	&СтатьяКонвертацияСписание
	|ГДЕ
	|	&СтатьяКонвертацияСписание <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеСтатей.ВидОперацииУХ КАК ВидОперацииУХ,
	|	ВТ_ДанныеСтатей.СтатьяБюджета КАК СтатьяБюджета,
	|	КОЛИЧЕСТВО(ВТ_ДанныеСтатей.СтатьяБюджета) КАК КоличествоУпоминаний
	|ПОМЕСТИТЬ ВТ_ВидыОперацийСВесами
	|ИЗ
	|	ВТ_ДанныеСтатей КАК ВТ_ДанныеСтатей
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеСтатей.ВидОперацииУХ,
	|	ВТ_ДанныеСтатей.СтатьяБюджета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВидыОперацийСВесами.ВидОперацииУХ КАК ВидОперацииУХ,
	|	МАКСИМУМ(ВТ_ВидыОперацийСВесами.КоличествоУпоминаний) КАК КоличествоУпоминаний
	|ПОМЕСТИТЬ ВТ_МаксимумыКоличества
	|ИЗ
	|	ВТ_ВидыОперацийСВесами КАК ВТ_ВидыОперацийСВесами
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВидыОперацийСВесами.ВидОперацииУХ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МаксимумыКоличества.ВидОперацииУХ КАК ВидОперацииУХ,
	|	МАКСИМУМ(ВТ_ВидыОперацийСВесами.СтатьяБюджета) КАК СтатьяБюджета
	|ПОМЕСТИТЬ ВТ_СамыеПопулярныеСтатьи
	|ИЗ
	|	ВТ_МаксимумыКоличества КАК ВТ_МаксимумыКоличества
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВидыОперацийСВесами КАК ВТ_ВидыОперацийСВесами
	|		ПО ВТ_МаксимумыКоличества.ВидОперацииУХ = ВТ_ВидыОперацийСВесами.ВидОперацииУХ
	|			И ВТ_МаксимумыКоличества.КоличествоУпоминаний = ВТ_ВидыОперацийСВесами.КоличествоУпоминаний
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_МаксимумыКоличества.ВидОперацииУХ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОперацийУХ.Ссылка КАК ВидОперацииУХ,
	|	ВидыОперацийУХ.ВидОперацииДДСБезналичныйРасчет КАК ВидОперацииДДСБезналичныйРасчет,
	|	ВидыОперацийУХ.ВидОперацииДДСНаличныйРасчет КАК ВидОперацииДДСНаличныйРасчет,
	|	ЕСТЬNULL(ВТ_СамыеПопулярныеСтатьи.СтатьяБюджета, НЕОПРЕДЕЛЕНО) КАК СтатьяБюджета
	|ИЗ
	|	Справочник.ВидыОперацийУХ КАК ВидыОперацийУХ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СамыеПопулярныеСтатьи КАК ВТ_СамыеПопулярныеСтатьи
	|		ПО ВТ_СамыеПопулярныеСтатьи.ВидОперацииУХ = ВидыОперацийУХ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтатьиВидовОперацийУХ КАК ОсновныеСтатьиВидовОперацийУХ  
	|		ПО  ВидыОперацийУХ.Ссылка = ОсновныеСтатьиВидовОперацийУХ.ВидОперацииУХ
	|ГДЕ 
	|	ОсновныеСтатьиВидовОперацийУХ.ВидОперацииУХ ЕСТЬ NULL
	|	И НЕ ВидыОперацийУХ.ЭтоГруппа";
	
	Запрос.Параметры.Вставить("СтатьяКонвертацияЗачисление", Константы.УдалитьСтатьяДвиженияДенежныхСредствКонвертацияВалютыЗачисление.Получить()); 
	Запрос.Параметры.Вставить("СтатьяКонвертацияСписание",  Константы.УдалитьСтатьяДвиженияДенежныхСредствКонвертацияВалютыСписание.Получить()); 
	Запрос.Параметры.Вставить("СтатьяПереводЗачисление",  Константы.УдалитьСтатьяДвиженияДенежныхСредствПереводСредствЗачисление.Получить()); 
	Запрос.Параметры.Вставить("СтатьяПереводСписание",  Константы.УдалитьСтатьяДвиженияДенежныхСредствПереводСредствСписание.Получить()); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НЗ = РегистрыСведений.ОсновныеСтатьиВидовОперацийУХ.СоздатьНаборЗаписей();
		НЗ.Отбор.ВидОперацииУХ.Установить(Выборка.ВидОперацииУХ);
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.ВидОперацииУХ = Выборка.ВидОперацииУХ;
		Если ЗначениеЗаполнено(Выборка.СтатьяБюджета) Тогда
			НоваяЗапись.СтатьяБюджета = Выборка.СтатьяБюджета;
		ИначеЕсли ЗначениеЗаполнено(Выборка.ВидОперацииДДСБезналичныйРасчет) Тогда
			НоваяЗапись.СтатьяБюджета = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Выборка.ВидОперацииДДСБезналичныйРасчет);
		ИначеЕсли ЗначениеЗаполнено(Выборка.ВидОперацииДДСНаличныйРасчет) Тогда
			НоваяЗапись.СтатьяБюджета = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Выборка.ВидОперацииДДСНаличныйРасчет);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(НоваяЗапись.СтатьяБюджета) Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НЗ);
		КонецЕсли
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьОсновныеСтатьиВидовОперацийПервыйЗапуск() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	ВидыОперацийУХ.Ссылка КАК ВидОперацииУХ,
	|	ВидыОперацийУХ.ВидОперацииДДСБезналичныйРасчет КАК ВидОперацииДДСБезналичныйРасчет,
	|	ВидыОперацийУХ.ВидОперацииДДСНаличныйРасчет КАК ВидОперацииДДСНаличныйРасчет
	|ИЗ
	|	Справочник.ВидыОперацийУХ КАК ВидыОперацийУХ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтатьиВидовОперацийУХ КАК ОсновныеСтатьиВидовОперацийУХ  
	|		ПО  ВидыОперацийУХ.Ссылка = ОсновныеСтатьиВидовОперацийУХ.ВидОперацииУХ
	|ГДЕ 
	|	ОсновныеСтатьиВидовОперацийУХ.ВидОперацииУХ ЕСТЬ NULL
	|	И НЕ ВидыОперацийУХ.ЭтоГруппа
	|	И ВидыОперацийУХ.ВидБюджета = Значение(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НЗ = РегистрыСведений.ОсновныеСтатьиВидовОперацийУХ.СоздатьНаборЗаписей();
		НЗ.Отбор.ВидОперацииУХ.Установить(Выборка.ВидОперацииУХ);
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.ВидОперацииУХ = Выборка.ВидОперацииУХ;
		
		Если ЗначениеЗаполнено(Выборка.ВидОперацииДДСБезналичныйРасчет) Тогда
			НоваяЗапись.СтатьяБюджета = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Выборка.ВидОперацииДДСБезналичныйРасчет);
		ИначеЕсли ЗначениеЗаполнено(Выборка.ВидОперацииДДСНаличныйРасчет) Тогда
			НоваяЗапись.СтатьяБюджета = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Выборка.ВидОперацииДДСНаличныйРасчет);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(НоваяЗапись.СтатьяБюджета) Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НЗ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РазмещениеЗаявокЗаполнитьПроведен() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.Проведен КАК НовоеЗначение_Проведен
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|ГДЕ
	|	РазмещениеЗаявок.Проведен <> РазмещениеЗаявок.ЗаявкаНаОперацию.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РазмещениеЗаявок.ЗаявкаНаОперацию,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.Проведен";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НЗ = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
		НЗ.Отбор.ЗаявкаНаОперацию.Установить(Выборка.ЗаявкаНаОперацию);
		НЗ.Прочитать();
		
		Для Каждого ТекЗапись Из НЗ Цикл
			ТекЗапись.Проведен = Выборка.НовоеЗначение_Проведен;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НЗ);
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьГрафикИсполненияДоговора() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДоговорыКонтрагентов.ЗаданГрафикИсполнения КАК ЗаданГрафикИсполнения,
	|	ДоговорыКонтрагентов.ГрафикИсполненияДоговора КАК ГрафикИсполненияДоговора
	|ПОМЕСТИТЬ ВТ_ДоговораКОбновлению
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|	И ДоговорыКонтрагентов.СпособФормированияПлатежей = ЗНАЧЕНИЕ(Перечисление.СпособыФормированияПлатежейПоДоговору.ПоГрафикуПлатежей)
	|	И ДоговорыКонтрагентов.ВидДоговораУХ В
	|			(ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.СПокупателем) КАК ВидДоговораУХ
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.СДавальцем)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.СПоставщиком)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.СПереработчиком)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.Импорт)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.ВвозИзЕАЭС))
	|	И ДоговорыКонтрагентов.ЗаданГрафикИсполнения = ИСТИНА
	|	И ДоговорыКонтрагентов.ГрафикИсполненияДоговора = ЗНАЧЕНИЕ(Документ.ГрафикИсполненияДоговора.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикИсполненияДоговора.Ссылка КАК ГрафикИсполнения,
	|	ГрафикИсполненияДоговора.Дата КАК Дата,
	|	ГрафикИсполненияДоговора.Проведен КАК Проведен,
	|	ГрафикИсполненияДоговора.Договор КАК Договор,
	|	ГрафикИсполненияДоговора.ПорядокРасчетов КАК ПорядокРасчетов
	|ПОМЕСТИТЬ ВТ_ГрафикиИсполненияПоДоговорамВсе
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора КАК ГрафикИсполненияДоговора
	|ГДЕ
	|	(ГрафикИсполненияДоговора.Договор, ГрафикИсполненияДоговора.ПорядокРасчетов) В
	|			(ВЫБРАТЬ
	|				ВТ_ДоговораКОбновлению.Договор КАК Договор,
	|				ВТ_ДоговораКОбновлению.ПорядокРасчетов КАК ПорядокРасчетов
	|			ИЗ
	|				ВТ_ДоговораКОбновлению КАК ВТ_ДоговораКОбновлению)
	|	И ГрафикИсполненияДоговора.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ГрафикиИсполненияПоДоговорамВсе.Договор КАК Договор,
	|	МАКСИМУМ(ВТ_ГрафикиИсполненияПоДоговорамВсе.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ДатыПоследнихГрафиковПоДоговорам
	|ИЗ
	|	ВТ_ГрафикиИсполненияПоДоговорамВсе КАК ВТ_ГрафикиИсполненияПоДоговорамВсе
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ГрафикиИсполненияПоДоговорамВсе.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговораКОбновлению.Договор КАК Договор,
	|	ВТ_ДоговораКОбновлению.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ВТ_ДоговораКОбновлению.ЗаданГрафикИсполнения КАК ЗаданГрафикИсполнения,
	|	ВТ_ДоговораКОбновлению.ГрафикИсполненияДоговора КАК ГрафикИсполненияДоговора,
	|	ВТ_ГрафикиИсполненияПоДоговорамВсе.ГрафикИсполнения КАК ГрафикИсполненияДоговораНовый
	|ИЗ
	|	ВТ_ДоговораКОбновлению КАК ВТ_ДоговораКОбновлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДатыПоследнихГрафиковПоДоговорам КАК ВТ_ДатыПоследнихГрафиковПоДоговорам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГрафикиИсполненияПоДоговорамВсе КАК ВТ_ГрафикиИсполненияПоДоговорамВсе
	|			ПО ВТ_ДатыПоследнихГрафиковПоДоговорам.Договор = ВТ_ГрафикиИсполненияПоДоговорамВсе.Договор
	|				И ВТ_ДатыПоследнихГрафиковПоДоговорам.Дата = ВТ_ГрафикиИсполненияПоДоговорамВсе.Дата
	|		ПО ВТ_ДоговораКОбновлению.Договор = ВТ_ДатыПоследнихГрафиковПоДоговорам.Договор";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Спр = Выборка.Договор.ПолучитьОбъект();
		Спр.ГрафикИсполненияДоговора = Выборка.ГрафикИсполненияДоговораНовый;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Спр);
	КонецЦикла;
	
КонецПроцедуры

// В заявках на оплату и в ожидаемом поступлении заполняется поле ДоговорКонтрагента для журнала ДокументыБюджетирования
Процедура ЗаполнитьРеквизитДоговорКонтрагентаВДокументахПланированияДДС() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|	ЗаявкаНаРасходованиеДенежныхСредств.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗаявкаНаРасходованиеДенежныхСредств.Договор
	|	КОНЕЦ КАК Договор,
	|	ЗаявкаНаРасходованиеДенежныхСредств.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ЗаявкаНаРасходованиеДенежныхСредств.ДоговорАренды КАК ДоговорАренды,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ДоговорАренды <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|			ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.ДоговорАренды
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ДоговорКредитаДепозита <> ЗНАЧЕНИЕ(Справочник.ДоговорыКредитовИДепозитов.ПустаяСсылка)
	|			ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.ДоговорКредитаДепозита
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗаявкаНаРасходованиеДенежныхСредств.Договор
	|	КОНЕЦ КАК ДоговорКонтрагентаНовый
	|ПОМЕСТИТЬ ВТ_ДокументыПланированияДДС
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОжидаемоеПоступлениеДенежныхСредств.Ссылка,
	|	ОжидаемоеПоступлениеДенежныхСредств.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ОжидаемоеПоступлениеДенежныхСредств.Договор
	|	КОНЕЦ,
	|	ОжидаемоеПоступлениеДенежныхСредств.ДоговорКредитаДепозита,
	|	ОжидаемоеПоступлениеДенежныхСредств.ДоговорАренды,
	|	ВЫБОР
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.ДоговорАренды <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|			ТОГДА ОжидаемоеПоступлениеДенежныхСредств.ДоговорАренды
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.ДоговорКредитаДепозита <> ЗНАЧЕНИЕ(Справочник.ДоговорыКредитовИДепозитов.ПустаяСсылка)
	|			ТОГДА ОжидаемоеПоступлениеДенежныхСредств.ДоговорКредитаДепозита
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОжидаемоеПоступлениеДенежныхСредств.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ОжидаемоеПоступлениеДенежныхСредств.Договор
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОжидаемоеПоступлениеДенежныхСредств КАК ОжидаемоеПоступлениеДенежныхСредств
	|ГДЕ
	|	ОжидаемоеПоступлениеДенежныхСредств.ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДокументыПланированияДДС.Ссылка КАК Ссылка,
	|	ВТ_ДокументыПланированияДДС.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ДокументыПланированияДДС.Договор КАК Договор,
	|	ВТ_ДокументыПланированияДДС.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ВТ_ДокументыПланированияДДС.ДоговорАренды КАК ДоговорАренды,
	|	ВТ_ДокументыПланированияДДС.ДоговорКонтрагентаНовый КАК ДоговорКонтрагентаНовый
	|ИЗ
	|	ВТ_ДокументыПланированияДДС КАК ВТ_ДокументыПланированияДДС
	|ГДЕ
	|	ВТ_ДокументыПланированияДДС.ДоговорКонтрагента <> ВТ_ДокументыПланированияДДС.ДоговорКонтрагентаНовый";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Док.ДоговорКонтрагента = Выборка.ДоговорКонтрагентаНовый;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Док);
	КонецЦикла;
	
КонецПроцедуры

// обработчик обновления ERP.УХ. Устанавливает незаполненую валюту документа
Процедура ЗаполнитьВалютуДокументаВОФД() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка КАК Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента КАК ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.ПриобретениеТоваровУслуг).Валюта КАК ВалютаДокументаНовый
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.РеализацияТоваровУслуг).Валюта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка,
	|	ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента,
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент,
	|	ВЫРАЗИТЬ(ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	И ОтражениеФактическихДанныхБюджетирования.ВалютаДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Док.ВалютаДокумента = Выборка.ВалютаДокументаНовый;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Док);
		Прервать;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСчетаРасчетыСКонтрагентамиГрафики() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКонтрагентамиГрафики.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_Регистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентамиГрафики КАК РасчетыСКонтрагентамиГрафики
	|ГДЕ
	|	(РасчетыСКонтрагентамиГрафики.СчетОрганизации = &ПустойСчетОрганизации
	|			ИЛИ РасчетыСКонтрагентамиГрафики.СчетКонтрагента = &ПустойСчетКонтрагента)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСКонтрагентамиГрафики.Регистратор) В (&ТипыРегистраторов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Регистраторы.Регистратор КАК Регистратор,
	|	ВТ_Регистраторы.Регистратор.Организация КАК Организация,
	|	ВТ_Регистраторы.Регистратор.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_Регистраторы.Регистратор.Контрагент КАК Контрагент
	|ИЗ
	|	ВТ_Регистраторы КАК ВТ_Регистраторы"
	);
	
	ТипыСоглашений = Метаданные.ОпределяемыеТипы.ВерсияСоглашения.Тип.Типы();
	
	Запрос.УстановитьПараметр("ПустойСчетОрганизации", Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСчетКонтрагента", Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипыРегистраторов", ТипыСоглашений);
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
			
		// переформируем движения по регистру РасчетыСКонтрагентамиГрафики
		ЗапросРасчеты = Новый Запрос;
		ИмяТаблицы = Выборка.Регистратор.Метаданные().ПолноеИмя();
		ЗапросРасчеты.Текст = ТекстЗапросаРасчетыСКонтрагентамиГрафики(ИмяТаблицы);
		ЗапросРасчеты.УстановитьПараметр("Ссылка", Выборка.Регистратор);
		ЗапросРасчеты.УстановитьПараметр("Организация", Выборка.Организация);
		ЗапросРасчеты.УстановитьПараметр("ДоговорКонтрагента", Выборка.ДоговорКонтрагента);
		ЗапросРасчеты.УстановитьПараметр("Контрагент", Выборка.Контрагент);
		
		ТаблицаЗаписей = ЗапросРасчеты.Выполнить().Выгрузить();
		
		// движения должны быть, иначе значит проблема с ТЧ ГрафикРасчетов
		Если ЗначениеЗаполнено(ТаблицаЗаписей) Тогда
			
			НаборЗаписей = РегистрыНакопления.РасчетыСКонтрагентамиГрафики.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Загрузить(ТаблицаЗаписей);
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиСогласования_ДоговорыАренды() Экспорт
	
	ОписанияДокументовКОбработке = Новый Массив;
	ОписанияДокументовКОбработке.Добавить(Справочники.ДокументыБД.НайтиПоНаименованию("ЗаключениеДоговораАренды",,,Справочники.ТипыБазДанных.ТекущаяИБ));
	ОписанияДокументовКОбработке.Добавить(Справочники.ДокументыБД.НайтиПоНаименованию("ИзменениеУсловийДоговораАренды",,,Справочники.ТипыБазДанных.ТекущаяИБ));
	
	Для Каждого ТекОписание Из ОписанияДокументовКОбработке Цикл
		
		ОписаниеОбъект = ТекОписание.ПолучитьОбъект();
		ОписаниеОбъект.Согласуется = Истина;
		ОписаниеОбъект.ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
		ОписаниеОбъект.ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
        ОписаниеОбъект.ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
        ОписаниеОбъект.ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
		ОписаниеОбъект.РеквизитСостоянияСтрока = "СостоянияСогласования";
		ОписаниеОбъект.РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(ОписаниеОбъект.РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОписаниеОбъект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеКонстантИспользоватьСоглашения() Экспорт

	Если Не Константы.ИспользоватьСоглашенияСПоставщиками.Получить() Тогда
		Константы.ИспользоватьСоглашенияСПоставщиками.Установить(Истина);
	КонецЕсли; 
	
	Если Константы.ИспользованиеСоглашенийСКлиентами.Получить() =
		Перечисления.ИспользованиеСоглашенийСКлиентами.НеИспользовать Тогда
		
		Константы.ИспользованиеСоглашенийСКлиентами.Установить(
			Перечисления.ИспользованиеСоглашенийСКлиентами.ТиповыеИИндивидуальныеСоглашения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВариантПриемкиВСоглашениях() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоглашенияСПоставщиками.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
	|ГДЕ СоглашенияСПоставщиками.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВариантПриемки = Константы.ВариантПриемкиТоваров.Получить();
	
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ВариантПриемкиТоваров = ВариантПриемки;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиСогласованияЗаявкаНаКомандировку()  Экспорт

	ПеречислениеБД 	= Справочники.ПеречисленияБД.НайтиПоНаименованию("СостоянияСогласования", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	ДокументБД 		= Справочники.ДокументыБД.НайтиПоНаименованию("ЗаявкаНаКомандировку", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	ДокументОбъект  = ДокументБД.ПолучитьОбъект();
	ДокументОбъект.Согласуется = Истина;
	ДокументОбъект.РеквизитСостояния = ПеречислениеБД;
	ДокументОбъект.РеквизитСостоянияСтрока = "Перечисление." + Строка(ПеречислениеБД);
	ДокументОбъект.ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
	ДокументОбъект.ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
	ДокументОбъект.ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Отклонена;
	ДокументОбъект.ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
	ДокументОбъект.Записать();

КонецПроцедуры

Процедура ЗаполнитьВидДоговораУХРасчетыСКонтрагентамиГрафики() Экспорт

	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКонтрагентамиГрафики.Регистратор КАК Регистратор,
		|	РасчетыСКонтрагентамиГрафики.ПредметГрафика.ВидДоговораУХ КАК ВидДоговораУХ
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентамиГрафики КАК РасчетыСКонтрагентамиГрафики
		|ГДЕ
		|	НЕ РасчетыСКонтрагентамиГрафики.ПредметГрафика.ВидДоговораУХ ЕСТЬ NULL
		|	И РасчетыСКонтрагентамиГрафики.ВидДоговораУХ = ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.ПустаяСсылка)";
	РезультатЗапроса 		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			НаборЗаписей = РегистрыНакопления.РасчетыСКонтрагентамиГрафики.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.ВидДоговораУХ = ВыборкаДетальныеЗаписи.ВидДоговораУХ;
			КонецЦикла;
	
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьВидДоговораУХРасчетыСКонтрагентамиФакт() Экспорт

	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКонтрагентамиФакт.Регистратор КАК Регистратор,
		|	РасчетыСКонтрагентамиФакт.ДоговорКонтрагента.ВидДоговораУХ КАК ВидДоговораУХ
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентамиФакт КАК РасчетыСКонтрагентамиФакт
		|ГДЕ
		|	НЕ РасчетыСКонтрагентамиФакт.ДоговорКонтрагента.ВидДоговораУХ ЕСТЬ NULL
		|	И РасчетыСКонтрагентамиФакт.ВидДоговораУХ = ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидДоговораУХ";
	РезультатЗапроса 		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			НаборЗаписей = РегистрыНакопления.РасчетыСКонтрагентамиФакт.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.ВидДоговораУХ = ВыборкаДетальныеЗаписи.ВидДоговораУХ;
			КонецЦикла;
	
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ТекстЗапросаРасчетыСКонтрагентамиГрафики(ИмяТаблицыДокумента)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА График.ОперацияГрафика.НаправлениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Ссылка КАК ВерсияГрафика,
	|	&ДоговорКонтрагента КАК ПредметГрафика,
	|	График.Дата КАК Период,
	|	График.СтатьяБюджета КАК СтатьяБюджета,
	|	График.Аналитика1 КАК Аналитика1,
	|	График.Аналитика2 КАК Аналитика2,
	|	График.Аналитика3 КАК Аналитика3,
	|	График.Аналитика4 КАК Аналитика4,
	|	График.Аналитика5 КАК Аналитика5,
	|	График.Аналитика6 КАК Аналитика6,
	|	График.ВидБюджета КАК ВидБюджета,
	|	График.ЦФО КАК ЦФО,
	|	График.Проект КАК Проект,
	|	График.НаправлениеДвижения КАК ПриходРасход,
	|	График.Сумма КАК Сумма,
	|	График.Валюта КАК Валюта,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	График.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	График.ОперацияГрафика КАК Операция,
	|	График.СчетОрганизации КАК СчетОрганизации,
	|	График.СчетКонтрагента КАК СчетКонтрагента
	|ИЗ
	|	_ИмяТаблицыГрафика_ КАК График
	|ГДЕ
	|	График.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "_ИмяТаблицыГрафика_", ИмяТаблицыДокумента + ".ГрафикРасчетов");
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Процедура ПеренестиДвиженияДоговорАренды_РасчетыСКонтрагентамиГрафики(ДокументПриемник, ДокументИсточник)
	
	НаборЗаписейИсточник = РегистрыНакопления.РасчетыСКонтрагентамиГрафики.СоздатьНаборЗаписей();
	НаборЗаписейПриемник = РегистрыНакопления.РасчетыСКонтрагентамиГрафики.СоздатьНаборЗаписей();
	
	НаборЗаписейИсточник.Отбор.Регистратор.Установить(ДокументИсточник);
	НаборЗаписейИсточник.Прочитать();
	
	НаборЗаписейПриемник.Отбор.Регистратор.Установить(ДокументПриемник);
	
	НаборЗаписейПриемник.Загрузить(НаборЗаписейИсточник.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемник Цикл
		ТекЗапись.Регистратор = ДокументПриемник;
		ТекЗапись.ВерсияГрафика = ДокументПриемник;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейПриемник);
	НаборЗаписейИсточник.Очистить();
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейИсточник);
	
КонецПроцедуры

Процедура ЗаполнитьИсториюСтатусов(ДокументПриемник, ДокументИсточник)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрСостоянийОбъектов.Период КАК Период,
	|	&ДокументПриемник КАК Объект,
	|	РегистрСостоянийОбъектов.СостояниеОбъекта КАК СостояниеОбъекта,
	|	РегистрСостоянийОбъектов.Автор КАК Автор,
	|	РегистрСостоянийОбъектов.ИдентификаторСообщения КАК ИдентификаторСообщения
	|ИЗ
	|	РегистрСведений.РегистрСостоянийОбъектов КАК РегистрСостоянийОбъектов
	|ГДЕ
	|	РегистрСостоянийОбъектов.Объект = &ДокументИсточник";
	Запрос.УстановитьПараметр("ДокументИсточник", ДокументИсточник);
	Запрос.УстановитьПараметр("ДокументПриемник", ДокументПриемник);
	
	НаборЗаписей = РегистрыСведений.РегистрСостоянийОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументПриемник);
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПеренестиДвиженияДоговорАренды_ОперативныйПланПоБюджетам(ДокументПриемник, ДокументИсточник)
	
	НаборЗаписейИсточник = РегистрыНакопления.ОперативныйПланПоБюджетам.СоздатьНаборЗаписей();
	НаборЗаписейПриемник = РегистрыНакопления.ОперативныйПланПоБюджетам.СоздатьНаборЗаписей();
	
	НаборЗаписейИсточник.Отбор.Регистратор.Установить(ДокументИсточник);
	НаборЗаписейИсточник.Прочитать();
	
	НаборЗаписейПриемник.Отбор.Регистратор.Установить(ДокументПриемник);
	
	НаборЗаписейПриемник.Загрузить(НаборЗаписейИсточник.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемник Цикл
		ТекЗапись.Регистратор = ДокументПриемник;
		ТекЗапись.ДокументПланирования = ДокументПриемник;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейПриемник);
	НаборЗаписейИсточник.Очистить();
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейИсточник);
	
КонецПроцедуры

Процедура ПеренестиДвиженияДоговорАренды_ЛимитыПоБюджетам(ДокументПриемник, ДокументИсточник)
	
	НаборЗаписейИсточник = РегистрыНакопления.ЛимитыПоБюджетам.СоздатьНаборЗаписей();
	НаборЗаписейПриемник = РегистрыНакопления.ЛимитыПоБюджетам.СоздатьНаборЗаписей();
	
	НаборЗаписейИсточник.Отбор.Регистратор.Установить(ДокументИсточник);
	НаборЗаписейИсточник.Прочитать();
	
	НаборЗаписейПриемник.Отбор.Регистратор.Установить(ДокументПриемник);
	
	НаборЗаписейПриемник.Загрузить(НаборЗаписейИсточник.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемник Цикл
		ТекЗапись.Регистратор = ДокументПриемник;
		ТекЗапись.ДокументПланирования = ДокументПриемник;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейПриемник);
	НаборЗаписейИсточник.Очистить();
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейИсточник);
	
КонецПроцедуры

Процедура ОбновитьПлатежныеПозицииПоДоговорамАренды(ДокументПриемник, ДокументИсточник)
    // Размещение заявок
	НаборЗаписейИсточник = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
	НаборЗаписейПриемник = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
	
	НаборЗаписейИсточник.Отбор.ЗаявкаНаОперацию.Установить(ДокументИсточник);
	НаборЗаписейИсточник.Прочитать();
	
	НаборЗаписейПриемник.Отбор.ЗаявкаНаОперацию.Установить(ДокументПриемник);
	
	НаборЗаписейПриемник.Загрузить(НаборЗаписейИсточник.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемник Цикл
		ТекЗапись.ЗаявкаНаОперацию = ДокументПриемник;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейПриемник);
	НаборЗаписейИсточник.Очистить();
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейИсточник);
	
	// Движения бюджетирования по позициям
	НаборЗаписейИсточник = РегистрыСведений.ДвиженияБюджетированияПоПозициям.СоздатьНаборЗаписей();
	НаборЗаписейПриемник = РегистрыСведений.ДвиженияБюджетированияПоПозициям.СоздатьНаборЗаписей();
	
	НаборЗаписейИсточник.Отбор.ЗаявкаНаОперацию.Установить(ДокументИсточник);
	НаборЗаписейИсточник.Прочитать();
	
	НаборЗаписейПриемник.Отбор.ЗаявкаНаОперацию.Установить(ДокументПриемник);
	
	НаборЗаписейПриемник.Загрузить(НаборЗаписейИсточник.Выгрузить());
	
	Для Каждого ТекЗапись Из НаборЗаписейПриемник Цикл
		ТекЗапись.ЗаявкаНаОперацию = ДокументПриемник;
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейПриемник);
	НаборЗаписейИсточник.Очистить();
	ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейИсточник);
	
КонецПроцедуры

#КонецОбласти
