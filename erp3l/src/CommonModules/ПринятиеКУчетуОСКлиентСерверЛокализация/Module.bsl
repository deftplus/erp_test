////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.СлужебныеПараметрыФормы.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.СлужебныеПараметрыФормы.ВедетсяУчетПостоянныхИВременныхРазниц);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("ВключатьВСоставНалоговыхРасходовАрендныеПлатежи", Форма.СлужебныеПараметрыФормы.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи);
	ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", Форма.СлужебныеПараметрыФормы.ТребуетсяНастройкаОтраженияРасходовПоНалогам);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетВНАПоНалогообложениюНДС", Форма.СлужебныеПараметрыФормы.РаздельныйУчетВНАПоНалогообложениюНДС);
	ВспомогательныеРеквизиты.Вставить("ВариантПримененияЦелевогоФинансирования", Форма.Объект.ВариантПримененияЦелевогоФинансирования);
	ВспомогательныеРеквизиты.Вставить("ПредметыАрендыУчитываютсяВНУ", Форма.СлужебныеПараметрыФормы.ПредметыАрендыУчитываютсяВНУ);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяФСБУ6", Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6);

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС) Экспорт

	//++ Локализация
	
	СтоимостьБУДоступна = Объект.ОтражатьВРеглУчете;
	
	//
	СтоимостьНУДоступна = 
		Объект.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") 
			ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды") 
				И ВспомогательныеРеквизиты.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
			ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости);
			
	//
	ПараметрыПринятияКУчетуОС.Вставить("СтоимостьБУДоступна", СтоимостьБУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("СтоимостьНУДоступна", СтоимостьНУДоступна);
			
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыПринятияКУчетуОС = ВнеоборотныеАктивыКлиентСервер.ПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты);
	
	ДоступныНастройкиРеглУчета = (Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
	
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") Тогда
			
			Элементы.ДокументОснование.Заголовок = НСтр("ru = 'Инвентаризация';
														|en = 'Stocktaking'");
			Элементы.ДокументОснование.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ИнвентаризацияОС");
			
		ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды") Тогда
			
			Элементы.ДокументОснование.Заголовок = НСтр("ru = 'Поступление';
														|en = 'Receipt'");
			Элементы.ДокументОснование.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ЗаключениеДоговораАренды");
			
		КонецЕсли; 
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.СпособПоступления.СписокВыбора,
			Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды"),
			ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруАренды"),,
			6);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеВидно = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется")
						ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.ПустаяСсылка"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ГруппаОС.СписокВыбора,
			Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),
			ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),,
			11);
	
	КонецЕсли;
	
	#КонецОбласти

	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
	
		Форма.РасширеннаяСтоимостьРегл = Элементы.ОССтоимостьНУ.Видимость;
	
		Если ПараметрыПринятияКУчетуОС.СтоимостьУУДоступна
			И ПараметрыПринятияКУчетуОС.СтоимостьБУДоступна
			И НЕ ПараметрыПринятияКУчетуОС.СтоимостьНУДоступна Тогда
			
			Элементы.ОССтоимостьУУ.Видимость = ПараметрыПринятияКУчетуОС.СтоимостьУУДоступна; 
			Элементы.ОССтоимостьБУ.Видимость = ПараметрыПринятияКУчетуОС.СтоимостьБУДоступна;
			
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = Ложь;
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = Ложь;
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = Ложь;

		Иначе
	
			Элементы.ОССтоимостьУУ.Видимость = Ложь; 
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = ПараметрыПринятияКУчетуОС.СтоимостьУУДоступна;
			Элементы.ОССтоимостьБУ.Видимость = Ложь;
	
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = 
				НЕ Форма.РасширеннаяСтоимостьРегл
				И ПараметрыПринятияКУчетуОС.СтоимостьБУДоступна;
				
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = 
				Форма.РасширеннаяСтоимостьРегл
				И ПараметрыПринятияКУчетуОС.СтоимостьБУДоступна;
			
		КонецЕсли;
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЧастичныйВводВЭксплуатацию") Тогда
		
		Если Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль
			И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") Тогда
				
			Для Каждого ДанныеСтроки Из Объект.ОС Цикл
				Если ДанныеСтроки.СтоимостьНУ = 0
					И ДанныеСтроки.СтоимостьПР = 0
					И ДанныеСтроки.СтоимостьВР = 0 Тогда
					ДанныеСтроки.СтоимостьНУ = ДанныеСтроки.СтоимостьБУ;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.ПорядокУчетаНУ.Видимость
			И НЕ ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ Тогда
			
			СписокВыбораНУ = Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),, 
				0);

			//
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),, 
				0);
				
			//
			НеПолныйВариантПримененияЦФ = 
				Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное");
				
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				НеПолныйВариантПримененияЦФ, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"),, 
				1);
				
			//
			ВидимостьПорядкаУчета = 
				НеПолныйВариантПримененияЦФ
				И Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				И Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды");
					
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				ВидимостьПорядкаУчета, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы"),, 
				2);
			
			Если СписокВыбораНУ.НайтиПоЗначению(Объект.ПорядокУчетаНУ) = Неопределено 
				И НЕ ОбновитьВсе Тогда
				Объект.ПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
			КонецЕсли;
				
			Причина = "";
			Форма.РекомендуемыйПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
				
			Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды")
				И НЕ ВспомогательныеРеквизиты.ПредметыАрендыУчитываютсяВНУ  Тогда
				
				Причина = НСтр("ru = 'Основные средства учитываются на балансе арендодателя, необходимо установить значение <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>';
								|en = 'Fixed assets are accounted for on the lessor''s balance sheet, please, set the value <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
			
			ИначеЕсли Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") Тогда
				
				Причина = НСтр("ru = 'Указана группа ОС ""Земельные участки"", рекомендуется установить значение <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>';
								|en = 'The ""Land plots"" FA group is specified, it is recommended to set the value <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
			
			ИначеЕсли Объект.ОтражатьВНУ
				И ЗначениеЗаполнено(Объект.СрокИспользованияБУ) 
				И Объект.СрокИспользованияБУ <= 12 
				И НеПолныйВариантПримененияЦФ
				И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
				И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы") Тогда
				
				Причина = НСтр("ru = 'Срок полезного использования не превышает 12 месяцев, рекомендуется установить значение <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>';
								|en = 'The useful life does not exceed 12 months, it is recommended to set the value <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету");
			
			ИначеЕсли Объект.ОтражатьВНУ
				И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
				И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы") Тогда
				
				Для каждого СтрокаОС Из Форма.Объект.ОС Цикл
					Если ЗначениеЗаполнено(СтрокаОС.СтоимостьБУ) И СтрокаОС.СтоимостьБУ <= 100000 И НеПолныйВариантПримененияЦФ Тогда
						Причина = НСтр("ru = 'Первоначальная стоимость не превышает 100 000 руб, рекомендуется установить значение <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>.';
										|en = 'The initial cost does not exceed 100,000 rubles, it is recommended to set the value <a href = ""УстановкаПорядкаУчетаНУ"">%1</a>.'");
						Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету");
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			МассивСтрок = Новый Массив;
			Если ЗначениеЗаполнено(Причина) Тогда
				МассивСтрок.Добавить(ВнеоборотныеАктивыКлиентСервер.ФорматированнаяСтрока(СтрШаблон(Причина, Строка(Форма.РекомендуемыйПорядокУчетаНУ))));
				Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Истина;
			Иначе
				Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			КонецЕсли;
			
			Форма.УстановитьПорядокУчетаНУ = Новый ФорматированнаяСтрока(МассивСтрок);
			
		Иначе
			
			Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
	
		Элементы.ПорядокУчетаНУ.РежимВыбораИзСписка = НЕ ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаУчетУУ.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		Элементы.ГруппаУчетОбщее.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
		
		//
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы") Тогда
			ПодсказкаЭлемента = НСтр("ru = 'Если после закрытия месяца первоначальная стоимость не превысит 100 000 рублей, то она автоматически будет включена в расходы при принятии к учету, иначе - начисление амортизации';
									|en = 'If after month-end closing the initial cost does not exceed 100,000 rubles, it will automatically be included in expenses upon recognition, otherwise - depreciation accrual'");
			Элементы.ПорядокУчетаНУ.ОтображениеПодсказки  = ОтображениеПодсказки.ОтображатьСнизу;
		Иначе
			ПодсказкаЭлемента = НСтр("ru = 'Порядок включения стоимости в состав расходов в налоговом учете';
									|en = 'Procedure of including the value into the cost structure in accounting'");
			Элементы.ПорядокУчетаНУ.ОтображениеПодсказки  = ОтображениеПодсказки.Авто;
		КонецЕсли;	
		
		Элементы.ПорядокУчетаНУ.Подсказка = ПодсказкаЭлемента;
		 
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеВидно = НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ДокументНаОснованииИнвентаризации = 
			(Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
				И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
				
		Элементы.СтраницаОтражениеРасходов.Заголовок = ?(
			ДокументНаОснованииИнвентаризации,
			НСтр("ru = 'Отражение доходов и расходов';
				|en = 'Record income and expenses'"),
			НСтр("ru = 'Отражение расходов';
				|en = 'Record expenses'"));
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна 
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовУУ) Тогда
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
			
		ИначеЕсли НЕ ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна Тогда
			Если ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
											|en = 'matches accounting'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с налоговым учетом';
											|en = 'matches tax accounting'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ ОбновитьВсе Тогда

		Элементы.ГруппаОтражениеРасходовПоАмортизацииБУ.Заголовок = 
			?(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы"),
			НСтр("ru = 'Включение в расходы (бухгалтерский учет)';
				|en = 'Inclusion in expenses (bookkeeping)'"),
			НСтр("ru = 'Амортизация (бухгалтерский учет)';
				|en = 'Depreciation (bookkeeping)'"));
			
		Элементы.СтатьяРасходовБУ.Подсказка = 
			?(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы"),
			НСтр("ru = 'Статья расходов, по которой стоимость включается в расходы';
				|en = 'Expense item for which the cost is included in expenses'"),
			НСтр("ru = 'Статья расходов, по которой отражаются амортизационные расходы';
				|en = 'Expense item recording depreciation expenses'"));
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыПринятияКУчетуОС.СтатьяРасходовНУОбязательна 
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовНУ) Тогда
			
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = "";
			
		Иначе
			ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
										|en = 'matches accounting'");
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы") Тогда
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = НСтр("ru = 'Включение в расходы (налоговый учет)';
																			|en = 'Inclusion in expenses (tax accounting)'");
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Подсказка = НСтр("ru = 'Статья расходов, на которую списывается стоимость при принятии к учету';
																			|en = 'Expense item to which the cost is charged to on initial recognition'"); 
		ИначеЕсли Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы") Тогда
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = НСтр("ru = 'Амортизация / Включение в расходы (налоговый учет)';
																			|en = 'Depreciation / Inclusion in expenses (tax accounting)'");
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Подсказка = НСтр("ru = 'Статья расходов, по которой отражаются амортизационные расходы или на которую списывается стоимость при принятии к учету';
																			|en = 'The cost item for which depreciation expenses are recorded or to which the value is written off upon recognition'"); 
		Иначе
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = НСтр("ru = 'Амортизация (налоговый учет)';
																			|en = 'Depreciation (tax accounting)'");
			Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Подсказка = НСтр("ru = 'Статья расходов, по которой отражаются амортизационные расходы';
																			|en = 'Expense item recording depreciation expenses'"); 
		КонецЕсли;
				
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.ОтображатьЗаголовок = 
			Элементы.СтатьяРасходовБУ.Видимость
			ИЛИ Элементы.СтатьяРасходовНУ.Видимость
			ИЛИ Элементы.СтатьяРасходовАмортизационнойПремии.Видимость
			ИЛИ Элементы.СтатьяРасходовНалог.Видимость
			ИЛИ Элементы.СтатьяДоходовПоИнвентаризации.Видимость
			ИЛИ Элементы.ПередаватьРасходыВДругуюОрганизацию.Видимость
			ИЛИ Объект.ОтражатьВРеглУчете;
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НедвижимоеИмущество")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") Тогда
			
			ЗаголовокГруппы = НСтр("ru = 'Земельный налог';
									|en = 'Land value tax'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по земельному налогу';
										|en = 'Expense item to record expenses on land tax'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по земельному налогу';
											|en = 'Object of land tax expenditure dimension'");
			
		ИначеЕсли Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование") Тогда
			
			ЗаголовокГруппы = НСтр("ru = 'Налог на имущество';
									|en = 'Property tax'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по налогу на имущество';
										|en = 'Expense item to record property tax expenses'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по налогу на имущество';
											|en = 'Object of property tax expenditure dimension'");
			
		ИначеЕсли НЕ ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
			И (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование")) Тогда
				
			ЗаголовокГруппы = НСтр("ru = 'Транспортный налог';
									|en = 'Vehicle tax'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по транспортному налогу';
										|en = 'Expense item to record expenses on transport tax'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по транспортному налогу';
											|en = 'Object of transport tax expenditure dimension'");
			
		Иначе
			
			ЗаголовокГруппы = НСтр("ru = 'Имущественные налоги';
									|en = 'Property taxes'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по имущественным налогам';
										|en = 'Expense item to record property tax expenses'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по имущественным налогам';
											|en = 'Object of property taxes expenditure dimension'");
			
		КонецЕсли;
		
		Элементы.ГруппаОтражениеРасходовПоНалогам.Заголовок = ЗаголовокГруппы;
		Элементы.СтатьяРасходовНалог.Подсказка = ПодсказкаНалогСтатья;
		Элементы.АналитикаРасходовНалог.Подсказка = ПодсказкаНалогАналитика;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов(Объект, ВспомогательныеРеквизиты, СписокРеквизитов) Экспорт
	
	//++ Локализация
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВБУ") <> Неопределено Тогда
		
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ НЕ Объект.ОтражатьВБУ Тогда
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
			СписокРеквизитов.Добавить("ВариантПримененияЦелевогоФинансирования");
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВариантПримененияЦелевогоФинансирования") <> Неопределено Тогда
	
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
				ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы") Тогда
				Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
				СписокРеквизитов.Добавить("ПорядокУчетаБУ");
			КонецЕсли; 
			
			Если Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
				СписокРеквизитов.Добавить("ПорядокУчетаУУ");
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
				И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
					ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы"))
					
			ИЛИ (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
					ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды"))
				И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизацииИлиСписаниеНаРасходы") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется") Тогда
			Объект.ЦелевоеФинансирование.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВключитьАмортизационнуюПремиюВСоставРасходов") <> Неопределено Тогда
		Если Объект.ВключитьАмортизационнуюПремиюВСоставРасходов Тогда
			
			Если Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ТретьяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ПятаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ШестаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.СедьмаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 30;
			ИначеЕсли Объект.АмортизационнаяГруппа <> ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 10;
			КонецЕсли;
			
		Иначе
			Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0;
		КонецЕсли;
		СписокРеквизитов.Добавить("ПроцентКапитальныхВложенийВключаемыхВРасходыНУ");
	КонецЕсли; 
	
	Если СписокРеквизитов.Найти("Дата") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено Тогда
		
		Если ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		ИначеЕсли НЕ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
			Иначе
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			КонецЕсли; 
			
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли;
		 
		Если ВспомогательныеРеквизиты.ПрименяетсяФСБУ6
			И (Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования") 
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")) Тогда
					
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
			СписокРеквизитов.Добавить("МетодНачисленияАмортизацииБУ");
		КонецЕсли;
		 
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруАренды");
			СписокРеквизитов.Добавить("СпособПоступления");
		ИначеЕсли Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруАренды") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПриобретениеЗаПлату");
			СписокРеквизитов.Добавить("СпособПоступления");
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ПрименяетсяФактическаяСтоимость(Объект) Экспорт

	Результат = Ложь;
	
	//++ Локализация
	Результат =
		Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
		ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена");
	
	//-- Локализация

	Возврат Результат;
	
КонецФункции
 
#КонецОбласти
