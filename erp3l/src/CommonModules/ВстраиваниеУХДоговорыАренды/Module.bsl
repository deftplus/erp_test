#Область ПрограммныйИнтерфейс

#Область ФормаЭлемента
Процедура ДоговорыАренды_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДобавитьРеквизитыФормыЭлемента(Форма);
		Форма.СостояниеДоговора = Перечисления.СостоянияДоговоров.Черновик;
	КонецЕсли;
	
	СоздатьЭлементыСостоянияДоговора(Элементы);
	СоздатьЭлементыПланирование(Элементы);
	СоздатьЭлементыМСФО(Элементы);
	
	Элементы.Статус.Видимость = Ложь;
	
	ДоговорыКонтрагентовФормыУХКлиентСервер.ЗаполнитьПредставлениеПараметровУчетаФИ(Форма, Объект);

	ДоговорыКонтрагентовФормыУХКлиентСервер.УправлениеФормой_ПараметрыУчетаФИ(Форма);
	
КонецПроцедуры

Процедура ДоговорыАренды_ФормаЭлемента_ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт 
	
	Объект = Форма.Объект;
	РеквизитыУжеСозданы = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СостояниеДоговора");
	Если Не РеквизитыУжеСозданы Тогда
		ДобавитьРеквизитыФормыЭлемента(Форма);
	КонецЕсли;
	
	Форма.СостояниеДоговора = УправлениеПроцессамиСогласованияУХ.ВернутьСтатусОбъекта(Объект.Ссылка);
	Если Не ЗначениеЗаполнено(Форма.СостояниеДоговора) Тогда
		Форма.СостояниеДоговора = Перечисления.СостоянияДоговоров.Черновик;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область ФормаДокумента_ЗаключениеДоговораАренды

Процедура ЗаключениеДоговораАренды_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СоздатьДекорациюЭтоРезультатОбновления(Форма, Элементы.Страницы);
	СоздатьЭлементыИспользованиеГрафика(Форма, Элементы.Страницы);
	
	Элементы.НадписьДокументЗаблокирован.Видимость = Объект.ТолькоГрафикиРасчетовУХ;
	
	ДействияСогласованиеУХСервер.НарисоватьПанельСогласованияИОпределитьСостояниеОбъекта(Форма);
	
	
КонецПроцедуры

Процедура ИзменениеУсловийДоговораАренды_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СоздатьДекорациюЭтоРезультатОбновления(Форма, Элементы.ГруппаСтраницы);
	СоздатьЭлементыИспользованиеГрафика(Форма, Элементы.ГруппаСтраницы);
	
	Элементы.НадписьДокументЗаблокирован.Видимость = Объект.ТолькоГрафикиРасчетовУХ;
	
	ДействияСогласованиеУХСервер.НарисоватьПанельСогласованияИОпределитьСостояниеОбъекта(Форма);
	
КонецПроцедуры

Процедура ПриЧтенииСозданииНаСервере_УсловияДоговораАренды(Форма) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Форма.ТолькоПросмотр = Объект.ТолькоГрафикиРасчетовУХ;
	Если Элементы.Найти("НадписьДокументЗаблокирован") <> Неопределено Тогда
		Элементы.НадписьДокументЗаблокирован.Видимость = Объект.ТолькоГрафикиРасчетовУХ
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеОткрытияПараметровОперацийГрафика(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	НастройкиОпераций = Объект.ПараметрыОпераций.Выгрузить();
	АдресНастроек = ПоместитьВоВременноеХранилище(НастройкиОпераций, Форма.УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресНастроек", АдресНастроек);
	
	ГруппаОперацийГрафика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ВидДоговораУХ.ГруппаОперацийГрафика");
	ПараметрыОткрытия.Вставить("ГруппаОперацийГрафика", ГруппаОперацийГрафика);
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", Ложь);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

Функция ЗагрузитьПараметрыОперацийГрафика(Форма, АдресНастроек) Экспорт
	
	Объект = Форма.Объект;
	
	ТаблицаНастроек = ПолучитьИзВременногоХранилища(АдресНастроек);	
	ЗаполнитьПараметрыОперацийГрафикаИзТаблицы(Форма, ТаблицаНастроек);
		
КонецФункции
#КонецОбласти

#Область МодульОбъекта_ЗаключениеДоговораАренды

Процедура ЗаключениеДоговораАренды_ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	Ссылка = Объект.Ссылка;
	Движения = Объект.Движения;
	
	ПроведениеСерверОПК.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.ЭтоНовый);
	ДополнительныеСвойства.Вставить("РежимЗаписи", ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.РежимЗаписи);
	
	ДополнительныеСвойства.Вставить("ТаблицаРасчетыСКонтрагентамиГрафики", Движения.РасчетыСКонтрагентамиГрафики.Выгрузить());
	
	ИнициализироватьДанныеДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ВыполнятьБюджетирование = РаботаСДоговорамиКонтрагентовУХ.ВыполнятьБюджетирование(Объект.РежимИспользованияГрафика);
	Если ВыполнятьБюджетирование Тогда
		КонтрольЛимитовУХ.ВыполнитьПроверкуНаличияПериодов(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по регистру ОперативныйПланПоБюджетам
	КонтрольЛимитовУХ.ОтразитьОперативныйПланПоБюджету(ДополнительныеСвойства, Движения, Отказ);
	КонтрольЛимитовУХ.ОтразитьЛимитыПоБюджетам(ДополнительныеСвойства, Движения, Отказ);
	
	Если Движения.Найти("ЛимитыПоБюджетам") <> неопределено Тогда
		ДополнительныеСвойства.ДляПроведения.Вставить(
			"РегистрыДляКонтроля", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Движения.ЛимитыПоБюджетам));
	КонецЕсли;
	
	ПроведениеСерверОПК.ЗаписатьНаборыЗаписей(Объект);
	ПроведениеСерверОПК.ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ);
	
	ПроведениеСерверОПК.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ЗаключениеДоговораАренды_ПередЗаписью(Объект, Отказ) Экспорт
	ПроверитьВозможностьЗаписиДокумента(Объект);
КонецПроцедуры

Процедура ИзменениеУсловийДоговораАренды_ПередЗаписью(Объект, Отказ) Экспорт
	ПроверитьВозможностьЗаписиДокумента(Объект);
КонецПроцедуры

Процедура ЗаключениеДоговораАренды_ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	ЗаполнитьПараметрыОперацийГрафикаПоУмолчанию(Объект);
КонецПроцедуры

Процедура ИзменениеУсловийДоговораАренды_ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	ЗаполнитьПараметрыОперацийГрафикаПоУмолчанию(Объект);
КонецПроцедуры
#КонецОбласти

#Область МодульОбъекта_ДоговорыАренды
Процедура ПередЗаписью(СправочникОбъект, Отказ) Экспорт
	СправочникОбъект.Статус = Перечисления.СтатусыДоговоровКонтрагентов.Действует;
КонецПроцедуры
	
#КонецОбласти

#Область Проведение

Процедура ТекстЗапросаВерсииРасчетов(ТекстыЗапроса,Регистры) Экспорт
	
	ИмяРегистра = "ВерсииРасчетов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Ссылка КАК ВерсияГрафика,
	|	&Договор КАК ПредметГрафика,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ИСТИНА Как ОпорныйГрафик";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКонтрагентамиГрафики(ТекстыЗапроса, Регистры, ИмяДокумента) Экспорт
	
	ИмяРегистра = "РасчетыСКонтрагентамиГрафики";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	// Начисление - Расход, оплата = Приход
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""1. Начисление выкупного платежа"" КАК ОписаниеОперации,
	|	ПараметрыДоговора.ПредметГрафика КАК ПредметГрафика,
	|	ПараметрыДоговора.ВерсияГрафика КАК ВерсияГрафика,
	|	ПараметрыДоговора.Организация КАК Организация,
	|	ПараметрыДоговора.Контрагент КАК Контрагент,
	|	ПараметрыДоговора.Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ВыкупнаяСтоимость) КАК ЭлементСтруктурыЗадолженности,
	|	ПараметрыДоговора.Период КАК Период,
	|	ПараметрыДоговора.Сумма КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	ПараметрыДоговора.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ПараметрыДоговора.СуммаПлатежа КАК СуммаПлатежа,
	|	ПараметрыДоговора.ЦФО КАК ЦФО,
	|	ПараметрыДоговора.Проект КАК Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов) КАК ВидБюджета,
	|	ПараметрыОпераций.ОперацияГрафика КАК Операция,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) КАК СчетОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка) КАК СчетКонтрагента,
	|	ПараметрыОпераций.СтатьяБюджета КАК СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1 КАК Аналитика1,
	|	ПараметрыОпераций.Аналитика2 КАК Аналитика2,
	|	ПараметрыОпераций.Аналитика3 КАК Аналитика3,
	|	ПараметрыОпераций.Аналитика4 КАК Аналитика4,
	|	ПараметрыОпераций.Аналитика5 КАК Аналитика5,
	|	ПараметрыОпераций.Аналитика6 КАК Аналитика6
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Договор КАК ПредметГрафика,
	|		&Ссылка КАК ВерсияГрафика,
	|		&Организация КАК Организация,
	|		&Контрагент КАК Контрагент,
	|		&ВалютаВзаиморасчетов КАК Валюта,
	|		&ДатаВыкупа КАК Период,
	|		&СуммаВыкупаПредметовАренды КАК Сумма,
	|		&ВалютаВзаиморасчетов КАК ВалютаПлатежа,
	|		&СуммаВыкупаПредметовАренды КАК СуммаПлатежа,
	|		&ЦФО КАК ЦФО,
	|		&Проект КАК Проект) КАК ПараметрыДоговора
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.Ссылка = &Ссылка)
	|			И (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_ВыкупнаяСтоимостьНачисление))
	|ГДЕ
	|	&СуммаВыкупаПредметовАренды <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""2. Начисление услуги по аренде"",
	|	&Договор,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.УслугаПоАренде),
	|	ТаблицаГрафика.Дата,
	|	ТаблицаГрафика.УслугаПоАренде,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход),
	|	&ВалютаВзаиморасчетов,
	|	ТаблицаГрафика.УслугаПоАренде,
	|	&ЦФО,
	|	&Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов),
	|	ПараметрыОпераций.ОперацияГрафика,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка),
	|	ПараметрыОпераций.СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1,
	|	ПараметрыОпераций.Аналитика2,
	|	ПараметрыОпераций.Аналитика3,
	|	ПараметрыОпераций.Аналитика4,
	|	ПараметрыОпераций.Аналитика5,
	|	ПараметрыОпераций.Аналитика6
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_УслугаПоАрендеНачисление))
	|			И ТаблицаГрафика.Ссылка = ПараметрыОпераций.Ссылка
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И ТаблицаГрафика.УслугаПоАренде <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""3. Начисление обеспечительного платежа по аренде"",
	|	&Договор,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОбеспечительныйПлатеж),
	|	ТаблицаГрафика.Дата,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход),
	|	&ВалютаВзаиморасчетов,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж,
	|	&ЦФО,
	|	&Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов),
	|	ПараметрыОпераций.ОперацияГрафика,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка),
	|	ПараметрыОпераций.СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1,
	|	ПараметрыОпераций.Аналитика2,
	|	ПараметрыОпераций.Аналитика3,
	|	ПараметрыОпераций.Аналитика4,
	|	ПараметрыОпераций.Аналитика5,
	|	ПараметрыОпераций.Аналитика6
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_ОбеспечительныйПлатежНачисление))
	|			И ТаблицаГрафика.Ссылка = ПараметрыОпераций.Ссылка
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И ТаблицаГрафика.ОбеспечительныйПлатеж <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""4. Оплата выкупного платежа по аренде"",
	|	&Договор,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ВыкупнаяСтоимость),
	|	ТаблицаГрафика.Дата,
	|	ТаблицаГрафика.ВыкупнаяСтоимость,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход),
	|	&ВалютаВзаиморасчетов,
	|	ТаблицаГрафика.ВыкупнаяСтоимость,
	|	&ЦФО,
	|	&Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств),
	|	ПараметрыОпераций.ОперацияГрафика,
	|	&БанковскийСчет,
	|	&БанковскийСчетКонтрагента,
	|	ПараметрыОпераций.СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1,
	|	ПараметрыОпераций.Аналитика2,
	|	ПараметрыОпераций.Аналитика3,
	|	ПараметрыОпераций.Аналитика4,
	|	ПараметрыОпераций.Аналитика5,
	|	ПараметрыОпераций.Аналитика6
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ТаблицаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_ВыкупнаяСтоимостьОплата))
	|			И ТаблицаГрафика.Ссылка = ПараметрыОпераций.Ссылка
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И ТаблицаГрафика.ВыкупнаяСтоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""5. Оплата услуг по аренде"",
	|	&Договор,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.УслугаПоАренде),
	|	ТаблицаГрафика.Дата,
	|	ТаблицаГрафика.УслугаПоАренде,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход),
	|	&ВалютаВзаиморасчетов,
	|	ТаблицаГрафика.УслугаПоАренде,
	|	&ЦФО,
	|	&Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств),
	|	ПараметрыОпераций.ОперацияГрафика,
	|	&БанковскийСчет,
	|	&БанковскийСчетКонтрагента,
	|	ПараметрыОпераций.СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1,
	|	ПараметрыОпераций.Аналитика2,
	|	ПараметрыОпераций.Аналитика3,
	|	ПараметрыОпераций.Аналитика4,
	|	ПараметрыОпераций.Аналитика5,
	|	ПараметрыОпераций.Аналитика6
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ТаблицаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_УслугаПоАрендеОплата))
	|			И ТаблицаГрафика.Ссылка = ПараметрыОпераций.Ссылка
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И ТаблицаГрафика.УслугаПоАренде <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""6. Оплата обеспечительного платежа по аренде"",
	|	&Договор,
	|	&Ссылка,
	|	&Организация,
	|	&Контрагент,
	|	&ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОбеспечительныйПлатеж),
	|	ТаблицаГрафика.Дата,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход),
	|	&ВалютаВзаиморасчетов,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж,
	|	&ЦФО,
	|	&Проект,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств),
	|	ПараметрыОпераций.ОперацияГрафика,
	|	&БанковскийСчет,
	|	&БанковскийСчетКонтрагента,
	|	ПараметрыОпераций.СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1,
	|	ПараметрыОпераций.Аналитика2,
	|	ПараметрыОпераций.Аналитика3,
	|	ПараметрыОпераций.Аналитика4,
	|	ПараметрыОпераций.Аналитика5,
	|	ПараметрыОпераций.Аналитика6
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ТаблицаГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПараметрыОпераций КАК ПараметрыОпераций
	|		ПО (ПараметрыОпераций.ОперацияГрафика = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.Аренда_ОбеспечительныйПлатежОплата))
	|			И ТаблицаГрафика.Ссылка = ПараметрыОпераций.Ссылка
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И ТаблицаГрафика.ОбеспечительныйПлатеж <> 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаключениеДоговораАренды", ИмяДокумента);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ФормированиеПозицийПоГрафику

Процедура ОбновитьПозицииЗаявокПоГрафику(ДокументОбъект) Экспорт
	
	Если РаботаСДоговорамиКонтрагентовУХКлиентСервер.ФормироватьПозицииЗаявокПоГрафику(ДокументОбъект) Тогда
		СоздатьПозицииЗаявокПоГрафику(ДокументОбъект);
	Иначе
		РаботаСДоговорамиКонтрагентовУХ.ОчиститьПозицииЗаявокПоГрафику(ДокументОбъект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПланыДокумента

// Процедура возвращает таблицу планов документа
//
// Параметры:
//  Источник  - ДокументСсылка, ДокументОбъект, Форма.Объект - Документ планирования
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица планов документа
//
Функция ПланыДокумента(Источник) Экспорт
	
	ТаблицаПланов = КонтрольЛимитовУХ.Новый_ТаблицаПланыДокумента();
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Источник)) Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Источник);
		ДанныеОбъекта = МенеджерОбъекта.ДанныеОбъектаПоСсылке(Источник);
	ИначеЕсли ТипЗнч(Источник) = Тип("ДанныеФормыСтруктура") И Источник.Свойство("Ссылка") Тогда
		ДанныеОбъекта = Источник;
	Иначе
		Возврат ТаблицаПланов;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеОбъекта.ПараметрыОпераций) = Тип("ДанныеФормыКоллекция") Тогда
		ПараметрыОпераций = ДанныеОбъекта.ПараметрыОпераций.Выгрузить();
	Иначе
		ПараметрыОпераций = ДанныеОбъекта.ПараметрыОпераций;
	КонецЕсли;
	
	//
	ПредопределенныеДанные = Новый Структура(
		"Период, Организация, Контрагент, ДоговорКонтрагента,ЦФО,Проект", 
		ДанныеОбъекта.Дата, ДанныеОбъекта.Организация, ДанныеОбъекта.Контрагент, ДанныеОбъекта.Договор, ДанныеОбъекта.Договор.ОсновнойЦФО, ДанныеОбъекта.Договор.ОсновнойПроект
	);
	
	// Заполним таблицу по графику начислений	
	Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов;
	
	Если ДанныеОбъекта.СуммаВыкупаПредметовАренды <> 0 Тогда
		ПараметрыОперПланирования = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение, ДанныеОбъекта.ДатаВыкупа);
		
		СтрокаПлана = ТаблицаПланов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
		СтрокаПлана.Период = ДанныеОбъекта.ДатаВыкупа;
		СтрокаПлана.Сумма = ДанныеОбъекта.СуммаВыкупаПредметовАренды;
		СтрокаПлана.ПериодОтчета =  ОбщегоНазначенияУХ.глОтносительныйПериодПоДате(ДанныеОбъекта.ДатаВыкупа, ПараметрыОперПланирования.ПериодичностьОперативногоПланирования,0);
		СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;
		СтрокаПлана.Предназначение = Предназначение;
		СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
		СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовИсполнение;
		
		ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_ВыкупнаяСтоимостьНачисление;
		ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
		
	КонецЕсли;
	
	Для Каждого Строка Из ДанныеОбъекта.ГрафикНачисленияУслуг Цикл
		
		ПараметрыОперПланирования = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение, Строка.Дата);
		ПериодОтчета = ОбщегоНазначенияУХ.глОтносительныйПериодПоДате(Строка.Дата, ПараметрыОперПланирования.ПериодичностьОперативногоПланирования,0);
		
		Если Строка.УслугаПоАренде <> 0 Тогда
			
			СтрокаПлана = ТаблицаПланов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
			СтрокаПлана.Период = Строка.Дата;
			СтрокаПлана.Сумма = Строка.УслугаПоАренде;
			СтрокаПлана.ПериодОтчета = ПериодОтчета ;
			СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;;
			СтрокаПлана.Предназначение = Предназначение;
			СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
			СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовИсполнение;
			
			ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_УслугаПоАрендеНачисление;
			ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
		
		КонецЕсли;
		
		Если Строка.ОбеспечительныйПлатеж <> 0 Тогда
			
			СтрокаПлана = ТаблицаПланов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
			СтрокаПлана.Период = Строка.Дата;
			СтрокаПлана.Сумма = Строка.ОбеспечительныйПлатеж;
			СтрокаПлана.ПериодОтчета = ПериодОтчета;
			СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;;
			СтрокаПлана.Предназначение = Предназначение;
			СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
			СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовИсполнение;
			
			ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_ОбеспечительныйПлатежНачисление;
			ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
		КонецЕсли;
		
	КонецЦикла;
	
	Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств;
	
	// Заполним таблицу по графику оплат
	Для Каждого Строка Из ДанныеОбъекта.ГрафикОплатУслуг Цикл
		
		ПараметрыОперПланирования = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение, Строка.Дата);
		ПериодОтчета = ОбщегоНазначенияУХ.глОтносительныйПериодПоДате(Строка.Дата, ПараметрыОперПланирования.ПериодичностьОперативногоПланирования,0);
		
		Если Строка.УслугаПоАренде <> 0 Тогда
			
			СтрокаПлана = ТаблицаПланов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
			СтрокаПлана.Период = Строка.Дата;
			СтрокаПлана.Сумма = Строка.УслугаПоАренде;
			СтрокаПлана.ПериодОтчета = ПериодОтчета ;
			СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств;
			СтрокаПлана.Предназначение = Предназначение;
			СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
			СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовБДДС;
			
			ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_УслугаПоАрендеОплата;
			ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
			
		КонецЕсли;
		
		Если Строка.ОбеспечительныйПлатеж <> 0 Тогда
			
			СтрокаПлана = ТаблицаПланов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
			СтрокаПлана.Период = Строка.Дата;
			СтрокаПлана.Сумма = Строка.ОбеспечительныйПлатеж;
			СтрокаПлана.ПериодОтчета = ПериодОтчета;
			СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств;;
			СтрокаПлана.Предназначение = Предназначение;
			СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
			СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовБДДС;
			
			ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_ОбеспечительныйПлатежОплата;
			ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
			
		КонецЕсли;
		
		Если Строка.ВыкупнаяСтоимость <> 0 Тогда
			
			СтрокаПлана = ТаблицаПланов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПлана, ПредопределенныеДанные);
			СтрокаПлана.Период = Строка.Дата;
			СтрокаПлана.Сумма = Строка.ВыкупнаяСтоимость;
			СтрокаПлана.ПериодОтчета = ПериодОтчета;
			СтрокаПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств;;
			СтрокаПлана.Предназначение = Предназначение;
			СтрокаПлана.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
			СтрокаПлана.ДокументРезервирования = ДанныеОбъекта.ИсточникЛимитовБДДС;
			
			ОперацияГрафика = Справочники.ОперацииГрафиковДоговоров.Аренда_ВыкупнаяСтоимостьОплата;
			ЗаполнитьПараметрыОперацииСтроки(СтрокаПлана, ОперацияГрафика, ПараметрыОпераций);
			
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат ТаблицаПланов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьРеквизитыФормыЭлемента(Форма)
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВыборПараметровУчетаФИУХ", Новый ОписаниеТипов()));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СостояниеДоговора", 
		Новый ОписаниеТипов("ПеречислениеСсылка.СостоянияДоговоров"),,НСтр("ru = 'Состояние договора'"),Истина));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

Процедура СоздатьЭлементыСостоянияДоговора(Элементы)
	
	ОбработчикиСостояниеДоговора = Новый Структура;
	ОбработчикиСостояниеДоговора.Вставить("ПриИзменении", "СостояниеДоговораПриИзменении");
	ПолеСостояниеДоговора = ФормыУХ.СоздатьПолеФормы(Элементы,
											"СостояниеДоговора",
											НСтр("ru = 'Состояние договора'"),
											"СостояниеДоговора",
											ВидПоляФормы.ПолеВвода,
											Элементы.ГруппаШапкаПраво,,,
											ОбработчикиСостояниеДоговора);	

КонецПроцедуры

Процедура СоздатьЭлементыПланирование(Элементы)
	
	СтраницаПланирование = ФормыУХ.СоздатьГруппуФормы(Элементы,
											"СтраницаПланирование",
											НСтр("ru = 'Планирование'"),
											ВидГруппыФормы.Страница,
											Элементы.ГруппаСтраницы,
											Элементы.СтраницаКомментарий);
											
											
	ПараметрыГруппаБюджетирование = Новый Структура;
	ПараметрыГруппаБюджетирование.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	ПараметрыГруппаБюджетирование.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);
	
	ГруппаБюджетирование = ФормыУХ.СоздатьГруппуФормы(Элементы,
														"ГруппаБюджетирование",
														НСтр("ru = 'Бюджетирование'"),
														ВидГруппыФормы.ОбычнаяГруппа,
														СтраницаПланирование,,ПараметрыГруппаБюджетирование);
														
	ПолеПриоритет = ФормыУХ.СоздатьПолеФормы(Элементы,
											"ПриоритетПлатежа",
											НСтр("ru = 'Приоритет'"),
											"Объект.ПриоритетПлатежа",
											ВидПоляФормы.ПолеВвода,
											ГруппаБюджетирование);
											
	ПолеОсновнойЦФО = ФормыУХ.СоздатьПолеФормы(Элементы,
											"ОсновнойЦФО",
											НСтр("ru = 'ЦФО'"),
											"Объект.ОсновнойЦФО",
											ВидПоляФормы.ПолеВвода,
											ГруппаБюджетирование);
											
	
	ПолеОсновнойПроект = ФормыУХ.СоздатьПолеФормы(Элементы,
											"ОсновнойПроект",
											НСтр("ru = 'Проект'"),
											"Объект.ОсновнойПроект",
											ВидПоляФормы.ПолеВвода,
											ГруппаБюджетирование);
	
КонецПроцедуры

Процедура СоздатьЭлементыМСФО(Элементы)
	
	СтраницаМСФО = ФормыУХ.СоздатьГруппуФормы(Элементы,
											"ГруппаРеквизитыМСФО",
											НСтр("ru = 'МСФО'"),
											ВидГруппыФормы.Страница,
											Элементы.ГруппаСтраницы,
											Элементы.СтраницаКомментарий);
											
	ПараметрыГруппаПараметрыУчетаФИ = Новый Структура;
	ПараметрыГруппаПараметрыУчетаФИ.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	ПараметрыГруппаПараметрыУчетаФИ.Вставить("ОтображатьЗаголовок", Ложь);
	ПараметрыГруппаПараметрыУчетаФИ.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);
	
	ГруппаПараметрыУчетаФИ = ФормыУХ.СоздатьГруппуФормы(Элементы,
														"ГруппаПараметрыУчетаФИ",
														НСтр("ru = 'Параметры учета ФИ'"),
														ВидГруппыФормы.ОбычнаяГруппа,
														СтраницаМСФО,,ПараметрыГруппаПараметрыУчетаФИ);
														
	ПараметрыПолеПараметрыУчетаФИ = ФормыУХ.ПараметрыПоляВводаПоУмолчанию();
	ПараметрыПолеПараметрыУчетаФИ.Вставить("Подсказка",
										НСтр("ru = 'Параметры учета по умолчанию для финансовых инструментов этого договора. 
													|Окончательные параметры учета указываются в документе'"));
	ПараметрыПолеПараметрыУчетаФИ.Вставить("ОтображениеПодсказки", ОтображениеПодсказки.Кнопка);
	ПараметрыПолеПараметрыУчетаФИ.Вставить("СвязиПараметровВыбора", СвязиПараметровВыбораПараметрыУчетаФИ());

	
	ОбработчикиСобытийПараметрыУчетаФИ = Новый Структура;
	ОбработчикиСобытийПараметрыУчетаФИ.Вставить("ПриИзменении", "ПараметрыУчетаФИПриИзменении");
	ПолеПараметрыУчетаФИ = ФормыУХ.СоздатьПолеФормы(Элементы,
													"ПараметрыУчетаФИ",
													НСтр("ru = 'Параметры учета'"),
													"Объект.ПараметрыУчетаФИ",
													ВидПоляФормы.ПолеВвода,
													ГруппаПараметрыУчетаФИ,,
													ПараметрыПолеПараметрыУчетаФИ,
													ОбработчикиСобытийПараметрыУчетаФИ);
													
	ПараметрыДекорацияПараметрыУчетаФИ = Новый Структура;
	ПараметрыДекорацияПараметрыУчетаФИ.Вставить("ЦветТекста", ЦветаСтиля.ТекстИнформационнойНадписи);
	ДекорацияПараметрыУчетаФИ = ФормыУХ.СоздатьДекорациюФормы(Элементы,
															"ДекорацияПараметрыУчетаФИ",
															"",
															ВидДекорацииФормы.Надпись,
															ГруппаПараметрыУчетаФИ,,
															ПараметрыДекорацияПараметрыУчетаФИ);
	Котировка = ФормыУХ.СоздатьПолеФормы(Элементы,
										"Котировка",
										НСтр("ru = 'Котировка'"),
										"Объект.Котировка",
										ВидПоляФормы.ПолеВвода,
										СтраницаМСФО);
										
	ПараметрыУровеньИерархииСправедливойСтоимости = ФормыУХ.ПараметрыПоляВводаПоУмолчанию();
	ПараметрыУровеньИерархииСправедливойСтоимости.Вставить("ВысотаЗаголовка", 2);
	УровеньИерархииСправедливойСтоимости = ФормыУХ.СоздатьПолеФормы(Элементы,
										"УровеньИерархииСправедливойСтоимости",
										НСтр("ru = 'Уровень иерархии справедливой стоимости'"),
										"Объект.УровеньИерархииСправедливойСтоимости",
										ВидПоляФормы.ПолеВвода,
										СтраницаМСФО,,
										ПараметрыУровеньИерархииСправедливойСтоимости);
										
	РучнойРасчетРезерваПоЗадолженности = ФормыУХ.СоздатьПолеФормы(Элементы,
										"РучнойРасчетРезерваПоЗадолженности",
										НСтр("ru = 'Ручной расчет резерва по задолженности'"),
										"Объект.РучнойРасчетРезерваПоЗадолженности",
										ВидПоляФормы.ПолеФлажка,
										СтраницаМСФО);
										
	ПараметрыГруппаКлассификация = Новый Структура;
	ПараметрыГруппаКлассификация.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	ПараметрыГруппаКлассификация.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная);
	ПараметрыГруппаКлассификация.Вставить("Подсказка", НСтр("ru = 'Рекомендуется использовать для трансформации'"));
	ПараметрыГруппаКлассификация.Вставить("ОтображениеПодсказки", ОтображениеПодсказки.Кнопка);
	
	ГруппаКлассификация = ФормыУХ.СоздатьГруппуФормы(Элементы,
													"ГруппаКлассификация",
													НСтр("ru = 'Классификация'"),
													ВидГруппыФормы.ОбычнаяГруппа,
													СтраницаМСФО,,
													ПараметрыГруппаКлассификация);
													
													
	ПредметДоговора = ФормыУХ.СоздатьПолеФормы(Элементы,
												"ПредметДоговора",
												НСтр("ru = 'Предмет договора'"),
												"Объект.КлассДоговора",
												ВидПоляФормы.ПолеВвода,
												ГруппаКлассификация);
										
	СрочностьЗадолженности = ФормыУХ.СоздатьПолеФормы(Элементы,
														"СрочностьЗадолженности",
														НСтр("ru = 'Срочность задолженности'"),
														"Объект.СрочностьЗадолженности",
														ВидПоляФормы.ПолеВвода,
														ГруппаКлассификация);
	
КонецПроцедуры

Функция СвязиПараметровВыбораПараметрыУчетаФИ()
	
	Связи = Новый Массив;
	Связи.Добавить(Новый СвязьПараметраВыбора("ВыборПараметровУчетаФИУХ", "ВыборПараметровУчетаФИУХ"));
	Связи.Добавить(Новый СвязьПараметраВыбора("ДатаНачала", "Объект.ДатаНачалаДействия"));
	Связи.Добавить(Новый СвязьПараметраВыбора("СрокДействия", "Объект.ДатаОкончанияДействия"));
	Связи.Добавить(Новый СвязьПараметраВыбора("Организация", "Объект.Организация"));
	Связи.Добавить(Новый СвязьПараметраВыбора("Стоимость", "УсловияДоговора_СуммаУслугПоАренде"));
	
	Возврат Новый ФиксированныйМассив(Связи);
	
КонецФункции

Процедура СоздатьДекорациюЭтоРезультатОбновления(Форма, ЭлементСтраницы)
	
	Элементы = Форма.Элементы;
	
	ПараметрыЭлемента = Новый Структура("Гиперссылка,РастягиватьПоГоризонтали", Истина,Истина);
	ПараметрыЭлемента.Вставить("АвтоМаксимальнаяШирина", Ложь);
	СобытияЭлемента = Новый Структура("Нажатие", "Подключаемый_НадписьДокументЗаблокированНажатие");
	Надпись = ФормыУХ.СоздатьДекорациюФормы(Элементы,
											"НадписьДокументЗаблокирован",
											НСтр("ru = 'Документ был создан при обновлении версии конфигурации и доступен только для чтения. Нажмите, чтобы разрешить редактирование документа'"),
											ВидДекорацииФормы.Надпись,
											Форма,
											ЭлементСтраницы,
											ПараметрыЭлемента,
											СобытияЭлемента);
	
КонецПроцедуры

Процедура СоздатьЭлементыИспользованиеГрафика(Форма, ЭлементСтраницы)
	
	Элементы = Форма.Элементы;
	
	СтраницаПланирование = ФормыУХ.СоздатьГруппуФормы(Элементы,
											"СтраницаПланирование",
											НСтр("ru = 'Планирование'"),
											ВидГруппыФормы.Страница,
											ЭлементСтраницы,
											Элементы.СтраницаДисконтирование);
											
	ПолеРежимИспользованияГрафика = ФормыУХ.СоздатьПолеФормы(Элементы,
											"РежимИспользованияГрафика",
											НСтр("ru = 'Режим использования графика'"),
											"Объект.РежимИспользованияГрафика",
											ВидПоляФормы.ПолеВвода,
											СтраницаПланирование);
											
	ПолеРежимАктуализацииЗаявок = ФормыУХ.СоздатьПолеФормы(Элементы,
											"РежимАктуализацииЗаявок",
											НСтр("ru = 'Режим актуализации заявок'"),
											"Объект.РежимАктуализацииЗаявок",
											ВидПоляФормы.ПолеВвода,
											СтраницаПланирование);

	ПолеИсточникЛимитовБДДС = ФормыУХ.СоздатьПолеФормы(Элементы,
											"ИсточникЛимитовБДДС",
											НСтр("ru = 'Источник лимитов БДДС'"),
											"Объект.ИсточникЛимитовБДДС",
											ВидПоляФормы.ПолеВвода,
											СтраницаПланирование);
											
	ПолеИсточникЛимитовИсполнение = ФормыУХ.СоздатьПолеФормы(Элементы,
											"ИсточникЛимитовИсполнение",
											НСтр("ru = 'Источник лимитов исполнение'"),
											"Объект.ИсточникЛимитовИсполнение",
											ВидПоляФормы.ПолеВвода,
											СтраницаПланирование);										
																						
	ИмяКоманды = "НастроитьПараметрыОперацийУХ";
	ФормыУХ.СоздатьКоманду(Форма, ИмяКоманды, НСтр("ru = 'Параметры операций графика'"), "Подключаемый_НастроитьПараметрыОперацийУХ");										
	ФормыУХ.СоздатьКнопкуФормы(Элементы, ИмяКоманды, "", ИмяКоманды, ВидКнопкиФормы.Гиперссылка, СтраницаПланирование);
		
КонецПроцедуры

Процедура СоздатьПозицииЗаявокПоГрафику(Объект, ПараметрыСоздания = Неопределено) Экспорт
	
	Если ПараметрыСоздания = Неопределено Тогда
		ПараметрыСоздания = РаботаСДоговорамиКонтрагентовУХ.НовыйПараметрыСозданияПозицийЗаявокПоГрафику();
	КонецЕсли;
	
	КолонкиРазделителяПозиций = Новый Массив;
	КолонкиРазделителяПозиций.Добавить("Дата");
	КолонкиРазделителяПозиций.Добавить("НаправлениеДвижения");
	КолонкиРазделителяПозиций.Добавить("ВидОперацииУХ");
	КолонкиРазделителяПозиций.Добавить("Валюта");
	КолонкиРазделителяПозиций.Добавить("СчетОрганизации");
	КолонкиРазделителяПозиций.Добавить("СчетКонтрагента");
	Если ПараметрыСоздания.РазделятьПоОперациямГрафика Тогда
		КолонкиРазделителяПозиций.Добавить("ОперацияГрафика");
	КонецЕсли;
	
	ГрафикВыгрузка = Объект.Движения.РасчетыСКонтрагентамиГрафики.Выгрузить().Скопировать(
		Новый Структура("ВидБюджета", ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств));
		
	ГрафикВыгрузка.Колонки.ПриходРасход.Имя = "НаправлениеДвижения";
	ГрафикВыгрузка.Колонки.Период.Имя = "Дата";
	ГрафикВыгрузка.Колонки.Добавить("ВидОперацииУХ", Новый ОписаниеТипов("СправочникСсылка.ВидыоперацийУХ"));
	
	Для Каждого ТекСтрока Из ГрафикВыгрузка Цикл
		ТекСтрока.ВидОперацииУХ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.Операция, "ВидОперацииУХ");
	КонецЦикла;
	
	КлючиСозданияПозиций = ГрафикВыгрузка.Скопировать();
	КлючиСозданияПозиций.Свернуть(СтрСоединить(КолонкиРазделителяПозиций, ","));
	
	// Свертка записей набора для уникальности записей в регистре
	МетаданныеРегистра = Метаданные.РегистрыСведений.ДвиженияБюджетированияПоПозициям;
	МассивИзмерений = Новый Массив;
	Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	СтрокаИзмерений = СтрСоединить(МассивИзмерений, ",");
	
	МассивРесурсов = Новый Массив;
	Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
		МассивРесурсов.Добавить(Ресурс.Имя);
	КонецЦикла;
	СтрокаРесурсов = СтрСоединить(МассивРесурсов, ",");
		
	РаботаСДоговорамиКонтрагентовУХ.ОчиститьПозицииЗаявокПоГрафику(Объект.Ссылка);
	
	ОбъектРасчетов = Объект.Договор;
		
	ДатаНачалаДействияДоговора = ДоговорыКонтрагентовВстраиваниеУХ.ДатаНачалаДействияДоговора(Объект.Договор);
	СтавкаНДСПоДоговору = Объект.СтавкаНДС;
		
	НовыеИдентификаторы = Новый Массив;
	
	Для Каждого ТекКлючСозданияПозиции Из КлючиСозданияПозиций Цикл
		
		Если ЗначениеЗаполнено(ПараметрыСоздания.ДатаНачала) И ТекКлючСозданияПозиции.Дата < ПараметрыСоздания.ДатаНачала Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТекКлючСозданияПозиции);
		
		ПозицииГрафика = ГрафикВыгрузка.Скопировать(СтруктураПоиска);
			
		НачатьТранзакцию();
		
		Попытка
			
			ИдентификаторПозицииОплаты = Новый УникальныйИдентификатор;
						
			НовыеИдентификаторы.Добавить(ИдентификаторПозицииОплаты);
						
			// Создаем запись позиции
			ПозицияОплаты = РегистрыСведений.РазмещениеЗаявок.СоздатьМенеджерЗаписи();
			ПозицияОплаты.ИдентификаторПозиции = ИдентификаторПозицииОплаты;
			ПозицияОплаты.ЗаявкаНаОперацию = Объект.Ссылка;
			ПозицияОплаты.ПриходРасход = ТекКлючСозданияПозиции.НаправлениеДвижения;
			
			ПозицияОплаты.БанковскийСчетКасса = ТекКлючСозданияПозиции.СчетОрганизации;
			ПозицияОплаты.СчетКонтрагента = ТекКлючСозданияПозиции.СчетКонтрагента;
			ПозицияОплаты.ДатаИсполнения = ТекКлючСозданияПозиции.Дата;
			ПозицияОплаты.СуммаВзаиморасчетов = ПозицииГрафика.Итог("Сумма");
			ПозицияОплаты.Сумма = ПозицияОплаты.СуммаВзаиморасчетов;
			ПозицияОплаты.КурсПлатежа = 1;
			ПозицияОплаты.КратностьПлатежа = 1;
			ПозицияОплаты.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная;
			ПозицияОплаты.ВалютаВзаиморасчетов = ТекКлючСозданияПозиции.Валюта;
			ПозицияОплаты.ВалютаОплаты = ТекКлючСозданияПозиции.Валюта;
			ПозицияОплаты.Организация = Объект.Организация;
			ПозицияОплаты.Контрагент = Объект.Контрагент;
			ПозицияОплаты.ДоговорКонтрагента = Объект.Договор;
			ПозицияОплаты.Проведен = Истина;
			ПозицияОплаты.ВидОперацииУХ = ТекКлючСозданияПозиции.ВидОперацииУХ;
			ПозицияОплаты.Приоритет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ПриоритетПлатежа");
			
			ПозицияОплаты.Записать();
			
			// ДвиженияБюджетированияПоПозициям
			
			РасшифровкаПлатежа = РегистрыСведений.ДвиженияБюджетированияПоПозициям.СоздатьНаборЗаписей();
			РасшифровкаПлатежа.Отбор.ИдентификаторПозиции.Установить(ИдентификаторПозицииОплаты);
			
			Для Каждого ТекПозицияГрафика Из ПозицииГрафика Цикл
				
				НоваяЗапись = РасшифровкаПлатежа.Добавить();
				НоваяЗапись.ИдентификаторПозиции = ИдентификаторПозицииОплаты;
				НоваяЗапись.ЗаявкаНаОперацию = Объект.Ссылка;
				НоваяЗапись.СтатьяДвиженияДенежныхСредств = ТекПозицияГрафика.СтатьяБюджета;
				Для ном = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
					НоваяЗапись["Аналитика" + ном] = ТекПозицияГрафика["Аналитика" + ном];
				КонецЦикла;	
				
				НоваяЗапись.Партнер = Объект.Партнер;			
				НоваяЗапись.ЦФО = ТекПозицияГрафика.ЦФО;
				НоваяЗапись.Проект = ТекПозицияГрафика.Проект;
				
				НоваяЗапись.ДоговорАренды = Объект.Договор;
	
				НоваяЗапись.ВалютаВзаиморасчетов = ТекПозицияГрафика.Валюта;
				НоваяЗапись.Сумма = ТекПозицияГрафика.Сумма;
				НоваяЗапись.СтавкаНДС = СтавкаНДСПоДоговору;
				
				ОперативноеПланированиеФормыУХКлиентСервер.ПересчитатьСуммуНДС(НоваяЗапись);
				
			КонецЦикла;
			
			ТаблицаЗаписей = РасшифровкаПлатежа.Выгрузить();
			ТаблицаЗаписей.Свернуть(СтрокаИзмерений, СтрокаРесурсов);
			РасшифровкаПлатежа.Загрузить(ТаблицаЗаписей);
			
			РасшифровкаПлатежа.Записать();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение;
		КонецПопытки;
			
	КонецЦикла;
		
	РаботаСДоговорамиКонтрагентовУХ.ПроверитьПравилаЗапретаОперацийДоговоры(Объект.Ссылка, НовыеИдентификаторы);
		
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Ссылка,
		|	Реквизиты.Дата КАК Дата,
		|	Реквизиты.Договор КАК ДоговорКонтрагента,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	6 КАК ЗаполненностьДоговораЗаявки,
		|	Неопределено КАК ДокументПланирования,
		|	Реквизиты.РежимИспользованияГрафика КАК РежимИспользованияГрафика,
		|	Реквизиты.Договор.ОсновнойЦФО КАК ЦФО,
		|	Реквизиты.Договор.ОсновнойПроект Как Проект
		|ИЗ
		|	_ИмяТаблицыДокумента_ КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ИмяТаблицыДокумента = "Документ." + ДокументСсылка.Метаданные().Имя;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "_ИмяТаблицыДокумента_", ИмяТаблицыДокумента);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Запрос.Выполнить().Выгрузить()[0]);
		
	Для Каждого ТекРеквизит Из Реквизиты Цикл
		Запрос.УстановитьПараметр(ТекРеквизит.Ключ, ТекРеквизит.Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДанныеДляПроведения(ДокументСсылка, ДополнительныеСвойства)
	
	// реквизиты документа.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	Параметры = Запрос.Параметры;
	Параметры.Вставить("РасчетыСКонтрагентамиГрафики", ДополнительныеСвойства.ТаблицаРасчетыСКонтрагентамиГрафики);
	ВыполнятьБюджетирование = РаботаСДоговорамиКонтрагентовУХ.ВыполнятьБюджетирование(Параметры.РежимИспользованияГрафика);
	
	Если НЕ ВыполнятьБюджетирование Тогда
		Возврат;
	КонецЕсли;
	
	// Если в справочнике периоды нет требуемых элементов, то прекращаем собирать данные
	Если НЕ КонтрольЛимитовУХ.ПодготовитьТаблицуДатИПериодов(Запрос, ДокументСсылка, ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ИмяТаблицыДокумента = ДокументСсылка.Метаданные().ПолноеИмя();
	
	ДобавитьТекстЗапросаОперативныйПланПоБюджетам(ТекстыЗапроса, ИмяТаблицыДокумента);
	ДобавитьТекстЗапросаВТ_ТаблицаПлановССуммамиЛимитирования(ТекстыЗапроса, ИмяТаблицыДокумента);
	
	ПроведениеСерверУХ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	ПодготовитьТаблицуЛимитовПоБюджетам(ДокументСсылка, Запрос, ДополнительныеСвойства.ТаблицыДляДвижений);
	
КонецПроцедуры

Процедура ПодготовитьТаблицуЛимитовПоБюджетам(ДокументСсылка, Запрос, ТаблицыДляДвижений)
	
	ТаблицаЛимитов = КонтрольЛимитовУХ.ПолучитьТаблицуЛимитов(Запрос, Запрос.Параметры.Дата);
	
	ТаблицыДляДвижений.Вставить("ТаблицаЛимитыПоБюджетам", ТаблицаЛимитов);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаОперативныйПланПоБюджетам(ТекстыЗапроса, ИмяТаблицаДокумента) Экспорт
		
	Если НЕ ПроведениеСерверУХ.ЕстьТаблицаЗапроса("ВТ_ТаблицаДвиженияОперации", ТекстыЗапроса) Тогда
		ДобавитьТекстЗапросаВТ_ТаблицаДвиженияОперации(ТекстыЗапроса, ИмяТаблицаДокумента);
	КонецЕсли;
	
	ИмяРегистра = "ОперативныйПланПоБюджетам";
	
	ТекстЗапроса1 = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ОрганизацияЗаполнена,
	|	ЛОЖЬ КАК КонтрагентЗаполнен,
	|	ЛОЖЬ КАК ДоговорКонтрагентаЗаполнен,
	|	1 КАК ТипДанных
	|ПОМЕСТИТЬ ВТ_МатрицаЗаполненностиДоговора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ИСТИНА,
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	6";
	
	ТекстЗапроса2 = 
	"ВЫБРАТЬ
	|	6 КАК ТипДанных
	|ПОМЕСТИТЬ ВТ_МатрицаОтбораПланов
	|ГДЕ
	|	&ЗаполненностьДоговораЗаявки = 6
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5
	|ГДЕ
	|	&ЗаполненностьДоговораЗаявки >= 5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4
	|ГДЕ
	|	(&ЗаполненностьДоговораЗаявки = 6
	|			ИЛИ &ЗаполненностьДоговораЗаявки = 4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3
	|ГДЕ
	|	&ЗаполненностьДоговораЗаявки >= 3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2
	|ГДЕ
	|	(&ЗаполненностьДоговораЗаявки = 6
	|			ИЛИ &ЗаполненностьДоговораЗаявки = 4
	|			ИЛИ &ЗаполненностьДоговораЗаявки = 2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1";
	ТекстЗапроса3 = 
	"ВЫБРАТЬ
	|	ЗапросОбороты.Предназначение КАК Предназначение,
	|	ЗапросОбороты.ПериодОтчета КАК ПериодОтчета,
	|	ЗапросОбороты.ЦФО КАК ЦФО,
	|	ЗапросОбороты.Проект КАК Проект,
	|	ЗапросОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	ЗапросОбороты.Аналитика1 КАК Аналитика1,
	|	ЗапросОбороты.Аналитика2 КАК Аналитика2,
	|	ЗапросОбороты.Аналитика3 КАК Аналитика3,
	|	ЗапросОбороты.Аналитика4 КАК Аналитика4,
	|	ЗапросОбороты.Аналитика5 КАК Аналитика5,
	|	ЗапросОбороты.Аналитика6 КАК Аналитика6,
	|	ЗапросОбороты.ПриходРасход КАК ПриходРасход,
	|	ЗапросОбороты.Валюта КАК Валюта,
	|	СУММА(ЗапросОбороты.ЗарезервированоОборот) КАК ЗарезервированоОборот,
	|	ЗапросОбороты.Организация КАК Организация,
	|	ЗапросОбороты.Контрагент КАК Контрагент,
	|	ЗапросОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ЗапросОбороты.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОрганизацияЗаполнена,
	|	ВЫБОР
	|		КОГДА (ЗапросОбороты.Контрагент = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЗапросОбороты.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗапросОбороты.Контрагент = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|				И ЗапросОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК КонтрагентЗаполнен,
	|	ВЫБОР
	|		КОГДА ЗапросОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДоговорЗаполнен
	|ПОМЕСТИТЬ ВТ_ОстаткиПоДокументуПланирования
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОперативныйПланПоБюджетамОбороты.Предназначение КАК Предназначение,
	|		ОперативныйПланПоБюджетамОбороты.ПериодОтчета КАК ПериодОтчета,
	|		ОперативныйПланПоБюджетамОбороты.ЦФО КАК ЦФО,
	|		ОперативныйПланПоБюджетамОбороты.Проект КАК Проект,
	|		ОперативныйПланПоБюджетамОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика1 КАК Аналитика1,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика2 КАК Аналитика2,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика3 КАК Аналитика3,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика4 КАК Аналитика4,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика5 КАК Аналитика5,
	|		ОперативныйПланПоБюджетамОбороты.Аналитика6 КАК Аналитика6,
	|		ОперативныйПланПоБюджетамОбороты.ПриходРасход КАК ПриходРасход,
	|		ОперативныйПланПоБюджетамОбороты.Валюта КАК Валюта,
	|		ОперативныйПланПоБюджетамОбороты.ЗарезервированоОборот КАК ЗарезервированоОборот,
	|		ОперативныйПланПоБюджетамОбороты.Организация КАК Организация,
	|		ОперативныйПланПоБюджетамОбороты.Контрагент КАК Контрагент,
	|		ОперативныйПланПоБюджетамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента
	|	ИЗ
	|		РегистрНакопления.ОперативныйПланПоБюджетам.Обороты(, , , ДокументПланирования = &ДокументПланирования) КАК ОперативныйПланПоБюджетамОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныйПланПоБюджетам.Предназначение,
	|		ОперативныйПланПоБюджетам.ПериодОтчета,
	|		ОперативныйПланПоБюджетам.ЦФО,
	|		ОперативныйПланПоБюджетам.Проект,
	|		ОперативныйПланПоБюджетам.СтатьяБюджета,
	|		ОперативныйПланПоБюджетам.Аналитика1,
	|		ОперативныйПланПоБюджетам.Аналитика2,
	|		ОперативныйПланПоБюджетам.Аналитика3,
	|		ОперативныйПланПоБюджетам.Аналитика4,
	|		ОперативныйПланПоБюджетам.Аналитика5,
	|		ОперативныйПланПоБюджетам.Аналитика6,
	|		ОперативныйПланПоБюджетам.ПриходРасход,
	|		ОперативныйПланПоБюджетам.Валюта,
	|		-ОперативныйПланПоБюджетам.Зарезервировано,
	|		ОперативныйПланПоБюджетам.Организация,
	|		ОперативныйПланПоБюджетам.Контрагент,
	|		ОперативныйПланПоБюджетам.ДоговорКонтрагента
	|	ИЗ
	|		РегистрНакопления.ОперативныйПланПоБюджетам КАК ОперативныйПланПоБюджетам
	|	ГДЕ
	|		ОперативныйПланПоБюджетам.Регистратор = &Ссылка
	|		И ОперативныйПланПоБюджетам.ДокументПланирования = &ДокументПланирования) КАК ЗапросОбороты
	|ГДЕ
	|	&ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапросОбороты.Валюта,
	|	ЗапросОбороты.Контрагент,
	|	ЗапросОбороты.ПриходРасход,
	|	ЗапросОбороты.Организация,
	|	ЗапросОбороты.ПериодОтчета,
	|	ЗапросОбороты.СтатьяБюджета,
	|	ЗапросОбороты.Предназначение,
	|	ЗапросОбороты.ЦФО,
	|	ЗапросОбороты.Проект,
	|	ЗапросОбороты.Аналитика1,
	|	ЗапросОбороты.Аналитика2,
	|	ЗапросОбороты.Аналитика3,
	|	ЗапросОбороты.Аналитика4,
	|	ЗапросОбороты.Аналитика5,
	|	ЗапросОбороты.Аналитика6,
	|	ЗапросОбороты.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА (ЗапросОбороты.Контрагент = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЗапросОбороты.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗапросОбороты.Контрагент = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|				И ЗапросОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗапросОбороты.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗапросОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
	
	ТекстЗапроса4 = 
	"ВЫБРАТЬ
	|	ВТ_ОстаткиПоДокументуПланирования.Предназначение КАК Предназначение,
	|	ВТ_ОстаткиПоДокументуПланирования.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ОстаткиПоДокументуПланирования.ЦФО КАК ЦФО,
	|	ВТ_ОстаткиПоДокументуПланирования.Проект КАК Проект,
	|	ВТ_ОстаткиПоДокументуПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика1 КАК Аналитика1,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика2 КАК Аналитика2,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика3 КАК Аналитика3,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика4 КАК Аналитика4,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика5 КАК Аналитика5,
	|	ВТ_ОстаткиПоДокументуПланирования.Аналитика6 КАК Аналитика6,
	|	ВТ_ОстаткиПоДокументуПланирования.ПриходРасход КАК ПриходРасход,
	|	ВТ_ОстаткиПоДокументуПланирования.Валюта КАК Валюта,
	|	ВТ_ОстаткиПоДокументуПланирования.ЗарезервированоОборот КАК ЗарезервированоОборот,
	|	ВТ_ОстаткиПоДокументуПланирования.Организация КАК Организация,
	|	ВТ_ОстаткиПоДокументуПланирования.Контрагент КАК Контрагент,
	|	ВТ_ОстаткиПоДокументуПланирования.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ОстаткиПоДокументуПланирования.ОрганизацияЗаполнена КАК ОрганизацияЗаполнена,
	|	ВТ_ОстаткиПоДокументуПланирования.КонтрагентЗаполнен КАК КонтрагентЗаполнен,
	|	ВТ_ОстаткиПоДокументуПланирования.ДоговорЗаполнен КАК ДоговорЗаполнен,
	|	ВТ_МатрицаЗаполненностиДоговора.ТипДанных КАК ТипДанных
	|ПОМЕСТИТЬ ВТ_ОстаткиЗапланировано
	|ИЗ
	|	ВТ_МатрицаЗаполненностиДоговора КАК ВТ_МатрицаЗаполненностиДоговора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоДокументуПланирования КАК ВТ_ОстаткиПоДокументуПланирования
	|		ПО ВТ_МатрицаЗаполненностиДоговора.ОрганизацияЗаполнена = ВТ_ОстаткиПоДокументуПланирования.ОрганизацияЗаполнена
	|			И ВТ_МатрицаЗаполненностиДоговора.КонтрагентЗаполнен = ВТ_ОстаткиПоДокументуПланирования.КонтрагентЗаполнен
	|			И ВТ_МатрицаЗаполненностиДоговора.ДоговорКонтрагентаЗаполнен = ВТ_ОстаткиПоДокументуПланирования.ДоговорЗаполнен
	|ГДЕ
	|	(ВТ_ОстаткиПоДокументуПланирования.Организация = &Организация
	|			ИЛИ ВТ_ОстаткиПоДокументуПланирования.ОрганизацияЗаполнена = ЛОЖЬ)
	|	И (ВТ_ОстаткиПоДокументуПланирования.Контрагент = &Контрагент
	|			ИЛИ ВТ_ОстаткиПоДокументуПланирования.КонтрагентЗаполнен = ЛОЖЬ)
	|	И (ВТ_ОстаткиПоДокументуПланирования.ДоговорКонтрагента = &ДоговорКонтрагента
	|			ИЛИ ВТ_ОстаткиПоДокументуПланирования.ДоговорЗаполнен = ЛОЖЬ)";
	
	ТекстЗапроса5 = 
	"ВЫБРАТЬ
	|	ВТ_ОстаткиЗапланировано.Предназначение КАК Предназначение,
	|	ВТ_ОстаткиЗапланировано.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ОстаткиЗапланировано.ЦФО КАК ЦФО,
	|	ВТ_ОстаткиЗапланировано.Проект КАК Проект,
	|	ВТ_ОстаткиЗапланировано.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ОстаткиЗапланировано.Аналитика1 КАК Аналитика1,
	|	ВТ_ОстаткиЗапланировано.Аналитика2 КАК Аналитика2,
	|	ВТ_ОстаткиЗапланировано.Аналитика3 КАК Аналитика3,
	|	ВТ_ОстаткиЗапланировано.Аналитика4 КАК Аналитика4,
	|	ВТ_ОстаткиЗапланировано.Аналитика5 КАК Аналитика5,
	|	ВТ_ОстаткиЗапланировано.Аналитика6 КАК Аналитика6,
	|	ВТ_ОстаткиЗапланировано.ПриходРасход КАК ПриходРасход,
	|	ВТ_ОстаткиЗапланировано.Валюта КАК Валюта,
	|	ВТ_ОстаткиЗапланировано.ЗарезервированоОборот КАК ЗарезервированоОборот,
	|	ВТ_ОстаткиЗапланировано.Организация КАК Организация,
	|	ВТ_ОстаткиЗапланировано.Контрагент КАК Контрагент,
	|	ВТ_ОстаткиЗапланировано.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ОстаткиЗапланировано.ОрганизацияЗаполнена КАК ОрганизацияЗаполнена,
	|	ВТ_ОстаткиЗапланировано.КонтрагентЗаполнен КАК КонтрагентЗаполнен,
	|	ВТ_ОстаткиЗапланировано.ДоговорЗаполнен КАК ДоговорЗаполнен,
	|	ВТ_ОстаткиЗапланировано.ТипДанных КАК ТипДанных
	|ПОМЕСТИТЬ ВТ_Запланировано
	|ИЗ
	|	ВТ_МатрицаОтбораПланов КАК ВТ_МатрицаОтбораПланов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиЗапланировано КАК ВТ_ОстаткиЗапланировано
	|		ПО ВТ_МатрицаОтбораПланов.ТипДанных = ВТ_ОстаткиЗапланировано.ТипДанных";
	
	
	ТекстЗапроса6 = 
	"ВЫБРАТЬ
	|	ВТ_Запланировано.Предназначение КАК Предназначение,
	|	ВТ_Запланировано.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_Запланировано.ЦФО КАК ЦФО,
	|	ВТ_Запланировано.Проект КАК Проект,
	|	ВТ_Запланировано.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_Запланировано.Аналитика1 КАК Аналитика1,
	|	ВТ_Запланировано.Аналитика2 КАК Аналитика2,
	|	ВТ_Запланировано.Аналитика3 КАК Аналитика3,
	|	ВТ_Запланировано.Аналитика4 КАК Аналитика4,
	|	ВТ_Запланировано.Аналитика5 КАК Аналитика5,
	|	ВТ_Запланировано.Аналитика6 КАК Аналитика6,
	|	ВТ_Запланировано.ПриходРасход КАК ПриходРасход,
	|	ВТ_Запланировано.Валюта КАК Валюта,
	|	ВТ_Запланировано.Организация КАК Организация,
	|	ВТ_Запланировано.Контрагент КАК Контрагент,
	|	ВТ_Запланировано.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_Запланировано.ЗарезервированоОборот КАК ЗарезервированоОборот,
	|	ВТ_Запланировано.ТипДанных КАК ТипДанных,
	|	СУММА(ВТ_Запланировано1.ЗарезервированоОборот) КАК ЗарезервированоОборот1
	|ПОМЕСТИТЬ ВТ_ЗапланированоСИтогами
	|ИЗ
	|	ВТ_Запланировано КАК ВТ_Запланировано
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Запланировано КАК ВТ_Запланировано1
	|		ПО ВТ_Запланировано.Предназначение = ВТ_Запланировано1.Предназначение
	|			И ВТ_Запланировано.ПериодОтчета = ВТ_Запланировано1.ПериодОтчета
	|			И ВТ_Запланировано.ЦФО = ВТ_Запланировано1.ЦФО
	|			И ВТ_Запланировано.Проект = ВТ_Запланировано1.Проект
	|			И ВТ_Запланировано.СтатьяБюджета = ВТ_Запланировано1.СтатьяБюджета
	|			И ВТ_Запланировано.Аналитика1 = ВТ_Запланировано1.Аналитика1
	|			И ВТ_Запланировано.Аналитика2 = ВТ_Запланировано1.Аналитика2
	|			И ВТ_Запланировано.Аналитика3 = ВТ_Запланировано1.Аналитика3
	|			И ВТ_Запланировано.Аналитика4 = ВТ_Запланировано1.Аналитика4
	|			И ВТ_Запланировано.Аналитика5 = ВТ_Запланировано1.Аналитика5
	|			И ВТ_Запланировано.Аналитика6 = ВТ_Запланировано1.Аналитика6
	|			И ВТ_Запланировано.ПриходРасход = ВТ_Запланировано1.ПриходРасход
	|			И ВТ_Запланировано.Валюта = ВТ_Запланировано1.Валюта
	|			И ВТ_Запланировано.ТипДанных <= ВТ_Запланировано1.ТипДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Запланировано.ПриходРасход,
	|	ВТ_Запланировано.Валюта,
	|	ВТ_Запланировано.СтатьяБюджета,
	|	ВТ_Запланировано.ЦФО,
	|	ВТ_Запланировано.Проект,
	|	ВТ_Запланировано.Предназначение,
	|	ВТ_Запланировано.Аналитика1,
	|	ВТ_Запланировано.Аналитика2,
	|	ВТ_Запланировано.Аналитика3,
	|	ВТ_Запланировано.Аналитика4,
	|	ВТ_Запланировано.Аналитика5,
	|	ВТ_Запланировано.Аналитика6,
	|	ВТ_Запланировано.ПериодОтчета,
	|	ВТ_Запланировано.ЗарезервированоОборот,
	|	ВТ_Запланировано.Организация,
	|	ВТ_Запланировано.Контрагент,
	|	ВТ_Запланировано.ДоговорКонтрагента,
	|	ВТ_Запланировано.ТипДанных";
	
	//
	ТекстЗапроса7 = 
	"ВЫБРАТЬ
	|	ВТ_ТаблицаДвиженияОперации.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаДвиженияОперации.Период КАК Период,
	|	ВТ_ТаблицаДвиженияОперации.Предназначение КАК Предназначение,
	|	ВТ_ТаблицаДвиженияОперации.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ТаблицаДвиженияОперации.Валюта КАК Валюта,
	|	ВТ_ТаблицаДвиженияОперации.ЦФО КАК ЦФО,
	|	ВТ_ТаблицаДвиженияОперации.Проект КАК Проект,
	|	ВТ_ТаблицаДвиженияОперации.ПриходРасход КАК ПриходРасход,
	|	ВТ_ТаблицаДвиженияОперации.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ТаблицаДвиженияОперации.ЖелаемаяДатаОплаты КАК ЖелаемаяДатаОплаты,
	|	ВТ_ТаблицаДвиженияОперации.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика1 КАК Аналитика1,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика2 КАК Аналитика2,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика3 КАК Аналитика3,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика4 КАК Аналитика4,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика5 КАК Аналитика5,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика6 КАК Аналитика6,
	|	ВТ_ТаблицаДвиженияОперации.Организация КАК Организация,
	|	ВТ_ТаблицаДвиженияОперации.Контрагент КАК Контрагент,
	|	ВТ_ТаблицаДвиженияОперации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	0 КАК Зарезервировано,
	|	ВТ_ТаблицаДвиженияОперации.Заявлено КАК Заявлено
	|ИЗ
	|	ВТ_ТаблицаДвиженияОперации КАК ВТ_ТаблицаДвиженияОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДвиженияОперации.Ссылка,
	|	ВТ_ТаблицаДвиженияОперации.Период,
	|	ВТ_ТаблицаДвиженияОперации.Предназначение,
	|	ВТ_ТаблицаДвиженияОперации.ПериодОтчета,
	|	ВТ_ТаблицаДвиженияОперации.Валюта,
	|	ВТ_ТаблицаДвиженияОперации.ЦФО,
	|	ВТ_ТаблицаДвиженияОперации.Проект,
	|	ВТ_ТаблицаДвиженияОперации.ПриходРасход,
	|	&ДокументПланирования,
	|	ВТ_ТаблицаДвиженияОперации.ЖелаемаяДатаОплаты,
	|	ВТ_ТаблицаДвиженияОперации.СтатьяБюджета,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика1,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика2,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика3,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика4,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика5,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика6,
	|	ВТ_ЗапланированоСИтогами.Организация,
	|	ВТ_ЗапланированоСИтогами.Контрагент,
	|	ВТ_ЗапланированоСИтогами.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ВТ_ЗапланированоСИтогами.ЗарезервированоОборот1 > ВТ_ТаблицаДвиженияОперации.Заявлено
	|			ТОГДА ВТ_ЗапланированоСИтогами.ЗарезервированоОборот1 - ВТ_ЗапланированоСИтогами.ЗарезервированоОборот - ВТ_ТаблицаДвиженияОперации.Заявлено
	|		ИНАЧЕ -ВТ_ЗапланированоСИтогами.ЗарезервированоОборот
	|	КОНЕЦ,
	|	0
	|ИЗ
	|	ВТ_ТаблицаДвиженияОперации КАК ВТ_ТаблицаДвиженияОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗапланированоСИтогами КАК ВТ_ЗапланированоСИтогами
	|		ПО ВТ_ТаблицаДвиженияОперации.Предназначение = ВТ_ЗапланированоСИтогами.Предназначение
	|			И ВТ_ТаблицаДвиженияОперации.ПериодОтчета = ВТ_ЗапланированоСИтогами.ПериодОтчета
	|			И ВТ_ТаблицаДвиженияОперации.ЦФО = ВТ_ЗапланированоСИтогами.ЦФО
	|			И ВТ_ТаблицаДвиженияОперации.Проект = ВТ_ЗапланированоСИтогами.Проект
	|			И ВТ_ТаблицаДвиженияОперации.СтатьяБюджета = ВТ_ЗапланированоСИтогами.СтатьяБюджета
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика1 = ВТ_ЗапланированоСИтогами.Аналитика1
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика2 = ВТ_ЗапланированоСИтогами.Аналитика2
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика3 = ВТ_ЗапланированоСИтогами.Аналитика3
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика4 = ВТ_ЗапланированоСИтогами.Аналитика4
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика5 = ВТ_ЗапланированоСИтогами.Аналитика5
	|			И ВТ_ТаблицаДвиженияОперации.Аналитика6 = ВТ_ЗапланированоСИтогами.Аналитика6
	|			И ВТ_ТаблицаДвиженияОперации.ПриходРасход = ВТ_ЗапланированоСИтогами.ПриходРасход
	|			И ВТ_ТаблицаДвиженияОперации.Валюта = ВТ_ЗапланированоСИтогами.Валюта
	|ГДЕ
	|	ВТ_ТаблицаДвиженияОперации.Заявлено > ВТ_ЗапланированоСИтогами.ЗарезервированоОборот1 - ВТ_ЗапланированоСИтогами.ЗарезервированоОборот";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса1, "ВТ_МатрицаЗаполненностиДоговора");
	ТекстыЗапроса.Добавить(ТекстЗапроса2, "ВТ_МатрицаОтбораПланов");
	ТекстыЗапроса.Добавить(ТекстЗапроса3, "ВТ_ОстаткиПоДокументуПланирования");
	ТекстыЗапроса.Добавить(ТекстЗапроса4, "ВТ_ОстаткиЗапланировано");
	ТекстыЗапроса.Добавить(ТекстЗапроса5, "ВТ_Запланировано");
	ТекстыЗапроса.Добавить(ТекстЗапроса6, "ВТ_ЗапланированоСИтогами");
	ТекстыЗапроса.Добавить(ТекстЗапроса7, ИмяРегистра);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВТ_ТаблицаРасчетыСКонтрагентамиГрафики(ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_РасчетыСКонтрагентамиГрафики";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ГрафикРасчетов.ВерсияГрафика КАК Ссылка,
	|	ГрафикРасчетов.ВидБюджета КАК ВидБюджета,
	|	ГрафикРасчетов.Организация КАК Организация,
	|	ГрафикРасчетов.Валюта КАК Валюта,
	|	ГрафикРасчетов.ЦФО КАК ЦФО,
	|	ГрафикРасчетов.Проект КАК Проект,
	|	ГрафикРасчетов.Контрагент КАК Контрагент,
	|	ГрафикРасчетов.ПредметГрафика КАК ДоговорКонтрагента,
	|	ГрафикРасчетов.ПриходРасход КАК НаправлениеДвижения,
	|	ГрафикРасчетов.Период КАК Дата,
	|	ГрафикРасчетов.СтатьяБюджета КАК СтатьяБюджета,
	|	ГрафикРасчетов.Аналитика1 КАК Аналитика1,
	|	ГрафикРасчетов.Аналитика2 КАК Аналитика2,
	|	ГрафикРасчетов.Аналитика3 КАК Аналитика3,
	|	ГрафикРасчетов.Аналитика4 КАК Аналитика4,
	|	ГрафикРасчетов.Аналитика5 КАК Аналитика5,
	|	ГрафикРасчетов.Аналитика6 КАК Аналитика6,
	|	ГрафикРасчетов.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_РасчетыСКонтрагентамиГрафики
	|ИЗ
	|	&РасчетыСКонтрагентамиГрафики КАК ГрафикРасчетов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВТ_ТаблицаДвиженияОперации(ТекстыЗапроса, ИмяТаблицаДокумента)
	
	ДобавитьТекстЗапросаВТ_ТаблицаРасчетыСКонтрагентамиГрафики(ТекстыЗапроса);
	
	ИмяВременнойТаблицы = "ВТ_ТаблицаДвиженияОперации";
	
	// вытаскиваем данные из графика.
	ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	ГрафикРасчетов.Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ГрафикРасчетов.ВидБюджета.Предназначение КАК Предназначение,
	|	Периоды.Ссылка КАК ПериодОтчета,
	|	&Организация КАК Организация,
	|	ГрафикРасчетов.Валюта КАК Валюта,
	|	ГрафикРасчетов.ЦФО КАК ЦФО,
	|	ГрафикРасчетов.Проект КАК Проект,
	|	&Контрагент КАК Контрагент,
	|	&ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ГрафикРасчетов.НаправлениеДвижения КАК ПриходРасход,
	|	&Ссылка КАК ДокументПланирования,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРезервирования,
	|	ГрафикРасчетов.Дата КАК ЖелаемаяДатаОплаты,
	|	ГрафикРасчетов.СтатьяБюджета КАК СтатьяБюджета,
	|	ГрафикРасчетов.Аналитика1 КАК Аналитика1,
	|	ГрафикРасчетов.Аналитика2 КАК Аналитика2,
	|	ГрафикРасчетов.Аналитика3 КАК Аналитика3,
	|	ГрафикРасчетов.Аналитика4 КАК Аналитика4,
	|	ГрафикРасчетов.Аналитика5 КАК Аналитика5,
	|	ГрафикРасчетов.Аналитика6 КАК Аналитика6,
	|	СУММА(ГрафикРасчетов.Сумма) КАК Заявлено
	|ПОМЕСТИТЬ ВТ_ТаблицаДвиженияОперации
	|ИЗ
	|	ВТ_РасчетыСКонтрагентамиГрафики КАК ГрафикРасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОперативногоПланирования КАК ПараметрыОперативногоПланирования
	|		ПО (ПараметрыОперативногоПланирования.ВидБюджета = ГрафикРасчетов.ВидБюджета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Периоды КАК Периоды
	|		ПО (ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования = Периоды.Периодичность)
	|			И ГрафикРасчетов.Дата >= Периоды.ДатаНачала
	|			И ГрафикРасчетов.Дата <= Периоды.ДатаОкончания
	|			И (Периоды.ПометкаУдаления = ЛОЖЬ)
	|			И (Периоды.Произвольный = ЛОЖЬ)
	|ГДЕ
	|	ГрафикРасчетов.Ссылка = &Ссылка
	|	И ГрафикРасчетов.ВидБюджета <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Ссылка,
	|	ГрафикРасчетов.Ссылка,
	|	ГрафикРасчетов.СтатьяБюджета,
	|	ГрафикРасчетов.Аналитика1,
	|	ГрафикРасчетов.Аналитика2,
	|	ГрафикРасчетов.Аналитика3,
	|	ГрафикРасчетов.Аналитика4,
	|	ГрафикРасчетов.Аналитика5,
	|	ГрафикРасчетов.Аналитика6,
	|	ГрафикРасчетов.ВидБюджета.Предназначение,
	|	ГрафикРасчетов.Валюта,
	|	ГрафикРасчетов.ЦФО,
	|	ГрафикРасчетов.Проект,
	|	ГрафикРасчетов.НаправлениеДвижения,
	|	ГрафикРасчетов.Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	&Дата,
	|	ОперативныйПланПоБюджетамОбороты.Предназначение,
	|	ОперативныйПланПоБюджетамОбороты.ПериодОтчета,
	|	ОперативныйПланПоБюджетамОбороты.Организация,
	|	ОперативныйПланПоБюджетамОбороты.Валюта,
	|	ОперативныйПланПоБюджетамОбороты.ЦФО,
	|	ОперативныйПланПоБюджетамОбороты.Проект,
	|	ОперативныйПланПоБюджетамОбороты.Контрагент,
	|	ОперативныйПланПоБюджетамОбороты.ДоговорКонтрагента,
	|	ОперативныйПланПоБюджетамОбороты.ПриходРасход,
	|	ОперативныйПланПоБюджетамОбороты.ДокументПланирования,
	|	NULL,
	|	NULL,
	|	ОперативныйПланПоБюджетамОбороты.СтатьяБюджета,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика1,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика2,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика3,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика4,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика5,
	|	ОперативныйПланПоБюджетамОбороты.Аналитика6,
	|	-ОперативныйПланПоБюджетамОбороты.ЗаявленоОборот
	|ИЗ
	|	РегистрНакопления.ОперативныйПланПоБюджетам.Обороты(
	|			,
	|			,
	|			Авто,
	|			ДокументПланирования В
	|				(ВЫБРАТЬ
	|					ВерсииРасчетов.ВерсияГрафика КАК Регистратор
	|				ИЗ
	|					РегистрСведений.ВерсииРасчетов КАК ВерсииРасчетов
	|				ГДЕ
	|					ВерсииРасчетов.ПредметГрафика = &ДоговорКонтрагента
	|					И ВерсииРасчетов.Регистратор <> &Ссылка)) КАК ОперативныйПланПоБюджетамОбороты";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "_ИмяТаблицыГрафика_", ИмяТаблицаДокумента + ".ГрафикРасчетов");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаВТ_ТаблицаПлановССуммамиЛимитирования(ТекстыЗапроса,ИмяТаблицыДокумента) Экспорт

	ИмяВременнойТаблицы = "ВТ_ТаблицаПлановССуммамиЛимитирования";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ТаблицаДвиженияОперации.Период КАК Период,
	|	ВТ_ТаблицаДвиженияОперации.Предназначение КАК Предназначение,
	|	ВТ_ТаблицаДвиженияОперации.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ТаблицаДвиженияОперации.ПриходРасход КАК ПриходРасход,
	|	ВТ_ТаблицаДвиженияОперации.ЦФО КАК ЦФО,
	|	ВТ_ТаблицаДвиженияОперации.Проект КАК Проект,
	|	ВТ_ТаблицаДвиженияОперации.Организация КАК Организация,
	|	ВТ_ТаблицаДвиженияОперации.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика1 КАК Аналитика1,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика2 КАК Аналитика2,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика3 КАК Аналитика3,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика4 КАК Аналитика4,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика5 КАК Аналитика5,
	|	ВТ_ТаблицаДвиженияОперации.Аналитика6 КАК Аналитика6,
	|	ВТ_ТаблицаДвиженияОперации.Валюта КАК Валюта,
	|	ВТ_ТаблицаДвиженияОперации.Контрагент КАК Контрагент,
	|	ВТ_ТаблицаДвиженияОперации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ТаблицаДвиженияОперации.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ТаблицаДвиженияОперации.ДокументРезервирования КАК ДокументРезервирования,
	|	0 КАК Лимит,
	|	0 КАК Зарезервировано,
	|	ВТ_ТаблицаДвиженияОперации.Заявлено КАК Заявлено,
	|	0 КАК Исполнено
	|ПОМЕСТИТЬ ВТ_ТаблицаПлановССуммамиЛимитирования
	|ИЗ
	|	ВТ_ТаблицаДвиженияОперации КАК ВТ_ТаблицаДвиженияОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

Процедура ПроверитьВозможностьЗаписиДокумента(Объект)
	
	Если Объект.ТолькоГрафикиРасчетовУХ Тогда
		ВызватьИсключение НСтр("ru = 'Документ создан при обновлении с предыдущей версии 1С:ERP.Управление холдингом. 
								|Для возможности перезаписии документа необходимо разрешить его изменение.'");
	КонецЕсли;
	
КонецПроцедуры

#Область ПараметрыОперацийГрафика
Процедура ЗаполнитьПараметрыОперацийГрафикаИзТаблицы(Форма, ТаблицаНастроек)
	
	Объект = Форма.Объект;
	
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	Форма.Модифицированность = Истина;

КонецПроцедуры

Процедура ЗаполнитьПараметрыОперацийГрафикаПоУмолчанию(Объект)
	ГруппаОперацийГрафика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ВидДоговораУХ.ГруппаОперацийГрафика");
	Объект.ПараметрыОпераций.Загрузить(
		РаботаСДоговорамиКонтрагентовУХ.ПараметрыОперацийГрафикаПоУмолчанию(ГруппаОперацийГрафика));
КонецПроцедуры
	
Процедура ЗаполнитьПараметрыОперацииСтроки(Строка, ОперацияГрафика, ПараметрыОпераций)
	
	ПараметрыОперации = ПараметрыОпераций.Найти(ОперацияГрафика, "ОперацияГрафика");
	Если ПараметрыОперации <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Строка, ПараметрыОперации, "СтатьяБюджета, 
			|Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти	

#КонецОбласти
