
Функция ПолучитьДополнительныеЯзыки() Экспорт
	Возврат Константы.ДополнительныеЯзыкиВыводаОтчета.Получить().Получить();
КонецФункции

Функция РассчитыватьРасхожденияПорталаВГО() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СверкаВГО") Тогда
		Возврат Ложь;//БМ, НМ
	КонецЕсли;
	
	//ИмяФО = "ИспользоватьПорталВГО";
	//Если Не ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
	//	Возврат Ложь; // портал не используется
	//КонецЕсли;
	
	ИмяКонстанты = "РассчитыватьРасхожденияВГО";
	Возврат Константы[ИмяКонстанты].Получить();
	
КонецФункции

// Возвращает валюту управленческого учета
// Если переданная в качестве параметра валюта уже заполнена - возвращает ее.
// Если валюта не передана в качестве параметра или передан пустой,
// валюту упр. учета. Если валюта упр. учета не заполнена - возвращает пустую ссылку на валюту
//
// Параметры:
// Валюта - СправочникСсылка.Валюты - Валюта, которую нужно заполнить
//
// Возвращаемое значение:
// СправочникСсылка.Валюты
//
Функция ПолучитьВалютуУправленческогоУчета(Знач Валюта = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Возврат Константы.ВалютаУправленческогоУчета.Получить();
	Иначе
		Возврат Валюта;
	КонецЕсли;
	
КонецФункции 

Функция ПолучитьОсновнойЯзыкПользователя(Пользователь = Неопределено) Экспорт

	Возврат ОбщегоНазначенияУХ.ПолучитьЗначениеПоУмолчанию("ОсновнойЯзык",Пользователь);
	
КонецФункции

// Возвращает статус согласования, присвоенный объекту ОбъектСогласования.
Функция ПолучитьСостояниеСогласованияПоСсылке_Утвержден(ОбъектСогласования) Экспорт
	РезультатФункции = РасширениеПроцессыИСогласованиеУХ.ПолучитьСостояниеСогласования_Утвержден(ТипЗнч(ОбъектСогласования));
	Возврат РезультатФункции;
КонецФункции

// Функция возвращает имя реквизита статьи бюджета, которое определяет по виду бюджета, переданному в параметре функции.
//
// Параметры:
//  ВидБюджета - ПеречислениеСсылка.ПредназначенияЭлементовСтруктурыОтчета - Вид бюджета, для которого необходимо получить название реквизита Статья.
// 
// Возвращаемое значение: Строка
//
Функция ПолучитьИмяРеквизитаСтатьяБюджета(ВидБюджета) Экспорт

	Если ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств Тогда
		Возврат "СтатьяДвиженияДенежныхСредств";
	ИначеЕсли ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов Тогда
		Возврат "СтатьяДоходовИРасходов";
	ИначеЕсли ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов Тогда
		Возврат "СтатьяДвиженияРесурсов";
	КонецЕсли;
	
	Возврат "СтатьяБюджета";
	
КонецФункции // ПолучитьИмяРеквизитаСтатьяБюджета()

// Возвращает значение константы с именем ИмяКонстантыВход.
Функция ПолучитьЗначениеКонстанты(ИмяКонстантыВход) Экспорт
	РезультатФункции = Константы[ИмяКонстантыВход].Получить();
	Возврат РезультатФункции;
КонецФункции		// ПолучитьЗначениеКонстанты()

// Возвращает ссылку на элем ент справочника ДокументыБД, с наименованием НаименованиеДокументаВход.
Функция ПолучитьДокументБдТекущейБазы(НаименованиеДокументаВход) Экспорт
	РезультатФункции = Справочники.ДокументыБД.ПустаяСсылка();
	ТекИБ = Справочники.ТипыБазДанных.ТекущаяИБ;
	РезультатФункции = Справочники.ДокументыБД.НайтиПоНаименованию(НаименованиеДокументаВход, , , ТекИБ);
	Возврат РезультатФункции;
КонецФункции		// ПолучитьДокументБдТекущейБазы()

// Возвращает ссылку на элем ент справочника СправочникиБД, с наименованием НаименованиеДокументаВход.
Функция ПолучитьСправочникБдТекущейБазы(НаименованиеДокументаВход) Экспорт
	РезультатФункции = Справочники.СправочникиБД.ПустаяСсылка();
	ТекИБ = Справочники.ТипыБазДанных.ТекущаяИБ;
	РезультатФункции = Справочники.СправочникиБД.НайтиПоНаименованию(НаименованиеДокументаВход, , , ТекИБ);
	Возврат РезультатФункции;
КонецФункции		// ПолучитьСправочникБдТекущейБазы()

Функция ЧислоДопАналитик() Экспорт

	Возврат ПараметрыСеанса.ЧислоДопАналитик;

КонецФункции