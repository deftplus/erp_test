
#Область ПрограммныйИнтерфейс
	
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОМ_УчетНДСПереопределяемый

Функция ПолучитьСтавкуНДС(СтавкаНДС, ПрименяютсяСтавки4и2 = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(СтавкаНДС) И ТипЗнч(СтавкаНДС) = Тип("СправочникСсылка.СтавкиНДС") Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС, "Ставка");
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти 

#Область ОМ_ДвиженияБюджетированиеУХВызовСервера

Функция ФункциональныеНаправленияЦФО(Знач ЦФО) Экспорт
	Возврат ДвиженияБюджетированиеУХВызовСервера.ФункциональныеНаправленияЦФО(ЦФО);
КонецФункции

#КонецОбласти

// Возвращает имя формы документа Заявка* и заполняет параметр ВидОперацииУХ в ПараметрыЗаявки.
// Используется в форме документа ОперПлан.
Функция ПолучитьИмяФормыДокументаЗаявкиИПодготовитьПараметры(ЭтоБДДС, ЭтоБДР, Направление, ПараметрыЗаявки) Экспорт
	
	Если ЭтоБДДС И Направление = ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Приход") Тогда
		ПустойДокументЗаявка = КэшируемыеПроцедурыОПК.ПустоеПланируемоеПоступление();
	ИначеЕсли ЭтоБДДС Тогда
		ПустойДокументЗаявка = КэшируемыеПроцедурыОПК.ПустаяЗаявкаНаОплату();
	ИначеЕсли ЭтоБДР И Направление = ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Приход") Тогда
		ПустойДокументЗаявка = КэшируемыеПроцедурыОПК.ПустойПланируемыйДоход();
	ИначеЕсли ЭтоБДР Тогда
		ПустойДокументЗаявка = КэшируемыеПроцедурыОПК.ПустаяЗаявкаНаРасход();
	Иначе
		Возврат неопределено;
	КонецЕсли;
	
	ДополнитьПараметрыЗаявкиВидомОперацииУХ(ПараметрыЗаявки);
	
	Возврат СтрШаблон("Документ.%1.ФормаОбъекта", ПустойДокументЗаявка.Метаданные().Имя);
	
КонецФункции

Процедура ДополнитьПараметрыЗаявкиВидомОперацииУХ(ПараметрыЗаявки) Экспорт
	
	Если НЕ ПараметрыЗаявки.Свойство("ВидОперацииУХ") Тогда
		
		Если ПараметрыЗаявки.Свойство("ДоговорКонтрагента") И ЗначениеЗаполнено(ПараметрыЗаявки.ДоговорКонтрагента) Тогда
			ВидОперацииУХ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаявки.ДоговорКонтрагента, "ВидДоговораУХ.ВидОперацииУХСписание");
		Иначе
			ИмяПредопределенногоВидаОперации = "Справочник.ВидыОперацийУХ.РасчетыСКонтрагентами";
			ВидОперацииУХ = ПредопределенноеЗначение(ИмяПредопределенногоВидаОперации);
		КонецЕсли;
		
		ПараметрыЗаявки.Вставить("ВидОперацииУХ", ВидОперацииУХ);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЦФОПоВалютеЛимитирования(ВалютаЛимитирования, СтрокаПоиска = "", СпособПоискаСтроки = неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаЛимитирования", ВалютаЛимитирования);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыЛимитированияЦФО.ЦФО КАК ЦФО,
	|	ПараметрыЛимитированияЦФО.ВалютаЛимитирования КАК ВалютаЛимитирования
	|ИЗ
	|	РегистрСведений.ПараметрыЛимитированияЦФО КАК ПараметрыЛимитированияЦФО
	|ГДЕ
	|	ПараметрыЛимитированияЦФО.ВалютаЛимитирования = &ВалютаЛимитирования";
	Если СтрокаПоиска <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И ПараметрыЛимитированияЦФО.ЦФО.Наименование ПОДОБНО &СтрокаПоиска";
		Шаблон = СтрокаПоиска+"%";
		Если СпособПоискаСтроки = СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть Тогда
			Шаблон = "%"+Шаблон;
		КонецЕсли;
		Запрос.УстановитьПараметр("СтрокаПоиска", Шаблон);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ПараметрыЛимитированияЦФО.ЦФО.Наименование";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЦФО");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
#КонецОбласти
 

