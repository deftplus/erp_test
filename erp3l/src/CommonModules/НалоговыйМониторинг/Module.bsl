
Функция ПолучитьСтруктуруНастроекПоУмолчанию(Период, Пользователь) Экспорт
	
	Результат = Новый Структура("Организация, ГлаваНК, НачалоПериода, ОкончаниеПериода");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних.Организация КАК Организация,
		|	РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних.ГлаваНК КАК ГлаваНК,
		|	РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних.НалоговыйПериод.ДатаНачала КАК НалоговыйПериодДатаНачала,
		|	РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних.НалоговыйПериод.ДатаОкончания КАК НалоговыйПериодДатаОкончания,
		|	РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних.Пользователь КАК Пользователь
		|ПОМЕСТИТЬ вТаб
		|ИЗ
		|	РегистрСведений.РеквизитыПоУмолчаниюНалоговогоМониторинга.СрезПоследних(
		|			&Период,
		|			Пользователь = &Пользователь
		|				ИЛИ Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК РеквизитыПоУмолчаниюНалоговогоМониторингаСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вТаб.Организация КАК Организация,
		|	вТаб.ГлаваНК КАК ГлаваНК,
		|	вТаб.НалоговыйПериодДатаНачала КАК НачалоПериода,
		|	вТаб.НалоговыйПериодДатаОкончания КАК ОкончаниеПериода
		|ИЗ
		|	вТаб КАК вТаб
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(вТаб.Пользователь) КАК Пользователь
		|		ИЗ
		|			вТаб КАК вТаб) КАК ВложенныйЗапрос
		|		ПО вТаб.Пользователь = ВложенныйЗапрос.Пользователь";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ПланОбмена

// Дополнительный обработчик одноименного события, возникающего при обмене данными в распределенной информационной базе.
// Выполняется после выполнения базовых алгоритмов библиотеки.
// Не выполняется, если отправка элемента данных была проигнорирована ранее.
//
// Параметры:
//  Источник                  - ПланОбменаОбъект - узел, для которого выполняется обмен.
//  ЭлементДанных             - Произвольный - см. описание одноименного обработчика в синтаксис-помощнике.
//  ОтправкаЭлемента          - ОтправкаЭлементаДанных - см. описание одноименного обработчика в синтаксис-помощнике.
//  СозданиеНачальногоОбраза  - Булево - см. описание одноименного обработчика в синтаксис-помощнике.
//
Процедура ПриОтправкеДанныхПодчиненному(Источник, ЭлементДанных, ОтправкаЭлемента, СозданиеНачальногоОбраза) Экспорт
	
	Если ОтправкаЭлемента <> ОтправкаЭлементаДанных.Авто Тогда
		Возврат;
	КонецЕсли;
		
	УзлыПланаОбмена = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Источник);	
	
	Если ПланыОбмена.НалоговыйМониторинг.ПолучитьУзлыПоПравилу(ЭлементДанных, УзлыПланаОбмена, Истина).Количество() = 0 Тогда
		ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать;	
	КонецЕсли;
	
КонецПроцедуры

Процедура НалоговыйМониторингРегистрацияПередЗаписью(Источник, Отказ) Экспорт
	ПланыОбмена.НалоговыйМониторинг.МеханизмРегистрацииОбъектовПередЗаписью(Источник, Отказ);
КонецПроцедуры

Процедура НалоговыйМониторингРегистрацияДокументаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	ПланыОбмена.НалоговыйМониторинг.МеханизмРегистрацииОбъектовПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура НалоговыйМониторингРегистрацияКонстантыПередЗаписью(Источник, Отказ) Экспорт
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура НалоговыйМониторингРегистрацияНабораПередЗаписью(Источник, Отказ, Замещение) Экспорт
	ПланыОбмена.НалоговыйМониторинг.МеханизмРегистрацииОбъектовПередЗаписьюРегистра(Источник, Отказ, Замещение);
КонецПроцедуры

Процедура НалоговыйМониторингРегистрацияУдаленияПередУдалением(Источник, Отказ) Экспорт
	ПланыОбмена.НалоговыйМониторинг.МеханизмРегистрацииОбъектовПередУдалением(Источник, Отказ);
КонецПроцедуры

Процедура ЗарегистрироватьИзмененияДанныхПослеСозданияНачальногоОбраза(Узел) Экспорт
	
	БезусловноВыгружаемыеМетаданные = НалоговыйМониторингВызовСервераПовтИсп.ПолучитьМассивБезусловноПередаваемыхОбъектов();
	
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "Документы", БезусловноВыгружаемыеМетаданные);
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "Справочники", БезусловноВыгружаемыеМетаданные);
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "Константы", БезусловноВыгружаемыеМетаданные);
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "ПланыВидовХарактеристик", БезусловноВыгружаемыеМетаданные);
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "ПланыСчетов", БезусловноВыгружаемыеМетаданные);
	ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, "РегистрыСведений", БезусловноВыгружаемыеМетаданные);
	
КонецПроцедуры

Процедура ЗарегистрироватьИзмененияДанныхВидаОбъекта(Узел, Вид, БезусловноВыгружаемыеМетаданные)
	Для каждого Элемент Из Метаданные[Вид] Цикл
		Если БезусловноВыгружаемыеМетаданные.Найти(Элемент) = Неопределено И Метаданные.ПланыОбмена.НалоговыйМониторинг.Состав.Содержит(Элемент) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Узел, Элемент);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбновитьПриоритетныеДанныеУзла() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() = Неопределено И ТипЗнч(ПланыОбмена.ГлавныйУзел()) <> Тип("ПланОбменаСсылка.НалоговыйМониторинг") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеОграниченийДанных = Новый Соответствие;
	План = ПланыОбмена.НалоговыйМониторинг.ЭтотУзел();
	
	Для каждого Строка Из План.СписокНеВыгружаемыхРеквизитов Цикл
		МассивПодстрок = СтрРазделить(Строка.НеВыгружаемыйРеквизит, ".");
		Если МассивПодстрок.Количество() > 2 Тогда
			Ключ = МассивПодстрок[0] + "." + МассивПодстрок[1];
			Значение = СоответствиеОграниченийДанных.Получить(Ключ);
			Если Значение = Неопределено Тогда
				Значение = Новый Массив;
			КонецЕсли;
			Значение.Добавить(Строка.НеВыгружаемыйРеквизит);
			СоответствиеОграниченийДанных.Вставить(Ключ, Значение);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого МассивОграниченийДанных Из СоответствиеОграниченийДанных Цикл		
		МассивВида = СтрРазделить(МассивОграниченийДанных.Ключ, ".");
		Если МассивВида[0] = "Справочник" ИЛИ МассивВида[0] = "Документ" Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Таблица.Ссылка КАК Ссылка
				|ИЗ
				|	" + МассивВида[0] + "." + МассивВида[1] + " КАК Таблица";
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ЭлементДанных = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				Для каждого Ограничение Из МассивОграниченийДанных.Значение Цикл
					МассивПодстрок = СтрРазделить(Ограничение, ".");
					
					Если МассивПодстрок[2] = "Реквизиты" Тогда
						ЭлементДанных[МассивПодстрок[3]] = Неопределено;
					ИначеЕсли МассивПодстрок[2] = "ТабличныеЧасти" Тогда
						Если МассивПодстрок.Количество() = 5 Тогда
							Для каждого Стр Из ЭлементДанных[МассивПодстрок[3]] Цикл
								Стр[МассивПодстрок[4]] = Неопределено;
							КонецЦикла;
						Иначе
							ЭлементДанных[МассивПодстрок[3]].Очистить();
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				ЭлементДанных.ОбменДанными.Загрузка = Истина;
				ЭлементДанных.Записать();
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область НастройкаРабочегоСтола

Процедура ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	Если Не РольДоступна("НалоговыйМониторинг") Тогда
		Возврат; 
	КонецЕсли;
	
	Параметры.Вставить("РольНалоговыйМониторинг", Истина);
	
	УдалитьПанельРазделов(Параметры);	
	ОбновитьРабочуюОбласть(Параметры);
	УстановитьЗаданиеИнспектора();
	
КонецПроцедуры

Процедура УстановитьЗаданиеИнспектора(ВключитьЗадание = Истина) Экспорт
	
	//задание 
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегЗадание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ЗавершениеСеансовИнспектора);
	Если РегЗадание.Использование = ВключитьЗадание Тогда
		Возврат;
	КонецЕсли;
	
	РегЗадание.Использование = ВключитьЗадание;
	РегЗадание.Записать();

КонецПроцедуры

Процедура ОбновитьРабочуюОбласть(Параметры)
	
	ТекущиеНастройки = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиНачальнойСтраницы");
	Если ТекущиеНастройки = Неопределено Тогда
		ТекущиеНастройки = Новый НастройкиНачальнойСтраницы;
	КонецЕсли;
	
	ТекущийСостав = ТекущиеНастройки.ПолучитьСоставФорм();
		
	ТребуемыйСостав = Новый СоставФормНачальнойСтраницы();
	ТребуемыйСостав.ЛеваяКолонка.Добавить("Обработка.НалоговыйМониторинг.Форма.РегламентированнаяОтчетность");
	ТребуемыйСостав.ЛеваяКолонка.Добавить("Обработка.НалоговыйМониторинг.Форма.ЗапросыУточняющихДокументов");	
	ТребуемыйСостав.ПраваяКолонка.Добавить("Обработка.НалоговыйМониторинг.Форма.СсылкиДляНалоговогоИнспектора");
	
	КолонкиРО = Новый Структура("ЛеваяКолонка,ПраваяКолонка");
	
	Для каждого ЭлементКолонка Из КолонкиРО Цикл
		
		Если СтрСоединить(ТекущийСостав[ЭлементКолонка.Ключ], ",") = СтрСоединить(ТребуемыйСостав[ЭлементКолонка.Ключ], ",") Тогда
			Продолжить; //составы равны по количеству, порядку, элементам
		КонецЕсли;
		
		ТекущиеНастройки.УстановитьСоставФорм(ТребуемыйСостав);
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницы", , ТекущиеНастройки);
		Параметры.Вставить("НалоговыйМониторингОбновитьИнтерфейс", Истина);
		
		Прервать;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьПанельРазделов(Параметры)
	
	ТекущиеНастройки = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиИнтерфейсаКлиентскогоПриложения");
	Если ТекущиеНастройки = Неопределено Тогда
		ТекущиеНастройки = Новый НастройкиИнтерфейсаКлиентскогоПриложения;
	КонецЕсли;
	ТекущийСостав = ТекущиеНастройки.ПолучитьСостав();
	СоставИзменен = Ложь;
	
	Для каждого ЭлементСостава Из Новый Структура("Лево,Право,Верх,Низ") Цикл		
		УдалитьПанельРазделовРекурсивно(ТекущийСостав[ЭлементСостава.Ключ], СоставИзменен);		
	КонецЦикла;
	
	Если СоставИзменен Тогда
		ТекущиеНастройки.УстановитьСостав(ТекущийСостав);
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиИнтерфейсаКлиентскогоПриложения", , ТекущиеНастройки);
		Параметры.Вставить("НалоговыйМониторингОбновитьИнтерфейс", Истина);
	КонецЕсли;

КонецПроцедуры

Процедура УдалитьПанельРазделовРекурсивно(КоллекцияИсточник, СоставИзменен)
	
	Для ОбратныйИндекс = 1 По КоллекцияИсточник.Количество() Цикл
		
		ЭлементКоллекции = КоллекцияИсточник.Получить(КоллекцияИсточник.Количество() - ОбратныйИндекс);
		
		Если ТипЗнч(ЭлементКоллекции) = Тип("ГруппаНастройкиСоставаИнтерфейсаКлиентскогоПриложения") Тогда
			УдалитьПанельРазделовРекурсивно(ЭлементКоллекции, СоставИзменен);			
		ИначеЕсли (ТипЗнч(ЭлементКоллекции) = Тип("ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения")) И (ЭлементКоллекции.Имя = "ПанельРазделов") Тогда
			КоллекцияИсточник.Удалить(КоллекцияИсточник.Количество() - ОбратныйИндекс);
			СоставИзменен = Истина;			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Кнопка_ЗапросНалоговогоМониторинга

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииВидовПодключаемыхКоманд.
Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт
	
	Вид = ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя = "ЗапросНалоговогоМониторинга";
	Вид.ИмяПодменю = "ПодменюЗапросНалоговогоМониторинга";
	Вид.Заголовок = НСтр("ru = 'НалоговыйМониторинг'");
	Вид.Картинка = БиблиотекаКартинок.НалоговыйОрган;
	Вид.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Вид.ВидГруппыФормы = ВидГруппыФормы.Подменю;
	
КонецПроцедуры

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт

	Если Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
	    Возврат;
	ИначеЕсли Не Пользователи.РолиДоступны("НалоговыйМониторинг") Тогда
		Возврат;
	ИначеЕсли Не НастройкиФормы.Свойство("ИмяФормы") Тогда 
		Возврат;
	ИначеЕсли Не СтрНачинаетсяС(НастройкиФормы.ИмяФормы, "Документ.") 
		И Не СтрНачинаетсяС(НастройкиФормы.ИмяФормы, "Справочник.") Тогда
		Возврат;
	КонецЕсли;
	
	ТипыОбъектов = Новый Массив;
	Для каждого СтрокаИсточник Из Источники.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаИсточник.ПолноеИмя) Тогда
			Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтрокаИсточник.ПолноеИмя);
			ТипыОбъектов.Добавить(ТипЗнч(Менеджер.ПустаяСсылка()));				
		КонецЕсли;		
	КонецЦикла;
		
	ТипПараметра = Новый ОписаниеТипов(ТипыОбъектов);
	
	Команда = Команды.Добавить();
	Команда.Вид = "ЗапросНалоговогоМониторинга";
	Команда.Идентификатор = "ЗапросНалоговогоМониторинга";
	Команда.Представление = НСтр("ru = 'Запрос налогового мониторинга'");
	Команда.Важность = "Обычное";
	Команда.Порядок = 10;
	Команда.ОтображениеКнопки = ОтображениеКнопки.КартинкаИТекст;
	Команда.Картинка = БиблиотекаКартинок.НалоговыйОрган;
	Команда.ТипПараметра = ТипПараметра;
	Команда.Назначение = "ДляОбъекта";
	//Команда.ФункциональныеОпции = "";
	Команда.ИзменяетВыбранныеОбъекты = Ложь;
	Команда.МножественныйВыбор = Ложь;
	Команда.РежимЗаписи = "Записывать";
	Команда.Обработчик = "НалоговыйМониторингКлиент.ЗапросНалоговогоМониторинга_Подключаемый";	

КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьСпискиВыбораВЭлементахУправления(ЭлементФормы, ИмяОтчета, Макет, Область) Экспорт
	Попытка
		Макет = Отчеты[ИмяОтчета].ПолучитьМакет(Макет).ПолучитьОбласть(Область);
		Для Инд = 1 По Макет.ВысотаТаблицы Цикл
			Код = Макет.Область(Инд, 1, Инд, 1).Текст;
			Наименование = Макет.Область(Инд, 2, Инд, 2).Текст;
			ЭлементФормы.СписокВыбора.Добавить(Код, ?(ПустаяСтрока(Код), "", Код + " - " + Наименование));
		КонецЦикла;
		ЭлементФормы.РежимВыбораИзСписка = Истина;
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка при встраивании формы " + ИмяОтчета, УровеньЖурналаРегистрации.Ошибка);
		ЭлементФормы.РежимВыбораИзСписка = Ложь;
	КонецПопытки;
КонецПроцедуры
