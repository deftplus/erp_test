
#Область ПрограммныйИнтерфейс

Функция СформироватьКорректировку(Реквизиты, Отказ = Ложь, ТаблицаПроводок = Неопределено) Экспорт

	КомментарииСобытий = Неопределено;
	ИспользоватьДанныеНСБУ = Ложь;
	ИспользоватьТаблицуПроводок = Ложь;
	
	Если ТаблицаПроводок <> Неопределено Тогда 		
		ИспользоватьТаблицуПроводок = Истина;		
	ИначеЕсли НЕ Реквизиты.Свойство("ИсточникКорректировки") Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не указан регистр-источник для корректировки'"), Отказ);
		Возврат Документы.ТрансформационнаяКорректировка.ПустаяСсылка();
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеВНА" Тогда
		
		Запрос = ПолучитьЗапросВНА(Реквизиты);		
		ИспользоватьДанныеНСБУ = Истина;
		
	ИначеЕсли Реквизиты.ИсточникКорректировки = "ПовторРеклассовВНА" Тогда
		
		Запрос = ПолучитьЗапросПовторРеклассовВНА(Реквизиты);		
		ИспользоватьДанныеНСБУ = Истина;
	
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеФИ" Тогда	
		Запрос = ПолучитьЗапросФИ(Реквизиты);								
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеДЗ" Тогда
		Запрос = ПолучитьЗапросРезервыДЗ(Реквизиты);		
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеЗапасы" Тогда
		Запрос = ПолучитьЗапросРезервыМПЗ(Реквизиты);
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеРегламента_ОперацииПериода" Тогда
		Запрос = ПолучитьЗапросКорректировкиРегламента_ОперацииПериода(Реквизиты);		
	ИначеЕсли Реквизиты.ИсточникКорректировки = "РасчетныеДанныеРегламента_ПовторПроводок" Тогда
		Запрос = ПолучитьЗапросКорректировкиРегламента_ПовторПроводок(Реквизиты);
	Иначе
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не удалось определить регистр-источник для корректировки'"), Отказ);
		Возврат Документы.ТрансформационнаяКорректировка.ПустаяСсылка();
	КонецЕсли;
	
	ОбработкаКЗП = Обработки.КорректировкиЗначенийПоказателей.Создать();
	
	НачатьТранзакцию();
	
	Попытка
		
		ДокументОбъект = ПолучитьСоздатьДокументКорректировку(Реквизиты, Отказ);
		Если (Отказ = Истина) Или (ДокументОбъект = Неопределено) Тогда
			Если ТранзакцияАктивна() Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			Возврат Документы.ТрансформационнаяКорректировка.ПустаяСсылка();
		КонецЕсли;		
		
		Если ИспользоватьТаблицуПроводок Тогда			
			
			Если ТаблицаПроводок.Колонки.Найти("РесурсРегистра") = Неопределено Тогда
				ТаблицаПроводок.Колонки.Добавить("РесурсРегистра");
				ТаблицаПроводок.ЗаполнитьЗначения("СуммаВВалютеУчета", "РесурсРегистра");
			КонецЕсли;
			
			Если (ТаблицаПроводок.Колонки.Найти("СуммаВВалютеДт") <> Неопределено) И (ТаблицаПроводок.Колонки.Найти("ЗначениеВалютаДт") = Неопределено) Тогда
				ТаблицаПроводок.Колонки.СуммаВВалютеДт.Имя = "ЗначениеВалютаДт";
			КонецЕсли;
			
			Если (ТаблицаПроводок.Колонки.Найти("СуммаВВалютеКт") <> Неопределено) И (ТаблицаПроводок.Колонки.Найти("ЗначениеВалютаКт") = Неопределено) Тогда
				ТаблицаПроводок.Колонки.СуммаВВалютеКт.Имя = "ЗначениеВалютаКт";
			КонецЕсли;
			
			Если (ТаблицаПроводок.Колонки.Найти("Значение") = Неопределено) 
				И (ТаблицаПроводок.Колонки.Найти("СуммаВВалютеУчета") <> Неопределено) Тогда
			
				ТаблицаПроводок.Колонки.СуммаВВалютеУчета.Имя = "Значение";
			
			КонецЕсли;
			
			ДокументОбъект.Проводки.Загрузить(ТаблицаПроводок);

		Иначе
			ЗаполнитьПроводкиИзРезультатаЗапроса(Реквизиты, ДокументОбъект, Запрос, КомментарииСобытий, ИспользоватьДанныеНСБУ);			
		КонецЕсли;
				
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		
		Обработки.КорректировкиЗначенийПоказателей.ЗаполнитьПоРеквизитам(ОбработкаКЗП, Реквизиты);		
		ЗаполнитьОбработкуПоДокументу(ОбработкаКЗП, ДокументОбъект);		
		
		ОбработкаКЗП.ЗаписатьРабочийОбъект(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ТекстОшибки = НСтр("ru = 'Не удалось записать документ '") + ?(ОбработкаКЗП = Неопределено, "<...>", ОбработкаКЗП.ДокументОбъект) + ": " + ОписаниеОшибки();
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ);
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Возврат Документы.ТрансформационнаяКорректировка.ПустаяСсылка();
		
	КонецПопытки;	

	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

Функция ПолучитьСоздатьДокументКорректировку(Реквизиты, Отказ) Экспорт

	Перем ОбъектКорректировка;
	
	Если Реквизиты.Свойство("ВидОперации") Тогда
		Отбор = Новый Структура("ВидОперации", Реквизиты.ВидОперации);
		КорректировкиСсылки = Документы.ТрансформационнаяКорректировка.ПолучитьТрансКорр(Реквизиты.Ссылка, Отбор);
		ВидОперации = Реквизиты.ВидОперации;
	Иначе
		КорректировкиСсылки = Документы.ТрансформационнаяКорректировка.ПолучитьТрансКорр(Реквизиты.Ссылка);
		ВидОперации = Справочники.ВидыОпераций.УчетныеОперации;	
	КонецЕсли;		
	
	Если КорректировкиСсылки.Количество() = 0 Тогда
		
		ОбъектКорректировка = Документы.ТрансформационнаяКорректировка.СоздатьДокумент();
		ОбъектКорректировка.ИсходныйДокумент = Реквизиты.Ссылка;
		
	Иначе	
		
		Для каждого КорректировкаСсылка Из КорректировкиСсылки Цикл
			
			Если ОбъектКорректировка = Неопределено Тогда
				ОбъектКорректировка = КорректировкаСсылка.ПолучитьОбъект();
				ОбъектКорректировка.ПометкаУдаления = Ложь;
				ОбъектКорректировка.Проводки.Очистить();				
			ИначеЕсли НЕ КорректировкаСсылка.ПометкаУдаления Тогда
				КорректировкаСсылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	ЗаполнитьДокументТК(ОбъектКорректировка, Реквизиты, ВидОперации);
					
	Если КорректировкиСсылки.Количество() = 0 Тогда
		
		Попытка
			ОбъектКорректировка.Записать(РежимЗаписиДокумента.Запись);			
		Исключение
			
			Если ТранзакцияАктивна() Тогда
				ОтменитьТранзакцию();
			КонецЕсли;

			ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не удалось сформировать трансформационную корректировку: '") + ОписаниеОшибки(), Отказ);			
			Возврат Неопределено; 
		КонецПопытки;
		
	КонецЕсли;

	Возврат ОбъектКорректировка;
	
КонецФункции

// Удаляет движения в трансформационных корректировках созданных документом ДокументССылка
// Параметры:
//	ДокументСсылка - ссылка на документ, создавший трансформационную корректировку.
//
Процедура ОчиститьДвиженияТрансформационнойКорректировкиПоСсылке(ДокументСсылка, ПометитьНаУдаление = Ложь, Отказ = Ложь) Экспорт
	
	мТрансКорр = Документы.ТрансформационнаяКорректировка.ПолучитьТрансКорр(ДокументСсылка);
	
	Для Каждого ТрансформационнаяКорректировка Из мТрансКорр Цикл
		
		ДокументТК = ТрансформационнаяКорректировка.ПолучитьОбъект();
		Если НЕ ПометитьНаУдаление И ДокументТК.ПометкаУдаления Тогда
			ДокументТК.ПометкаУдаления = Ложь;
		КонецЕсли;

		ДокументТК.Проводки.Очистить();
		ДокументТК.СводныеПроводки.Очистить();
		ДокументТК.ДополнительныеВалюты.Очистить();
		ДокументТК.ДополнительныеКорректировки.Очистить();
		
		// Заполняем трансформационную корректировку
		КЗП = Обработки.КорректировкиЗначенийПоказателей.Создать();
		ЗаполнитьЗначенияСвойств(КЗП, ДокументТК);

		КЗП.ДокументОбъект = ДокументТК;
		
		КЗП.ИнициализироватьКонтекст();
		КЗП.ИнициализироватьТаблицыЗаписей();
		
		//ТрансОбр.ПодготовитьДанныеДляРасчетаДвижений(РежимЗаписиДокумента.Проведение, флОтказ);
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		КЗП.ЗаписатьРабочийОбъект(РежимЗаписиДокумента.ОтменаПроведения, РежимПроведенияДокумента.Неоперативный);
		
		Если ПометитьНаУдаление Тогда
			ДокументТК.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#Область ЗапросыРазделовУчета

Функция ПолучитьЗапросВНА(Реквизиты)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Корректировки.Организация КАК Организация,
	|	Корректировки.Сценарий КАК Сценарий,
	|	ПРЕДСТАВЛЕНИЕ(Корректировки.ВидОперации) КАК Комментарий,
	|	Корректировки.СчетДт КАК СчетДт,
	|	Корректировки.СубконтоДт1 КАК СубконтоДт1,
	|	Корректировки.СубконтоДт2 КАК СубконтоДт2,
	|	Корректировки.СубконтоДт3 КАК СубконтоДт3,
	|	Корректировки.СчетКт КАК СчетКт,
	|	Корректировки.СубконтоКт1 КАК СубконтоКт1,
	|	Корректировки.СубконтоКт2 КАК СубконтоКт2,
	|	Корректировки.СубконтоКт3 КАК СубконтоКт3,
	|	Корректировки.СуммаОперацииНСБУОборот КАК СуммаОперацииНСБУОборот,
	|	Корректировки.СуммаОперацииМСФООборот КАК СуммаОперацииМСФООборот
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеВНА.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий) КАК Корректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация КАК Организация,
	|	втРасчетныеДанные.Сценарий КАК Сценарий,
	|	втРасчетныеДанные.Комментарий КАК Комментарий,
	|	втРасчетныеДанные.СчетДт КАК СчетДт,
	|	втРасчетныеДанные.СубконтоДт1 КАК СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2 КАК СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3 КАК СубконтоДт3,
	|	втРасчетныеДанные.СчетКт КАК СчетКт,
	|	втРасчетныеДанные.СубконтоКт1 КАК СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2 КАК СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3 КАК СубконтоКт3,
	|	втРасчетныеДанные.СуммаОперацииНСБУОборот КАК СуммаОперацииНСБУОборот,
	|	втРасчетныеДанные.СуммаОперацииМСФООборот КАК СуммаОперацииМСФООборот,
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт");
	
	Запрос.УстановитьПараметр("ДатаНачала", 	Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецДняВключая(Реквизиты.ДатаОкончания));	
	Запрос.УстановитьПараметр("Сценарий", 		Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация", 	Реквизиты.Организация);
	
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьЗапросПовторРеклассовВНА(Реквизиты)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтоимостьВНАМСФООбороты.ВНА КАК ВНА,
	|	СтоимостьВНАМСФООбороты.ВидУчета КАК ВидУчета,
	|	СтоимостьВНАМСФООбороты.ГруппаВНА КАК ГруппаВНА,
	|	СтоимостьВНАМСФООбороты.СуммаВВалютеУчетаОборот КАК СуммаВВалютеУчетаОборот
	|ПОМЕСТИТЬ втСостоянияВНА
	|ИЗ
	|	РегистрНакопления.СтоимостьВНАМСФО.Обороты(
	|			,
	|			&ДатаНачала,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)) КАК СтоимостьВНАМСФООбороты
	|ГДЕ
	|	СтоимостьВНАМСФООбороты.СуммаВВалютеУчетаОборот <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА,
	|	ВидУчета,
	|	ГруппаВНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Ссылка КАК СчетБД
	|ПОМЕСТИТЬ втСчетаВНА
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|ГДЕ
	|	т.РазделПланаСчетов В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнеоборотныеАктивы), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Запасы), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Взаиморасчеты))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеДанныеВНАОбороты.ВНА КАК ВНА,
	|	РасчетныеДанныеВНАОбороты.Организация КАК Организация,
	|	РасчетныеДанныеВНАОбороты.Сценарий КАК Сценарий,
	|	""Повтор рекласса ВНА"" КАК Комментарий,
	|	РасчетныеДанныеВНАОбороты.ГруппаВНА КАК ГруппаВНА,
	|	РасчетныеДанныеВНАОбороты.СчетДт КАК СчетДт,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт1 КАК СубконтоДт1,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт2 КАК СубконтоДт2,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт3 КАК СубконтоДт3,
	|	РасчетныеДанныеВНАОбороты.СчетКт КАК СчетКт,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт1 КАК СубконтоКт1,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт2 КАК СубконтоКт2,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт3 КАК СубконтоКт3,
	|	РасчетныеДанныеВНАОбороты.СуммаОперацииНСБУОборот КАК СуммаОперацииНСБУОборот,
	|	РасчетныеДанныеВНАОбороты.СуммаОперацииМСФООборот КАК СуммаОперацииМСФООборот
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеВНА.Обороты(
	|			,
	|			&ДатаОкончанияПредПериода,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И (ВНА, ГруппаВНА) В
	|					(ВЫБРАТЬ
	|						т.ВНА,
	|						т.ГруппаВНА
	|					ИЗ
	|						втСостоянияВНА КАК т)
	|				И (СчетДт В
	|						(ВЫБРАТЬ
	|							т.СчетБД
	|						ИЗ
	|							втСчетаВНА КАК т)
	|					И СчетКт В
	|						(ВЫБРАТЬ
	|							т.СчетБД
	|						ИЗ
	|							втСчетаВНА КАК т))) КАК РасчетныеДанныеВНАОбороты
	|ГДЕ
	|	НЕ &ИспользуетсяТрансляцияСинтетики
	|	И РасчетныеДанныеВНАОбороты.СуммаОперацииНСБУОборот <> РасчетныеДанныеВНАОбороты.СуммаОперацииМСФООборот
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетныеДанныеВНАОбороты.ВНА,
	|	РасчетныеДанныеВНАОбороты.Организация,
	|	РасчетныеДанныеВНАОбороты.Сценарий,
	|	""Повтор рекласса ВНА"",
	|	РасчетныеДанныеВНАОбороты.ГруппаВНА,
	|	РасчетныеДанныеВНАОбороты.СчетДт,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт1,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт2,
	|	РасчетныеДанныеВНАОбороты.СубконтоДт3,
	|	РасчетныеДанныеВНАОбороты.СчетКт,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт1,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт2,
	|	РасчетныеДанныеВНАОбороты.СубконтоКт3,
	|	РасчетныеДанныеВНАОбороты.СуммаОперацииНСБУОборот,
	|	РасчетныеДанныеВНАОбороты.СуммаОперацииМСФООборот
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеВНА.Обороты(
	|			,
	|			&ДатаОкончанияПредПериода,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И (ВНА В
	|						(ВЫБРАТЬ
	|							т.ВНА
	|						ИЗ
	|							втСостоянияВНА КАК т)
	|					ИЛИ СубконтоДт1 В
	|						(ВЫБРАТЬ
	|							т.ВНА
	|						ИЗ
	|							втСостоянияВНА КАК т)
	|					ИЛИ СубконтоКт1 В
	|						(ВЫБРАТЬ
	|							т.ВНА
	|						ИЗ
	|							втСостоянияВНА КАК т))
	|				И НЕ(СчетДт.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Баланс))
	|						И СчетКт.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ОПУ)))
	|				И НЕ(СчетКт.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Баланс))
	|						И СчетДт.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ОПУ)))) КАК РасчетныеДанныеВНАОбороты
	|ГДЕ
	|	&ИспользуетсяТрансляцияСинтетики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация КАК Организация,
	|	втРасчетныеДанные.Сценарий КАК Сценарий,
	|	втРасчетныеДанные.Комментарий КАК Комментарий,
	|	втРасчетныеДанные.СчетДт КАК СчетДт,
	|	втРасчетныеДанные.СубконтоДт1 КАК СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2 КАК СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3 КАК СубконтоДт3,
	|	втРасчетныеДанные.СчетКт КАК СчетКт,
	|	втРасчетныеДанные.СубконтоКт1 КАК СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2 КАК СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3 КАК СубконтоКт3,
	|	втРасчетныеДанные.СуммаОперацииНСБУОборот КАК СуммаОперацииНСБУОборот,
	|	втРасчетныеДанные.СуммаОперацииМСФООборот КАК СуммаОперацииМСФООборот,
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт");
	
	ДатаОкончанияПредПериода = ОбщегоНазначенияУХ.ДобавитьДень(Реквизиты.ДатаНачалаПериодаСценария, -1);
	
	КонтекстОтчета = Новый Структура("ВидОтчета,Сценарий,Организация,ПериодОтчета", Справочники.ВидыОтчетов.ПолучитьВидОтчетаОСВ(,, Ложь)); 
	ЗаполнитьЗначенияСвойств(КонтекстОтчета, Реквизиты);
	
	Запрос.УстановитьПараметр("ДатаНачала", 						Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 						КонецДняВключая(Реквизиты.ДатаОкончания));	
	Запрос.УстановитьПараметр("Сценарий", 							Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация", 						Реквизиты.Организация);		
	Запрос.УстановитьПараметр("ДатаОкончанияПредПериода", 			КонецДняВключая(ДатаОкончанияПредПериода));
	Запрос.УстановитьПараметр("ИспользуетсяТрансляцияСинтетики",	ИспользуетсяТрансляцияСинтетики(КонтекстОтчета));
	
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьЗапросФИ(Реквизиты)
    
    Запрос = Новый Запрос( 
    "ВЫБРАТЬ
    |	Корректировки.Организация КАК Организация,
    |	Корректировки.Сценарий КАК Сценарий,
    |	Корректировки.Валюта КАК Валюта,
    |	Корректировки.СчетДт КАК СчетДт,
    |	Корректировки.СубконтоДт1 КАК СубконтоДт1,
    |	Корректировки.СубконтоДт2 КАК СубконтоДт2,
    |	Корректировки.СубконтоДт3 КАК СубконтоДт3,
    |	Корректировки.СчетКт КАК СчетКт,
    |	Корректировки.СубконтоКт1 КАК СубконтоКт1,
    |	Корректировки.СубконтоКт2 КАК СубконтоКт2,
    |	Корректировки.СубконтоКт3 КАК СубконтоКт3,
    |	Корректировки.ФИ КАК ФИ,
    |	Корректировки.ФИ.Владелец КАК Контрагент,
    |	Корректировки.СуммаВВалютеОборот КАК СуммаВВалюте,
    |	Корректировки.СуммаВФункциональнойВалютеОборот КАК СуммаВВалютеУчета,
    |	Корректировки.Событие КАК Комментарий,
    |	ПРЕДСТАВЛЕНИЕ(Корректировки.Событие) КАК СобытиеПредставление
    |ПОМЕСТИТЬ втРасчетныеДанные
    |ИЗ
    |	РегистрНакопления.РасчетныеДанныеФИ.Обороты(
    |			&ДатаНачала,
    |			&ДатаОкончания,
    |			,
    |			Организация = &Организация
    |				И Сценарий = &Сценарий) КАК Корректировки
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
    |	т.СчетДт КАК СчетДт,
    |	т.СчетКт КАК СчетКт
    |ПОМЕСТИТЬ втВидыДвижений
    |ИЗ
    |	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
    |ГДЕ
    |	(т.СчетДт, т.СчетКт) В
    |			(ВЫБРАТЬ
    |				т.СчетДт,
    |				т.СчетКт
    |			ИЗ
    |				втРасчетныеДанные КАК т)
    |
    |СГРУППИРОВАТЬ ПО
    |	т.СчетДт,
    |	т.СчетКт
    |
    |ИНДЕКСИРОВАТЬ ПО
    |	СчетДт,
    |	СчетКт
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	втРасчетныеДанные.Организация КАК Организация,
    |	втРасчетныеДанные.Сценарий КАК Сценарий,
    |	втРасчетныеДанные.Валюта КАК Валюта,
    |	втРасчетныеДанные.СчетДт КАК СчетДт,
    |	втРасчетныеДанные.СубконтоДт1 КАК СубконтоДт1,
    |	втРасчетныеДанные.СубконтоДт2 КАК СубконтоДт2,
    |	втРасчетныеДанные.СубконтоДт3 КАК СубконтоДт3,
    |	втРасчетныеДанные.СчетКт КАК СчетКт,
    |	втРасчетныеДанные.СубконтоКт1 КАК СубконтоКт1,
    |	втРасчетныеДанные.СубконтоКт2 КАК СубконтоКт2,
    |	втРасчетныеДанные.СубконтоКт3 КАК СубконтоКт3,
    |	втРасчетныеДанные.ФИ КАК ФИ,
    |	втРасчетныеДанные.Контрагент КАК Контрагент,
    |	втРасчетныеДанные.СуммаВВалюте КАК СуммаВВалюте,
    |	втРасчетныеДанные.СуммаВВалютеУчета КАК СуммаВВалютеУчета,
    |	втРасчетныеДанные.Комментарий КАК Комментарий,
    |	втРасчетныеДанные.СобытиеПредставление КАК СобытиеПредставление,
    |	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
    |ИЗ
    |	втРасчетныеДанные КАК втРасчетныеДанные
    |		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
    |		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
    |			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт");
        
    Запрос.УстановитьПараметр("ДатаНачала", 	Реквизиты.ДатаНачала);
    Запрос.УстановитьПараметр("ДатаОкончания", 	КонецДняВключая(Реквизиты.ДатаОкончания));
    Запрос.УстановитьПараметр("ПериодОтчета", 	Реквизиты.ПериодОтчета);
    Запрос.УстановитьПараметр("Сценарий", 		Реквизиты.Сценарий);
    Запрос.УстановитьПараметр("Организация", 	Реквизиты.Организация);
        
    Возврат Запрос;

КонецФункции

Функция ПолучитьЗапросРезервыДЗ(Реквизиты)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОкончания,
	|			Валюта В (&ФункциональнаяВалюта, &ВалютаПредставления)
	|				И &ФункциональнаяВалюта <> &ВалютаПредставления) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втКурсыНач.Валюта КАК ВалютаНач,
	|	втКурсыНач.Курс КАК КурсНач,
	|	втКурсыНач.Кратность КАК КратностьНач,
	|	втКурсыКон.Валюта КАК ВалютаКон,
	|	втКурсыКон.Курс КАК КурсКон,
	|	втКурсыКон.Кратность КАК КратностьКон
	|ПОМЕСТИТЬ втПересчетКурсов
	|ИЗ
	|	втКурсы КАК втКурсыНач
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК втКурсыКон
	|		ПО (втКурсыНач.Валюта = &ФункциональнаяВалюта)
	|			И (втКурсыКон.Валюта = &ВалютаПредставления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Организация КАК Организация,
	|	Корректировки.Сценарий КАК Сценарий,
	|	Корректировки.СчетДт,
	|	Корректировки.СубконтоДт1 КАК СубконтоДт1,
	|	Корректировки.СубконтоДт2 КАК СубконтоДт2,
	|	Корректировки.СубконтоДт3 КАК СубконтоДт3,
	|	Корректировки.СчетКт,
	|	Корректировки.СубконтоКт1 КАК СубконтоКт1,
	|	Корректировки.СубконтоКт2 КАК СубконтоКт2,
	|	Корректировки.СубконтоКт3 КАК СубконтоКт3,
	|	Корректировки.Валюта,
	|	Корректировки.СуммаВВалютеОборот КАК СуммаВВалюте,
	|	Корректировки.СуммаВФункциональнойВалютеОборот КАК СуммаВВалютеУчета,
	|	ВЫБОР
	|		КОГДА втПересчетКурсов.ВалютаКон ЕСТЬ NULL 
	|			ТОГДА Корректировки.СуммаВФункциональнойВалютеОборот
	|		КОГДА втПересчетКурсов.КурсКон = 0
	|				ИЛИ втПересчетКурсов.КратностьНач = 0
	|			ТОГДА 0
	|		ИНАЧЕ Корректировки.СуммаВФункциональнойВалютеОборот * втПересчетКурсов.КурсНач * втПересчетКурсов.КратностьКон / (втПересчетКурсов.КурсКон * втПересчетКурсов.КратностьНач)
	|	КОНЕЦ КАК СуммаВВалютеОтчетности,
	|	ПРЕДСТАВЛЕНИЕ(Корректировки.Событие) КАК Комментарий
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеДЗ.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий) КАК Корректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПересчетКурсов КАК втПересчетКурсов
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация,
	|	втРасчетныеДанные.Сценарий,
	|	втРасчетныеДанные.СчетДт,
	|	втРасчетныеДанные.СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3,
	|	втРасчетныеДанные.СчетКт,
	|	втРасчетныеДанные.СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3,
	|	втРасчетныеДанные.Валюта,
	|	втРасчетныеДанные.СуммаВВалюте,
	|	втРасчетныеДанные.СуммаВВалютеУчета,
	|	втРасчетныеДанные.СуммаВВалютеОтчетности,
	|	втРасчетныеДанные.Комментарий,
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", 	Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецДняВключая(Реквизиты.ДатаОкончания));
	Запрос.УстановитьПараметр("ПериодОтчета", 	Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("Сценарий", 		Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация", 	Реквизиты.Организация);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаПредставления", 	Реквизиты.ВалютаПредставления);
		
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьЗапросРезервыМПЗ(Реквизиты)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОкончания,
	|			Валюта В (&ФункциональнаяВалюта, &ВалютаПредставления)
	|				И &ФункциональнаяВалюта <> &ВалютаПредставления) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втКурсыНач.Валюта КАК ВалютаНач,
	|	втКурсыНач.Курс КАК КурсНач,
	|	втКурсыНач.Кратность КАК КратностьНач,
	|	втКурсыКон.Валюта КАК ВалютаКон,
	|	втКурсыКон.Курс КАК КурсКон,
	|	втКурсыКон.Кратность КАК КратностьКон
	|ПОМЕСТИТЬ втПересчетКурсов
	|ИЗ
	|	втКурсы КАК втКурсыНач
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК втКурсыКон
	|		ПО (втКурсыНач.Валюта = &ФункциональнаяВалюта)
	|			И (втКурсыКон.Валюта = &ВалютаПредставления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Организация КАК Организация,
	|	Корректировки.Сценарий КАК Сценарий,
	|	Корректировки.Номенклатура,
	|	Корректировки.СчетДт,
	|	Корректировки.СубконтоДт1 КАК СубконтоДт1,
	|	Корректировки.СубконтоДт2 КАК СубконтоДт2,
	|	Корректировки.СубконтоДт3 КАК СубконтоДт3,
	|	Корректировки.СчетКт,
	|	Корректировки.СубконтоКт1 КАК СубконтоКт1,
	|	Корректировки.СубконтоКт2 КАК СубконтоКт2,
	|	Корректировки.СубконтоКт3 КАК СубконтоКт3,
	|	Корректировки.СуммаВФункциональнойВалютеОборот КАК СуммаВВалютеУчета,
	|	ВЫБОР
	|		КОГДА втПересчетКурсов.ВалютаКон ЕСТЬ NULL 
	|			ТОГДА Корректировки.СуммаВФункциональнойВалютеОборот
	|		КОГДА втПересчетКурсов.КурсКон = 0
	|				ИЛИ втПересчетКурсов.КратностьНач = 0
	|			ТОГДА 0
	|		ИНАЧЕ Корректировки.СуммаВФункциональнойВалютеОборот * втПересчетКурсов.КурсНач * втПересчетКурсов.КратностьКон / (втПересчетКурсов.КурсКон * втПересчетКурсов.КратностьНач)
	|	КОНЕЦ КАК СуммаВВалютеОтчетности,
	|	ПРЕДСТАВЛЕНИЕ(Корректировки.Событие) КАК Комментарий
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеЗапасы.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий) КАК Корректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПересчетКурсов КАК втПересчетКурсов
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация,
	|	втРасчетныеДанные.Сценарий,
	|	втРасчетныеДанные.Номенклатура,
	|	втРасчетныеДанные.СчетДт,
	|	втРасчетныеДанные.СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3,
	|	втРасчетныеДанные.СчетКт,
	|	втРасчетныеДанные.СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3,
	|	втРасчетныеДанные.СуммаВВалютеУчета,
	|	втРасчетныеДанные.СуммаВВалютеОтчетности,
	|	втРасчетныеДанные.Комментарий,
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", 			Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 			КонецДняВключая(Реквизиты.ДатаОкончания));
	Запрос.УстановитьПараметр("ПериодОтчета", 			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("Сценарий", 				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация", 			Реквизиты.Организация);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаПредставления", 	Реквизиты.ВалютаПредставления);
	Запрос.УстановитьПараметр("Организация", 			Реквизиты.Организация);
	
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьЗапросКорректировкиРегламента_ОперацииПериода(Реквизиты)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Корректировки.Организация КАК Организация,
	|	Корректировки.Сценарий КАК Сценарий,
	|	Корректировки.КонтрагентИнвестиция,
	|	Корректировки.СчетДт,
	|	Корректировки.СубконтоДт1 КАК СубконтоДт1,
	|	Корректировки.СубконтоДт2 КАК СубконтоДт2,
	|	Корректировки.СубконтоДт3 КАК СубконтоДт3,
	|	Корректировки.СчетКт,
	|	Корректировки.СубконтоКт1 КАК СубконтоКт1,
	|	Корректировки.СубконтоКт2 КАК СубконтоКт2,
	|	Корректировки.СубконтоКт3 КАК СубконтоКт3,
	|	Корректировки.СуммаВВалютеОтчетности КАК СуммаВВалютеУчета,
	|	ПРЕДСТАВЛЕНИЕ(Корректировки.Событие) КАК Комментарий
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	РегистрСведений.РасчетныеДанныеРегламента КАК Корректировки
	|ГДЕ
	|	Корректировки.ПериодОперации МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Корректировки.Организация = &Организация
	|	И Корректировки.Сценарий = &Сценарий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация,
	|	втРасчетныеДанные.Сценарий,
	|	втРасчетныеДанные.КонтрагентИнвестиция,
	|	втРасчетныеДанные.СчетДт,
	|	втРасчетныеДанные.СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3,
	|	втРасчетныеДанные.СчетКт,
	|	втРасчетныеДанные.СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3,
	|	втРасчетныеДанные.СуммаВВалютеУчета,
	|	втРасчетныеДанные.Комментарий,
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала",		Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",	Реквизиты.ДатаОкончания);
	Запрос.УстановитьПараметр("Сценарий",		Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);	
	
	Возврат Запрос;

КонецФункции

Функция ПолучитьЗапросКорректировкиРегламента_ПовторПроводок(Реквизиты)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.РасчетГудвилаИсключениеИнвестиций) КАК Событие
	|ПОМЕСТИТЬ втСобытия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ИзменениеДолиОтражениеНДУВФинансовомРезультате)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ИзменениеДолиОтражениеНДУВКапитале)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФиксированныеСчетаУчетаБД.Счет КАК СчетИнвестиций
	|ПОМЕСТИТЬ втСчетаИнвестиций
	|ИЗ
	|	Справочник.ФиксированныеСчетаУчетаБД КАК ФиксированныеСчетаУчетаБД
	|ГДЕ
	|	ФиксированныеСчетаУчетаБД.Ссылка В (ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВАссоциированныеПредприятия), ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВДочерниеПредприятия), ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВСовместныеПредприятия))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Корректировки.Организация КАК Организация,
	|	Корректировки.Сценарий КАК Сценарий,
	|	Корректировки.Валюта,
	|	Корректировки.КонтрагентИнвестиция,
	|	Корректировки.СчетДт,
	|	Корректировки.СубконтоДт1 КАК СубконтоДт1,
	|	Корректировки.СубконтоДт2 КАК СубконтоДт2,
	|	Корректировки.СубконтоДт3 КАК СубконтоДт3,
	|	Корректировки.СчетКт,
	|	Корректировки.СубконтоКт1 КАК СубконтоКт1,
	|	Корректировки.СубконтоКт2 КАК СубконтоКт2,
	|	Корректировки.СубконтоКт3 КАК СубконтоКт3,
	|	ПРЕДСТАВЛЕНИЕ(Корректировки.Событие) КАК Комментарий,
	|	ВЫБОР
	|		КОГДА Корректировки.СчетДт В
	|				(ВЫБРАТЬ
	|					т.СчетИнвестиций
	|				ИЗ
	|					втСчетаИнвестиций КАК т)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетИнвестицийПоДебету,
	|	ВЫБОР
	|		КОГДА Корректировки.СтоимостьДолиФВ <> 0
	|			ТОГДА Корректировки.СтоимостьДолиФВ
	|		ИНАЧЕ Корректировки.ИнвестицииФВ
	|	КОНЕЦ КАК СуммаФВ
	|ПОМЕСТИТЬ втРасчетныеДанныеРегламента
	|ИЗ
	|	РегистрСведений.РасчетныеДанныеРегламента КАК Корректировки
	|ГДЕ
	|	Корректировки.ПериодОперации < &ДатаНачала
	|	И Корректировки.Организация = &Организация
	|	И Корректировки.Сценарий = &Сценарий
	|	И (Корректировки.ИнвестицииФВ <> 0
	|			ИЛИ Корректировки.СтоимостьДолиФВ <> 0)
	|	И Корректировки.Событие В
	|			(ВЫБРАТЬ
	|				втСобытия.Событие
	|			ИЗ
	|				втСобытия)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.Валюта
	|ПОМЕСТИТЬ втИспользуемыеВалюты
	|ИЗ
	|	втРасчетныеДанныеРегламента КАК т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&ВалютаПредставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыНаКонецТекущегоПериода
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОкончания,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					т.Валюта
	|				ИЗ
	|					втИспользуемыеВалюты КАК т)) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыНаКонецПредыдущегоПериода
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОкончания,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					т.Валюта
	|				ИЗ
	|					втИспользуемыеВалюты КАК т)) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.Организация,
	|	втРасчетныеДанные.Сценарий,
	|	втРасчетныеДанные.КонтрагентИнвестиция,
	|	ВЫБОР
	|		КОГДА втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Счет
	|		ИНАЧЕ втРасчетныеДанные.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто1
	|		ИНАЧЕ втРасчетныеДанные.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто2
	|		ИНАЧЕ втРасчетныеДанные.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто3
	|		ИНАЧЕ втРасчетныеДанные.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА НЕ втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Счет
	|		ИНАЧЕ втРасчетныеДанные.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА НЕ втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто1
	|		ИНАЧЕ втРасчетныеДанные.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА НЕ втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто2
	|		ИНАЧЕ втРасчетныеДанные.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА НЕ втРасчетныеДанные.СчетИнвестицийПоДебету
	|			ТОГДА СчетТрансляционногоРезерва.Субконто3
	|		ИНАЧЕ втРасчетныеДанные.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	""Курсовая разница инвестиций при повторе проводок"" КАК Комментарий,
	|	втРасчетныеДанные.СуммаФВ * ВЫБОР
	|		КОГДА втРасчетныеДанные.Валюта = &ВалютаПредставления
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(втКурсПредФВ.Курс * втКурсПредВО.Кратность, 0) = 0
	|				ИЛИ ЕСТЬNULL(втКурсТекФВ.Курс * втКурсТекВО.Кратность, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втКурсТекФВ.Курс * втКурсТекВО.Кратность / (втКурсТекВО.Курс * втКурсТекФВ.Кратность) - втКурсПредФВ.Курс * втКурсПредВО.Кратность / (втКурсПредВО.Курс * втКурсПредФВ.Кратность)
	|	КОНЕЦ КАК СуммаВВалютеУчета,
	|	втРасчетныеДанные.СчетИнвестицийПоДебету
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	втРасчетныеДанныеРегламента КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетТрансляционногоРезерва
	|		ПО (СчетТрансляционногоРезерва.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ТрансляционныйРезерв))
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаКонецПредыдущегоПериода КАК втКурсПредФВ
	|		ПО (втКурсПредФВ.Валюта = втРасчетныеДанные.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаКонецПредыдущегоПериода КАК втКурсПредВО
	|		ПО (втКурсПредВО.Валюта = &ВалютаПредставления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаКонецТекущегоПериода КАК втКурсТекФВ
	|		ПО (втКурсТекФВ.Валюта = втРасчетныеДанные.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаКонецТекущегоПериода КАК втКурсТекВО
	|		ПО (втКурсТекВО.Валюта = &ВалютаПредставления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втВидыДвижений.ВидДвижения, ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПрочиеОперации)) КАК ВидДвижения,
	|	втРасчетныеДанные.Организация,
	|	втРасчетныеДанные.Сценарий,
	|	втРасчетныеДанные.КонтрагентИнвестиция,
	|	втРасчетныеДанные.СчетДт,
	|	втРасчетныеДанные.СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3,
	|	втРасчетныеДанные.СчетКт,
	|	втРасчетныеДанные.СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3,
	|	втРасчетныеДанные.Комментарий,
	|	втРасчетныеДанные.СуммаВВалютеУчета,
	|	втРасчетныеДанные.СчетИнвестицийПоДебету
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", 						Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 						Реквизиты.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаОкончанияПредыдущегоПериода", 	Реквизиты.ГраницыПредыдущегоПериода.ДатаОкончания);
	Запрос.УстановитьПараметр("Сценарий", 							Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Организация", 						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ВалютаПредставления", 				Реквизиты.ВалютаПредставления);	
		
	Возврат Запрос;

КонецФункции

Функция КонецДняВключая(ДатаЗапроса)
	Возврат Новый Граница(КонецДня(ДатаЗапроса), ВидГраницы.Включая);
КонецФункции

#КонецОбласти

#Область ОбщиеМеханизмы

Процедура ЗаполнитьПроводкиИзРезультатаЗапроса(Реквизиты, ДокументОбъект, Запрос, КомментарииСобытий = Неопределено, ИспользоватьДанныеНСБУ)
	
	Перем РежимКорректировки;
	
	ИспользоватьКомментарии = КомментарииСобытий <> Неопределено;
	РежимКорректировкиНаРазницу = Ложь;
	Если Реквизиты.Свойство("РежимКорректировки", РежимКорректировки) Тогда
		РежимКорректировкиНаРазницу = (РежимКорректировки = Перечисления.РежимКорректировки.КорректировкаНаРазницу);	
	КонецЕсли;
	
	ВидОтчетаАОСВ = Справочники.ВидыОтчетов.ПолучитьВидОтчетаОСВ(Реквизиты.ПланСЧетовМСФО,, Ложь);
	КонтекстАОСВ = Новый Структура("ВидОтчета,Сценарий,Организация,ПериодОтчета", ВидОтчетаАОСВ);
	ЗаполнитьЗначенияСвойств(КонтекстАОСВ, Реквизиты);
	ЗаполнитьАналитику = ИспользуетсяТрансляцияСинтетики(КонтекстАОСВ) = Ложь;
	
    РезультатЗапроса = Запрос.Выполнить();
    ИспользуетсяВалютаОпераций = (РезультатЗапроса.Колонки.Найти("Валюта") <> Неопределено);
    ИспользуетсяВалютаОтчетности = (РезультатЗапроса.Колонки.Найти("СуммаВВалютеОтчетности") <> Неопределено);
    ВыборкаЗапроса = РезультатЗапроса.Выбрать();	
    
    Пока ВыборкаЗапроса.Следующий() Цикл
        
		Если ИспользоватьКомментарии Тогда
			КомментарийСобытия = КомментарииСобытий.Получить(ВыборкаЗапроса.Комментарий);	
		Иначе
			КомментарийСобытия = ВыборкаЗапроса.Комментарий;
		КонецЕсли;
		        
		Если ИспользоватьДанныеНСБУ Тогда			
			
            СуммаСторно = ВыборкаЗапроса.СуммаОперацииНСБУОборот;
            СуммаПроводки = ВыборкаЗапроса.СуммаОперацииМСФООборот;
            
            Если РежимКорректировкиНаРазницу Тогда
                
                КомментарийПроводки = ?(НЕ ЗначениеЗаполнено(КомментарийСобытия), "Прочее", КомментарийСобытия);
                ДобавитьПроводкуКорректировки(ДокументОбъект.Проводки, ВыборкаЗапроса, СуммаПроводки - СуммаСторно, КомментарийПроводки);
                
            Иначе				
                
                КомментарийСторно = ?(НЕ ЗначениеЗаполнено(КомментарийСобытия), "Прочее", КомментарийСобытия) + НСтр("ru = ' (Сторно НСБУ)'");
                КомментарийПроводки = ?(НЕ ЗначениеЗаполнено(КомментарийСобытия), "Прочее", КомментарийСобытия) + НСтр("ru = ' (МСФО)'");
                
                ДобавитьПроводкуКорректировки(ДокументОбъект.Проводки, ВыборкаЗапроса, -СуммаСторно, КомментарийСторно, , , , , ЗаполнитьАналитику);  
                ДобавитьПроводкуКорректировки(ДокументОбъект.Проводки, ВыборкаЗапроса, СуммаПроводки, КомментарийПроводки);  
                
            КонецЕсли;
            
        Иначе	
            ДобавитьПроводкиКЗП(ДокументОбъект.Проводки, ВыборкаЗапроса, Реквизиты, Ложь, ИспользуетсяВалютаОпераций, ИспользуетсяВалютаОтчетности);
        КонецЕсли;
        
    КонецЦикла;

КонецПроцедуры

Процедура ДобавитьПроводкуКорректировки(ТаблицаПроводки, СтрокаИсточник, СуммаПроводки, КомментарийПроводки, РесурсРегистра = "СуммаВВалютеУчета", 
										СчетДтВалютный = Ложь, СчетКтВалютный = Ложь, Валюта = Неопределено, ЗаполнитьАналитику = Истина)

	Если СуммаПроводки = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Проводка = ТаблицаПроводки.Добавить();
	ПоменятьСчетаДляОтрицательнойСуммы = Ложь; //СуммаПроводки < 0;
	
	Если НЕ ПоменятьСчетаДляОтрицательнойСуммы Тогда
	
		Проводка.СчетДт = СтрокаИсточник.СчетДт;
		
		Если ЗаполнитьАналитику Тогда
			
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт1) Тогда
				Проводка.СубконтоДт1 = СтрокаИсточник.СубконтоДт1;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт2) Тогда
				Проводка.СубконтоДт2 = СтрокаИсточник.СубконтоДт2;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт3) Тогда
				Проводка.СубконтоДт3 = СтрокаИсточник.СубконтоДт3;
			КонецЕсли;
		
		КонецЕсли;
				
		Проводка.СчетКт = СтрокаИсточник.СчетКт;
		
		Если ЗаполнитьАналитику Тогда
			
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт1) Тогда
				Проводка.СубконтоКт1 = СтрокаИсточник.СубконтоКт1;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт2) Тогда
				Проводка.СубконтоКт2 = СтрокаИсточник.СубконтоКт2;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт3) Тогда
				Проводка.СубконтоКт3 = СтрокаИсточник.СубконтоКт3;
			КонецЕсли;
			
		КонецЕсли;
	
	Иначе
	
		Проводка.СчетДт = СтрокаИсточник.СчетКт;
		
		Если ЗаполнитьАналитику Тогда
			
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт1) Тогда
				Проводка.СубконтоДт1 = СтрокаИсточник.СубконтоКт1;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт2) Тогда
				Проводка.СубконтоДт2 = СтрокаИсточник.СубконтоКт2;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоКт3) Тогда
				Проводка.СубконтоДт3 = СтрокаИсточник.СубконтоКт3;
			КонецЕсли;
			
		КонецЕсли;
		
		Проводка.СчетКт = СтрокаИсточник.СчетДт;
		
		Если ЗаполнитьАналитику Тогда
			
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт1) Тогда
				Проводка.СубконтоКт1 = СтрокаИсточник.СубконтоДт1;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт2) Тогда
				Проводка.СубконтоКт2 = СтрокаИсточник.СубконтоДт2;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаИсточник.СубконтоДт3) Тогда
				Проводка.СубконтоКт3 = СтрокаИсточник.СубконтоДт3;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Проводка.Комментарий = КомментарийПроводки;
	Проводка.ВидДвижения = СтрокаИсточник.ВидДвижения;
	
	Проводка.РесурсРегистра = РесурсРегистра;
	Проводка.Значение = ?(ПоменятьСчетаДляОтрицательнойСуммы, -СуммаПроводки, СуммаПроводки);
	
	Если СчетДтВалютный = Истина Тогда
		Проводка.ЗначениеВалютаДт = СуммаПроводки;		
		Проводка.ВалютаДт = ?(Валюта=Неопределено, СтрокаИсточник.Валюта, Валюта);
	КонецЕсли;
	
	Если СчетКтВалютный = Истина Тогда
		Проводка.ЗначениеВалютаКт = СуммаПроводки;
		Проводка.ВалютаКт = ?(Валюта=Неопределено, СтрокаИсточник.Валюта, Валюта);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПроводкиКЗП(ПроводкиКЗП, СтрокаТаблицыПроводок, Реквизиты, ВыполнитьСторно = Ложь, 
								ИспользуетсяВалютаОпераций = Истина, ИспользуетсяВалютаОтчетности = Истина)

	КомментарийПроводки = СтрокаТаблицыПроводок.Комментарий;
	
	//1 по функциональной валюте
	СуммаПроводки = СтрокаТаблицыПроводок.СуммаВВалютеУчета;
	ЕстьВалютнаяСумма = ИспользуетсяВалютаОпераций И (СтрокаТаблицыПроводок.Валюта <> Реквизиты.ФункциональнаяВалюта);
	ЕстьВалютнаяСуммаОтчестности = ИспользуетсяВалютаОпераций И ИспользуетсяВалютаОтчетности 
									И (СтрокаТаблицыПроводок.Валюта <> Реквизиты.ВалютаПредставления);
	СуммаПроводкиВВалюте = ?(ЕстьВалютнаяСумма, СтрокаТаблицыПроводок.СуммаВВалюте, СуммаПроводки); 
	
	ДобавитьПроводкуКорректировки(ПроводкиКЗП, СтрокаТаблицыПроводок, СуммаПроводки, КомментарийПроводки);  
	
	//2 по валюте договора
	Если ЕстьВалютнаяСумма Тогда
		
		СчетДтВалютный = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(СтрокаТаблицыПроводок.СчетДт).Валютный;
		СчетКтВалютный = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(СтрокаТаблицыПроводок.СчетКт).Валютный;
		
		ДобавитьПроводкуКорректировки(ПроводкиКЗП, СтрокаТаблицыПроводок, СуммаПроводкиВВалюте, КомментарийПроводки, 
										"СуммаВВалюте", СчетДтВалютный, СчетКтВалютный);
				
	КонецЕсли;
	
	Если ЕстьВалютнаяСуммаОтчестности Тогда
	
		ДобавитьПроводкуКорректировки(ПроводкиКЗП, СтрокаТаблицыПроводок, СтрокаТаблицыПроводок.СуммаВВалютеОтчетности, КомментарийПроводки, 
		"СуммаВВалютеОтчетности", Истина, Истина, Реквизиты.ВалютаПредставления);
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьДокументТК(ДокументТК, Реквизиты, ВидОперации = Неопределено)

	ДокументТК.Организация					= Реквизиты.Организация;
	ДокументТК.Сценарий        				= Реквизиты.Сценарий;
	ДокументТК.Дата                      	= Реквизиты.Период;
	ДокументТК.ОсновнаяВалюта            	= Реквизиты.ФункциональнаяВалюта;
	ДокументТК.ПериодОтчета              	= ?(Реквизиты.Свойство("ПериодСценария"), Реквизиты.ПериодСценария, Реквизиты.ПериодОтчета);
	ДокументТК.РасчетДатыОтраженияВУчете 	= Перечисления.СпособыРасчетаДатыОтраженияВУчете.ДатаОкончанияПериода;
	ДокументТК.ПланСчетов                	= Реквизиты.ПланСчетовМСФО;
	ДокументТК.ВидОперации                	= ВидОперации;
	ДокументТК.РегистрБухгалтерии			= Справочники.РегистрыБухгалтерииБД.ПолучитьПоПлануСчетовБД(Реквизиты.ПланСчетовМСФО);
	
	ДокументТК.ДвиженияПоРегиструБухгалтерии 		= Реквизиты.ФормироватьПроводкиМСФО;
	ДокументТК.КорректировкиЗначенийПоказателей 	= Не Реквизиты.ФормироватьПроводкиМСФО;
	
	Если Реквизиты.Свойство("РеквизитыКорректировки") Тогда	
		ЗаполнитьЗначенияСвойств(ДокументТК, Реквизиты.РеквизитыКорректировки);		
	КонецЕсли;
	
	Если Реквизиты.Свойство("ДополнительныеКорректировки") Тогда
		ДокументТК.ДополнительныеКорректировки.Загрузить(Реквизиты.ДополнительныеКорректировки);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьОбработкуПоДокументу(ОбработкаКЗП, ДокументТК)

	ОбработкаКЗП.ПроводкиДокумента = ДокументТК.Проводки.Выгрузить();
	ОбработкаКЗП.Записи = ДокументТК.ДополнительныеКорректировки.Выгрузить();
	
	ЗаполнитьЗначенияСвойств(ОбработкаКЗП, ДокументТК);
	
	ОбработкаКЗП.ДокументОбъект = ДокументТК;
	ОбработкаКЗП.ИмяОбъектаМетаданных = "ТрансформационнаяКорректировка";
	
	ОбработкаКЗП.ИнициализироватьКонтекст();	
	ОбработкаКЗП.ИнициализироватьТаблицыЗаписей();	

КонецПроцедуры

Функция ИспользуетсяТрансляцияСинтетики(КонтекстОтчета)

	Запрос = Новый Запрос(ТекстЗапросаТрансляцияСинтетики());
	
	Запрос.УстановитьПараметр("ВидОтчета", 		КонтекстОтчета.ВидОтчета);
	Запрос.УстановитьПараметр("Организация", 	КонтекстОтчета.Организация);
	Запрос.УстановитьПараметр("ПериодОтчета", 	КонтекстОтчета.ПериодОтчета);	
	Запрос.УстановитьПараметр("Сценарий", 		КонтекстОтчета.Сценарий);
	
	Запрос.УстановитьПараметр("ПустыеСсылкиПВХ", ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПолучитьВозможныеПустыеСсылки());
	
	Возврат Запрос.Выполнить().Пустой();
		
КонецФункции

Функция ТекстЗапросаТрансляцияСинтетики()

	Возврат	
	"ВЫБРАТЬ
	|	ПоказателиОтчетов.Ссылка КАК ПоказательОтчета
	|ПОМЕСТИТЬ втПоказателиСчетов
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|ГДЕ
	|	ПоказателиОтчетов.Владелец = &ВидОтчета
	|	И ПоказателиОтчетов.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.КО))
	|	И ПоказателиОтчетов.ГруппаРаскрытия <> ЗНАЧЕНИЕ(Справочник.ГруппыРаскрытия.ПустаяСсылка)
	|	И ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики1 <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВерсииЗначенийПоказателей.Ссылка КАК Версия
	|ПОМЕСТИТЬ втВерсииАОСВ
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|ГДЕ
	|	ВерсииЗначенийПоказателей.Организация = &Организация
	|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|	И ВерсииЗначенийПоказателей.Сценарий = &Сценарий
	|	И ВерсииЗначенийПоказателей.ВидОтчета = &ВидОтчета
	|	И ВерсииЗначенийПоказателей.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьАналитикаТрансляции
	|{ВЫБРАТЬ
	|	т.Показатель.*}
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов1 КАК т
	|ГДЕ
	|	т.Версия В
	|			(ВЫБРАТЬ
	|				т.Версия
	|			ИЗ
	|				втВерсииАОСВ КАК т)
	|	И т.Показатель В
	|			(ВЫБРАТЬ
	|				т.ПоказательОтчета
	|			ИЗ
	|				втПоказателиСчетов КАК т)
	|	И т.Аналитика1 <> НЕОПРЕДЕЛЕНО
	|	И НЕ т.Аналитика1 В (&ПустыеСсылкиПВХ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов2 КАК т
	|ГДЕ
	|	т.Версия В
	|			(ВЫБРАТЬ
	|				т.Версия
	|			ИЗ
	|				втВерсииАОСВ КАК т)
	|	И т.Показатель В
	|			(ВЫБРАТЬ
	|				т.ПоказательОтчета
	|			ИЗ
	|				втПоказателиСчетов КАК т)
	|	И т.Аналитика1 <> НЕОПРЕДЕЛЕНО
	|	И НЕ т.Аналитика1 В (&ПустыеСсылкиПВХ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов3 КАК т
	|ГДЕ
	|	т.Версия В
	|			(ВЫБРАТЬ
	|				т.Версия
	|			ИЗ
	|				втВерсииАОСВ КАК т)
	|	И т.Показатель В
	|			(ВЫБРАТЬ
	|				т.ПоказательОтчета
	|			ИЗ
	|				втПоказателиСчетов КАК т)
	|	И т.Аналитика1 <> НЕОПРЕДЕЛЕНО
	|	И НЕ т.Аналитика1 В (&ПустыеСсылкиПВХ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов4 КАК т
	|ГДЕ
	|	т.Версия В
	|			(ВЫБРАТЬ
	|				т.Версия
	|			ИЗ
	|				втВерсииАОСВ КАК т)
	|	И т.Показатель В
	|			(ВЫБРАТЬ
	|				т.ПоказательОтчета
	|			ИЗ
	|				втПоказателиСчетов КАК т)
	|	И т.Аналитика1 <> НЕОПРЕДЕЛЕНО
	|	И НЕ т.Аналитика1 В (&ПустыеСсылкиПВХ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов5 КАК т
	|ГДЕ
	|	т.Версия В
	|			(ВЫБРАТЬ
	|				т.Версия
	|			ИЗ
	|				втВерсииАОСВ КАК т)
	|	И т.Показатель В
	|			(ВЫБРАТЬ
	|				т.ПоказательОтчета
	|			ИЗ
	|				втПоказателиСчетов КАК т)
	|	И т.Аналитика1 <> НЕОПРЕДЕЛЕНО
	|	И НЕ т.Аналитика1 В (&ПустыеСсылкиПВХ)"

КонецФункции

Процедура ПередУдалениемИсходногоДокументаКорректировкиПередУдалением(Источник, Отказ) Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	Трансляция.Ссылка КАК Ссылка,
	|	Трансляция.Проведен КАК Проведен
	|ИЗ
	|	Документ.Трансляция КАК Трансляция
	|ГДЕ
	|	Трансляция.ИсходныйДокумент = &ИсходныйДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТрансформационнаяКорректировка.Ссылка,
	|	ТрансформационнаяКорректировка.Проведен
	|ИЗ
	|	Документ.ТрансформационнаяКорректировка КАК ТрансформационнаяКорректировка
	|ГДЕ
	|	ТрансформационнаяКорректировка.ИсходныйДокумент = &ИсходныйДокумент";
	
	Запрос.УстановитьПараметр("ИсходныйДокумент",Источник.Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Попытка 
			
			ДокументОбъект=Результат.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект.Проведен Тогда
				
				ДокументОбъект.ОбменДанными.Загрузка=Истина;
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				
			КонецЕсли;
			
			ДокументОбъект.Удалить();
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),Отказ,,СтатусСообщения.Внимание);
			
		КонецПопытки;
		
	КонецЦикла;			
	
КонецПроцедуры

#КонецОбласти
