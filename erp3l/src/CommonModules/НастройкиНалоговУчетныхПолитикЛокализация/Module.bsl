#Область ПрограммныйИнтерфейс

// Возвращает признак необходимости применения для организации ПБУ18.
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется необходимость применения ПБУ18;
//	Период - Дата - дата, на начало месяца которой определяется необходимость применения ПБУ18.
//
// Возвращаемое значение:
//	Булево - Истина, если организация на дату применяет ПБУ18. В противном случае - ложь.
//
Функция ПоддержкаПБУ18(Знач Организация, Период) Экспорт
	Результат = Ложь;
	//++ НЕ УТ
	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, ТекущаяДатаСеанса());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.УчетнаяПолитикаБухУчета.Имя,
		МенеджерВременныхТаблиц,
		НаДату,
		"втДанныеПолитик",
		Организация);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	втДанныеПолитик КАК Т
	|ГДЕ
	|	Т.ПрименяетсяПБУ18 = ИСТИНА
	|";
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	//-- Локализация
	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак ведения учета постоянных разниц.
//
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется признак;
//	Период - Дата - дата, на начало месяца которой определяется признак.
//
// Возвращаемое значение:
//	Булево - Истина, если организация ведет учет постоянных разниц.
//
Функция ВедетсяУчетПостоянныхИВременныхРазниц(Знач Организация, Период) Экспорт
	
	Результат = Ложь;
	//++ НЕ УТ
	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, ТекущаяДатаСеанса());
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации")
		ИЛИ НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ПараметрыФО = Новый Структура;
		
		// Если организация/список организаций не заполнен
		// получаем глобальное значение по всем организациям.
		// Поэтому заполняем параметр "организация" только в случае заполненного значения
		Если ЗначениеЗаполнено(Организация) Тогда
			УстановитьПривилегированныйРежим(Истина);
			ПараметрыФО.Вставить(
				"Организация",
				ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
		ПараметрыФО.Вставить("Период", НачалоМесяца(НаДату));
	
		Результат = ПолучитьФункциональнуюОпцию("ВедетсяУчетПостоянныхИВременныхРазниц", ПараметрыФО);
	
	Иначе
		
		// Заполненный список организаций
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

		НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
			Метаданные.РегистрыСведений.УчетнаяПолитикаБухУчета.Имя,
			МенеджерВременныхТаблиц,
			НаДату,
			"втДанныеПолитик",
			Организация);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА
		|ИЗ
		|	втДанныеПолитик КАК Т
		|ГДЕ
		|	Т.ВедетсяУчетПостоянныхИВременныхРазниц = ИСТИНА
		|";
		
		Результат = НЕ Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	//-- Локализация
	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает применяемый вариант учета отложенного налога по организации на дату
//
// Параметры:
//  Период		 - Дата - Дата, на которую требуется определение
//  Организация	 - СправочникСсылка.Организации - Организация, по которой требуется определение
// 
// Возвращаемое значение:
//  Неопределено - 
//
Функция ВариантУчетаОтложенногоНалога(Период, Знач Организация) Экспорт
	
	Результат = Неопределено;
	
	//++ НЕ УТ
	//++ Локализация
	Если ЗначениеЗаполнено(Организация) Тогда
		
		НаДату = ?(ЗначениеЗаполнено(Период), Период, ТекущаяДатаСеанса());
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик(
			"УчетнаяПолитикаБухУчета",
			Организация,
			НачалоМесяца(НаДату),
			Ложь);
			
		Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			ПараметрыУчетнойПолитики,
			"ВариантУчетаОтложенногоНалога");
			
	КонецЕсли;
	//-- Локализация
	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак применения для организации ФСБУ 25/2018.
// Параметры:
//	Организация - Массив, СписокЗначений, СправочникСсылка.Организации - организация, для которой определяется применение ФСБУ 25/2018;
//	Период - Дата - дата, на начало месяца которой определяется применение ФСБУ 25/2018.
//
// Возвращаемое значение:
//	Булево - Истина, если организация на дату применяет ФСБУ 25/2018. В противном случае - ложь.
//
Функция ПрименяетсяФСБУ25(Знач Организация, Период) Экспорт
	Результат = Ложь;
	//++ НЕ УТ
	//++ Локализация
	
	Организация = НастройкиНалоговУчетныхПолитик.ОбработанныйПараметрОрганизация(Организация);
	
	НаДату = ?(ЗначениеЗаполнено(Период), Период, ТекущаяДатаСеанса());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицДействующимиПараметрамиНалоговУчетныхПолитик(
		Метаданные.РегистрыСведений.УчетнаяПолитикаФинансовогоУчета.Имя,
		МенеджерВременныхТаблиц,
		НаДату,
		"втДанныеПолитик",
		Организация);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	втДанныеПолитик КАК Т
	|ГДЕ
	|	Т.УчетАрендыПоФСБУ25_2018 = ИСТИНА
	|";
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	//-- Локализация
	//-- НЕ УТ
	
	Возврат Результат;
	
КонецФункции

//++ НЕ УТ

//++ Локализация

// Возвращает применение ФСБУ 6 в бухгалтерском учете.
// 
// Параметры:
//	Организация - СправочникСсылка.Организации - организация, для которой определяется порядок.
//	Период - Дата - дата, на которую определяется порядок.
//
// Возвращаемое значение:
//	Булево - Истина, если применяется ФСБУ 6.
//
Функция ПрименяетсяФСБУ6(Организация, Период) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.ПрименяетсяФСБУ6 КАК ПрименяетсяФСБУ6
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
		|		&Период, 
		|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК Т");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый Граница(Период, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПрименяетсяФСБУ6;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает порядок начисления амортизации в бухгалтерском учете.
// 
// Параметры:
//	Организация - СправочникСсылка.Организации - организация, для которой определяется порядок.
//	Период - Дата - дата, на которую определяется порядок.
//
// Возвращаемое значение:
//	ПеречислениеСсылка.ПорядокНачисленияАмортизации - Порядок начисления амортизации в бухгалтерском учет.
//
Функция ПорядокНачисленияАмортизацииБУ(Организация, Период) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.ПорядокНачисленияАмортизации КАК ПорядокНачисленияАмортизации
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
		|		&Период, 
		|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК Т");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый Граница(Период, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПорядокНачисленияАмортизации;
	КонецЕсли;
	
	Возврат Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	
КонецФункции

//-- Локализация

//-- НЕ УТ

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СистемаНалогообложенияОрганизации(Организация, ДатаДействия = Неопределено, ПоУмолчанию = Истина) Экспорт
	
	СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//++ Локализация
	Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
		ДатаДействия = ТекущаяДатаСеанса();
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период,
	|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК ТаблицаСрезПоследних
	|";
	Запрос.УстановитьПараметр("Период", ДатаДействия);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СистемаНалогообложения = Выборка.СистемаНалогообложения;
	ИначеЕсли Не ПоУмолчанию Тогда
		СистемаНалогообложения = Неопределено;
	КонецЕсли;
	//-- Локализация
	Возврат СистемаНалогообложения;
	
КонецФункции

// Возвращает применяет ли организация патенты на указанную дату
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации - Организация, по которой требуется определение
//  ДатаДействия		 - Дата - Дата, на которую требуется определение
// 
// Возвращаемое значение:
//  Булево - использует организация патенты на указанную дату
//
Функция ОрганизацияПрименяетПатенты(Организация, ДатаДействия = Неопределено) Экспорт
	
	ПрименяетсяПСН = Ложь;
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//++ Локализация
	Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
		ДатаДействия = ТекущаяДатаСеанса();
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСрезПоследних.ПрименяетсяПСН КАК ПрименяетсяПСН
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период,
	|		Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация) КАК ТаблицаСрезПоследних
	|";
	Запрос.УстановитьПараметр("Период", ДатаДействия);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПрименяетсяПСН = Выборка.ПрименяетсяПСН;
	КонецЕсли;
	//-- Локализация
	Возврат ПрименяетсяПСН;
	
КонецФункции

Процедура ДополнитьДоступныеПараметрыНалоговУчетныхПолитик(Список, Знач Организации, Дата = Неопределено) Экспорт
	//++ Локализация
	ПоВсемОрганизациям = Ложь;
	СистемаНалогообложенияОрганизации = Неопределено;
	ПрименяетсяУСН = Ложь;

	Если ТипЗнч(Организации) = Тип("Массив")
		ИЛИ ТипЗнч(Организации) = Тип("СписокЗначений") Тогда
		ПоВсемОрганизациям = Истина;
		Если Организации.Количество() = 1 Тогда
			Организации = Организации[0];
		КонецЕсли;
	КонецЕсли;
		
	Если ТипЗнч(Организации) = Тип("СправочникСсылка.Организации") Тогда
		СистемаНалогообложенияОрганизации = НастройкиНалоговУчетныхПолитикПовтИсп.СистемаНалогообложенияОрганизации(Организации, Дата, Ложь);
		ПрименяетсяУСН = СистемаНалогообложенияОрганизации = Перечисления.СистемыНалогообложения.Упрощенная;
	КонецЕсли;
	
	Список.Добавить("НастройкиСистемыНалогообложения");
	//++ НЕ УТ
	Список.Добавить("СтавкиНалогаНаИмущество");
	//-- НЕ УТ
	Если ЗначениеЗаполнено(СистемаНалогообложенияОрганизации)
		Или ПоВсемОрганизациям Тогда
		//++ НЕ УТ
		Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
			Список.Добавить("УчетнаяПолитикаБухУчета");
			Если НЕ ПрименяетсяУСН Или ПоВсемОрганизациям Тогда
				Список.Добавить("НастройкиУчетаНалогаНаПрибыль");
			КонецЕсли;
		КонецЕсли;
		//-- НЕ УТ
		Если ПрименяетсяУСН Или ПоВсемОрганизациям Тогда
			Список.Добавить("НастройкиУчетаУСН");
		КонецЕсли;
		
		Если ПрименяетсяУСН И НЕ ПоВсемОрганизациям Тогда
			
			Индекс = Список.Найти("НастройкиУчетаНДС");
			Если Индекс <> Неопределено Тогда
				Список.Удалить(Индекс);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ТекстыЗапросовПолученияСтатистикиУчетнойПолитики(ТекстыЗапросов) Экспорт
	
	//++ Локализация
	//Регистр НастройкиСистемыНалогообложения
	ПоказателиСтатистики = "СистемаНалогообложения,
							|ПрименяетсяЕНВД,
							|ЯвляетсяПлательщикомНДПИ,
							|ПрименяетсяУСН";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиСистемыНалогообложения", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаНДС
	ПоказателиСтатистики = "ПрименяетсяУчетНДСПоФактическомуИспользованию,
							|ПрименяетсяОсвобождениеОтУплатыНДС,
							|РаздельныйУчетТоваровПоНалогообложениюНДС,
							|РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС,
							|УчетНДСДлительногоЦиклаПроизводства,
							|Учитывать5ПроцентныйПорог,
							|ВариантУчетаНДСПриИзмененииВидаДеятельности,
							|ПравилоОтбораАвансовДляРегистрацииСчетовФактур";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаНДС", ПоказателиСтатистики, ТекстыЗапросов);
	
	//++ НЕ УТ
	//УчетнаяПолитикаБухУчета
	ПоказателиСтатистики = "ВедетсяУчетПостоянныхИВременныхРазниц,
							|ИспользоватьСчет40,
							|ЗабалансовыйУчетТМЦВЭксплуатации,
							|СборкаТоваровЧерезСчет20,
							|ВзаимозачетЧерезСчет76,
							|ФормироватьРезервыПоСомнительнымДолгамБУ,
							|ПериодичностьРезервовПоСомнительнымДолгамБУ,
							|ВидРазницПБУ18РезервовПоСомнительнымДолгам,
							|ПроводкиПоРаботникам,
							|ПрименяетсяФСБУНематериальныеАктивы,
							|СтатьяРасходовПоИсследованиям,
							|АналитикаРасходовПоИсследованиям";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("УчетнаяПолитикаБухУчета", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаНалогаНаПрибыль
	ПоказателиСтатистики = "ПорядокУплатыАвансовПоНалогуНаПрибыль,
							|ПрименяютсяРазныеСтавкиНалогаНаПрибыль,
							|БазаРаспределенияРасходовПоВидамДеятельности,
							|ФормироватьРезервыПоСомнительнымДолгамНУ,
							|ПериодичностьРезервовПоСомнительнымДолгамНУ,
							|ВключатьВСоставНалоговыхРасходовАрендныеПлатежи,
							|МетодНачисленияАмортизацииНУ,
							|ПоказательОпределенияДолиПрибыли";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаНалогаНаПрибыль", ПоказателиСтатистики, ТекстыЗапросов);
	
	//НастройкиУчетаУСН
	ПоказателиСтатистики = "БазаРаспределенияРасходовПоВидамДеятельности,
							|ОбъектНалогообложенияУСН,
							|ПрименяетсяУСНДоходыМинусРасходы";
	НастройкиНалоговУчетныхПолитик.ДополнитьТекстыЗапросаПоказателейСтатистики("НастройкиУчетаУСН", ПоказателиСтатистики, ТекстыЗапросов);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Функция - агрегатор сведений о настройках налогового учета на определенную дату
//
// Параметры:
//  Период       - Дата - дата чтения настроек.
//  Организация  - СправочникСсылка.Организации - организация,
//                 для которой требуется получить настройки.
// 
// Возвращаемое значение:
//  Неопределено, ТаблицаЗначений - если нет ни одной записи настроек учета неопределено, иначе таблица.
//
Функция УчетнаяПолитикаНалоговыйУчет(Период, Организация) Экспорт
	//++ НЕ УТ
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Организации", Организация);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
	|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ
	|	ВтГоловныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК СпрОрганизации
	|ГДЕ
	|	СпрОрганизации.Ссылка В (&Организации)
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация;
	|
	|ВЫБРАТЬ
	|	НастройкиСистемыНалогообложенияСрезПоследних.Период КАК Период,
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Организация,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяЕНВД КАК ПлательщикЕНВД,
	|	УчетнаяПолитикаБухУчетаСрезПоследних.ВариантУчетаОтложенногоНалога КАК ВариантУчетаОтложенногоНалога,
	|	УчетнаяПолитикаБухУчетаСрезПоследних.ВедетсяУчетПостоянныхИВременныхРазниц КАК ВедетсяУчетПостоянныхИВременныхРазниц,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПлательщикНалогаНаПрибыль КАК ПлательщикНалогаНаПрибыль,
	|	НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяУСН КАК ПрименяетсяУСН,
	|	НастройкиУчетаУСНСрезПоследних.ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы
	|ИЗ
	|	ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиСистемыНалогообложенияСрезПоследних
	|		ПО НастройкиСистемыНалогообложенияСрезПоследних.Организация = ГоловныеОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаУСН.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиУчетаУСНСрезПоследних
	|		ПО НастройкиСистемыНалогообложенияСрезПоследних.Организация = ГоловныеОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(&Период, Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК УчетнаяПолитикаБухУчетаСрезПоследних
	|		ПО УчетнаяПолитикаБухУчетаСрезПоследних.Организация = ГоловныеОрганизации.Организация";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить();
	КонецЕсли;
	//-- Локализация
	//-- НЕ УТ
	Возврат Неопределено;
КонецФункции

// Возвращает признак использования раздельного учета товаров по налогообложению НДС. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики, если Неопределено, то на текущую дату
//
// Возвращаемое значение:
//	Булево - Значение признака
// 
Функция РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Период = Неопределено) Экспорт
	
	РаздельныйУчетТоваровПоНалогообложениюНДС = Ложь;
	
	//++ Локализация
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик("НастройкиУчетаНДС",
		Организация,
		Период);
		
	РаздельныйУчетТоваровПоНалогообложениюНДС = ?(ПараметрыПолитики <> Неопределено, ПараметрыПолитики.РаздельныйУчетТоваровПоНалогообложениюНДС, Ложь);
	//-- Локализация
	Возврат РаздельныйУчетТоваровПоНалогообложениюНДС;
	
КонецФункции

// Возвращает признак использования раздельного учета ВНА по налогообложению НДС. 
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить признак учетной политики
// 	Период 		- Дата, Неопределено - Дата действия учетной политики, если Неопределено, то на текущую дату
//
// Возвращаемое значение:
//	Булево - Значение признака
// 
Функция РаздельныйУчетВНАПоНалогообложениюНДС(Организация, Период = Неопределено) Экспорт
	
	РаздельныйУчетВНАПоНалогообложениюНДС = Ложь;
	
	//++ Локализация
	ПараметрыПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик("НастройкиУчетаНДС",
		Организация,
		Период);
		
	РаздельныйУчетВНАПоНалогообложениюНДС = ?(ПараметрыПолитики <> Неопределено, ПараметрыПолитики.РаздельныйУчетВНАПоНалогообложениюНДС, Ложь);
	//-- Локализация
	Возврат РаздельныйУчетВНАПоНалогообложениюНДС;
	
КонецФункции

Процедура НастройкиУчетаНДСПередЗаписью(СтрокаНабора) Экспорт
	//++ Локализация
	СтрокаНабора.РаздельныйУчетВНАПоНалогообложениюНДС = СтрокаНабора.РаздельныйУчетТоваровПоНалогообложениюНДС;
	//-- Локализация
КонецПроцедуры

Процедура ПрочитатьЗаписьРегистра_УчетнаяПолитикаФинУчета(Форма) Экспорт
	
	//++ Локализация
	ДействующиеПараметры = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик("НастройкиСистемыНалогообложения",
		Форма.Запись.Организация,
		Форма.Запись.Период,
		Истина);
		
	Если ЗначениеЗаполнено(ДействующиеПараметры) Тогда
		Форма.ПрименяетсяУСН = ДействующиеПараметры.ПрименяетсяУСН;
	Иначе
		Форма.ПрименяетсяУСН = Ложь;
	КонецЕсли;
	

	ДействующиеПараметрыУСН = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитик("НастройкиУчетаУСН",
		Форма.Запись.Организация,
		Форма.Запись.Период,
		Истина);
		
	Если ЗначениеЗаполнено(ДействующиеПараметрыУСН) Тогда
		Форма.ПрименяетсяУСНДоходыМинусРасходы = ДействующиеПараметрыУСН.ПрименяетсяУСНДоходыМинусРасходы;
	Иначе
		Форма.ПрименяетсяУСНДоходыМинусРасходы = Ложь;
	КонецЕсли;
	//-- Локализация

КонецПроцедуры
 
#КонецОбласти
