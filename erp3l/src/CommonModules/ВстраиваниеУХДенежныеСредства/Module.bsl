////////////////////////////////////////////////////////////////////////////////
// Модуль используется для встраивания специфичной логики продукта 
// Управление холдингом.ERP в части управления денежных средств.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПриходныйКассовыйОрдер

Процедура ПриходныйКассовыйОрдер_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	Форма.Элементы.СтраницаРаспоряженияНаПоступление.Видимость = Ложь;
	Форма.Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
КонецПроцедуры		// ПриходныйКассовыйОрдер_ПриСозданииНаСервере()

#КонецОбласти

#Область РасходныйКассовыйОрдер

Процедура РасходныйКассовыйОрдер_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	Форма.Элементы.СтраницаРаспоряженияНаОплату.Видимость	 = Ложь;
	Форма.Элементы.СтраницаЗаказыКОплате.Видимость			 = Ложь;
	Форма.Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
КонецПроцедуры		// РасходныйКассовыйОрдер_ПриСозданииНаСервере()

#КонецОбласти

#Область ЖурналДокументовБезналичныеПлатежи

Процедура ЖурналДокументовБезналичныеПлатежи_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	//Форма.Элементы.СтраницаКПоступлению.Видимость	 = Ложь;
	//Форма.Элементы.СтраницаЗаявкиКОплате.Видимость	 = Ложь;
	//Форма.Элементы.СтраницаЗаказыКОплате.Видимость	 = Ложь;
КонецПроцедуры		// ЖурналДокументовБезналичныеПлатежи_ПриСозданииНаСервере()

#КонецОбласти

#Область БанковскиеСчетаКонтрагентов

Процедура БанковскиеСчетаКонтрагентов_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Элементы = Форма.Элементы;
	// Добавление элемента СчетОрганизации.
	ПолеСчетОрганизации = ФормыУХ.СоздатьПолеФормы(Элементы, "СчетОрганизации",	НСтр("ru = 'Счет организации'"), "Объект.СчетОрганизации", ВидПоляФормы.ПолеВвода, Форма);
	НайденнаяГруппа = Элементы.Найти("ГруппаМестоОткрытия");
	Если НайденнаяГруппа <> Неопределено Тогда
		Элементы.Переместить(ПолеСчетОрганизации, Форма, НайденнаяГруппа);
	Иначе
		// Не перемещаем.
	КонецЕсли;
	ВладелецСчета = Форма.Объект.Владелец;
	Если ЗначениеЗаполнено(ВладелецСчета) Тогда
		Если ТипЗнч(ВладелецСчета) = Тип("СправочникСсылка.Контрагенты") Тогда
			ЕстьОрганизацияВГО = ЗначениеЗаполнено(ВладелецСчета.ОрганизационнаяЕдиница);
		Иначе
			ЕстьОрганизацияВГО = Ложь;
		КонецЕсли;
	Иначе
		ЕстьОрганизацияВГО = Ложь;
	КонецЕсли;
	ПолеСчетОрганизации.Видимость = ЕстьОрганизацияВГО;
КонецПроцедуры

#КонецОбласти

Функция ПорядокОплаты(ВалютаВзаиморасчетов, ВалютаОплаты) Экспорт
	
		
КонецФункции

#КонецОбласти
