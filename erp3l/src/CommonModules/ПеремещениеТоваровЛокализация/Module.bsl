
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		ИнтеграцияВЕТИСУТ.ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(Объект, ДанныеЗаполнения);
	КонецЕсли;
	//-- Локализация
		
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	Документы.ТранспортнаяНакладная.ОбновитьРеквизитыТранспортныхНакладныхПриЗаписиДокументаОснования(Объект, Отказ);
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ПеремещениеТоваров - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ТМЦ на хранение (МХ-1)';
											|en = 'Certificate of inventory handover for storage (MH-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 13;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)';
											|en = 'Certificate of stored inventory return (MH-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 14;
	КонецЕсли;
		
	//++ НЕ УТ
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
		Если ПравоДоступа("Чтение", Метаданные.Документы.ПеремещениеТоваров) Тогда
			
			// Накладная на передачу готовой продукции (МХ-18)
			КомандаПечати = КомандыПечати.Добавить();
			КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
			КомандаПечати.Идентификатор = "МХ18";
			КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу готовой продукции (МХ-18)';
												|en = 'Invoice for finished product transfer (MH-18)'");
			КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			
		КонецЕсли;
	КонецЕсли; 
	//-- НЕ УТ
	
	// Накладная на внутреннее перемещение (ТОРГ-13)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)';
										|en = 'Internal transfer note (TORG-13)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;

	Документы.ТранспортнаяНакладная.ДобавитьКомандыПечати(КомандыПечати);
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)';
										|en = 'Requisition note (M-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 6;	
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ13",
			НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)';
				|en = 'Internal transfer note (TORG-13)'"),
			СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, КомплектПечатныхФорм) Экспорт
	//++ Локализация
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТТН");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТТН(ОбъектыКоторыеМожноПечатать, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"М11");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьМ11.СформироватьПечатнуюФормуМ11(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТранспортнаяНакладная");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТранспортнойНакладной(ОбъектыКоторыеМожноПечатать, ОбъектыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"МХ3");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМХ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"МХ1");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМХ1(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
		
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТОРГ13");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			СформироватьПечатнуюФормуТОРГ13(КомплектПечати.Объекты, ОбъектыПечати));
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

Процедура КомплектПечатныхФорм(КомплектПечатныхФорм) Экспорт
	//++ Локализация
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТОРГ13", НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)';
																												|en = 'Internal transfer note (TORG-13)'"),                2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "М11", НСтр("ru = 'Требование-накладная (М-11)';
																												|en = 'Requisition note (M-11)'"),                                                            0);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьТТН") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТТН", НСтр("ru = 'Товарно-транспортная накладная (1-Т)';
																													|en = 'Waybill (1-T)'"),                            0);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТранспортнаяНакладная", НСтр("ru = 'Транспортная накладная';
																																	|en = 'Consignment note'"),                        0);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
			"МХ1", 
			НСтр("ru = 'Акт о приеме-передаче ТМЦ на хранение (МХ-1)';
				|en = 'Certificate of inventory handover for storage (MH-1)'"),
			0);
	КонецЕсли; 
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
			"МХ3",
			НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)';
				|en = 'Certificate of stored inventory return (MH-3)'"),
			0);
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

//++ Локализация

// Формирует табличный документ по унифицированной форме ТОРГ-13
//
// Возвращаемое значение
//  Табличный документ - унифицированная форма ТОРГ-13.
//
Функция СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТоварКод = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(ТоварКод) Тогда
		ТоварКод = "Код";
	КонецЕсли;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_ТОРГ13_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по-умолчанию
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13_";

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Перемещение.Ссылка                                          КАК Ссылка,
	|	ЕСТЬNULL(Перемещение.ИсправляемыйДокумент.Номер, Перемещение.Номер) КАК Номер,
	|	ЕСТЬNULL(Перемещение.ИсправляемыйДокумент.Дата, Перемещение.Дата) КАК ДатаДокумента,
	|	Перемещение.Организация                                     КАК Организация,
	|	Перемещение.Организация.Префикс                             КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладОтправитель)           КАК ОтправительПодразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладПолучатель)            КАК ПолучательПодразделение,
	|	Перемещение.СкладОтправитель.ТекущийОтветственный           КАК КладовщикОтправитель,
	|	Перемещение.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Перемещение.СкладПолучатель.ТекущийОтветственный            КАК КладовщикПолучатель,
	|	Перемещение.СкладПолучатель.ТекущаяДолжностьОтветственного  КАК ДолжностьКладовщикаПолучателя,
	|	Перемещение.ВидЦены                                         КАК УчетныйВидЦены,
	|	Перемещение.ВидЦены.ВалютаЦены                              КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Перемещение
	|ГДЕ
	|	Перемещение.Ссылка В(&МассивПеремещений)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента, Ссылка
	|");
	Запрос.УстановитьПараметр("МассивПеремещений", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТекстЗапросаВыборкиСтрокТоваров25 = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура КАК Товар,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ТоварКод = ""Код""
	|			ТОГДА ПеремещениеТоваров.Номенклатура.Код
	|		ИНАЧЕ ПеремещениеТоваров.Номенклатура.Артикул
	|	КОНЕЦ КАК ТоварКод,
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Серия.СерияНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка
	|	КОНЕЦ КАК УпаковкаЦО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК УпаковкаНаименование,
	|	ПеремещениеТоваров.Упаковка КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ВЫБОР
	|				КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|					ТОГДА КоэффициентыУпаковок.Количество
	|				ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
	|		КОНЕЦ
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|	&ТекстЗапросаВесНоменклатуры * ПеремещениеТоваров.Количество КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Количество
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки КАК МассаБрутто
	|ПОМЕСТИТЬ ПеремещениеТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (ВидыНоменклатуры.Ссылка = ПеремещениеТоваров.Номенклатура.ВидНоменклатуры)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО (ПеремещениеТоваров.Ссылка = КоэффициентыУпаковок.Ссылка)
	|		И (ПеремещениеТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки)
	|		И (ПеремещениеТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок)
	|		И (НЕ &ВыводитьБазовыеЕдиницыИзмерения)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Товар КАК Товар,
	|	ПеремещениеТоваров.ТоварНаименование КАК ТоварНаименование,
	|	ПеремещениеТоваров.ТоварКод КАК ТоварКод,
	|	ПеремещениеТоваров.Характеристика КАК Характеристика,
	|	ПеремещениеТоваров.УпаковкаНаименование КАК Упаковка,
	|	ПеремещениеТоваров.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ПеремещениеТоваров.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ПеремещениеТоваров.Количество КАК Количество,
	|	ПеремещениеТоваров.КоличествоВОдномМесте КАК КоличествоВОдномМесте,
	|	ПеремещениеТоваров.МассаНетто КАК МассаНетто,
	|	ПеремещениеТоваров.МассаБрутто КАК МассаБрутто,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(31, 2))) * ПеремещениеТоваров.Количество КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(31, 2)) КАК Цена
	|ИЗ
	|	ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ), (Номенклатура,
	|			ХарактеристикаЦО, СерияЦО, УпаковкаЦО, ВидЦены) В
	|			(ВЫБРАТЬ
	|				Т.Товар,
	|				Т.ХарактеристикаЦО,
	|				Т.СерияЦО,
	|				Т.УпаковкаЦО,
	|				&УчетныйВидЦены
	|			ИЗ
	|				ПеремещениеТоваров КАК Т)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ПеремещениеТоваров.Товар = ЦеныНоменклатурыСрезПоследних.Номенклатура)
	|		И (ПеремещениеТоваров.ХарактеристикаЦО = ЦеныНоменклатурыСрезПоследних.ХарактеристикаЦО)
	|		И (ПеремещениеТоваров.СерияЦО = ЦеныНоменклатурыСрезПоследних.СерияЦО)
	|		И (ПеремещениеТоваров.УпаковкаЦО = ЦеныНоменклатурыСрезПоследних.УпаковкаЦО)
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.НомерСтроки";
		
	ТекстЗапросаВыборкиСтрокТоваров20 = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Номенклатура                    КАК Товар,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР КОГДА &ТоварКод = ""Код"" ТОГДА
	|		ПеремещениеТоваров.Номенклатура.Код
	|	ИНАЧЕ
	|		ПеремещениеТоваров.Номенклатура.Артикул
	|	КОНЕЦ                                                  КАК ТоварКод,
	|
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное   КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ                                                  КАК Упаковка,
	|
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ВЫБОР
	|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|						ТОГДА КоэффициентыУпаковок.Количество
	|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА 1
	|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1)
	|			* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|		КАК ЧИСЛО(31,2)) * ПеремещениеТоваров.КоличествоУпаковок КАК Сумма,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1)
	|			* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|		КАК ЧИСЛО(31,2)) КАК Цена,
	|
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПеремещениеТоваров.Количество
	|		ИНАЧЕ
	|			ПеремещениеТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки КАК МассаБрутто,
	|
	|	&ТекстЗапросаВесНоменклатуры * ПеремещениеТоваров.Количество КАК МассаНетто
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
	|			(Номенклатура, Характеристика, ВидЦены)
	|				В 
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					&УчетныйВидЦены
	|				ИЗ
	|					Документ.ПеремещениеТоваров.Товары КАК Т
	|				ГДЕ
	|					Т.Ссылка = &ПеремещениеТоваров)
	|
	|		) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ПеремещениеТоваров.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ПеремещениеТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ПеремещениеТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И ПеремещениеТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок 
	|			И НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.НомерСтроки
	|";
	
	Запрос20 = ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров20, ТоварКод);
	Запрос25 = ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров25, ТоварКод);
	
	ЗапросТоваров = Новый Запрос();
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.НомерСтроки,
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.КоличествоУпаковок,
	|	ПеремещениеТоваровТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &ПеремещениеТоваров";
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Пока Шапка.Следующий() Цикл

		ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(Шапка.ДатаДокумента);
	
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗапросТоваров.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ЗапросТоваров.УстановитьПараметр("ПеремещениеТоваров", Шапка.Ссылка);
		ЗапросТоваров.Выполнить();
		
		ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц);
		
		Запрос = ?(ИспользуетсяЦенообразование25, Запрос25, Запрос20);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ПеремещениеТоваров", Шапка.Ссылка);
		Запрос.УстановитьПараметр("ДатаДокумента", Шапка.ДатаДокумента);
		Запрос.УстановитьПараметр("УчетныйВидЦены", Шапка.УчетныйВидЦены);
		
		Если ИспользуетсяЦенообразование25 Тогда
			ВыборкаСтрокТовары = Запрос.ВыполнитьПакет()[1].Выбрать();
		Иначе
			ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();
		КонецЕсли;

		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		// Вывод шапки таблицы.
		ОбластьМакетаШапка    = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Ложь, Истина);
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакетаШапка, Шапка.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

		НомерСтраницы = 1;

		// Вывод заголовка таблицы.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		// Инициализация итогов по странице
		ИтогКоличествоМестПоСтранице = 0;
		ИтогМассаБруттоПоСтранице    = 0;
		ИтогМассыНеттоПоСтранице     = 0;
		ИтогСуммыПоСтранице          = 0;

		// Инициализация итогов по документу
		ИтогоКоличество  = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСумма       = 0;

		// Области макета.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьМакетаСтрока     = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаВсего      = Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал     = Макет.ПолучитьОбласть("Подвал");

		Ном = 0;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Ном = Ном + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.КоличествоМест    = Формат(ВыборкаСтрокТовары.Количество, "ЧЦ=15; ЧДЦ=3");
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				СокрЛП(ВыборкаСтрокТовары.ТоварНаименование),
				СокрЛП(ВыборкаСтрокТовары.Характеристика),
				СокрЛП(ВыборкаСтрокТовары.Упаковка),
				,
				ДопПараметрыПредставлениеНоменклатуры);
			
			СуммаСтроки = Окр(ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.Цена, 2);
			ОбластьМакетаСтрока.Параметры.Сумма = СуммаСтроки;
			
			Если Ном > 1 Тогда
			
				// Умещаются ли области на страницу при печати.
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				Если Ном = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					// Вывод итогов по странице.
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// Инициализация итогов по странице.
					ИтогКоличествоМестПоСтранице = 0;
					ИтогМассаБруттоПоСтранице    = 0;
					ИтогМассаНеттоПоСтранице     = 0;
					ИтогСуммыПоСтранице          = 0;

					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

					// Вывод заголовка таблицы.
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

				КонецЕсли;

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

			// Обновление итоги по странице
			ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаСтрокТовары.Количество;
			ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + ВыборкаСтрокТовары.МассаБрутто;
			ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + ВыборкаСтрокТовары.МассаНетто;
			ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + СуммаСтроки;

			// Обновление итогов по документу
			ИтогоКоличество  = ИтогоКоличество  + ВыборкаСтрокТовары.Количество;
			ИтогоМассаБрутто = ИтогоМассаБрутто + ВыборкаСтрокТовары.МассаБрутто;
			ИтогоМассаНетто  = ИтогоМассаНетто  + ВыборкаСтрокТовары.МассаНетто;
			ИтогоСумма       = ИтогоСумма       + СуммаСтроки;

		КонецЦикла;

		// Вывод итогов по странице.
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Вывод итогов по документу в целом.
		ОбластьМакетаВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
		ОбластьМакетаВсего.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
		ОбластьМакетаВсего.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
		ОбластьМакетаВсего.Параметры.ИтогоСумма          = ИтогоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);

		// Вывод подвала документа.
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ОбластьМакетаПодвал.Параметры.ДолжностьОтправителя = Шапка.ДолжностьКладовщикаОтправителя;
		ОбластьМакетаПодвал.Параметры.ФИООтправителя       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.КладовщикОтправитель, Шапка.ДатаДокумента);
		ОбластьМакетаПодвал.Параметры.ДолжностьПолучателя  = Шапка.ДолжностьКладовщикаПолучателя;
		ОбластьМакетаПодвал.Параметры.ФИОПолучателя        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.КладовщикПолучатель, Шапка.ДатаДокумента);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаПрописью   = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
																Цел(ИтогоСумма),
																ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Шапка.Организация),
																Истина);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаКоп        = Формат(Цел((ИтогоСумма-Цел(ИтогоСумма))*100), "ЧЦ=2; ЧН=00");
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Функция ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров, ТоварКод)
	
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
			
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатурыСрезПоследних.Упаковка",
			"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
				
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
		
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения",
			"ПеремещениеТоваров.Номенклатура"));
		
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
	
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));

	Запрос = Новый Запрос(ТекстЗапросаВыборкиСтрокТоваров);

	Запрос.УстановитьПараметр("ТоварКод", ТоварКод);
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	Возврат Запрос;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПеремещениеТоваров - Массив ссылок на документы, 
//																		по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоСкладам - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Номер, Документ.Номер) КАК Номер,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК Дата,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаПолученияСебестоимости,
	|	Документ.Организация КАК Организация,
	|	Документ.СкладПолучатель КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.СкладПолучатель = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Шапка.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 3
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПеремещениеТоваров - Массив ссылок на документы, 
//															по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоСкладам - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Номер, Документ.Номер) КАК Номер,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК Дата,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаПолученияСебестоимости,
	|	Документ.Организация КАК Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.СкладОтправитель = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 18
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПеремещениеТоваров - Массив ссылок на документы, 
//																по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМХ18(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов			= ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК ДатаДокумента,
	|	ДанныеДокумента.Организация					КАК Организация,
	|	ДанныеДокумента.Организация.Префикс			КАК Префикс,
	|	ДанныеДокумента.СкладОтправитель.Представление	КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокВыпуск.Ссылка       КАК Ссылка,
	|	ДокВыпуск.Дата         КАК Дата,
	|	ДокВыпуск.Организация  КАК Организация,
	|	ДокВыпуск.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТДанныеДокументовВыпуска
	|ИЗ 
	|	Документ.ПеремещениеТоваров КАК ДокВыпуск
	|ГДЕ 
	|	ДокВыпуск.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка,
	|	РСУчетнаяПолитика.УчетГотовойПродукцииПоПлановойСтоимости КАК ИспользоватьПлановыеЦены
	|ПОМЕСТИТЬ ВТИспользованиеПлановыхЦен
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		ДокументыВыпуска.ГоловнаяОрганизация,
	|		МАКСИМУМ (РСУчетнаяПолитика.Период) КАК УчетнаяПолитикаПериод
	|
	|	ИЗ ВТДанныеДокументовВыпуска КАК ДокументыВыпуска
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|		ПО РСУчетнаяПолитика.Организация = ДокументыВыпуска.ГоловнаяОрганизация
	|		И  РСУчетнаяПолитика.Период <= ДокументыВыпуска.Дата
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		ДокументыВыпуска.ГоловнаяОрганизация
	|	) КАК Таб
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|	ПО Таб.ГоловнаяОрганизация = РСУчетнаяПолитика.Организация
	|	И  Таб.УчетнаяПолитикаПериод = РСУчетнаяПолитика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка														КАК Ссылка,
	|	ТаблицаТовары.Номенклатура													КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное								КАК НоменклатураНаименование,
	|	ТаблицаТовары.Номенклатура." + КолонкаКодов + "								КАК НоменклатураКод,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное								КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Характеристика												КАК Характеристика,
	|	ТаблицаТовары.Серия.Наименование											КАК СерияНаименование,
	|	ТаблицаТовары.Серия															КАК Серия,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 											КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения 													КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 											КАК ВидУпаковки,
	|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|	КОНЕЦ																				КАК КоличествоВОдномМесте,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок * &ТекстЗапросаВес)					КАК МассаБрутто,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок)										КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) 									КАК КоличествоМест,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)											КАК НомерСтроки,
	|	ЛОЖЬ																				КАК ЭтоВозвратнаяТара,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ 0
	|			КОНЕЦ)																		КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ 0
	|		КОНЕЦ)																			КАК Сумма,
	|	ТаблицаТовары.Ссылка.СкладПолучатель.Представление                                       КАК Получатель
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованиеПлановыхЦен КАК ВТИспользованиеПлановыхЦен
	|	ПО ТаблицаТовары.Ссылка = ВТИспользованиеПлановыхЦен.Ссылка
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|															)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Получатель";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВес",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[3];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11();
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов.
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]);
	
КонецФункции

Функция ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11()

	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	Если ИспользуетсяЦенообразование25 Тогда
		ДатаПереходаНаЦенообразование25 = ЦенообразованиеВызовСервера.ДатаПереходаНаЦенообразованиеВерсии25();
	КонецЕсли;
	
	Если ИспользуетсяЦенообразование25 Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ВЫБОР
		|		КОГДА
		|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
		|		ИНАЧЕ Товары.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
		|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
		|	ЕСТЬNULL(ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
		|		ИНАЧЕ Товары.Серия.СерияНоменклатурыДляЦенообразования
		|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ИНАЧЕ Товары.Упаковка
		|	КОНЕЦ КАК УпаковкаЦО,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	Товары.Ссылка.ВидЦены КАК ВидЦены,
		|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВидыНоменклатуры.Ссылка = Товары.Номенклатура.ВидНоменклатуры)
		|ГДЕ
		|	Товары.Ссылка В (&МассивДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка КАК Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ЦеныНоменклатуры.Цена КАК Цена,
		|	ЦеныНоменклатуры.Упаковка КАК Упаковка
		|ПОМЕСТИТЬ Цены
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|			И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	ГДЕ
		|		Товары.ДатаПолученияЦены < &ДатаПереходаНаЦенообразование25
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО (ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период)
		|		И (ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены)
		|		И (ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура)
		|		И (ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО КАК ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО КАК СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО КАК УпаковкаЦО,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И Товары.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
		|			И Товары.СерияЦО = ЦеныНоменклатуры.СерияЦО
		|			И Товары.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
		|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|			И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	ГДЕ
		|		Товары.ДатаПолученияЦены >= &ДатаПереходаНаЦенообразование25
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|		ПО (ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период)
		|		И (ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены)
		|		И (ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура)
		|		И (ПериодыЦенНоменклатуры.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО)
		|		И (ПериодыЦенНоменклатуры.СерияЦО = ЦеныНоменклатуры.СерияЦО)
		|		И (ПериодыЦенНоменклатуры.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыКурсовВалютПоДокументам.Ссылка КАК Ссылка,
		|	КурсыВалют.Валюта КАК Валюта,
		|	КурсыВалют.КурсЧислитель КАК КурсЧислитель,
		|	КурсыВалют.КурсЗнаменатель КАК КурсЗнаменатель
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документы.Ссылка КАК Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
		|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
		|		КурсыВалют.Валюта КАК Валюта
		|	ИЗ
		|		Документ.ПеремещениеТоваров КАК Документы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
		|			И Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
		|			И Документы.Дата >= КурсыВалют.Период
		|	ГДЕ
		|		Документы.Ссылка В (&МассивДокументов)
		|	СГРУППИРОВАТЬ ПО
		|		Документы.Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета,
		|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
		|		И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
		|		И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставления,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
		|	Документы.Организация КАК Организация,
		|	Документы.Организация.Префикс КАК Префикс,
		|	Документы.СкладПолучатель КАК Подразделение,
		|	Документы.ВидЦены КАК УчетныйВидЦены,
		|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документы
		|ГДЕ
		|	Документы.Ссылка В (&МассивДокументов)
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.Ссылка.СкладОтправитель КАК Склад,
		|	Товары.Ссылка.СкладОтправитель.ТекущийОтветственный КАК КладовщикОтправитель,
		|	Товары.Ссылка.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
		|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
		|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Товары.Упаковка.Наименование
		|	КОНЕЦ КАК Упаковка,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1)
		|		КАК ЧИСЛО(31, 2))) * Товары.КоличествоУпаковок КАК Сумма,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1)
		|		КАК ЧИСЛО(31, 2)) КАК Цена,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		|		ПО Товары.Ссылка = КурсыВалют.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
		|		ПО Товары.Ссылка = Цены.Ссылка
		|		И Товары.НомерСтроки = Цены.НомерСтроки
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(КладовщикОтправитель),
		|	МАКСИМУМ(ДолжностьКладовщикаОтправителя)
		|ПО
		|	Ссылка,
		|	Склад");

		Запрос.УстановитьПараметр("ДатаПереходаНаЦенообразование25", ДатаПереходаНаЦенообразование25);
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	Товары.Ссылка.ВидЦены КАК ВидЦены,
		|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка В(&МассивДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка
		|ПОМЕСТИТЬ Цены
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
		|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыКурсовВалютПоДокументам.Ссылка,
		|	КурсыВалют.Валюта,
		|	КурсыВалют.КурсЧислитель,
		|	КурсыВалют.КурсЗнаменатель
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документы.Ссылка КАК Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
		|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
		|		КурсыВалют.Валюта КАК Валюта
		|	ИЗ
		|		Документ.ПеремещениеТоваров КАК Документы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
		|				И Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
		|				И Документы.Дата >= КурсыВалют.Период
		|	ГДЕ
		|		Документы.Ссылка В(&МассивДокументов)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Документы.Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета,
		|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
		|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
		|			И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставления,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
		|	Документы.Организация КАК Организация,
		|	Документы.Организация.Префикс КАК Префикс,
		|	Документы.СкладПолучатель КАК Подразделение,
		|	Документы.ВидЦены КАК УчетныйВидЦены,
		|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документы
		|ГДЕ
		|	Документы.Ссылка В(&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.Ссылка.СкладОтправитель КАК Склад,
		|	Товары.Ссылка.СкладОтправитель.ТекущийОтветственный КАК КладовщикОтправитель,
		|	Товары.Ссылка.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
		|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
		|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
		|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
		|		ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Товары.Упаковка.Наименование
		|	КОНЕЦ КАК Упаковка,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31,2))) * Товары.КоличествоУпаковок КАК Сумма,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31,2)) КАК Цена,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		|		ПО Товары.Ссылка = КурсыВалют.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
		|		ПО Товары.Ссылка = Цены.Ссылка
		|			И Товары.НомерСтроки = Цены.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(ДолжностьКладовщикаОтправителя), МАКСИМУМ(КладовщикОтправитель)
		|ПО
		|	Ссылка,
		|	Склад");
		
	КонецЕсли;
	
	Возврат Запрос
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц.
//	ПараметрыЗаполнения - Структура - см. ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаПериодовЦен
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ТаблицаТоваров.Ссылка.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ТаблицаТоваров.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ТаблицаТоваров.Ссылка.Дата >= ЦеныНоменклатуры.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ЦеныНоменклатуры.ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТоваров.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL
	|				И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ТаблицаТоваров.КоличествоУпаковок КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL
	|				И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК Цена,
	|	0 КАК СуммаНДС,
	|	ИСТИНА КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоНеВозвратнаяТара,
	|	ТаблицаТоваров.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ПеремещениеТоваровТаблицаТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовЦен КАК ТаблицаПериодовЦен
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ТаблицаПериодовЦен.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И ТаблицаПериодовЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ТаблицаПериодовЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И ТаблицаПериодовЦен.Период = ЦеныНоменклатуры.Период
	|		ПО ТаблицаТоваров.Ссылка = ТаблицаПериодовЦен.Ссылка
	|			И ТаблицаТоваров.Номенклатура = ТаблицаПериодовЦен.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТаблицаПериодовЦен.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодовЦен";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
		
	Запрос.Выполнить();
	
КонецПроцедуры
//-- Локализация
#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстПеремещениеКомиссионныхТоваров());
	ТекстыОтражения.Добавить(ТекстПеремещениеСобственныхТоваров());
	ТекстыОтражения.Добавить(ТекстПеремещениеПродукцииДавальцевБаланс());
	ТекстыОтражения.Добавить(ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения());
	ТекстыОтражения.Добавить(ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение());
	ТекстыОтражения.Добавить(ТекстПередачаСобственныхТоваровСОбособленногоПодразделения());
	ТекстыОтражения.Добавить(ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение());
	ТекстыОтражения.Добавить(ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияБаланс());
	ТекстыОтражения.Добавить(ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияЗабаланс());
	ТекстыОтражения.Добавить(ТекстПеремещениеТМЦНаОтветХранении());
	ТекстыОтражения.Добавить(ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеБаланс());
	ТекстыОтражения.Добавить(ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеЗабаланс());
	ТекстыОтражения.Добавить(ТекстВключениеИсключениеНДСВСтоимость());
	ТекстыОтражения.Добавить(ТекстПередачаРезервовСОбособленногоПодразделения());
	ТекстыОтражения.Добавить(ТекстПередачаРезервовНаОбособленноеПодразделение());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

//++ Локализация

// Правила получения значений реквизитов ТТН
// 
// Возвращаемое значение:
//  Структура -  см. Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных() 
//
Функция ПараметрыФормированияТранспортныхНакладных() Экспорт
	
	ПараметрыФормированияТранспортныхНакладных =
		Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных();
		
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузоотправитель = "ОснованиеТранспортнойНакладной.Организация";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузополучатель = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ЗаказчикПеревозки                 = "ОснованиеТранспортнойНакладной.Организация";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетЗаказчикаПеревозки  = "ОснованиеТранспортнойНакладной.БанковскийСчетОрганизации";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Плательщик                        =
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетПлательщика         = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.БанковскийСчетОрганизации
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьНомер                 = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьДата                  = "ДАТАВРЕМЯ(1,1,1)";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьВыдана                = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьЛицо                  = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Отпустил                          = "ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ОтпустилДолжность                 = """""";
	
	ПараметрыФормированияТранспортныхНакладных.ЕстьЗаказы = Истина;
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляЗаказВТЧТовары = "ЗаказНаПеремещение";
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляНакладнаяПоЗаказу = "ПеремещениеПоЗаказам";
	
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляСклад = "СкладОтправитель";
	
	ПараметрыФормированияТранспортныхНакладных.РеквизитыШапкиДляПечати.Валюта = "ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	Возврат	ПараметрыФормированияТранспортныхНакладных;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период				         КАК Период,
	|	&Организация 		         КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период						 КАК Период,
	|	&ОрганизацияПолучатель 	 	 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ
//-- Локализация

#КонецОбласти

#Область Прочее

//++ Локализация
//++ НЕ УТ

Функция ТекстПеремещениеСобственныхТоваров()

	ТекстПеремещениеСобственныхТоваров = "
	|ВЫБРАТЬ //// Перемещение собственных товаров (Дт 41.01, 20 :: Кт 41.01, 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА Операция.СкладПолучатель.Подразделение
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Количество
	|	КОНЕЦ КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА Операция.СкладОтправитель.Подразделение
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Количество
	|	КОНЕЦ КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Перемещение собственных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Склад = Операция.СкладОтправитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	Возврат ТекстПеремещениеСобственныхТоваров;
	
КонецФункции

Функция ТекстПеремещениеПродукцииДавальцевБаланс()

	ТекстПеремещениеПродукцииДавальцевБаланс = "
	|ВЫБРАТЬ //// Перемещение продукции давальцев (Дт 20 :: Кт 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаБалансоваяУУ, Строки.СуммаБалансоваяУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Перемещение собственных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Склад = Операция.СкладОтправитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	Возврат ТекстПеремещениеПродукцииДавальцевБаланс;
	
КонецФункции

Функция ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения()
	
	ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения = "
	|ВЫБРАТЬ //// Передача комиссионных товаров с обособленного подразделения (Дт  :: Кт 004.01 / 003.01 / 003.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе)
	|		ИНАЧЕ ВЫБОР КОГДА Операция.СкладОтправитель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КОНЕЦ
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) И Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.Контрагент
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача комиссионных товаров с обособленного подразделения"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|";
	Возврат ТекстПередачаКомиссионныхТоваровСОбособленногоПодразделения;
	
КонецФункции

Функция ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение()
	
	ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение = "
	|ВЫБРАТЬ //// Передача комиссионных товаров на обособленное подразделение (Дт 004.01 / 003.01 / 003.02 :: Кт )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе)
	|		ИНАЧЕ ВЫБОР КОГДА Операция.СкладПолучатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КОНЕЦ
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) И Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.Контрагент
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|			
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача комиссионных товаров на обособленное подразделение"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|	И Строки.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
	|";
	Возврат ТекстПередачаКомиссионныхТоваровНаОбособленноеПодразделение;
	
КонецФункции

Функция ТекстПередачаСобственныхТоваровСОбособленногоПодразделения()
	
	ТекстПередачаСобственныхТоваровСОбособленногоПодразделения = "
	|ВЫБРАТЬ //// Передача собственных товаров с обособленного подразделения (Дт 79.01 :: Кт 41.01, 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетДт,
	|	Операция.ОрганизацияПолучатель КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА Операция.СкладОтправитель.Подразделение
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	ВЫБОР
	|		КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Количество
	|	КОНЕЦ КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Передача собственных товаров с обособленного подразделения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Склад = Операция.СкладОтправитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|";
	Возврат ТекстПередачаСобственныхТоваровСОбособленногоПодразделения;

КонецФункции

Функция ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение()
	
	ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение = "
	|ВЫБРАТЬ //// Передача собственных товаров на обособленное подразделение (Дт 41.01, 20 :: Кт 79.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции)
	|		ИНАЧЕ Строки.КорГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.КорПодразделениеАналитики
	|		ИНАЧЕ Строки.КорСклад
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорНоменклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ Строки.КорСклад
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР
	|		КОГДА Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Количество
	|	КОНЕЦ КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетКт,
	|	Операция.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача собственных товаров на обособленное подразделение"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.КорСклад = Операция.СкладПолучатель
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.КорНоменклатура = Стоимости.КорНоменклатура
	|		И Строки.КорСклад = Стоимости.КорСклад
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.КорГруппаФинансовогоУчета = Стоимости.КорГруппаФинансовогоУчета
	|		И Строки.КорПодразделениеАналитики = Стоимости.КорПодразделениеАналитики
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.КорРазделУчета = Стоимости.КорРазделУчета
	|		И Строки.КорГруппаПродукции = Стоимости.КорГруппаПродукции
	|ГДЕ
	|	Строки.КорРазделУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|";
	Возврат ТекстПередачаСобственныхТоваровНаОбособленноеПодразделение;
	
КонецФункции

Функция ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияБаланс()
	
	ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияБаланс = "
	|ВЫБРАТЬ //// Передача продукции давальцев с обособленного подразделения (Дт 79.01 :: Кт 41.01, 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаБалансоваяУУ, Строки.СуммаБалансоваяУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетДт,
	|	Операция.ОрганизацияПолучатель КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Передача продукции давальцев с обособленного подразделения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Склад = Операция.СкладОтправитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|";
	Возврат ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияБаланс;

КонецФункции

Функция ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияЗабаланс()
	
	ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияЗабаланс = "
	|ВЫБРАТЬ //// Передача продукции давальцев с обособленного подразделения (Кт 002)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансоваяУУ, Строки.СуммаЗабалансоваяУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.СкладОтправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача продукции давальцев с обособленного подразделения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)";
	
	Возврат ТекстПередачаПродукцииДавальцевСОбособленногоПодразделенияЗабаланс;

КонецФункции

Функция ТекстПеремещениеТМЦНаОтветХранении()
	
	ТекстПеремещениеТМЦНаОтветХранении = "
	|ВЫБРАТЬ //// Перемещение ТМЦ на ответственном хранении (Дт 002 :: Кт 002)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансоваяУУ, Строки.СуммаЗабалансоваяУУ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦвпроизводстве)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦнаскладах)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.КорСклад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	Строки.КорСклад КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦвпроизводстве)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦнаскладах)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	Строки.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение ТМЦ на ответственном хранении"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	Возврат ТекстПеремещениеТМЦНаОтветХранении;
	
КонецФункции

Функция ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеБаланс()
	
	ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеБаланс = "
	|ВЫБРАТЬ //// Передача продукции давальцев на обособленное подразделение (Дт 20 :: Кт 79.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаБалансоваяУУ, Строки.СуммаБалансоваяУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	Строки.ПодразделениеАналитики КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетКт,
	|	Операция.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача продукции давальцев на обособленное подразделение"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.Склад = Операция.СкладПолучатель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ПодразделениеАналитики = Стоимости.ПодразделениеАналитики
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|";
	Возврат ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеБаланс;
	
КонецФункции

Функция ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеЗабаланс()
	
	ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеЗабаланс = "
	|ВЫБРАТЬ //// Передача продукции давальцев на обособленное подразделения (Дт 002)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансоваяУУ, Строки.СуммаЗабалансоваяУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Строки.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетДт,
	|	Строки.КорНоменклатура КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача продукции давальцев на обособленное подразделения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.КорНоменклатура = Стоимости.КорНоменклатура
	|		И Строки.КорСклад = Стоимости.КорСклад
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.КорГруппаФинансовогоУчета = Стоимости.КорГруппаФинансовогоУчета
	|		И Строки.КорПодразделениеАналитики = Стоимости.КорПодразделениеАналитики
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.КорРазделУчета = Стоимости.КорРазделУчета
	|		И Строки.КорГруппаПродукции = Стоимости.КорГруппаПродукции
	|ГДЕ
	|	Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)";

	Возврат ТекстПередачаПродукцииДавальцевНаОбособленноеПодразделениеЗабаланс;
	
КонецФункции

Функция ТекстВключениеИсключениеНДСВСтоимость()
	
	ТекстВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 41.01 :: Кт 19.03) @НДСпредъявленный
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА Партии.КорГруппаПродукции
	|		ИНАЧЕ Партии.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА Операция.СкладПолучатель.Подразделение
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.СкладПолучатель.Подразделение КАК ПодразделениеДт,
	|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Партии.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА Партии.КорГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, Партии.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		Партии.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО Партии.Ссылка = ВводСобственныхСредств.Ссылка
	|		И Партии.ДокументПоступления = ВводСобственныхСредств.СчетФактура
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";

	Возврат ТекстВключениеИсключениеНДСВСтоимость;
	
КонецФункции

Функция ТекстПеремещениеКомиссионныхТоваров()

	ТекстПеремещениеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Перемещение комиссионных товаров (Дт 004.01 / 003.01 / 003.02 :: Кт 004.01 / 003.01 / 003.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе)
	|		ИНАЧЕ ВЫБОР КОГДА Операция.СкладПолучатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КОНЕЦ
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.СкладПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) И Операция.СкладПолучатель.ЦеховаяКладовая
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.СкладПолучатель
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.Контрагент
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе)
	|		ИНАЧЕ ВЫБОР КОГДА Операция.СкладОтправитель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку) КОНЕЦ
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.СкладОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) И Операция.СкладОтправитель.ЦеховаяКладовая
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.СкладОтправитель
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.Контрагент
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение комиссионных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Контрагент = Стоимости.Контрагент
	|ГДЕ
	|	Строки.РазделУчета В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|";
	Возврат ТекстПеремещениеКомиссионныхТоваров;
	
КонецФункции

Функция ТекстПередачаРезервовСОбособленногоПодразделения()
	
	ТекстПередачаРезервовСОбособленногоПодразделения = "
	|ВЫБРАТЬ //// Передача резервов с обособленного подразделения (Дт 79.01 :: Кт 14)
	|
	|	Стоимости.Ссылка КАК Ссылка,
	|	Стоимости.Период КАК Период,
	|	Стоимости.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.РезервПодОбесценениеРегл КАК Сумма,
	|	Стоимости.РезервПодОбесценениеУпр КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетДт,
	|	Стоимости.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Стоимости.РазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПроизводства)
	|		КОГДА Стоимости.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПереданные)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеТМЦ)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР
	|		КОГДА Стоимости.РазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.ГруппаПродукции
	|		ИНАЧЕ Стоимости.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА Стоимости.РазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.ПодразделениеАналитики
	|		ИНАЧЕ Стоимости.Склад
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Стоимости.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Стоимости.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Стоимости.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Стоимости.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА Стоимости.Контрагент
	|		КОГДА Стоимости.РазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.ГруппаПродукции
	|		ИНАЧЕ Стоимости.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Стоимости.ТипЗапасов В (
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Стоимости.РезервПодОбесценениеРегл КАК СуммаВРКт,
	|	""Передача резервов под обесценение запасов с обособленного подразделения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		ДокументыКОтражению.Ссылка = Стоимости.Ссылка
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	Стоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|	И Стоимости.РезервПодОбесценениеРегл + Стоимости.РезервПодОбесценениеУпр <> 0
	|";
	Возврат ТекстПередачаРезервовСОбособленногоПодразделения;

КонецФункции

Функция ТекстПередачаРезервовНаОбособленноеПодразделение()
	
	ТекстПередачаРезервовНаОбособленноеПодразделение = "
	|ВЫБРАТЬ //// Передача резервов на обособленное подразделение (Дт 14 :: Кт 79.01)
	|
	|	Стоимости.Ссылка КАК Ссылка,
	|	Стоимости.Период КАК Период,
	|	Стоимости.КорОрганизация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.РезервПодОбесценениеРегл КАК Сумма,
	|	Стоимости.РезервПодОбесценениеУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Стоимости.КорРазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПроизводства)
	|		КОГДА Стоимости.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеПереданные)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервыПодОбесценениеТМЦ)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Стоимости.КорРазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.КорГруппаПродукции
	|		ИНАЧЕ Стоимости.КорГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Стоимости.КорРазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.КорПодразделениеАналитики
	|		ИНАЧЕ Стоимости.КорСклад
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Стоимости.КорПодразделениеАналитики КАК ПодразделениеДт,
	|	Стоимости.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Стоимости.КорНоменклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Стоимости.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику))
	|		ТОГДА Стоимости.Контрагент
	|		КОГДА Стоимости.КорРазделУчета В (
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|								ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
	|		ТОГДА Стоимости.КорГруппаПродукции
	|		ИНАЧЕ Стоимости.КорСклад
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Стоимости.КорТипЗапасов В (
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Стоимости.РезервПодОбесценениеРегл КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетКт,
	|	Стоимости.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача резервов под обесценение запасов на обособленное подразделение"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		ДокументыКОтражению.Ссылка = Стоимости.Ссылка
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	Стоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|	И Стоимости.РезервПодОбесценениеРегл + Стоимости.РезервПодОбесценениеУпр <> 0
	|";
	Возврат ТекстПередачаРезервовНаОбособленноеПодразделение;
	
КонецФункции

//-- НЕ УТ
//-- Локализация
#КонецОбласти

#КонецОбласти
