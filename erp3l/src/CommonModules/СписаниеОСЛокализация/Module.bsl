////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Списание ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	//++ Локализация
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.СписаниеОС2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	// ОС-4 (Акт о списании ОС)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС4";
	КомандаПечати.Идентификатор = "ОС4";
	КомандаПечати.Представление = НСтр("ru = 'ОС-4 (Акт о списании ОС)';
										|en = 'FA-4 (FA retirement certificate)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьРеглУчет";

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	СписокЗапросов = Новый Массив;
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеСписанияОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОС(СписокЗапросов);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт

	//++ Локализация
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса);
	ТекстЗапросаПрочиеДоходы(ТекстыЗапроса);
	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	
	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьБлокировкуДанныхПриПроведении(Объект, Блокировка) Экспорт

	//++ Локализация
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыЦелевогоФинансированияОС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Объект.ОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	
	Если Объект.ОтражатьВРеглУчете Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСБУ");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.СписаниеОС2_4.ОС");
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство             КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
	|
	|	МестонахождениеОС.Организация          КАК Организация,
	|	МестонахождениеОС.МОЛ                  КАК МОЛ,
	|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.Арендатор            КАК Арендатор,
	|
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов    КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов,
	|
	|	ТаблицаОС.СуммаСписанияУУ              КАК СуммаСписанияУУ,
	|	ТаблицаОС.СуммаСписанияБУ              КАК СуммаСписанияБУ,
	|	ТаблицаОС.СуммаСписанияНУ              КАК СуммаСписанияНУ,
	|	ТаблицаОС.СуммаСписанияПР              КАК СуммаСписанияПР,
	|	ТаблицаОС.СуммаСписанияВР              КАК СуммаСписанияВР,
	|	
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторСтроки
	|	
	|ПОМЕСТИТЬ втТаблицаОС
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
	|	УзлыКомпоненты.УзелКомпонент           КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство             КАК ОСВладелец,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
	|
	|	МестонахождениеОС.Организация          КАК Организация,
	|	МестонахождениеОС.МОЛ                  КАК МОЛ,
	|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.Арендатор            КАК Арендатор,
	|
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаДоходов,
	|
	|	0                                      КАК СуммаСписанияУУ,
	|	0                                      КАК СуммаСписанияБУ,
	|	0                                      КАК СуммаСписанияНУ,
	|	0                                      КАК СуммаСписанияПР,
	|	0                                      КАК СуммаСписанияВР,
	|	
	|	УзлыКомпоненты.ИдентификаторСтроки     КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
	|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчета.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
	|		ПО УзлыКомпоненты.УзелКомпонент = МестонахождениеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО УзлыКомпоненты.УзелКомпонент = ПервоначальныеСведенияОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область Заполнение

// Заполняет документ по отбору.
// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Заполняемый документ.
//  Основание - Структура - Основание.
Процедура ЗаполнитьДокументПоОтбору(Объект, Основание) Экспорт

	//++ Локализация
	
	Если Основание.Свойство("ДокументОснование")
		И ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, Основание);
		
	ИначеЕсли Основание.Свойство("Основания")
		И Основание.Основания.Количество() <> 0
		И (ТипЗнч(Основание.Основания[0]) = Тип("ДокументСсылка.СписаниеИзЭксплуатации")
			ИЛИ ТипЗнч(Основание.Основания[0]) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")) Тогда
			
		ЗаполнитьНаОснованииВыбытияТМЦ(Объект, Основание);
		
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

Процедура ПолучитьПрослеживаемыеТоварыИзХранилища(Объект, АдресОстатковПрослеживаемыхТоваров) Экспорт
	
	//++ Локализация
	
	ТаблицаОстатков = ПолучитьИзВременногоХранилища(АдресОстатковПрослеживаемыхТоваров);
	ТаблицаОстатков.Колонки.Добавить("КодОперацииВыбытия");
	ТаблицаОстатков.ЗаполнитьЗначения(Справочники.КодыОперацийПрослеживаемости.ЗахоронениеОбезвреживаниеУтилизацияТовара,"КодОперацииВыбытия");
	Объект.ПрослеживаемыеТовары.Загрузить(ТаблицаОстатков);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииОбъектаЭксплуатации(Объект, Основание) Экспорт
	
	//++ Локализация
	ЗаполнитьСуммуСписанияНаОснованииВыбытияТМЦ(Объект);
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ФормаДокумента

Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ВалютаРегл = Строка(ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация));
	Элементы.ОСГруппаЧастичнойЛиквидации.Заголовок = СтрШаблон(НСтр("ru = 'Регламентированный учет (%1)';
																	|en = 'Local accounting (%1)'"), ВалютаРегл);
	
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
	|ИЗ
	|	втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&СобытиеОС КАК Событие,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&НомерНаПечать КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|			ТОГДА ТаблицаОС.СуммаСписанияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗатратБУ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|			ТОГДА ТаблицаОС.СуммаСписанияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗатратНУ,
	|	0 КАК СуммаЗатратУСН
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПрослеживаемыеТовары.НомерСтроки								КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)							КАК ВидДвижения,
	|	&Период															КАК Период,
	|	&Организация													КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД									КАК РНПТ,
	|	ПрослеживаемыеТовары.ОсновноеСредство							КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД									КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ							КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.СписаниеОС2_4.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|ГДЕ
	|	ПрослеживаемыеТовары.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ПрослеживаемыеТовары.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПорядокУчетаОСБУ(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	ПорядокУчета.ОсновноеСредство                     КАК ОсновноеСредство,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеНУ,
	|
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюНУ,
	|
	|	ПорядокУчета.СтатьяРасходовБУ                             КАК СтатьяРасходовБУ,
	|	ПорядокУчета.АналитикаРасходовБУ                          КАК АналитикаРасходовБУ,
	|	ПорядокУчета.СтатьяРасходовНУ                             КАК СтатьяРасходовНУ,
	|	ПорядокУчета.АналитикаРасходовНУ                          КАК АналитикаРасходовНУ,
	|	ПорядокУчета.СтатьяРасходовАмортизационнойПремии          КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчета.АналитикаРасходовАмортизационнойПремии       КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию          КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчета.ОрганизацияПолучательРасходов                КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчета.СпособОтраженияРасходовБУ                    КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчета.СпособОтраженияРасходовНУ                    КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчета.СпособОтраженияРасходовАмортизационнойПремии КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчета.НалогообложениеНДС                           КАК НалогообложениеНДС,
	|	ПорядокУчета.АмортизационнаяГруппа                        КАК АмортизационнаяГруппа,
	|	ПорядокУчета.НедвижимоеИмущество                          КАК НедвижимоеИмущество
	|
	|ИЗ
	|	втПорядокУчетаОСБУ КАК ПорядокУчета
	|
	|ГДЕ
	|	&ОтражатьВРеглУчете
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса)

	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСБУ(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтНаработкиОбъектовЭксплуатации(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	&Период                      КАК ДатаПоследнегоИзменения,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) = 0 
	|			ТОГДА 0
	|		ИНАЧЕ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0))
	|				- (ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0))
	|				- (ТаблицаОС.СуммаСписанияБУ 
	|					- (ВЫРАЗИТЬ((ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)) 
	|						* ТаблицаОС.СуммаСписанияБУ 
	|						/ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ВЫБОР 
	|		КОГДА ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) = 0 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)
	|				- ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)
	|				- (ТаблицаОС.СуммаСписанияБУ 
	|					- (ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) 
	|						* ТаблицаОС.СуммаСписанияБУ 
	|						/ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	// ПРДляВычисленияАмортизации
	|	ВЫБОР
	|		КОГДА ТаблицаОС.СуммаСписанияПР <> 0 И (ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0)) <> 0
	|			ТОГДА ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|					- ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|						* ТаблицаОС.СуммаСписанияПР / (ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0))
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|	КОНЕЦ КАК ПРДляВычисленияАмортизации,
	|
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ             КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииОСБУ.КоэффициентУскорения                 КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации                    КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент               КАК СпециальныйКоэффициент,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл                         КАК ЛиквидационнаяСтоимость,
	|
	// ОбъемПродукцииРаботДляВычисленияАмортизации
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		- ЕСТЬNULL(НаработкиОбъектовЭксплуатации.Значение, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СрокИспользованияДляВычисленияАмортизации
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации
	|		- РАЗНОСТЬДАТ(ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ДатаПоследнегоИзменения, &Период), &Период, МЕСЯЦ) КАК СрокИспользованияДляВычисленияАмортизации
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.Ссылка = ТаблицаОС.Ссылка
	|			И СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.Ссылка = ТаблицаОС.Ссылка
	|			И АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.Организация = &Организация)
	|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНаработкиОбъектовЭксплуатации КАК НаработкиОбъектовЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаПрочиеДоходы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтОстаточнаяСтоимостьОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&ХО_СписаниеСтоимостиОС                КАК ХозяйственнаяОперация,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	ТаблицаОС.СтатьяДоходов                КАК СтатьяДоходов,
	|	ТаблицаОС.АналитикаДоходов             КАК АналитикаДоходов,
	|	
	|	ТаблицаОС.Стоимость * ТаблицаОС.СтоимостьРегл / ТаблицаОС.СтоимостьЦФ КАК Сумма,
	|
	|	ТаблицаОС.СтоимостьЦФ                  КАК СуммаРегл,
	|	
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	втОстаточнаяСтоимостьОС КАК ТаблицаОС
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И ТаблицаОС.СтоимостьЦФ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечатнойФормыОС4(МассивОбъектов) Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Регистратор,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕ ТабличнаяЧасть.ОсновноеСредство В (&ОбъектыДляКоторыхСведенияНеАктуальны) КАК СведенияАктуальны
	|
	|ПОМЕСТИТЬ втОбъектыДокументов
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК Документ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"ПервоначальныеСведенияОС", "ПервоначальныеСведенияОС", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"ПорядокУчетаОСБУ", "ПорядокУчетаОСБУ", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"МестонахождениеОС", "МестонахождениеОС", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРегистра.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаРегистра.СтоимостьРегл + ТаблицаРегистра.СтоимостьЦФ) КАК СтоимостьРасход
	|ПОМЕСТИТЬ СтоимостьОС
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТаблицаРегистра.Регистратор В (
	|		ВЫБРАТЬ
	|			втОбъектыДокументов.Регистратор
	|		ИЗ
	|			втОбъектыДокументов КАК втОбъектыДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистра.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаРегистра.АмортизацияРегл + ТаблицаРегистра.АмортизацияЦФ) КАК АмортизацияПриход
	|ПОМЕСТИТЬ АмортизацияОС
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТаблицаРегистра.Регистратор В (
	|		ВЫБРАТЬ
	|			втОбъектыДокументов.Регистратор
	|		ИЗ
	|			втОбъектыДокументов КАК втОбъектыДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК Состояние,
	|	Документ.ПричинаСписания КАК ПричинаСписания,
	|	Документ.Организация КАК Организация,
	|	Документ.Организация.КодПоОКПО КАК КодОКПО,
	|	Документ.Подразделение КАК ПодразделениеОрганизации,
	|	Документ.МоментВремени КАК МоментВремени,
	|
	|	втОбъектыДокументов.НомерСтроки КАК НомерСтроки,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОС,
	|
	|	ОбъектыЭксплуатации.ЗаводскойНомер КАК ЗаводскойНомер,
	|
	|	ОбъектыЭксплуатации.ГруппаОС КАК ГруппаОС,
	|	ОбъектыЭксплуатации.ИнвентарныйНомер КАК ИнвНомер,
	|	ОбъектыЭксплуатации.ДатаВыпуска КАК ГодВыпуска,
	|
	|	ВЫБОР
	|		КОГДА ОбъектыЭксплуатации.НаименованиеПолное = """"
	|			ТОГДА ОбъектыЭксплуатации.Наименование
	|		ИНАЧЕ ОбъектыЭксплуатации.НаименованиеПолное
	|	КОНЕЦ КАК НаимОС,
	|
	|	ВЫБОР
	|		КОГДА ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Автотранспорт,
	|
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатацию,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК НачСтоимость,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа.Порядок КАК АмортизационнаяГруппа,
	|	МестонахождениеОС.Местонахождение КАК Подразделение,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьРасход, 0) КАК Стоимость,
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияПриход, 0) КАК НачАмортизация,
	|
	|	втОбъектыДокументов.СведенияАктуальны КАК СведенияАктуальны,
	|
	|	ОбъектыЭксплуатации.ДрагоценныеМатериалы.(
	|		ДрагоценныйМатериал КАК ДМНаименование,
	|		Количество КАК ДММасса,
	|		ЕдиницаИзмерения КАК ДМЕдиницаИзмерения
	|	) КАК ДрагоценныеМатериалы,
	|
	|	Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное) КАК ЧастичнаяЛиквидация
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК Документ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокументов КАК втОбъектыДокументов
	|		ПО (втОбъектыДокументов.Ссылка = Документ.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО ОбъектыЭксплуатации.Ссылка = втОбъектыДокументов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО (ПервоначальныеСведенияОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (ПервоначальныеСведенияОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (ПорядокУчетаОСБУ.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (МестонахождениеОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (СтоимостьОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОС КАК АмортизацияОС
	|		ПО (АмортизацияОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (АмортизацияОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ 
	|	МИНИМУМ(СведенияАктуальны)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДемонтируемыеУзлы.Ссылка.ДокументОснование КАК Ссылка,
	|	ДемонтируемыеУзлы.Ссылка КАК УзелДокумент,
	|	ДемонтируемыеУзлы.Ссылка.Номер КАК УзелДокументНомер,
	|	ДемонтируемыеУзлы.Ссылка.Дата КАК УзелДокументДата,
	|	ТИПЗНАЧЕНИЯ(ДемонтируемыеУзлы.Ссылка) КАК УзелДокументНаименование,
	|	ДемонтируемыеУзлы.Номенклатура КАК УзелНоменклатура,
	|	ДемонтируемыеУзлы.Номенклатура.НаименованиеПолное КАК УзелНоменклатураНаименованиеПолное,
	|	ДемонтируемыеУзлы.Характеристика КАК УзелХарактеристика,
	|	ДемонтируемыеУзлы.Характеристика.НаименованиеПолное КАК УзелХарактеристикаНаименованиеПолное,
	|	ДемонтируемыеУзлы.Количество КАК УзелКоличество,
	|	ДемонтируемыеУзлы.Номенклатура.ЕдиницаИзмерения КАК УзелЕдиницаИзмерения,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл / ДемонтируемыеУзлы.Количество, ДемонтируемыеУзлы.Цена) КАК УзелЦена,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ДемонтируемыеУзлы.Сумма) КАК УзелСумма
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ДемонтируемыеУзлы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО ДемонтируемыеУзлы.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|			И (ДемонтируемыеУзлы.Ссылка.Организация.ВалютаРегламентированногоУчета <> &ВалютаУправленческогоУчета)
	|
	|ГДЕ
	|	ДемонтируемыеУзлы.Ссылка.Проведен
	|	И НЕ ДемонтируемыеУзлы.Ссылка.ПометкаУдаления
	|	И ДемонтируемыеУзлы.Ссылка.ДокументОснование В(&МассивОбъектов)
	|	И ДемонтируемыеУзлы.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов)
	|	И (ДемонтируемыеУзлы.Ссылка.Организация.ВалютаРегламентированногоУчета = &ВалютаУправленческогоУчета
	|			ИЛИ НЕ СуммыДокументовВВалютахУчета.Регистратор ЕСТЬ NULL )
	|
	|ИТОГИ ПО
	|	Ссылка";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
	ОбъектыДляКоторыхСведенияНеАктуальны = ВнеоборотныеАктивы.ОтложенноеФормированиеДвиженийПриФормированииПроводок(МассивОбъектов);
	ДанныеДляПредварительногоРасчетаСтоимости = ВнеоборотныеАктивы.ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(МассивОбъектов);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ОбъектыДляКоторыхСведенияНеАктуальны, 
		ДанныеДляПредварительногоРасчетаСтоимости.ОбъектыДляКоторыхСведенияНеАктуальны,
		Истина);
		
	Запрос.УстановитьПараметр("ОбъектыДляКоторыхСведенияНеАктуальны", ОбъектыДляКоторыхСведенияНеАктуальны);
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеПечатнойФормы = Новый Структура;
	ДанныеПечатнойФормы.Вставить("ПоДокументам", РезультатЗапроса[РезультатЗапроса.ВГраница()-1]);
	ДанныеПечатнойФормы.Вставить("ПоПрочимОприходованиям", РезультатЗапроса[РезультатЗапроса.ВГраница()]);
	
	Возврат ДанныеПечатнойФормы;
		
	//-- Локализация
	
КонецФункции

#КонецОбласти

#Область Заполнение

//++ Локализация

Процедура ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения)
	
	Объект.ДокументНаОсновании = Истина;
	
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Объект.ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		Объект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок);
	
	ВнеоборотныеАктивыСлужебный.ЗаполнитьОтражениеВУчете(Объект, Объект.ОС.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство"));
	
КонецПроцедуры

// Заполняет документ на основании инвентаризации ОС
//
// Параметры:
//  Объект				 - ДокументОбъект.СписаниеОС2_4	 - Документ, который надо заполнить.
//  СообщатьОбОшибках	 - Булево						 - Истина, если нужно сообщить об ошибках.
//  МассивНомеровСтрок	 - Массив						 - Строки инвентаризации.
//
Процедура ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок = Неопределено)

	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ИнвентаризацияОС.ДанныеЗаполненияНаОснованииИнвентаризации24(
							Объект.ДокументОснование,
							Объект.Дата, 
							"Списание", 
							МассивНомеровСтрок);
							
	Если РезультатЗапроса.ТабличнаяЧасть = Неопределено Или РезультатЗапроса.ТабличнаяЧасть.Пустой() Тогда
		Если СообщатьОбОшибках Тогда
			ТекстОшибки = НСтр("ru = 'В документе %1 отсутствуют строки требующие создания списания';
								|en = 'There are no lines which require writing off in the %1 document'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, Объект.ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Реквизиты.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	Объект.Подразделение = Выборка.Местонахождение;
	
	Выборка = РезультатЗапроса.ТабличнаяЧасть.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.ОС.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет документ на основании сведений о выбытии ТМЦ.
// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Заполняемый документ.
//  Основание - Структура - Сведения о выбытии ТМЦ.
Процедура ЗаполнитьНаОснованииВыбытияТМЦ(Объект, Основание)
	
	Объект.Дата = Основание.Дата;
	Объект.Организация = Основание.Организация;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииТМЦ.Ссылка КАК Ссылка,
	|	ПартииТМЦ.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ПартииТМЦ
	|
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦ
	|ГДЕ
	|	ПартииТМЦ.Ссылка В (&СписокПартий)
	|	И ПартииТМЦ.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Остатки(
	|		&Дата,
	|		Партия В
	|			(ВЫБРАТЬ
	|				ПартииТМЦ.Ссылка
	|			ИЗ
	|				ПартииТМЦ КАК ПартииТМЦ)) КАК ТМЦВЭксплуатации
	|
	|ГДЕ
	|	ТМЦВЭксплуатации.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА НЕ ПорядокУчетаОСУУ.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР
	|		КОГДА НЕ ПорядокУчетаОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|					ИЛИ ПорядокУчетаОСБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		КОГДА ПорядокУчетаОСУУ.Состояние ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтражатьВРеглУчете
	|
	|ИЗ
	|	ПартииТМЦ КАК ПартииТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Дата, 
	|			ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					ПартииТМЦ.ОсновноеСредство
	|				ИЗ
	|					ПартииТМЦ КАК ПартииТМЦ)) КАК МестонахождениеОС
	|		ПО МестонахождениеОС.ОсновноеСредство = ПартииТМЦ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Дата, 
	|			Организация = &Организация 
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					ПартииТМЦ.ОсновноеСредство
	|				ИЗ
	|					ПартииТМЦ КАК ПартииТМЦ)) КАК ПорядокУчетаОСУУ
	|		ПО ПорядокУчетаОСУУ.ОсновноеСредство = ПартииТМЦ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата, 
	|			Организация = &Организация 
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					ПартииТМЦ.ОсновноеСредство
	|				ИЗ
	|					ПартииТМЦ КАК ПартииТМЦ)) КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ПартииТМЦ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Дата, 
	|			Организация = &Организация 
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					ПартииТМЦ.ОсновноеСредство
	|				ИЗ
	|					ПартииТМЦ КАК ПартииТМЦ)) КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.ОсновноеСредство = ПартииТМЦ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|			&Дата, 
	|			Организация = &Организация 
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					ПартииТМЦ.ОсновноеСредство
	|				ИЗ
	|					ПартииТМЦ КАК ПартииТМЦ)) КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПартииТМЦ.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Основание.Организация);
	Запрос.УстановитьПараметр("СписокПартий", Основание.СписокПартий);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[Результат.ВГраница()-1].Пустой() Тогда
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОС;
	Иначе
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОСЧастичное;
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
	
		ДанныеСтроки = Объект.ОС.Добавить();
		ДанныеСтроки.ОсновноеСредство = Выборка.ОсновноеСредство;
		
		Объект.Подразделение = Выборка.Местонахождение;
		Объект.ОтражатьВУпрУчете = Выборка.ОтражатьВУпрУчете;
		Объект.ОтражатьВРеглУчете = Выборка.ОтражатьВРеглУчете;
		
		ДанныеСтроки.ЛиквидационнаяСтоимость = Выборка.ЛиквидационнаяСтоимость;
		ДанныеСтроки.ЛиквидационнаяСтоимостьРегл = Выборка.ЛиквидационнаяСтоимостьРегл;
			
	КонецЦикла;
	
	Если Основание.Основания.Количество() = 1 Тогда
		
		Объект.ДокументОснование = Основание.Основания[0];
		
	ИначеЕсли Основание.Основания.Количество() > 1 Тогда
		
		Для Каждого ДокументОснование Из Основание.Основания Цикл
			
			ДанныеСтроки = Объект.Основания.Добавить();
			ДанныеСтроки.ДокументОснование = ДокументОснование;
			
		КонецЦикла;
		
	КонецЕсли;

	ЗаполнитьСуммуСписанияНаОснованииВыбытияТМЦ(Объект);
	
КонецПроцедуры

// Заполняет сумму списания на основании выбытия ТМЦ.
// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Документ
Процедура ЗаполнитьСуммуСписанияНаОснованииВыбытияТМЦ(Объект) Экспорт

	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СписаниеОСЧастичное Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		
		ДанныеСтроки.СуммаСписанияУУ = 0;
		ДанныеСтроки.СуммаСписанияБУ = 0;
		ДанныеСтроки.СуммаСписанияНУ = 0;
		ДанныеСтроки.СуммаСписанияПР = 0;
		ДанныеСтроки.СуммаСписанияВР = 0;
		ДанныеСтроки.ЛиквидационнаяСтоимость = 0;
		ДанныеСтроки.ЛиквидационнаяСтоимостьРегл = 0;
				
	КонецЦикла;
	
	СписокОС = Новый Массив;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыбытияТМЦ = ВыбытияТМЦ(Объект);
	
	Если ВыбытияТМЦ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		&Дата,
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СтоимостьОСОстатки.СтоимостьРеглОстаток + СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.СтоимостьНУОстаток + СтоимостьОСОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУ,
	|	СтоимостьОСОстатки.СтоимостьПРОстаток + СтоимостьОСОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПР,
	|
	|	СтоимостьОСОстатки.СтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ СтоимостьНаНачалоМесяца
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|		&НачалоМесяца, 
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК СтоимостьОСОстатки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.ОсновноеСредство = СтоимостьОСОстатки.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ ПредварительнаяСтоимость
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|		&Дата, 
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК СтоимостьОСОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&ДатаПервогоВыбытия,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация 
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСУУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|			&ДатаПервогоВыбытия, 
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация 
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСУУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьРегл, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьНУ, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьПР, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.Стоимость, 0)
	|	КОНЕЦ КАК Стоимость
	|
	|ИЗ
	|	ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНаНачалоМесяца КАК СтоимостьНаНачалоМесяца
	|		ПО СтоимостьНаНачалоМесяца.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредварительнаяСтоимость КАК ПредварительнаяСтоимость
	|		ПО ПредварительнаяСтоимость.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаПервогоВыбытия", ВыбытияТМЦ[0].Период);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	ТаблицаСтоимости = Запрос.Выполнить().Выгрузить();
	ТаблицаСтоимости.Индексы.Добавить("ОсновноеСредство");
	
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСтоимость = ТаблицаСтоимости.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		
		Если СтрокаСтоимость = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаВыбытие Из ВыбытияТМЦ Цикл
			
			Если СтрокаВыбытие.ОсновноеСредство <> ДанныеСтроки.ОсновноеСредство Тогда
				Продолжить;
			КонецЕсли;

			Если СтрокаВыбытие.База <> СтрокаВыбытие.БазаДоВыбытия Тогда
				Коэффициент = ?(СтрокаВыбытие.БазаДоВыбытия <> 0, СтрокаВыбытие.База / СтрокаВыбытие.БазаДоВыбытия, 0);
			Иначе
				Коэффициент = 1;
			КонецЕсли;
				
			СуммаСписанияУУ = Окр(СтрокаСтоимость.Стоимость * Коэффициент, 2);
			СуммаСписанияБУ = Окр(СтрокаСтоимость.СтоимостьРегл * Коэффициент, 2);
			СуммаСписанияНУ = Окр(СтрокаСтоимость.СтоимостьНУ * Коэффициент, 2);
			СуммаСписанияПР = Окр(СтрокаСтоимость.СтоимостьПР * Коэффициент, 2);
			СуммаСписанияЛСБУ = Окр(СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл * Коэффициент, 2);
			СуммаСписанияЛСУУ = Окр(СтрокаСтоимость.ЛиквидационнаяСтоимость * Коэффициент, 2);
			
			СтрокаСтоимость.Стоимость = СтрокаСтоимость.Стоимость - СуммаСписанияУУ;
			СтрокаСтоимость.СтоимостьРегл = СтрокаСтоимость.СтоимостьРегл - СуммаСписанияБУ;
			СтрокаСтоимость.СтоимостьНУ = СтрокаСтоимость.СтоимостьНУ - СуммаСписанияНУ;
			СтрокаСтоимость.СтоимостьПР = СтрокаСтоимость.СтоимостьПР - СуммаСписанияПР;
			
			СтрокаСтоимость.ЛиквидационнаяСтоимость = СтрокаСтоимость.ЛиквидационнаяСтоимость - СуммаСписанияЛСУУ;
			СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл = СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл - СуммаСписанияЛСБУ;
			
			Если СтрокаВыбытие.Учесть Тогда
			
				Если Объект.ОтражатьВУпрУчете Тогда
					ДанныеСтроки.СуммаСписанияУУ = ДанныеСтроки.СуммаСписанияУУ + СуммаСписанияУУ;
					ДанныеСтроки.ЛиквидационнаяСтоимость = СтрокаСтоимость.ЛиквидационнаяСтоимость;
				КонецЕсли;
				
				Если Объект.ОтражатьВРеглУчете Тогда
					
					ДанныеСтроки.СуммаСписанияБУ = ДанныеСтроки.СуммаСписанияБУ + СуммаСписанияБУ;
					ДанныеСтроки.СуммаСписанияНУ = ДанныеСтроки.СуммаСписанияНУ + СуммаСписанияНУ;
					ДанныеСтроки.СуммаСписанияПР = ДанныеСтроки.СуммаСписанияПР + СуммаСписанияПР;
					
					ДанныеСтроки.СуммаСписанияВР = 
						ДанныеСтроки.СуммаСписанияБУ
						- ДанныеСтроки.СуммаСписанияНУ
						- ДанныеСтроки.СуммаСписанияПР;
						
					ДанныеСтроки.ЛиквидационнаяСтоимостьРегл = СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл;
					
				КонецЕсли;
		
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

//++ Локализация

#Область Прочее

Функция ПолноеИмяОбъекта()

	Возврат "Документ.СписаниеОС2_4";

КонецФункции

Функция ВыбытияТМЦ(Объект)

	СписокОС = Новый Массив;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
	СписокОснований = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ДокументОснование)
		И (ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
			ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.СписаниеИзЭксплуатации")) Тогда
				
		СписокОснований.Добавить(Объект.ДокументОснование);
	КонецЕсли;
	Для Каждого ДанныеСтроки Из Объект.Основания Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ДокументОснование)
			И (ТипЗнч(ДанныеСтроки.ДокументОснование) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
				ИЛИ ТипЗнч(ДанныеСтроки.ДокументОснование) = Тип("ДокументСсылка.СписаниеИзЭксплуатации")) Тогда
					
			СписокОснований.Добавить(ДанныеСтроки.ДокументОснование);
		КонецЕсли;
	КонецЦикла;
	
	НачалоПериода = НачалоМесяца(Объект.Дата);
	КонецПериода = КонецДня(Объект.Дата);
		
	Если СписокОснований.Количество() <> 0 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МИНИМУМ(ДанныеДокумента.НачалоПериода), &НачалоПериода) КАК НачалоПериода,
		|	ЕСТЬNULL(МАКСИМУМ(ДанныеДокумента.КонецПериода), &КонецПериода) КАК КонецПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		МИНИМУМ(ДанныеДокумента.Дата) КАК НачалоПериода,
		|		МАКСИМУМ(ДанныеДокумента.Дата) КАК КонецПериода
		|	ИЗ
		|		Документ.ПрочееОприходованиеТоваров КАК ДанныеДокумента
		|	ГДЕ
		|		ДанныеДокумента.Ссылка В (&СписокОснований)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		МИНИМУМ(ДанныеДокумента.Дата) КАК НачалоПериода,
		|		МАКСИМУМ(ДанныеДокумента.Дата) КАК КонецПериода
		|	ИЗ
		|		Документ.СписаниеИзЭксплуатации КАК ДанныеДокумента
		|	ГДЕ
		|		ДанныеДокумента.Ссылка В (&СписокОснований)
		|
		|	) КАК ДанныеДокумента";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("СписокОснований", СписокОснований);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			НачалоПериода = НачалоМесяца(Выборка.НачалоПериода);
			
			Если НачалоПериода > КонецПериода Тогда
				КонецПериода = Выборка.КонецПериода;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииТМЦ.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ПартииТМЦ
	|
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦ
	|ГДЕ
	|	ПартииТМЦ.ОсновноеСредство В (&СписокОС)
	|	И ПартииТМЦ.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатации.Период КАК Период,
	|	ТМЦВЭксплуатации.Регистратор КАК Регистратор,
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство КАК ОсновноеСредство,
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|
	|	СУММА(ТМЦВЭксплуатации.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВыбытиеТМЦ
	|
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации КАК ТМЦВЭксплуатации
	|ГДЕ
	|	ТМЦВЭксплуатации.Активность
	|	И ТМЦВЭксплуатации.Организация = &Организация
	|	И ТМЦВЭксплуатации.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|	И ТМЦВЭксплуатации.Партия В
	|			(ВЫБРАТЬ
	|				ПартииТМЦ.Ссылка
	|			ИЗ
	|				ПартииТМЦ КАК ПартииТМЦ)
	|
	|	И ТМЦВЭксплуатации.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеИзЭксплуатации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТМЦВЭксплуатации.Период,
	|	ТМЦВЭксплуатации.Регистратор,
	|	ТМЦВЭксплуатации.Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство,
	|	ТМЦВЭксплуатации.Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика,
	|	ТМЦВЭксплуатации.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|
	|	ТМЦВЭксплуатации.КоличествоОстаток КАК Количество
	|
	|ПОМЕСТИТЬ ОстаткиТМЦ
	|
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Остатки(
	|		&НачалоПериода,
	|		Организация = &Организация
	|			И Партия В
	|			(ВЫБРАТЬ
	|				ПартииТМЦ.Ссылка
	|			ИЗ
	|				ПартииТМЦ КАК ПартииТМЦ)) КАК ТМЦВЭксплуатации
	|
	|ГДЕ
	|	ТМЦВЭксплуатации.КоличествоОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СписаниеОС.Дата) КАК Период
	|
	|ПОМЕСТИТЬ ПредыдущиеСписания
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = СписаниеОС.Ссылка
	|
	|ГДЕ
	|	СписаниеОС.Дата >= &НачалоПериода
	|	И СписаниеОС.Дата < &КонецПериода
	|	И ТаблицаОС.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ВыбытиеТМЦ.ОсновноеСредство
	|			ИЗ 
	|				ВыбытиеТМЦ КАК ВыбытиеТМЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОС.ОсновноеСредство
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТМЦВЭксплуатации.ОсновноеСредство КАК ОсновноеСредство,
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|
	|	УчетнаяПолитика.ВидЦеныТМЦВЭксплуатации КАК ВидЦены,
	|	ВЫРАЗИТЬ(ТМЦВЭксплуатации.Организация КАК Справочник.Организации).ВалютаРегламентированногоУчета КАК Валюта,
	|
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|
	|ПОМЕСТИТЬ ТМЦВЭксплуатации_Все
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыбытиеТМЦ.Организация КАК Организация,
	|		ВыбытиеТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|		ВыбытиеТМЦ.Номенклатура КАК Номенклатура,
	|		ВыбытиеТМЦ.Характеристика КАК Характеристика,
	|		ВыбытиеТМЦ.Серия КАК Серия
	|	ИЗ
	|		ВыбытиеТМЦ КАК ВыбытиеТМЦ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ОстаткиТМЦ.Организация КАК Организация,
	|		ОстаткиТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|		ОстаткиТМЦ.Номенклатура КАК Номенклатура,
	|		ОстаткиТМЦ.Характеристика КАК Характеристика,
	|		ОстаткиТМЦ.Серия КАК Серия
	|	ИЗ
	|		ОстаткиТМЦ КАК ОстаткиТМЦ
	|
	|	) КАК ТМЦВЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&Дата) КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = ТМЦВЭксплуатации.Организация.ГоловнаяОрганизация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ИменаКолонок = ЦеныПредприятияЗаполнениеСервер.ИменаКолонокВременнойТаблицыТоваров();
	ИменаКолонок.ИмяКолонкиНомерСтроки = "НомерСтроки";
	ИменаКолонок.ИмяКолонкиСерия = "Серия";
	ИменаКолонок.ИмяКолонкиВидЦены = "ВидЦены";
	ИменаКолонок.ИмяКолонкиВалюта = "Валюта";
	
	ТекстЗапроса = ЦеныПредприятияЗаполнениеСервер.ПолучитьТекстЗапросаПолученияЦенДляВставки(
					"ТМЦВЭксплуатации_Все", "ТМЦВЭксплуатации_Цена_БезОС", ИменаКолонок);
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ 
	|	ТМЦВЭксплуатации_Все.ОсновноеСредство КАК ОсновноеСредство,
	|	ТМЦВЭксплуатации_Все.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации_Все.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации_Все.Серия КАК Серия,
	|	ТМЦВЭксплуатации_Цена_БезОС.Цена КАК Цена
	|
	|ПОМЕСТИТЬ ТМЦВЭксплуатации_Цена
	|ИЗ
	|	ТМЦВЭксплуатации_Все КАК ТМЦВЭксплуатации_Все
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТМЦВЭксплуатации_Цена_БезОС
	|		ПО ТМЦВЭксплуатации_Цена_БезОС.НомерСтроки = ТМЦВЭксплуатации_Все.НомерСтроки
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТМЦВЭксплуатации_Все.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТМЦВЭксплуатации_НетЦен
	|
	|ИЗ
	|	ТМЦВЭксплуатации_Все КАК ТМЦВЭксплуатации_Все
	|ГДЕ
	|	ИСТИНА В (
	|		ВЫБРАТЬ
	|			ИСТИНА
	|		ИЗ
	|			ТМЦВЭксплуатации_Цена КАК ТМЦВЭксплуатации_Цена
	|		ГДЕ
	|			ТМЦВЭксплуатации_Цена.ОсновноеСредство = ТМЦВЭксплуатации_Все.ОсновноеСредство
	|			И ТМЦВЭксплуатации_Цена.Цена = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ.Период КАК Период,
	|	ВыбытиеТМЦ.Регистратор КАК Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВыбытиеТМЦ.Количество) КАК Количество,
	|	СУММА(ВыбытиеТМЦ.Количество) КАК База
	|	
	|ПОМЕСТИТЬ ВыбытиеТМЦ_База
	|
	|ИЗ
	|	ВыбытиеТМЦ КАК ВыбытиеТМЦ
	|
	|ГДЕ
	|	ВыбытиеТМЦ.ОсновноеСредство В (
	|		ВЫБРАТЬ
	|			ТМЦВЭксплуатации_НетЦен.ОсновноеСредство
	|		ИЗ
	|			ТМЦВЭксплуатации_НетЦен КАК ТМЦВЭксплуатации_НетЦен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеТМЦ.Период,
	|	ВыбытиеТМЦ.Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ.Период КАК Период,
	|	ВыбытиеТМЦ.Регистратор КАК Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВыбытиеТМЦ.Количество) КАК Количество,
	|	СУММА(ВыбытиеТМЦ.Количество * ЕСТЬNULL(ТМЦВЭксплуатации_Цена.Цена, 0)) КАК База
	|
	|ИЗ
	|	ВыбытиеТМЦ КАК ВыбытиеТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТМЦВЭксплуатации_Цена КАК ТМЦВЭксплуатации_Цена
	|		ПО ТМЦВЭксплуатации_Цена.ОсновноеСредство = ВыбытиеТМЦ.ОсновноеСредство
	|			И ТМЦВЭксплуатации_Цена.Номенклатура = ВыбытиеТМЦ.Номенклатура
	|			И ТМЦВЭксплуатации_Цена.Характеристика = ВыбытиеТМЦ.Характеристика
	|			И ТМЦВЭксплуатации_Цена.Серия = ВыбытиеТМЦ.Серия
	|
	|ГДЕ
	|	НЕ ВыбытиеТМЦ.ОсновноеСредство В (
	|		ВЫБРАТЬ
	|			ТМЦВЭксплуатации_НетЦен.ОсновноеСредство
	|		ИЗ
	|			ТМЦВЭксплуатации_НетЦен КАК ТМЦВЭксплуатации_НетЦен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеТМЦ.Период,
	|	ВыбытиеТМЦ.Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ОстаткиТМЦ.Количество) КАК Количество,
	|	СУММА(ОстаткиТМЦ.Количество) КАК База
	|	
	|ПОМЕСТИТЬ ОстаткиТМЦ_База
	|
	|ИЗ
	|	ОстаткиТМЦ КАК ОстаткиТМЦ
	|ГДЕ
	|	ОстаткиТМЦ.ОсновноеСредство В (
	|		ВЫБРАТЬ
	|			ТМЦВЭксплуатации_НетЦен.ОсновноеСредство
	|		ИЗ
	|			ТМЦВЭксплуатации_НетЦен КАК ТМЦВЭксплуатации_НетЦен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТМЦ.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ОстаткиТМЦ.Количество) КАК Количество,
	|	СУММА(ОстаткиТМЦ.Количество * ЕСТЬNULL(ТМЦВЭксплуатации_Цена.Цена, 0)) КАК База
	|
	|ИЗ
	|	ОстаткиТМЦ КАК ОстаткиТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТМЦВЭксплуатации_Цена КАК ТМЦВЭксплуатации_Цена
	|		ПО ТМЦВЭксплуатации_Цена.ОсновноеСредство = ОстаткиТМЦ.ОсновноеСредство
	|			И ТМЦВЭксплуатации_Цена.Номенклатура = ОстаткиТМЦ.Номенклатура
	|			И ТМЦВЭксплуатации_Цена.Характеристика = ОстаткиТМЦ.Характеристика
	|			И ТМЦВЭксплуатации_Цена.Серия = ОстаткиТМЦ.Серия
	|
	|ГДЕ
	|	НЕ ОстаткиТМЦ.ОсновноеСредство В (
	|		ВЫБРАТЬ
	|			ТМЦВЭксплуатации_НетЦен.ОсновноеСредство
	|		ИЗ
	|			ТМЦВЭксплуатации_НетЦен КАК ТМЦВЭксплуатации_НетЦен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТМЦ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ_База.Регистратор КАК Регистратор,
	|	ВыбытиеТМЦ_База.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ПредыдущееВыбытиеТМЦ_База.Количество) КАК Количество,
	|	СУММА(ПредыдущееВыбытиеТМЦ_База.База) КАК База
	|
	|ПОМЕСТИТЬ ПредыдущееВыбытиеТМЦ_База
	|
	|ИЗ
	|	ВыбытиеТМЦ_База КАК ВыбытиеТМЦ_База
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеТМЦ_База КАК ПредыдущееВыбытиеТМЦ_База
	|		ПО ПредыдущееВыбытиеТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|			И ПредыдущееВыбытиеТМЦ_База.Регистратор <> ВыбытиеТМЦ_База.Регистратор
	|			И ПредыдущееВыбытиеТМЦ_База.Период < ВыбытиеТМЦ_База.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеТМЦ_База.Регистратор,
	|	ВыбытиеТМЦ_База.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ_База.Период КАК Период,
	|	ВыбытиеТМЦ_База.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ВыбытиеТМЦ_База.Количество КАК Количество,
	|	ВыбытиеТМЦ_База.База КАК База,
	|
	|	ЕСТЬNULL(ОстаткиТМЦ_База.Количество, 0) - ЕСТЬNULL(ПредыдущееВыбытиеТМЦ_База.Количество, 0) КАК КоличествоДоВыбытия,
	|	ЕСТЬNULL(ОстаткиТМЦ_База.База, 0) - ЕСТЬNULL(ПредыдущееВыбытиеТМЦ_База.База, 0) КАК БазаДоВыбытия,
	|
	|	ВЫБОР
	|		КОГДА &ИспользоватьСписокОснований
	|			ТОГДА ВыбытиеТМЦ_База.Регистратор В (&СписокОснований)
	|		ИНАЧЕ ВыбытиеТМЦ_База.Период > ЕСТЬNULL(ПредыдущиеСписания.Период, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ КАК Учесть
	|
	|ИЗ
	|	ВыбытиеТМЦ_База КАК ВыбытиеТМЦ_База
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредыдущиеСписания КАК ПредыдущиеСписания
	|		ПО ПредыдущиеСписания.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТМЦ_База КАК ОстаткиТМЦ_База
	|		ПО ОстаткиТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредыдущееВыбытиеТМЦ_База КАК ПредыдущееВыбытиеТМЦ_База
	|		ПО ПредыдущееВыбытиеТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|			И ПредыдущееВыбытиеТМЦ_База.Регистратор = ВыбытиеТМЦ_База.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("СписокОснований", СписокОснований);
	Запрос.УстановитьПараметр("ИспользоватьСписокОснований", СписокОснований.Количество() <> 0);
	Запрос.УстановитьПараметр("БазоваяВалюта", ЗначениеНастроекПовтИсп.БазоваяВалютаПоУмолчанию());
	
	ВыбытияТМЦ = Запрос.Выполнить().Выгрузить();
	
	Возврат ВыбытияТМЦ;
	
КонецФункции

#КонецОбласти

//-- Локализация

#КонецОбласти
