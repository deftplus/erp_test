
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- НЕ УТ
	МеханизмыДокумента.Добавить("ТМЦВЭксплуатации");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Добавляет в текст запроса реквизиты табличной части "Товары".
//  Реквизиты добавляются вместо параметра "&ВнутреннееПотреблениеТоваров_ТоварыЛокализация".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыТаблицыТовары(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	Если ИмяТаблицы = Неопределено Тогда
		ПоляЛокализация = 
		"	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)             КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)      КАК КатегорияЭксплуатации,
		|	ЗНАЧЕНИЕ(Справочник.ПартииТМЦВЭксплуатации.ПустаяСсылка)     КАК Партия,
		|	""""                                                         КАК ИнвентарныйНомер";
	Иначе
		ПоляЛокализация = 
		"	Таблица.ФизическоеЛицо          КАК ФизическоеЛицо,
		|	Таблица.КатегорияЭксплуатации   КАК КатегорияЭксплуатации,
		|	Таблица.Партия                  КАК Партия,
		|	Таблица.ИнвентарныйНомер        КАК ИнвентарныйНомер";
	КонецЕсли; 
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВнутреннееПотреблениеТоваров_ТоварыЛокализация", ПоляЛокализация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	//++ Локализация
	
	//++ НЕ УТ
	
	ТМЦВЭксплуатацииСервер.ПроверитьПередачуВЭксплуатацию(Объект, МассивНепроверяемыхРеквизитов, Отказ);
	
	//-- НЕ УТ
	
	//-- Локализация
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияПродукцииВЕТИС") Тогда	
		ИнтеграцияВЕТИСУТ.ЗаполнитьВнутреннееПотреблениеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС(
			Объект,
			ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВыводИзОборотаИСМП") Тогда	
		ИнтеграцияИСМПУТ.ЗаполнитьВнутреннееПотреблениеТоваровНаОснованииВыводаИзОборотаИСМП(
			Объект,
			ДанныеЗаполнения);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	ТМЦВЭксплуатацииСервер.ВнутреннееПотреблениеТоваров_ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения);
	
	// ИнтеграцияГИСМ
	ЗаполнитьЗначенияСвойств(Объект, ИнтеграцияГИСМ_УТ.ЗаполнитьПризнакиЕстьМаркируемаяПродукцияИЕстьКиЗ(Объект, "Серии"));
	// Конец ИнтеграцияГИСМ
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ВнутреннееПотреблениеТоваров - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		СтрокаТЧ.Партия = Справочники.ПартииТМЦВЭксплуатации.ПустаяСсылка();
		//++ НЕ УТ
		СтрокаТЧ.ИнвентарныйНомер = "";
		//-- НЕ УТ
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)';
											|en = 'Certificate of stored inventory return (MH-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	//++ НЕ УТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ7";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость учета выдачи спецодежды (МБ-7)';
										|en = 'Overalls issue accounting list (MB-7)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	Если ПравоДоступа("Изменение", Метаданные.Документы.ВнутреннееПотреблениеТоваров) Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ОС15";
		КомандаПечати.Представление = НСтр("ru = 'Акт о приемке-передаче оборудования (ОС-15)';
											|en = 'Certificate of equipment receiving and handover (FA-15)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;
	//-- НЕ УТ
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)';
										|en = 'Requisition note (M-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//++ НЕ УТ
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.ПечатьЭтикетокТМЦВЭксплуатации) Тогда
	
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ТМЦВЭксплуатацииКлиент.ПечатьЭтикетокТМЦВЭксплуатацииИзДокумента";
		КомандаПечати.МенеджерПечати = "Документ.ВнутреннееПотреблениеТоваров";
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки';
											|en = 'Labels'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			КомандаПечати,
			"ХозяйственнаяОперация",
			Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию,
			ВидСравнения.Равно);
			
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Внутреннее потребление товаров".
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - таблица команд.
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
Функция ДобавитьКомандуСоздатьНаОснованииПередачаВЭксплуатацию(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВнутреннееПотреблениеТоваров) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление") Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.ПередачаВЭксплуатациюНаОсновании";
		КомандаСоздатьНаОсновании.Идентификатор = "ПередачаВЭксплуатациюНаОсновании";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Передача в эксплуатацию';
														|en = 'Commissioning'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "НеБазоваяВерсия";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	//++ НЕ УТ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ7") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МБ7",
			НСтр("ru = 'Ведомость учета выдачи спецодежды (МБ7)';
				|en = 'Overalls issue accounting list (MB7)'"),
			ПечатьМБ7(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.ВнутреннееПотреблениеТоваров.ПФ_MXL_МБ7_ru");
		
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС15") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОС15",
			НСтр("ru = 'Акт о приемке-передаче оборудования в монтаж (ОС-15)';
				|en = 'Certificate of equipment receiving and handover for installation (FA-15)'"),
			ПечатьОС15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"ОбщийМакет.ПФ_MXL_ОС15_ru");
		
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
КонецПроцедуры

//++ Локализация

// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Номер, Документ.Номер) КАК Номер,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК Дата,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаПолученияСебестоимости,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Ссылка.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Ссылка.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Ссылка.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК Склад,
	|	АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11();
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов.
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]);
	
КонецФункции

Функция ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11()

	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	Если ИспользуетсяЦенообразование25 Тогда
		ДатаПереходаНаЦенообразование25 = ЦенообразованиеВызовСервера.ДатаПереходаНаЦенообразованиеВерсии25();
	КонецЕсли;
	
	Если ИспользуетсяЦенообразование25 Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(ВЫБОР
		|		КОГДА
		|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
		|		ИНАЧЕ Товары.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
		|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
		|	ЕСТЬNULL(ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
		|		ИНАЧЕ Товары.Серия.СерияНоменклатурыДляЦенообразования
		|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ИНАЧЕ Товары.Упаковка
		|	КОНЕЦ КАК УпаковкаЦО,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	Товары.Ссылка.ВидЦены КАК ВидЦены,
		|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВидыНоменклатуры.Ссылка = Товары.Номенклатура.ВидНоменклатуры)
		|ГДЕ
		|	Товары.Ссылка В (&МассивДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка
		|ПОМЕСТИТЬ Цены
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|			И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	ГДЕ
		|		Товары.ДатаПолученияЦены < &ДатаПереходаНаЦенообразование25
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
		|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|		И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО КАК ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО КАК СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО КАК УпаковкаЦО,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И Товары.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
		|			И Товары.СерияЦО = ЦеныНоменклатуры.СерияЦО
		|			И Товары.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
		|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|			И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	ГДЕ
		|		Товары.ДатаПолученияЦены >= &ДатаПереходаНаЦенообразование25
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
		|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|		И ПериодыЦенНоменклатуры.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
		|		И ПериодыЦенНоменклатуры.СерияЦО = ЦеныНоменклатуры.СерияЦО
		|		И ПериодыЦенНоменклатуры.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыКурсовВалютПоДокументам.Ссылка,
		|	КурсыВалют.Валюта,
		|	КурсыВалют.КурсЧислитель,
		|	КурсыВалют.КурсЗнаменатель
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документы.Ссылка КАК Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
		|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
		|		КурсыВалют.Валюта КАК Валюта
		|	ИЗ
		|		Документ.ВнутреннееПотреблениеТоваров КАК Документы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
		|			И Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
		|			И Документы.Дата >= КурсыВалют.Период
		|	ГДЕ
		|		Документы.Ссылка В (&МассивДокументов)
		|	СГРУППИРОВАТЬ ПО
		|		Документы.Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета,
		|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
		|		И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
		|		И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставления,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
		|	Документы.Организация КАК Организация,
		|	Документы.Организация.Префикс КАК Префикс,
		|	Документы.Подразделение КАК Подразделение,
		|	Документы.ВидЦены КАК УчетныйВидЦены,
		|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК Документы
		|ГДЕ
		|	Документы.Ссылка В (&МассивДокументов)
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.Ссылка.Склад КАК Склад,
		|	ВЫРАЗИТЬ(Товары.Ссылка.Склад КАК Справочник.Склады).ТекущийОтветственный КАК КладовщикОтправитель,
		|	ВЫРАЗИТЬ(Товары.Ссылка.Склад КАК Справочник.Склады).ТекущаяДолжностьОтветственного КАК
		|		ДолжностьКладовщикаОтправителя,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
		|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
		|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Товары.Упаковка.Наименование
		|	КОНЕЦ КАК Упаковка,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1)
		|		КАК ЧИСЛО(31, 2))) * Товары.КоличествоУпаковок КАК Сумма,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1)
		|		КАК ЧИСЛО(31, 2)) КАК Цена,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		|		ПО Товары.Ссылка = КурсыВалют.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
		|		ПО Товары.Ссылка = Цены.Ссылка
		|		И Товары.НомерСтроки = Цены.НомерСтроки
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(ДолжностьКладовщикаОтправителя),
		|	МАКСИМУМ(КладовщикОтправитель)
		|ПО
		|	Ссылка,
		|	Склад");
		Запрос.УстановитьПараметр("ДатаПереходаНаЦенообразование25", ДатаПереходаНаЦенообразование25);
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
		|	Товары.Ссылка.ВидЦены КАК ВидЦены,
		|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка В(&МассивДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка
		|ПОМЕСТИТЬ Цены
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
		|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыКурсовВалютПоДокументам.Ссылка,
		|	КурсыВалют.Валюта,
		|	КурсыВалют.КурсЧислитель,
		|	КурсыВалют.КурсЗнаменатель
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документы.Ссылка КАК Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
		|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
		|		КурсыВалют.Валюта КАК Валюта
		|	ИЗ
		|		Документ.ВнутреннееПотреблениеТоваров КАК Документы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
		|				И Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
		|				И Документы.Дата >= КурсыВалют.Период
		|	ГДЕ
		|		Документы.Ссылка В(&МассивДокументов)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Документы.Ссылка,
		|		Документы.Организация.ВалютаРегламентированногоУчета,
		|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
		|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
		|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
		|			И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставления,
		|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
		|	Документы.Организация КАК Организация,
		|	Документы.Организация.Префикс КАК Префикс,
		|	Документы.Подразделение КАК Подразделение,
		|	Документы.ВидЦены КАК УчетныйВидЦены,
		|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК Документы
		|ГДЕ
		|	Документы.Ссылка В(&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.Ссылка.Склад КАК Склад,
		|	ВЫРАЗИТЬ(Товары.Ссылка.Склад КАК Справочник.Склады).ТекущийОтветственный КАК КладовщикОтправитель,
		|	ВЫРАЗИТЬ(Товары.Ссылка.Склад КАК Справочник.Склады).ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
		|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
		|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
		|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
		|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
		|		ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Товары.Упаковка.Наименование
		|	КОНЕЦ КАК Упаковка,
		|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
		|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31,2))) * Товары.КоличествоУпаковок КАК Сумма,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31,2)) КАК Цена,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		|		ПО Товары.Ссылка = КурсыВалют.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
		|		ПО Товары.Ссылка = Цены.Ссылка
		|			И Товары.НомерСтроки = Цены.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(ДолжностьКладовщикаОтправителя), МАКСИМУМ(КладовщикОтправитель)
		|ПО
		|	Ссылка,
		|	Склад");
		
	КонецЕсли;
	
	Возврат Запрос
	
КонецФункции

//-- Локализация
#КонецОбласти

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра, СинонимТаблицыДокумента, ВЗапросеЕстьИсточник, ПереопределениеРасчетаПараметров) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапроса = Неопределено;
	
	//++ Локализация

	//++ НЕ УТ
	Если ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоНМА" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоНМА(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаНМА";
	КонецЕсли;
	//-- НЕ УТ	
	
	//-- Локализация
	
	Возврат ТекстЗапроса; 
	
КонецФункции

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаТаблицаТоварыОрганизаций(ТекстЗапроса) Экспорт

	ХозяйственнаяОперация_Локализация = "&ХозяйственнаяОперация";
	
	//++ Локализация
	
	ХозяйственнаяОперация_Локализация =
	"ВЫБОР
	//++ НЕ УТ
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|		 И ТаблицаВидыЗапасов.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		 И ТаблицаВидыЗапасов.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		 И (&Период < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|				ИЛИ &Период < &ДатаНачалаДействияФСБУ5
	|					И НЕ &СписатьСтоимостьТМЦВЭксплуатации)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ)
	//-- НЕ УТ
	|		
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	//++ НЕ УТ
	|			И (ТаблицаВидыЗапасов.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|				ИЛИ &Период >= &ДатаНачалаДействияФСБУ5
	|				ИЛИ &Период >= ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|						И &СписатьСтоимостьТМЦВЭксплуатации)
	//-- НЕ УТ
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	ИНАЧЕ &ХозяйственнаяОперация
	|КОНЕЦ";
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХозяйственнаяОперация_Локализация", ХозяйственнаяОперация_Локализация);
	
КонецПроцедуры

//++ Локализация
//++ НЕ УТ
Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапроса = "";
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		Документы.ВнутреннееПотреблениеТоваров.ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ТаблицаВидыЗапасов.Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	ТаблицаВидыЗапасов.НомерГТД КАК РНПТ,
		|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.АналитикаРасходов КАК ОсновноеСредство
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|ГДЕ
		|	ТаблицаВидыЗапасов.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
		|	И ТИПЗНАЧЕНИЯ(ТаблицаВидыЗапасов.АналитикаРасходов)= ТИП(Справочник.ОбъектыЭксплуатации)
		|	И ТаблицаВидыЗапасов.НомерГТД.РНПТ
		|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ
//-- Локализация

Процедура ДополнитьТекстЗапросаТаблицаСебестоимостьТоваров(ТекстЗапроса, ИмяТаблицы = "Строки") Экспорт

	ХозяйственнаяОперация_Условие1 = "ЛОЖЬ";
	ХозяйственнаяОперация_Значение1 = "НЕОПРЕДЕЛЕНО";
	ХозяйственнаяОперация_Условие2 = "ЛОЖЬ";
	ХозяйственнаяОперация_Значение2 = "НЕОПРЕДЕЛЕНО";
	НастройкаХозяйственнойОперации_Значение1 = "НЕОПРЕДЕЛЕНО";
	НастройкаХозяйственнойОперации_Значение2 = "НЕОПРЕДЕЛЕНО";
	
	//++ Локализация
	
	//++ НЕ УТ
	ХозяйственнаяОперация_Условие1 = 
	"&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|		 И Строки.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		 И Строки.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		 И (&Период < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|			ИЛИ &Период < &ДатаНачалаДействияФСБУ5
	|				И НЕ &СписатьСтоимостьТМЦВЭксплуатации)
	|";
	
	ХозяйственнаяОперация_Значение1 			= "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ)";
	НастройкаХозяйственнойОперации_Значение1 	= "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаВЭксплуатацию)";
	//-- НЕ УТ
	
	ХозяйственнаяОперация_Условие2 = 
		"&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	//++ НЕ УТ
		|И (Строки.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
		|	ИЛИ &Период >= &ДатаНачалаДействияФСБУ5
		|	ИЛИ &Период >= ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
		|		И &СписатьСтоимостьТМЦВЭксплуатации)
	//-- НЕ УТ
		|";
	ХозяйственнаяОперация_Значение2 			= "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)";
	НастройкаХозяйственнойОперации_Значение2 	= "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеТоваровПоТребованию)";
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХозяйственнаяОперация_Условие1", ХозяйственнаяОперация_Условие1);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХозяйственнаяОперация_Значение1", ХозяйственнаяОперация_Значение1);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХозяйственнаяОперация_Условие2", ХозяйственнаяОперация_Условие2);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХозяйственнаяОперация_Значение2", ХозяйственнаяОперация_Значение2);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НастройкаХозяйственнойОперации_Значение1", НастройкаХозяйственнойОперации_Значение1);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НастройкаХозяйственнойОперации_Значение2", НастройкаХозяйственнойОперации_Значение2);
	
	Если ИмяТаблицы <> "Строки" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Строки.", ИмяТаблицы + ".");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьЗначенияПараметровПроведения(ЗначенияПараметровПроведения, Реквизиты) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	
	ЗначенияПараметровПроведения.Вставить("ДатаНачалаДействияФСБУ5", РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019());
	
	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить(
			"СписатьСтоимостьТМЦВЭксплуатации", 
			УчетнаяПолитика.СписатьСтоимостьТМЦВЭксплуатации(Реквизиты.Организация, Реквизиты.Период));
	КонецЕсли;
	
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровКонтрагентов());
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровНаРасходы());
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровНаПрочиеАктивы()); // Поддержка статей расходов с направлением "НаПрочиеАктивы"
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровНаСтатьиАктивовПассивов());
	//++ НЕ УТКА
	ТекстыОтражения.Добавить(ТекстСписаниеТоваровДавальца());
	ТекстыОтражения.Добавить(ТекстСписаниеПродукцииДавальца());
	//-- НЕ УТКА
	ТекстыОтражения.Добавить(ТекстВключениеИсключениеНДСВСтоимостьПрочихАктивов());
	ТекстыОтражения.Добавить(ТекстВключениеИсключениеНДСВРасходы());
	
	ТекстыОтражения.Добавить(ТекстПередачаВЭксплуатациюПоСтаройСхеме());
	ТекстыОтражения.Добавить(ТекстПередачаВЭксплуатацию());
	ТекстыОтражения.Добавить(ТекстСписаниеВЭксплуатации());
	ТекстыОтражения.Добавить(ТекстПередачаВЭксплуатациюЗаБаланс());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатьяРасходов КАК СтатьяРасходов,
	|	Товары.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Товары.НастройкаСчетовУчета.СчетУчета КАК СчетУчета,
	|	Товары.НастройкаСчетовУчета.Субконто1 КАК Субконто1,
	|	Товары.НастройкаСчетовУчета.Субконто2 КАК Субконто2,
	|	Товары.НастройкаСчетовУчета.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ СчетаУчетаПрочихАктивов
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
	|	ПО
	|		ДокументыКОтражению.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|";
	
	Возврат ТекстЗапроса;
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Вызывается после отражения документов в регл. учете для выполнения следующих действий:
// 1. Формирует задания к погашению стоимости ТМЦ, если в регл учете отражена передача в эксплуатацию.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - содержит сформированные проводки.
//
Процедура ДополнительнаяОбработкаПриОтраженииДокумента(МенеджерВременныхТаблиц) Экспорт

	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОтражению.Ссылка                                  КАК Документ,
	|	ДОБАВИТЬКДАТЕ(ВнутреннееПотреблениеТоваров.Дата, МЕСЯЦ, 1)  КАК Месяц,
	|	ВнутреннееПотреблениеТоваров.Организация                    КАК Организация,
	|	ПакетыПогашенияСтоимостиТМЦ.НомерПакета                     КАК НомерПакета
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО (ВнутреннееПотреблениеТоваров.Ссылка = ДокументыКОтражению.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ПО (ВнутреннееПотреблениеТоваровТовары.Ссылка = ВнутреннееПотреблениеТоваров.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО (ПакетыПогашенияСтоимостиТМЦ.Организация = ВнутреннееПотреблениеТоваров.Организация)
	|			И (ПакетыПогашенияСтоимостиТМЦ.Партия = ВнутреннееПотреблениеТоваровТовары.Партия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО ВнутреннееПотреблениеТоваров.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|			И ВнутреннееПотреблениеТоваров.Организация = УчетнаяПолитикаОрганизаций.Организация
	|
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|	И ВнутреннееПотреблениеТоваровТовары.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ В (
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоСроку), 
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоНаработке))
	|
	|	И (ВнутреннееПотреблениеТоваров.Дата < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|		ИЛИ ВнутреннееПотреблениеТоваров.Дата < &ДатаНачалаДействияФСБУ5
	|			И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаДействияФСБУ5", РеглУчетКлиентСервер.НачалоПримененияФСБУ5_2019());
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	РегистрыСведений.ЗаданияКПогашениюСтоимостиТМЦВЭксплуатации.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

#Область ФормаДокумента

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форме документа:
//		* Элементы - ВсеЭлементыФормы - 
//		* Объект - ДокументОбъект.ВнутреннееПотреблениеТоваров - 
//	Отказ - Булево - 
//	СтандартнаяОбработка - Булево - 
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьТМЦВЭксплуатации") И НЕ Форма.Объект.Исправление Тогда
		Элементы.ХозяйственнаяОперация.СписокВыбора.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
		Элементы.ХозяйственнаяОперация.Видимость = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	НастроитьПанельНавигации(Форма);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Объект = Форма.Объект;
	
	Справочники.КатегорииЭксплуатации.ЗаполнитьПризнакиКатегорииЭксплуатации(Объект.Товары);
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры
 
// Вызывается при изменении реквизита ХозяйственнаяОперация в документе
//
Процедура ХозяйственнаяОперацияПриИзменении(Форма, ИзмененныеРеквизиты, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если НЕ ПустаяСтрока(ИзмененныеРеквизиты) Тогда
		МассивРеквизитов = СтрРазделить(ИзмененныеРеквизиты, ",");
	Иначе
		МассивРеквизитов = Новый Массив;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ОчиститьТовары Тогда
		Объект.Товары.Очистить();
		Объект.ЗаказНаВнутреннееПотребление = Неопределено;
		МассивРеквизитов.Добавить("Товары");
		МассивРеквизитов.Добавить("ЗаказНаВнутреннееПотребление");
	КонецЕсли;
	
	НастроитьПанельНавигации(Форма);
	
	ИзмененныеРеквизиты = СтрСоединить(МассивРеквизитов, ",");
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из процедуры НастроитьЭлементыФормыНаСервере формы документа
//
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//++ НЕ УТ
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Товары")
		ИЛИ ОбновитьВсе Тогда
			
		Справочники.КатегорииЭксплуатации.ЗаполнитьПризнакиКатегорииЭксплуатации(Объект.Товары);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию;
		
		Элементы.ТоварыЗаполнитьИнвентарныйНомер.Видимость = ЗначениеСвойства;
		Элементы.ТоварыКонтекстноеМенюЗаполнитьИнвентарныйНомер.Видимость = ЗначениеСвойства;
		Элементы.ТоварыСоздатьГрупповоеОС.Видимость = ЗначениеСвойства;

	КонецЕсли;
	
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Вызывается из процедуры ЗаполнитьПоЗаказуСервер формы документа
//
Процедура ОбработатьДокументПослеДобавленияСтрок(Объект) Экспорт

	//++ Локализация
	//++ НЕ УТ
	РазбитьСтрокиОбъектовЭксплуатацииСИнвентарнымУчетом(Объект);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(Форма) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ТМЦВЭксплуатацииСервер.УстановитьУсловноеОформлениеИнвентарногоНомера(
		Форма,,, "Объект.Товары.КатегорияЭксплуатации");
		
	ТМЦВЭксплуатацииСервер.УстановитьУсловноеОформлениеФизЛица(
		Форма,,, "Объект.Товары.КатегорияЭксплуатации");
	
	#Область ТоварыОсновноеСредство_Видимость
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыОсновноеСредство.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.УчитыватьВВидеГрупповогоОС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	#КонецОбласти
	
	#Область ТоварыАналитикаРасходов_Видимость
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыАналитикаРасходов.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.УчитыватьВВидеГрупповогоОС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	#КонецОбласти

	#Область ТоварыОсновноеСредство_Текст
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыОсновноеСредство.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.УчитыватьВВидеГрупповогоОС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ОсновноеСредство");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<создается автоматически, если не заполнено>';
																					|en = '<it is created automatically if it is not filled in>'"));
	
	#КонецОбласти

	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧасти(Объект) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Справочники.КатегорииЭксплуатации.ЗаполнитьПризнакиКатегорииЭксплуатации(Объект.Товары);
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПодстановкиВТекстЗапросаДляПроцедурыПривязатьСтрокиКЗаказамНаВнутреннееПотребление(Подстановки) Экспорт
	
	//++ Локализация
	
	Подстановки.ПоляВыборкиИзСоединения = "
		|	ЗаказТовары.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗаказТовары.КатегорияЭксплуатации КАК КатегорияЭксплуатации";
	
	Подстановки.ПоляВыборкиИзСоединенияЗаказНаРемонт = "
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка) КАК КатегорияЭксплуатации";
	
	Подстановки.ПоляВыборкиИзСоединенияОбъединение = "
		|	ТаблицаЗаказы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаЗаказы.КатегорияЭксплуатации КАК КатегорияЭксплуатации";
	
	Подстановки.ПоляВыборки = "
		|	ЗаказыНаВнутреннееПотребление.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗаказыНаВнутреннееПотребление.КатегорияЭксплуатации КАК КатегорияЭксплуатации";
	
	Подстановки.ПоляГруппировки = "
		|	ЗаказыНаВнутреннееПотребление.ФизическоеЛицо,
		|	ЗаказыНаВнутреннееПотребление.КатегорияЭксплуатации";
	
	Подстановки.ПоляВыборкиИзТаблицыЗаказы = "
		|	Заказы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Заказы.КатегорияЭксплуатации КАК КатегорияЭксплуатации";
	
	Подстановки.СоединениеПоПолям = "
		|	Заказы.ФизическоеЛицо = ДублиТоваров.ФизическоеЛицо
		|	И Заказы.КатегорияЭксплуатации = ДублиТоваров.КатегорияЭксплуатации";
	
	//-- Локализация
	
КонецПроцедуры

Процедура ВставитьПоляВСтруктуруДляПроцедурыПривязатьСтрокиКЗаказамНаВнутреннееПотребление(СтруктураДанных) Экспорт
	
	//++ Локализация
	
	СтруктураДанных.Вставить("ФизическоеЛицо");
	СтруктураДанных.Вставить("КатегорияЭксплуатации");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДобавитьКолонкиВТаблицуДляПроцедурыПривязатьСтрокиКЗаказамНаВнутреннееПотребление(Колонки) Экспорт
	
	//++ Локализация
	
	Колонки.Добавить("ФизическоеЛицо");
	Колонки.Добавить("КатегорияЭксплуатации");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	Если ИмяКоманды = Форма.Команды.СоздатьГрупповоеОС.Имя Тогда
		СоздатьГрупповоеОС(Форма);
	КонецЕсли; 
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПараметрыЗаполненияВидаДеятельностиНДС(Объект, ПараметрыЗаполнения) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		ПараметрыЗаполнения.ПередачаВЭксплуатацию = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(Знач ХозяйственнаяОперация, ВсеРеквизиты, РеквизитыОперации) Экспорт
	
	//++ Локализация
	
	ВсеРеквизиты.Добавить("Товары.ФизическоеЛицо");
	ВсеРеквизиты.Добавить("Товары.КатегорияЭксплуатации");
	ВсеРеквизиты.Добавить("Товары.ИнвентарныйНомер");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		РеквизитыОперации.Добавить("Товары.ФизическоеЛицо");
		РеквизитыОперации.Добавить("Товары.КатегорияЭксплуатации");
	//++ НЕ УТ
		РеквизитыОперации.Добавить("Товары.ИнвентарныйНомер");
	//-- НЕ УТ
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

//++ НЕ УТ

Процедура ПараметрыНастройкиСчетовУчета(ПараметрыНастройки, ХозяйственнаяОперация) Экспорт
	
	//++ Локализация
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		ПараметрыНастройки.ДоступностьПоОперации = Ложь;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры
//-- НЕ УТ

// Параметры выбора статей и аналитик.
// 
// Параметры:
//  ПараметрыВыбора - см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
//  ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция
Процедура ПараметрыВыбораСтатейИАналитик(ПараметрыВыбора, ХозяйственнаяОперация) Экспорт
	
	//++ Локализация
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
		
		ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Ложь;
		
		СписокУсловий = Новый Структура;
		СписокУсловий.Вставить("АналитикаРасходовОбязательна", Истина);
		СписокУсловий.Вставить("УчитыватьВВидеГрупповогоОС", Ложь);
		ПараметрыВыбора.УсловияОбязательногоЗаполненияАналитикиВСтроках = СписокУсловий;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеСписка(Список) Экспорт

	//++ Локализация
	
	// Передача в эксплуатацию
	
	Элемент = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Тип");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Передача в эксплуатацию';
																|en = 'Commissioning'"));
	
	//-- Локализация
	
КонецПроцедуры

Процедура ХозяйственныеОперацииДокумента(СписокОпераций) Экспорт

	//++ Локализация
	СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	//-- Локализация
		
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

#Область Печать

//++ НЕ УТ

Функция ПечатьМБ7(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать МБ-7 не требуется';
								|en = 'No goods in the %1 document. MB-7 print is not required'");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннееПотреблениеТоваров_МБ7";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВнутреннееПотреблениеТоваров.ПФ_MXL_МБ7_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	
	ДанныеДляПечатнойФормы = ПолучитьДанныеДляПечатнойФормыМБ7(МассивОбъектов);
	ВыборкаДокументы = ДанныеДляПечатнойФормы.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечатнойФормы.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ВыборкаДокументы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 с операцией ""Списание на расходы / активы"" печать Ведомости учета спецодежды (МБ-7) не требуется.';
					|en = 'There is no need to print Overalls accounting list (MB-7) for the %1 document with the ""Write off as expenses/assets"" operation.'"),
				ВыборкаДокументы.Ссылка);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка)) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента));
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			Если ЗначениеЗаполнено(ВыборкаСтроки.ХарактеристикаНаименование) Тогда
				НоменклатураНаименование = СтрШаблон("%1 (%2)",ВыборкаСтроки.НоменклатураНаименование,ВыборкаСтроки.ХарактеристикаНаименование);
				ОбластьСтрокаТаблицы.Параметры.НоменклатураНаименование = НоменклатураНаименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьПодписи.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьПодписи.Параметры.МОЛФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДокументы.МОЛФИО);
		Сотрудник = СотрудникиФормы.СотрудникиФизическогоЛица(ВыборкаДокументы.РуководительПодразделения, ВыборкаДокументы.Организация);
		ТаблицаПоРабочимМестам = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Сотрудник, "Должность", ВыборкаДокументы.ДатаДокумента);
		Если ТаблицаПоРабочимМестам.Количество() > 0 Тогда
			ОбластьПодписи.Параметры.ДолжностьРуководителяПодразделения = ТаблицаПоРабочимМестам[0].Должность;
		КонецЕсли;
		ОбластьПодписи.Параметры.РуководительПодразделения = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДокументы.РуководительПодразделения);
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыМБ7(МассивДокументов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ВнутреннееПотреблениеТоваровТовары.Ссылка.ИсправляемыйДокумент.Дата, ВнутреннееПотреблениеТоваровТовары.Ссылка.Дата) КАК Дата,
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка.Организация КАК Организация,
	|	ВнутреннееПотреблениеТоваровТовары.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|ГДЕ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка В(&МассивДокументов)
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация)
	|ПО
	|	Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТолькоРазрешенные = Истина;
	ОсновныеСотрудникиФизическихЛиц = Неопределено;
	Для Каждого Документ Из ДанныеДокументов.Строки Цикл
		
		СписокФизическихЛиц = Документ.Строки.ВыгрузитьКолонку("ФизическоеЛицо");
		КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, СписокФизическихЛиц, Документ.Организация, Документ.Дата);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Документ КАК Документ,
		|	Т.Сотрудник КАК Сотрудник,
		|	Т.Сотрудник.Код КАК ТабельныйНомер,
		|	Т.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ ВТОсновныеСотрудникиФизическихЛиц КАК Т";
		Запрос.УстановитьПараметр("Документ", Документ.Ссылка);
		
		СотрудникиФизическихЛиц = Запрос.Выполнить().Выгрузить();
		Если ОсновныеСотрудникиФизическихЛиц = Неопределено Тогда
			ОсновныеСотрудникиФизическихЛиц = СотрудникиФизическихЛиц;
		Иначе
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СотрудникиФизическихЛиц,ОсновныеСотрудникиФизическихЛиц)
		КонецЕсли;
		
		Запрос.Текст = "УНИЧТОЖИТЬ ВТОсновныеСотрудникиФизическихЛиц";
		Запрос.Выполнить();
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Документ КАК Документ,
	|	Т.Сотрудник КАК Сотрудник,
	|	Т.ТабельныйНомер КАК ТабельныйНомер,
	|	Т.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ втОсновныеСотрудникиФизическихЛиц
	|ИЗ &ОсновныеСотрудникиФизическихЛиц КАК Т";
	Запрос.УстановитьПараметр("ОсновныеСотрудникиФизическихЛиц", ОсновныеСотрудникиФизическихЛиц);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК ДатаДокумента,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК ДатаСоставления,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Организация) КАК ПредставлениеОрганизации,
	|	ДанныеДокумента.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Подразделение) КАК ПредставлениеПодразделения,
	|	ДанныеДокумента.Подразделение.ТекущийРуководитель КАК РуководительПодразделения,
	|	ДанныеДокумента.Склад.ТекущийОтветственный КАК МОЛФИО,
	|	ДанныеДокумента.Склад.ТекущаяДолжностьОтветственного КАК МОЛДолжность
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ Товары.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	Товары.ФизическоеЛицо КАК Сотрудник,
	|	Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	|	Товары.Ссылка.Дата КАК ДатаДокумента,
	|	Товары.КатегорияЭксплуатации.СрокЭксплуатации КАК СрокСлужбы,
	|	Товары.Количество КАК Количество
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОсновныеСотрудникиФизическихЛиц КАК Сотрудники
	|	ПО Товары.Ссылка = Сотрудники.Документ
	|	И Товары.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Цены.Упаковка",
		"Товары.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
		
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Выборка по шапкам документов
	// 		[1] - Выборка по табличным частям документов
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[0],
		РезультатПакетаЗапросов[1]);
	
КонецФункции

Функция ПечатьОС15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать ОС-15 не требуется';
								|en = 'Goods are not found in document %1. Printing FA-15 is not required'");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннееПотреблениеТоваров_ОС15";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС15_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьОборотнаяСторона = Макет.ПолучитьОбласть("ОборотнаяСторона");
	
	ДанныеДляПечатнойФормы = ПолучитьДанныеДляПечатнойФормыОС15(МассивОбъектов);
	ВыборкаДокументы = ДанныеДляПечатнойФормы.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечатнойФормы.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ВыборкаДокументы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 с операцией ""Передача в эксплуатацию"" печать Акта о приемке-передаче оборудования в монтаж (ОС-15) не требуется.';
					|en = 'Printing of Certificate of equipment receiving and handover for installation (FA-15) is not required for document %1 with operation ""Commissioning"".'"),
				ВыборкаДокументы.Ссылка);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокументы.Ссылка)) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			
			ОбластьСтрокаТаблицы.Параметры.ОборудованиеНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтроки.НоменклатураНаименование,
				ВыборкаСтроки.ХарактеристикаНаименование);
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьОборотнаяСторона.Параметры.Заполнить(ВыборкаДокументы);
		ТабличныйДокумент.Вывести(ОбластьОборотнаяСторона);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОС15(МассивДокументов)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Количество КАК Количество,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставление,
	|	Документы.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документы.Организация) КАК ОрганизацияЗаказчикНаименование,
	|	Документы.Организация.КодПоОКПО КАК ОрганизацияЗаказчикКодПоОКПО,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Склад КАК Склад,
	|	Документы.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документы.Подразделение) КАК ПодразделениеНаименование,
	|	Документы.Склад.ТекущийОтветственный КАК КладовщикОтправитель,
	|	Документы.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Документы.ВидЦены КАК УчетныйВидЦены,
	|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	Товары.Количество КАК Количество,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)) * Товары.Количество КАК ЧИСЛО(31,2)) КАК СтоимостьВсего,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ЧИСЛО(31,2)) КАК СтоимостьЕдиницы,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|			И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Цены.Упаковка",
		"Товары.Номенклатура"));
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Выборка по шапкам документов
	// 		[3] - Выборка по табличным частям документов.
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[2],
		РезультатПакетаЗапросов[3]);
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область Проведение

//++ НЕ УТ

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация                      КАК Организация,
	|	&Подразделение                    КАК Подразделение,
	|	Таблица.ФизическоеЛицо            КАК ФизическоеЛицо,
	|	Таблица.Номенклатура              КАК Номенклатура,
	|	Таблица.Характеристика            КАК Характеристика,
	|	Таблица.Партия                    КАК Партия,
	|	&НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	Таблица.ИнвентарныйНомер          КАК ИнвентарныйНомер,
	|
	|	ВЫБОР
	|		КОГДА Таблица.СтатусУказанияСерийПолучатель = 20
	|			ТОГДА Таблица.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Таблица
	|	
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|	И Таблица.КатегорияЭксплуатации.ИмущественныйУчет
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихПотреблений.Принято)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Период                                 КАК Дата,
	|	&Ссылка                                 КАК Ссылка,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Проведен                               КАК Проведен,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                  КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.АналитикаРасходов             КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.АналитикаРасходов <> НЕОПРЕДЕЛЕНО
	|	И (ТаблицаОС.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|			И ТаблицаОС.АналитикаРасходов <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
	|		ИЛИ ТаблицаОС.АналитикаРасходов ССЫЛКА Справочник.ОбъектыСтроительства
	|			И ТаблицаОС.АналитикаРасходов <> ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоНМА";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ТаблицаНМА.НомерСтроки-1, 0)   КАК НомерЗаписи,
	|	&Период                                 КАК Дата,
	|	&Ссылка                                 КАК Ссылка,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Проведен                               КАК Проведен,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                  КАК ОтражатьВУпрУчете,
	|	ТаблицаНМА.АналитикаРасходов            КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И ТаблицаНМА.АналитикаРасходов <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаНМА.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|	И ТаблицаНМА.АналитикаРасходов <> ЗНАЧЕНИЕ(Справочник.НематериальныеАктивы.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		Документы.ВнутреннееПотреблениеТоваров.ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период	КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО Статья.Ссылка = Строки.СтатьяРасходов
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		И Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		Документы.ВнутреннееПотреблениеТоваров.ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область ФормаДокумента

Процедура НастроитьПанельНавигации(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьМатериалыВЭксплуатации",
		Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации);
	
	ОбщегоНазначенияУТ.НастроитьФормуПоПараметрам(Форма, СтруктураНастроек);
	
КонецПроцедуры

//++ НЕ УТ

// Разбивает строки табличной части товары, если для объекта эксплуатации требуется инвентарный учет.
//
//  Параметры:
//   Объект - ДокументСсылка.ВнутреннееПотреблениеТоваров, ДанныеФормыСтруктураСКоллекцией - документ, для разбиения строк.
//
Процедура РазбитьСтрокиОбъектовЭксплуатацииСИнвентарнымУчетом(Объект)
	
	Таблица = Объект.Товары;
	
	// Получение категорий эксплуатации документа.
	МассивКатегорий = Новый Массив();
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.КатегорияЭксплуатации) Тогда
			МассивКатегорий.Добавить(СтрокаТаблицы.КатегорияЭксплуатации);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивКатегорий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Получение категорий эксплуатации с ведением инвентарного учета.
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивКатегорий", МассивКатегорий);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СпрКатегорииЭксплуатации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КатегорииЭксплуатации КАК СпрКатегорииЭксплуатации
		|ГДЕ
		|	СпрКатегорииЭксплуатации.ИнвентарныйУчет
		|	И СпрКатегорииЭксплуатации.Ссылка В(&МассивКатегорий)";
	
	КатегорииСИнвентарнымУчетом = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	// Разбиение строк для категорий эксплуатации с ведением инвентарного учета.
	Если КатегорииСИнвентарнымУчетом.Количество() > 0 Тогда
		
		ВсегоСтрок = Таблица.Количество();
		// Обход таблицы, поиск строк.
		Для Счетчик = 1 По ВсегоСтрок Цикл
			
			СтрокаТаблицы = Таблица[ВсегоСтрок - Счетчик];
			Если КатегорииСИнвентарнымУчетом.Найти(СтрокаТаблицы.КатегорияЭксплуатации) <> Неопределено Тогда
				
				// Разбиение строк.
				КоличествоВСтроке = СтрокаТаблицы.Количество - 1;
				СтрокаТаблицы.КоличествоУпаковок = 1;
				СтрокаТаблицы.Количество = 1;
				СтрокаТаблицы.Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
				
				Пока КоличествоВСтроке > 0 Цикл
					НоваяСтрока = Таблица.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
					КоличествоВСтроке = КоличествоВСтроке - 1;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьГрупповоеОС(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СписокСтрок = Новый Массив;
	Для Каждого ИдентификаторСтроки Из Элементы.Товары.ВыделенныеСтроки Цикл
		ДанныеСтроки = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ДанныеСтроки.УчитыватьВВидеГрупповогоОС Тогда
			СписокСтрок.Добавить(ДанныеСтроки);
		КонецЕсли;
	КонецЦикла;

	Если СписокСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТабличнаяЧасть = Объект.Товары; // ДанныеФормыКоллекция
	СписокКатегорий = ТабличнаяЧасть.Выгрузить(СписокСтрок, "КатегорияЭксплуатации").ВыгрузитьКолонку("КатегорияЭксплуатации");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КатегорииЭксплуатации.Ссылка КАК Ссылка,
	|	КатегорииЭксплуатации.ГруппаОС КАК ГруппаОС,
	|	&ДатаНачалаЭксплуатации КАК ДатаНачалаЭксплуатации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КатегорииЭксплуатации.СрокЭксплуатации, 0) <> 0
	|			ТОГДА НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНачалаЭксплуатации, МЕСЯЦ, КатегорииЭксплуатации.СрокЭксплуатации), МЕСЯЦ), ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаЗавершенияЭксплуатации,
	|	КатегорииЭксплуатации.СрокЭксплуатации КАК СрокЭксплуатации
	|ИЗ
	|	Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|ГДЕ
	|	КатегорииЭксплуатации.Ссылка В (&СписокКатегорий)
	|	И КатегорииЭксплуатации.УчитыватьВВидеГрупповогоОС";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокКатегорий", СписокКатегорий);
	Запрос.УстановитьПараметр("ДатаНачалаЭксплуатации", НачалоМесяца(Объект.Дата));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СозданныеОС = Новый Соответствие();
	ПараметрыНаименования = Новый Структура("ДатаНачалаЭксплуатации,ДатаЗавершенияЭксплуатации,СрокЭксплуатации,КатегорияЭксплуатации");

	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыНаименования, Выборка);
		ПараметрыНаименования.КатегорияЭксплуатации = Выборка.Ссылка;
		
		ОсновноеСредство = Справочники.ОбъектыЭксплуатации.СоздатьЭлемент();
		ОсновноеСредство.ТипОС = Перечисления.ТипыОС.ГрупповоеОС;
		ОсновноеСредство.Наименование = Справочники.ПартииТМЦВЭксплуатации.СформироватьНаименованиеГрупповогоОС(ПараметрыНаименования);
		ОсновноеСредство.ГруппаОС = Выборка.ГруппаОС;
		ОсновноеСредство.Записать();
	
		СозданныеОС.Вставить(Выборка.Ссылка, ОсновноеСредство.Ссылка);
		
	КонецЦикла;

	Для Каждого ДанныеСтроки Из СписокСтрок Цикл
		ОсновноеСредство = СозданныеОС.Получить(ДанныеСтроки.КатегорияЭксплуатации);
		Если ОсновноеСредство <> Неопределено Тогда
			ДанныеСтроки.ОсновноеСредство = ОсновноеСредство;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область Прочее

//++ НЕ УТ

Функция ТекстСписаниеТоваровНаРасходы()
	
#Область СписаниеТоваровНаРасходы // (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаРасходы = "
	|ВЫБРАТЬ //// Списание на расходы товаров (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL
	|		ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Строки.СтатьяРасходов.ВидДеятельностиРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиРасходов.ПрочаяДеятельность)
	|		ТОГДА Строки.Номенклатура
	|		ИНАЧЕ Строки.АналитикаРасходов
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	(ВЫБОР КОГДА Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И НЕ Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) 
	|	КОНЕЦ)														КАК СуммаНУДт,
	|	(ВЫБОР КОГДА Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И НЕ Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) + ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|		ИНАЧЕ ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|	КОНЕЦ)														КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)					КАК СуммаВРДт,
	|	
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ГруппаФинансовогоУчетаРасчетов
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ПодразделениеАналитики
	|	ИНАЧЕ
	|		Операция.Склад.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры  ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности)
	|	ИНАЧЕ
	|		ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры  ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание товаров на расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|
	|ГДЕ
	|	(Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			И (Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации))
	|
	|	И (Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ИЛИ Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|			И (Операция.Дата >= ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|					И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|				ИЛИ Операция.Дата >= &ДатаНачалаДействияФСБУ5
	|					И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)))
	|
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|";
#КонецОбласти

#Область СписаниеТоваровНаРасходыСкладПроизводства // (Дт 20, 2Х, 44, 91.02 :: Кт 20)
	ТекстСписаниеТоваровНаРасходыСкладПроизводства = "
	|ВЫБРАТЬ //// Списание на расходы товаров со склада производства (Дт 20, 2Х, 44, 91.02 :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL
	|		ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Строки.СтатьяРасходов.ВидДеятельностиРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиРасходов.ПрочаяДеятельность)
	|		ТОГДА Строки.Номенклатура
	|		ИНАЧЕ Строки.АналитикаРасходов
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	(ВЫБОР КОГДА Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И НЕ Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) 
	|	КОНЕЦ)														КАК СуммаНУДт,
	|	(ВЫБОР КОГДА Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И НЕ Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) + ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|		ИНАЧЕ ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|	КОНЕЦ)														КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)					КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание товаров на расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Партнеры
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Организации
	|
	|	И (Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ИЛИ Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|			И (Операция.Дата >= ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|					И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|				ИЛИ Операция.Дата >= &ДатаНачалаДействияФСБУ5
	|					И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)))
	|
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|";
#КонецОбласти

	Возврат ТекстСписаниеТоваровНаРасходы
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаРасходыСкладПроизводства;
	
КонецФункции

// Поддержка статей расходов с устаревшим вариантом распределения "НаПрочиеАктивы"
//
Функция ТекстСписаниеТоваровНаПрочиеАктивы()
	
#Область СписаниеТоваровНаПрочиеАктивы // (Дт ХХ.ХХ :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаПрочиеАктивы = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт ХХ.ХХ :: Кт 41.01, 76.ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ГруппаФинансовогоУчетаРасчетов
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ПодразделениеАналитики
	|	ИНАЧЕ
	|		Строки.Склад.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Строки.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	(Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			И (Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
#КонецОбласти

#Область СписаниеТоваровНаПрочиеАктивыСкладПроизводства // (Дт ХХ.ХХ :: Кт 20)
	ТекстСписаниеТоваровНаПрочиеАктивыСкладПроизводства = "
	|ВЫБРАТЬ //// Списание на прочие активы со склада производства (Дт ХХ.ХХ :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Партнеры
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Организации
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И Строки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
#КонецОбласти

	Возврат ТекстСписаниеТоваровНаПрочиеАктивы
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаПрочиеАктивыСкладПроизводства;
	
КонецФункции

Функция ТекстСписаниеТоваровНаСтатьиАктивовПассивов()
	
#Область СписаниеТоваровНаСтатьиАктивовПассивов // (Дт ХХ.ХХ :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаСтатьиАктивовПассивов = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт ХХ.ХХ :: Кт 41.01, 76.ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	ТаблицаТовары.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,	
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ТаблицаТовары.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ГруппаФинансовогоУчетаРасчетов
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ПодразделениеАналитики
	|	ИНАЧЕ
	|		Операция.Склад.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|	ПО
	|		Операция.Ссылка = ТаблицаТовары.Ссылка
	|		И Строки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|
	|ГДЕ
	|	(Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			И (Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|";
#КонецОбласти

#Область СписаниеТоваровНаСтатьиАктивовПассивовСкладПроизводства // (Дт ХХ.ХХ :: Кт 20)
	ТекстСписаниеТоваровНаСтатьиАктивовПассивовСкладПроизводства = "
	|ВЫБРАТЬ //// Списание на прочие активы со склада производства (Дт ХХ.ХХ :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	ТаблицаТовары.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,	
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ТаблицаТовары.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	ТаблицаТовары.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|	ПО
	|		Операция.Ссылка = ТаблицаТовары.Ссылка
	|		И Строки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Партнеры
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Организации
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|";
#КонецОбласти

	Возврат ТекстСписаниеТоваровНаСтатьиАктивовПассивов
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаСтатьиАктивовПассивовСкладПроизводства;

КонецФункции

//++ НЕ УТКА

Функция ТекстСписаниеТоваровДавальца()
	
#Область СписаниеТоваровДавальца // (Дт  :: Кт 003.01/002)
	ТекстСписаниеТоваровДавальца = "
	|ВЫБРАТЬ //// Списание материалов давальца (Дт  :: Кт 003.01/002)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку)
	|	КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦнаскладах)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание материалов давальца"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И (НЕ Операция.Склад.ЦеховаяКладовая ИЛИ Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

#Область СписаниеТоваровДавальцаСкладПроизводства // (Дт  :: Кт 003.02)
	ТекстСписаниеТоваровДавальцаСкладПроизводства = "
	|ВЫБРАТЬ //// Списание материалов давальца со склада производства (Дт  :: Кт 003.02)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание материалов давальца"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	И Операция.Склад.ЦеховаяКладовая
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

	Возврат ТекстСписаниеТоваровДавальца
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровДавальцаСкладПроизводства;
	
КонецФункции

Функция ТекстСписаниеПродукцииДавальца()
	
	Возврат "
	|ВЫБРАТЬ //// Списание продукции давальца  (Дт  :: Кт 002.01)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦнаскладах) КАК ВидСчетаКт,
	|	АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ВидЗапасов.Договор.Подразделение КАК ПодразделениеКт,
	|	Строки.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	АналитикаУчетаНоменклатуры.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание продукции давальца"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
	
КонецФункции

//-- НЕ УТКА

Функция ТекстВключениеИсключениеНДСВСтоимостьПрочихАктивов()
	
	Возврат "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость актива (Дт 08 :: Кт 19.03) @НДСпредъявленный
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	СчетаУчетаПрочихАктивов.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	СчетаУчетаПрочихАктивов.СчетУчета КАК СчетДт,
	|	СчетаУчетаПрочихАктивов.Субконто1 КАК СубконтоДт1,
	|	СчетаУчетаПрочихАктивов.Субконто2 КАК СубконтоДт2,
	|	СчетаУчетаПрочихАктивов.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, Партии.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость актива"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО
	|		ДокументыКОтражению.Ссылка = Партии.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СчетаУчетаПрочихАктивов КАК СчетаУчетаПрочихАктивов
	|	ПО
	|		Партии.Ссылка = СчетаУчетаПрочихАктивов.Ссылка
	|		И Партии.Номенклатура = СчетаУчетаПрочихАктивов.Номенклатура
	|		И Партии.Характеристика = СчетаУчетаПрочихАктивов.Характеристика
	|		И Партии.Серия = СчетаУчетаПрочихАктивов.Серия
	|		И Партии.СтатьяРасходов = СчетаУчетаПрочихАктивов.СтатьяРасходов
	|		И Партии.АналитикаАктивовПассивов = СчетаУчетаПрочихАктивов.АналитикаАктивовПассивов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО Партии.Ссылка = ВводСобственныхСредств.Ссылка
	|		И Партии.ДокументПоступления = ВводСобственныхСредств.СчетФактура
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|";
	
КонецФункции

Функция ТекстВключениеИсключениеНДСВРасходы()
	
	Возврат "
	|ВЫБРАТЬ //// Включение/исключение НДС в расходы (Дт 25, 26, 44 :: Кт 19.03) @НДСпредъявленный
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Партии.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР 
	|		КОГДА НЕ НаВнеоборотныеАктивы.Ссылка ЕСТЬ NULL 
	|			ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) 
	|	КОНЕЦ КАК СубконтоДт1,
	|	Партии.СтатьяРасходов КАК СубконтоДт2,
	|	Партии.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, Партии.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО
	|		ДокументыКОтражению.Ссылка = Партии.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК НаВнеоборотныеАктивы
	|	ПО 
	|		Партии.СтатьяРасходов = НаВнеоборотныеАктивы.Ссылка
	|		И НаВнеоборотныеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Партии.АналитикаРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО Партии.Ссылка = ВводСобственныхСредств.Ссылка
	|		И Партии.ДокументПоступления = ВводСобственныхСредств.СчетФактура
	|
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";
	
КонецФункции

Функция ТекстПередачаВЭксплуатациюПоСтаройСхеме()
	
#Область ПередачаВЭксплуатациюПоСтаройСхеме // (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	ТекстПередачаВЭксплуатациюПоСтаройСхеме = "
	|ВЫБРАТЬ //// Передача в эксплуатацию (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.СтатьяРасходов, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЕСТЬNULL(Строки.СтатьяРасходов, Строки.Номенклатура) КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА Строки.ГруппаПродукции
	|		КОГДА СтатьиРасходов.ВидДеятельностиРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиРасходов.ПрочаяДеятельность)
	|		ТОГДА Строки.Номенклатура
	|		ИНАЧЕ Строки.АналитикаРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL И Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ИСТИНА
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ЛОЖЬ
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) + ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|		ИНАЧЕ ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|	КОНЕЦ КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже)
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|
	|	ВЫБОР
	|		КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА Строки.ГруппаФинансовогоУчетаРасчетов
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.ПодразделениеАналитики
	|		ИНАЧЕ Строки.Склад
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА Строки.Контрагент
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание товаров на расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ПодразделениеАналитики = Стоимости.ПодразделениеАналитики
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|ГДЕ
	|	Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|							ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|	И Строки.ИдентификаторСтроки = """"
	|";
#КонецОбласти

	Возврат ТекстПередачаВЭксплуатациюПоСтаройСхеме;
	
КонецФункции

Функция ТекстПередачаВЭксплуатацию()
	
#Область ПередачаВЭксплуатацию // (Дт 10.11.Х :: Кт 10.10, 10.09)
	ТекстПередачаВЭксплуатацию = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача в эксплуатацию товаров (Дт 10.11.Х :: Кт 10.10, 10.09)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,	
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаДт,
	|	ТабличнаяЧасть.КатегорияЭксплуатации КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ТабличнаяЧасть.Партия КАК СубконтоДт2,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ГруппаФинансовогоУчетаРасчетов
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.ПодразделениеАналитики
	|	ИНАЧЕ
	|		Операция.Склад.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Передача ТМЦ в эксплуатацию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТабличнаяЧасть
	|	ПО
	|		Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		ТабличнаяЧасть.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ИдентификаторСтроки = ТабличнаяЧасть.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|	
	|ГДЕ
	|	(Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			И (Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации))
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|	И Строки.ИдентификаторСтроки <> """"
	|	И ТабличнаяЧасть.КатегорияЭксплуатации.ИмущественныйУчет
	|	И (Операция.Дата < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|			И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|		ИЛИ Операция.Дата < &ДатаНачалаДействияФСБУ5
	|			И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ))
	|";
#КонецОбласти

#Область ПередачаВЭксплуатациюСкладПроизводства // (Дт 10.11.Х :: Кт 20)
	ТекстПередачаВЭксплуатациюСкладПроизводства = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача в эксплуатацию товаров со склада производства (Дт 10.11.Х :: Кт 20)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,	
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаДт,
	|	ТабличнаяЧасть.КатегорияЭксплуатации КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ТабличнаяЧасть.Партия КАК СубконтоДт2,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Передача ТМЦ в эксплуатацию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТабличнаяЧасть
	|	ПО
	|		Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		ТабличнаяЧасть.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ИдентификаторСтроки = ТабличнаяЧасть.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|	
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Партнеры
	|	И НЕ Строки.Склад ССЫЛКА Справочник.Организации
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|	И Строки.ИдентификаторСтроки <> """"
	|	И ТабличнаяЧасть.КатегорияЭксплуатации.ИмущественныйУчет
	|	И (Операция.Дата < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|			И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|		ИЛИ Операция.Дата < &ДатаНачалаДействияФСБУ5
	|			И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ))		
	|";
#КонецОбласти

	Возврат ТекстПередачаВЭксплуатацию
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаВЭксплуатациюСкладПроизводства;
	
КонецФункции

Функция ТекстСписаниеВЭксплуатации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание на расходы ТМЦ, переданных в эксплуатацию (Дт 20, 2Х, 44, 91.02 :: Кт 10.11.Х)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) ИНАЧЕ 0 КОНЕЦ КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.СтатьяРасходов, Строки.ГруппаПродукции) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЕСТЬNULL(Строки.СтатьяРасходов, Строки.Номенклатура) КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА Строки.ГруппаПродукции
	|		ИНАЧЕ Строки.АналитикаРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL И Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ИСТИНА
	|			И ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ЛОЖЬ
	|			И ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПРДт,
	|
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА -ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаКт,
	|	
	|	ТабличнаяЧасть.КатегорияЭксплуатации КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ТабличнаяЧасть.Партия КАК СубконтоКт2,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|			ТОГДА Строки.Количество 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоКт,
	|
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПРКт,
	|
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)
	|		КОГДА ТабличнаяЧасть.КатегорияЭксплуатации.СпособПогашенияСтоимостиНУ = ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)
	|		ТОГДА -ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаВРКт,
	|
	|	""Списание на расходы ТМЦ, переданных в эксплуатацию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТабличнаяЧасть
	|	ПО
	|		Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = ТабличнаяЧасть.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ИдентификаторСтроки = ТабличнаяЧасть.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|	И Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|							ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И Строки.ИдентификаторСтроки <> """"
	|	И (Операция.Дата < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|			И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|		ИЛИ Операция.Дата < &ДатаНачалаДействияФСБУ5
	|			И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ))		
	|";
	
КонецФункции

Функция ТекстПередачаВЭксплуатациюЗаБаланс()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача товаров в эксплуатацию, забалансовый учет (Дт МЦ.0Х :: Кт ---)
	|ВЫБРАТЬ //
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР
	|		КОГДА Операция.Дата < ДОБАВИТЬКДАТЕ(&ДатаНачалаДействияФСБУ5, МЕСЯЦ, -1)
	|				И ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ)
	|			ИЛИ Операция.Дата < &ДатаНачалаДействияФСБУ5
	|				И НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизации.СписатьСтоимостьТМЦВЭксплуатации, ЛОЖЬ) 
	|			ТОГДА ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,	
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ВидСчетаДт,
	|	ТабличнаяЧасть.КатегорияЭксплуатации КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ТабличнаяЧасть.Партия КАК СубконтоДт2,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача товаров в эксплуатацию, забалансовый учет"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТабличнаяЧасть
	|	ПО
	|		Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = ТабличнаяЧасть.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ИдентификаторСтроки = ТабличнаяЧасть.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|	И Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизации.ЗабалансовыйУчетТМЦВЭксплуатации, ЛОЖЬ) = ИСТИНА
	|	И Строки.ИдентификаторСтроки <> """"
	|	И ТабличнаяЧасть.КатегорияЭксплуатации.ИмущественныйУчет
	|";
	
КонецФункции

Функция ТекстСписаниеТоваровКонтрагентов()
	
	Возврат "
	|ВЫБРАТЬ //// Списание комиссионных, давальческих товаров или принципала (Дт  :: Кт 002.01, 003.01, 004.01)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Стоимости.СуммаУУ, Строки.СуммаУУ) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.ПодразделениеАналитики КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Склад КАК СубконтоКт2,
	|	Строки.Контрагент КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ТОГДА ""Списание комиссионных и давальческих товаров""
	|		ИНАЧЕ ""Списание товаров принципала""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|ГДЕ
	|	Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию), ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
	
КонецФункции
//-- НЕ УТ

#КонецОбласти

//-- Локализация

#КонецОбласти
