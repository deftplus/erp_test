
////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции работы с периодами, 
// результат которых используется повторно.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура проверяет интервал периодов в справочнике "Периоды" и создает недостающие элементы
//
Процедура ПроверитьИнтервалПериодовВФоне(НачалоПериода, КонецПериода = неопределено, ИдентификаторФормы = неопределено) Экспорт
	
	Если ИдентификаторФормы = неопределено тогда
		ИдентификаторФормы = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.Вставить("ЗапуститьВФоне", Истина);
	ПараметрыВыполнения.Вставить("ОжидатьЗавершение", 0);
	ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, "ПериодыУХПовтИсп.ПроверитьИнтервалПериодов", НачалоПериода, КонецПериода);
	
КонецПроцедуры

// Процедура проверяет интервал периодов в справочнике "Периоды" и создает недостающие элементы
// Рекомендуется пользоваться процедурой "ПериодыУХПовтИсп.ПроверитьИнтервалПериодовВФоне"
//
Процедура ПроверитьИнтервалПериодов(НачалоПериода, КонецПериода = неопределено) Экспорт
	
	ТекДата = ТекущаяДата();
	КонецПериодаПроверки = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекДата);
		
	ЗапросПоПериодам = Новый Запрос("ВЫБРАТЬ
	|	0 КАК Цифра
	|ПОМЕСТИТЬ ВТЦифры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), ГОД, Цифры10.Цифра * 10 + Цифры.Цифра) КАК Год
	|ПОМЕСТИТЬ ВТГоды
	|ИЗ
	|	ВТЦифры КАК Цифры10,
	|	ВТЦифры КАК Цифры
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД), ГОД, Цифры10.Цифра * 10 + Цифры.Цифра) МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД) И &ДатаЗавершения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЦифры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Годы.Год КАК Год,
	|	ПеречислениеПериодичность.Ссылка КАК Периодичность,
	|	ВЫБОР
	|		КОГДА ГОД(Годы.Год) / 4 - (ВЫРАЗИТЬ(ГОД(Годы.Год) / 4 КАК ЧИСЛО(3, 0))) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВисокосныйГод,
	|	Периоды.Ссылка КАК Период
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТГоды КАК Годы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Периоды КАК Периоды
	|		ПО Годы.Год = Периоды.ДатаНачала
	|			И (Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)),
	|	Перечисление.Периодичность КАК ПеречислениеПериодичность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТГоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(СправочникПериоды.ДатаНачала, ГОД) КАК Год,
	|	СправочникПериоды.Периодичность КАК Периодичность,
	|	КОЛИЧЕСТВО(СправочникПериоды.Ссылка) КАК КоличествоПериодов
	|ПОМЕСТИТЬ ВТПодчиненныеПериоды
	|ИЗ
	|	Справочник.Периоды КАК СправочникПериоды
	|ГДЕ
	|	СправочникПериоды.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Периоды.Период
	|			ИЗ
	|				ВТПериоды КАК Периоды)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СправочникПериоды.ДатаНачала, ГОД),
	|	СправочникПериоды.Периодичность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Периоды.Год КАК Год,
	|	Периоды.Период КАК Период
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодчиненныеПериоды КАК ПодчиненныеПериоды
	|		ПО Периоды.Год = ПодчиненныеПериоды.Год
	|			И Периоды.Периодичность = ПодчиненныеПериоды.Периодичность
	|ГДЕ
	|	(ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 365
	|				И НЕ Периоды.ВисокосныйГод
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 366
	|				И Периоды.ВисокосныйГод
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 61
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 36
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 12
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 4
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 2
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 1
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.ДевятьМесяцев)
	|			ИЛИ ЕСТЬNULL(ПодчиненныеПериоды.КоличествоПериодов, 0) < 1
	|				И Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПодчиненныеПериоды");
	
	ЗапросПоПериодам.УстановитьПараметр("ДатаНачала", Мин(НачалоПериода, КонецПериодаПроверки, ТекДата));
	ЗапросПоПериодам.УстановитьПараметр("ДатаЗавершения", Макс(НачалоПериода, КонецПериодаПроверки, ТекДата));
	
	ВыборкаНезаполненныхПериодов = ЗапросПоПериодам.Выполнить().Выбрать();
	
	Если ВыборкаНезаполненныхПериодов.Количество() > 0 тогда
		
		ЗаполняемыеПериоды = Новый Массив;
		
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.ДевятьМесяцев);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.Квартал);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.Месяц);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.Декада);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.Неделя);
		ЗаполняемыеПериоды.Добавить(Перечисления.Периодичность.День);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Пока ВыборкаНезаполненныхПериодов.Следующий() Цикл
		
		Справочники.Периоды.СоздатьПериоды(
			КэшируемыеПроцедурыУХ.глОтносительныйПериодПоДате(
				КэшируемыеПроцедурыУХ.ДатаНачалаПериода(
					ВыборкаНезаполненныхПериодов.Год, 
					Перечисления.Периодичность.Год), 
				Перечисления.Периодичность.Год, 
				0, 
				Истина, 
				Ложь), 
			ЗаполняемыеПериоды);
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти