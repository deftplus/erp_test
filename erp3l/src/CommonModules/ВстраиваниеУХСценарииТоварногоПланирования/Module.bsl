#Область СобытияМодуляФормы

// нетиповое событие документа. Вызывается перед исполнением основного кода
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт
	
	// 
	СоздатьРеквизитыФормыДокумента(Форма);
	СоздатьЭлементыФормыДокумента(Форма);
	
	Форма.ПериодичностьЦентрализованныхЗакупок = Константы.ПериодичностьЦентрализованныхЗакупок.Получить();
	Форма.ИспользоватьЦентрализованноеУправлениеЗакупками = ПолучитьФункциональнуюОпцию("ИспользоватьЦентрализованноеУправлениеЗакупками");
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) экспорт
	
КонецПроцедуры

Функция ПолучитьБлокируемыеРеквизитыОбъекта(Результат) Экспорт
	
	Результат.Добавить("РежимФормированияПотребностейПланомЗакупок");
	
КонецФункции

#Область СлужебныеПроцедурыИФункции
	
Процедура СоздатьРеквизитыФормыДокумента(Форма)
	
	Если ФормыУХ.ЭлементыФормыУХУжеСозданы(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	//
	Реквизиты = Новый Массив;
	Реквизиты.Добавить(Новый РеквизитФормы("ПериодичностьЦентрализованныхЗакупок", Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность")));
	Реквизиты.Добавить(Новый РеквизитФормы("ИспользоватьЦентрализованноеУправлениеЗакупками", Новый ОписаниеТипов("Булево")));
	Форма.ИзменитьРеквизиты(Реквизиты);
	
КонецПроцедуры

Процедура СоздатьЭлементыФормыДокумента(Форма) 
	
	Если ФормыУХ.ЭлементыФормыУХУжеСозданы(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	
	//
	ВстраиваниеУХ.ЭлементыФормыУХДобавлены(Форма);
	
	ФормыУХ.СоздатьПолеФормы(Элементы,"СценарийУправлениеХолдингом",НСтр("ru = 'Сценарий бюджетирования'"),"Объект.СценарийУправлениеХолдингом",,Элементы.ДополнительныеНастройки);
	
	//
	ПараметрыПоляВвода = Новый Структура;
	ПараметрыПоляВвода.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);
	ПараметрыПоляВвода.Вставить("АвтоМаксимальнаяШирина", Ложь);
	ПараметрыПоляВвода.Вставить("МаксимальнаяШирина", 28);
	
	//
	ПараметрыГруппы = Новый Структура;
	ПараметрыГруппы.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	ПараметрыГруппы.Вставить("Объединенная", Истина);
	ПараметрыГруппы.Вставить("ОтображатьЗаголовок", Ложь);
	
	//
	ПараметрыДекорации = Новый Структура;
	ПараметрыДекорации.Вставить("Ширина", 1);
	ПараметрыДекорации.Вставить("Высота", 1);
	
	// Группа 
	Куда = Элементы.СтраницаСтруктураПланов;
		
	Группа = ФормыУХ.СоздатьГруппуФормы(Элементы, "ГруппаФормироватьПотребности", "", ВидГруппыФормы.ОбычнаяГруппа, Куда, Элементы.СтруктураПланов, ПараметрыГруппы);
	
	//
	//Элемент = ФормыУХ.СоздатьДекорациюФормы(Элементы, "Декорация199", ,ВидДекорацииФормы.Надпись, Группа,,ПараметрыДекорации);
	
	// РежимФормированияПотребностейПланомЗакупок
	ИмяРеквизита = "РежимФормированияПотребностейПланомЗакупок";
	Элемент = ФормыУХ.СоздатьПолеФормы(
		Элементы, ИмяРеквизита, НСтр("ru = Использование планов закупок для подсистемы ""Корпоративные закупки""'"),
		"Объект."+ИмяРеквизита,
		ВидПоляФормы.ПолеВвода, Группа, , ПараметрыПоляВвода
	);
	
	Элемент.РежимВыбораИзСписка = Истина;
	
	//
	Элемент.СписокВыбора.Добавить(Перечисления.РежимыФормированияПотребностейПланомЗакупок.РегистрируютПотребности);
	//
	Элемент.СписокВыбора.Добавить(Перечисления.РежимыФормированияПотребностейПланомЗакупок.ФормируютПотребности);
	
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_РежимФормированияПотребностейПланомЗакупокПриИзменении");
	
КонецПроцедуры

Функция ПолучитьСценарийРегистрацииПотребностей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СценарииТоварногоПланирования.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СценарииТоварногоПланирования КАК СценарииТоварногоПланирования
	|ГДЕ
	|	СценарииТоварногоПланирования.РежимФормированияПотребностейПланомЗакупок = ЗНАЧЕНИЕ(Перечисление.РежимыФормированияПотребностейПланомЗакупок.РегистрируютПотребности)
	|	И СценарииТоварногоПланирования.Валюта = &Валюта";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Справочники.СценарииТоварногоПланирования.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции

#КонецОбласти 

#КонецОбласти 

#Область СобытияМодуляОбъекта

Процедура ОбработкаПроверкиЗаполнения(Отказ, Объект, ПроверяемыеРеквизиты) Экспорт
	// Проверим, что по данному сценарию ещё не введён вид плана с данным типом плана.
	ПроверяемыеРежимы = Новый Массив;
	ПроверяемыеРежимы.Добавить(Перечисления.РежимыФормированияПотребностейПланомЗакупок.РегистрируютПотребности);
	ПроверяемыеРежимы.Добавить(Перечисления.РежимыФормированияПотребностейПланомЗакупок.ФормируютПотребности);
	РежимФормированияВОбъекте = Объект.РежимФормированияПотребностейПланомЗакупок;
	Если ПроверяемыеРежимы.Найти(РежимФормированияВОбъекте) <> Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СценарииТоварногоПланирования.Ссылка КАК Ссылка,
		|	СценарииТоварногоПланирования.РежимФормированияПотребностейПланомЗакупок КАК РежимФормированияПотребностейПланомЗакупок,
		|	СценарииТоварногоПланирования.Валюта КАК Валюта
		|ИЗ
		|	Справочник.СценарииТоварногоПланирования КАК СценарииТоварногоПланирования
		|ГДЕ
		|	СценарииТоварногоПланирования.Ссылка <> &СсылкаВход
		|	И НЕ СценарииТоварногоПланирования.ПометкаУдаления
		|	И СценарииТоварногоПланирования.РежимФормированияПотребностейПланомЗакупок = &РежимФормированияПотребностейПланомЗакупокВход
		|	И СценарииТоварногоПланирования.Валюта = &Валюта";
		Запрос.УстановитьПараметр("РежимФормированияПотребностейПланомЗакупокВход", РежимФормированияВОбъекте);
		Запрос.УстановитьПараметр("СсылкаВход", Объект.Ссылка);
		Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Уже введён сценарий ""%Сценарий%"" с режимом формированния потребности ""%Режим%"" и валютой ""%Валюта%"". Запись отменена'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сценарий%", Строка(ВыборкаДетальныеЗаписи.Ссылка));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Режим%", Строка(РежимФормированияВОбъекте));  
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Строка(ВыборкаДетальныеЗаписи.Валюта));
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЦикла;
	Иначе
		// Для прочих режимов не выполняем проверку.
	КонецЕсли;
КонецПроцедуры		// ОбработкаПроверкиЗаполнения()

#Область СлужебныеПроцедурыИФункции
	
#КонецОбласти 

#КонецОбласти 

#Область МодульМенеджера

#Область СлужебныеПроцедурыИФункции
	
#КонецОбласти 

#КонецОбласти 

