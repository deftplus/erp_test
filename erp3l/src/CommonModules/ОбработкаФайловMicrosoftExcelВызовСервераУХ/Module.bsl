
Функция ПолучитьОтборСтроковыхКолонокПравилаИмпортаДанных(ПравилоИмпортаДанных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПравилоИмпортаДанных);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПравилаИмпортаТаблиц.ТаблицаADO.Имя КАК ИмяТаблицы,
	|	ПравилаИмпортаТаблиц.ПравилаXML
	|ИЗ
	|	Справочник.ПравилаИмпортаТаблиц КАК ПравилаИмпортаТаблиц
	|ГДЕ
	|	ПравилаИмпортаТаблиц.Ссылка = &Ссылка";
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Выборка.ПравилаXML);
	Правила = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	
	ИмяОсновнойТаблицы = Выборка.ИмяТаблицы;
	
	Отбор = Новый Соответствие;
	
	xlGeneralFormat = 1;
	xlTextFormat = 2;
	
	Для Каждого Правило Из Правила Цикл
		
		Если ПустаяСтрока(Правило.ПриемникИскатьПоИмя) Тогда
			ТипПриемника = Правило.ПриемникТип;
		Иначе
			ТипПриемника = Правило.ПриемникИскатьПоТип;
		КонецЕсли;
		
		Если ТипПриемника.Типы().Найти(Тип("Строка")) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Точка = СтрНайти(Правило.ИсточникИмя, ".");
		
		Если Точка > 0 Тогда
			Таблица = Лев(Правило.ИсточникИмя, Точка - 1);
			Поле = Сред(Правило.ИсточникИмя, Точка + 1);
		Иначе
			Таблица = ИмяОсновнойТаблицы;
			Поле = Правило.ИсточникИмя;
		КонецЕсли;
		
		Таблица = СтрЗаменить(СтрЗаменить(Таблица, "[", ""), "]", ""); 
		Поле = СтрЗаменить(СтрЗаменить(Поле, "[", ""), "]", "");
		
		МассивКолонокТаблицы = Отбор[Таблица];
		Если МассивКолонокТаблицы = Неопределено Тогда
			МассивКолонокТаблицы = Новый Массив();
			Отбор.Вставить(Таблица, МассивКолонокТаблицы);
		КонецЕсли;
		
		МассивКолонокТаблицы.Добавить(Поле);
		
	КонецЦикла; 
	
	Возврат Отбор;
	
КонецФункции

Функция ПолучитьОписаниеПолейДляQueryTables(АдресХранилища, Excel2003, Отбор) Экспорт
	
	ИмяФайла = ПолучитьИмяВременногоФайла(?(Excel2003, "xls", "xlsx"));
	
	ПолучитьИзВременногоХранилища(АдресХранилища).Записать(ИмяФайла);
	
	СтрокаСоединения = "Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DBQ=" + ИмяФайла;
	
	СтруктураТаблиц = УправлениеСоединениямиВИБУХ.ПолучитьСтруктуруADO(СтрокаСоединения);
	
	РаботаСФайламиУХ.УдалитьФайлыАсинхронно(ИмяФайла);
	
	ОписаниеПолей = Новый Соответствие;
	
	xlGeneralFormat = 1;
	xlTextFormat = 2;
	
	Для Каждого ЭлементОтбора Из Отбор Цикл
		
		Таблица = ЭлементОтбора.Ключ;
		
		СтрокаСтруктуры = СтруктураТаблиц.Найти(Таблица, "Имя");
		
		Если СтрокаСтруктуры = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КолонкиСтруктуры = СтрокаСтруктуры.Колонки;
		
		МассивКолонокТаблицы = Новый Массив(КолонкиСтруктуры.Количество());
		Для Инд = 0 По МассивКолонокТаблицы.ВГраница() Цикл
			МассивКолонокТаблицы[Инд] = xlGeneralFormat;
		КонецЦикла; 
		ОписаниеПолей.Вставить(Таблица, МассивКолонокТаблицы);
		
		Для Каждого Поле Из ЭлементОтбора.Значение Цикл
			
			КолонкаСтруктуры = КолонкиСтруктуры.Найти(Поле, "Имя");
			
			Если КолонкаСтруктуры = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			МассивКолонокТаблицы[КолонкиСтруктуры.Индекс(КолонкаСтруктуры)] = xlTextFormat;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	Возврат ОписаниеПолей;
		
КонецФункции

Функция ПолучитьОтборСтроковыхКолонокПравилаОбработки(ПравилоОбработки) Экспорт
	
	Запрос=Новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.НастройкаСоответствия.ОписаниеОбъектаВИБ КАК ОписаниеОбъектаВИБ
	//|ПОМЕСТИТЬ ИспользуемыеТаблицыADO
	//|ИЗ
	//|	Справочник.ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса КАК ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса
	//|ГДЕ
	//|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.НазначениеРасчетов = &ПравилоОбработки
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ.Имя КАК ИмяТаблицы,
	//|	СоответствиеВнешнимИБ.ИмяОбъектаМетаданных,
	//|	СоответствиеВнешнимИБ.СоответствиеРеквизитов.(
	//|		РеквизитОбъектаКонсолидации,
	//|		РеквизитОбъектаВнешнейИБ,
	//|		ПримитивныйТип
	//|	),
	//|	СоответствиеВнешнимИБ.ТипОбъектаКонсолидации
	//|ИЗ
	//|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеТаблицыADO КАК ИспользуемыеТаблицыADO
	//|		ПО СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ = ИспользуемыеТаблицыADO.ОписаниеОбъектаВИБ";
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка
	|ПОМЕСТИТЬ Табл
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК Спр
	|ГДЕ
	|	Спр.НазначениеРасчетов = &ПравилоОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.НастройкаСоответствия.ОписаниеОбъектаВИБ КАК ОписаниеОбъектаВИБ
	|ПОМЕСТИТЬ ИспользуемыеТаблицыADO
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса КАК ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса
	|ГДЕ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка В
	|			(ВЫБРАТЬ
	|				Табл.Ссылка
	|			ИЗ
	|				Табл)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ.Имя КАК ИмяТаблицы,
	|	СоответствиеВнешнимИБ.ИмяОбъектаМетаданных,
	|	СоответствиеВнешнимИБ.СоответствиеРеквизитов.(
	|		РеквизитОбъектаКонсолидации,
	|		РеквизитОбъектаВнешнейИБ,
	|		ПримитивныйТип
	|	),
	|	СоответствиеВнешнимИБ.ТипОбъектаКонсолидации
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеТаблицыADO КАК ИспользуемыеТаблицыADO
	|		ПО СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ = ИспользуемыеТаблицыADO.ОписаниеОбъектаВИБ";
	
	
	Запрос.УстановитьПараметр("ПравилоОбработки",ПравилоОбработки);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	ДанныеДляКонвертации=Новый Соответствие;
	
	Пока Результат.Следующий() Цикл
		
		МассивКолонокТаблицы = ДанныеДляКонвертации[Результат.ИмяТаблицы];
		
		Если МассивКолонокТаблицы = Неопределено Тогда
			
			МассивКолонокТаблицы = Новый Массив();
			ДанныеДляКонвертации.Вставить(Результат.ИмяТаблицы, МассивКолонокТаблицы);
			
		КонецЕсли;
		
		МассивСтроковыхРеквизитов=Новый Массив;
		
		Если Результат.ТипОбъектаКонсолидации="Справочник" Тогда
			
			МетаданныеОбъекта=Метаданные.Справочники[Результат.ИмяОбъектаМетаданных];
			
		ИначеЕсли Результат.ТипОбъектаКонсолидации="ПланВидовХарактеристик" Тогда
			
			МетаданныеОбъекта=Метаданные.ПланыВидовХарактеристик[Результат.ИмяОбъектаМетаданных];
			
		ИначеЕсли Результат.ТипОбъектаКонсолидации="ВидСубконто" Тогда
			
			МетаданныеОбъекта = ОбщегоНазначенияУХ.ПолучитьСправочникПоВидуСубконто(Результат.ИмяОбъектаМетаданных);
			
			Если СтрНайти(МетаданныеОбъекта.ПолноеИмя(),"Перечисление.")>0 Тогда
				
				МассивСтроковыхРеквизитов.Добавить("Наименование");
				МетаданныеОбъекта=Неопределено;
				
			КонецЕсли;	
			
		ИначеЕсли Результат.ТипОбъектаКонсолидации="Документ" Тогда 
		
			МетаданныеОбъекта = МетаДанные.Документы[Результат.ИмяОбъектаМетаданных];
			
		ИначеЕсли Результат.ТипОбъектаКонсолидации="Перечисление" Тогда
			
			МассивСтроковыхРеквизитов.Добавить("Наименование");
			МетаданныеОбъекта=Неопределено;
			
		КонецЕсли;
		
		Если НЕ МетаданныеОбъекта=Неопределено Тогда
			
			Для Каждого Реквизит ИЗ МетаданныеОбъекта.Реквизиты Цикл
				
				Если Реквизит.Тип.Типы()[0]=Тип("Строка") Тогда
					
					МассивСтроковыхРеквизитов.Добавить(Реквизит.Имя);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого Реквизит ИЗ МетаданныеОбъекта.СтандартныеРеквизиты Цикл
				
				Если Реквизит.Тип.Типы()[0]=Тип("Строка") Тогда
					
					МассивСтроковыхРеквизитов.Добавить(Реквизит.Имя);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ДанныеСинхронизации=Результат.СоответствиеРеквизитов.Выбрать();
		
		Пока ДанныеСинхронизации.Следующий() Цикл
			
			Если (НЕ МассивСтроковыхРеквизитов.Найти(ДанныеСинхронизации.РеквизитОбъектаКонсолидации)=Неопределено)
				И МассивКолонокТаблицы.Найти(ДанныеСинхронизации.РеквизитОбъектаВнешнейИБ)=Неопределено Тогда
				
				МассивКолонокТаблицы.Добавить(СтрЗаменить(СтрЗаменить(ДанныеСинхронизации.РеквизитОбъектаВнешнейИБ, "[", ""), "]", ""));
				
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЦикла;
	
	Возврат ДанныеДляКонвертации;
	
КонецФункции // ПолучитьОтборСтроковыхКолонокПравилаОбработки()

