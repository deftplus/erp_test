

// Функция получает хранимый файл из хранилища значений и открывает его в режиме только для чтения
//
&НаКлиенте
Процедура ОткрытьХранимыйФайлДляЧтения(ХранимыйФайл=Неопределено, Период = Неопределено,ВерсияХранимогоФайла=Неопределено) Экспорт
	
	Если ХранимыйФайл=Неопределено Тогда
		
		Если Не ВерсияХранимогоФайла=Неопределено Тогда
			
			ХранимыйФайл=ХранимыеФайлыУХ.ПолучитьФайлИмпорта(ВерсияХранимогоФайла);
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяКаталога = КаталогВременныхФайлов() + "\" + Строка(Новый УникальныйИдентификатор);
	ПолноеИмяФайла = ИмяКаталога + "\" + ХранимыеФайлыУХ.СформироватьИмяФайла(Строка(ХранимыйФайл), Период);
	ДатаИзмененияФайла = ТекущаяДата();
	
	ДвоичныеДанные = ХранимыеФайлыУХ.ПолучитьДвоичныеДанныеФайла(?(ВерсияХранимогоФайла=Неопределено,ХранимыйФайл,ВерсияХранимогоФайла), Период, ДатаИзмененияФайла);
	
	Если НЕ ЗначениеЗаполнено(ДвоичныеДанные) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		СоздатьКаталог(ИмяКаталога);
	Исключение
		Сообщить("Ошибка создания каталога для временного файла""" + ХранимыйФайл + """" + Символы.ПС + "- " + ОбщегоНазначенияУХ.СформироватьТекстСообщения(ОписаниеОшибки()), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ФайлНаДиске = Новый Файл(ПолноеИмяФайла);
	
	// Запись на диск последней версии файла из хранилища.
	
	Попытка
		ДвоичныеДанные.Записать(ФайлНаДиске.ПолноеИмя);
	Исключение
		Сообщить("Файл """ + ХранимыйФайл + """ не получен из информационной базы: " + Символы.ПС + "- " + ОбщегоНазначенияУХ.СформироватьТекстСообщения(ОписаниеОшибки()), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ДопПараметры = Новый Структура("ДатаИзмененияФайла, ПолноеИмяФайла, ФайлНаДиске", ДатаИзмененияФайла, ПолноеИмяФайла, ФайлНаДиске);
	Оповещение = Новый ОписаниеОповещения("Подключаемый_УстановитьВремяИОткрыть", ЭтотОбъект, ДопПараметры);
	ФайлНаДиске.НачатьУстановкуТолькоЧтения(Оповещение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьВремяИОткрыть(ДополнительныеПараметры) Экспорт 
    
    ДатаИзмененияФайла = ДополнительныеПараметры.ДатаИзмененияФайла;
    ПолноеИмяФайла = ДополнительныеПараметры.ПолноеИмяФайла;
    ФайлНаДиске = ДополнительныеПараметры.ФайлНаДиске;
	
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОткрытьФайлНаДиске", 
											ЭтотОбъект, 
											Новый Структура("ПолноеИмяФайла", ПолноеИмяФайла));
											
    ФайлНаДиске.НачатьУстановкуВремениИзменения(Оповещение, ДатаИзмененияФайла);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьФайлНаДиске(ДополнительныеПараметры) Экспорт 
    
    ПолноеИмяФайла = ДополнительныеПараметры.ПолноеИмяФайла;        
    ОткрытьФайлНаДиске(ПолноеИмяФайла);

КонецПроцедуры


// Функция открывает файл на файл на диске 
//
&НаКлиенте
Функция ОткрытьФайлНаДиске(ПолноеИмяФайла) Экспорт
	
	Попытка
		
		ФайлНаДиске = Новый Файл(ПолноеИмяФайла);
		
		Если НРег(ФайлНаДиске.Расширение) = ".mxl" Тогда
			
			ТабличныйДокумент = Новый ТабличныйДокумент;
			ТабличныйДокумент.Прочитать(ПолноеИмяФайла);
			ТабличныйДокумент.Показать(ПолноеИмяФайла,ПолноеИмяФайла);
			
		ИначеЕсли НРег(ФайлНаДиске.Расширение) = ".txt" Тогда
			
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.Прочитать(ПолноеИмяФайла);
			ТекстовыйДокумент.Показать(ПолноеИмяФайла,ПолноеИмяФайла);
			
		Иначе
			
			ОбщегоНазначенияКлиент.ОткрытьФайлВПрограммеПросмотра(ПолноеИмяФайла);				
			
		КонецЕсли; 
		
	Исключение
		
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьОшибка("ОбщийМодуль.ХранимыеФайлыУХ.ОткрытьФайлНаДиске.1",,,"Файл """ + ПолноеИмяФайла + """ не открыт.", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции
