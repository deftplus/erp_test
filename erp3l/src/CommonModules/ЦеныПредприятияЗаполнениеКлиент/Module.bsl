#Область ПрограммныйИнтерфейс

// Процедура для выбора вида цен из единой формы выбора.
//
// Параметры:
//	ПараметрыЗаполнения - см. НовыйПараметрыЗаполненияВыбратьВидЦен
Процедура ВыбратьВидЦен(ПараметрыЗаполнения) Экспорт
	
	ОписаниеОповещения = ПараметрыЗаполнения.ОписаниеОповещения;
	ЦенаВключаетНДС = ПараметрыЗаполнения.ЦенаВключаетНДС;
	ИспользоватьПриПродаже = ПараметрыЗаполнения.ИспользоватьПриПродаже;
	ИспользоватьПриПередачеМеждуОрганизациями = ПараметрыЗаполнения.ИспользоватьПриПередачеМеждуОрганизациями;
	//++ НЕ УТ
	ИспользоватьПриПередачеПродукцииДавальцу = ПараметрыЗаполнения.ИспользоватьПриПередачеПродукцииДавальцу;
	//-- НЕ УТ

	ВидЦеныПрайсЛист = ЦенообразованиеВызовСервера.ВидЦеныПрайсЛист();
	Если ВидЦеныПрайсЛист <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ВидЦеныПрайсЛист);
		Возврат;
	КонецЕсли;
	
	СтруктураОтбор = Новый Структура;
	СтруктураОтбор.Вставить("Статус", ПредопределенноеЗначение("Перечисление.СтатусыДействияВидовЦен.Действует"));
	Если ЦенаВключаетНДС <> Неопределено Тогда
			СтруктураОтбор.Вставить("ЦенаВключаетНДС", ЦенаВключаетНДС);
	КонецЕсли;
	Если ИспользоватьПриПродаже <> Неопределено Тогда
		СтруктураОтбор.Вставить("ИспользоватьПриПродаже", ИспользоватьПриПродаже);
	КонецЕсли;
	Если ИспользоватьПриПередачеМеждуОрганизациями <> Неопределено Тогда
		СтруктураОтбор.Вставить("ИспользоватьПриПередачеМеждуОрганизациями", ИспользоватьПриПередачеМеждуОрганизациями);
	КонецЕсли;
	//++ НЕ УТ
	Если ИспользоватьПриПередачеПродукцииДавальцу <> Неопределено Тогда
		СтруктураОтбор.Вставить("ИспользоватьПриПередачеПродукцииДавальцу", ИспользоватьПриПередачеПродукцииДавальцу);
	КонецЕсли;
	//-- НЕ УТ
	
	ОткрытьФорму(
		"Справочник.ВидыЦен.ФормаВыбора",
		Новый Структура("Отбор", СтруктураОтбор),,,,,
		ОписаниеОповещения);
		
КонецПроцедуры

// Вопрос по пересчету цен при изменении даты документа.
//
// Параметры:
//	Документ - ДокументОбъект - для которого выполняются проверки
//	ОповещениеОРезультате - ОписаниеОповещения - оповещение о результате вопроса, 
//			Ложь, если необходимые данные не заполнены или на вопрос пользователь ответил отрицательно.
//	ИмяТЧ -Строка - Имя табличной части, значение по-умолчанию "Товары".
//
//
Процедура ЗадатьВопросПересчетаЦеныПриИзмененииДаты(Документ, ОповещениеОРезультате, ИмяТЧ="Товары") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ.Соглашение)
		Или Не ЗначениеЗаполнено(Документ.Валюта)
		Или Документ[ИмяТЧ].Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОРезультате, Ложь);
		Возврат;
	КонецЕсли;
	
	ВариантыОтветов = Новый СписокЗначений;
	ВариантыОтветов.Добавить(Истина, НСтр("ru = 'Перезаполнить';
											|en = 'Refill'"));
	ВариантыОтветов.Добавить(Ложь, НСтр("ru = 'Не перезаполнять';
										|en = 'Do not refill'"));
	
	ПоказатьВопрос(ОповещениеОРезультате, НСтр("ru = 'Перезаполнить цены по соглашению?';
												|en = 'Refill prices by the agreement?'"), ВариантыОтветов);
	
КонецПроцедуры

// Вопрос по пересчету цен при изменении соглашения.
//
// Параметры:
//	Документ - ДокументОбъект - для которого выполняются проверки
//	ОповещениеОРезультате - ОписаниеОповещения - оповещение о результате вопроса, 
//			Ложь, если необходимые данные не заполнены или на вопрос пользователь ответил отрицательно.
//	ИмяТЧ -Строка - Имя табличной части, значение по-умолчанию "Товары".
//
//
Процедура ЗадатьВопросПересчетаЦеныПриИзмененииСоглашения(Документ, ОповещениеОРезультате, ИмяТЧ="Товары") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ.Соглашение)
		Или Документ[ИмяТЧ].Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОРезультате, Ложь);
		Возврат;
	КонецЕсли;
	
	ВариантыОтветов = Новый СписокЗначений;
	ВариантыОтветов.Добавить(Истина, НСтр("ru = 'Перезаполнить';
											|en = 'Refill'"));
	ВариантыОтветов.Добавить(Ложь, НСтр("ru = 'Не перезаполнять';
										|en = 'Do not refill'"));
	
	ПоказатьВопрос(ОповещениеОРезультате, НСтр("ru = 'Перезаполнить цены по соглашению?';
												|en = 'Refill prices by the agreement?'"), ВариантыОтветов);
	
КонецПроцедуры

// Проверяет заполненность реквизитов, необходимых для заполнения цен в документе по виду цен.
//
// Параметры:
//   Документ                    - ДокументОбъект - объект, для которого выполняются проверки.
//   ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку.
//   ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
//   Булево - Ложь, если необходимые данные не заполнены.
//
Функция НеобходимоЗаполнениеЦенПоВидуЦен(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Не ЗначениеЗаполнено(Документ.Валюта) Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'В документе не указана валюта. Цены не могут быть заполнены.';
									|en = 'Currency is not specified in the document. Prices cannot be populated.'"));
		Возврат Ложь;
		
	ИначеЕсли Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru = 'В документе не заполнен список %ПредставлениеТабличнойЧасти%. Цены не могут быть заполнены.';
									|en = 'The %ПредставлениеТабличнойЧасти% list in the document is not filled in. Cannot fill in the prices.'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Проверяет заполненность реквизитов, необходимых для заполнения цен в документе по соглашению с клиентом.
//
// Параметры:
//	Документ                    - ДокументОбъект - объект, для которого выполняются проверки
//	ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку
//	ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
//	Булево - Ложь, если необходимые данные не заполнены.
//
Функция НеобходимоЗаполнениеЦенПоСоглашению(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Не ЗначениеЗаполнено(Документ.Соглашение) Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'В документе не указано соглашение с клиентом. Цены не могут быть заполнены.';
									|en = 'Agreement with customer is not specified in the document. Prices cannot be filled in.'"));
		Возврат Ложь;
		
	ИначеЕсли Не ЗначениеЗаполнено(Документ.Валюта) Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'В документе не указана валюта. Цены не могут быть заполнены.';
									|en = 'Currency is not specified in the document. Prices cannot be populated.'"));
		Возврат Ложь;
		
	ИначеЕсли Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru = 'В документе не заполнен список %ПредставлениеТабличнойЧасти%. Цены не могут быть заполнены.';
									|en = 'The %ПредставлениеТабличнойЧасти% list in the document is not filled in. Cannot fill in the prices.'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции

#Область Конструкторы

// Конструктор параметров метода ВыбратьВидЦен.
//
// Возвращаемое значение:
//	Структура - Полный перечень возможных параметров,некоторые могут быть необязательными к заполнению:
//		* ОписаниеОповещения - ОписаниеОповещения - оповещение, которое должно быть обработано после выбора вида цен
//		* ЦенаВключаетНДС 							- Булево, Неопределено - отбор при выборе цены
//		* ИспользоватьПриПродаже 					- Булево, Неопределено - отбор при выборе цены
//		* ИспользоватьПриПередачеМеждуОрганизациями - Булево, Неопределено - отбор при выборе цены
//++ НЕ УТ
//		* ИспользоватьПриПередачеПродукцииДавальцу 	- Булево, Неопределено - отбор при выборе цены.
//-- НЕ УТ
//
Функция НовыйПараметрыЗаполненияВыбратьВидЦен() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОписаниеОповещения");
	СтруктураПараметров.Вставить("ЦенаВключаетНДС", Неопределено);
	СтруктураПараметров.Вставить("ИспользоватьПриПродаже", Неопределено);
	СтруктураПараметров.Вставить("ИспользоватьПриПередачеМеждуОрганизациями", Неопределено);
	СтруктураПараметров.Вставить("ВладелецИндивидуальногоВидаЦен", Неопределено);
//++ НЕ УТ
	СтруктураПараметров.Вставить("ИспользоватьПриПередачеПродукцииДавальцу", Неопределено);
//-- НЕ УТ
	
	Возврат СтруктураПараметров; 
	
КонецФункции

#КонецОбласти

#КонецОбласти
