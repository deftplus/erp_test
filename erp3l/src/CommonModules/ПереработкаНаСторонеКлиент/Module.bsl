////////////////////////////////////////////////////////////////////////////////
// Подсистема "Переработка на стороне".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//++ НЕ УТКА

// Формирует данные для формирования заказов переработчикам.
//
// Параметры:
//  СписокСтрок	 - Массив - Содержит данные выбранных строк на основании которых оформляются заказы.
// 
// Возвращаемое значение:
//  Структура - Содержит данные необходимые для формирования заказов переработчикам.
//
Функция ДанныеДляФормированияЗаказовПереработчикам(СписокСтрок) Экспорт
	
	Организация = Неопределено;
	Переработчик = Неопределено;
	Склад = Неопределено;
	Подразделение = Неопределено;
	ГруппаСкладов = Неопределено;
	НаправлениеДеятельности = Неопределено;
	ВариантПриемкиТоваров = Неопределено;
	ТипРаспоряжения = Неопределено;
	
	РеквизитыШапки = Новый Структура;
	ЭтапыГрафика = Новый Массив;
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		РазрешенВыборГруппы = (ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах")
								ИЛИ ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных"));
		
		Если (Склад <> Неопределено 
					И Склад <> ДанныеСтроки.Склад 
					И (ГруппаСкладов <> ДанныеСтроки.ГруппаСкладов
						ИЛИ НЕ РазрешенВыборГруппы)
					И ТипЗнч(ДанныеСтроки.Распоряжение) <> Тип("ДокументСсылка.ЭтапПроизводства2_2"))
			ИЛИ (ЗначениеЗаполнено(Переработчик)
					И ЗначениеЗаполнено(ДанныеСтроки.Переработчик)
					И Переработчик <> ДанныеСтроки.Переработчик) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать продукцию 
												|одного переработчика, поступающую на один склад.';
												|en = 'To register the document, select products
												|of one subcontractor that are delivered to one warehouse.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Организация <> Неопределено 
			И Организация <> ДанныеСтроки.Организация Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одной организации.';
											|en = 'To register the document, select orders of one company.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если НаправлениеДеятельности <> Неопределено
			И НаправлениеДеятельности <> ДанныеСтроки.НаправлениеДеятельности Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы одного направления деятельности.';
											|en = 'To register the document, select orders of one line of business.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ВариантПриемкиТоваров) Тогда
			Если ЗначениеЗаполнено(ВариантПриемкиТоваров)
				И ВариантПриемкиТоваров <> ДанныеСтроки.ВариантПриемкиТоваров Тогда
				ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать заказы, использующие один вариант приемки продукции.';
												|en = 'To register the document, select orders which use one goods receiving option.'"));
				Возврат Неопределено;
			КонецЕсли;
			ВариантПриемкиТоваров = ДанныеСтроки.ВариантПриемкиТоваров;
		КонецЕсли;
		
		Если ТипРаспоряжения <> Неопределено 
			И ТипРаспоряжения <> ТипЗнч(ДанныеСтроки.Распоряжение) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для оформления документа необходимо выбрать распоряжения одного типа.';
											|en = 'Select references of the same type to register the document.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Организация = ДанныеСтроки.Организация;
		Склад = ДанныеСтроки.Склад;
		Подразделение = ДанныеСтроки.Подразделение;
		НаправлениеДеятельности = ДанныеСтроки.НаправлениеДеятельности;
		ГруппаСкладов = ДанныеСтроки.ГруппаСкладов;
		ТипРаспоряжения = ТипЗнч(ДанныеСтроки.Распоряжение);
		
		// Переработчик может быть не указан в заказе на производство
		Переработчик = ?(ЗначениеЗаполнено(ДанныеСтроки.Переработчик), ДанныеСтроки.Переработчик, Переработчик);
		
		//++ Устарело_Производство21
		Если ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ДанныеЭтапа = Новый Структура("Распоряжение,КодСтрокиЭтапыГрафик");
			ЗаполнитьЗначенияСвойств(ДанныеЭтапа, ДанныеСтроки);
			ЭтапыГрафика.Добавить(ДанныеЭтапа);
		Иначе
		//-- Устарело_Производство21	
			ЭтапыГрафика.Добавить(ДанныеСтроки.Распоряжение);
		//++ Устарело_Производство21	
		КонецЕсли; 
		//-- Устарело_Производство21
		
	КонецЦикла; 
	
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Переработчик);
	РеквизитыШапки.Вставить("Подразделение", Подразделение);
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	//++ Устарело_Производство21
	Если ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		РеквизитыШапки.Вставить("ГруппировкаЗатрат",	ПредопределенноеЗначение("Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЗаказамНаПроизводство"));
	Иначе
	//-- Устарело_Производство21	
		РеквизитыШапки.Вставить("ГруппировкаЗатрат", ПредопределенноеЗначение("Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства"));
	//++ Устарело_Производство21	
	КонецЕсли;
	//-- Устарело_Производство21
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ЭтапыГрафика", ЭтапыГрафика);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

//-- НЕ УТКА

#КонецОбласти
