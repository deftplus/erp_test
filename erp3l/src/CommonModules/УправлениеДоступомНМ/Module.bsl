
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	ДобавитьОписаниеПрофиля_НалоговыйМониторинг(ОписанияПрофилей, ПараметрыОбновления);
	
	Для Каждого ОписаниеПрофиля Из ОписанияПрофилей Цикл
		Если ОписаниеПрофиля.Идентификатор = "62730c03-81d6-11e0-a42a-be487808c52b" Тогда // Главный бухгалтер
			ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОтветовНаЗапросНалоговогоМониторинга");
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ДобавитьОписаниеПрофиля_НалоговыйМониторинг(ОписанияПрофилей, ПараметрыОбновления)

	ПрофильИсточник = Неопределено;
	
	Для каждого ТекущийПрофиль Из ОписанияПрофилей Цикл	
		Если ТекущийПрофиль.Имя = "ТолькоПросмотр" Тогда
			ПрофильИсточник = ТекущийПрофиль;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Если ПрофильИсточник = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеПрофиля = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ПрофильИсточник);
	
	ОписаниеПрофиля.Идентификатор	= ИдентификаторПрофиляНалоговогоМониторинга();
	ОписаниеПрофиля.Наименование  	= НСтр("ru = 'Налоговый мониторинг'", Метаданные.ОсновнойЯзык.КодЯзыка);			
	ОписаниеПрофиля.Имя				= "НалоговыйМониторинг";
	
	ОписаниеПрофиля.Роли.Добавить("НалоговыйМониторинг");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхБухгалтерииУХ");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваУХ");
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхРегламентированнойОтчетности");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхРегламентированногоУчета");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Функция ИдентификаторПрофиляНалоговогоМониторинга() Экспорт	
	Возврат "588f3e39-a50b-4d3d-83b3-8633e9f3e900";
КонецФункции
