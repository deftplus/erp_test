
#Область ПрограммныйИнтерфейс
	
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция получает виды аналитик статей некоторого вида бюджета.
// Вид бюджета определяется по первой статье из списка.
//
// Параметры:
//  СтатьиБюджета	 - 	Массив, - Перечень статей, для которых требуется получить виды аналитик
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица, содержащая необходимые параметры.
//
// бывшая ДвиженияБюджетированиеУХ.ВидыАналитикСтатей
Функция ВидыАналитикСтатей(СтатьиБюджета, ТолькоЛимитируемыеАналитики = Ложь, ПараметрыЛимитирования = неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(СтатьиБюджета) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонПолей = "СтатьиБюджета.ВидАналитики%1 КАК ВидАналитики%1,
	|	""<""+СтатьиБюджета.ВидАналитики%1.Наименование+"">"" КАК ВидАналитики%1Наименование,
	|	СтатьиБюджета.ВидАналитики%1.ТипЗначения КАК ВидАналитики%1ТипЗначения,
	|	ЕСТЬNULL(ПараметрыЛимитирования.КонтролироватьАналитику%1, ЛОЖЬ) КАК ЛимитируетсяАналитика%1,
	|	НЕ ЕСТЬNULL(ПараметрыЛимитирования.КонтролироватьАналитику%1, ЛОЖЬ) КАК НеЛимитируетсяАналитика%1";
	КоличествоАналитик = АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи();
	
	ПоляВыбора = Новый Массив;
	Для Номер = 1 По КоличествоАналитик Цикл
		ПоляВыбора.Добавить(СтрШаблон(ШаблонПолей, Номер));
	КонецЦикла;
	ТекстПолей = СтрСоединить(ПоляВыбора, ","+Символы.ПС+Символы.Таб);
	
	//
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	СтатьиБюджета.Ссылка КАК СтатьяБюджета,
	|	ЕСТЬNULL(ПараметрыЛимитирования.КонтролироватьСтатью, ЛОЖЬ) КАК КонтролироватьСтатью,
	|	%1
	|ИЗ
	|	Справочник.%2 КАК СтатьиБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтроляЛимитаСтатейБюджетов.СрезПоследних(&Период) КАК ПараметрыЛимитирования
	|		ПО ПараметрыЛимитирования.СтатьяБюджета = СтатьиБюджета.Ссылка
	|ГДЕ
	|	СтатьиБюджета.Ссылка В(&СтатьиБюджета)";
	Запросы = Новый Массив;
	Для Каждого КлючЗначение Из Новый Структура("СтатьиДвиженияДенежныхСредств,СтатьиДоходовИРасходов,СтатьиДвиженияРесурсов") Цикл
		Запросы.Добавить(СтрШаблон(ШаблонЗапроса, ТекстПолей, КлючЗначение.Ключ));
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(Запросы, Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ"+Символы.ПС+Символы.ПС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтатьиБюджета", СтатьиБюджета);
	Запрос.Текст = ТекстЗапроса;
	
	Если ТипЗнч(ПараметрыЛимитирования) = Тип("Структура") Тогда
		
		Если НЕ ПараметрыЛимитирования.Свойство("Заполнены") Тогда
			ПараметрыЛимитирования.Вставить("Заполнены", 
				ПараметрыЛимитирования.Свойство("ПараметрыЛимитирования_ВидБюджета") 
				И ПараметрыЛимитирования.Свойство("ПараметрыЛимитирования_Период")
			);
		КонецЕсли;
		
		Если ПараметрыЛимитирования.Заполнены = ИСТИНА Тогда
			Запрос.УстановитьПараметр("ВидБюджета", ПараметрыЛимитирования.ПараметрыЛимитирования_ВидБюджета);
			Если ТипЗнч(ПараметрыЛимитирования.ПараметрыЛимитирования_Период) = Тип("СправочникСсылка.Периоды") Тогда
				Запрос.УстановитьПараметр("Период", НачалоГода(ПараметрыЛимитирования.ПараметрыЛимитирования_Период.ДатаНачала));
			Иначе
				Запрос.УстановитьПараметр("Период", НачалоГода(ПараметрыЛимитирования.ПараметрыЛимитирования_Период));
			КонецЕсли;
		Иначе
			Запрос.УстановитьПараметр("Период", '21991231');
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("Период", '21991231');
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Сч = 1 По КоличествоАналитик Цикл
		Результат.Колонки.Добавить("ВидАналитики" + Сч + "ПараметрыВыбора");
		Результат.Колонки.Добавить("ВидАналитики" + Сч + "СвязиАналитик");
	КонецЦикла;

	ПараметрыСвязейАналитик = ПараметрыСвязейАналитик();
	
	Для Каждого ТекПараметрыСтатьи Из Результат Цикл
		
		Для ИндексАналитики = 1 По КоличествоАналитик Цикл
			
			//
			ОписаниеТиповАналитики = ТекПараметрыСтатьи["ВидАналитики" + ИндексАналитики + "ТипЗначения"];
			Если Не ЗначениеЗаполнено(ОписаниеТиповАналитики) Тогда
				Продолжить;
			КонецЕсли;
			
			// При необходимости очищаем информацию о нелимитируемой аналитике
			Если ТолькоЛимитируемыеАналитики = Истина Тогда
				ВидАналитики = ТекПараметрыСтатьи["ВидАналитики"+ИндексАналитики];
				НеЛимитируется = ТекПараметрыСтатьи["НеЛимитируетсяАналитика"+ИндексАналитики];
				
				Если ЗначениеЗаполнено(ВидАналитики) И НеЛимитируется  Тогда
					ТекПараметрыСтатьи["ВидАналитики"+ИндексАналитики] = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка();
					ТекПараметрыСтатьи["ВидАналитики"+ИндексАналитики + "Наименование"] = "";
					ТекПараметрыСтатьи["ВидАналитики"+ИндексАналитики + "ТипЗначения"] = неопределено;
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			// 1С:УХ не поддерживает составные типы аналитик раскрытия, поэтому всегда будет только один элемент.
			ТипАналитики = ОписаниеТиповАналитики.Типы()[0];
			
			// Параметры выбора
			Если ТипАналитики = Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ") Тогда
				ПараметрыВыбора = Новый Массив;
				ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ТекПараметрыСтатьи["ВидАналитики" + ИндексАналитики]));
				ТекПараметрыСтатьи["ВидАналитики" + ИндексАналитики +"ПараметрыВыбора"] = Новый ФиксированныйМассив(ПараметрыВыбора);
			КонецЕсли;
			
			// Найти и зафиксировать связи аналитик с подходящими типами
			СвязиАналитик = ПолучитьСвязиАналитик(ТипАналитики, ПараметрыСвязейАналитик, ТекПараметрыСтатьи, ИндексАналитики);
			ТекПараметрыСтатьи["ВидАналитики" + ИндексАналитики + "СвязиАналитик"] = 
				?(СвязиАналитик.Количество() = 0, неопределено, Новый ФиксированныйМассив(СвязиАналитик));
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает структуру видов аналитик статьи бюджета.
//
// Параметры:
//  СтатьяБюджета	 - 	 СправочникСсылка.СтатьиДвиженияДенежныхСредств, СправочникСсылка.СтатьиДоходовИРасходов, 
// СправочникСсылка.СтатьиДвиженияРесурсов- статья бюджета, для которой необходимо получить аналитики
//  ТолькоЛимитируемыеАналитики - Булево - Если Истина, то возвращаются только лимитируемые аналитики. Значение по умолчанию Ложь
//
// Возвращаемое значение:
//  Структура - Структура, содержащая виды аналитик.
//
Функция ВидыАналитикСтатьи(СтатьяБюджета, ТолькоЛимитируемыеАналитики = Ложь, ПараметрыЛимитирования = неопределено) Экспорт
	
	Реквизиты = АналитикиСтатейБюджетовУХКлиентСервер.РеквизитыАналитикИзШаблона(
		"ВидАналитики%1,ВидАналитики%1Наименование,ВидАналитики%1ТипЗначения,ВидАналитики%1ПараметрыВыбора,ВидАналитики%1СвязиАналитик");
	ВидыАналитик = Новый Структура(Реквизиты);
	Если Не ЗначениеЗаполнено(СтатьяБюджета) Тогда
		Возврат ВидыАналитик;
	КонецЕсли;
	
	СтатьяВМассиве = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтатьяБюджета);
	ОписаниеВидовАналитик = АналитикиСтатейБюджетовУХВызовСервера.ВидыАналитикСтатей(СтатьяВМассиве,ТолькоЛимитируемыеАналитики, ПараметрыЛимитирования);
	
	Если ЗначениеЗаполнено(ОписаниеВидовАналитик) Тогда
		ВидыАналитик = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ОписаниеВидовАналитик[0]);
	КонецЕсли;
	
	Возврат ВидыАналитик;
	
КонецФункции

// Возвращает ссылки на документы, в которых использована статья бюджета
Функция БлокирующиеСсылки(СтатьяСсылка) Экспорт
	
	Возврат АналитикиСтатейБюджетовУХ.БлокирующиеСсылки(СтатьяСсылка);
	
КонецФункции

// Процедура приводит статью бюджета к типу, заданному в ВидБюджета
Процедура ПривестиЗначениеСтатьиБюджетаПоВидуБюджета(СтатьяБюджета, ВидБюджета) Экспорт
	
	Если ЗначениеЗаполнено(ВидБюджета) Тогда
		 СтатьяБюджета = ВидБюджета.ТипЗначения.ПривестиЗначение(СтатьяБюджета);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНомерАналитикиВладельца(Объект, ТребуемыйТипВладельца, НомерПодчиненнойАналитики)
	
	Индекс = НомерПодчиненнойАналитики - 1;
	Пока Индекс > 0 Цикл
		ВидАналитики = СтрШаблон("ВидАналитики%1ТипЗначения", Индекс);
		ТипЗначения = Объект[ВидАналитики];
		Если ТипЗнч(Объект[ВидАналитики]) = Тип("ОписаниеТипов") 
			 И ТипЗначения.СодержитТип(ТребуемыйТипВладельца) Тогда
			Возврат Индекс;
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

Функция ПараметрыСвязейАналитик()
	
	ПараметрыСвязейАналитик = Новый Соответствие;
	
	АналитикиСтатейБюджетовУХВстраивание.ПараметрыСвязейАналитик(ПараметрыСвязейАналитик);
	Возврат ПараметрыСвязейАналитик;
	
КонецФункции

// Функция заполняет массив связей аналитик
Функция ПолучитьСвязиАналитик(ТипАналитики, ПараметрыСвязейАналитик, ПараметрыСтатьи, ИндексАналитики)
	
	//
	ТребуемыеПараметрыТипыАналитик = Новый Массив;
	
	// Если есть предопределенные отборы, то используем их.
	ПредопределенныеСвязи = ПараметрыСвязейАналитик[ТипАналитики];
	Если ПредопределенныеСвязи <> неопределено Тогда
		Для Каждого КлючЗначение Из ПредопределенныеСвязи Цикл
			ТребуемыеПараметрыТипыАналитик.Добавить(
				Новый Структура("ПутьКДанным, Значение", КлючЗначение.Ключ, КлючЗначение.Значение)
			);
		КонецЦикла;
	КонецЕсли;
	
	// При наличии у справочника владельца добавляем к анализу и его
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипАналитики) Тогда
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипАналитики);
		Если ОбъектМетаданных.Владельцы.Количество() Тогда
			РеквизитВладелец = ОбъектМетаданных.СтандартныеРеквизиты.Владелец;
			ТребуемыеПараметрыТипыАналитик.Добавить(
				Новый Структура("ПутьКДанным, Значение", РеквизитВладелец.Имя, РеквизитВладелец.Тип));
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Массив;
	Для Каждого Отбор Из ТребуемыеПараметрыТипыАналитик Цикл
		
		Если ТипЗнч(Отбор.Значение) = Тип("Тип") Тогда
			Типы = Новый Массив;
			Типы.Добавить(Отбор.Значение);
		ИначеЕсли ТипЗнч(Отбор.Значение) = Тип("ОписаниеТипов") Тогда
			Типы = Отбор.Значение.Типы();
		Иначе
			Продолжить;
		КонецЕсли;
		
		// Заполняем параметры связи
		Для Каждого Тип Из Типы Цикл
			НомерАналитикиВладельца = ПолучитьНомерАналитикиВладельца(ПараметрыСтатьи, Тип, ИндексАналитики);
			Если НомерАналитикиВладельца <> 0 Тогда
				Результат.Добавить(
					Новый Структура("Имя, НомерАналитики, ТипВладельца", "Отбор."+Отбор.ПутьКДанным,  НомерАналитикиВладельца, Тип)
				);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
