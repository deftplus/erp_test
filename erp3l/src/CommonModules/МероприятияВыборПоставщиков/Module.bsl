

// Получает таблицу длительности стадий закупки для способа закупки СпособЗакупкиВход.
// Параметр ДополнительныеПараметрыВход содержит структуру дополнительных параметров:
// -Переторжка (булево) - включать стадии Переторжка;
// -КвалификационныйОтбор (булево) - включать стадии КвалификационныйОтбор.
Функция ПолучитьТаблицуДительностиСтадийЗакупки(СпособЗакупкиВход, ДополнительныеПараметрыВход) Экспорт
	РезультатФункции = Новый ТаблицаЗначений;
	// Получим шаблон по способу закупки.
	ШаблонМероприятия = Справочники.ШаблоныМероприятий.ВернутьШаблонЗакупки(СпособЗакупкиВход);
	Если ЗначениеЗаполнено(ШаблонМероприятия) Тогда
		// ПолучимТаблицу стадий из шаблона.
		ТаблицаСтадийИсходная = Справочники.ШаблоныМероприятий.ВернутьТаблицуСтадийШаблонаМероприятия(ШаблонМероприятия);
		// Исключение Переторжки и Квалификационного отбора, а также добавим длительность.
		ИспользоватьПереторжку				 = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметрыВход, "Переторжка", Ложь);
		ИспользоватьКвалификационныйОтбор	 = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметрыВход, "КвалификационныйОтбор", Ложь);
		РезультатФункции = ТаблицаСтадийИсходная.СкопироватьКолонки();
		РезультатФункции.Колонки.Добавить("Длительность");
		Для Каждого ТекТаблицаСтадийИсходная Из ТаблицаСтадийИсходная Цикл
			ТекСтадия = ТекТаблицаСтадийИсходная.Стадия;
			ИсключитьСтадию = Ложь;
			// Проверка Переторжки.
			ЭтоПереторжка = Справочники.СтадииМероприятий.ЭтоСтадияПереторжка(ТекСтадия);
			Если (НЕ ИспользоватьПереторжку) И (ЭтоПереторжка) Тогда
				ИсключитьСтадию = Истина;
			Иначе
				// Разрешено добалять.
			КонецЕсли;
			// Проверка Квалификационного отбора.
			ЭтоКвалификационныйОтбор = Справочники.СтадииМероприятий.ЭтоСтадияКвалификационногоОтбора(ТекСтадия);
			Если (НЕ ИспользоватьКвалификационныйОтбор) И (ЭтоКвалификационныйОтбор) Тогда
				ИсключитьСтадию = Истина;
			Иначе
				// Разрешено добалять.
			КонецЕсли;
			// Добавление стадий в таблицу и вывод их длительностей.
			Если НЕ ИсключитьСтадию Тогда
				НоваяСтрока = РезультатФункции.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекТаблицаСтадийИсходная);
				НоваяСтрока.Длительность = ТекСтадия.Длительность;
			Иначе
				// Пропускаем стадию.
			КонецЕсли;
		КонецЦикла;	
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось получить шаблон мероприятия для способа закупки %СпособЗакупки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СпособЗакупки%", Строка(СпособЗакупкиВход));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ПолучитьТаблицуДительностиСтадийЗакупки()

// Возвращает плановую длительность мероприятия закупки по способу закупки РезультатФункции.
// Параметры ПереторжкаВход и КвалификационныйОтборВход указывают необходимость включения 
// переторжки и квалификационного отбора соответственно.
Функция ПолучитьПлановуюДлительностьЗакупки(СпособЗакупкиВход, ПереторжкаВход = Ложь, КвалификационныйОтборВход = Ложь) Экспорт
	// Получим таблицу стадий.
	РезультатФункции = 0;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Переторжка", ПереторжкаВход);
	ДополнительныеПараметры.Вставить("КвалификационныйОтбор", КвалификационныйОтборВход);
	ТаблицаДлительность = ПолучитьТаблицуДительностиСтадийЗакупки(СпособЗакупкиВход, ДополнительныеПараметры);
	// Посчитаем общую длительность в таблице.
	ЕстьКолонкаДлительность = (ТаблицаДлительность.Колонки.Найти("Длительность") <> Неопределено);
	Если ЕстьКолонкаДлительность Тогда
		РезультатФункции = ТаблицаДлительность.Итог("Длительность");
	Иначе
		РезультатФункции = 0;
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ПолучитьПлановуюДлительност

// Добавляет в шаблон мероприятия ОбъектШаблонИзм предопределённые стадии по
// способу выбора поставщика СпособВыбораПоставщикаВход.
Процедура РазместитьСтадииВОбъект(СпособВыбораПоставщикаВход, ОбъектШаблонИзм) Экспорт
	СправочникМероприятия = Справочники.СтадииМероприятий;
	Если СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.ЗапросПредложений Тогда
		// Запрос предложений.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.ЗапросПредложений_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.ЗапросПредложений_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.ЗапросПредложений_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.ЗапросПредложений_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 41, СправочникМероприятия.ЗапросПредложений_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 60, СправочникМероприятия.ЗапросПредложений_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.ЗапросПредложений_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.ЗапросПредложений_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.ЗапросПредложений_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.ЗапросПредложений_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.ЗапросПредложений_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.ЗапросПредложений_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.Конкурс Тогда
		// Конкурс.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.Конкурс_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 15, СправочникМероприятия.Конкурс_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 23, СправочникМероприятия.Конкурс_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 31, СправочникМероприятия.Конкурс_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 38, СправочникМероприятия.Конкурс_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 46, СправочникМероприятия.Конкурс_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 54, СправочникМероприятия.Конкурс_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 62, СправочникМероприятия.Конкурс_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 69, СправочникМероприятия.Конкурс_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 77, СправочникМероприятия.Конкурс_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 85, СправочникМероприятия.Конкурс_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.Конкурс_ОглашениеРезультатов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.Конкурс_ПодписаниеКонтракта);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.Аукцион Тогда
		// Аукцион.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.Аукцион_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.Аукцион_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.Аукцион_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.Аукцион_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 42, СправочникМероприятия.Аукцион_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 50, СправочникМероприятия.Аукцион_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.Аукцион_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.Аукцион_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.Аукцион_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.Аукцион_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.Аукцион_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.Аукцион_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.ЗапросКотировок Тогда
		// Запрос котировок.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.ЗапросКотировок_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.ЗапросКотировок_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.ЗапросКотировок_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.ЗапросКотировок_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 41, СправочникМероприятия.ЗапросКотировок_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 50, СправочникМероприятия.ЗапросКотировок_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.ЗапросКотировок_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.ЗапросКотировок_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.ЗапросКотировок_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.ЗапросКотировок_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.ЗапросКотировок_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.ЗапросКотировок_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.ЗапросПредложенийУМсп Тогда
		// Запрос предложений у МСП.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.ЗапросПредложений_МСП_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.ЗапросПредложений_МСП_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.ЗапросПредложений_МСП_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.ЗапросПредложений_МСП_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 41, СправочникМероприятия.ЗапросПредложений_МСП_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 60, СправочникМероприятия.ЗапросПредложений_МСП_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.ЗапросПредложений_МСП_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.ЗапросПредложений_МСП_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.ЗапросПредложений_МСП_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.ЗапросПредложений_МСП_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.ЗапросПредложений_МСП_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.ЗапросПредложений_МСП_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.КонкурсУМсп Тогда
		// Конкурс у МСП.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.Конкурс_МСП_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 15, СправочникМероприятия.Конкурс_МСП_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 23, СправочникМероприятия.Конкурс_МСП_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 31, СправочникМероприятия.Конкурс_МСП_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 38, СправочникМероприятия.Конкурс_МСП_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 46, СправочникМероприятия.Конкурс_МСП_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 54, СправочникМероприятия.Конкурс_МСП_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 62, СправочникМероприятия.Конкурс_МСП_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 69, СправочникМероприятия.Конкурс_МСП_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 77, СправочникМероприятия.Конкурс_МСП_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 85, СправочникМероприятия.Конкурс_МСП_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.Конкурс_МСП_ОглашениеРезультатов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.Конкурс_МСП_ПодписаниеКонтракта);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.АукционУМсп Тогда
		// Аукцион у МСП.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.Аукцион_МСП_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.Аукцион_МСП_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.Аукцион_МСП_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.Аукцион_МСП_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 42, СправочникМероприятия.Аукцион_МСП_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 50, СправочникМероприятия.Аукцион_МСП_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.Аукцион_МСП_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.Аукцион_МСП_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.Аукцион_МСП_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.Аукцион_МСП_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.Аукцион_МСП_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.Аукцион_МСП_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.ЗапросКотировокУМсп Тогда
		// Запрос котировок у МСП.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.ЗапросКотировок_МСП_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 17, СправочникМероприятия.ЗапросКотировок_МСП_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.ЗапросКотировок_МСП_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.ЗапросКотировок_МСП_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 41, СправочникМероприятия.ЗапросКотировок_МСП_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 50, СправочникМероприятия.ЗапросКотировок_МСП_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 58, СправочникМероприятия.ЗапросКотировок_МСП_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 67, СправочникМероприятия.ЗапросКотировок_МСП_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 75, СправочникМероприятия.ЗапросКотировок_МСП_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 83, СправочникМероприятия.ЗапросКотировок_МСП_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.ЗапросКотировок_МСП_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.ЗапросКотировок_МСП_ОглашениеРезультатов);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.КвалификационныйОтбор Тогда
		// Квалификационный отбор.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 8, СправочникМероприятия.КвалификационныйОтбор_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 15, СправочникМероприятия.КвалификационныйОтбор_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 23, СправочникМероприятия.КвалификационныйОтбор_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 31, СправочникМероприятия.КвалификационныйОтбор_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 38, СправочникМероприятия.КвалификационныйОтбор_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 46, СправочникМероприятия.КвалификационныйОтбор_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 54, СправочникМероприятия.КвалификационныйОтбор_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 62, СправочникМероприятия.КвалификационныйОтбор_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 69, СправочникМероприятия.КвалификационныйОтбор_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 77, СправочникМероприятия.КвалификационныйОтбор_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 85, СправочникМероприятия.КвалификационныйОтбор_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 92, СправочникМероприятия.КвалификационныйОтбор_ОглашениеРезультатов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.КвалификационныйОтбор_ПодписаниеКонтракта);
	ИначеЕсли СпособВыбораПоставщикаВход = Перечисления.СпособыВыбораПоставщика.КонкурентныеПереговоры Тогда
	    // Конкурентные переговоры.
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 10, СправочникМероприятия.КонкурентныеПереговоры_НачалоПодготовкиЗакупкиКПубликации);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 20, СправочникМероприятия.КонкурентныеПереговоры_ОфициальноеОбъявлениеЗакупки);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 25, СправочникМероприятия.КонкурентныеПереговоры_НачалоКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 33, СправочникМероприятия.КонкурентныеПереговоры_ОкончаниеКвалификационногоОтбора);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 30, СправочникМероприятия.КонкурентныеПереговоры_НачалоПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 40, СправочникМероприятия.КонкурентныеПереговоры_НачалоПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 50, СправочникМероприятия.КонкурентныеПереговоры_ОкончаниеПредоставленияРазъяснений);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 60, СправочникМероприятия.КонкурентныеПереговоры_ОкончаниеПриемаЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 70, СправочникМероприятия.КонкурентныеПереговоры_ВскрытиеЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 80, СправочникМероприятия.КонкурентныеПереговоры_ОкончаниеРассмотренияЗаявок);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 90, СправочникМероприятия.КонкурентныеПереговоры_ПодведениеИтогов);
		ДобавитьСтадиюВШаблон(ОбъектШаблонИзм, 100, СправочникМероприятия.КонкурентныеПереговоры_ОглашениеРезультатов);
	Иначе
		// Неизвестный вариант.
		ТекстСообщения = НСтр("ru = 'Неизвестный способ выбора поставщика - ""%СпособВыбораПоставщика%"". Заполнение шаблона ""%Шаблон%"" отменено.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СпособВыбораПоставщика%", Строка(СпособВыбораПоставщикаВход));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Шаблон%", Строка(ОбъектШаблонИзм));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры		// РазместитьСтадииЗапросПредложенийВОбъект()

// Добавляет в шаблон ШаблонВход стадию с итогом выполнения ИтогВыполненияВход.
Процедура ДобавитьСтадиюВШаблон(ШаблонВход, ИтогВыполненияВход, СтадияВход)
	НоваяСтрока = ШаблонВход.Стадии.Добавить();
	НоваяСтрока.Стадия				 = СтадияВход;
	НоваяСтрока.ИтогВыполнения		 = ИтогВыполненияВход;
	НоваяСтрока.ГруппаРодитель		 = 0;
	НоваяСтрока.ГруппирующаяСтрока	 = Ложь;
	НоваяСтрока.ПредставлениеГруппы	 = "";
КонецПроцедуры		// ДобавитьСтадиюВШаблон()

// Обработчик обновления для создания предопределённых шаблонов.
Процедура ЗаполнитьПредопределенныеШаблоныМероприятий() Экспорт
	МассивИтоговыхДокументовПротоколПобедителя = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколВыбораПобедителей", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивИтоговыхДокументовПротоколПобедителя.Добавить(НовыйИтоговыйДокумент);
	ВидМероприятияЗакупочнаяПроцедура = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура;
	СпособВыбораПоставщикаАукцион					 = Перечисления.СпособыВыбораПоставщика.Аукцион;
	СпособВыбораПоставщикаЗапросКотировок			 = Перечисления.СпособыВыбораПоставщика.ЗапросКотировок;
	СпособВыбораПоставщикаЗапросПредложений			 = Перечисления.СпособыВыбораПоставщика.ЗапросПредложений;
	СпособВыбораПоставщикаКвалификационныйОтбор		 = Перечисления.СпособыВыбораПоставщика.КвалификационныйОтбор;
	СпособВыбораПоставщикаКонкурентныеПереговоры	 = Перечисления.СпособыВыбораПоставщика.КонкурентныеПереговоры;
	СпособВыбораПоставщикаКонкурс					 = Перечисления.СпособыВыбораПоставщика.Конкурс;
	СпособВыбораПоставщикаРедукцион					 = Перечисления.СпособыВыбораПоставщика.Редукцион;
	#Область ЗаполнениеЗапросПредложений
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложений;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаЗапросПредложений;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаЗапросПредложений, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОфициальноеОбъявлениеЗакупки,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_НачалоПредоставленияРазъяснений,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеРассмотренияЗаявок,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ПодведениеИтогов,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_ОглашениеРезультатов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 9);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаЗапросПредложений, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗапросПредложений_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	#КонецОбласти
	#Область ЗаполнениеКонкурс
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Конкурс;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаКонкурс;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаКонкурс, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 9);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_ПодписаниеКонтракта,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаКонкурс, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	// Добавление протокола вскрытия в ОкончаниеПриемаЗаявок.
	МассивВскрытиеКонвертов = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколВскрытияКонвертов", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивВскрытиеКонвертов.Добавить(НовыйИтоговыйДокумент);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_ОкончаниеПриемаЗаявок, МассивВскрытиеКонвертов);
	// Добавление протокола рассмотрения заявок в ОкончаниеРассмотренияЗаявок.
	МассивРассмотрениеЗаявок = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколРассмотренияЗаявок", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивРассмотрениеЗаявок.Добавить(НовыйИтоговыйДокумент);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_ОкончаниеРассмотренияЗаявок, МассивРассмотрениеЗаявок);
	#КонецОбласти
	#Область ЗаполнениеАукцион
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Аукцион;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаАукцион;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаАукцион, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 9);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаАукцион, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Аукцион_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	// Добавление протокола рассмотрения заявок в ОкончаниеРассмотренияЗаявок.
	МассивРассмотрениеЗаявок = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколРассмотренияЗаявок", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивРассмотрениеЗаявок.Добавить(НовыйИтоговыйДокумент);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Аукцион_ОкончаниеРассмотренияЗаявок, МассивРассмотрениеЗаявок);
	#КонецОбласти
	#Область ЗаполнениеЗапросКотировок
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировок;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаЗапросКотировок;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаЗапросКотировок, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 9);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаЗапросКотировок, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗапросКотировок_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	#КонецОбласти
	#Область КвалификационныйОтбор
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КвалификационныйОтбор;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаКвалификационныйОтбор;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаКвалификационныйОтбор, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОфициальноеОбъявлениеЗакупки,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_НачалоПредоставленияРазъяснений,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеРассмотренияЗаявок,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ПодведениеИтогов,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОглашениеРезультатов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 9);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_ПодписаниеКонтракта,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 1);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаКвалификационныйОтбор, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.КвалификационныйОтбор_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	#КонецОбласти
	#Область КонкурентныеПереговоры
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурентныеПереговоры;
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаКонкурентныеПереговоры;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	РазместитьСтадииВОбъект(СпособВыбораПоставщикаКонкурентныеПереговоры, ОбъектШаблон);
	ОбъектШаблон.Записать();
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 0);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 6);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_НачалоПредоставленияРазъяснений,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 8);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 4);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеРассмотренияЗаявок,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 9);
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаКонкурентныеПереговоры, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	#КонецОбласти
КонецПроцедуры		// ЗаполнитьПредопределенныеШаблоныМероприятий()

// Устанавливает итоговые документы для предопрелённых стадий мероприятий.
Процедура ЗаполнитьИтоговыеДокументыСтадий() Экспорт
	СтадияМенеджер = Справочники.СтадииМероприятий;
	#Область АукционМСП
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Аукцион_МСП_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколРассмотренияЗаявок");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_МСП_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Аукцион_МСП_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти
	
	#Область Аукцион
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Аукцион_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ОкончаниеРассмотренияЗаявок, "ПротоколРассмотренияЗаявок");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Аукцион_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Аукцион_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область ЗакупкаУЕдинственногоПоставщика
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗакупкаУЕдинственногоПоставщика_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область КонкурсМПС
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Конкурс_МСП_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ВскрытиеЗаявок, "ПротоколВскрытияКонвертов");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколРассмотренияЗаявок");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_МСП_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Конкурс_МСП_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область Конкурс
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Конкурс_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ВскрытиеЗаявок, "ПротоколВскрытияКонвертов");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ОкончаниеРассмотренияЗаявок, "ПротоколРассмотренияЗаявок");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.Конкурс_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.Конкурс_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область ЗапросКотировокМСП
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросКотировок_МСП_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область ЗапросКотировок
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросКотировок_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросКотировок_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросКотировок_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область ЗапросПредложенийМСП
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросПредложений_МСП_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

	#Область ЗапросПредложений
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросПредложений_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.ЗапросПредложений_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.ЗапросПредложений_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти
	
	#Область КвалификационныйОтбора
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_НачалоПодготовкиЗакупкиКПубликации, "ПриказОНазначенииЗакупочнойКомиссии");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.КвалификационныйОтбор_НачалоПодготовкиЗакупкиКПубликации, "НастройкиПроцессаВыбора");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ОфициальноеОбъявлениеЗакупки, "ОповещениеАккредитованныхПоставщиковОТоргах");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_НачалоПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ОкончаниеПриемаЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ВскрытиеЗаявок, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ОкончаниеРассмотренияЗаявок, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_Переторжка, "ПредложениеПоставщика");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_Переторжка, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ПодведениеИтогов, "ПротоколВыбораПобедителей");
	УстановитьИтоговыйДокументВСтадию(СтадияМенеджер.КвалификационныйОтбор_ПодведениеИтогов, "ПротоколОтменыЗакупочнойПроцедуры");
	УстановитьИтоговыйСправочникВСтадию(СтадияМенеджер.КвалификационныйОтбор_ПодведениеИтогов, "ВерсияСоглашенияКоммерческийДоговор");
	#КонецОбласти

КонецПроцедуры		// ЗаполнитьИтоговыеДокументыСтадий()
// Устанавливает в стадию СтадияВход итоговый документ с именем ИмяДокументаВход.
Процедура УстановитьИтоговыйДокументВСтадию(СтадияВход, ИмяДокументаВход)
	ТекИБ = Справочники.ТипыБазДанных.ТекущаяИБ;
	МассивДокументовБД = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию(ИмяДокументаВход, , , ТекИБ);
	МассивДокументовБД.Добавить(НовыйИтоговыйДокумент);
	УстановитьТипыИтоговыхДокументовВСтадию(СтадияВход, МассивДокументовБД, Ложь);
КонецПроцедуры		// УстановитьИтоговыйДокументВСтадию()

// Устанавливает в стадию СтадияВход итоговый справочник с именем ИмяДокументаВход.
Процедура УстановитьИтоговыйСправочникВСтадию(СтадияВход, ИмяСправочникаБДВход)
	ТекИБ = Справочники.ТипыБазДанных.ТекущаяИБ;
	МассивДокументовБД = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.СправочникиБД.НайтиПоНаименованию(ИмяСправочникаБДВход, , , ТекИБ);
	МассивДокументовБД.Добавить(НовыйИтоговыйДокумент);
	УстановитьТипыИтоговыхДокументовВСтадию(СтадияВход, МассивДокументовБД, Ложь);
КонецПроцедуры		// УстановитьИтоговыйДокументВСтадию()


// Устанавливает в стадию итоговые документы МассивИтоговыхДокументовВход.
// Когда параметр ОчисткаВход Истина, будут очищены существующие данные об
// итоговых документах.
Процедура УстановитьТипыИтоговыхДокументовВСтадию(СтадияВход, МассивИтоговыхДокументовВход, ОчисткаВход = Истина)
	СтадияОбъект = СтадияВход.ПолучитьОбъект();
	Если ОчисткаВход Тогда
		СтадияОбъект.ТипыИтоговыхДокументов.Очистить();
	Иначе
		// Не требуется очистка.
	КонецЕсли;
	Для Каждого ТекМассивИтоговыхДокументов Из МассивИтоговыхДокументовВход Цикл
		СтадияОбъект.ИспользуетсяИтоговыйДокумент = Истина;
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТипИтоговогоДокумента", ТекМассивИтоговыхДокументов);
		НайденныеСтроки = СтадияОбъект.ТипыИтоговыхДокументов.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = СтадияОбъект.ТипыИтоговыхДокументов.Добавить();
			НоваяСтрока.ТипИтоговогоДокумента = ТекМассивИтоговыхДокументов;
		Иначе
			// Уже есть этот объект.
		КонецЕсли;
	КонецЦикла;	
	СтадияОбъект.Записать();
КонецПроцедуры		// УстановитьТипыИтоговыхДокументов()

// Обработчик обновления для создания предопределённых шаблонов.
Процедура ЗаполнитьПредопределенныеШаблоныЗакупокМСП() Экспорт
	МассивИтоговыхДокументовПротоколПобедителя = Новый Массив;
	НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколВыбораПобедителей", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивИтоговыхДокументовПротоколПобедителя.Добавить(НовыйИтоговыйДокумент);
	ВидМероприятияЗакупочнаяПроцедура = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура;
	СпособВыбораПоставщикаАукцион					 = Перечисления.СпособыВыбораПоставщика.АукционУМсп;
	СпособВыбораПоставщикаЗапросКотировок			 = Перечисления.СпособыВыбораПоставщика.ЗапросКотировокУМсп;
	СпособВыбораПоставщикаЗапросПредложений			 = Перечисления.СпособыВыбораПоставщика.ЗапросПредложенийУМсп;
	СпособВыбораПоставщикаКонкурс					 = Перечисления.СпособыВыбораПоставщика.КонкурсУМсп;
	#Область ЗаполнениеЗапросПредложений
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложенийМСП;
	Если НЕ ЗначениеЗаполнено(СправочникШаблон.ВидМероприятия) Тогда
		ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
		ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
		ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаЗапросПредложений;
		ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
		ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
		ОбъектШаблон.Стадии.Очистить();
		РазместитьСтадииВОбъект(СпособВыбораПоставщикаЗапросПредложений, ОбъектШаблон);
		ОбъектШаблон.Записать();
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 0);	
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОфициальноеОбъявлениеЗакупки,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 6);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОкончаниеКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_НачалоПредоставленияРазъяснений,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 8);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 4);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОкончаниеРассмотренияЗаявок,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_Переторжка,			 				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ПодведениеИтогов,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ОглашениеРезультатов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 9);
		РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаЗапросПредложений, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	КонецЕсли;
	#КонецОбласти
	#Область ЗаполнениеКонкурс
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурсМСП;
	Если НЕ ЗначениеЗаполнено(СправочникШаблон.ВидМероприятия) Тогда
		ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
		ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
		ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаКонкурс;
		ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
		ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
		ОбъектШаблон.Стадии.Очистить();
		РазместитьСтадииВОбъект(СпособВыбораПоставщикаКонкурс, ОбъектШаблон);
		ОбъектШаблон.Записать();
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 0);	
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 6);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 8);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 4);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_Переторжка,							 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 9);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_МСП_ПодписаниеКонтракта,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 1);
		РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаКонкурс, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_МСП_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
		// Добавление протокола вскрытия в ОкончаниеПриемаЗаявок.
		МассивВскрытиеКонвертов = Новый Массив;
		НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколВскрытияКонвертов", , , Справочники.ТипыБазДанных.ТекущаяИБ);
		МассивВскрытиеКонвертов.Добавить(НовыйИтоговыйДокумент);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеПриемаЗаявок, МассивВскрытиеКонвертов);
		// Добавление протокола рассмотрения заявок в ОкончаниеРассмотренияЗаявок.
		МассивРассмотрениеЗаявок = Новый Массив;
		НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколРассмотренияЗаявок", , , Справочники.ТипыБазДанных.ТекущаяИБ);
		МассивРассмотрениеЗаявок.Добавить(НовыйИтоговыйДокумент);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеРассмотренияЗаявок, МассивРассмотрениеЗаявок);
	КонецЕсли;
	#КонецОбласти
	#Область ЗаполнениеАукцион
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_АукционМСП;
	Если НЕ ЗначениеЗаполнено(СправочникШаблон.ВидМероприятия) Тогда
		ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
		ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
		ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаАукцион;
		ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
		ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
		ОбъектШаблон.Стадии.Очистить();
		РазместитьСтадииВОбъект(СпособВыбораПоставщикаАукцион, ОбъектШаблон);
		ОбъектШаблон.Записать();
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 0);	
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 6);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 8);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 4);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_Переторжка,							 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_МСП_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 9);
		РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаАукцион, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Аукцион_МСП_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
		// Добавление протокола рассмотрения заявок в ОкончаниеРассмотренияЗаявок.
		МассивРассмотрениеЗаявок = Новый Массив;
		НовыйИтоговыйДокумент = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколРассмотренияЗаявок", , , Справочники.ТипыБазДанных.ТекущаяИБ);
		МассивРассмотрениеЗаявок.Добавить(НовыйИтоговыйДокумент);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеРассмотренияЗаявок, МассивРассмотрениеЗаявок);
	КонецЕсли;
	#КонецОбласти
	#Область ЗаполнениеЗапросКотировок
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировокМСП;
	Если НЕ ЗначениеЗаполнено(СправочникШаблон.ВидМероприятия) Тогда
		ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
		ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
		ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаЗапросКотировок;
		ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
		ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
		ОбъектШаблон.Стадии.Очистить();
		РазместитьСтадииВОбъект(СпособВыбораПоставщикаЗапросКотировок, ОбъектШаблон);
		ОбъектШаблон.Записать();
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_НачалоПодготовкиЗакупкиКПубликации,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 0);	
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_НачалоКвалификационногоОтбора,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 6);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОкончаниеКвалификационногоОтбора,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_НачалоПриемаЗаявок,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_НачалоПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 8);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОкончаниеПредоставленияРазъяснений,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 4);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОкончаниеПриемаЗаявок,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ВскрытиеЗаявок,						 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОкончаниеРассмотренияЗаявок,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_Переторжка,							 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 1);
		ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 9);
		РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаЗапросКотировок, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
		УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ПодведениеИтогов, МассивИтоговыхДокументовПротоколПобедителя);
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры		// ЗаполнитьПредопределенныеШаблоныМероприятий()

// Заполняет стадии Переторжка для всех видов закупок.
Процедура ЗаполнитьПредопределенныеСтадииПереторжка() Экспорт
	// Инициализация.
	ВидМероприятияЗакупочнаяПроцедура = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура;
	СпособВыбораПоставщикаАукцион					 = Перечисления.СпособыВыбораПоставщика.Аукцион;
	СпособВыбораПоставщикаЗапросКотировок			 = Перечисления.СпособыВыбораПоставщика.ЗапросКотировок;
	СпособВыбораПоставщикаЗапросПредложений			 = Перечисления.СпособыВыбораПоставщика.ЗапросПредложений;
	СпособВыбораПоставщикаКвалификационныйОтбор		 = Перечисления.СпособыВыбораПоставщика.КвалификационныйОтбор;
	СпособВыбораПоставщикаКонкурентныеПереговоры	 = Перечисления.СпособыВыбораПоставщика.КонкурентныеПереговоры;
	СпособВыбораПоставщикаКонкурс					 = Перечисления.СпособыВыбораПоставщика.Конкурс;
	// Заполнение данных стадий.
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Аукцион_Переторжка,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаАукцион, 2);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросКотировок_Переторжка,			 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросКотировок, 2);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗапросПредложений_Переторжка,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗапросПредложений, 2);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КвалификационныйОтбор_Переторжка,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКвалификационныйОтбор, 2);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.КонкурентныеПереговоры_Переторжка,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурентныеПереговоры, 2);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.Конкурс_Переторжка,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаКонкурс, 2);
КонецПроцедуры		// ЗаполнитьПредопределенныеСтадииПереторжка()

// Удаляет из табличной части шаблона мероприятия ШаблонМероприятияВход 
// строки со стадией СтадияВход.
Процедура УдалитьСтадиюИзШаблонаМероприятия(СтадияВход, ШаблонМероприятияВход) Экспорт
	ШаблонОбъект = ШаблонМероприятияВход.ПолучитьОбъект();
	ВыгрузкаСтадий = ШаблонОбъект.Стадии.Выгрузить();
	ТаблицаВрем = ВыгрузкаСтадий.СкопироватьКолонки();
	Для Каждого ТекВыгрузкаСтадий Из ВыгрузкаСтадий Цикл
		Если ТекВыгрузкаСтадий.Стадия <> СтадияВход Тогда
			НоваяСтрока = ТаблицаВрем.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекВыгрузкаСтадий);
		Иначе
			// Пропускаем.
		КонецЕсли;	
	КонецЦикла;	
	ШаблонОбъект.Стадии.Загрузить(ТаблицаВрем);
	ШаблонОбъект.Записать();
КонецПроцедуры		// УдалитьСтадиюИзШаблонаМероприятия()

// Удаляет из шаблонов закупочных процедур стадии окончания.
Процедура УдалитьИзШаблоновСтадииОкончания() Экспорт
	// Окончание квалификационного отбора.
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.Аукцион_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Аукцион);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировок);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложений);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КвалификационныйОтбор);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурентныеПереговоры);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.Конкурс_ОкончаниеКвалификационногоОтбора, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Конкурс);
	// Окончание разъяснения по закупке.
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.Аукцион_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Аукцион);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировок);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложений);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КвалификационныйОтбор);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурентныеПереговоры);
	УдалитьСтадиюИзШаблонаМероприятия(Справочники.СтадииМероприятий.Конкурс_ОкончаниеПредоставленияРазъяснений, Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Конкурс);
КонецПроцедуры		// УдалитьИзШаблоновСтадииОкончания()


// Добавляет в шаблон мероприятия ШаблонВход стадию СтадияВход
// после стадии ПоложениеВход как стадию без группирующей 
// строки с процентом выполнения ПроцентВыполненияВход.
Процедура РасположитьСтадиюВШаблоне(ШаблонВход, СтадияВход, ПоложениеВход, ПроцентВыполненияВход) Экспорт
	// Заполним временную таблицу.
	ТаблицаВрем = ШаблонВход.Стадии.Выгрузить().СкопироватьКолонки();
	ПоложениеНайдено = Ложь;
	СтрокаДобавлена = Ложь;
	Для Каждого ТекСтадии Из ШаблонВход.Стадии Цикл
		Если ПоложениеНайдено Тогда
			Если НЕ СтрокаДобавлена Тогда
				НоваяСтрока = ТаблицаВрем.Добавить();
				НоваяСтрока.Стадия								 = СтадияВход;
				НоваяСтрока.ИтогВыполнения						 = ПроцентВыполненияВход;
				НоваяСтрока.ГруппаРодитель						 = "";
				НоваяСтрока.ГруппирующаяСтрока					 = Ложь;
				НоваяСтрока.ПредставлениеГруппы					 = "";
				НоваяСтрока.ОграничениеМинимальнойДлительности	 = Ложь;
				НоваяСтрока.ОграничениеМаксимальнойДлительности	 = Ложь;
				СтрокаДобавлена = Истина;
			Иначе
				// Строка уже добавлена ранее. Не требуется обновление.
			КонецЕсли;
		Иначе
			Если ТекСтадии.Стадия = ПоложениеВход Тогда
				ПоложениеНайдено = Истина;
			Иначе
				// Выполняем поиск далее.
			КонецЕсли;
		КонецЕсли; 
		НоваяСтрока = ТаблицаВрем.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтадии);
	КонецЦикла;	
	// Загрузим полученную таблицу в шаблон.
	ШаблонОбъект = ШаблонВход.ПолучитьОбъект();
	ШаблонОбъект.Стадии.Очистить();
	Для Каждого ТекТаблицаВрем Из ТаблицаВрем Цикл
		НоваяСтрока = ШаблонОбъект.Стадии.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекТаблицаВрем);
	КонецЦикла;	
	ШаблонОбъект.Записать();
КонецПроцедуры		// РасположитьСтадиюВШаблоне()

// Размещает стадии Переторжка в шаблонах мероприятий закупочных процедур.
Процедура РасположитьСтадииПереторжка() Экспорт
	// Аукцион.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Аукцион;
	СтадияПереторжка = Справочники.СтадииМероприятий.Аукцион_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.Аукцион_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Запрос котировок.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировок;
	СтадияПереторжка = Справочники.СтадииМероприятий.ЗапросКотировок_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.ЗапросКотировок_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Запрос предложений.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложений;
	СтадияПереторжка = Справочники.СтадииМероприятий.ЗапросПредложений_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.ЗапросПредложений_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Квалификационный отбор.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КвалификационныйОтбор;
	СтадияПереторжка = Справочники.СтадииМероприятий.КвалификационныйОтбор_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.КвалификационныйОтбор_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Конкурентные переговоры.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурентныеПереговоры;
	СтадияПереторжка = Справочники.СтадииМероприятий.КонкурентныеПереговоры_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.КонкурентныеПереговоры_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Конкурс.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_Конкурс;
	СтадияПереторжка = Справочники.СтадииМероприятий.Конкурс_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.Конкурс_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
КонецПроцедуры		// РасположитьСтадииПереторжка()

// Размещает стадии Переторжка в шаблонах мероприятий закупочных процедур по МСП.
Процедура РазместитьСтадиюПереторжкаМСП() Экспорт
	// Конкурс у МСП.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_КонкурсМСП;
	СтадияПереторжка = Справочники.СтадииМероприятий.Конкурс_МСП_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.Конкурс_МСП_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Аукцион у МСП.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_АукционМСП;
	СтадияПереторжка = Справочники.СтадииМероприятий.Аукцион_МСП_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.Аукцион_МСП_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Запрос котировок у МСП.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросКотировокМСП;
	СтадияПереторжка = Справочники.СтадииМероприятий.ЗапросКотировок_МСП_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.ЗапросКотировок_МСП_ОкончаниеРассмотренияЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
	// Запрос предложений у МСП.
	Шаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗапросПредложенийМСП;
	СтадияПереторжка = Справочники.СтадииМероприятий.ЗапросПредложений_МСП_Переторжка;
	ПредыдущаяСтадия = Справочники.СтадииМероприятий.ЗапросПредложений_МСП_ВскрытиеЗаявок;
	РасположитьСтадиюВШаблоне(Шаблон, СтадияПереторжка, ПредыдущаяСтадия, 80);
КонецПроцедуры		// РазместитьСтадиюПереторжкаМСП()

// Устанавливает все вложения стадии СтадияВход в обязательные.
Процедура УстановитьВсеВложенияСтадииОбязательными(СтадияВход) Экспорт
	Попытка
		СтадияОбъект = СтадияВход.ПолучитьОбъект();
		СтадияОбъект.УстановитьФлагОбязательностиВсемВложениям(Истина);
		СтадияОбъект.Записать();
	Исключение
		ТекстСообщения = НСтр("ru = 'При установке флага обязательности вложениям стадии %Стадия% произошли ошибки: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Стадия%", Строка(СтадияВход));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецПопытки;
КонецПроцедуры		// УстановитьВсеВложенияСтадииОбязательными()


// Записывает в стадию СтадияВход вид мероприятия ВидМероприятияВход
// способ выбора поставщика СпособВыбораПоставщикаВход и длительность
// выполнения ДлительностьВход.
Процедура ЗаполнитьДанныеСтадии(СтадияВход, ВидМероприятияВход, СпособВыбораПоставщикаВход, ДлительностьВход = 0)
	СтадияОбъект = СтадияВход.ПолучитьОбъект();
	СтадияОбъект.ВидМероприятия			 = ВидМероприятияВход;
	СтадияОбъект.СпособВыбораПоставщика	 = СпособВыбораПоставщикаВход;
	СтадияОбъект.Длительность			 = ДлительностьВход; 
	СтадияОбъект.Записать();
КонецПроцедуры		// ЗаполнитьДанныеСтадии()


// Обработчик обновления для создания предопределённого шаблона по процедуре Закупка 
// у единственного поставщика.
Процедура ЗаполнитьПредопределенныйШаблонЗакупкаУЕдинственногоПоставщика() Экспорт
	// Инициализация.
	СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика = Перечисления.СпособыВыбораПоставщика.ЗакупкаУЕдинственногоПоставщика;
	ВидМероприятияЗакупочнаяПроцедура = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура;
	СправочникШаблон = Справочники.ШаблоныМероприятий.ЗакупочнаяПроцедура_ЗакупкаУЕдинственногоПоставщика;
	// Реквизиты шапки шаблона мероприятия.
	Если ЗначениеЗаполнено(СправочникШаблон.ВидМероприятия) Тогда
		Возврат;
	КонецЕсли;	
	ОбъектШаблон = СправочникШаблон.ПолучитьОбъект();
	ОбъектШаблон.ВидМероприятия					 = ВидМероприятияЗакупочнаяПроцедура;
	ОбъектШаблон.СпособВыбораПоставщика			 = СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика;
	ОбъектШаблон.ИспользоватьПроцентВыполнения	 = Ложь;
	ОбъектШаблон.ИспользоватьКонтрольЗатрат		 = Ложь;
	ОбъектШаблон.Стадии.Очистить();
	// Добавление стадий в табличную часть шаблона.
	ДобавитьСтадиюВШаблон(ОбъектШаблон, 25, Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ОфициальноеОбъявлениеЗакупки);
	ДобавитьСтадиюВШаблон(ОбъектШаблон, 50, Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_РегистрацияПредложенияПоставщика);
	ДобавитьСтадиюВШаблон(ОбъектШаблон, 75, Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов);
	ДобавитьСтадиюВШаблон(ОбъектШаблон, 100, Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ОглашениеРезультатов);
	ОбъектШаблон.Записать();
	// Реквизиты шапки стадий мероприятия.
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ОфициальноеОбъявлениеЗакупки,		 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика, 1);	
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_РегистрацияПредложенияПоставщика,	 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика, 3);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов,					 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика, 1);
	ЗаполнитьДанныеСтадии(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ОглашениеРезультатов,				 ВидМероприятияЗакупочнаяПроцедура, СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика, 1);
	// Установка шаблона основным для способа выбора поставщика.
	РегистрыСведений.НастройкиИспользованияШаблоновМероприятий.УстановитьШаблонОсновным(СпособВыбораПоставщикаЗакупкаУЕдинственногоПоставщика, ВидМероприятияЗакупочнаяПроцедура, ОбъектШаблон.Ссылка);
	// Итоговые документы.
	// -Стадия РегистрацияПредложенияПоставщика.
	МассивИтоговыхДокументовПредложениеПоставщика = Новый Массив;
	НовыйИтоговыйДокументПредложениеПоставщика = Справочники.ДокументыБД.НайтиПоНаименованию("ПредложениеПоставщика", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивИтоговыхДокументовПредложениеПоставщика.Добавить(НовыйИтоговыйДокументПредложениеПоставщика);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_РегистрацияПредложенияПоставщика, МассивИтоговыхДокументовПредложениеПоставщика);
	// -Стадия ПодведениеИтогов.
	МассивИтоговыхДокументовПротоколВыбораПобедителей = Новый Массив;
	НовыйИтоговыйДокументПротоколВыбораПобедителей = Справочники.ДокументыБД.НайтиПоНаименованию("ПротоколВыбораПобедителей", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	МассивИтоговыхДокументовПротоколВыбораПобедителей.Добавить(НовыйИтоговыйДокументПротоколВыбораПобедителей);
	УстановитьТипыИтоговыхДокументовВСтадию(Справочники.СтадииМероприятий.ЗакупкаУЕдинственногоПоставщика_ПодведениеИтогов, МассивИтоговыхДокументовПротоколВыбораПобедителей);
КонецПроцедуры		// ЗаполнитьПредопределенныйШаблонЗакупкаУЕдинственногоПоставщика()
