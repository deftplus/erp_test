
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Работа с аналитиками статей бюджетов: 
//
// Внедрение в форму, в которой есть статья бюджета и надо управлять ее аналитикамии.
//		События
//			Форма.ПриСозданииНаСервере			- Если Параметры.Ключ.Пустая() Тогда
//													ПриЧтенииСозданииНаСервере();
//												  КонецЕсли;
//			Форма.ПриЧтенииНаСервере			- ПриЧтенииСозданииНаСервере();
//
//			ПриЧтенииСозданииНаСервере			- АСБ = АналитикиСтатейБюджетовУХ;
//												  МассивОписанийСтатей = Новый Массив;
//												  АСБ.СтатьяИАналитикиТабличнойЧастиВТаблицеФормы(МассивОписанийСтатей, ......);
//												  АСБ.СтатьяИАналитикиТабличнойЧастиВПоляхФормы(МассивОписанийСтатей, ......);
//												  АСБ.СтатьяИАналитикиОбъектаВПоляхФормы(МассивОписанийСтатей, ......);
//												  Если МассивОписанийСтатей.Количество() > 0 Тогда
//													АналитикиСтатейБюджетовУХ.СоздатьСтатьиБюджетовИАналитики(Форма, МассивОписанийСтатей, ПараметрыЭлементов);
//												  КонецЕсли;
//												
//			Форма.ПослеЗаписиНаСервере			- АналитикиСтатейБюджетовУХ.ЗаполнитьРеквизитыАналитикВсехСтатей(ЭтотОбъект);
//			ЭлементСтатья.ПриИзменении			- АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
//			ЭлементАналитика*.ПриИзменении		- АналитикиСтатейБюджетовУХКлиент.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
// 			ТаблицаФормы.ПередНачаломИзменения	- АналитикиСтатейБюджетовУХКлиент.ПередНачаломИзмененияСтрокиТаблицыФормы(ЭтотОбъект, Элемент.Имя);
// 			ТаблицаФормы.ПриАктивизацииСтроки	- АналитикиСтатейБюджетовУХКлиент.ПриАктивизацииСтрокиТаблицыФормы(ЭтотОбъект, Элемент.Имя);
//  
// P.S.
//		1. Если элемент формы СтатьяБюджета создается процедурой СоздатьСтатьиБюджетовИАналитики, то ему назначается событие "ПриИзменении" Подключаемый_СтатьяБюджета_ПриИзменении.
//			&НаКлиенте
//			Процедура Подключаемый_СтатьяБюджета_ПриИзменении(Элемент)
//				АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
//			КонецПроцедуры
//			&НаКлиенте
//			Процедура Подключаемый_АналитикаСтатьиБюджета_ПриИзменении(Элемент)
//				АналитикиСтатейБюджетовУХКлиент.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
//			КонецПроцедуры
//		2. Если элемент формы Аналитика* создается процедурой СоздатьСтатьиБюджетовИАналитики, то ему назначается событие "ПриИзменении" Подключаемый_АналитикаСтатьиБюджета_ПриИзменении.
//			&НаКлиенте
//			Процедура Подключаемый_АналитикаСтатьиБюджета_ПриИзменении(Элемент)
//		    	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
//			КонецПроцедуры
//		3. Обработка РаботаСАналитикамиСтатьиБюджета демонстрирует все возможности работы с аналитиками статей бюджета на форме.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область  ПрограммныйИнтерфейс

// Статья и Аналитика из шапки объекта отображаются в элементах ПолеФормы.
Процедура СтатьяИАналитикиОбъектаВПоляхФормы(МассивОписанийСтатей, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья в шапке документа Статья и Аналитика в Объекте (ВидАналитики нельзя создать в реквизите формы Объект. Должны быть созданы реквизиты формы)
	ПутьКДанным = "Объект";
	ПутьКДаннымВидовАналитик = "";
	
	ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
		ИмяРеквизитаСтатья, 
		ПутьКДанным,
		АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик)
	);
	
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДанным, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик);
	
	МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
	
КонецПроцедуры

// Статья и Аналитика из табличной части отображаются в ТаблицеФормы
Процедура СтатьяИАналитикиТабличнойЧастиВТаблицеФормы(МассивОписанийСтатей, ИмяТЧ, ИмяПолеФормы, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья в расшифровке таблицей
	ПутьКДанным = СтрШаблон("Объект.%1", ИмяТЧ);
	ПутьКДаннымВидовАналитик = СтрШаблон("Элементы.%1.ТекущиеДанные", ИмяПолеФормы);
	
	ПараметрыСтатьи = НайтиОписаниеСтатьиБюджетаПоИмениИПути(МассивОписанийСтатей, ИмяРеквизитаСтатья, ПутьКДанным);
	Если НЕ ЗначениеЗаполнено(ПараметрыСтатьи) Тогда
		ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
			ИмяРеквизитаСтатья,
			ПутьКДанным,
			АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным));
	КонецЕсли;
	
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДанным, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом, Истина, ИмяПолеФормы);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик);
	
	МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
	
КонецПроцедуры

// Статья и Аналитика из 0-й строки табличной части отображаются в элементах ПолеФормы.
Процедура СтатьяИАналитикиТабличнойЧастиВПоляхФормы(МассивОписанийСтатей, ИмяТЧ, ИмяПолеФормы, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья в расшифровке таблицей
	ПутьКДанным = СтрШаблон("Объект.%1", ИмяТЧ);
	
	ПараметрыСтатьи = НайтиОписаниеСтатьиБюджетаПоИмениИПути(МассивОписанийСтатей, ИмяРеквизитаСтатья, ПутьКДанным);
	Если НЕ ЗначениеЗаполнено(ПараметрыСтатьи) Тогда
		// Статья новая
		ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
			ИмяРеквизитаСтатья, 
			ПутьКДанным,
			АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным));
		МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
		
	КонецЕсли;
	
	ПутьКДаннымДляЭлементов = СтрШаблон("Элементы.%1.ТекущиеДанные", ИмяПолеФормы);
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДаннымДляЭлементов, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДаннымДляЭлементов, ПутьКДаннымДляЭлементов);
	
КонецПроцедуры

// Статья и Аналитика из таблицы значений реквизита формы отображаются ТаблицеФормы.
Процедура СтатьяИАналитикиТаблицыЗначенийРеквизитаФормыВТаблицеФормы(МассивОписанийСтатей, ИмяТЧ, ИмяПолеФормы, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья и Аналитика в таблице значений реквизита формы
	ПутьКДанным = СтрШаблон("%1", ИмяТЧ);
	ПутьКДаннымВидовАналитик = СтрШаблон("Элементы.%1.ТекущиеДанные", ИмяПолеФормы);
	
	ПараметрыСтатьи = НайтиОписаниеСтатьиБюджетаПоИмениИПути(МассивОписанийСтатей, ИмяРеквизитаСтатья, ПутьКДанным);
	Если НЕ ЗначениеЗаполнено(ПараметрыСтатьи) Тогда
		ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
			ИмяРеквизитаСтатья, 
			ПутьКДанным,
			АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным));
	КонецЕсли;
	
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДанным, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом, Истина, ИмяПолеФормы);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик);
	
	МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
	
КонецПроцедуры

// Статья и Аналитика из строки 0 таблицы значений реквизита формы отображаются в элементах ПолеФормы.
Процедура СтатьяИАналитикиТаблицыЗначенийРеквизитаФормыВПоляхФормы(МассивОписанийСтатей, ИмяТЧ, ИмяПолеФормы, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья в расшифровке таблицей
	ПутьКДанным = СтрШаблон("%1", ИмяТЧ);
	
	ПараметрыСтатьи = НайтиОписаниеСтатьиБюджетаПоИмениИПути(МассивОписанийСтатей, ИмяРеквизитаСтатья, ПутьКДанным);
	Если НЕ ЗначениеЗаполнено(ПараметрыСтатьи) Тогда
		// Статья новая
		ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
			ИмяРеквизитаСтатья, 
			ПутьКДанным,
			АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным));
		МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
		
	КонецЕсли;
	
	ПутьКДаннымДляЭлементов = СтрШаблон("Элементы.%1.ТекущиеДанные", ИмяПолеФормы);
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДаннымДляЭлементов, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДаннымДляЭлементов, ПутьКДаннымДляЭлементов);
	
КонецПроцедуры

// Статья и Аналитика из реквизитов формы отображаются в элементах ПолеФормы.
Процедура СтатьяИАналитикиРеквизитовФормыВПолях(МассивОписанийСтатей, ИмяРеквизитаСтатья, ИмяЭлементаСтатья, ШаблонИмениРеквизитаАналитика, ШаблонИмениЭлементаАналитика, РазмещениеНаФорме) Экспорт
	
	АСБ = АналитикиСтатейБюджетовУХ;
	
	// Статья и Аналитика в реквизитах формы. ВидыАналитик создаются в реквизитах формы
	ПутьКДанным = "";
	ПутьКДаннымВидовАналитик = "";
	
	ПараметрыСтатьи = АСБ.Новый_СтатьяБюджетов(
		ИмяРеквизитаСтатья,
		ПутьКДанным,
		АСБ.Новый_АналитикиСтатьиБюджета(ШаблонИмениРеквизитаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик)
	);
	
	АСБ.СтатьяБюджета_НовыйЭлементФормы(ПараметрыСтатьи, ИмяЭлементаСтатья, ПутьКДанным, РазмещениеНаФорме.Родитель, РазмещениеНаФорме.ПередЭлементом);
	АСБ.СтатьяБюджетов_ЭлементыАналитикиИзШаблона(ПараметрыСтатьи, ИмяЭлементаСтатья, ШаблонИмениЭлементаАналитика, ПутьКДанным, ПутьКДаннымВидовАналитик);
	
	//
	МассивОписанийСтатей.Добавить(ПараметрыСтатьи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область УправлениеЭлементамиФормыАналитика1_X

// Функция возвращает описание реквизита СтатьяБюджета
Функция Новый_СтатьяБюджетов(ИмяРеквизита, ПутьКДанным, ДанныеАналитик) Экспорт
	
	Результат = Новый Структура("ИмяРеквизита, ПутьКДанным, КолвоАналитик, Аналитики, ЭлементыФормы", 
		ИмяРеквизита, ПутьКДанным, АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи(), ДанныеАналитик);
	
	//
	Результат.Вставить("ТолькоЛимитируемыеАналитики", Ложь);
	Результат.Вставить("ЭтоТаблица", Ложь);				// Заполняется в СтатьяБюджета_НовыйЭлементФормы
	Результат.Вставить("ИмяЭлементаТаблицаФормы", ""); 	// Заполняется в СтатьяБюджета_НовыйЭлементФормы
	
	Результат.Вставить("Параметры", Новый Структура); // В Параметрах может быть НеСоздаватьРеквизитыВидАналитики = Ложь
	
	Результат.ЭлементыФормы = Новый Соответствие;
	
	Возврат Результат;
	
КонецФункции

Функция Новый_АналитикиСтатьиБюджета(АналитикаИмяРеквизита, АналитикаПуть, ВидАналитикиПуть = Неопределено) Экспорт
	
	Результат = Новый Структура("АналитикаИмяРеквизита, АналитикаПуть, ВидАналитикиИмяРеквизита, ВидАналитикиПуть");
	
	Результат.АналитикаИмяРеквизита = АналитикаИмяРеквизита;
	Результат.АналитикаПуть = АналитикаПуть;
	
	Результат.ВидАналитикиИмяРеквизита = СтрЗаменить(АналитикаИмяРеквизита, "Аналитика", "ВидАналитики");
	
	Если ВидАналитикиПуть = Неопределено Тогда
		Результат.Вставить("ВидАналитикиПуть", АналитикаПуть);
	Иначе
		Результат.Вставить("ВидАналитикиПуть", ВидАналитикиПуть);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура СтатьяБюджета_НовыйЭлементФормы(ДанныеСтатьи, ИмяЭлемента, ПутьКДанным, ИмяРодителя, ИмяВставитьПеред = "", ЭтоТаблицаФормы = Ложь, ИмяТаблицыФормы = "") Экспорт
	
	ОписаниеЭлементаСтатья = Новый Структура("ИмяЭлемента, ПутьКДанным, ЭлементыАналитики, ИмяРодителя, ИмяВставитьПеред", ИмяЭлемента, ПутьКДанным, Новый Массив);
	ОписаниеЭлементаСтатья.Вставить("ЭтоТаблицаФормы", ЭтоТаблицаФормы);
	ОписаниеЭлементаСтатья.Вставить("ИмяТаблицыФормы", ИмяТаблицыФормы);
	
	ОписаниеЭлементаСтатья.ИмяРодителя = ИмяРодителя;
	ОписаниеЭлементаСтатья.ИмяВставитьПеред = ИмяВставитьПеред;
	
	ДанныеСтатьи.ЭлементыФормы.Вставить(ИмяЭлемента, ОписаниеЭлементаСтатья);
	
	Если ЭтоТаблицаФормы Тогда
		ДанныеСтатьи.ЭтоТаблица = Истина;
		ДанныеСтатьи.ИмяЭлементаТаблицаФормы = ИмяТаблицыФормы;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатьяБюджетов_ЭлементыАналитикиИзШаблона(СтатьяБюджета, ИмяЭлементаСтатья, ШаблонИмениЭлемента, ПутьКДанным, ПутьКВидамАналитик, ИмяРодителя = Неопределено, ИмяВставитьПеред = Неопределено ) Экспорт
	
	ЭлементСтатья = СтатьяБюджета.ЭлементыФормы[ИмяЭлементаСтатья];
	
	МассивЭлементов = ЭлементСтатья.ЭлементыАналитики;
	
	Если ИмяРодителя = Неопределено Тогда
		ИмяРодителяАналитики = ЭлементСтатья.ИмяРодителя;
	Иначе
		ИмяРодителяАналитики = ИмяРодителя;
	КонецЕсли;
	
	Если ИмяВставитьПеред = Неопределено Тогда
		ИмяВставитьПередАналитики = ЭлементСтатья.ИмяВставитьПеред;
	Иначе
		ИмяВставитьПередАналитики = ИмяВставитьПеред;
	КонецЕсли;
	
	Для Поз = 1 По СтатьяБюджета.КолвоАналитик Цикл
		
		ИмяЭлемента = СтрШаблон(ШаблонИмениЭлемента, Поз);
		ИмяРеквизита = СтрШаблон(СтатьяБюджета.Аналитики.АналитикаИмяРеквизита, Поз);
		ИмяРеквизитаВидАналитики = СтрШаблон(СтатьяБюджета.Аналитики.ВидАналитикиИмяРеквизита, Поз);
		
		МассивЭлементов.Добавить(Новый_ЭлементАналитики(ИмяЭлемента, ИмяРеквизита, ПутьКДанным, ИмяРеквизитаВидАналитики, ПутьКВидамАналитик, ИмяРодителяАналитики, ИмяВставитьПередАналитики));
		
	КонецЦикла;
	
КонецПроцедуры

Функция Новый_ЭлементАналитики(ИмяЭлемента, ИмяРеквизита, ПутьКДанным, ИмяРеквизитаВидАналитики, ПутьКВидамАналитик, ИмяРодителя, ИмяВставитьПеред = "" ) Экспорт
	
	Результат = Новый Структура("ИмяЭлемента, ИмяРеквизита, ПутьКДанным, ИмяРеквизитаВидАналитики", ИмяЭлемента, ИмяРеквизита, ПутьКДанным, ИмяРеквизитаВидАналитики);
	Результат.Вставить("ПутьКВидамАналитик", ПутьКВидамАналитик);
	Результат.Вставить("ИмяРодителя", ИмяРодителя);
	Результат.Вставить("ИмяВставитьПеред", ИмяВставитьПеред);
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает значение реквизита формы ОписаниеФормы. Если такого реквизита нет, то возвращает Неопределено
Функция ПолучитьОписаниеФормы(Форма) Экспорт
	
	ИмяРеквизита = ИмяРеквизитаОписаниеФормы();
	
	КлючУникальности = Новый УникальныйИдентификатор;
	СтруктураПоиска	 = Новый Структура(ИмяРеквизита, КлючУникальности);
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, Форма);
	
	Если СтруктураПоиска[ИмяРеквизита] = КлючУникальности Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СтруктураПоиска.ОписаниеФормы;
	
КонецФункции

// 
Процедура ДобавитьРеквизитОписаниеФормыВУдаляемыеРеквизиты(Форма, УдаляемыеРеквизиты) Экспорт
	
	Если ПолучитьОписаниеФормы(Форма) <> неопределено Тогда
		УдаляемыеРеквизиты.Добавить(ИмяРеквизитаОписаниеФормы());
	КонецЕсли;
	
КонецПроцедуры

//
Процедура ДобавитьРеквизитОписанияФормы(ДобавляемыеРеквизиты) Экспорт
	
	// Вид аналитики
	Реквизит = Новый РеквизитФормы("ОписаниеФормы", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
КонецПроцедуры // ДобавитьРеквизитОписанияФормы

// Процедура создает элементы на основании массива с описанием статей бюджетов
Процедура СоздатьСтатьиБюджетовИАналитики(Форма, МассивОписанийСтатей, ПараметрыПоляВвода = Неопределено, СобытияПоляВвода = Неопределено) Экспорт
	
	// Если реквизиты уже созданы, то обновляем реквизиты аналитики статей и выходим
	Если ПолучитьОписаниеФормы(Форма) <> Неопределено Тогда
		ЗаполнитьРеквизитыАналитикВсехСтатей(Форма);
		Возврат ;
	КонецЕсли;
	
	#Область ДобавлениеРеквизитовФормы
	
	// Добавить реквизиты формы ВидАналитики?*
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавитьРеквизитОписанияФормы(ДобавляемыеРеквизиты);
	
	//
	Для Каждого ОписаниеСтатьи Из МассивОписанийСтатей Цикл
		
		Если ТипЗнч(ОписаниеСтатьи.Параметры) = Тип("Структура")
			И ОписаниеСтатьи.Параметры.Свойство("СоздаватьРеквизитыВидАналитики")
			И ОписаниеСтатьи.Параметры.СоздаватьРеквизитыВидАналитики = Ложь Тогда
			Продолжить; // Не создаем реквизиты ВидАналитики%1*
		КонецЕсли;
		
		// Добавляем реквизиты формы ВидАналитики%1*
		Для Поз = 1 По ОписаниеСтатьи.КолвоАналитик Цикл
			ИмяРеквизита = СтрШаблон(ОписаниеСтатьи.Аналитики.ВидАналитикиИмяРеквизита, Поз);
			Если НЕ РеквизитУжеДобавлен(ДобавляемыеРеквизиты, ИмяРеквизита, ОписаниеСтатьи.Аналитики.ВидАналитикиПуть) Тогда
				ДобавитьРеквизитыВидаАналитики(ДобавляемыеРеквизиты, ИмяРеквизита, ОписаниеСтатьи.Аналитики.ВидАналитикиПуть);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	#КонецОбласти 
	
	#Область ДобавлениеОписанияСтатейВФорму
	
	//
	ОписаниеФормы = ПолучитьОписаниеФормы(Форма);
	Если ОписаниеФормы = Неопределено Тогда
		// Добавляем описания статей бюджетов в реквизит формы
		ОписаниеФормы = Новый Структура;
		ОписаниеФормы.Вставить("СтатьиБюджетов", Новый Соответствие);
		ОписаниеФормы.Вставить("Реквизиты", Новый Соответствие);
		ОписаниеФормы.Вставить("ТаблицыФормы", Новый Соответствие);
		ОписаниеФормы.Вставить("АналитикиСтатейБюджетов", Новый Соответствие);
	Иначе
		ОписаниеФормы = Новый Структура(ОписаниеФормы);
	КонецЕсли;
	
	//
	Для Каждого ОписаниеСтатьи Из МассивОписанийСтатей Цикл
		
		ИмяРеквизита = ОписаниеСтатьи.ИмяРеквизита;
		Если НЕ ПустаяСтрока(ОписаниеСтатьи.ПутьКДанным) Тогда
			ИмяРеквизита = ОписаниеСтатьи.ПутьКДанным + "."+ИмяРеквизита;
		КонецЕсли;
		
		ОписаниеФормы.Реквизиты.Вставить(ИмяРеквизита, ОписаниеСтатьи);
		
		Для Каждого КлючЗначения Из ОписаниеСтатьи.ЭлементыФормы Цикл
			
			ОписаниеЭлемента = КлючЗначения.Значение;
			
			ОписаниеФормы.СтатьиБюджетов.Вставить(КлючЗначения.Ключ, ОписаниеСтатьи);
			
			Для НомерАналитики = 1 По ОписаниеЭлемента.ЭлементыАналитики.Количество() Цикл
				ЭлементАналитики = ОписаниеЭлемента.ЭлементыАналитики[НомерАналитики-1];
				ОписаниеАналитики = Новый Структура("СтатьяБюджета, НомерАналитики", КлючЗначения.Ключ, НомерАналитики);
				ОписаниеФормы.АналитикиСтатейБюджетов.Вставить(ЭлементАналитики.ИмяЭлемента, ОписаниеАналитики);
			КонецЦикла;
			
			// ТаблицыФормы
			Если ОписаниеЭлемента.ЭтоТаблицаФормы И ЗначениеЗаполнено(ОписаниеЭлемента.ИмяТаблицыФормы) Тогда
				
				Данные = ОписаниеФормы.ТаблицыФормы[ОписаниеЭлемента.ИмяТаблицыФормы];
				Если Данные = неопределено Тогда
					ОписаниеФормы.ТаблицыФормы.Вставить(ОписаниеЭлемента.ИмяТаблицыФормы, Новый Массив);
				КонецЕсли;
				ОписаниеФормы.ТаблицыФормы[ОписаниеЭлемента.ИмяТаблицыФормы].Добавить(ОписаниеСтатьи);
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Форма.ОписаниеФормы = Новый ФиксированнаяСтруктура(ОписаниеФормы);
	
	#КонецОбласти 
	
	#Область ДобавлениеЭлементовФормы
	
	//
	Для Каждого ОписаниеСтатьи Из МассивОписанийСтатей Цикл
		
		Для каждого КлючЗначение Из ОписаниеСтатьи.ЭлементыФормы Цикл
			
			ОписаниеЭлемента = КлючЗначение.Значение;
		
			//
			Родитель = Форма.Элементы.Найти(ОписаниеЭлемента.ИмяРодителя);
			ВставитьПеред = Форма.Элементы.Найти(ОписаниеЭлемента.ИмяВставитьПеред);
			
			//
			ПутьКДанным = ОписаниеСтатьи.ИмяРеквизита;
			Если ОписаниеЭлемента.ПутьКДанным <> "" Тогда
				ПутьКДанным = ОписаниеЭлемента.ПутьКДанным + "." + ПутьКДанным;
			КонецЕсли;
			
			// Добавить статью бюджетов
			ЭлементСтатья = ДобавитьЭлементСтатьяБюджета(
				Форма, 
				ОписаниеЭлемента.ИмяЭлемента, ПутьКДанным,
				Родитель, 
				ВставитьПеред,
				ПараметрыПоляВвода);
				
			ПриИзменении = ЭлементСтатья.ПолучитьДействие("ПриИзменении");
			Если ПустаяСтрока(ПриИзменении) Тогда
				ПереопределениеСобытийФормы.ПереопределитьСобытиеЭлементаФормы(Форма, ЭлементСтатья, "ПриИзменении", "Подключаемый_СтатьяБюджета_ПриИзменении");
			КонецЕсли;
			
			// Добавить аналитики
			Для каждого ОписаниеЭлементаАналитика Из ОписаниеЭлемента.ЭлементыАналитики Цикл
			
				//
				ПутьКДанным = ОписаниеЭлементаАналитика.ИмяРеквизита;
				Если ОписаниеЭлементаАналитика.ПутьКДанным <> "" Тогда
					ПутьКДанным = ОписаниеЭлементаАналитика.ПутьКДанным + "." + ПутьКДанным;
				КонецЕсли;
				
				//
				Родитель = Форма.Элементы.Найти(ОписаниеЭлементаАналитика.ИмяРодителя);
				ВставитьПеред = Форма.Элементы.Найти(ОписаниеЭлементаАналитика.ИмяВставитьПеред);
				
				Элемент = ФормыУХ.СоздатьПолеФормы(
					Форма.Элементы, 
					ОписаниеЭлементаАналитика.ИмяЭлемента, 
					"",
					ПутьКДанным, 
					ВидПоляФормы.ПолеВвода, 
					Родитель, ВставитьПеред, 
					ПараметрыПоляВвода, СобытияПоляВвода);
				
				//
				ПутьКДанным = ОписаниеЭлементаАналитика.ИмяРеквизитаВидАналитики;
				Если ОписаниеЭлементаАналитика.ПутьКВидамАналитик <> "" Тогда
					ПутьКДанным = ОписаниеЭлементаАналитика.ПутьКВидамАналитик + "." + ПутьКДанным;
				КонецЕсли;
				
				Элемент.СвязьПоТипу = Новый СвязьПоТипу(ПутьКДанным, 0);
				
				// Установка при изменении
				Если ПустаяСтрока(Элемент.ПолучитьДействие("ПриИзменении")) Тогда
					Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_АналитикаСтатьиБюджета_ПриИзменении");
				КонецЕсли;
				
			КонецЦикла;
			
			// Добавить условное оформление
			Если ОписаниеЭлемента.ЭтоТаблицаФормы Тогда
				УстановитьУсловноеОформлениеДополнительныхАналитик(Форма, ОписаниеЭлемента);
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	#КонецОбласти 
	
	ЗаполнитьРеквизитыАналитикВсехСтатей(Форма);
	
КонецПроцедуры

// Процедура заполняет виды аналитик для всех зарегистрированных статей бюджетов и приводит к новым типам значения аналитик.
// Используется в событии формы ПослеЗаписиНаСервере
Процедура ЗаполнитьРеквизитыАналитикВсехСтатей(Форма) Экспорт
	
	ОписаниеФормы = ПолучитьОписаниеФормы(Форма);
	Если ОписаниеФормы = Неопределено ИЛИ ТипЗнч(ОписаниеФормы) <> Тип("ФиксированнаяСтруктура") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОписаниеФормы.Свойство("Реквизиты") ИЛИ ТипЗнч(ОписаниеФормы.Реквизиты) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючЗначение Из ОписаниеФормы.Реквизиты Цикл
		ЗаполнитьВидыАналитикПоОписаниюСтатьиБюджета(Форма, КлючЗначение.Значение);
	КонецЦикла;
	
	// Первую строки таблиц установить как текущую. Нужно для работы со статьей текущей строки таблицы формы
	Для Каждого КлючЗначение Из Форма.ОписаниеФормы.Реквизиты Цикл
		ОписаниеРеквизита = КлючЗначение.Значение;
		Если НЕ ОписаниеРеквизита.ЭтоТаблица Тогда
			Продолжить;
		КонецЕсли;
		
		Данные = АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеРеквизита.ПутьКДанным);
		Если Данные.Количество() > 0 Тогда
			Форма.Элементы[ОписаниеРеквизита.ИмяЭлементаТаблицаФормы].ТекущаяСтрока = Данные[0].ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЦикла;
	
	// Инициализировать связи параметров выбора
	Для Каждого КлючЗначение Из Форма.ОписаниеФормы.АналитикиСтатейБюджетов Цикл
		АналитикиСтатейБюджетовУХКлиентСервер.ИнициализироватьСвязиАналитикСтатьиБюджета(Форма, КлючЗначение.Ключ, Ложь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

// Функция возвращает строку "ВидАналитики1,ВидАналитики2,..., ВидАналитикиX";
Функция ВидыАналитикСтрокой() Экспорт
	
	Возврат АналитикиСтатейБюджетовУХКлиентСервер.РеквизитыАналитикИзШаблона("ВидАналитики%1");
	
КонецФункции

// Функция возвращает соответствие видовАналитик объекта
Функция ВидыАналитикОбъекта(ОбъектСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектСсылка, ВидыАналитикСтрокой());
	
КонецФункции

Функция ПараметрыЛимитированияСтатьиБюджета(СтатьяБюджета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтатьяБюджета", СтатьяБюджета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.СтатьяБюджета КАК СтатьяБюджета,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьСтатью КАК КонтролироватьСтатью,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику1 КАК КонтролироватьАналитику1,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику2 КАК КонтролироватьАналитику2,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику3 КАК КонтролироватьАналитику3,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику4 КАК КонтролироватьАналитику4,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику5 КАК КонтролироватьАналитику5,
	|	ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику6 КАК КонтролироватьАналитику6
	|ИЗ
	|	РегистрСведений.ПараметрыКонтроляЛимитаСтатейБюджетов.СрезПоследних(, СтатьяБюджета = &СтатьяБюджета) КАК ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних";
	ПараметрыКонтроля = Запрос.Выполнить().Выгрузить();
	
	Результат = Новый Структура;
	
	Для Каждого Колонка Из ПараметрыКонтроля.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Если ПараметрыКонтроля.Количество() = 0 Тогда
		Результат.СтатьяБюджета = СтатьяБюджета;
	Иначе
		ЗаполнитьЗначенияСвойств(Результат, ПараметрыКонтроля[0]);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает структуру видов аналитик статьи бюджета.
//
// Параметры:
//  СтатьяБюджета	 - 	 СправочникСсылка.СтатьиДвиженияДенежныхСредств, СправочникСсылка.СтатьиДоходовИРасходов, 
// СправочникСсылка.СтатьиДвиженияРесурсов- статья бюджета, для которой необходимо получить аналитики
//  ТолькоЛимитируемыеАналитики - Булево - Если Истина, то возвращаются только лимитируемые аналитики. Значение по умолчанию Ложь
//
// Возвращаемое значение:
//  Структура - Структура, содержащая виды аналитик.
//
// бывшая ДвиженияБюджетированиеУХВызовСервера.ВидыАналитикСтатьи
Функция СтруктураВидовАналитикСтатейБюджетов(СтатьяБюджета, ТолькоЛимитируемыеАналитики = Ложь) Экспорт
	
	ВидыАналитик = Новый Структура;
	Для Сч = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
		
		ВидыАналитик.Вставить("ВидАналитики" + Сч);
		ВидыАналитик.Вставить("ВидАналитики" + Сч + "Наименование");
		ВидыАналитик.Вставить("ВидАналитики" + Сч + "ТипЗначения");
		ВидыАналитик.Вставить("ВидАналитики" + Сч + "ПараметрыВыбора");
		ВидыАналитик.Вставить("ВидАналитики" + Сч + "СвязиАналитик");
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(СтатьяБюджета) Тогда
		Возврат ВидыАналитик;
	КонецЕсли;
	
	СтатьяВМассиве = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтатьяБюджета);
	ОписаниеВидовАналитик = АналитикиСтатейБюджетовУХВызовСервера.ВидыАналитикСтатей(СтатьяВМассиве,ТолькоЛимитируемыеАналитики);
	
	Если ЗначениеЗаполнено(ОписаниеВидовАналитик) Тогда
		ВидыАналитик = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ОписаниеВидовАналитик[0]);
	КонецЕсли;
	
	Возврат ВидыАналитик;
	
КонецФункции

#Область СтатьиБюджетов
	
// Процедура подготавливает таблицу видов аналитик элементов формы статей бюджетов
Процедура ПодготовитьТаблицуВидовАналитик(Форма, Родитель, ПередЭлементом) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	// Создать реквизиты
	Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(
			Форма, "ВидыАналитикДобавлены") Тогда
			
		//
		Реквизиты = Новый Массив;
		ДобавитьРеквизитыВидовАналитик(Реквизиты);
		
		// ВидыАналитик
		Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ВидыАналитик") Тогда
			ИмяТаблицы = "ВидыАналитик";                         									
			Реквизиты.Добавить(
				Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений")));
			Реквизиты.Добавить(
				Новый РеквизитФормы("ВидАналитики", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные"), ИмяТаблицы, НСтр("ru = 'Вид аналитики'")));
			Реквизиты.Добавить(
				Новый РеквизитФормы("НомерАналитики", ОбщегоНазначения.ОписаниеТипаЧисло(10,0), ИмяТаблицы, НСтр("ru = '№'")));
			Реквизиты.Добавить(
				Новый РеквизитФормы("КонтролироватьАналитику", Новый ОписаниеТипов("Булево"), ИмяТаблицы, НСтр("ru = 'Контролировать аналитику'")));
		КонецЕсли;
		
		Форма.ИзменитьРеквизиты(Реквизиты);
		
		// Создать элементы формы
		СоздатьЭлементыФормыСтатьиБюджета(Форма, Родитель, ПередЭлементом);
		УстановитьУсловноеОформлениеВидовАналитик(Форма);
	
	КонецЕсли;
	
	// Заполнить таблицу в реквизитах
	ЗаполнитьТаблицуВидовАналитик(Форма);
	
	// Виды аналитик разрешено изменять, если по статье нет ссылок в рн.* и спр.СтрокиОтчетов
	Если НЕ Форма.Параметры.Ключ.Пустая() Тогда
		КоличествоБлокирующихСсылок = КоличествоБлокирующихСсылок(Форма.Объект.Ссылка);
		ЗаблокироватьРедактированиеЭлементовВидовАналитик(Форма, КоличествоБлокирующихСсылок <> 0);
		Если КоличествоБлокирующихСсылок = 1 Тогда
			Элементы.ДекорацияБлокирующиеСсылки.Заголовок = СтрШаблон(НСтр("ru = 'Список видов аналитик не редактируется, так как статья использована в %1 объекте.'"), КоличествоБлокирующихСсылок);
		Иначе
			Элементы.ДекорацияБлокирующиеСсылки.Заголовок = СтрШаблон(НСтр("ru = 'Список видов аналитик не редактируется, так как статья использована в %1 объектах.'"), КоличествоБлокирующихСсылок);
		КонецЕсли;
		Элементы.ДекорацияБлокирующиеСсылки.Видимость = КоличествоБлокирующихСсылок <> 0;
	Иначе
		Элементы.ДекорацияБлокирующиеСсылки.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьДанныеПоВидамБюджетаТипаСтатьи(Форма, ТипЗнч(Объект.Ссылка));
	
КонецПроцедуры

Процедура ПодготовитьТаблицуВидовАналитикГруппыРаскрытия(Форма) Экспорт
	
	УстановитьУсловноеОформлениеВидовАналитик(Форма, Ложь);
	ЗаполнитьТаблицуВидовАналитик(Форма, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуВидовАналитик(Форма, ЭтоСтатьяБюджета = Истина) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КоличествоАналитик = АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи();
	Форма.ВидыАналитик.Очистить();
	Для Номер = 1 По КоличествоАналитик Цикл
		Строка = Форма.ВидыАналитик.Добавить();
		Строка.НомерАналитики = Номер;
		Строка.ВидАналитики = Форма.Объект[СтрШаблон("ВидАналитики%1", Номер)];
	КонецЦикла;
	АналитикиСтатейБюджетовУХКлиентСервер.ВычислитьМаксимальныйНомерЗаполненнойАналитики(Форма);
	
	//
	Если ЭтоСтатьяБюджета = Истина Тогда
		Если Объект.ГруппаРаскрытия.Пустая() Тогда
			Элементы.ВидыАналитик.Подсказка = "";
			Элементы.ВидыАналитик.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Иначе
			Элементы.ВидыАналитик.Подсказка = НСтр("ru = 'Изменение видов аналитик невозможно, т.к. выбрана группа раскрытия'");
			Элементы.ВидыАналитик.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет реквизиты статьи бюджета из таблицы видов аналитики
Процедура ЗаполнитьВидыАналитикиИзТаблицы(Форма, ТекущийОбъект, Отказ) Экспорт
	
	НомерНезаполненного = 0;
	КоличествоАналитик = АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи();
	Для Каждого Строка Из Форма.ВидыАналитик Цикл
		
		Если ЗначениеЗаполнено(Строка.ВидАналитики) Тогда
			Если НомерНезаполненного <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Пропуск вида аналитики недопустим.'");
				Поле = СтрШаблон("ВидыАналитик[%1].ВидАналитики", НомерНезаполненного-1);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,Поле,, Отказ);
				Возврат; // Пропуск видов аналитик недопустим
			КонецЕсли;
		Иначе	
			Если НомерНезаполненного = 0 Тогда
				НомерНезаполненного = Строка.НомерАналитики;
			КонецЕсли;
		КонецЕсли;
		ТекущийОбъект[СтрШаблон("ВидАналитики%1", Строка.НомерАналитики)] = Строка.ВидАналитики;
	КонецЦикла;
	
КонецПроцедуры

// Процедура устанавливает условное оформление таблицы ВидыАналитик форм элементов статей бюджетов
Процедура УстановитьУсловноеОформлениеВидовАналитик(Форма, ЭтоСтатьяБюджета = Истина)
	
	Элементы = Форма.Элементы;
	
	// Не используется
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ВидыАналитикВидАналитики");
	//КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ВидыАналитикВидАналитики.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВидыАналитик.ВидАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВидыАналитик.НомерАналитики", ВидСравненияКомпоновкиДанных.Больше, Новый ПолеКомпоновкиДанных("МаксимальныйНомерЗаполненнойАналитики"));
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля["ТекстЗапрещеннойЯчейкиЦвет"]);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не используется>'"));
	
	// Обязательность заполнения
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ВидыАналитикВидАналитики");
	//КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ВидыАналитикВидАналитики.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВидыАналитик.ВидАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
		"ВидыАналитик.НомерАналитики", ВидСравненияКомпоновкиДанных.Меньше, Новый ПолеКомпоновкиДанных("МаксимальныйНомерЗаполненнойАналитики"));
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	Если ЭтоСтатьяБюджета = Истина Тогда
	
		// Запрещено изменять, если завполнена группа раскрытия
		Элемент = Форма.УсловноеОформление.Элементы.Добавить();
		Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ВидыАналитикВидАналитики");
		//КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ВидыАналитикВидАналитики.Имя);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Элемент.Отбор,
			"Объект.ГруппаРаскрытия", ВидСравненияКомпоновкиДанных.Заполнено);
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в массив реквизиты для последующего создания 
Процедура ДобавитьРеквизитыВидовАналитик(Реквизиты) Экспорт
	
	//
	Реквизиты.Добавить(Новый РеквизитФормы("МаксимальныйНомерЗаполненнойАналитики", ОбщегоНазначения.ОписаниеТипаЧисло(10,0)));
	Реквизиты.Добавить(Новый РеквизитФормы("ВидыАналитикДобавлены", Новый ОписаниеТипов("Булево")));
	
	Реквизиты.Добавить(Новый РеквизитФормы("КонтролироватьСтатью", Новый ОписаниеТипов("Булево")));
	Реквизиты.Добавить(Новый РеквизитФормы("ПараметрыЛимитированияВидБюджета", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыБюджетов")));
	Реквизиты.Добавить(Новый РеквизитФормы("ПараметрыЛимитированияГод", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата)));
	Реквизиты.Добавить(Новый РеквизитФормы("ВидыБюджетовНазначены", Новый ОписаниеТипов("Булево")));
	
	ИмяТаблицы = "ВидыБюджетовДляТипаСтатьи";
	Реквизиты.Добавить(Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений")));
	Реквизиты.Добавить(Новый РеквизитФормы("ВидБюджета", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыБюджетов"), ИмяТаблицы));
	Реквизиты.Добавить(Новый РеквизитФормы("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата), ИмяТаблицы));
	
КонецПроцедуры

Процедура ПриИзмененииПараметровЛимитирования(Форма, ИмяЭлемента) Экспорт
	
	Если ИмяЭлемента = "ПараметрыЛимитированияГод" Тогда
		ПриИзмененииГодаЛимитирования(Форма);
	ИначеЕсли ИмяЭлемента = "ПараметрыЛимитированияВидБюджета" Тогда
		ПриИзмененииБюджетаКонтроляСтатьи(Форма);
	КонецЕсли;
	
КонецПроцедуры

Функция БлокирующиеСсылки(СтатьяСсылка) Экспорт
	Результат = ВыполнитьЗапросБлокирующихСсылок(СтатьяСсылка);
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

Процедура ПриСозданииФормыВыбора(Форма) Экспорт
	
	ПараметрыЛимитирования = Новый Структура("Период, ВидБюджета");
	Форма.Параметры.Отбор.Свойство("ПараметрыЛимитирования_Период", ПараметрыЛимитирования.Период);
	Форма.Параметры.Отбор.Свойство("ПараметрыЛимитирования_ВидБюджета", ПараметрыЛимитирования.ВидБюджета);
	
	ТребуетсяПараметрыЛимитированияСтатьи = ЗначениеЗаполнено(ПараметрыЛимитирования.Период) И ЗначениеЗаполнено(ПараметрыЛимитирования.ВидБюджета);
	Если ТребуетсяПараметрыЛимитированияСтатьи Тогда
		
		Если ТипЗнч(ПараметрыЛимитирования.ВидБюджета) = Тип("ПеречислениеСсылка.ПредназначенияЭлементовСтруктурыОтчета") Тогда
			Если ПараметрыЛимитирования.ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств Тогда
				ПараметрыЛимитирования.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств;
			ИначеЕсли ПараметрыЛимитирования.ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов Тогда
				ПараметрыЛимитирования.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;
			ИначеЕсли ПараметрыЛимитирования.ВидБюджета = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов Тогда
				ПараметрыЛимитирования.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов;
			Иначе
				ПараметрыЛимитирования.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
		ДобавитьЭлементыИспользования(Форма);
		
		ТипПериода = ТипЗнч(ПараметрыЛимитирования.Период);
		Если ТипПериода = Тип("Дата") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ПараметрыЛимитирования_Период", ПараметрыЛимитирования.Период);
		ИначеЕсли ТипПериода = Тип("СправочникСсылка.Периоды") Тогда
			НачалоГода = НачалоГода(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЛимитирования.Период, "ДатаНачала"));
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ПараметрыЛимитирования_Период", НачалоГода);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ПараметрыЛимитирования_ВидБюджета", ПараметрыЛимитирования.ВидБюджета);
		
		Форма.Параметры.Отбор.Удалить("ПараметрыЛимитирования_Период");
		Форма.Параметры.Отбор.Удалить("ПараметрыЛимитирования_ВидБюджета");
		Форма.Параметры.Отбор.Вставить("КонтролироватьСтатью", Истина);
		Форма.Параметры.Отбор.Вставить("ВидБюджета", ПараметрыЛимитирования.ВидБюджета);
		Если ТипПериода = Тип("Дата") Тогда
			Форма.Параметры.Отбор.Вставить("ПериодЛимитирования", Формат(ПараметрыЛимитирования.Период, "ДЛФ=D"));
		Иначе
			Форма.Параметры.Отбор.Вставить("ПериодЛимитирования", ПараметрыЛимитирования.Период);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ПараметрыЛимитирования_Период",	'00010101');
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "ПараметрыЛимитирования_ВидБюджета",	ПланыВидовХарактеристик.ВидыБюджетов.ПустаяСсылка());
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет заполнение видов аналитик статьи по группе раскрытия из формы элемента статьи
//
// Параметры:
//  Форма			- ФормаКлиентскогоПриложения - Форма 
//  ГруппаРаскрытия - СправочникСсылка.ГруппыАналитикСтатьи - Группа раскрытия
//
Процедура ЗаполнитьВидыАналитикПоГруппеРаскрытияВФорме(Форма, ГруппаРаскрытия) Экспорт
	
	Объект = Форма.Объект;
	
	Объект.ГруппаРаскрытия = ГруппаРаскрытия;
	Если ЗначениеЗаполнено(ГруппаРаскрытия) Тогда
		ЗаполнитьВидыАналитикПоГруппеРаскрытия(Объект, ГруппаРаскрытия);
	КонецЕсли;
	
	ЗаполнитьТаблицуВидовАналитик(Форма);
	
КонецПроцедуры

// Процедура выполняет заполнение видов аналитик статьи по группе раскрытия
//
// Параметры:
//  СтатьяОбъект    - СправочникОбъект.Статьи*, ДанныеФормыСтруктура - Объект статьи 
//  ГруппаРаскрытия - СправочникСсылка.ГруппыАналитикСтатьи - Группа раскрытия
//
Процедура ЗаполнитьВидыАналитикПоГруппеРаскрытия(СтатьяОбъект, ГруппаРаскрытия) Экспорт
	
	ИменаРеквизитов = АналитикиСтатейБюджетовУХКлиентСервер.РеквизитыАналитикИзШаблона("ВидАналитики%1");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГруппаРаскрытия, ИменаРеквизитов);
	ЗаполнитьЗначенияСвойств(СтатьяОбъект, Реквизиты, ИменаРеквизитов);
	
КонецПроцедуры


#КонецОбласти 

Процедура УстановитьПараметрВыбораДляСтатейБюджетов(Форма, ПараметрВыбора) Экспорт
	
	Для Каждого КлючЗначение Из Форма.ОписаниеФормы.СтатьиБюджетов Цикл
		ФормыУХКлиентСервер.ЗаменитьУдалитьПараметрВыбора(Форма.Элементы[КлючЗначение.Ключ], ПараметрВыбора.Имя, ПараметрВыбора);
	КонецЦикла;
	
КонецПроцедуры

// Процедура добавляет в массив описание реквизитов ВидАналитики
Процедура ДобавитьРеквизитыВидаАналитики(ДобавляемыеРеквизиты, ИмяРеквизита, Путь = "") Экспорт

	// Вид аналитики
	Реквизит = Новый РеквизитФормы(
		ИмяРеквизита, 
		Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные"),
		Путь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);

	// Тип значения
	Реквизит = Новый РеквизитФормы(
		ИмяРеквизита+"ТипЗначения", 
		Новый ОписаниеТипов("ОписаниеТипов"),
		Путь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// Тип значения
	Реквизит = Новый РеквизитФормы(
		ИмяРеквизита+"ПараметрыВыбора", 
		Новый ОписаниеТипов(),
		Путь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// Тип значения
	Реквизит = Новый РеквизитФормы(
		ИмяРеквизита+"СвязиАналитик", 
		Новый ОписаниеТипов(),
		Путь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	// Тип значения
	Реквизит = Новый РеквизитФормы(
		ИмяРеквизита+"Наименование", 
		ОбщегоНазначения.ОписаниеТипаСтрока(150),
		Путь);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
КонецПроцедуры // ДобавитьРеквизитыВидаАналитики

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РеквизитУжеДобавлен(ДобавляемыеРеквизиты, ИмяРеквизита, Путь)
	
	Для Каждого Реквизит Из ДобавляемыеРеквизиты Цикл
		Если Реквизит.Имя = ИмяРеквизита И Реквизит.Путь = Путь Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ДобавитьЭлементСтатьяБюджета(Форма, КолонкаСтатья, ПутьКДанным, Родитель, ВставитьПеред, ПараметрыЭлемента = Неопределено, СобытияЭлемента = Неопределено)
	
	ЭлементыФормы = Форма.Элементы;
	
	Элемент = ЭлементыФормы.Найти(КолонкаСтатья);
	Если Элемент = Неопределено Тогда
		Элемент = ФормыУХ.СоздатьПолеФормы(
			ЭлементыФормы, 
			КолонкаСтатья, "", ПутьКДанным, ВидПоляФормы.ПолеВвода, 
			Родитель, ВставитьПеред, 
			ПараметрыЭлемента, СобытияЭлемента);
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

Процедура УстановитьУсловноеОформлениеДополнительныхАналитик(Форма, ОписаниеЭлементаСтатья)
	
	//
	Если НЕ ОписаниеЭлементаСтатья.ЭтоТаблицаФормы Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеАналитики Из ОписаниеЭлементаСтатья.ЭлементыАналитики Цикл
		
		// ВидАналитики* не заполнен
		ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
		ЭлементУО.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(ОписаниеАналитики.ИмяЭлемента);
		
		//
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ЭлементУО.Отбор,
			ОписаниеАналитики.ПутьКДанным + "." + ОписаниеАналитики.ИмяРеквизитаВидАналитики, 
			ВидСравненияКомпоновкиДанных.НеЗаполнено,,,Истина);
		//
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",					НСтр("ru = '<Не используется>'"));
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",			Истина);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного",	Ложь);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",				ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		
		// ВидАналитики* заполнен, но значение аналитики не заполнено
		ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
		ЭлементУО.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(ОписаниеАналитики.ИмяЭлемента);
		
		//
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ЭлементУО.Отбор,
			ОписаниеАналитики.ПутьКДанным + "." + ОписаниеАналитики.ИмяРеквизитаВидАналитики, 
			ВидСравненияКомпоновкиДанных.Заполнено,,,Истина);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ЭлементУО.Отбор,
			ОписаниеАналитики.ПутьКДанным + "." + ОписаниеАналитики.ИмяРеквизита, 
			ВидСравненияКомпоновкиДанных.НеЗаполнено,,,Истина);
		//
		
		ПКД = Новый ПолеКомпоновкиДанных(ОписаниеАналитики.ПутьКДанным + "." + ОписаниеАналитики.ИмяРеквизитаВидАналитики+"Наименование");
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", ПКД);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",				ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиОписаниеСтатьиБюджетаПоИмениИПути(МассивОписанийСтатей, ИмяРеквизитаСтатья, ПутьКДанным)
	
	Результат = Неопределено;
	Для Каждого Строка Из МассивОписанийСтатей Цикл
		Если Строка.ИмяРеквизита = ИмяРеквизитаСтатья И Строка.ПутьКДанным = ПутьКДанным Тогда
			Результат = Строка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Процедура выполняет завполнеиня ВидовАналитик для ОписанияСтатьиБюджетов
Процедура ЗаполнитьВидыАналитикПоОписаниюСтатьиБюджета(Форма, ОписаниеСтатьи)
	
	ПараметрыЛимитирования = Новый Структура;
	
	// 
	Если ОписаниеСтатьи.ЭтоТаблица Тогда
		
		Если ОписаниеСтатьи.ТолькоЛимитируемыеАналитики Тогда
			ПутиКДаннымЛимитирования = АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьПутиКДаннымЛимитированияОбъекта(Форма, ОписаниеСтатьи);
		КонецЕсли;
		
		Таблица = АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеСтатьи.ПутьКДанным);
		Для Каждого СтрокаТаблицы Из Таблица Цикл
			ЗначениеСтатьи = СтрокаТаблицы[ОписаниеСтатьи.ИмяРеквизита];
			
			ПараметрыЛимитирования = Новый Структура;
			Если ОписаниеСтатьи.ТолькоЛимитируемыеАналитики И ПутиКДаннымЛимитирования.Заполнены Тогда
				
				ИдентификаторСтроки = СтрокаТаблицы.ПолучитьИдентификатор();
				ПараметрыЛимитирования.Вставить("ПараметрыЛимитирования_Период", 
					АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутиКДаннымЛимитирования.Период, ИдентификаторСтроки));
				ПараметрыЛимитирования.Вставить("ПараметрыЛимитирования_ВидБюджета", 
					АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутиКДаннымЛимитирования.ВидБюджета, ИдентификаторСтроки));
				
			КонецЕсли;
			
			ЗаполнитьВидыАналитикиСтатьи(Форма, ОписаниеСтатьи, ЗначениеСтатьи, СтрокаТаблицы, СтрокаТаблицы, ПараметрыЛимитирования);
		КонецЦикла;
	Иначе
		
		ПутьКДанным = ОписаниеСтатьи.ИмяРеквизита;
		Если ЗначениеЗаполнено(ОписаниеСтатьи.ПутьКДанным) Тогда
			ПутьКДанным = ОписаниеСтатьи.ПутьКДанным + "." + ПутьКДанным;
		КонецЕсли;
		
		ЗначениеСтатьи = АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьЗначениеПоПутиКДанным(Форма, ПутьКДанным);
		
		//
		ДанныеВидАналитики	= АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеСтатьи.Аналитики.ВидАналитикиПуть);
		ДанныеАналитика		= АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ОписаниеСтатьи.Аналитики.АналитикаПуть);
		
		//
		ПараметрыЛимитирования = Новый Структура;
		Если ОписаниеСтатьи.ТолькоЛимитируемыеАналитики Тогда
			ПутиКДаннымЛимитирования = АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьПутиКДаннымЛимитированияОбъекта(Форма, ОписаниеСтатьи);
		КонецЕсли;
		
		Если ОписаниеСтатьи.ТолькоЛимитируемыеАналитики И ПутиКДаннымЛимитирования.Заполнены Тогда
			
			ПараметрыЛимитирования.Вставить("ПараметрыЛимитирования_Период", 
				АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутиКДаннымЛимитирования.Период));
			ПараметрыЛимитирования.Вставить("ПараметрыЛимитирования_ВидБюджета", 
				АналитикиСтатейБюджетовУХКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутиКДаннымЛимитирования.ВидБюджета));
			
		КонецЕсли;
		
		ЗаполнитьВидыАналитикиСтатьи(Форма, ОписаниеСтатьи, ЗначениеСтатьи, ДанныеАналитика, ДанныеВидАналитики, ПараметрыЛимитирования);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура для ЗначениеСтатьи выполняет заполнение ДанныеАналитик и ДанныеВидАналитики
Процедура ЗаполнитьВидыАналитикиСтатьи(Форма, ОписаниеСтатьи, ЗначениеСтатьи, ДанныеАналитика, ДанныеВидАналитики, ПараметрыЛимитирования = неопределено)
	
	Если ДанныеВидАналитики = Неопределено ИЛИ ДанныеАналитика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Заполняем виды аналитик
	АналитикиСтатейБюджетовУХКлиентСервер.ЗаполнитьСведенияОВидахАналитик(ЗначениеСтатьи, ДанныеВидАналитики, ОписаниеСтатьи, ПараметрыЛимитирования);
	
	Действия = Новый Структура("ПривестиЗначенияАналитик");
	АналитикиСтатейБюджетовУХКлиентСервер.ОбработатьЗначенияАналитик(Форма, ОписаниеСтатьи, ДанныеВидАналитики, ДанныеАналитика, Действия);
	АналитикиСтатейБюджетовУХКлиентСервер.НастроитьПоляВводаАналитик(Форма, ОписаниеСтатьи, ДанныеВидАналитики);
		
КонецПроцедуры

#Область СтатьиБюджетов

Процедура СоздатьЭлементыФормыСтатьиБюджета(Форма, Родитель, ПередЭлементом)
	
	ДействиеПриИзменении = Новый Структура("ПриИзменении", "Подключаемый_ПриИзмененииПараметровЛимитирования");
	
	Элементы = Форма.Элементы;
	
	Группа = ФормыУХ.СоздатьГруппуФормы(Элементы, "ГруппаПараметрыЛимитирования", , , Родитель, ПередЭлементом);
	Группа.ОтображатьЗаголовок = Ложь;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
	Группа.СквозноеВыравнивание = СквозноеВыравнивание.НеИспользовать;
	Группа.РастягиватьПоГоризонтали = Ложь;
	
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "ПараметрыЛимитированияГод", НСтр("ru = 'Контролировать статью в'"),
		"ПараметрыЛимитированияГод", , Группа, , , ДействиеПриИзменении);
	Элемент.РедактированиеТекста = Ложь;
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.РежимВыбораИзСписка = Истина;
	
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "ПараметрыЛимитированияВидБюджета", НСтр("ru = 'по'"),
		"ПараметрыЛимитированияВидБюджета", , Группа, , , ДействиеПриИзменении);
	Элемент.РастягиватьПоГоризонтали = Ложь;
	Элемент.РежимВыбораИзСписка = Истина;
	Элемент.КнопкаОткрытия = Ложь;
	
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "КонтролироватьСтатью", ,
		"КонтролироватьСтатью", ВидПоляФормы.ПолеФлажка, Группа, , , ДействиеПриИзменении);
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элемент.ВидФлажка = ВидФлажка.Тумблер;
	Элемент.ФорматРедактирования = Нстр("ru = 'БЛ=Нет; БИ=Да'");
	Элемент.ТолькоПросмотр = Истина;
	
	Если Элементы.Найти("ГруппаВидыАналитик") = неопределено Тогда
		СоздатьГруппуФормыВидыАналитик(Форма, Родитель, ПередЭлементом);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьГруппуФормыВидыАналитик(Форма, Родитель, ПередЭлементом)
	
	Элементы = Форма.Элементы;
	
	Группа =  ФормыУХ.СоздатьГруппуФормы(Элементы, "ГруппаВидыАналитик", , , Родитель, ПередЭлементом, ФормыУХ.ПараметрыНевидимойГруппы());
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	Элемент =  ФормыУХ.СоздатьДекорациюФормы(Элементы, "ДекорацияВидыАналитик", НСтр("ru = 'Виды аналитик:'"), , Группа);
	Элемент.Ширина = 15;
	Группа2 = ФормыУХ.СоздатьГруппуФормы(Элементы, "ГруппаВидыАналитикБлокирующиеСсылки", , , Группа, ,	ФормыУХ.ПараметрыНевидимойГруппы());
	
	Элемент = ФормыУХ.СоздатьДекорациюФормы(Элементы, "ДекорацияБлокирующиеСсылки", НСтр("ru = 'Найдено %1 ссылок на статью'"), , Группа2);
	Элемент.Гиперссылка = Истина;
	Элемент.УстановитьДействие("Нажатие", "Подключаемый_ДекорацияБлокирующиеСсылкиНажатие");
	
	Таблица = ФормыУХ.СоздатьТаблицуФормы(Элементы, "ВидыАналитик", , "ВидыАналитик", Группа2);
	Таблица.УстановитьДействие("ПриИзменении", "Подключаемый_ВидыАналитикПриИзменении");
	Таблица.ИзменятьСоставСтрок = Ложь;
	Таблица.ИзменятьПорядокСтрок = Ложь;
	Таблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	// Колонки вида аналитик
	ПараметрыПоля = Новый Структура("Ширина, МаксимальнаяШирина, АвтоМаксимальнаяШирина", 5, 5, Ложь);
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "ВидыАналитикНомерАналитики", , "ВидыАналитик.НомерАналитики", , Таблица,, ПараметрыПоля);
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "ВидыАналитикВидАналитики", , "ВидыАналитик.ВидАналитики", , Таблица);
	Элемент = ФормыУХ.СоздатьПолеФормы(Элементы, "ВидыАналитикКонтролироватьАналитику", , "ВидыАналитик.КонтролироватьАналитику", ВидПоляФормы.ПолеФлажка, Таблица);
	Элемент.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоВидамБюджетаТипаСтатьи(Форма, ТипСтатьи)
	
	Элементы = Форма.Элементы;
	
	Форма.ВидыБюджетовНазначены = Ложь;
	Форма.ВидыБюджетовДляТипаСтатьи.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыБюджетов.Ссылка КАК ВидБюджета,
	|	ВидыБюджетов.ТипЗначения КАК ТипЗначения
	|ИЗ
	|	ПланВидовХарактеристик.ВидыБюджетов КАК ВидыБюджетов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыБюджетов.Ссылка";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВидыБюджетов = Новый Массив;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗначения.СодержитТип(ТипСтатьи) Тогда
			ВидыБюджетов.Добавить(Выборка.ВидБюджета);
		КонецЕсли;
	КонецЦикла;
	
	Форма.ВидыБюджетовНазначены = ВидыБюджетов.Количество() > 0;
	
	Элементы.ГруппаПараметрыЛимитирования.Видимость = Форма.ВидыБюджетовНазначены;
	Элементы.ВидыАналитикКонтролироватьАналитику.Видимость = Форма.ВидыБюджетовНазначены;
	
	Если НЕ Форма.ВидыБюджетовНазначены Тогда
		Возврат;
	КонецЕсли;
	
	//
	Запрос.УстановитьПараметр("ВидыБюджетов", ВидыБюджетов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыЛимитирования.Период КАК Период,
	|	ПараметрыЛимитирования.ВидБюджета КАК ВидБюджета
	|ИЗ
	|	РегистрСведений.ПараметрыЛимитирования КАК ПараметрыЛимитирования
	|ГДЕ
	|	ПараметрыЛимитирования.ВидБюджета В(&ВидыБюджетов)";
	ВидыБюджетовПериоды = Запрос.Выполнить().Выгрузить();
	Форма.ВидыБюджетовДляТипаСтатьи.Загрузить(ВидыБюджетовПериоды);
	
	// Заполняем вид бюджета
	Если НЕ ЗначениеЗаполнено(Форма.ПараметрыЛимитированияВидБюджета)
		ИЛИ ВидыБюджетов.Найти(Форма.ПараметрыЛимитированияВидБюджета) = неопределено Тогда
		Форма.ПараметрыЛимитированияВидБюджета = ВидыБюджетов[0];
	КонецЕсли;
	
	// Настраиваем элементы формы
	Если ВидыБюджетов.Количество() = 1 Тогда
		Элементы.ПараметрыЛимитированияВидБюджета.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.ПараметрыЛимитированияВидБюджета.Видимость = Ложь;
	Иначе
		Элементы.ПараметрыЛимитированияВидБюджета.Вид = ВидПоляФормы.ПолеВвода;
		Элементы.ПараметрыЛимитированияВидБюджета.РежимВыбораИзСписка = Истина;
		Элементы.ПараметрыЛимитированияВидБюджета.КнопкаОткрытия = Ложь;
		Элементы.ПараметрыЛимитированияВидБюджета.СписокВыбора.Очистить();
		Для Каждого ВидБюджета Из ВидыБюджетов Цикл
			Элементы.ПараметрыЛимитированияВидБюджета.СписокВыбора.Добавить(ВидБюджета);
		КонецЦикла;
	КонецЕсли;
	
	ПриИзмененииБюджетаКонтроляСтатьи(Форма);
	
КонецПроцедуры

Процедура ПриИзмененииГодаЛимитирования(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ПараметрыЛимитирования = ПолучитьПараметрыЛимитированияСтатьи(Форма.ПараметрыЛимитированияВидБюджета, Форма.ПараметрыЛимитированияГод, Объект.Ссылка);
	Форма.КонтролироватьСтатью = ПараметрыЛимитирования.КонтролироватьСтатью;
	Для Каждого Строка Из Форма.ВидыАналитик Цикл
		Строка.КонтролироватьАналитику = ПараметрыЛимитирования["КонтролироватьАналитику"+Строка.НомерАналитики];
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИзмененииБюджетаКонтроляСтатьи(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ВидыБюджетовПериоды = Форма.ВидыБюджетовДляТипаСтатьи.Выгрузить();
	
	// Заполняем год контроля
	СтруктураПоиска = Новый Структура("ВидБюджета", Форма.ПараметрыЛимитированияВидБюджета);
	ВидБюджетаПериоды = ВидыБюджетовПериоды.Скопировать(СтруктураПоиска);
	СтруктураПоиска.Вставить("Период", Форма.ПараметрыЛимитированияГод);
	// Если Год незаполнен и год не описан, то ставим последний описанный.
	Если НЕ ЗначениеЗаполнено(Форма.ПараметрыЛимитированияГод)
		ИЛИ ВидБюджетаПериоды.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
		Если ВидБюджетаПериоды.Количество() >0 Тогда
			ВидБюджетаПериоды.Сортировать("Период Убыв");
			Форма.ПараметрыЛимитированияГод = ВидБюджетаПериоды[0].Период;
		Иначе
			Форма.ПараметрыЛимитированияГод = НачалоГода(ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	// Настраиваем элементы формы
	Если ВидБюджетаПериоды.Количество() = 1 Тогда
		Элементы.ПараметрыЛимитированияГод.Вид = ВидПоляФормы.ПолеНадписи;
	Иначе
		Элементы.ПараметрыЛимитированияГод.Вид = ВидПоляФормы.ПолеВвода;
		Элементы.ПараметрыЛимитированияГод.РежимВыбораИзСписка = Истина;
		Элементы.ПараметрыЛимитированияГод.СписокВыбора.Очистить();
		Для Каждого Строка Из ВидБюджетаПериоды Цикл
			Элементы.ПараметрыЛимитированияГод.СписокВыбора.Добавить(
				Строка.Период, 
				Формат(Строка.Период, НСтр("ru = 'ДФ=''yyyy ''''г.'''''''"))
			);
		КонецЦикла;
	КонецЕсли;
	
	ПриИзмененииГодаЛимитирования(Форма);
		
КонецПроцедуры

Функция ПолучитьПараметрыЛимитированияСтатьи(ВидБюджета, Период, СтатьяБюджета)
	
	Результат = Новый Структура;
	Результат.Вставить("ВидБюджета", ВидБюджета);
	Результат.Вставить("Период", Период);
	Результат.Вставить("СтатьяБюджета", СтатьяБюджета);
	Результат.Вставить("ИспользоватьЛимитирование", Ложь);
	Результат.Вставить("КонтролироватьСтатью", Ложь);
	Для Поз = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
		Результат.Вставить("КонтролироватьАналитику"+Поз, Ложь);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидБюджета", ВидБюджета);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("СтатьяБюджета", СтатьяБюджета);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыЛимитирования.Период КАК Период,
	|	ПараметрыЛимитирования.ВидБюджета КАК ВидБюджета,
	|	ПараметрыЛимитирования.ИспользоватьЛимитирование КАК ИспользоватьЛимитирование,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьСтатью, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьСтатью,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику1, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику1,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику2, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику2,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику3, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику3,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику4, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику4,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику5, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику5,
	|	ВЫБОР
	|		КОГДА ПараметрыЛимитирования.ИспользоватьЛимитирование = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.КонтролироватьАналитику6, ЛОЖЬ)
	|	КОНЕЦ КАК КонтролироватьАналитику6
	|ИЗ
	|	РегистрСведений.ПараметрыЛимитирования КАК ПараметрыЛимитирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтроляЛимитаСтатейБюджетов.СрезПоследних(
	|				&Период,
	|				ВидБюджета = &ВидБюджета
	|					И СтатьяБюджета = &СтатьяБюджета) КАК ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних
	|		ПО ПараметрыЛимитирования.ВидБюджета = ПараметрыКонтроляЛимитаСтатейБюджетовСрезПоследних.ВидБюджета
	|ГДЕ
	|	ПараметрыЛимитирования.Период = &Период
	|	И ПараметрыЛимитирования.ВидБюджета = &ВидБюджета";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция КоличествоБлокирующихСсылок(СтатьяСсылка)
	Результат = ВыполнитьЗапросБлокирующихСсылок(СтатьяСсылка);
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Возврат Выборка.Количество();
КонецФункции

Функция ВыполнитьЗапросБлокирующихСсылок(СтатьяБюджета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтатьяБюджета", СтатьяБюджета);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Запрос.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛимитыПоБюджетам.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.ЛимитыПоБюджетам КАК ЛимитыПоБюджетам
	|	ГДЕ
	|		ЛимитыПоБюджетам.СтатьяБюджета = &СтатьяБюджета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныйПланПоБюджетам.Регистратор
	|	ИЗ
	|		РегистрНакопления.ОперативныйПланПоБюджетам КАК ОперативныйПланПоБюджетам
	|	ГДЕ
	|		ОперативныйПланПоБюджетам.СтатьяБюджета = &СтатьяБюджета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтрокиОтчетов.Ссылка
	|	ИЗ
	|		Справочник.СтрокиОтчетов КАК СтрокиОтчетов
	|	ГДЕ
	|		СтрокиОтчетов.СтатьяДвиженияДенежныхСредств = &СтатьяБюджета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтрокиОтчетов.Ссылка
	|	ИЗ
	|		Справочник.СтрокиОтчетов КАК СтрокиОтчетов
	|	ГДЕ
	|		СтрокиОтчетов.СтатьяДоходовИРасходов = &СтатьяБюджета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтрокиОтчетов.Ссылка
	|	ИЗ
	|		Справочник.СтрокиОтчетов КАК СтрокиОтчетов
	|	ГДЕ
	|		СтрокиОтчетов.СтатьяДвиженияРесурсов = &СтатьяБюджета) КАК Запрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ДобавитьЭлементыИспользования(Форма, ШаблонИмениЭлементаВидАналитики = неопределено)
	
	Если ШаблонИмениЭлементаВидАналитики = неопределено Тогда
		ШаблонИмениЭлементаВидАналитики = "ВидАналитики%1";
	КонецЕсли;
	
	ШаблонИмени = "КонтролироватьАналитику%1";
	ШаблонПути = "Список.КонтролироватьАналитику%1";
	
	//
	Элементы = Форма.Элементы;
	
	ВставитьПеред = Элементы.Найти(СтрШаблон(ШаблонИмениЭлементаВидАналитики, 1));
	ФормыУХ.СоздатьПолеФормы(Элементы, "КонтролироватьСтатью", , "Список.КонтролироватьСтатью", ВидПоляФормы.ПолеФлажка, ВставитьПеред.Родитель, ВставитьПеред);
	
	СвойстваЭлементовАналитик = Новый Структура;
	СвойстваЭлементовАналитик.Вставить("ОтображатьВШапке", Ложь);
	
	Для Поз = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
		ВставитьПеред = Элементы.Найти(СтрШаблон(ШаблонИмениЭлементаВидАналитики, Поз));
		ФормыУХ.СоздатьПолеФормы(
			Элементы, СтрШаблон(ШаблонИмени, Поз), ,	СтрШаблон(ШаблонПути, Поз),
			ВидПоляФормы.ПолеФлажка, ВставитьПеред.Родитель, ВставитьПеред, СвойстваЭлементовАналитик
		);
	КонецЦикла;
	
	
КонецПроцедуры

//
Процедура ЗаблокироватьРедактированиеЭлементовВидовАналитик(Форма, ВозможностьРедактирования)
	
	Элементы = Форма.Элементы;
	Элементы.ВидыАналитик.ТолькоПросмотр = ВозможностьРедактирования;
	Элементы.ГруппаРаскрытия.ТолькоПросмотр = ВозможностьРедактирования;
	
КонецПроцедуры


#КонецОбласти 

Функция ИмяРеквизитаОписаниеФормы()
	Возврат "ОписаниеФормы";
КонецФункции

#КонецОбласти 
