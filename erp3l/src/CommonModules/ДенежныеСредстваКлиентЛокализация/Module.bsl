
#Область СлужебныйПрограммныйИнтерфейс

Функция ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат, Оповещение) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	Если Результат.ОткрыватьФормуПомощника И Результат.Свойство("ТребуетсяКонтрольГОЗ") Тогда
		
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("ТребуетсяКонтрольГОЗ", Истина);
		СтруктураПараметры.Вставить("АдресСтрокГрафика", Результат.АдресСтрокГрафика);
		
		ОткрытьФорму("ОбщаяФорма.ПомощникФормированияПлатежныхДокументов",
			СтруктураПараметры,
			ЭлементФормы,,,,
			Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		Возврат Истина;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции

//++ Локализация

// Проверяет, может ли номер счета соответствовать Российскому банку
// 
// Параметры:
// 	НомерСчета - Строка - номер счета 
// Возвращаемое значение:
// 	Булево - если Истина, то счет может принадлежать Российскому банку.
Функция СтрокаСоответствуетФорматуБанковскогоСчетаРФ(НомерСчета) Экспорт
	
	Если Не СтрДлина(НомерСчета) = 20 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерСчета) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Проверяем особый случай: алфавитный символ в номере счета
	
	ЗаведомоЦифровыеСимволы = Лев(НомерСчета, 5) + Сред(НомерСчета, 7);
	Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗаведомоЦифровыеСимволы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	АлфавитныйСимвол = Сред(НомерСчета, 6, 1);
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(АлфавитныйСимвол) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЦифраШестогоРазряда = СтрНайти(ДопустимыеАлфавитныеСимволыНомераБанковскогоСчетаРФ(), АлфавитныйСимвол);
	Возврат ЦифраШестогоРазряда <> Неопределено;
	
КонецФункции

#Область РаботаСФайлами

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанк(Форма) Экспорт
	
	Обработчик = Новый ОписаниеОповещения("ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение", ЭтотОбъект, Форма);
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Переход к файлам возможен только после записи данных.
			|Данные будут записаны.';
			|en = 'Data is not written yet.
			|You can use files only after data is written.
			|Data will be written.'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(Обработчик, КодВозвратаДиалога.Пропустить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение(Ответ, Форма) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Форма.Записать();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Форма.Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ДляПередачиВБанк", Истина);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		Форма,
		Истина,
		Форма.Окно);
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция ДопустимыеАлфавитныеСимволыНомераБанковскогоСчетаРФ()
	// Символы приведены в порядке, определенном письмом ЦБР от 8 сентября 1997 г. N 515
	// См. также ПроверитьКонтрольныйКлючВНомереБанковскогоСчета()
	Возврат "ABCEHKMPTX";
КонецФункции

//-- Локализация

#КонецОбласти