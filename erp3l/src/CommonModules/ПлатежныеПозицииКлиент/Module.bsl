
#Область ПрограммныйИнтерфейс

Процедура СоздатьПриходныйКассовыйОрдер(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") И ТипЗнч(МассивСсылок) <> Тип("ФиксированныйМассив") Тогда
		МассивСсылокДляОбработки = Новый Массив;
		МассивСсылокДляОбработки.Добавить(МассивСсылок);
	Иначе
		МассивСсылокДляОбработки = МассивСсылок;
	КонецЕсли;
	
	СоздатьДокументОплатыНаОснованииПозиции(МассивСсылокДляОбработки, "ПриходныйКассовыйОрдер");
	
КонецПроцедуры

Процедура СоздатьПоступлениеБезналичныхДС(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") И ТипЗнч(МассивСсылок) <> Тип("ФиксированныйМассив") Тогда
		МассивСсылокДляОбработки = Новый Массив;
		МассивСсылокДляОбработки.Добавить(МассивСсылок);
	Иначе
		МассивСсылокДляОбработки = МассивСсылок;
	КонецЕсли;
	
	СоздатьДокументОплатыНаОснованииПозиции(МассивСсылокДляОбработки, "ПоступлениеБезналичныхДенежныхСредств");
	
КонецПроцедуры

Процедура СоздатьРасходныйКассовыйОрдер(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") И ТипЗнч(МассивСсылок) <> Тип("ФиксированныйМассив") Тогда
		МассивСсылокДляОбработки = Новый Массив;
		МассивСсылокДляОбработки.Добавить(МассивСсылок);
	Иначе
		МассивСсылокДляОбработки = МассивСсылок;
	КонецЕсли;
	
	СоздатьДокументОплатыНаОснованииПозиции(МассивСсылокДляОбработки, "РасходныйКассовыйОрдер");
	
КонецПроцедуры

Процедура СоздатьСписаниеБезналичныхДС(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	Если ТипЗнч(МассивСсылок) <> Тип("Массив") И ТипЗнч(МассивСсылок) <> Тип("ФиксированныйМассив") Тогда
		МассивСсылокДляОбработки = Новый Массив;
		МассивСсылокДляОбработки.Добавить(МассивСсылок);
	Иначе
		МассивСсылокДляОбработки = МассивСсылок;
	КонецЕсли;
	
	СоздатьДокументОплатыНаОснованииПозиции(МассивСсылокДляОбработки, "СписаниеБезналичныхДенежныхСредств");
	
КонецПроцедуры

Процедура НажатиеНаПредставлениеПлатежнойПозиции(Форма, Элемент, СтандартнаяОбработка, ДопПараметры = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	РеквизитыДокумента = Форма.РеквизитыДокумента;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПлатежнаяПозиция",	Форма.ПлатежнаяПозиция);
	СтруктураПараметров.Вставить("ПараметрыКурса",		ПолучитьПараметрыКурса(Форма));
	СтруктураПараметров.Вставить("ПараметрыДокумента",	ПолучитьПараметрыДокумента(Форма));
	СтруктураПараметров.Вставить("УправлениеПозициямиДокумента",
		СтруктураПараметров.ПараметрыДокумента.СостояниеЗаявки = ПредопределенноеЗначение("Перечисление.СостоянияСогласования.Утверждена"));
		
	СтруктураПараметров.Вставить("РедактироватьСоставПлатежныхПозиций", Истина);
	СтруктураПараметров.Вставить("РедактироватьСуммуПлатежныхПозиций", Истина);	
	
	Если ДопПараметры <> Неопределено Тогда
		Для каждого КлючЗначение ИЗ ДопПараметры Цикл
			СтруктураПараметров.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
			
	ОписаниеОповещения = Новый ОписаниеОповещения("ПлатежнаяПозицияНажатиеПродолжение", Форма);
	
	ОткрытьФорму(
		"Обработка.ПлатежныеПозиции.Форма.УправлениеПлатежнойПозициейДокументаЗаявки", 
		СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ВыполнитьПослеВыбораБанковскогоСчетаКассы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФормы = "Документ." + ДополнительныеПараметры.ИмяДокумента + ".ФормаОбъекта";
		ДополнительныеПараметры.Вставить("БанковскийСчетКасса", Результат.БанковскийСчетКасса);
		ДополнительныеПараметры.Вставить("Сумма", 				Результат.Сумма);
		ДополнительныеПараметры.Вставить("ИдентификаторПозиции",Результат.ИдентификаторПозиции);
		ОткрытьФорму(ИмяФормы, Новый Структура("Основание", ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиОповещения

// 
Процедура ВыборПлатежнойПозицииДокумента(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("УникальныйИдентификатор") Тогда
		ОткрытьФорму(Параметры.ИмяОбъектаМетаданных + ".ФормаОбъекта", Новый Структура("Основание", Результат))
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ВводНаОснованииПлатежнойПозиции") И  Результат.ВводНаОснованииПлатежнойПозиции = Истина Тогда
		ОткрытьФорму(Параметры.ИмяОбъектаМетаданных + ".ФормаОбъекта", Новый Структура("Основание", Результат.Основание))
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыКурса(Форма)
	
	ИменаРеквизитовКурса = ВстраиваниеОПККлиентСерверПереопределяемый.СтруктураПараметровРасчетаКурса();
	ИменаРеквизитовКурса.ВалютаДокумента = Форма.РеквизитыДокумента.ВалютаДокумента.ИмяРеквизита;
	ИменаРеквизитовКурса.ВалютаОплаты = Форма.РеквизитыДокумента.ВалютаОплаты.ИмяРеквизита;
	ИменаРеквизитовКурса.ДатаПлатежа = Форма.РеквизитыДокумента.ПланируемаяДатаОперации.ИмяРеквизита;
	
	Возврат ПолучитьДанныеПоСтруктуре(Форма.Объект, ИменаРеквизитовКурса)
	
КонецФункции

Функция ПолучитьПараметрыДокумента(Форма)
	
	РеквизитыДокумента = Новый Структура;
	РеквизитыДокумента.Вставить("Организация");
	РеквизитыДокумента.Вставить("СуммаДокумента");
	РеквизитыДокумента.Вставить("СуммаКОплате", "СуммаДокумента");
	РеквизитыДокумента.Вставить("ФормаОплаты", Форма.РеквизитыДокумента.ФормаОплаты.ИмяРеквизита);
	РеквизитыДокумента.Вставить("ВалютаВзаиморасчетов", Форма.РеквизитыДокумента.ВалютаДокумента.ИмяРеквизита);
	РеквизитыДокумента.Вставить("ВалютаОплаты", Форма.РеквизитыДокумента.ВалютаОплаты.ИмяРеквизита);
	РеквизитыДокумента.Вставить("ПлатежВУсловныхЕдиницах");
	РеквизитыДокумента.Вставить("ФиксированныйСчетОрганизации");
	
	Результат = ПолучитьДанныеПоСтруктуре(Форма.Объект, РеквизитыДокумента);
	
	Результат.Вставить("СостояниеЗаявки", Форма.СтатусОбъекта);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеПоСтруктуре(Объект, Реквизиты)
	
	Результат = Новый Структура;
	Для Каждого КлючЗначение Из Реквизиты Цикл
		ИмяРеквизитаДокумента = ?(ЗначениеЗаполнено(КлючЗначение.Значение), КлючЗначение.Значение, КлючЗначение.Ключ);
		Результат.Вставить(КлючЗначение.Ключ, Объект[ИмяРеквизитаДокумента]);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Создает документ оплаты по одной или нескольким заявкам на расход денежных средств.
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются документы
//	ИмяДокумента - Строка - имя документа в метаданных, который будет создан на основании заявок.
//
Процедура СоздатьДокументОплатыНаОснованииПозиции(МассивСсылок, ИмяДокумента)
	
	ФормаОплаты = "";
	Направление = "";
	Если ИмяДокумента = "СписаниеБезналичныхДенежныхСредств" Тогда
		ФормаОплаты = "Безналичная";
		Направление = "Расход";
	ИначеЕсли ИмяДокумента = "РасходныйКассовыйОрдер" Тогда
		ФормаОплаты = "Наличная";
		Направление = "Расход";
	ИначеЕсли ИмяДокумента = "ПоступлениеБезналичныхДенежныхСредств" Тогда
		ФормаОплаты = "Безналичная";
		Направление = "Приход";
	ИначеЕсли ИмяДокумента = "ПриходныйКассовыйОрдер" Тогда
		ФормаОплаты = "Наличная";
		Направление = "Приход";
	КонецЕсли;
	
	ОчиститьСообщения();
	
	РаспределениеОплаты = Неопределено;
	Распоряжения = неопределено;
	Если ПлатежныеПозицииВызовСервера.СформироватьДанныеЗаполненияОплаты(
			МассивСсылок, ФормаОплаты, Направление, РаспределениеОплаты, Распоряжения) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументОснование",                     МассивСсылок);
		ДополнительныеПараметры.Вставить("РаспоряжениеОснование",                 Распоряжения);
		ДополнительныеПараметры.Вставить("НесколькоЗаявокНаРасходованиеСредств",  МассивСсылок.Количество() > 1);
		ДополнительныеПараметры.Вставить("ИмяДокумента",                          ИмяДокумента);
		ДополнительныеПараметры.Вставить("ФормаОплаты",                           ФормаОплаты);
		ДополнительныеПараметры.Вставить("Направление",                           Направление);
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораБанковскогоСчетаКассы", ЭтотОбъект, ДополнительныеПараметры);
		
		Если РаспределениеОплаты.Количество() = 0 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Нет доступных для исполнения платежных позиций.'"));
		ИначеЕсли РаспределениеОплаты.Количество() > 1 Тогда
			// несколько позиций
			ДополнительныеПараметры.Вставить("ЗакрыватьПриВыборе", Истина);
			ОткрытьФорму("Обработка.ПлатежныеПозиции.Форма.РаспределениеОплаты", 
				ДополнительныеПараметры,,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			// 1 позиция
			РеквизитыРезультата = "БанковскийСчетКасса, Сумма, ИдентификаторПозиции";
			Результат = Новый Структура(РеквизитыРезультата);
			ЗаполнитьЗначенияСвойств(Результат, РаспределениеОплаты[0], РеквизитыРезультата);
			
			ВыполнитьОбработкуОповещения(Оповещение, Результат);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
