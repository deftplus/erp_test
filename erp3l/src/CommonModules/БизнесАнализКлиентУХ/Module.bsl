////////////////////////////////////////////////////////////////////////////////
// Модуль предназначен для реализации фукнциональности блока Бизнес-Анализ в
// контексте клиентского кода.
////////////////////////////////////////////////////////////////////////////////

// Возвращает вид расшифровки показателя МКП зависимой области аналитической панели 
// по номеру вида отчета ВидПроизвольногоОтчетаВход.
Функция ПолучитьУниверсальныйОтчетПоВидуОтчета(ВидПроизвольногоОтчетаВход) Экспорт
	РезультатФункции = ПредопределенноеЗначение("Перечисление.ВидыРасшифровокПоказателяМКП.ПустаяСсылка");
	Если ВидПроизвольногоОтчетаВход = 5 Тогда
		РезультатФункции	 = ПредопределенноеЗначение("Перечисление.ВидыРасшифровокПоказателяМКП.ДинамикаПоказателя");
	ИначеЕсли ВидПроизвольногоОтчетаВход = 6 Тогда
		РезультатФункции	 = ПредопределенноеЗначение("Перечисление.ВидыРасшифровокПоказателяМКП.СтруктураПоказателя");
	Иначе
		РезультатФункции	 = ПредопределенноеЗначение("Перечисление.ВидыРасшифровокПоказателяМКП.ПустаяСсылка");
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции

// Отображает отчет по динамике для показателя Показатель с параметрами Контекст 
// и значению ИмяОперанда.
Процедура ВывестиОтчетПоДинамикеМонитора(Показатель, Контекст, ИмяОперанда = "") Экспорт
	АдресТаблицыДинамики = БизнесАнализВызовСервераУХ.ПолучитьАдресТаблицыДинамики(Показатель, Контекст, ИмяОперанда);
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресТаблицы", АдресТаблицыДинамики);
	ПараметрыФормы.Вставить("Показатель", Показатель);
	ПараметрыФормы.Вставить("ИмяОперанда", ИмяОперанда);
	ПараметрыФормы.Вставить("АдресКонтекста", ПоместитьВоВременноеХранилище(Контекст));
	ОткрытьФорму("Справочник.ПанелиОтчетов.Форма.ФормаДинамикиПоказателя", ПараметрыФормы);	
КонецПроцедуры

// Открывает расшифровку объектом с типом метаданного ТипОбъектаМетаданныхВход и 
// наименованием метаданного НаименованиеОбъектаМетаданныхВход формой
// ФормаРасшифровкиВход по параметрам ДополнительныеПараметрыВход.
Процедура ОтобразитьРаскрытиеОбъектомИнформационнойБазы(ТипОбъектаМетаданныхВход, НаименованиеОбъектаМетаданныхВход, ФормаРасшифровкиВход, ДополнительныеПараметрыВход) Экспорт
	СтрокаОткрытияФормы = БизнесАнализВызовСервераУХ.ПолучитьСтрокуОткрытияФормыРасшифрокиОбъектом(ТипОбъектаМетаданныхВход, НаименованиеОбъектаМетаданныхВход, ФормаРасшифровкиВход);
	Если ЗначениеЗаполнено(СтрокаОткрытияФормы) Тогда
		Попытка
			ОткрытьФорму(СтрокаОткрытияФормы, ДополнительныеПараметрыВход);
		Исключение
			ТекстСообщения = НСтр("ru = 'При открытии формы %ПолноеИмяФормы% произошла ошибка: %ОписаниеОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПолноеИмяФормы%", Строка(СтрокаОткрытияФормы));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецПопытки;
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось получить форму для расшифровки по объекту %НаименованиеОбъекта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НаименованиеОбъекта%", Строка(НаименованиеОбъектаМетаданныхВход));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

// Для типа формы отчета отчета с параметрами открытия ТипОбъектаМетаданныхВход, НаименованиеОбъектаМетаданныхВход, ФормаРасшифровкиВход
// возвращает пользовательские настройки.
Функция ВернутьПользовательскиеНастройкиПоОбъектуОтчета(ТипОбъектаМетаданныхВход, НаименованиеОбъектаМетаданныхВход, ФормаРасшифровкиВход) Экспорт
	РезультатФункции = Неопределено;	
	Если СокрЛП(ТипОбъектаМетаданныхВход) = "Отчет" Тогда
		Попытка
			СтрокаОткрытияФормы = БизнесАнализВызовСервераУХ.ПолучитьСтрокуОткрытияФормыРасшифрокиОбъектом(ТипОбъектаМетаданныхВход, НаименованиеОбъектаМетаданныхВход, ФормаРасшифровкиВход);
			Форма = ПолучитьФорму(СтрокаОткрытияФормы);
			Если ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда
				РезультатФункции = Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
			Иначе
				РезультатФункции = Неопределено;
			КонецЕсли;
		Исключение
			ТекстСообщения = НСтр("ru = 'При установке параметров для %НаименованиеОбъекта% произошли ошибки: %ОписаниеОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НаименованиеОбъекта%", Строка(НаименованиеОбъектаМетаданныхВход));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			РезультатФункции = Неопределено;
		КонецПопытки;
	Иначе
		РезультатФункции = Неопределено;
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции

Процедура ОбработкаРасшифровкиМонитораЭффективности(Объект, Расшифровка, Расшифровки, СтандартнаяОбработка, АдресСтруктурыПараметров, АдресДанныхРасшифровки, URLСхемы, УникальныйИдентификатор) Экспорт
	
	Перем ДоступныеРасшифровки;
	Перем СписокДоступныхРасшифровок;
	Перем АдресМассиваДоступныхРасшифровок;
	
	СтандартнаяОбработка = Ложь;
	ДоступныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	ТекущаяРасшифровка   = ДоступныеРасшифровки.Элементы[Расшифровка];
	
	Если ТипЗнч(ТекущаяРасшифровка) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		
		ТекущееПоле = ТекущаяРасшифровка.ПолучитьПоля()[0].Поле;
		ПолеПоказателя = ДоступныеРасшифровки.Элементы[1].ПолучитьПоля()[0].Поле;
		Если ПолеПоказателя <> "Показатель" Тогда
			Возврат;
		КонецЕсли;
		
		ИсточникДанных = ДоступныеРасшифровки.Элементы[1].ПолучитьПоля()[0].Значение;
		
		СтруктураОтвета = БизнесАнализВызовСервераУХ.ВернутьСписокДоступныхРасшифровок(Объект, Расшифровка, Расшифровки, АдресДанныхРасшифровки, URLСхемы, УникальныйИдентификатор);
		СтруктураОтвета.Свойство("СписокДоступныхРасшифровок", СписокДоступныхРасшифровок);
		СтруктураОтвета.Свойство("АдресМассиваДоступныхРасшифровок", АдресМассиваДоступныхРасшифровок);
		
		ТиповыеОтчеты_УправляемыйРежимУХ.РасшифроватьПоказательМонитораЭффективности(ИсточникДанных, АдресСтруктурыПараметров, АдресМассиваДоступныхРасшифровок);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры