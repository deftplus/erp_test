
#Область ПрограммныйИнтерфейс

Процедура ОбработкаЗаполненияРеализацииТоваровУслуг(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если НЕ ДанныеЗаполнения.Свойство("Основание") Тогда
			Возврат;
		КонецЕсли;
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) 
		И Источник.Метаданные().ВводитсяНаОсновании.Содержит(ДокументОснование.Метаданные()) Тогда
		
		Если ТипЗнч(ДокументОснование) = ВстраиваниеУХ.ТипДокументСсылкаПоступлениеТоваровУслуг() Тогда
			Источник.ВидОперации = ВзаиморасчетыВстраиваниеУХКлиентСервер.ВидыОперацийПоступлениеТоваровУслугПокупкаКомиссия();
			
			Если ЗначениеЗаполнено(ДокументОснование.ЗаказПоставщику)
					И ЗначениеЗаполнено(ДокументОснование.Организация)
					И ЗначениеЗаполнено(ДокументОснование.Контрагент) Тогда
					
				ОрганизацияКонтрагент = СверкаВГОУХ.КонтрагентДляОрганизацииВГО(ДокументОснование.Организация);
				КонтрагентОрганизация = ДокументОснование.Контрагент.ОрганизационнаяЕдиница;
				Если ЗначениеЗаполнено(ОрганизацияКонтрагент)
					И ЗначениеЗаполнено(КонтрагентОрганизация) Тогда
					
					// Заполним реквизиты шапки по документу основанию.
					ВстраиваниеУХ.ЗаполнитьПоОснованию(Источник, ДокументОснование, Истина);
					Источник.ВидОперации = СверкаВГОУХ.ПолучитьВидОперацииРеализацииПоВидуОперацииПоступления(ДокументОснование.ВидОперации);
					Если НЕ ЗначениеЗаполнено(Источник.ВидОперации) Тогда
						Источник.ВидОперации = ВзаиморасчетыВстраиваниеУХКлиентСервер.ВидыОперацийПоступлениеТоваровУслугПокупкаКомиссия();
					КонецЕсли;
					
					Источник.Организация = КонтрагентОрганизация;
					Источник.Контрагент = ОрганизацияКонтрагент;
					Источник.ДоговорКонтрагента = ВстраиваниеУХВызовСервера.ПолучитьДоговорКонтрагентаВГО(ДокументОснование.ДоговорКонтрагента);
					
					Источник.Комментарий = "";
					
					Если ЗначениеЗаполнено(Источник.Организация)
						И ЗначениеЗаполнено(Источник.Контрагент)
						И ЗначениеЗаполнено(Источник.ДоговорКонтрагента) Тогда
						//Документы.ПриобретениеТоваровУслуг.ЗаполнитьСчетаУчетаРасчетов(Источник);
					КонецЕсли;
					
					Для Каждого СтрокаРеализации Из ДокументОснование.Товары Цикл
						НоваяСтрока = Источник.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРеализации);
					КонецЦикла;
					Для Каждого СтрокаРеализации Из ДокументОснование.Услуги Цикл
						НоваяСтрока = Источник.Услуги.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРеализации);
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПросроченнаяЗадолженность(ДобавлятьИтоги) Экспорт
	
	Возврат ПретензииУХ.ПросроченнаяЗадолженность();
	
КонецФункции		// ТекстЗапросаПросроченнаяЗадолженность()

Функция ЗаменитьТекстЗапросаАнализДебиторскойЗадолженности(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&КонтрагентДоговор", "РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента.Контрагент");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаАнализДебиторскойЗадолженности() 

Функция ЗаменитьТекстЗапросаЛимитыРазмещенияСредств(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&КонтрагентВерсииРасчетов", "ВерсииРасчетовСрезПоследних.ПредметГрафика.Контрагент");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаЛимитыРазмещенияСредств() 

Функция ЗаменитьТекстЗапросаОстаткиКредитныхЛимитов(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&СрокДействияДоговора", "ДоговорыКонтрагентов.ДатаОкончанияДействия");
	РезультатФункции = СтрЗаменить(РезультатФункции, "&КонтрагентДоговора", "ДоговорыКонтрагентов.Контрагент");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаОстаткиКредитныхЛимитов() 

Функция ЗаменитьТекстЗапросаРасчетыСБрокером(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&КонтрагентБрокер", "ДенежныеСредстваОстаткиИОбороты.ДоговорБрокерскогоСчета.Контрагент");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаРасчетыСБрокером() 

Функция ЗаменитьТекстЗапросаОтчетОбОбеспеченииДоговоров(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&КонтрагентСвязанныйДоговор", "СвязанныеДоговоры.БазовыйДоговор.Контрагент");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаОтчетОбОбеспеченииДоговоров() 

Функция ЗаменитьТекстЗапросаКлассификацияКонтрагентов(ТекстЗапросаВход) Экспорт
	РезультатФункции = ТекстЗапросаВход;
	РезультатФункции = СтрЗаменить(РезультатФункции, "&УсловиеГруппаКонтрагента", "ИСТИНА");
	Возврат РезультатФункции;
КонецФункции		// ЗаменитьТекстЗапросаКлассификацияКонтрагентов() 

// Функция возвращает описаение типов для ограничения тивов элемента формы ОснованиеОбязательства в формах документов Заявка*
Функция ОписаниеТиповОснованиеОбязательстваЗаявок(Данные) Экспорт
	
	Если ТипЗнч(Данные) = Тип("ДокументСсылка.ПланируемыйДоход") Тогда
		Возврат Новый ОписаниеТипов("ДокументСсылка.СчетНаОплатуКлиенту");
	Иначе
		Возврат Новый ОписаниеТипов(неопределено);
	КонецЕсли;
	
КонецФункции

// Функция возвращает данные для оповещения о приближении срока оплаты
Функция ДанныеДляОповещенияОПриближенииСрокаОплаты() Экспорт
	Возврат ПретензииУХ.ДанныеДляОповещенияОПриближенииСрокаОплаты();
КонецФункции

Функция ПолучитьТекстЗапросаПараметрыДокументаОФД() Экспорт
	РезультатФункции = 
		"ВЫБРАТЬ
		|	РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента.Контрагент КАК Контрагент,
		|	РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов КАК ДокументРасчета,
		|	РасчетыСКонтрагентамиПоДокументамОстатки.СуммаОстаток КАК Сумма,
		|	ЕСТЬNULL(СрокиЗакрытияЗадолженностиПоДокументам.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокПогашения
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентамиПоДокументам.Остатки(
		|			,
		|			Организация = &Организация
		|				И ДокументРасчетов = &Ссылка) КАК РасчетыСКонтрагентамиПоДокументамОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиЗакрытияЗадолженностиПоДокументам КАК СрокиЗакрытияЗадолженностиПоДокументам
		|		ПО РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов = СрокиЗакрытияЗадолженностиПоДокументам.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрУступленныхДенежныхТребований.УступленныеТребования КАК РеестрУступленныхДенежныхТребованийУступленныеТребования
		|		ПО РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов = РеестрУступленныхДенежныхТребованийУступленныеТребования.ДокументОснование
		|			И (РеестрУступленныхДенежныхТребованийУступленныеТребования.Ссылка.Проведен)
		|ГДЕ
		|	РеестрУступленныхДенежныхТребованийУступленныеТребования.Ссылка ЕСТЬ NULL ";
	Возврат РезультатФункции;
КонецФункции		// ПолучитьТекстЗапросаПараметрыДокументаОФД()

Функция ТекстЗапросаОбновлениеРеестрУступленныхДенежныхСредств() Экспорт
	РезультатФункции = 
	"ВЫБРАТЬ
		|	РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента.Контрагент КАК Контрагент,
		|	РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов КАК ДокументРасчета,
		|	СрокиЗакрытияЗадолженностиПоДокументам.Сумма КАК Сумма,
		|	ЕСТЬNULL(СрокиЗакрытияЗадолженностиПоДокументам.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокПогашения
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентамиПоДокументам.Остатки(, Организация = &Организация) КАК РасчетыСКонтрагентамиПоДокументамОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиЗакрытияЗадолженностиПоДокументам КАК СрокиЗакрытияЗадолженностиПоДокументам
		|		ПО РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов = СрокиЗакрытияЗадолженностиПоДокументам.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрУступленныхДенежныхТребований.УступленныеТребования КАК РеестрУступленныхДенежныхТребованийУступленныеТребования
		|		ПО РасчетыСКонтрагентамиПоДокументамОстатки.ДокументРасчетов = РеестрУступленныхДенежныхТребованийУступленныеТребования.ДокументОснование
		|			И (РеестрУступленныхДенежныхТребованийУступленныеТребования.Ссылка.Проведен)
		|ГДЕ
		|	РеестрУступленныхДенежныхТребованийУступленныеТребования.Ссылка ЕСТЬ NULL 
		|	И ВЫБОР
		|			КОГДА &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента.Контрагент = &Контрагент
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ РасчетыСКонтрагентамиПоДокументамОстатки.ДоговорКонтрагента = &Договор
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Дата1 = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЕСТЬNULL(СрокиЗакрытияЗадолженностиПоДокументам.Дата, ДАТАВРЕМЯ(1, 1, 1)) >= &Дата1
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Дата2 = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЕСТЬNULL(СрокиЗакрытияЗадолженностиПоДокументам.Дата, ДАТАВРЕМЯ(1, 1, 1)) <= &Дата2
		|		КОНЕЦ
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	Контрагент,
		|	ДоговорКонтрагента";
	Возврат РезультатФункции;
КонецФункции		// ТекстЗапросаОбновлениеРеестрУступленныхДенежныхСредств()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти