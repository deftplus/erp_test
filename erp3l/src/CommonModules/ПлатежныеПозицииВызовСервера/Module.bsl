
#Область ПрограммныйИнтерфейс

// Формирует структуру для создания оплаты по нескольким заявкам на расходование средств
// Если в переданных заявках отличаются ключевые реквизиты шапки, выдается сообщение об ошибке.
//
// Параметры:
//    МассивСсылок   - Массив - завки на расходование средств, по которым необходимо ввести оплату
//    ФормаОплаты - Строка - форма оплаты заявки
//	  Направление - Строка - Направление движения ДС (Приход/Расход)
//    РаспределениеОплаты - Массив - строки остатков распределения оплаты.
//
// Возвращаемое значение:
//    Булево - Ложь, если в переданных заказах отличаются реквизиты шапки.
//
Функция СформироватьДанныеЗаполненияОплаты(МассивСсылок, ФормаОплаты, Направление, РаспределениеОплаты, МассивСсылокСРаспоряжениями) Экспорт
	
	// 
	МассивСсылокСРаспоряжениями = ПолучитьМассивСсылокСРаспоряжениями(МассивСсылок);
	
	ТекстЗапроса =
		ТекстЗапросаПроверкаСтатуса() +
		ТекстЗапросаРаспределениеОплаты();
	
	Если МассивСсылокСРаспоряжениями.Количество() > 1 Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаВозможностьГруппировкиЗаявок();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылокСРаспоряжениями);
	
	Если ФормаОплаты = "Безналичная" Тогда
		Запрос.УстановитьПараметр("ТипМестаОплаты", ОбщегоНазначенияОПК.ТипОпределяемогоТипа(Метаданные.ОпределяемыеТипы.БанковскиеСчетаОрганизаций)); 
	ИначеЕсли ФормаОплаты = "Наличная" Тогда
		Запрос.УстановитьПараметр("ТипМестаОплаты", ОбщегоНазначенияОПК.ТипОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Кассы));
	КонецЕсли;
	
	Если Направление = "Приход" Тогда
		Запрос.УстановитьПараметр("Направление", Перечисления.ВидыДвиженийПриходРасход.Приход);
	ИначеЕсли Направление = "Расход" Тогда
		Запрос.УстановитьПараметр("Направление", Перечисления.ВидыДвиженийПриходРасход.Расход);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Отказ = Ложь;
	Если Не РезультатЗапроса[0].Пустой() Тогда
		
		ДопустимыеСтатусы = Новый Массив;
		ДопустимыеСтатусы.Добавить(Перечисления.СостоянияСогласования.Утверждена);
		
		ВыборкаЗаявки = РезультатЗапроса[0].Выбрать();
		Пока ВыборкаЗаявки.Следующий() Цикл
			
			Если ОбщегоНазначения.ПодсистемаСуществует("ПереопределяемыеОбъектыУП") Тогда // Есть подсистемы ЕРПУХ
				Параметры = Новый Массив;
				Параметры.Добавить(ВыборкаЗаявки.Заявка);
				Параметры.Добавить(ВыборкаЗаявки.Статус);
				Параметры.Добавить(ВыборкаЗаявки.ЕстьОшибкиПроведен);
				Параметры.Добавить(ВыборкаЗаявки.ЕстьОшибкиСтатус);
				Параметры.Добавить(ДопустимыеСтатусы);
				ОбщегоНазначения.ВыполнитьМетодКонфигурации("ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании", Параметры);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли МассивСсылокСРаспоряжениями.Количество() > 1 Тогда
		
		Выборка = РезультатЗапроса[2].Выбрать();
		Выборка.Следующий();
		Если СообщитьОбОшибкахФормированияДанныхЗаполненияОплаты(Выборка) Тогда
			
			ТекстОшибки = НСтр("ru='Ввод одного документа оплаты на основании выделенных заявок невозможен'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	РаспределениеОплаты = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса[1].Выгрузить());
	
	Возврат Не Отказ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьМассивСсылокСРаспоряжениями(МассивСсылок)
	
	Результат = Новый Массив(Новый ФиксированныйМассив(МассивСсылок));
	
	Поз = 0;
	Пока Поз < Результат.Количество() Цикл
		
		ДокОснование = Результат[Поз];
		
		ТипДокумента = ТипЗнч(ДокОснование);
		
		Если НЕ Метаданные.ОпределяемыеТипы.ДокументыПоступленияСписанияБезналичныхДенежныхСредств.Тип.СодержитТип(ТипДокумента)
			И НЕ Метаданные.ОпределяемыеТипы.ДокументыКассовыеОрдера.Тип.СодержитТип(ТипДокумента) Тогда
			Поз = Поз + 1;
			Продолжить;
		КонецЕсли;
		
		//
		СтруктураПолей = Новый Структура;
		СтруктураПолей.Вставить("РаспоряжениеНаПеремещениеДенежныхСредств", "РаспоряжениеНаПеремещениеДенежныхСредств");
		СтруктураПолей.Вставить("ДокументОснование", "ДокументОснование");
		СтруктураПолей.Вставить("ВидОперацииУХ", "ДокументОснование.ВидОперацииУХ");
		СтруктураПолей.Вставить("ЭтоВГО", "ДокументОснование.ЭтоВнутригрупповоеПеремещение");
		СтруктураПолей.Вставить("ВидОперацииУХВГОВстречный", "ДокументОснование.ВидОперацииУХ.ВстречныйВидОперацииВГО");
		СтруктураПолей.Вставить("ЭтоКонвертацияВалюты", "ДокументОснование.ВидОперацииУХ.ЭтоКонвертацияВалюты");
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокОснование, СтруктураПолей);
		
		Если ЗначениеЗаполнено(Реквизиты.РаспоряжениеНаПеремещениеДенежныхСредств) Тогда
			Результат[Поз] = Реквизиты.РаспоряжениеНаПеремещениеДенежныхСредств;
		//ОПК:к пересмотру. Операция есть в ERP.УХ, но нет в УХ. В тоже время операций внутреннего перемещения ДС 8 штук, а тут проверка одной.
		//ИначеЕсли Реквизиты.ВидОперацииУХ = Справочники.ВидыОперацийУХ.ВнутренняяПередачаДенежныхСредств Тогда
		//	Результат[Поз] = Реквизиты.ДокументОснование;
		ИначеЕсли Реквизиты.ЭтоВГО = Истина И ЗначениеЗаполнено(Реквизиты.ВидОперацииУХВГОВстречный) Тогда
			Результат[Поз] = Реквизиты.ДокументОснование;
		ИначеЕсли Реквизиты.ЭтоКонвертацияВалюты = Истина Тогда
			Результат[Поз] = Реквизиты.ДокументОснование;
		КонецЕсли;
		
		//
		Поз = Поз + 1;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СообщитьОбОшибкахФормированияДанныхЗаполненияОплаты(ВыборкаРеквизитыШапки)
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных заявок на расходование денежных средств отличается поле ""%ПредставлениеПоля%""'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияФормаОплаты Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Форма оплаты'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияХозяйственнаяОперация Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Хозяйственная операция'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияХозяйственнаяОперацияПоЗарплате Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Хозяйственная операция по зарплате'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаОплаты Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Валюта'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Контрагент'")),,,, Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПодотчетноеЛицо Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Подотчетное лицо'")),,,, Отказ);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Функция ТекстЗапросаВозможностьГруппировкиЗаявок()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|			ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|					ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|				ТОГДА Заявка.ФормаОплатыЗаявки
	|			КОНЕЦ) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияФормаОплаты,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|		ТОГДА Заявка.ФормаОплатыЗаявки
	|		КОНЕЦ) КАК ФормаОплатыЗаявки,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа)
	|			ТОГДА Заявка.Валюта
	|		КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов)
	|			ТОГДА
	|				ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|						И Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|					ТОГДА Заявка.Касса.ВалютаДенежныхСредств
	|					КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|						И Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|					ТОГДА Заявка.БанковскийСчет.ВалютаДенежныхСредств
	|				КОНЕЦ
	|		КОНЕЦ) КАК Валюта,
	|	МИНИМУМ(Заявка.Валюта) КАК ВалютаКандидат,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа)
	|			ТОГДА Заявка.Валюта
	|		КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов)
	|			ТОГДА 
	|				ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|						И Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|					ТОГДА Заявка.Касса.ВалютаДенежныхСредств
	|					КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|						И Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|					ТОГДА Заявка.БанковскийСчет.ВалютаДенежныхСредств
	|				КОНЕЦ
	|		КОНЕЦ) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияВалютаОплаты,
	|	
	|	МИНИМУМ(Заявка.Организация) КАК Организация,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Организация) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизация,
	|	
	|	МИНИМУМ(Заявка.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.ХозяйственнаяОперация) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация,
	|	
	|	МИНИМУМ(Заявка.ХозяйственнаяОперацияПоЗарплате) КАК ХозяйственнаяОперацияПоЗарплате,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.ХозяйственнаяОперацияПоЗарплате) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперацияПоЗарплате,
	|	
	|	МИНИМУМ(Заявка.Контрагент) КАК Контрагент,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Контрагент) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
	|	
	|	МИНИМУМ(Заявка.ПодотчетноеЛицо) КАК ПодотчетноеЛицо,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.ПодотчетноеЛицо) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПодотчетноеЛицо,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА Заявка.Касса
	|		КОНЕЦ) > 1
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияКасса,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|		ТОГДА Заявка.Касса
	|	КОНЕЦ) КАК Касса,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА Заявка.БанковскийСчет
	|		КОНЕЦ) > 1
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияБанковскийСчет,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|		ТОГДА Заявка.БанковскийСчет
	|	КОНЕЦ) КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Подразделение) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.Подразделение)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.БанковскийСчетКонтрагента) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.БанковскийСчетКонтрагента)
	|	КОНЕЦ КАК БанковскийСчетКонтрагента,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.СтатьяДвиженияДенежныхСредств) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.СтатьяДвиженияДенежныхСредств)
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.СтатьяАктивовПассивов) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.СтатьяАктивовПассивов)
	|	КОНЕЦ КАК СтатьяАктивовПассивов,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА Заявка.КассаПолучатель
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ) КАК КассаПолучатель,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА Заявка.БанковскийСчетПолучатель
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ) КАК БанковскийСчетПолучатель,
	|	
	|	МИНИМУМ(Заявка.ВалютаКонвертации) КАК ВалютаКонвертации,
	|	МИНИМУМ(Заявка.КурсКонвертации) КАК КурсКонвертации,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ПеречислениеВБюджет,
	|	
	|	МИНИМУМ(Заявка.АналитикаАктивовПассивов) КАК АналитикаАктивовПассивов,
	|	
	|	МИНИМУМ(Заявка.Контрагент.Наименование) КАК КонтрагентНаименование,
	|	МИНИМУМ(Заявка.Контрагент.НаименованиеПолное) КАК КонтрагентНаименованиеПолное,
	|	МИНИМУМ(Заявка.ПодотчетноеЛицо.Наименование) КАК ПодотчетноеЛицоНаименование
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|
	|ГДЕ
	|	Заявка.Ссылка В (&МассивСсылок)
	|;
	|
	|//////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРаспределениеОплаты()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РазмещениеЗаявок.ИдентификаторПозиции,
	|	РазмещениеЗаявок.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	РазмещениеЗаявок.ДатаИсполнения КАК ДатаПлатежа,
	|	СУММА(РазмещениеЗаявок.Сумма) КАК Сумма
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних КАК СостоянияИсполненияДокументовПланированияСрезПоследних
	|		ПО РазмещениеЗаявок.ЗаявкаНаОперацию = СостоянияИсполненияДокументовПланированияСрезПоследних.ДокументПланирования
	|			И РазмещениеЗаявок.ИдентификаторПозиции = СостоянияИсполненияДокументовПланированияСрезПоследних.ИдентификаторПозиции
	|ГДЕ
	|	ЕСТЬNULL(СостоянияИсполненияДокументовПланированияСрезПоследних.СостояниеИсполнения, ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)) = ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)
	|	И РазмещениеЗаявок.ЗаявкаНаОперацию В (&МассивСсылок)
	|	И РазмещениеЗаявок.ПриходРасход = &Направление
	|	И ТИПЗНАЧЕНИЯ(РазмещениеЗаявок.БанковскийСчетКасса) = &ТипМестаОплаты
	|СГРУППИРОВАТЬ ПО
	|	РазмещениеЗаявок.БанковскийСчетКасса,
	|	РазмещениеЗаявок.ДатаИсполнения,
	|	РазмещениеЗаявок.ИдентификаторПозиции
	|;
	|
	|///////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверкаСтатуса()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Заявка.Ссылка КАК Заявка,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) КАК Статус,
	|	НЕ Заявка.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрСостоянийОбъектов.СрезПоследних(, Объект ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств) КАК РегистрСостояний
	|		ПО (РегистрСостояний.Объект = Заявка.Ссылка)
	|ГДЕ
	|	Заявка.Ссылка В(&МассивСсылок)
	|	И (НЕ Заявка.Проведен
	|			ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) <> ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заявка.Ссылка,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)),
	|	НЕ Заявка.Проведен,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОжидаемоеПоступлениеДенежныхСредств КАК Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрСостоянийОбъектов.СрезПоследних(, Объект ССЫЛКА Документ.ОжидаемоеПоступлениеДенежныхСредств) КАК РегистрСостояний
	|		ПО (РегистрСостояний.Объект = Заявка.Ссылка)
	|ГДЕ
	|	Заявка.Ссылка В(&МассивСсылок)
	|	И (НЕ Заявка.Проведен
	|			ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) <> ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заявка.Ссылка,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)),
	|	НЕ Заявка.Проведен,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.РаспоряжениеНаПеремещениеДенежныхСредств КАК Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрСостоянийОбъектов.СрезПоследних(, Объект ССЫЛКА Документ.РаспоряжениеНаПеремещениеДенежныхСредств) КАК РегистрСостояний
	|		ПО (РегистрСостояний.Объект = Заявка.Ссылка)
	|ГДЕ
	|	Заявка.Ссылка В(&МассивСсылок)
	|	И (НЕ Заявка.Проведен
	|			ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(РегистрСостояний.СостояниеОбъекта КАК Перечисление.СостоянияСогласования), ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Черновик)) <> ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена))
	|;
	|
	|///////////////////////////////////////////////////////
	|";	
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
 
