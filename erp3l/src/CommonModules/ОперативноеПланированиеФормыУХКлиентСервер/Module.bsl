
#Область ПрограммныйИнтерфейс

Процедура УстановитьОграничениеТипаКонтрагента(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ЭтоРасчетыСКонтрагентами = ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыСКонтрагентом(Объект.ВидОперацииУХ);
	ЭтоРасчетыСФизическимЛицом = ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыСФизическимЛицом(Объект.ВидОперацииУХ);
	
	Если ЭтоРасчетыСКонтрагентами Тогда
		
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		Объект.Контрагент = Элементы.Контрагент.ОграничениеТипа.ПривестиЗначение(Объект.Контрагент);
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Контрагент'");
		Элементы.Контрагент.ПодсказкаВвода  = НСтр("ru = 'Введите ИНН или наименование'");
		
	ИначеЕсли ЭтоРасчетыСФизическимЛицом Тогда
		
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
		Объект.Контрагент = Элементы.Контрагент.ОграничениеТипа.ПривестиЗначение(Объект.Контрагент);
		Объект.ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Сотрудник'");
		Элементы.Контрагент.ПодсказкаВвода  = "";
		
	Иначе
		
		Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Контрагент'");
		Элементы.Контрагент.ПодсказкаВвода  = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьСвязиПараметровВыбораСчетаКонтрагента(Форма, ЭлементСчета)
КонецПроцедуры

Процедура УправлениеФормойДокументаДДС(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаСтатьяДДСУХ.Видимость = Элементы.СтатьяДвиженияДенежныхСредств.Видимость;
	
КонецПроцедуры

Процедура УстановитьОтборПоФункциональнымНаправлениям(Знач ЦФО, ЭлементыФормы) Экспорт
	
	ФункциональныеНаправления = ДвиженияБюджетированиеУХВызовСервера.ФункциональныеНаправленияЦФО(ЦФО);
	ИмяПараметраВыбора = "Отбор.ФункциональноеНаправление";
	ПараметрВыбора = Новый ПараметрВыбора(ИмяПараметраВыбора, Новый ФиксированныйМассив(ФункциональныеНаправления));
	
	Для Каждого ТекЭлемент Из ЭлементыФормы Цикл
		ОбщегоНазначенияКлиентСерверУХ.ЗаменитьУдалитьПараметрВыбора(ТекЭлемент, ИмяПараметраВыбора, ПараметрВыбора);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСуммуНДС(СтрокаРасшифровки) Экспорт
	
	Если СтрокаРасшифровки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеСтавкиНДС = ВстраиваниеОПКВызовСервераПереопределяемый.ПолучитьСтавкуНДС(СтрокаРасшифровки.СтавкаНДС);
	СтрокаРасшифровки.СуммаНДС = СтрокаРасшифровки.Сумма * ЗначениеСтавкиНДС / (100 + ЗначениеСтавкиНДС);

КонецПроцедуры

Процедура ЗаполнитьСведенияОВидахАналитик(СтатьяБюджета, Приемник, ТолькоЛимитируемыеАналитики = Ложь, ПараметрыЛимитирования = неопределено) Экспорт
	
	ВидыАналитик = АналитикиСтатейБюджетовУХКлиентСерверПовтИсп.ВидыАналитикСтатьи(СтатьяБюджета, ТолькоЛимитируемыеАналитики, ПараметрыЛимитирования);
	ЗаполнитьЗначенияСвойств(Приемник, ВидыАналитик);
	
КонецПроцедуры

Процедура ИзменитьПараметрыВыбораАналитик(ИсточникДанных, ИсточникТиповЗначений, МассивЭлементовАналитик) Экспорт
	
	КоличествоЭлементовВМассиве = МассивЭлементовАналитик.Количество();
	
	Для Индекс = 1 По КоличествоЭлементовВМассиве Цикл
		
		ПараметрыВыбора = Новый Массив;
		
		ТипАналитики = ИсточникТиповЗначений["ВидАналитики" + Индекс + "ТипЗначения"];
		
		Если ЗначениеЗаполнено(ТипАналитики) Тогда

			Если ТипАналитики.СодержитТип(Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ")) Тогда
				
				ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ИсточникТиповЗначений["ВидАналитики" + Индекс]));
				
			ИначеЕсли ЗначениеЗаполнено(ИсточникТиповЗначений["ВидАналитики" + Индекс + "ТипыВладельца"]) Тогда
				
				Для Сч = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
					
					Если Сч = Индекс Тогда
						Продолжить;
					КонецЕсли;
					
					ТипАналитикиВладельца = ИсточникТиповЗначений["ВидАналитики"+Сч+"ТипЗначения"];
					
					Если Не ЗначениеЗаполнено(ТипАналитикиВладельца) Тогда
						Продолжить;
					КонецЕсли;
					
					Если ИсточникТиповЗначений["ВидАналитики" + Индекс + "ТипыВладельца"].СодержитТип(ТипАналитикиВладельца.Типы()[0])Тогда
						ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ИсточникДанных["АналитикаБДДС" + Сч]));
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		
		МассивЭлементовАналитик[Индекс - 1].ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПривестиЗначениеТиповАналитик(ИсточникДанных, ИсточникТиповЗначений) Экспорт
	
	Для Индекс = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
				
		Если ЗначениеЗаполнено(ИсточникТиповЗначений["ВидАналитики" + Индекс]) Тогда
			ТипЗначенияАналитики = ИсточникТиповЗначений["ВидАналитики" + Индекс + "ТипЗначения"];
			ИсточникДанных["АналитикаБДДС" + Индекс] = ТипЗначенияАналитики.ПривестиЗначение(ИсточникДанных["АналитикаБДДС" + Индекс]);
			
		Иначе
			
			ИсточникДанных["АналитикаБДДС" + Индекс] = Неопределено;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура установки типа и видимости аналитик в зависимости от выбранной статьи.
//
// Параметры:
//	Статья			 - <План счетов> - Счет, для которого необходимо настроить тип и видимость субконто
//	Форма			 - <Управляемая форма> - Форма, которая содержит ПоляФормы
//	ПоляФормы		 - <Структура> - Ключи, которой Аналитика1, Аналитика2, Аналитика3, 
//									 а значения имена соответствующих полей на форме (поля аналитик)
//	ЭтоТаблица		 - <Булево>		 - Признак того, где выполняется настройка аналитик. 
//
Процедура УправлениеЭлементамиДополнительныхАналитик(ИсточникТиповЗначений, ПоляФормы) Экспорт
	
	ЭтоПоляФормы = Не (ТипЗнч(ИсточникТиповЗначений) = Тип("ДанныеФормыЭлементКоллекции"));
	
	Для Индекс = 1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
		АналитикаИспользуется = ЗначениеЗаполнено(ИсточникТиповЗначений["ВидАналитики" + Индекс]);
		ТипЗначенияАналитики = ИсточникТиповЗначений["ВидАналитики" + Индекс + "ТипЗначения"];
		НаименованиеАналитики = ИсточникТиповЗначений["ВидАналитики" + Индекс + "Наименование"];
		ЭлементАналитика = ПоляФормы[Индекс - 1];

		Если АналитикаИспользуется Тогда				
			ЭлементАналитика.ОграничениеТипа = ТипЗначенияАналитики;
			ЭлементАналитика.ПодсказкаВвода = НаименованиеАналитики;
		Иначе
			ЭлементАналитика.ПодсказкаВвода = НСтр("ru='<Не используется>'");
		КонецЕсли;
		
		Если ЭтоПоляФормы Тогда
			// Для полей формы необходимо вручную управлять свойством ТолькоПросмотр.
			ЭлементАналитика.ТолькоПросмотр = Не АналитикаИспользуется;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Процедура устанавливает элементу, связанному со статьей бюджета, параметр выбора
// Отбор.ПриходРасход фиксированным массивом, состоящим из переданного значения ЗначениеПриходРасход
// и значения Перечисления.ВидыДвиженийПриходРасход.ПустаяСсылка.
//
// Параметры:
//  Элемент				 - ПолеФормы - Элемент формы, которому необходимо установить параметр выбора.
//  ЗначениеПриходРасход - 	ПеречислениеСсылка.ВидыДвиженийПриходРасход - устанавливаемое значение.
//
Процедура УстановитьПараметрВыбораСтатьиПриходРасход(Элемент, ЗначениеПриходРасход) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗначениеПриходРасход) Тогда
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	ДопустимыеЗначенияПриходРасход = Новый Массив;
	ДопустимыеЗначенияПриходРасход.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка"));
	ДопустимыеЗначенияПриходРасход.Добавить(ЗначениеПриходРасход);
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.ПриходРасход", Новый ФиксированныйМассив(ДопустимыеЗначенияПриходРасход));
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрВыбора));
	
КонецПроцедуры

Процедура УстановитьЗначенияОтбораСтатей(Список, ЗначениеПриходРасход) Экспорт 
	
	Список.Очистить();
	Список.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка"));
	Если ЗначениеЗаполнено(ЗначениеПриходРасход) Тогда
		Список.Добавить(ЗначениеПриходРасход);
	Иначе
		Список.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Приход"));
		Список.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Расход"));
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

