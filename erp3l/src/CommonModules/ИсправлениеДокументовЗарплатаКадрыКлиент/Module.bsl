
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсправитьДокумент(Ссылка, ИмяТипа) Экспорт

	Основание = Новый Структура("Ссылка, Действие", Ссылка, "Исправить");
	
	ОткрытьФорму(
		СтрШаблон("Документ.%1.ФормаОбъекта", ИмяТипа), 
		Новый Структура("Основание", Основание));
	
КонецПроцедуры

#Область МетодыОбслуживанияИсправленийВФормеДокумента

Процедура Исправить(Форма, ИсправляемыйДокумент = Неопределено, ПараметрыФормы = Неопределено) Экспорт

	Если ИсправляемыйДокумент = Неопределено Тогда
		Ссылка = Форма.Объект.Ссылка
	Иначе
		Ссылка = ИсправляемыйДокумент
	КонецЕсли;	
	
	Основание = Новый Структура("Ссылка, Действие", Ссылка, "Исправить");
	
	Если Форма.ВозможностиИсправления.ИсправлениеТекущимПериодом Тогда
		ДополнитьПоИсправляемомуДокументу(Основание, Форма, Ссылка);
	КонецЕсли;
	
	Параметры = Новый Структура("Основание", Основание);
	Если ПараметрыФормы <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыФормы, Ложь);
	КонецЕсли;
	
	ОткрытьФорму(Форма.ИмяФормы, Параметры);
	
КонецПроцедуры

Процедура ПерейтиКИсправлению(Форма, ДокументИсправление = Неопределено) Экспорт 
	ПерейтиКДокументу(
		Форма, 
		?(ДокументИсправление = Неопределено, 
			Форма.ДокументИсправление, 
			ДокументИсправление));
КонецПроцедуры

Процедура ПерейтиКИсправленному(Форма, ИсправленныйДокумент = Неопределено) Экспорт 
	ПерейтиКДокументу(
		Форма, 
		?(ИсправленныйДокумент = Неопределено, 
			Форма.Объект.ИсправленныйДокумент, 
			ИсправленныйДокумент));
КонецПроцедуры

Процедура Сторнировать(Форма, РеквизитНачислениеДокумента = "") Экспорт
	
	Ссылка = Форма.Объект.Ссылка;
	
	Основание = Новый Структура(
		"Ссылка, Действие, РеквизитНачислениеДокумента", 
		Ссылка, "Сторнировать", РеквизитНачислениеДокумента);
		
	Если Форма.ВозможностиИсправления.ИсправлениеТекущимПериодом Тогда
		ДополнитьПоИсправляемомуДокументу(Основание, Форма, Ссылка);
	КонецЕсли;	
	
	ОткрытьФорму(
		"Документ.СторнированиеНачислений.ФормаОбъекта", 
		Новый Структура("Основание", Основание),
		,
		Ссылка);
	
КонецПроцедуры

Процедура ПерейтиКСторно(Форма) Экспорт 
	ОткрытьФорму(
		"Документ.СторнированиеНачислений.ФормаОбъекта", 
		Новый Структура("Ключ", Форма.ДокументСторно));
КонецПроцедуры

Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	Документ = Форма.Объект.ИсправленныйДокумент;
	Источник = Форма.Объект.Ссылка;
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат
	КонецЕсли;
	
	ОповеститьОбИсправленииДокумента(
		Документ,
		Источник, 
		ПараметрыЗаписи.РежимЗаписи,
		?(Форма.ВозможностиИсправления.Редактирование,
			"РасчетЗарплаты",
			"ПериодическиеСведения"));
		
КонецПроцедуры	
	
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Ссылка = Форма.Объект.Ссылка;
	ОбновитьБлокировкуФормы = Ложь;
	Если ИмяСобытия = ИмяСобытияИсправленияДокумента() И Параметр.Документ = Ссылка Тогда
		ОбработкаОповещенияИсправленияДокумента(Форма, Параметр, Источник);
		ОбновитьБлокировкуФормы = Истина;
	ИначеЕсли ИмяСобытия = ИмяСобытияСторнированияДокумента() И Параметр.Документ = Ссылка Тогда
		ОбработкаОповещенияСторнированияДокумента(Форма, Параметр, Источник);
		ОбновитьБлокировкуФормы = Истина;
	КонецЕсли;
	
	Если ОбновитьБлокировкуФормы Тогда
		БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(Форма, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьПоИсправляемомуДокументу(Основание, Форма, Ссылка, ИмяПериодРегистрации = "ПериодРегистрации")
	
	// Исходим из того, что исправляемые документы имеют реквизит Организация.
	Если Не Форма.Объект.Свойство("Организация") Тогда
		Возврат;
	КонецЕсли;
		
	ПериодРегистрации = Форма.Объект[ИмяПериодРегистрации];
	Организация = Форма.Объект.Организация;
	
	Если Форма.ПроведенаВыплатаЗарплаты = НеОпределено Или Форма.ПроизведеноОтражение = НеОпределено Тогда
		ИсправлениеДокументовЗарплатаКадрыВызовСервера.ЗаполнитьВыплатаПроизводиласьОтражениеВУчетеПроизводилось(
			Организация, Ссылка, ПериодРегистрации, Форма.ПроведенаВыплатаЗарплаты, Форма.ПроизведеноОтражение)
	КонецЕсли;
	Основание.Вставить("ИмяПериодРегистрации", ИмяПериодРегистрации);
	Основание.Вставить("ПериодРегистрацииИсправленногоДокумента", ПериодРегистрации);
	
	Если Не(Форма.ПроведенаВыплатаЗарплаты Или Форма.ПроизведеноОтражение) Тогда
		Основание.Вставить("ДопустимоИсправлениеВТекущемПериоде", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерейтиКДокументу(Форма, Документ) 
	ОткрытьФорму(
		Форма.ИмяФормы, 
		Новый Структура("Ключ", Документ));
КонецПроцедуры

Функция ИмяСобытияИсправленияДокумента()
	Возврат "ИсправленДокумент"
КонецФункции	

Процедура ОповеститьОбИсправленииДокумента(Документ, Источник, РежимЗаписи, РежимИсправления = "РасчетЗарплаты", ПолеПериодРегистрации = "ПериодРегистрации")
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат
	КонецЕсли;
		
	ПараметрыОповещения = Новый Структура;
	// режим записи документа-исправления
	ПараметрыОповещения.Вставить("РежимЗаписи", РежимЗаписи); 
	// исправляемый документ
	ПараметрыОповещения.Вставить("Документ", Документ);                    
	// имя реквизита исправляемого документа с периодом регистрации
	ПараметрыОповещения.Вставить("ПолеПериодРегистрации", "ПериодРегистрации");
	// Характер исправляемого документа
	//  	"РасчетЗарплаты"        - для расчетных документов;
	//  	"ПериодическиеСведения" - для документов, которые вводят периодические сведения;
	ПараметрыОповещения.Вставить("РежимИсправления", РежимИсправления);
	
	Оповестить(ИмяСобытияИсправленияДокумента(), ПараметрыОповещения, Источник);
	
КонецПроцедуры

Процедура ОбработкаОповещенияИсправленияДокумента(Форма, Параметр, Источник)
	
	Если Параметр.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Форма.ДокументИсправлен   = Истина;
		Форма.ДокументИсправление = Источник;
	Иначе
		Форма.ДокументИсправлен   = Ложь;
		Форма.ДокументИсправление = Неопределено;
	КонецЕсли;
	
	ИсправлениеДокументовЗарплатаКадрыКлиентСервер.УстановитьПоляИсправления(Форма, Параметр.РежимИсправления, Параметр.ПолеПериодРегистрации);
		
КонецПроцедуры	

Функция ИмяСобытияСторнированияДокумента()
	Возврат "ИзмененоСторнированиеНачислений"
КонецФункции	

Процедура ОповеститьОСторнированииДокумента(Документ, Источник, РежимЗаписи, ПолеПериодРегистрации = "ПериодРегистрации") Экспорт
	
	ПараметрыОповещения = Новый Структура;
	// режим записи сторнирующего документа
	ПараметрыОповещения.Вставить("РежимЗаписи", РежимЗаписи); 
	// сторнируемый документ
	ПараметрыОповещения.Вставить("Документ", Документ);                    
	// имя реквизита сторнируемого документа с периодом регистрации
	ПараметрыОповещения.Вставить("ПолеПериодРегистрации", ПолеПериодРегистрации);
	
	Оповестить(ИмяСобытияСторнированияДокумента(), ПараметрыОповещения, Источник);
	
КонецПроцедуры

Процедура ОбработкаОповещенияСторнированияДокумента(Форма, Параметр, Источник)
	
	Если Параметр.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Форма.ДокументСторнирован = Истина;
		Форма.ДокументСторно      = Источник;
	Иначе
		Форма.ДокументСторнирован = Ложь;
		Форма.ДокументСторно      = Неопределено;
	КонецЕсли;
	
	Если Параметр.Свойство("ПолеПериодРегистрации") И Параметр.ПолеПериодРегистрации <> Неопределено Тогда
		ИсправлениеДокументовЗарплатаКадрыКлиентСервер.УстановитьПоляИсправления(Форма,,Параметр.ПолеПериодРегистрации);
	Иначе
		ИсправлениеДокументовЗарплатаКадрыКлиентСервер.УстановитьПоляИсправления(Форма);
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти
