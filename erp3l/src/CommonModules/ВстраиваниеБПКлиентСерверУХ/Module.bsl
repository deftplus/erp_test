
////////////////////////////////////////////////////////////////////////////////
// Модуль Интеграция клиент-сервер(УХ): клиент(Управляемый,обычный), сервер, внешнее соединение
// Предназначен для реализации функционала "Управление холдингом", встраиваемого в базовую конфигурацию(например, БПКорп)
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Справочник_Организации

Процедура ОбработкаПолученияФормыОрганизации(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ)
		ИЛИ Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		
		ВыбраннаяФорма = "ФормаОрганизации";
		
	ИначеЕсли Не (Параметры.Свойство("ОтключитьФормуУХ") И Параметры.ОтключитьФормуУХ = Истина) Тогда 
		
		// Новая организация
		ВыбраннаяФорма = "ФормаВыбораТипаОрганизации";
		
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПараметрыИностраннойОрганизации(СтруктураПараметров, Объект) Экспорт

	//СтруктураПараметров.Вставить("УчредительныйДокументЛат", Объект.УчредительныйДокументЛат);
	//СтруктураПараметров.Вставить("УчредительныйДокумент", Объект.УчредительныйДокумент);
	//
	//СтруктураПараметров.Вставить("Аудитор", Объект.Аудитор);
	//СтруктураПараметров.Вставить("Аудит", Объект.Аудит);
	//
	//СтруктураПараметров.Вставить("ПорядокОпределенияПрибыли", Объект.ПорядокОпределенияПрибыли);
	//СтруктураПараметров.Вставить("УчаствуетВПроектахДПИ", Объект.УчаствуетВПроектахДПИ);
	//СтруктураПараметров.Вставить("ОператорНовогоМорскогоМесторожденияУВС", Объект.ОператорНовогоМорскогоМесторожденияУВС);
	//СтруктураПараметров.Вставить("ВидИностраннойСтруктуры", Объект.ВидИностраннойСтруктуры);
	//СтруктураПараметров.Вставить("ИностраннаяСтруктураБезОбразованияЮрЛица", Объект.ИностраннаяСтруктураБезОбразованияЮрЛица);
	////СтруктураПараметров.Вставить("ГруппаИС", Объект.ГруппаИС);
	//
	//СтруктураПараметров.Вставить("ГруппаИностраннаяСтруктура", Объект.ГруппаИностраннаяСтруктура);
	//СтруктураПараметров.Вставить("ГруппаНалогообложениеКИК", Объект.ГруппаНалогообложениеКИК);
	//СтруктураПараметров.Вставить("ДатаРегистрацииИК", Объект.ДатаРегистрацииИК);

КонецПроцедуры

#КонецОбласти

#Область Справочник_БанковскиеСчета

Процедура БанковскиеСчетаПолучитьФормуОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры
	
#КонецОбласти

#Область Документ_УведомлениеОСпецрежимахНалогообложения

Процедура ПолучениеФормыУведомленияОКонтролируемыхИООбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		Ключ = Неопределено;
		ВидУведомления = Неопределено;
		Если Параметры.Свойство("Ключ", Ключ) ИЛИ Параметры.Свойство("ВидУведомления", ВидУведомления) Тогда
			Если ТипЗнч(Ключ) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
				ВидУведомления = Ключ.ВидУведомления;
			КонецЕсли;
			Если ВидУведомления = ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаУ_ИО") 
					ИЛИ ВидУведомления = ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ФормаКИК") Тогда
				ВыбраннаяФорма = "ФормаДокументаУХ";
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область Справочник_ДоговорыКонтрагентов
Процедура ДоговорыКонтрагентовОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти


#Область ВспомогательныеФункции

#КонецОбласти


