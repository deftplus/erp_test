///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////


#Область УправлениеРеквизитамиОбъектов

// Процедура рассчитывает некоторые реквизиты договора
Процедура ОбработатьРеквизитыДоговораРешения(РеквизитыДоговора, СтруктураРеквизитов) Экспорт
	
	РеквизитыДоговора.Вставить("ПлатежВУсловныхЕдиницах",
		ЭтоПлатежВУсловныхЕдиницах(РеквизитыДоговора.ВалютаВзаиморасчетов, РеквизитыДоговора.ВалютаПлатежа));
	
КонецПроцедуры

//Процедура изменяет структуру реквизитов договора в связи с особенностями решения
Процедура СтруктураРеквизитовДоговораРешения(СтруктураРеквизитов, ДоговорТип, ВидОперацииУХ) Экспорт
	
	СтруктураРеквизитов.ВалютаПлатежа = "ОсновнаяВалютаПлатежей";
	
	СтруктураРеквизитов.Аналитика1 = "АналитикаБДДС1";
	СтруктураРеквизитов.Аналитика2 = "АналитикаБДДС2";
	СтруктураРеквизитов.Аналитика3 = "АналитикаБДДС3";
	СтруктураРеквизитов.Аналитика4 = "АналитикаБДДС4";
	СтруктураРеквизитов.Аналитика5 = "АналитикаБДДС5";
	СтруктураРеквизитов.Аналитика6 = "АналитикаБДДС6";
	
	СтруктураРеквизитов.ЦФО = "ОсновнойЦФО";
	СтруктураРеквизитов.Проект = "ОсновнойПроект";
	СтруктураРеквизитов.СтатьяИсполнение = "ОсновнаяСтатьяИсполнение";
	
	СтруктураРеквизитов.Удалить("РасчетыВУсловныхЕдиницах");
	СтруктураРеквизитов.Удалить("РасчетыВУсловныхЕдиницахВалюта");
	
	// 
	Если ДоговорТип = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		
		Если ВидОперацииУХ = Справочники.ВидыОперацийУХ.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
			СтруктураРеквизитов.БанковскийСчет = "БанковскийСчетПолучателя";
			СтруктураРеквизитов.Организация = "ОрганизацияПолучатель";
			СтруктураРеквизитов.ФиксированныйСчетОрганизации = "ФиксированныйСчетПолучателя";
			СтруктураРеквизитов.ФиксированныйСчетКонтрагента = "ФиксированныйСчет";
		Иначе
			СтруктураРеквизитов.БанковскийСчет = "БанковскийСчет";
			СтруктураРеквизитов.Организация = "Организация";
			СтруктураРеквизитов.ФиксированныйСчетОрганизации = "ФиксированныйСчет";
			СтруктураРеквизитов.ФиксированныйСчетКонтрагента = "ФиксированныйСчетПолучателя";
		КонецЕсли;
		
		СтруктураРеквизитов.Контрагент = "ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
		СтруктураРеквизитов.БанковскийСчетКонтрагента = "ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)";
		СтруктураРеквизитов.Вставить("Поставщик",  "Организация");
		СтруктураРеквизитов.Вставить("Покупатель", "ОрганизацияПолучатель");
		
		СтруктураРеквизитов.Вставить("ПоставщикБанковскийСчет", "БанковскийСчет");
		СтруктураРеквизитов.Вставить("ПокупательБанковскийСчет", "БанковскийСчетПолучателя");
		
		СтруктураРеквизитов.Вставить("ПоставщикСтатьяДвиженияденежныхСредств", "СтатьяДвиженияДенежныхСредств");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика1", "АналитикаБДДС1");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика2", "АналитикаБДДС2");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика3", "АналитикаБДДС3");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика4", "АналитикаБДДС4");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика5", "АналитикаБДДС5");
		СтруктураРеквизитов.Вставить("ПоставщикАналитика6", "АналитикаБДДС6");
		СтруктураРеквизитов.Вставить("ПоставщикСтатьяИсполнение", "СтатьяИсполнение");
		СтруктураРеквизитов.Вставить("ПоставщикАналитикаИсполнение1", "АналитикаИсполнение1");
		СтруктураРеквизитов.Вставить("ПоставщикАналитикаИсполнение2", "АналитикаИсполнение2");
		СтруктураРеквизитов.Вставить("ПоставщикАналитикаИсполнение3", "АналитикаИсполнение3");
		СтруктураРеквизитов.Вставить("ПоставщикЦФО",		"ОсновнойЦФО");
		СтруктураРеквизитов.Вставить("ПоставщикПроект",		"ОсновнойПроект");
		
		СтруктураРеквизитов.Вставить("ПокупательСтатьяДвиженияденежныхСредств", "СтатьяДвиженияДенежныхСредствПолучателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитика1","АналитикаПолучателя1");
		СтруктураРеквизитов.Вставить("ПокупательАналитика2","АналитикаПолучателя2");
		СтруктураРеквизитов.Вставить("ПокупательАналитика3","АналитикаПолучателя3");
		СтруктураРеквизитов.Вставить("ПокупательАналитика4","АналитикаПолучателя4");
		СтруктураРеквизитов.Вставить("ПокупательАналитика5","АналитикаПолучателя5");
		СтруктураРеквизитов.Вставить("ПокупательАналитика6","АналитикаПолучателя6");
		СтруктураРеквизитов.Вставить("ПокупательСтатьяИсполнение", "СтатьяИсполнение");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение1", "АналитикаИсполнение1Получателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение2", "АналитикаИсполнение2Получателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение3", "АналитикаИсполнение3Получателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение4", "АналитикаИсполнение4Получателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение5", "АналитикаИсполнение5Получателя");
		СтруктураРеквизитов.Вставить("ПокупательАналитикаИсполнение6", "АналитикаИсполнение6Получателя");
		СтруктураРеквизитов.Вставить("ПокупательЦФО",		"ЦФОПолучателя");
		СтруктураРеквизитов.Вставить("ПокупательПроект",	"ПроектПолучателя");
		
		СтруктураРеквизитов.Удалить("СтатьяИсполнение");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение1");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение2");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение3");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение4");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение5");
		СтруктураРеквизитов.Удалить("АналитикаИсполнение6");
		
	Иначе
		
	КонецЕсли;
		
КонецПроцедуры

// Процедура заполняет данные бюджетирования для договоров решения
Процедура ЗаполнитьДанныеБюджетированияДоговораРешения(Договор, ВидБюджета, ДанныеБюджетирования) Экспорт
	Возврат ;
КонецПроцедуры

// Процедура устанавливает  Организация-ОрганизацияПолучатель-ОрганизацияОтправитель 
Процедура УстановитьОтправителяПолучателяПриИзмененииДоговора(ОбъектЗаявка, РеквизитыЗаявки, Договор, РеквизитыДоговора) Экспорт
	
	ТипДоговор = ТипЗнч(Договор);
	ОМ = ЗаявкиНаОперации;
	
	Если ТипДоговор = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		
		Если ОбъектЗаявка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
			// Это заявка на оплату покупателем поставщику
			Если НЕ ЗначениеЗаполнено(ОМ.РеквизитЗаявки(ОбъектЗаявка, РеквизитыЗаявки.ОрганизацияВстречная)) Тогда
				ОМ.УстановитьРеквизитЗаявки(ОбъектЗаявка, РеквизитыЗаявки.ОрганизацияВстречная, РеквизитыДоговора.Поставщик);
			КонецЕсли;
			
		ИначеЕсли ОбъектЗаявка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
			Если НЕ ЗначениеЗаполнено(ОМ.РеквизитЗаявки(ОбъектЗаявка, РеквизитыЗаявки.ОрганизацияВстречная)) Тогда
				ОМ.УстановитьРеквизитЗаявки(ОбъектЗаявка, РеквизитыЗаявки.ОрганизацияВстречная, РеквизитыДоговора.Покупатель);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Функция возвращает признак платежа в условных единицах
Функция ЭтоПлатежВУсловныхЕдиницах(ВалютаВзаиморасчетов, ВалютаПлатежа)
	Возврат ВалютаПлатежа <> ВалютаВзаиморасчетов;
КонецФункции

#КонецОбласти