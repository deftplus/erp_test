

Процедура ОбработатьДокументыЭтапа(СтруктураПараметров) Экспорт
	
	ЭтапПроцесса=СтруктураПараметров.ТекущийЭтап;
	ДокументУправленияПериодом=СтруктураПараметров.ДокументУправленияПериодом;
	
	АдресХранилища = Неопределено;
	ФормаОтчета  = ПолучитьФорму("ОбщаяФорма.ФормаОрганизацийЭтапа",Новый Структура("ЭтапПроцесса,Действие,АдресХранилища",ЭтапПроцесса, Нстр("ru = 'Выполнить этап'")));
	ФормаОтчета.ОткрытьМодально();
	
	
	МодульОбработкиЭтаповПроцессовСерверУХ.ОбработатьДокументыЭтапаСервер(ДокументУправленияПериодом,ЭтапПроцесса)
	
КонецПроцедуры	

Функция ПолучитьОрганизацииЭтапа(ЭтапПроцесса)

		//ОрганизацииЭтапа = ОбработкаОбъект.СостоянияВыполненияПроцесса.Выгрузить(Новый Структура("Этап",Этап),"Организация");
		//АдресТЗОрганизаций =  ПоместитьВоВременноеХранилище(ОрганизацииЭтапа,Новый УникальныйИдентификатор());
		//Возврат АдресТЗОрганизаций;
		//	
			   
КонецФункции

Процедура СогласоватьЭтап(СтруктураПараметров) Экспорт
	
	СогласовываемыйДокумент = СтруктураПараметров.СогласуемыйОбъект;
	ОткрытьФорму("ОбщаяФорма.КомментарийИСогласование", Новый Структура("СогласовываемыйДокумент", СогласовываемыйДокумент),);
	
КонецПроцедуры

Процедура СоздатьОповещение(СтруктураПараметров)
	
	МодульОбработкиЭтаповПроцессовСерверУХ.ОбработатьЭтапОповещения(СтруктураПараметров);
	
КонецПроцедуры

Процедура ВвестиЗаявкуНаЦНСИ(СтруктураПараметров) Экспорт

	  СогласовываемыйДокумент = СтруктураПараметров.СогласуемыйОбъект;
	  ТекЗаявка =  ДействияСогласованиеУХСервер.ПолучитьЗаявкуНСИИзменение(СогласовываемыйДокумент);
	  //ПроцессЗапущен = МодульУправленияПроцессамиУХ.ПроверитьПроцессИнициализирован(ТекЗаявка,);	
	  //МодульУправленияПроцессамиУХ.ИнициализироватьПроцесс(СтруктураПараметров.ДочернийПроцесс,,ТекЗаявка,,СтруктураПараметров.ТекущийЭтап);
	                                   
КонецПроцедуры

Процедура ОбработатьЭтап(СтруктураПараметров,ТекстПроцедуры) Экспорт
	
	Попытка
		//Выполнить(ТекстПроцедуры);
		Если СтруктураПараметров.ТипЭтапа = ПредопределенноеЗначение("Перечисление.ТипыЭтаповУниверсальныхПроцессов.ЦиклПока") Тогда 
			МодульУправленияПроцессамиУХ.УтвердитьЭтапПроцесса(СтруктураПараметров.ЭкземплярПроцесса, , СтруктураПараметров.ТекущийЭтап, НСтр("ru = 'Автоматическое утверждение этапа по завершении интервала согласования'"));
		Иначе	
			МодульУправленияПроцессамиУХ.ИнициироватьСогласованиеЭтапа(СтруктураПараметров.ЭкземплярПроцесса, Неопределено, СтруктураПараметров.ТекущийЭтап, );
		КонецЕсли;
	Исключение
		Сообщить(НСтр("ru = 'Выполнение прервано'"));
		Сообщить(ОписаниеОшибки());
		МодульУправленияПроцессамиУХ.УстановитьСостояниеТекущегоЭтапаЗавершенСОшибкой(СтруктураПараметров.ТекущийЭтап,СтруктураПараметров.ЭкземплярПроцесса);
		
	КонецПопытки;

КонецПроцедуры

// Процедура открывает запрос выбора действий над шаблоном - открыть карточку шаблона ("Реквизиты процесса"),
// сетевую диаграмму ("Конструктор процесса"), или же список этапов ("Этапы процесса"). Список выводится в виде меню.
//
// Параметры:
//  Форма		 - УправляемаяФорма	 - Форма, в которой выводится меню
//  ШаблонСсылка - СправочникСсылка.ШаблоныУниверсальныхПроцессов	 - Ссылка на шаблон процесса
//  СтандартнаяОбработка - Булево	 - Признак стандартной обработки события, из которого вызывается данный метод.
Процедура ДиалогВыбораДействийНадШаблономПроцесса(Форма, ШаблонСсылка, СтандартнаяОбработка = Неопределено) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(0, НСтр("ru = 'Реквизиты процесса'"));
	СписокЗначений.Добавить(1, НСтр("ru = 'Конструктор процесса'"));
	СписокЗначений.Добавить(2, НСтр("ru = 'Этапы процесса'"));
	Ответ = Форма.ВыбратьИзМеню(СписокЗначений);
	
	Если Ответ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ.Значение = 0 Тогда
		ОткрытьФорму("Справочник.ШаблоныУниверсальныхПроцессов.ФормаОбъекта", Новый Структура("Ключ", ШаблонСсылка));
	ИначеЕсли Ответ.Значение = 1 Тогда
		ОткрытьФорму("Отчет.СетеваяДиаграммаШаблонаУниверсальногоПроцесса.ФормаОбъекта", Новый Структура("ШаблонПроцесса", ШаблонСсылка));
	Иначе 	
		ОткрытьФорму("Справочник.ЭтапыУниверсальныхПроцессов.ФормаСписка", Новый Структура("Отбор", Новый Структура("Владелец", ШаблонСсылка)));
	КонецЕсли;

	
КонецПроцедуры