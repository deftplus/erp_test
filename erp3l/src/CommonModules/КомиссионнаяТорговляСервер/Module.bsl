
#Область ПрограммныйИнтерфейс

// Процедура проверяет правильность заполнения начала и конца периода.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от продолжения работы.
//
Процедура ПроверитьКорректностьПериода(ДокументОбъект, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.НачалоПериода)
	 И ДокументОбъект.НачалоПериода > ДокументОбъект.КонецПериода Тогда
	 
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Дата начала периода не должна быть больше окончания периода %1';
				|en = 'Period start date cannot exceed period end date %1'"),
			Формат(ДокументОбъект.КонецПериода, "ДЛФ=DD"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"КонецПериода",
			, // ПутьКДанным
			Отказ);
	 
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет корректность указания услуги по комиссионному вознаграждению.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от продолжения работы.
//
Процедура ПроверитьУслугуПоКомиссионномуВознаграждению(ДокументОбъект, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.Услуга) Тогда
		
		ХарактеристикиИспользуются = Справочники.Номенклатура.ХарактеристикиИспользуются(ДокументОбъект.Услуга);
		Если ХарактеристикиИспользуются Тогда
			ТекстОшибки = НСтр("ru = 'Необходимо указать услугу для которой не используются характеристики';
								|en = 'Specify a service for which variants are not used'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"Услуга",
				, // ПутьКДанным
				Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа по остаткам товаров к оформлению отчетов комитенту о списании.
//
// Параметры:
//	Объект - ДанныеФормыКоллекция - объект, в котором осуществляется заполнение.
//	ЕстьНомерГТД - Булево - признак наличия в таблице объекта колонки 'НомерГТД'. Значение по умолчанию Ложь.
//
Процедура ЗаполнитьТоварыПоОстаткамКОформлениюОтчетовКомитентуОСписании(Объект, ЕстьНомерГТД = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ВладелецТовара = &Комитент
	|	И (ВидыЗапасов.Соглашение = &Соглашение
	|		ИЛИ &Соглашение В (
	|			НЕОПРЕДЕЛЕНО,
	|			ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)))
	|	И (ВидыЗапасов.Контрагент = &Контрагент
	|		ИЛИ &Контрагент В (
	|			НЕОПРЕДЕЛЕНО,
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))	
	|	И (ВидыЗапасов.Договор = &Договор
	|		ИЛИ (ВидыЗапасов.Договор В (
	|			НЕОПРЕДЕЛЕНО,
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)) И
	|		&Договор В (
	|			НЕОПРЕДЕЛЕНО,
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		))
	|	И ВидыЗапасов.НалогообложениеНДС = &НалогообложениеНДС
	|	И ВидыЗапасов.Валюта = &Валюта
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ЕстьНомерГТД
	|				И ЕСТЬNULL(Обороты.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА Обороты.НомерГТД
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерГТД,
	|	Обороты.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Обороты.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Обороты.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	СУММА(Обороты.КоличествоСписаноКОформлениюКонечныйОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период,,
	|			ВидЗапасов В
	|				(ВЫБРАТЬ
	|					ВидЗапасов
	|				ИЗ
	|					ВидыЗапасов КАК ВидыЗапасов)
	|			И АналитикаУчетаНоменклатуры.МестоХранения = &Комитент
	|	
	|	) КАК Обороты
	|
	|ГДЕ
	|	Обороты.КоличествоСписаноКОформлениюКонечныйОстаток <> 0
	|	И (Обороты.КоличествоСписаноКОформлениюПриход <> 0
	|		ИЛИ Обороты.КоличествоСписаноКОформлениюРасход <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	Обороты.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ЕстьНомерГТД
	|				И ЕСТЬNULL(Обороты.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА Обороты.НомерГТД
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обороты.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Обороты.АналитикаУчетаНоменклатуры.Характеристика,
	|	Обороты.АналитикаУчетаНоменклатуры.Серия";
	
	ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Комитент", Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение", Объект.Соглашение);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	Запрос.УстановитьПараметр("НалогообложениеНДС", Объект.НалогообложениеНДС);
	Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(Объект.НачалоПериода), Объект.НачалоПериода, '00010101'));
	Запрос.УстановитьПараметр("КонецПериода", ?(ЗначениеЗаполнено(Объект.КонецПериода), КонецДня(Объект.КонецПериода), КонецМесяца(ДатаДокумента)));
	Запрос.УстановитьПараметр("ЕстьНомерГТД", ЕстьНомерГТД);
	
	Объект.Товары.Очистить();
	
	КэшированныеЗначения = Неопределено;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",
		Новый Структура("НалогообложениеНДС, Дата", Объект.НалогообложениеНДС, Объект.Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		
	КонецЦикла;
	
	Если ТипЗнч(Объект.Партнер) = Тип("СправочникСсылка.Партнеры") Тогда
		НоменклатураПартнеровСервер.ЗаполнитьНоменклатуруПартнераПоНоменклатуреВТаблице(Объект.Товары, Объект.Партнер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
		ПараметрыЗаполнения = ЦеныПартнеровЗаполнениеСервер.НовыйПараметрыЗаполненияЗаполнитьЦены();
		ПараметрыЗаполнения.Вставить("ПоляЗаполнения", "Цена, СтавкаНДС");
		ПараметрыЗаполнения.Вставить("Дата", Объект.Дата);
		ПараметрыЗаполнения.Вставить("Валюта", Объект.Валюта);
		ПараметрыЗаполнения.Вставить("Соглашение", Объект.Соглашение);
		ПараметрыЗаполнения.Вставить("НалогообложениеНДС", Объект.НалогообложениеНДС);
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСумму", "КоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		
		ЦеныПартнеровЗаполнениеСервер.ЗаполнитьЦены(
			Объект.Товары,
			Неопределено, // Массив строк
			ПараметрыЗаполнения,
			СтруктураДействий);
			
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения документа по результатам продаж за период товаров к оформлению отчетов комитенту.
//
// Параметры:
//	Объект - ДанныеФормыКоллекция - объект, в котором осуществляется заполнение.
//	НачалоПериода - Дата - дата начала заполнения.
//	КонецПериода - Дата - дата окончания заполнения.
//	ЕстьНомерГТД - Булево - признак наличия в таблице объекта колонки 'НомерГТД'. Значение по умолчанию Ложь.
//	ИспользоватьНоменклатуруПартнера - Булево - признак наличия в таблице объекта колонки 'НоменклатураПартнера'.
//										Значение по умолчанию Ложь.
//
Процедура ЗаполнитьПоТоварамКОформлениюОтчетовКомитентуЗаПериод(Объект,
																НачалоПериода,
																КонецПериода,
																ЕстьНомерГТД = Ложь,
																ИспользоватьНоменклатуруПартнера = Ложь) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Дата",				Объект.Дата);
	СтруктураПараметров.Вставить("Валюта",				Объект.Валюта);
	СтруктураПараметров.Вставить("Организация",			Объект.Организация);
	СтруктураПараметров.Вставить("Партнер",				Объект.Партнер);
	СтруктураПараметров.Вставить("Соглашение",			Объект.Соглашение);
	СтруктураПараметров.Вставить("Контрагент",			?(ЗначениеЗаполнено(Объект.Контрагент),
															Объект.Контрагент,
															Неопределено));
	СтруктураПараметров.Вставить("Договор",				?(ЗначениеЗаполнено(Объект.Договор),
															Объект.Договор,
															Неопределено));
	СтруктураПараметров.Вставить("НалогообложениеНДС",	Объект.НалогообложениеНДС);
	СтруктураПараметров.Вставить("НачалоПериода",		НачалоПериода);
	СтруктураПараметров.Вставить("КонецПериода",		КонецДня(?(ЗначениеЗаполнено(КонецПериода),
																	КонецПериода,
																	ТекущаяДатаСеанса())));
	СтруктураПараметров.Вставить("ЕстьНомерГТД",		ЕстьНомерГТД);
	СтруктураПараметров.Вставить("ЕстьСуммаПродажиНДС",	Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗапросПоТоварамКОформлениюОтчетовКомитентуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц);
	ЗапросПоТоварамКОформлениюОтчетовПринципалуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура			КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика		КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество)		КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)		КАК КоличествоОстаток,
	|	СУММА(ТоварыКОформлению.СуммаВыручки)	КАК СуммаПродажи,
	|	ТоварыКОформлению.ДатаСчетаФактуры		КАК ДатаСчетаФактуры,
	|	ТоварыКОформлению.ДатаСчетаФактуры		КАК ДатаСчетаФактурыКомиссионера,
	|	ТоварыКОформлению.НомерСчетаФактуры		КАК НомерСчетаФактуры,
	|	ТоварыКОформлению.Покупатель			КАК Покупатель,
	|	ТоварыКОформлению.СчетФактура			КАК СчетФактураВыставленный,
	|	ТоварыКОформлению.СчетФактура			КАК СчетФактураВыставленныйКомиссионера,
	|	ТоварыКОформлению.НомерГТД				КАК НомерГТД,
	|	ТоварыКОформлению.ЕстьСуммаПродажиНДС	КАК ЕстьСуммаПродажиНДС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.ДатаСчетаФактуры,
	|	ТоварыКОформлению.НомерСчетаФактуры,
	|	ТоварыКОформлению.Покупатель,
	|	ТоварыКОформлению.СчетФактура,
	|	ТоварыКОформлению.НомерГТД,
	|	ТоварыКОформлению.ЕстьСуммаПродажиНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) <> 0
	|	ИЛИ СУММА(ТоварыКОформлению.СуммаВыручки) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УслугиКОформлению.Номенклатура			КАК Номенклатура,
	|	УслугиКОформлению.Характеристика		КАК Характеристика,
	|	УслугиКОформлению.Количество			КАК Количество,
	|	УслугиКОформлению.КоличествоОстаток		КАК КоличествоОстаток,
	|	УслугиКОформлению.СуммаВыручки			КАК СуммаПродажи,
	|	УслугиКОформлению.ДатаСчетаФактуры		КАК ДатаСчетаФактуры,
	|	УслугиКОформлению.ДатаСчетаФактуры		КАК ДатаСчетаФактурыКомиссионера,
	|	УслугиКОформлению.НомерСчетаФактуры		КАК НомерСчетаФактуры,
	|	УслугиКОформлению.Покупатель			КАК Покупатель,
	|	УслугиКОформлению.СчетФактура			КАК СчетФактураВыставленный,
	|	УслугиКОформлению.СчетФактура			КАК СчетФактураВыставленныйКомиссионера,
	|	НЕОПРЕДЕЛЕНО							КАК НомерГТД,
	|	УслугиКОформлению.ЕстьСуммаПродажиНДС	КАК ЕстьСуммаПродажиНДС
	|ИЗ
	|	УслугиКОформлению КАК УслугиКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСчетаФактуры УБЫВ
	|
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура,
	|	Характеристика";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЗаполнитьТЧПоТоварамКОформлениюОтчетовКомитентуЗаПериод(Объект.Товары, РезультатЗапроса, СтруктураПараметров);
	
	Если ИспользоватьНоменклатуруПартнера Тогда
		НоменклатураПартнеровСервер.ЗаполнитьНоменклатуруПартнераПоНоменклатуреВТаблице(Объект.Товары, Объект.Партнер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
		
		ПараметрыЗаполнения = ЦеныПартнеровЗаполнениеСервер.НовыйПараметрыЗаполненияЗаполнитьЦены();
		ПараметрыЗаполнения.Вставить("ПоляЗаполнения",		"Цена");
		ПараметрыЗаполнения.Вставить("Дата",				Объект.Дата);
		ПараметрыЗаполнения.Вставить("Валюта",				Объект.Валюта);
		ПараметрыЗаполнения.Вставить("Соглашение",			Объект.Соглашение);
		ПараметрыЗаполнения.Вставить("НалогообложениеНДС",	Объект.НалогообложениеНДС);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСумму",		"КоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",	СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС",	СтруктураПересчетаСуммы);
		
		ЦеныПартнеровЗаполнениеСервер.ЗаполнитьЦены(Объект.Товары, Неопределено, ПараметрыЗаполнения, СтруктураДействий);
	Иначе
		ЗаполнитьСуммуСНДС(Объект.Товары, Объект.ЦенаВключаетНДС);
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу "ТоварыКОформлению" по результатам продаж комиссионных товаров за период.
//
// Параметры:
//	СтруктураПараметров - Структура - параметры запроса.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, хранящий результат запроса.
//
Процедура ЗапросПоТоварамКОформлениюОтчетовКомитентуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ВладелецТовара = &Комитент
	|	И (ВидыЗапасов.Соглашение = &Соглашение
	|		ИЛИ &Соглашение В (НЕОПРЕДЕЛЕНО,
	|							ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)))
	|	И (ВидыЗапасов.Контрагент = &Контрагент
	|		ИЛИ &Контрагент В (НЕОПРЕДЕЛЕНО,
	|							ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|							ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|	И (ВидыЗапасов.Договор = &Договор
	|		ИЛИ ВидыЗапасов.Договор В (НЕОПРЕДЕЛЕНО,
	|									ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|									ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			И &Договор В (НЕОПРЕДЕЛЕНО,
	|							ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|							ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)))
	|	И ВидыЗапасов.НалогообложениеНДС = &НалогообложениеНДС
	|	И ВидыЗапасов.Валюта = &Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюОтчетовКомитентуОстатки.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлениюОтчетовКомитентуОстатки.ВидЗапасов					КАК ВидЗапасов,
	|	ТоварыКОформлениюОтчетовКомитентуОстатки.НомерГТД					КАК НомерГТД,
	|	ТоварыКОформлениюОтчетовКомитентуОстатки.Валюта						КАК Валюта
	|ПОМЕСТИТЬ ТоварыКОформлениюОтбор
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&ГраницаКонецПериода,
	|			ВидЗапасов В
	|				(ВЫБРАТЬ
	|					ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|				ИЗ
	|					ВидыЗапасов КАК ВидыЗапасов)
	|	
	|	) КАК ТоварыКОформлениюОтчетовКомитентуОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация									КАК Организация,
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика	КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыКОформлению.КоличествоКОформлению
	|			ИНАЧЕ -ТоварыКОформлению.КоличествоКОформлению
	|		КОНЕЦ)										КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыКОформлению.СуммаВыручкиКОформлению
	|			ИНАЧЕ -ТоварыКОформлению.СуммаВыручкиКОформлению
	|		КОНЕЦ)										КАК СуммаВыручки,
	|	ВЫБОР
	|		КОГДА НЕ ВозвратТоваровОтКлиента.Ссылка ЕСТЬ NULL
	|				И НЕ ВозвратТоваровОтКлиента.ПокупательНеПлательщикНДС
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|	КОНЕЦ											КАК ДокументРеализации,
	|	ТоварыКОформлению.ДатаСчетаФактуры				КАК ДатаСчетаФактуры,
	|	ТоварыКОформлению.НомерСчетаФактуры				КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВозвратТоваровОтКлиента.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ											КАК Покупатель,
	|	ВЫБОР
	|		КОГДА &ЕстьНомерГТД
	|				И ЕСТЬNULL(КлючиАналитикиУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА ТоварыКОформлению.НомерГТД
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлению.КоличествоКОформлению >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ											КАК Знак,
	|	&ЕстьСуммаПродажиНДС							КАК ЕстьСуммаПродажиНДС
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ТоварыКОформлению.Регистратор = ВозвратТоваровОтКлиента.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТоварыКОформлению.ДокументРеализации = РеализацияТоваровУслуг.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваров
	|		ПО ТоварыКОформлению.ДокументРеализации = ПередачаТоваров.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКОформлениюОтбор КАК ТоварыКОформлениюОтбор
	|		ПО ТоварыКОформлению.АналитикаУчетаНоменклатуры = ТоварыКОформлениюОтбор.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.ВидЗапасов = ТоварыКОформлениюОтбор.ВидЗапасов
	|			И ТоварыКОформлению.НомерГТД = ТоварыКОформлениюОтбор.НомерГТД
	|			И ТоварыКОформлению.Валюта = ТоварыКОформлениюОтбор.Валюта
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыКОформлению.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ ВозвратТоваровОтКлиента.Ссылка ЕСТЬ NULL
	|				И НЕ ВозвратТоваровОтКлиента.ПокупательНеПлательщикНДС
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|	КОНЕЦ,
	|	ТоварыКОформлению.ДатаСчетаФактуры,
	|	ТоварыКОформлению.НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ВозвратТоваровОтКлиента.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ЕстьНомерГТД
	|				И ЕСТЬNULL(КлючиАналитикиУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА ТоварыКОформлению.НомерГТД
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлению.КоличествоКОформлению >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.КоличествоКОформлению) <> 0
	|	И СУММА(ТоварыКОформлению.СуммаВыручкиКОформлению) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Запрос.УстановитьПараметр("НачалоПериода",			СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",			СтруктураПараметров.КонецПериода);
	Запрос.УстановитьПараметр("ГраницаКонецПериода",	Новый Граница(СтруктураПараметров.КонецПериода,
																		ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",			СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Комитент",				СтруктураПараметров.Партнер);
	Запрос.УстановитьПараметр("Контрагент",				СтруктураПараметров.Контрагент);
	Запрос.УстановитьПараметр("Соглашение",				СтруктураПараметров.Соглашение);
	Запрос.УстановитьПараметр("Договор",				СтруктураПараметров.Договор);
	Запрос.УстановитьПараметр("Валюта",					СтруктураПараметров.Валюта);
	Запрос.УстановитьПараметр("НалогообложениеНДС",		СтруктураПараметров.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЕстьНомерГТД",			СтруктураПараметров.ЕстьНомерГТД);
	Запрос.УстановитьПараметр("ЕстьСуммаПродажиНДС",	СтруктураПараметров.ЕстьСуммаПродажиНДС);
	
	Запрос.Выполнить();
	
	УчетНДСУП.ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, "ТоварыКОформлению");
	
КонецПроцедуры

// Заполняет табличную часть объекта по данным временной таблицы "ТоварыКОформлению".
//
// Параметры:
//	ТабличнаяЧасть - ТабличнаяЧасть - табличная часть объекта для заполнения.
//	РезультатЗапроса - РезультатЗапроса - результат запроса, по данным которого необходимо заполнить таблицу объекта.
//	ПараметрыЗаполнения - Структура - параметры заполнения табличной части, которые содержат следующие значения:
//					* Дата - Дата - дата документа.
//					* Организация - СправочникСсылка.Организации - организация документа.
//					* НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение НДС документа.
//
Процедура ЗаполнитьТЧПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть,
																	РезультатЗапроса,
																	ПараметрыЗаполнения) Экспорт
	
	ТабличнаяЧасть.Очистить();
	
	КэшированныеЗначения = Неопределено;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",
								Новый Структура("НалогообложениеНДС, Дата",
												ПараметрыЗаполнения.НалогообложениеНДС, ПараметрыЗаполнения.Дата));
	
	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоХарактеристике.Следующий() Цикл
			
			Если ВыборкаПоХарактеристике.КоличествоОстаток >= ВыборкаПоХарактеристике.Количество Тогда
				
				Выборка = ВыборкаПоХарактеристике.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть,
																				ПараметрыЗаполнения,
																				Выборка,
																				Выборка.Количество,
																				СтруктураДействий,
																				КэшированныеЗначения);
				КонецЦикла;
				
			Иначе
				
				КоличествоКРаспределению = ВыборкаПоХарактеристике.Количество;
				
				Выборка = ВыборкаПоХарактеристике.Выбрать();
				
				Пока Выборка.Следующий() Цикл
				
					Если Выборка.Количество <= КоличествоКРаспределению Тогда
						ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть,
																					ПараметрыЗаполнения,
																					Выборка,
																					Выборка.Количество,
																					СтруктураДействий,
																					КэшированныеЗначения);
						
						КоличествоКРаспределению = КоличествоКРаспределению - Выборка.Количество;
					Иначе
						ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть,
																					ПараметрыЗаполнения,
																					Выборка,
																					КоличествоКРаспределению,
																					СтруктураДействий,
																					КэшированныеЗначения);
						
						КоличествоКРаспределению = 0;
					КонецЕсли;
					
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;
				
				КонецЦикла;
			
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура формирования временной таблицы "ТоварыКОформлениюПринципалу" по результатам продаж за период.
//
// Параметры:
//  СтруктураПараметров - Структура - параметры запроса.
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц  - менеджер временных таблиц для запроса.
//
Процедура ЗапросПоТоварамКОформлениюОтчетовПринципалуЗаПериод(СтруктураПараметров, МенеджерВременныхТаблиц) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", СтруктураПараметров.КонецПериода);
	Запрос.УстановитьПараметр("Валюта", СтруктураПараметров.Валюта);
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("Комитент", СтруктураПараметров.Партнер);
	Запрос.УстановитьПараметр("Соглашение", ?(ЗначениеЗаполнено(СтруктураПараметров.Соглашение), 
								СтруктураПараметров.Соглашение, Справочники.СоглашенияСПоставщиками.ПустаяСсылка()));
	Запрос.УстановитьПараметр("ЕстьСуммаПродажиНДС", СтруктураПараметров.ЕстьСуммаПродажиНДС);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Комитент КАК Принципал,
	|	&Валюта КАК Валюта,
	|	&Соглашение КАК Соглашение
	|ПОМЕСТИТЬ ВтОтбор
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	УслугиКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	УслугиКОформлению.ДокументРеализации КАК ДокументРеализации,
	|	УслугиКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	УслугиКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УслугиКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА УслугиКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ УслугиКОформлению.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	ВЫБОР КОГДА УслугиКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		УслугиКОформлению.Количество
	|	ИНАЧЕ
	|		-УслугиКОформлению.Количество
	|	КОНЕЦ КАК Количество,
	|	
	|	ВЫБОР КОГДА УслугиКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		УслугиКОформлению.СуммаВыручки
	|	ИНАЧЕ
	|		-УслугиКОформлению.СуммаВыручки
	|	КОНЕЦ КАК СуммаВыручки
	|
	|ПОМЕСТИТЬ УслугиКОформлениюЗаПериод
	|ИЗ
	|	РегистрНакопления.УслугиКОформлениюОтчетовПринципалу КАК УслугиКОформлению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтбор КАК Отбор
	|	ПО УслугиКОформлению.Организация = Отбор.Организация
	|		И УслугиКОформлению.АналитикаУчетаНоменклатуры.МестоХранения = Отбор.Принципал
	|		И УслугиКОформлению.Валюта = Отбор.Валюта
	|		И УслугиКОформлению.Соглашение = Отбор.Соглашение
	|
	|ГДЕ
	|	УслугиКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УслугиКОформлению.Активность
	|";
	Запрос.Выполнить();
	
	УчетНДСУП.ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, "УслугиКОформлениюЗаПериод");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УслугиКОформлениюЗаПериод.Организация КАК Организация,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	УслугиКОформлениюЗаПериод.СчетФактура КАК СчетФактура,
	|	УслугиКОформлениюЗаПериод.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	УслугиКОформлениюЗаПериод.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	УслугиКОформлениюЗаПериод.Покупатель КАК Покупатель,
	|	СУММА(УслугиКОформлениюЗаПериод.Количество) КАК Количество,
	|	СУММА(УслугиКОформлениюЗаПериод.СуммаВыручки) КАК СуммаВыручки,
	|	СУММА(УслугиКОформлениюЗаПериод.Количество) КАК КоличествоОстаток,
	|	&ЕстьСуммаПродажиНДС КАК ЕстьСуммаПродажиНДС,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ УслугиКОформлению
	|ИЗ
	|	УслугиКОформлениюЗаПериод КАК УслугиКОформлениюЗаПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	УслугиКОформлениюЗаПериод.Организация,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Номенклатура,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Характеристика,
	|	УслугиКОформлениюЗаПериод.СчетФактура,
	|	УслугиКОформлениюЗаПериод.ДатаСчетаФактуры,
	|	УслугиКОформлениюЗаПериод.НомерСчетаФактуры,
	|	УслугиКОформлениюЗаПериод.Покупатель,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(УслугиКОформлениюЗаПериод.Количество) <> 0
	|	И СУММА(УслугиКОформлениюЗаПериод.СуммаВыручки) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Номенклатура,
	|	УслугиКОформлениюЗаПериод.АналитикаУчетаНоменклатуры.Характеристика
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УслугиКОформлениюЗаПериод
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура заполнения документа по остаткам товаров переданных на комиссию
//
// Параметры:
//	Объект - ДокументОбъект - Текущий документ
//	КонецПериода - Дата - Дата заполнения
//	ЕстьСуммаПродажи - Булево - В документе есть данные о сумме продажи.
//
Процедура ЗаполнитьТоварыПоОстаткамПереданныхНаКомиссию(Объект, КонецПериода, ЕстьСуммаПродажи) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ИЛИ НЕ ЕСТЬNULL(ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыПереданные.НомерГТД
	|	КОНЕЦ										КАК НомерГТД,
	|	СУММА(ТоварыПереданные.КоличествоОстаток)	КАК КоличествоОстаток,
	|	СУММА(ВЫБОР
	|			КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ТОГДА 0
	|			ИНАЧЕ ТоварыПереданные.КоличествоПоРНПТОстаток
	|		КОНЕЦ)									КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ТоварыПереданные
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Граница,
	|			Организация = &Организация
	|			И АналитикаУчетаНоменклатуры.Партнер = &Партнер
	|			И Соглашение = &Соглашение
	|	
	|	) КАК ТоварыПереданные
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ИЛИ НЕ ЕСТЬNULL(ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыПереданные.НомерГТД
	|	КОНЕЦ
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ИЛИ НЕ ЕСТЬNULL(ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыПереданные.НомерГТД
	|	КОНЕЦ										КАК НомерГТД,
	|	СУММА(ТоварыПереданные.КоличествоОстаток)	КАК КоличествоОстаток,
	|	СУММА(ВЫБОР
	|			КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ТОГДА 0
	|			ИНАЧЕ ТоварыПереданные.КоличествоПоРНПТОстаток
	|		КОНЕЦ)									КАК КоличествоПоРНПТОстаток,
	|	ВЫБОР
	|		КОГДА ТоварыПереданные.КоличествоОстаток < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Знак
	|ПОМЕСТИТЬ ТоварыПереданныеОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|			Организация = &Организация
	|			И АналитикаУчетаНоменклатуры.Партнер = &Партнер
	|			И Соглашение = &Соглашение
	|	
	|	) КАК ТоварыПереданные
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &КомиссионерНеВедетУчетПоРНПТ
	|				ИЛИ НЕ ЕСТЬNULL(ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыПереданные.НомерГТД
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыПереданные.КоличествоОстаток < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Характеристика	КАК Характеристика,
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры.Серия			КАК Серия,
	|	ТоварыПереданные.НомерГТД									КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток * ТоварыПереданныеОстатки.Знак, 0)
	|				< (ТоварыПереданные.КоличествоОстаток * ЕСТЬNULL(ТоварыПереданныеОстатки.Знак, 1))
	|			ТОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0)
	|		ИНАЧЕ ТоварыПереданные.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоПоРНПТОстаток * ТоварыПереданныеОстатки.Знак, 0)
	|				< (ТоварыПереданные.КоличествоПоРНПТОстаток * ЕСТЬNULL(ТоварыПереданныеОстатки.Знак, 1))
	|			ТОГДА ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоПоРНПТОстаток, 0)
	|		ИНАЧЕ ТоварыПереданные.КоличествоПоРНПТОстаток
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	ТоварыПереданные КАК ТоварыПереданные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПереданныеОстатки КАК ТоварыПереданныеОстатки
	|		ПО ТоварыПереданные.АналитикаУчетаНоменклатуры = ТоварыПереданныеОстатки.АналитикаУчетаНоменклатуры
	|			И ТоварыПереданные.НомерГТД = ТоварыПереданныеОстатки.НомерГТД
	|
	|ГДЕ
	|	ТоварыПереданные.КоличествоОстаток <> 0
	|	И ЕСТЬNULL(ТоварыПереданныеОстатки.КоличествоОстаток, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыПереданные.АналитикаУчетаНоменклатуры";
	
	ДатаЗаполнения	= ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДатаСеанса());
	Граница			= Новый Граница(КонецДня(ДатаЗаполнения), ВидГраницы.Включая);
	
	КомиссионерНеВедетУчетПоРНПТ = Не Справочники.СоглашенияСКлиентами.КомиссионерВедетУчетПоРНПТ(Объект.Соглашение)
									Или Не УчетПрослеживаемыхТоваровЛокализация.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(Объект.Дата);
	
	Запрос.УстановитьПараметр("Граница",		Граница);
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("Партнер",		Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение",		Объект.Соглашение);
	Запрос.УстановитьПараметр("КомиссионерНеВедетУчетПоРНПТ", КомиссионерНеВедетУчетПоРНПТ);
	
	Объект.Товары.Очистить();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Новый Структура("НалогообложениеНДС, Дата", Объект.НалогообложениеНДС, ДатаЗаполнения));
	КэшированныеЗначения = Неопределено;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КоличествоУпаковокУчет = НоваяСтрока.Количество;
		НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму", "КоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Дата", ДатаЗаполнения);
	ПараметрыЗаполнения.Вставить("Валюта", Объект.Валюта);
	ПараметрыЗаполнения.Вставить("Соглашение", Объект.Соглашение);
	ПараметрыЗаполнения.Вставить("НалогообложениеНДС", Объект.НалогообложениеНДС);
	ПараметрыЗаполнения.Вставить("ПоляЗаполнения", "Цена, СтавкаНДС, ВидЦены");
	
	ЦеныПредприятияЗаполнениеСервер.ЗаполнитьЦены(
		Объект.Товары,
		, // Массив строк или структура отбора
		ПараметрыЗаполнения,
		СтруктураДействий);
	
	Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма + ?(Объект.ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
		Если ЕстьСуммаПродажи Тогда
			СтрокаТаблицы.СуммаПродажи = СтрокаТаблицы.СуммаСНДС;
			СтрокаТаблицы.СуммаПродажиНДС = СуммаПродажиНДС(СтрокаТаблицы.СуммаПродажи, СтрокаТаблицы.СтавкаНДС);
			СтрокаТаблицы.ЦенаПродажи = ?(СтрокаТаблицы.КоличествоУпаковок <> 0, СтрокаТаблицы.СуммаПродажи / СтрокаТаблицы.КоличествоУпаковок, 0);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения колонки документа по данным учета.
//
// Параметры:
//	Объект - ДокументОбъект - Текущий документ
//	КонецПериода - Дата - Дата заполнения
//	ЕстьСуммаПродажи - Булево - В документе есть данные о сумме продажи
//	РассчитыватьВознаграждение - Булево - Признак необходимости расчета комиссионного вознаграждения.
//	НомерСтроки - Неопределено, Число - 
//
Процедура ПересчитатьОстаткиПоДаннымУчета(Объект, КонецПериода, ЕстьСуммаПродажи, РассчитыватьВознаграждение = Ложь, НомерСтроки  = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	Товары.Упаковка КАК Упаковка
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	&НомерСтроки = Неопределено
	|	ИЛИ Товары.НомерСтроки = &НомерСтроки
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Аналитика.КлючАналитики КАК КлючАналитики
	|
	|ПОМЕСТИТЬ ВтАналитика
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Товары КАК Товары
	|	ПО
	|		Аналитика.Номенклатура = Товары.Номенклатура
	|		И Аналитика.Характеристика = Товары.Характеристика
	|		И Аналитика.Серия = Товары.Серия
	|		И Аналитика.Назначение = Товары.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|ГДЕ
	|	Аналитика.МестоХранения = &Партнер
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Остатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	Остатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	Остатки.КоличествоОстаток КАК КоличествоУпаковокУчет
	|
	|ПОМЕСТИТЬ ТоварыПереданные
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Граница,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И АналитикаУчетаНоменклатуры В (
	|			ВЫБРАТЬ
	|				Аналитика.КлючАналитики
	|			ИЗ
	|				ВтАналитика КАК Аналитика
	|			)
	|	) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	НомерГТД,
	|	Серия
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Назначение КАК Назначение,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК Коэффициент,
	|	ЕСТЬNULL(ТоварыПереданные.КоличествоУпаковокУчет, 0) КАК КоличествоУпаковокУчет
	|ИЗ
	|	Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТоварыПереданные КАК ТоварыПереданные
	|	ПО
	|		Товары.Номенклатура = ТоварыПереданные.Номенклатура
	|		И Товары.Характеристика = ТоварыПереданные.Характеристика
	|		И Товары.НомерГТД = ТоварыПереданные.НомерГТД
	|		И Товары.Серия = ТоварыПереданные.Серия
	|		И Товары.Назначение = ТоварыПереданные.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.УпаковкиЕдиницыИзмерения КАК Упаковки
	|	ПО
	|		Товары.Упаковка = Упаковки.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Упаковки",
		"Товары.Номенклатура"));

	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.УстановитьПараметр("Соглашение", Объект.Соглашение);
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	
	ДатаЗаполнения = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДатаСеанса());
	Граница = Новый Граница(КонецДня(ДатаЗаполнения), ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Граница", Граница);
	
	Товары = Объект.Товары.Выгрузить();
	Запрос.УстановитьПараметр("Товары", Товары);
	
	КэшированныеЗначения = Неопределено;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", Новый Структура("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС));
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	Если ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
		УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
			Объект,
			СтруктураДействий,
			"Партнер");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы = Объект.Товары[Выборка.НомерСтроки - 1];
		КоличествоУпаковокУчет = ?(Выборка.Коэффициент <> 0, Окр(Выборка.КоличествоУпаковокУчет / Выборка.Коэффициент, 2, 1), 0);
		Если СтрокаТаблицы.КоличествоУпаковокУчет <> КоличествоУпаковокУчет Тогда
			
			СтрокаТаблицы.КоличествоУпаковокУчет = КоличествоУпаковокУчет;
			СтрокаТаблицы.КоличествоУпаковок = Выборка.КоличествоУпаковокУчет - СтрокаТаблицы.КоличествоУпаковокФакт;
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТаблицы, СтруктураДействий, КэшированныеЗначения);
			
			СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма + ?(Объект.ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
			Если ЕстьСуммаПродажи Тогда
				СтрокаТаблицы.СуммаПродажи = СтрокаТаблицы.ЦенаПродажи * СтрокаТаблицы.КоличествоУпаковок;
				СтрокаТаблицы.СуммаПродажиНДС = СуммаПродажиНДС(СтрокаТаблицы.СуммаПродажи, СтрокаТаблицы.СтавкаНДС);
			КонецЕсли;
			
			РассчитыватьВознаграждение = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет сумму с НДС в строках табличной части "Товары".
//
// Параметры:
//  Товары - ДанныеФормыКоллекция - таблица, в которой необходимо заполнить поле СуммаСНДС.
//  ЦенаВключаетНДС - Булево - признак включения НДС в цену.
//
Процедура ЗаполнитьСуммуСНДС(Товары, ЦенаВключаетНДС) Экспорт
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма
			+ ?(ЦенаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет сумму НДС продажи в строках табличной части "Товары".
//
// Параметры:
//  Товары - ДанныеФормыКоллекция - таблица, в которой необходимо заполнить поле СуммаПродажиНДС.
//
Процедура ЗаполнитьСуммуПродажиНДС(Товары) Экспорт
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		СтрокаТаблицы.СуммаПродажиНДС = СуммаПродажиНДС(СтрокаТаблицы.СуммаПродажи, СтрокаТаблицы.СтавкаНДС);
	КонецЦикла;
	
КонецПроцедуры

// Процедура рассчитывает комиссионное вознаграждение.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура, ДанныеФормыЭлементКоллекции - Текущий документ или текущая строка.
//	ПроцентНДС - Число - Процент НДС.
//
Процедура РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС) Экспорт
	
	Объект.СуммаНДСВознаграждения = Окр(Объект.СуммаВознаграждения * ПроцентНДС / (100 + ПроцентНДС), 2, РежимОкругления.Окр15как20);
	
КонецПроцедуры

// Процедура рассчитывает комиссионное вознаграждение построчно.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ.
//	ПроцентНДС - Число - Процент НДС.
//
Процедура РассчитатьСуммуНДСВознагражденияВСтроках(Объект, ПроцентНДС) Экспорт
	
	Для каждого СтрокаТоваров из Объект.Товары Цикл
		РассчитатьСуммуНДСВознаграждения(СтрокаТоваров, ПроцентНДС);
	КонецЦикла;
	
	Объект.СуммаНДСВознаграждения = Объект.Товары.Итог("СуммаНДСВознаграждения");
	
КонецПроцедуры

// Процедура рассчитывает комиссионное вознаграждение.
//
// Параметры:
//  Объект - ДанныеФормыКоллекция - объект, в котором осуществляется расчет.
//  КолонкаСуммы - Строка - имя колонки с суммой номенклатуры, для которой происходит расчет вознаграждения.
//  ЕстьСуммаНДСВСтроке - Булево - признак, что расчет суммы НДС вознаграждения происходит построчно.
//
Процедура РассчитатьСуммуВознаграждения(Объект, КолонкаСуммы = "СуммаПродажи", ЕстьСуммаНДСВСтроке = Ложь) Экспорт
	
	ПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(Объект.СтавкаНДСВознаграждения);
	
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		
		Если Объект.СпособРасчетаВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммыПродажиИСуммыКомитента Тогда
			СтрокаТоваров.СуммаВознаграждения = (СтрокаТоваров[КолонкаСуммы] - СтрокаТоваров.СуммаСНДС) * Объект.ПроцентВознаграждения / 100;
			
		ИначеЕсли Объект.СпособРасчетаВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи Тогда
			СтрокаТоваров.СуммаВознаграждения = СтрокаТоваров[КолонкаСуммы] * Объект.ПроцентВознаграждения / 100;
			
		Иначе
			СтрокаТоваров.СуммаВознаграждения = 0;
			
		КонецЕсли;
		
		Если ЕстьСуммаНДСВСтроке Тогда
			РассчитатьСуммуНДСВознаграждения(СтрокаТоваров, ПроцентНДС);
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.СуммаВознаграждения = Объект.Товары.Итог("СуммаВознаграждения");
	
	Если ЕстьСуммаНДСВСтроке Тогда
		Объект.СуммаНДСВознаграждения = Объект.Товары.Итог("СуммаНДСВознаграждения");
	Иначе
		РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС);
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет ставку НДС для комиссионного вознаграждения.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ
//	ПроцентНДС - Число - Процент НДС.
//  ЕстьСуммаНДСВСтроке - Булево - признак, что расчет суммы НДС вознаграждения происходит построчно.
//
Процедура ЗаполнитьСтавкуНДСкомиссионногоВознаграждения(Объект, ПроцентНДС, ЕстьСуммаНДСВСтроке = Ложь) Экспорт
	
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Объект.Организация, Объект.Дата);
	
	НалогообложениеНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
		
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		Объект.СтавкаНДСВознаграждения = ОбщегоНазначенияУТ.ЗначенияРеквизитовОбъектаПоУмолчанию(Объект.Услуга, "СтавкаНДС").СтавкаНДС;
		УчетНДСУП.СкорректироватьСтавкуНДС(Объект.СтавкаНДСВознаграждения, Объект.Дата);
	Иначе
		Объект.СтавкаНДСВознаграждения = Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
	ПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(Объект.СтавкаНДСВознаграждения);
	
	Если ЕстьСуммаНДСВСтроке Тогда
		РассчитатьСуммуНДСВознагражденияВСтроках(Объект, ПроцентНДС);
	Иначе
		РассчитатьСуммуНДСВознаграждения(Объект, ПроцентНДС);
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет сумму НДС комиссионного вознаграждения в табличной части документа.
//
// Параметры:
//  Товары - ТабличнаяЧасть - таблица, в которой осуществляется заполнение.
//  СуммаНДСВознаграждения - Число - сумма НДС вознаграждения.
//
Процедура ЗаполнитьСуммуНДСВознагражденияВТабличнойЧасти(Товары, Знач СуммаНДСВознаграждения) Экспорт
	
	ВсегоСуммаВознаграждения = Товары.Итог("СуммаВознаграждения");
	
	Для Каждого СтрокаТаблицы Из Товары Цикл
		
		СтрокаТаблицы.СуммаНДСВознаграждения = ?(ВсегоСуммаВознаграждения <> 0, Окр(СуммаНДСВознаграждения * СтрокаТаблицы.СуммаВознаграждения / ВсегоСуммаВознаграждения, 2, 1), 0);
		
		ВсегоСуммаВознаграждения = ВсегоСуммаВознаграждения - СтрокаТаблицы.СуммаВознаграждения;
		СуммаНДСВознаграждения = СуммаНДСВознаграждения - СтрокаТаблицы.СуммаНДСВознаграждения;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСтрокуПоТоварамКОформлениюОтчетовКомитентуЗаПериод(ТабличнаяЧасть,
																	ПараметрыЗаполнения,
																	ДанныеСтроки,
																	Количество,
																	СтруктураДействий,
																	КэшированныеЗначения)
	
	НоваяСтрока = ТабличнаяЧасть.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
	
	НоваяСтрока.Количество			= Количество;
	НоваяСтрока.КоличествоУпаковок	= Количество;
	
	Если ДанныеСтроки.Количество < Количество Тогда
		НоваяСтрока.СуммаПродажи = ДанныеСтроки.СуммаПродажи / ДанныеСтроки.Количество * Количество;
	КонецЕсли;
	
	НоваяСтрока.ЦенаПродажи = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.СуммаПродажи / НоваяСтрока.Количество, 0);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	Если ДанныеСтроки.ЕстьСуммаПродажиНДС Тогда
		НоваяСтрока.СуммаПродажиНДС = СуммаПродажиНДС(НоваяСтрока.СуммаПродажи, НоваяСтрока.СтавкаНДС);
	КонецЕсли;
	
КонецПроцедуры

Функция СуммаПродажиНДС(СуммаПродажи, СтавкаНДС) Экспорт
	
	СуммаПродажиНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СуммаПродажи, СтавкаНДС);
	Возврат Окр(СуммаПродажиНДС, 2, РежимОкругления.Окр15как20);
	
КонецФункции

#КонецОбласти
