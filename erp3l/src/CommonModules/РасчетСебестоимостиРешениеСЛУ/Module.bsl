///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм расчета себестоимости: подготовка и решение системы линейных уравнений
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Расчет стоимости в части резервов под обесценение.
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_РезервыПодОбесценениеЗапасов(ПараметрыРасчета) Экспорт
	
	// Формирует временные таблицы:
	// - ВтУзлыКорректировки
	//++ НЕ УТ
	// - СвязиУзловРезервовПодОбесценениеЗапасов
	//-- НЕ УТ
	ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	
	//++ НЕ УТ
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций
	РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций(ПараметрыРасчета);
	//-- НЕ УТ
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части стоимости товаров и трудозатрат.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, Трудозатраты
//	- СтоимостьРегл, СтоимостьЗабалансоваяРегл, ТрудозатратыРегл
//	- СтоимостьУпр, ТрудозатратыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_МатериальныеИТрудозатраты(ПараметрыРасчета) Экспорт
	
	// Формирует временные таблицы:
	// - ВтПеремещенияСписания
	ПодготовкаДанныхДляРешенияСЛУ(ПараметрыРасчета);
	
	Если ПараметрыРасчета.УчетныеПолитики.ФИФОВзвешенная.Количество() > 0 Тогда
		ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета); // корректировка ВтУзлыКорректировки
	КонецЕсли;
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьПредприятия
	РешитьСЛУПлатформой_СебестоимостьПредприятия(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_СебестоимостьОрганизаций(ПараметрыРасчета);
	
	// Обновляет временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты(ПараметрыРасчета);
	
	СохранитьСЛУ(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части дополнительных расходов по товарам и в части включения/исключения НДС.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ДопРасходы, ДопРасходыБезНДС
//	- СтоимостьРегл, ДопРасходыРегл
//	- СтоимостьУпр, ДопРасходыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ДополнительныеРасходы(ПараметрыРасчета) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие
	 И НЕ ПараметрыРасчета.РаспределениеДопРасходовМеждуПартиямиИТоварами Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ТаблицаРешений
	РешитьСЛУПлатформой_ДополнительныеРасходы(ПараметрыРасчета);
		
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы(ПараметрыРасчета);
	ЗарегистрироватьСтоимость_ДополнительныеРасходы(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
		
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
		
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет стоимости в части дополнительных расходов по товарам и в части включения/исключения НДС.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ДопРасходы, ДопРасходыБезНДС
//	- СтоимостьРегл, ДопРасходыРегл
//	- СтоимостьУпр, ДопРасходыУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ВключениеИсключениеНДС(ПараметрыРасчета) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	УзлыКорректировкиВключениеИсключениеНДС(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ОбновитьСтоимостьПартийТоваров_ВключениеИсключениеНДС(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТ

// Расчет стоимости в части постатейных производственных расходов.
// Рассчитываются ресурсы регистра "Себестоимость товаров":
//	- ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС
//	- ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл
//	- ПостояннаяРазница, ВременнаяРазница
//	- ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура РасчетСебестоимости_ПостатейныеРасходыИНалоговыйУчет(ПараметрыРасчета) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	// Этап 1: подготовка и расчет себестоимости в части постатейных расходов.
	
	// Формирует временные таблицы:
	//	- ВтУзлыКорректировкиПостатейныеРасходыНЗП
	//	- ВтТаблицаСвязейПостатейныеРасходы
	ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьПредприятия
	РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_СебестоимостьОрганизаций
	РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций(ПараметрыРасчета);
	
	// Этап 2: подготовка и расчет себестоимости с учетом резервов предстоящих расходов.
	// Формирует временные таблицы:
	// - РезервыПоУзлам
	// - ДетальныеРезервыПоУзлам
	ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета);
	
	// Постатейные расходы корректируются на размеры резервов предстоящих расходов
	РешитьСЛУПлатформой_РезервыПредстоящихРасходов(ПараметрыРасчета);
	
	//++ Локализация
	//
	// Этап 3: подготовка и расчет себестоимости в части постоянной и временной разницы.
	
	// Формирует временные таблицы:
	ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета);
	
	// Формирует временную таблицу:
	// - ВтТаблицаРешений_ПостояннаяРазница
	РешитьСЛУПлатформой_НалоговыйУчет(ПараметрыРасчета);
	
	//-- Локализация
	
	// Этап 3: Формирование таблиц стоимости партий и стоимости прочих расходов НЗП
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СкопироватьВременнуюТаблицу(ПараметрыРасчета, 
		"ВТСтоимостьПартийТоваров", "ВТСтоимостьПартийТоваровПредыдущая");
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТСтоимостьПартийТоваров");
	
	// Формирует временную таблицу:
	// - ВТСтоимостьПартийТоваров
	ПодготовкаДанныхДляСтоимостиПартийТоваров(ПараметрыРасчета);
		
	// Формирует временные таблицы:
	// - ВтСтоимостиНезавершенногоПроизводства
	// - ВтСтоимостиНезавершенногоПроизводстваРегл
	// - РезервыПредстоящихРасходов
	ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"ВтТаблицаРешений_СебестоимостьПредприятия");
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУ

// Этап "ПодготовкаДанныхДляРешенияСЛУ"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУ");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтПеремещенияСписания");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	//++ НЕ УТКА
	ТекстыЗапросов.Добавить(ТекстВтРаботыДляДавальца());
	//-- НЕ УТКА
	ТекстыЗапросов.Добавить(ТекстВтПеремещенияСписания());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстВтЕстьВозвратныеОтходы() Экспорт
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
		|ПОМЕСТИТЬ ЕстьВозвратныеОтходы
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|
		//++ НЕ УТ
		//++ Устарело_Производство21
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И ДД.Количество < 0
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) В (
		|		ТИП(Документ.РаспределениеВозвратныхОтходов)
		|		,ТИП(Документ.ВыпускПродукции)
		|		)
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.Сторно
		//-- Устарело_Производство21
		//-- НЕ УТ
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	Организация
		|";
КонецФункции

Функция ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты() // вт ВтУзлыКорректировки
	Возврат "
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ()                        КАК НомерУзла,
		|	Себестоимость.Организация                КАК Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета                КАК РазделУчета,
		|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.Партия КОНЕЦ)    КАК Партия,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.АналитикаФинансовогоУчета КОНЕЦ) КАК АналитикаФинансовогоУчета,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.ВидДеятельностиНДС КОНЕЦ) КАК ВидДеятельностиНДС,
		|
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	СУММА(Себестоимость.Количество)                  КАК Количество,
		|	СУММА(Себестоимость.Стоимость)                   КАК Стоимость,
		|	СУММА(Себестоимость.СтоимостьБезНДС)             КАК СтоимостьБезНДС,
		|	СУММА(Себестоимость.ДопРасходы)                  КАК ДопРасходы,
		|	СУММА(Себестоимость.ДопРасходыБезНДС)            КАК ДопРасходыБезНДС,
		|	СУММА(Себестоимость.СтоимостьЗабалансовая)       КАК СтоимостьЗабалансовая,
		|	СУММА(Себестоимость.Трудозатраты)                КАК Трудозатраты,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)   КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)   КАК ПостатейныеПеременныеСНДС,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	СУММА(Себестоимость.СтоимостьРегл)               КАК СтоимостьРегл,
		|	СУММА(Себестоимость.ДопРасходыРегл)              КАК ДопРасходыРегл,
		|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)   КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(Себестоимость.ТрудозатратыРегл)            КАК ТрудозатратыРегл,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)   КАК ПостатейныеПостоянныеРегл,
		|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)   КАК ПостатейныеПеременныеРегл,
		|	СУММА(Себестоимость.РезервПодОбесценениеРегл)    КАК РезервПодОбесценениеРегл,
		|	СУММА(Себестоимость.СтоимостьУпр)                КАК СтоимостьУпр,
		|	СУММА(Себестоимость.ДопРасходыУпр)               КАК ДопРасходыУпр,
		|	СУММА(Себестоимость.ТрудозатратыУпр)             КАК ТрудозатратыУпр,
		|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)    КАК ПостатейныеПостоянныеУпр,
		|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)    КАК ПостатейныеПеременныеУпр,
		|	СУММА(Себестоимость.РезервПодОбесценениеУпр)     КАК РезервПодОбесценениеУпр
		|ПОМЕСТИТЬ ВтУзлыКорректировки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Себестоимость.Организация,
		|		Себестоимость.АналитикаУчетаНоменклатуры,
		|		(ВЫБОР
		|			КОГДА Себестоимость.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			 И Себестоимость.Количество < 0
		|			 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
		|			ИНАЧЕ Себестоимость.РазделУчета КОНЕЦ) КАК РазделУчета,
		|		Себестоимость.ВидЗапасов,
		|		Себестоимость.Партия,
		|		Себестоимость.АналитикаУчетаПартий,
		|		Себестоимость.АналитикаФинансовогоУчета,
		|		Себестоимость.ВидДеятельностиНДС,
		// Количество товаров одно общее для всех видов учета. 
		|		(ВЫБОР
		// Сторно движения с типом записи "Корректировка приобретения" исключаются из начальной стоимости узлов расчета,
		// т.к. по этим записям выполняется расчет отклонений в стоимости в процедуре СкорректироватьСтоимостьСписанияЗапасов().
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|				ТОГДА Себестоимость.Количество
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.Количество
		|		 	КОГДА Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|			 И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|			 И Себестоимость.ВидДеятельностиНДС <> Себестоимость.ВидДеятельностиНДСОтгрузки
		|			 И Себестоимость.ВидДеятельностиНДСОтгрузки <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|				ТОГДА -Себестоимость.Количество 
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.Количество
		// Добавляются движения отчета комиссионера на возврат, если продажа была отражена в прошлом периоде.
		// Условия выборки должны соответствовать запросу формирования ВтРеализацииПрошлыхПериодов в общем модуле РасчетСебестоимостиКорректировкаСтоимости
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ 0 
		|		КОНЕЦ) КАК Количество,
		// Данные о суммах внешних поступлений.
		// Условия формирования суммовых показателей должны соответствовать функции ТекстСебестоимостьНалоговыйУчет().
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|		 	 И (Себестоимость.Количество = 0
		|				ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Стоимость
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.Стоимость
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Стоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Стоимость,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|		 	 И (Себестоимость.Количество = 0
		|				ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходы
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходы
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходы,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьЗабалансовая
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьЗабалансовая,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.Трудозатраты
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.Трудозатраты
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.Трудозатраты
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Трудозатраты,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеСНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеСНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеСНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеСНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеБезНДС
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
		|
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|		 	 И (Себестоимость.Количество = 0
		|				ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьЗабалансоваяРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ТрудозатратыРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ТрудозатратыРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ТрудозатратыРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТрудозатратыРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПеременныеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.РезервПодОбесценениеРегл
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.РезервПодОбесценениеРегл
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.РезервПодОбесценениеРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезервПодОбесценениеРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
		|		 	 И Себестоимость.СлужебноеВидДвиженияПриход
		|		 	 И (Себестоимость.Количество = 0
		|				ИЛИ &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие))
		|		 	 И (НЕ &ПредварительныйРасчет ИЛИ Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступление)
		|			 И Себестоимость.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|			 И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.Сторно И Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.СтоимостьУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ДопРасходыУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ДопРасходыУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопРасходыУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ТрудозатратыУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ТрудозатратыУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ТрудозатратыУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТрудозатратыУпр,
		|
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПостоянныеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостатейныеПеременныеУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостатейныеПеременныеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостатейныеПеременныеУпр,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.РезервПодОбесценениеУпр
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.РезервПодОбесценениеУпр
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.РезервПодОбесценениеУпр
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
		|		ПО Реестр.Организация = Себестоимость.Организация
		|			И Реестр.Ссылка = Себестоимость.ДокументИсточник
		|			И НЕ Реестр.ДополнительнаяЗапись
		|			И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
		|		ПО ЕстьВозвратныеОтходы.Организация = Себестоимость.Организация
		|			И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И ЕстьВозвратныеОтходы.ВидЗапасов = Себестоимость.ВидЗапасов
		|			И ЕстьВозвратныеОтходы.РазделУчета = Себестоимость.РазделУчета
		|
		// Уменьшение количества в узле при встречных перемещениях в один и тот же узел.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Себестоимость.Организация                   КАК Организация,
		|		Себестоимость.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Себестоимость.КорРазделУчета                КАК РазделУчета,
		|		Себестоимость.КорВидЗапасов                 КАК ВидЗапасов,
		|		Себестоимость.КорПартия                     КАК Партия,
		|		Себестоимость.КорАналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|		Себестоимость.КорАналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|		Себестоимость.КорВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		|
		|		-Себестоимость.Количество                   КАК Количество,
		|		0 КАК Стоимость,
		|		0 КАК СтоимостьБезНДС,
		|		0 КАК ДопРасходы,
		|		0 КАК ДопРасходыБезНДС,
		|		0 КАК СтоимостьЗабалансовая,
		|		0 КАК Трудозатраты,
		|		0 КАК ПостатейныеПостоянныеСНДС,
		|		0 КАК ПостатейныеПеременныеСНДС,
		|		0 КАК ПостатейныеПостоянныеБезНДС,
		|		0 КАК ПостатейныеПеременныеБезНДС,
		|		0 КАК СтоимостьРегл,
		|		0 КАК ДопРасходыРегл,
		|		0 КАК СтоимостьЗабалансоваяРегл,
		|		0 КАК ТрудозатратыРегл,
		|		0 КАК ПостатейныеПостоянныеРегл,
		|		0 КАК ПостатейныеПеременныеРегл,
		|		0 КАК РезервПодОбесценениеРегл,
		|		0 КАК СтоимостьУпр,
		|		0 КАК ДопРасходыУпр,
		|		0 КАК ТрудозатратыУпр,
		|		0 КАК ПостатейныеПостоянныеУпр,
		|		0 КАК ПостатейныеПеременныеУпр,
		|		0 КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|	ГДЕ
		|		 Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
		|		 И Себестоимость.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		 И Себестоимость.КорАналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|		 И Себестоимость.КорРазделУчета                = Себестоимость.РазделУчета
		|		 И Себестоимость.КорВидЗапасов                 = Себестоимость.ВидЗапасов
		|		 И Себестоимость.КорПартия                     = Себестоимость.Партия
		|		 И Себестоимость.КорАналитикаУчетаПартий       = Себестоимость.АналитикаУчетаПартий
		|		 И Себестоимость.КорАналитикаФинансовогоУчета  = Себестоимость.АналитикаФинансовогоУчета
		|		 И Себестоимость.КорВидДеятельностиНДС         = Себестоимость.ВидДеятельностиНДС
		|
		// Остатки на начало расчетного периода.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Остатки.Организация,
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|
		|		Остатки.КоличествоОстаток                  КАК Количество,
		|		Остатки.СтоимостьОстаток                   КАК Стоимость,
		|		Остатки.СтоимостьБезНДСОстаток             КАК СтоимостьБезНДС,
		|		Остатки.ДопРасходыОстаток                  КАК ДопРасходы,
		|		Остатки.ДопРасходыБезНДСОстаток            КАК ДопРасходыБезНДС,
		|		Остатки.СтоимостьЗабалансоваяОстаток       КАК СтоимостьЗабалансовая,
		|		Остатки.ТрудозатратыОстаток                КАК Трудозатраты,
		|		Остатки.ПостатейныеПостоянныеСНДСОстаток   КАК ПостатейныеПостоянныеСНДС,
		|		Остатки.ПостатейныеПеременныеСНДСОстаток   КАК ПостатейныеПеременныеСНДС,
		|		Остатки.ПостатейныеПостоянныеБезНДСОстаток КАК ПостатейныеПостоянныеБезНДС,
		|		Остатки.ПостатейныеПеременныеБезНДСОстаток КАК ПостатейныеПеременныеБезНДС,
		|		Остатки.СтоимостьРеглОстаток               КАК СтоимостьРегл,
		|		Остатки.ДопРасходыРеглОстаток              КАК ДопРасходыРегл,
		|		Остатки.СтоимостьЗабалансоваяРеглОстаток   КАК СтоимостьЗабалансоваяРегл,
		|		Остатки.ТрудозатратыРеглОстаток            КАК ТрудозатратыРегл,
		|		Остатки.ПостатейныеПостоянныеРеглОстаток   КАК ПостатейныеПостоянныеРегл,
		|		Остатки.ПостатейныеПеременныеРеглОстаток   КАК ПостатейныеПеременныеРегл,
		|		Остатки.РезервПодОбесценениеРеглОстаток    КАК РезервПодОбесценениеРегл,
		|		Остатки.СтоимостьУпрОстаток                КАК СтоимостьУпр,
		|		Остатки.ДопРасходыУпрОстаток               КАК ДопРасходыУпр,
		|		Остатки.ТрудозатратыУпрОстаток             КАК ТрудозатратыУпр,
		|		Остатки.ПостатейныеПостоянныеУпрОстаток    КАК ПостатейныеПостоянныеУпр,
		|		Остатки.ПостатейныеПеременныеУпрОстаток    КАК ПостатейныеПеременныеУпр,
		|		Остатки.РезервПодОбесценениеУпрОстаток     КАК РезервПодОбесценениеУпр
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&ГраницаНачалоПериода,
		|			Организация В (&МассивОрганизаций)
		|		) КАК Остатки
		|	) КАК Себестоимость
		|
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.Партия КОНЕЦ), // Партия
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.АналитикаУчетаПартий КОНЕЦ), // АналитикаУчетаПартий
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Себестоимость.АналитикаФинансовогоУчета КОНЕЦ), // АналитикаФинансовогоУчета
		|	(ВЫБОР
		|		КОГДА &РегламентноеЗадание
		|		 И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|		ИНАЧЕ Себестоимость.ВидДеятельностиНДС КОНЕЦ) // ВидДеятельностиНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	РазделУчета,
		|	ВидЗапасов,
		|	Партия,
		|	АналитикаУчетаПартий,
		|	АналитикаФинансовогоУчета,
		|	ВидДеятельностиНДС
		|";
КонецФункции

//++ НЕ УТКА
Функция ТекстВтРаботыДляДавальца() // вт ВтРаботыДляДавальца
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.РазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.АналитикаУчетаПартий КАК КорАналитикаУчетаПартий
		|ПОМЕСТИТЬ ВтРаботыДляДавальца
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|	И ДД.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	КорАналитикаУчетаНоменклатуры,
		|	КорВидЗапасов,
		|	КорАналитикаУчетаПартий
		|";
КонецФункции
//-- НЕ УТКА

Функция ТекстВтПеремещенияСписания() // вт ВтПеремещенияСписания, использует ВтРаботыДляДавальца

	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник            КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник            КАК НомерУзлаПриемник,
		|	Себестоимость.РеализацияВДругуюОрганизацию КАК РеализацияВДругуюОрганизацию,
		|	СУММА(Себестоимость.Количество)	           КАК ВесДуги,
		|	МАКСИМУМ(Себестоимость.РаботаДляДавальца)  КАК РаботаДляДавальца,
		|	МАКСИМУМ(Себестоимость.ПродукцияДавальца)  КАК ПродукцияДавальца
		|
		|ПОМЕСТИТЬ ВтПеремещенияСписания
		|ИЗ (
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
		|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|				ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
		|			КОГДА НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|				ТОГДА УзлыКорректировкиПриемникПередачи.НомерУзла
		|			ИНАЧЕ УзлыКорректировкиПриемник.НомерУзла КОНЕЦ) КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РеализацияВДругуюОрганизацию,
		|		Себестоимость.Количество,
		|		ЛОЖЬ КАК РаботаДляДавальца,
		|		(ВЫБОР
		|			КОГДА (ЛОЖЬ
		//++ НЕ УТКА
		|				ИЛИ НЕ РаботыДляДавальца.Регистратор ЕСТЬ NULL
		//-- НЕ УТКА
		|				) ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПродукцияДавальца
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета                 = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                  = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация                 = Себестоимость.Организация
		|			И (УзлыКорректировкиИсточник.Партия              	    = Себестоимость.Партия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаУчетаПартий        = Себестоимость.АналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаФинансовогоУчета   = Себестоимость.АналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.ВидДеятельностиНДС          = Себестоимость.ВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И (УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемникПередачи
		|		ПО
		|			УзлыКорректировкиПриемникПередачи.АналитикаУчетаНоменклатуры  = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемникПередачи.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемникПередачи.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемникПередачи.Организация               = Себестоимость.КорОрганизация
		|			И УзлыКорректировкиПриемникПередачи.Партия                    = Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемникПередачи.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемникПередачи.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемникПередачи.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|			И Себестоимость.РазделУчета    <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|			И Себестоимость.КорОрганизация <> Себестоимость.Организация
		|			И Себестоимость.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			ВтУзлыКорректировки КАК УзлыКорректировкиПриемникРеглУчет
		|		ПО
		|			УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаНоменклатуры 	= Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемникРеглУчет.РазделУчета 				= Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемникРеглУчет.ВидЗапасов 					= Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемникРеглУчет.Организация 				= Себестоимость.КорОрганизация
		|			И УзлыКорректировкиПриемникРеглУчет.Партия 						= Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемникРеглУчет.АналитикаУчетаПартий 		= Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемникРеглУчет.АналитикаФинансовогоУчета 	= Себестоимость.КорАналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемникРеглУчет.ВидДеятельностиНДС 			= Себестоимость.КорВидДеятельностиНДС
		|
		//++ НЕ УТКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|			ПО РаботыДляДавальца.Регистратор                  = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		//-- НЕ УТКА
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
		|		И НЕ (Себестоимость.Сторно
		|			И Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода)))
		//++ НЕ УТ
		|		И НЕ (Себестоимость.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		|			И Себестоимость.ДокументДвижения = Себестоимость.Регистратор)
		|		И НЕ (Себестоимость.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|			И Себестоимость.ДокументДвижения = Себестоимость.Регистратор)
		//-- НЕ УТ
		|		И (НЕ УзлыКорректировкиПриемник.НомерУзла ЕСТЬ NULL
		|			ИЛИ НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|			ИЛИ НЕ УзлыКорректировкиПриемникРеглУчет.НомерУзла ЕСТЬ NULL)
		// Исключим перемещения в тот же самый узел, кроме выпуска продукции
		|		И (УзлыКорректировкиИсточник.НомерУзла <>
		|			(ВЫБОР
		|				КОГДА Себестоимость.ХозяйственнаяОперация В (
		|				 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет),
		|				 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|					ТОГДА УзлыКорректировкиПриемникРеглУчет.НомерУзла
		|				КОГДА НЕ УзлыКорректировкиПриемникПередачи.НомерУзла ЕСТЬ NULL
		|					ТОГДА УзлыКорректировкиПриемникПередачи.НомерУзла
		|				ИНАЧЕ УзлыКорректировкиПриемник.НомерУзла КОНЕЦ)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции))
		|
		// Уменьшение веса дуг при возврате товаров от клиента или при корректировке реализации в минус,
		// если при возврате не меняется вид деятельности НДС.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ КАК РеализацияВДругуюОрганизацию,
		|		-Себестоимость.Количество КАК Количество,
		|		ЛОЖЬ КАК РаботаДляДавальца,
		|		ЛОЖЬ КАК ПродукцияДавальца
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДСОтгрузки
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|		И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|		И УзлыКорректировкиИсточник.НомерУзла <> УзлыКорректировкиПриемник.НомерУзла
		|
		//++ НЕ УТКА
		// В КА и УТ 11 нет производства из давальческого сырья
		// Распределение затрат на работы по выпуску продукции из давальческого сырья.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ КАК РеализацияВДругуюОрганизацию,
		|		Себестоимость.Количество,
		|		ИСТИНА КАК РаботаДляДавальца,
		|		ЛОЖЬ КАК ПродукцияДавальца
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРаботыДляДавальца КАК РаботыДляДавальца
		|		ПО РаботыДляДавальца.Регистратор                      = Себестоимость.Регистратор
		|			И РаботыДляДавальца.КорАналитикаУчетаНоменклатуры = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И РаботыДляДавальца.КорВидЗапасов                 = Себестоимость.КорВидЗапасов
		|			И РаботыДляДавальца.КорАналитикаУчетаПартий       = Себестоимость.КорАналитикаУчетаПартий
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = РаботыДляДавальца.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = РаботыДляДавальца.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = РаботыДляДавальца.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = РаботыДляДавальца.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		//-- НЕ УТКА
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник,
		|	Себестоимость.РеализацияВДругуюОрганизацию
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПоФИФОВзвешенная

Процедура ПодготовитьДанныеДляРасчетаСтоимостиПоФИФО(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);

	// Формирование таблицы узлов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.КоличествоОстаток
	|ПОМЕСТИТЬ ВТНачальныеОстатки
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаНачалоПериода,
	|			Организация В (&ОрганизацииСФИФОВзвешенная)
	|		) КАК Себестоимость
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	Себестоимость.Количество                    КАК КоличествоОстаток,
	|	Себестоимость.ДопРасходы                    КАК ДопРасходыОстаток,
	|	Себестоимость.ДопРасходыБезНДС              КАК ДопРасходыБезНДСОстаток,
	|	Себестоимость.Трудозатраты                  КАК ТрудозатратыОстаток,
	|	Себестоимость.ПостатейныеПостоянныеСНДС     КАК ПостатейныеПостоянныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПостоянныеБезНДС   КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеСНДС     КАК ПостатейныеПеременныеСНДСОстаток,
	|	Себестоимость.ПостатейныеПеременныеБезНДС   КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	Себестоимость.ДопРасходыРегл                КАК ДопРасходыРеглОстаток,
	|	Себестоимость.ТрудозатратыРегл              КАК ТрудозатратыРеглОстаток,
	|	Себестоимость.ПостатейныеПостоянныеРегл     КАК ПостатейныеПостоянныеРеглОстаток,
	|	Себестоимость.ПостатейныеПеременныеРегл     КАК ПостатейныеПеременныеРеглОстаток,
	|	Себестоимость.ДопРасходыУпр                 КАК ДопРасходыУпрОстаток,
	|	Себестоимость.ТрудозатратыУпр               КАК ТрудозатратыУпрОстаток,
	|	Себестоимость.ПостатейныеПостоянныеУпр      КАК ПостатейныеПостоянныеУпрОстаток,
	|	Себестоимость.ПостатейныеПеременныеУпр      КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ВТКонечныеОстатки
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.Организация В (&ОрганизацииСФИФОВзвешенная)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|
	|	СУММА(Себестоимость.Количество) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТПриходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И Себестоимость.Организация В (&ОрганизацииСФИФОВзвешенная)
	|	И (Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИЛИ НЕ &ПартионныйУчетВерсии22)
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период,
	|	КонечныеОстатки.Организация,
	|	КонечныеОстатки.АналитикаУчетаНоменклатуры,
	|	КонечныеОстатки.РазделУчета,
	|	КонечныеОстатки.ВидЗапасов,
	|	КонечныеОстатки.Партия,
	|	КонечныеОстатки.АналитикаУчетаПартий,
	|	КонечныеОстатки.АналитикаФинансовогоУчета,
	|	КонечныеОстатки.ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстаток,
	|	(ВЫБОР
	|		КОГДА КонечныеОстатки.КоличествоОстаток > 0 ТОГДА КонечныеОстатки.КоличествоОстаток
	|		ИНАЧЕ 0 КОНЕЦ) 																		КАК КоличествоОстатокНаКонецПериода,
	|	ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) КАК КоличествоПриход,
	|
	|	0 КАК СтоимостьОстаток,
	|	0 КАК СтоимостьБезНДСОстаток,
	|	0 КАК СтоимостьЗабалансоваяОстаток,
	|	0 КАК СтоимостьРеглОстаток,
	|	0 КАК СтоимостьЗабалансоваяРеглОстаток,
	|	0 КАК СтоимостьУпрОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьДопРасходыБезНДСОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеСНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДСОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		  И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеБезНДСОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ДопРасходыУпрОстаток /
	|					(ЕСТЬNULL(Приходы.КоличествоПриход, 0) + ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпрОстаток,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеРеглОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРеглОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ТрудозатратыУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПостоянныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпрОстаток,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > КонечныеОстатки.КоличествоОстаток
	|		 И ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0) > 0
	|			ТОГДА КонечныеОстатки.КоличествоОстаток * КонечныеОстатки.ПостатейныеПеременныеУпрОстаток /
	|					(ЕСТЬNULL(НачальныеОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(Приходы.КоличествоПриход, 0))
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ВТКонечныеОстатки КАК КонечныеОстатки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстатки КАК НачальныеОстатки
	|		ПО КонечныеОстатки.Организация = НачальныеОстатки.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = НачальныеОстатки.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = НачальныеОстатки.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = НачальныеОстатки.ВидЗапасов
	|		И КонечныеОстатки.Партия = НачальныеОстатки.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = НачальныеОстатки.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = НачальныеОстатки.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = НачальныеОстатки.ВидДеятельностиНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПриходы КАК Приходы
	|		ПО КонечныеОстатки.Организация = Приходы.Организация
	|		И КонечныеОстатки.АналитикаУчетаНоменклатуры = Приходы.АналитикаУчетаНоменклатуры
	|		И КонечныеОстатки.РазделУчета = Приходы.РазделУчета
	|		И КонечныеОстатки.ВидЗапасов = Приходы.ВидЗапасов
	|		И КонечныеОстатки.Партия = Приходы.Партия
	|		И КонечныеОстатки.АналитикаУчетаПартий = Приходы.АналитикаУчетаПартий
	|		И КонечныеОстатки.АналитикаФинансовогоУчета = Приходы.АналитикаФинансовогоУчета
	|		И КонечныеОстатки.ВидДеятельностиНДС = Приходы.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТНачальныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТКонечныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВТПриходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	СебестоимостьТоваров.Партия                                КАК Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|			ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|				И СебестоимостьТоваров.РазделУчета 				 = ТаблицаОстатков.РазделУчета
	|				И СебестоимостьТоваров.ВидЗапасов  				 = ТаблицаОстатков.ВидЗапасов
	|				И СебестоимостьТоваров.Организация 				 = ТаблицаОстатков.Организация
	|				И СебестоимостьТоваров.Партия 					 = ТаблицаОстатков.Партия
	|				И СебестоимостьТоваров.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|				И СебестоимостьТоваров.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|				И СебестоимостьТоваров.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|				И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.СлужебноеВидДвиженияПриход
	|	И СебестоимостьТоваров.Стоимость <> 0
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация,
	|	СебестоимостьТоваров.Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Период                                КАК Период,
	|	Себестоимость.Организация                           КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                           КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                            КАК ВидЗапасов,
	|	Себестоимость.Партия                                КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|	СУММА(Себестоимость.Количество)                     КАК Количество,
	|	СУММА(Себестоимость.Стоимость)                      КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)                КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)          КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.СтоимостьРегл)                  КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)      КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.СтоимостьУпр)                   КАК СтоимостьУпр
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыПартий.Период                                КАК Период,
	|		ПериодыПартий.Организация                           КАК Организация,
	|		ПериодыПартий.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|		ПериодыПартий.РазделУчета                           КАК РазделУчета,
	|		ПериодыПартий.ВидЗапасов                            КАК ВидЗапасов,
	|		ПериодыПартий.Партия                                КАК Партия,
	|		ПериодыПартий.АналитикаУчетаПартий                  КАК АналитикаУчетаПартий,
	|		ПериодыПартий.АналитикаФинансовогоУчета             КАК АналитикаФинансовогоУчета,
	|		ПериодыПартий.ВидДеятельностиНДС                    КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(Себестоимость.Количество, 0)               КАК Количество,
	|		ЕСТЬNULL(Себестоимость.Стоимость, 0)                КАК Стоимость,
	|		ЕСТЬNULL(Себестоимость.СтоимостьБезНДС, 0)          КАК СтоимостьБезНДС,
	|		ЕСТЬNULL(Себестоимость.СтоимостьЗабалансовая, 0)    КАК СтоимостьЗабалансовая,
	|		ЕСТЬNULL(Себестоимость.СтоимостьРегл, 0)            КАК СтоимостьРегл,
	|		ЕСТЬNULL(Себестоимость.СтоимостьЗабалансоваяРегл, 0) КАК СтоимостьЗабалансоваяРегл,
	|		ЕСТЬNULL(Себестоимость.СтоимостьУпр, 0)             КАК СтоимостьУпр
	|	ИЗ
	|		ТаблицаПериодыПартий КАК ПериодыПартий
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|			ПО ПериодыПартий.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
	|				И ПериодыПартий.РазделУчета               = Себестоимость.РазделУчета
	|				И ПериодыПартий.ВидЗапасов                = Себестоимость.ВидЗапасов
	|				И ПериодыПартий.Организация               = Себестоимость.Организация
	|				И ПериодыПартий.Партия                    = Себестоимость.Партия
	|				И ПериодыПартий.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
	|				И ПериодыПартий.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
	|				И ПериодыПартий.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
	|				И Себестоимость.СлужебноеВидДвиженияПриход
	|				И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|				И (Себестоимость.ХозяйственнаяОперация В (&МассивОперацийПоступлениеВнешнее))
	|				И Себестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	) КАК Себестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВнешнихПоступлений.Период КАК Период,
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов,
	|	ТаблицаОстатков.Партия,
	|	ТаблицаОстатков.АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаОстатков.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода,
	|	ТаблицаОстатков.КоличествоПриход,
	|
	|	ТаблицаОстатков.СтоимостьОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьОстаток,
	|
	|	ТаблицаОстатков.СтоимостьБезНДСОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьБезНДСОстаток,
	|
	|	ТаблицаОстатков.СтоимостьЗабалансоваяОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансовая, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьЗабалансоваяОстаток,
	|
	|	ТаблицаОстатков.СтоимостьРеглОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьРеглОстаток,
	|
	|	ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьЗабалансоваяРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьЗабалансоваяРеглОстаток,
	|
	|	ТаблицаОстатков.СтоимостьУпрОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьУпр, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьУпрОстаток,
	|
	|	ТаблицаОстатков.СтоимостьДопРасходыОстаток          КАК НоваяСтоимостьДопРасходыОстаток,
	|	ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток    КАК НоваяСтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаОстатков.ТрудозатратыОстаток                 КАК НоваяТрудозатратыОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток    КАК НоваяПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток  КАК НоваяПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток    КАК НоваяПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток  КАК НоваяПостатейныеПеременныеБезНДСОстаток,
	|
	|	ТаблицаОстатков.ДопРасходыРеглОстаток               КАК НоваяДопРасходыРеглОстаток,
	|	ТаблицаОстатков.ТрудозатратыРеглОстаток             КАК НоваяТрудозатратыРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток    КАК НоваяПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток    КАК НоваяПостатейныеПеременныеРеглОстаток,
	|
	|	ТаблицаОстатков.ДопРасходыУпрОстаток                КАК НоваяДопРасходыУпрОстаток,
	|	ТаблицаОстатков.ТрудозатратыУпрОстаток              КАК НоваяТрудозатратыУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток     КАК НоваяПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток     КАК НоваяПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры 	= ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация 				= ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета 				= ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  				= ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.Партия                    = ТаблицаВнешнихПоступлений.Партия
	|			И ТаблицаОстатков.АналитикаУчетаПартий      = ТаблицаВнешнихПоступлений.АналитикаУчетаПартий
	|			И ТаблицаОстатков.АналитикаФинансовогоУчета = ТаблицаВнешнихПоступлений.АналитикаФинансовогоУчета
	|			И ТаблицаОстатков.ВидДеятельностиНДС        = ТаблицаВнешнихПоступлений.ВидДеятельностиНДС
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Период,
	|	ТаблицаНовыхОстатков.Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов,
	|	ТаблицаНовыхОстатков.Партия,
	|	ТаблицаНовыхОстатков.АналитикаУчетаПартий,
	|	ТаблицаНовыхОстатков.АналитикаФинансовогоУчета,
	|	ТаблицаНовыхОстатков.ВидДеятельностиНДС,
	|
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.КоличествоПриход,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьОстаток                   КАК СтоимостьОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьБезНДСОстаток             КАК СтоимостьБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяОстаток       КАК СтоимостьЗабалансоваяОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьРеглОстаток               КАК СтоимостьРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьЗабалансоваяРеглОстаток   КАК СтоимостьЗабалансоваяРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьУпрОстаток                КАК СтоимостьУпрОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыОстаток         КАК СтоимостьДопРасходыОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьДопРасходыБезНДСОстаток   КАК СтоимостьДопРасходыБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыОстаток                КАК ТрудозатратыОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеСНДСОстаток   КАК ПостатейныеПостоянныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеБезНДСОстаток КАК ПостатейныеПостоянныеБезНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеСНДСОстаток   КАК ПостатейныеПеременныеСНДСОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеБезНДСОстаток КАК ПостатейныеПеременныеБезНДСОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяДопРасходыРеглОстаток              КАК ДопРасходыРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыРеглОстаток            КАК ТрудозатратыРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеРеглОстаток   КАК ПостатейныеПостоянныеРеглОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеРеглОстаток   КАК ПостатейныеПеременныеРеглОстаток,
	|
	|	ТаблицаНовыхОстатков.НоваяДопРасходыУпрОстаток               КАК ДопРасходыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяТрудозатратыУпрОстаток             КАК ТрудозатратыУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПостоянныеУпрОстаток    КАК ПостатейныеПостоянныеУпрОстаток,
	|	ТаблицаНовыхОстатков.НоваяПостатейныеПеременныеУпрОстаток    КАК ПостатейныеПеременныеУпрОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	
	Пока Истина Цикл 
		
		// Максимальное количество выполнений запроса = максимальному количеству поступлений товара на склад.
		РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
		
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
			ПараметрыРасчета,
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ТаблицаОстатков"));
		
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.НомерУзла                  КАК НомерУзла,
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Партия                     КАК Партия,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	ТаблицаУзлыКорректировки.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Количество
	|		ИНАЧЕ ТаблицаУзлыКорректировки.Количество
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КОНЕЦ) КАК Количество,
	|
	// Ресурсы для расчета себестоимости товаров предприятия.
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Стоимость
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0) 
	|	КОНЕЦ                                 КАК Стоимость,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьЗабалансовая
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьЗабалансовая - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьЗабалансовая,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходы
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходы - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыОстаток, 0) 
	|	КОНЕЦ                                 КАК ДопРасходы,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьДопРасходыБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ДопРасходыБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.Трудозатраты
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.Трудозатраты - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыОстаток, 0) 
	|	КОНЕЦ                                 КАК Трудозатраты,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеСНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеСНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеСНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеСНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеБезНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеБезНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеСНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.Стоимость - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеСНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеСНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеСНДС,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеБезНДС
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьБезНДС - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеБезНДС - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеБезНДСОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеБезНДС,
	|
	// Ресурсы для расчета себестоимости товаров организаций (регламентированный учет).
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ                                 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьЗабалансоваяРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьЗабалансоваяРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьЗабалансоваяРеглОстаток, 0) 
	|	КОНЕЦ                                 КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыРегл - ЕСТЬNULL(ТаблицаОстатков.ДопРасходыРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ДопРасходыРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ТрудозатратыРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ТрудозатратыРегл - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ТрудозатратыРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеРегл - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеРегл
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьРегл - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеРегл - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеРеглОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеРегл,
	|
	// Ресурсы для расчета себестоимости товаров организаций (управленческий учет).
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.СтоимостьУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)
	|	КОНЕЦ                                 КАК СтоимостьУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ДопРасходыУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ДопРасходыУпр - ЕСТЬNULL(ТаблицаОстатков.ДопРасходыУпрОстаток, 0)
	|	КОНЕЦ                                              КАК ДопРасходыУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ТрудозатратыУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ТрудозатратыУпр - ЕСТЬNULL(ТаблицаОстатков.ТрудозатратыУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ТрудозатратыУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПостоянныеУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПостоянныеУпр - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПостоянныеУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПостоянныеУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = ЕСТЬNULL(ТаблицаОстатков.КоличествоПриход, 0)
	|			ТОГДА ТаблицаУзлыКорректировки.ПостатейныеПеременныеУпр
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ТаблицаУзлыКорректировки.СтоимостьУпр - ЕСТЬNULL(ТаблицаОстатков.СтоимостьУпрОстаток, 0)) = 0
	|			И ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0) <> 0
	|			ТОГДА 0	
	|		ИНАЧЕ
	|			ТаблицаУзлыКорректировки.ПостатейныеПеременныеУпр - ЕСТЬNULL(ТаблицаОстатков.ПостатейныеПеременныеУпрОстаток, 0)
	|	КОНЕЦ                                 КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировкиВременная
	|ИЗ
	|	ВтУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры   = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета               = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов                = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация               = ТаблицаОстатков.Организация
	|			И ТаблицаУзлыКорректировки.Партия 					 = ТаблицаОстатков.Партия
	|			И ТаблицаУзлыКорректировки.АналитикаУчетаПартий 	 = ТаблицаОстатков.АналитикаУчетаПартий
	|			И ТаблицаУзлыКорректировки.АналитикаФинансовогоУчета = ТаблицаОстатков.АналитикаФинансовогоУчета
	|			И ТаблицаУзлыКорректировки.ВидДеятельностиНДС 		 = ТаблицаОстатков.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.НомерУзла КАК НомерУзла,
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Партия КАК Партия,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	// Ресурсы для расчета себестоимости товаров предприятия.
	|	Т.Количество                  КАК Количество,
	|	Т.Стоимость                   КАК Стоимость,
	|	Т.СтоимостьБезНДС             КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая       КАК СтоимостьЗабалансовая,
	|	Т.ДопРасходы                  КАК ДопРасходы,
	|	Т.ДопРасходыБезНДС            КАК ДопРасходыБезНДС,
	|	Т.Трудозатраты                КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС   КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПеременныеСНДС   КАК ПостатейныеПеременныеСНДС,
	|	Т.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	Т.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	// Ресурсы для расчета себестоимости товаров организаций.
	|	Т.СтоимостьРегл               КАК СтоимостьРегл,
	|	Т.ДопРасходыРегл              КАК ДопРасходыРегл,
	|	Т.СтоимостьЗабалансоваяРегл   КАК СтоимостьЗабалансоваяРегл,
	|	Т.ТрудозатратыРегл            КАК ТрудозатратыРегл,
	|	Т.СтоимостьУпр                КАК СтоимостьУпр,
	|	Т.ДопРасходыУпр               КАК ДопРасходыУпр,
	|	Т.ТрудозатратыУпр             КАК ТрудозатратыУпр,
	|	Т.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	Т.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	|	Т.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	Т.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|ИЗ
	|	ВтУзлыКорректировкиВременная КАК Т
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ВтУзлыКорректировкиВременная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУДополнительныеРасходы

// Этап "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"УзлыКорректировкиДополнительныхРасходов,
		|СвязиУзловДополнительныхРасходов,
		|СвязиУзловПроизводственныхРасходовПрошлыхПериодов");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

Функция ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(РасчетСебестоимостиКорректировкаСтоимости.ТекстСуммыПрочихРасходов());
	ТекстыЗапросов.Добавить(ТекстУзлыКорректировкиДополнительныхРасходов());
	ТекстыЗапросов.Добавить(ТекстСвязиУзловДополнительныхРасходов());
	ТекстыЗапросов.Добавить(ТекстСвязиУзловПроизводственныхРасходовПрошлыхПериодов());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстУзлыКорректировкиДополнительныхРасходов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Т.НомерУзла) КАК НомерУзла
		|ПОМЕСТИТЬ МаксимальныеНомераУзловТоваров
		|ИЗ
		|	ВтУзлыКорректировки КАК Т
		|;
		|
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерУзла,
		|	Источник.Организация,
		|	Источник.Подразделение,
		|	Источник.СтатьяРасходов,
		|	Источник.АналитикаРасходов,
		|	Источник.НаправлениеДеятельности,
		|	Источник.ВесСНДС,
		|	Источник.ВесБезНДС,
		|	Источник.ВесРегл,
		|	Источник.ВесУпр
		|ПОМЕСТИТЬ УзлыКорректировкиДополнительныхРасходовПредварительная
		|ИЗ
		|	(ВЫБРАТЬ
		|		Реквизиты.Организация,
		|		Реквизиты.Подразделение,
		|		Реквизиты.СтатьяРасходов,
		|		Реквизиты.АналитикаРасходов,
		|		Реквизиты.НаправлениеДеятельности,
		|		СУММА(Источник.ДоляСтоимости) КАК ВесСНДС,
		|		СУММА(Источник.ДоляСтоимостиБезНДС) КАК ВесБезНДС,
		|		СУММА(Источник.ДоляСтоимостиРегл) КАК ВесРегл,
		|		СУММА(Источник.ДоляСтоимостиУпр) КАК ВесУпр
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Источник
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Источник.Регистратор = Реквизиты.Ссылка
		|
		|	СГРУППИРОВАТЬ ПО
		|		Реквизиты.Организация,
		|		Реквизиты.Подразделение,
		|		Реквизиты.СтатьяРасходов,
		|		Реквизиты.АналитикаРасходов,
		|		Реквизиты.НаправлениеДеятельности) КАК Источник
		|;
		|
		|ВЫБРАТЬ
		|	Источник.НомерУзла + ЕСТЬNULL(НомераУзлов.НомерУзла, 0) КАК НомерУзла,
		|	Источник.Организация,
		|	Источник.Подразделение,
		|	Источник.СтатьяРасходов,
		|	Источник.АналитикаРасходов,
		|	Источник.НаправлениеДеятельности,
		|	Источник.ВесСНДС,
		|	Источник.ВесБезНДС,
		|	Источник.ВесРегл,
		|	Источник.ВесУпр,
		|	ЕСТЬNULL(СуммыРасходовУпр.Сумма, 0)              КАК СтоимостьСНДС,
		|	ЕСТЬNULL(СуммыРасходовУпр.СуммаБезНДС, 0)        КАК СтоимостьБезНДС,
		|	ЕСТЬNULL(СуммыРасходовУпр.СуммаУпр, 0)           КАК СтоимостьУпр,
		|	ЕСТЬNULL(СуммыРасходовРегл.СуммаРегл, 0)         КАК СтоимостьРегл,
		|	ЕСТЬNULL(СуммыРасходовРегл.ПостояннаяРазница, 0) КАК ПостояннаяРазница,
		|	ЕСТЬNULL(СуммыРасходовРегл.ВременнаяРазница, 0)  КАК ВременнаяРазница
		|ПОМЕСТИТЬ УзлыКорректировкиДополнительныхРасходов
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходовПредварительная КАК Источник
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Источник.СтатьяРасходов
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеНомераУзловТоваров КАК НомераУзлов
		|		ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРасходов КАК СуммыРасходовУпр
		|		ПО СуммыРасходовУпр.Организация = Источник.Организация
		|			И СуммыРасходовУпр.СтатьяРасходов = Источник.СтатьяРасходов
		|			И СуммыРасходовУпр.АналитикаРасходов = Источник.АналитикаРасходов
		|			И СуммыРасходовУпр.Подразделение = Источник.Подразделение
		|			И СуммыРасходовУпр.НаправлениеДеятельности = Источник.НаправлениеДеятельности
		|			И Статьи.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРасходов КАК СуммыРасходовРегл
		|		ПО СуммыРасходовРегл.Организация = Источник.Организация
		|			И СуммыРасходовРегл.СтатьяРасходов = Источник.СтатьяРасходов
		|			И СуммыРасходовРегл.АналитикаРасходов = Источник.АналитикаРасходов
		|			И СуммыРасходовРегл.Подразделение = Источник.Подразделение
		|			И СуммыРасходовРегл.НаправлениеДеятельности = Источник.НаправлениеДеятельности
		|			И (Статьи.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|				ИЛИ Статьи.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстСвязиУзловДополнительныхРасходов()
	Возврат 
		"ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник    КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник    КАК НомерУзлаПриемник,
		|	СУММА(Себестоимость.ВесДугиСНДС)   КАК ВесДугиСНДС,
		|	СУММА(Себестоимость.ВесДугиБезНДС) КАК ВесДугиБезНДС,
		|	СУММА(Себестоимость.ВесДугиРегл)   КАК ВесДугиРегл,
		|	СУММА(Себестоимость.ВесДугиУпр)    КАК ВесДугиУпр,
		|	МАКСИМУМ(Себестоимость.ПринимаемыеВНУ)            КАК ПринимаемыеВНУ,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВБухУчете) КАК НеРаспределяетсяВБухУчете,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВНалУчете) КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ СвязиУзловДополнительныхРасходов
		|ИЗ (
		// Списание материалов на дополнительные расходы
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла  КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла  КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиСНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			И Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ Себестоимость.ХозяйственнаяОперация = 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиУпр,
		|	ЕСТЬNULL(Себестоимость.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|	ЛОЖЬ КАК НеРаспределяетсяВБухУчете,
		|	ЛОЖЬ КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
		|		ПО КорОрганизации.Ссылка = Себестоимость.КорОрганизация
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.СтатьяРасходов               = Себестоимость.СтатьяРасходовСписания
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Себестоимость.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Себестоимость.КорНаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.Подразделение             = Себестоимость.Подразделение
		|			И УзлыКорректировкиПриемник.Организация               = ЕСТЬNULL(КорОрганизации.Ссылка, Себестоимость.Организация)
		|	ГДЕ
		|		Себестоимость.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		//++ НЕ УТ
		// Исключим выпуски по фиксированной стоимости со списанием на расходы т.к. их стоимость уже учтена в регистре прочих расходов
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ПроизводствоБезЗаказа И Себестоимость.Стоимость > 0)
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ОтчетПереработчика И Себестоимость.Стоимость > 0)
		//-- НЕ УТ
		//++ НЕ УТКА
		|		И НЕ (Себестоимость.Регистратор Ссылка Документ.ЭтапПроизводства2_2 И Себестоимость.Стоимость > 0)
		//-- НЕ УТКА
		// Исключение сторно списания расходов с возвратом прошлого периода, т.к. стоимость рассчитывается на шаге СкорректироватьСтоимостьВозвратовПрошлыхПериодов
		|		И НЕ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы) 
		|			И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов))
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Распределение дополнительных расходов на товары
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		Доли.ДоляСтоимости                  КАК ВесДугиСНДС,
		|		Доли.ДоляСтоимостиБезНДС            КАК ВесДугиБезНДС,
		|		Доли.ДоляСтоимостиРегл              КАК ВесДугиРегл,
		|		Доли.ДоляСтоимостиУпр               КАК ВесДугиУпр,
		|		ЕСТЬNULL(Реквизиты.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		Реквизиты.НалоговыйУчет
		|			И НЕ Реквизиты.РегламентированныйУчет КАК НеРаспределяетсяВБухУчете,
		|		Реквизиты.РегламентированныйУчет
		|			И НЕ Реквизиты.НалоговыйУчет КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Доли
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиИсточник
		|			ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|				И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|				И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|				И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|				И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|			ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
		|					= Доли.КорАналитикаУчетаНоменклатуры
		|				И УзлыКорректировкиПриемник.РазделУчета               = Доли.КорРазделУчета
		|				И УзлыКорректировкиПриемник.Организация               = Доли.КорОрганизация
		|				И УзлыКорректировкиПриемник.ВидЗапасов                = Доли.КорВидЗапасов
		|				И УзлыКорректировкиПриемник.Партия                    = Доли.КорПартия
		|				И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Доли.КорАналитикаУчетаПартий
		|				И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Доли.КорАналитикаФинансовогоУчета
		|				И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Доли.КорВидДеятельностиНДС
		|	ГДЕ
		|		Доли.ХозяйственнаяОперация = НЕОПРЕДЕЛЕНО
		|		И Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|		ИЛИ Доли.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";
КонецФункции

Функция ТекстСвязиУзловПроизводственныхРасходовПрошлыхПериодов()
	Возврат 
		"ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		Доли.КорОрганизация					КАК Организация,
		|		Доли.КорПодразделение				КАК Подразделение,
		|		Доли.КорСтатьяРасходов				КАК СтатьяРасходов,
		|		Доли.КорАналитикаРасходов			КАК АналитикаРасходов,
		|		Доли.КорНаправлениеДеятельности		КАК НаправлениеДеятельности,
		|		Доли.ДоляСтоимости                  КАК ВесДугиСНДС,
		|		Доли.ДоляСтоимостиБезНДС            КАК ВесДугиБезНДС,
		|		Доли.ДоляСтоимостиРегл              КАК ВесДугиРегл,
		|		Доли.ДоляСтоимостиУпр               КАК ВесДугиУпр
		|ПОМЕСТИТЬ СвязиУзловПроизводственныхРасходовПрошлыхПериодов
		|	ИЗ
		|		ДолиДополнительныхРасходов КАК Доли
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|			ПО Доли.Регистратор = Реквизиты.Ссылка
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировкиИсточник
		|			ПО Реквизиты.СтатьяРасходов = УзлыКорректировкиИсточник.СтатьяРасходов
		|				И Реквизиты.АналитикаРасходов = УзлыКорректировкиИсточник.АналитикаРасходов
		|				И Реквизиты.НаправлениеДеятельности = УзлыКорректировкиИсточник.НаправлениеДеятельности
		|				И Реквизиты.Подразделение = УзлыКорректировкиИсточник.Подразделение
		|				И Реквизиты.Организация = УзлыКорректировкиИсточник.Организация
		|
		|	ГДЕ
		|		Доли.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|		И Доли.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУВключениеИсключениеНДС

Процедура УзлыКорректировкиВключениеИсключениеНДС(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "УзлыКорректировкиВключениеИсключениеНДС");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ВыборкаДанных

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	СУММА(Себестоимость.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьУпр) КАК СтоимостьУпр
	|ПОМЕСТИТЬ СтоимостьНДС
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВключениеИсключениеНДСВСтоимости)
	|	И Себестоимость.РасчетПартий
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла,           
	|
	|	СтоимостьНДС.СтоимостьРегл КАК СтоимостьРегл,
	|	СтоимостьНДС.СтоимостьУпр  КАК СтоимостьУпр
	|ПОМЕСТИТЬ УзлыКорректировкиВключениеИсключениеНДС
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьНДС КАК СтоимостьНДС
	|	ПО СтоимостьНДС.Организация                   = УзлыКорректировки.Организация
	|		И СтоимостьНДС.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
	|		И СтоимостьНДС.РазделУчета                = УзлыКорректировки.РазделУчета
	|		И СтоимостьНДС.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
	|		И СтоимостьНДС.Партия                     = УзлыКорректировки.Партия
	|		И СтоимостьНДС.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
	|		И СтоимостьНДС.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
	|		И СтоимостьНДС.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
	|";
	#КонецОбласти
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВтУзлыКорректировки");
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУРезервыПодОбесценениеЗапасов

// Этап "ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета,
		"ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов");
	
	ТаблицыКСохранению = Новый Массив;
	ТаблицыКСохранению.Добавить("ВтУзлыКорректировки");
	//++ НЕ УТ
	ТаблицыКСохранению.Добавить("СвязиУзловРезервовПодОбесценениеЗапасов");
	//-- НЕ УТ
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		СтрСоединить(ТаблицыКСохранению, ","));
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

Функция ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстВтЕстьВозвратныеОтходы());
	ТекстыЗапросов.Добавить(ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты());
	//++ НЕ УТ
	ТекстыЗапросов.Добавить(ТекстСвязиУзловРезервовПодОбесценениеЗапасов());
	//-- НЕ УТ

	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстСвязиУзловРезервовПодОбесценениеЗапасов()

	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник            КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник            КАК НомерУзлаПриемник,
		|	МАКСИМУМ(Себестоимость.ПереноситьРезерв)   КАК ПереноситьРезерв,
		|	СУММА(Себестоимость.Количество)	           КАК ВесДуги
		|
		|ПОМЕСТИТЬ СвязиУзловРезервовПодОбесценениеЗапасов
		|ИЗ (
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		(АналитикаНоменклатурыИсточник.Номенклатура = АналитикаНоменклатурыПриемник.Номенклатура
		|			И АналитикаНоменклатурыИсточник.Характеристика = АналитикаНоменклатурыПриемник.Характеристика
		|			И НЕ ТИПЗНАЧЕНИЯ(Себестоимость.КорПартия) = ТИП(Справочник.ПартииПроизводства)) КАК ПереноситьРезерв,
		|		Себестоимость.Количество
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета                 = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                  = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация                 = Себестоимость.Организация
		|			И (УзлыКорректировкиИсточник.Партия              	    = Себестоимость.Партия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаУчетаПартий        = Себестоимость.АналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.АналитикаФинансовогоУчета   = Себестоимость.АналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиИсточник.ВидДеятельностиНДС          = Себестоимость.ВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры = АналитикаНоменклатурыИсточник.КлючАналитики
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.КорРазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И (УзлыКорректировкиПриемник.Партия                    = Себестоимость.КорПартия
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.КорАналитикаУчетаПартий
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.КорАналитикаФинансовогоУчета
		|				ИЛИ &РегламентноеЗадание)
		|			И (УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.КорВидДеятельностиНДС
		|				ИЛИ &РегламентноеЗадание)
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры = АналитикаНоменклатурыПриемник.КлючАналитики
		|
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		|		И УзлыКорректировкиИсточник.НомерУзла <> УзлыКорректировкиПриемник.НомерУзла
		// Исключаем работы.
		|		И НЕ Себестоимость.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|
		// Уменьшение веса дуг при возврате товаров от клиента или при корректировке реализации в минус,
		// если при возврате не меняется вид деятельности НДС.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
		|		ЛОЖЬ,
		|		-Себестоимость.Количество КАК Количество
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.КорАналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.КорВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДСОтгрузки
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиПриемник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиПриемник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|	ГДЕ
		|		НЕ Себестоимость.СлужебноеВидДвиженияПриход
		|		И НЕ Себестоимость.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
		|		И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
		|		И УзлыКорректировкиИсточник.НомерУзла <> УзлыКорректировкиПриемник.НомерУзла
		|	) КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";
КонецФункции

//-- НЕ УТ

#КонецОбласти

//++ НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы

// Этап "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиПостатейныеРасходыНЗП,
		//++ Локализация
		|ВтНезавершенноеПроизводствоВключениеИсключениеНДС,
		//-- Локализация
		|ДокументыДвиженияРезервов, РезервыПоРасходам, ВтТаблицаСвязейПостатейныеРасходы");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(РасчетСебестоимостиКорректировкаСтоимости.ТекстВтНезавершенноеПроизводство());
	ТекстыЗапросов.Добавить(ТекстВтСписанияНаСтатьиИзОВЗ());
	ТекстыЗапросов.Добавить(ТекстУзлыКорректировкиПостатейныеРасходыНЗП());
	ТекстыЗапросов.Добавить(ТекстВтВыпуски());
	ТекстыЗапросов.Добавить(ТекстВтТаблицаСвязейПостатейныеРасходы());
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстУзлыКорректировкиПостатейныеРасходыНЗП() // вт ВтУзлыКорректировкиПостатейныеРасходыНЗП
	
	#Область ТекстЗапросаПоследнихНомеров
	ТекстЗапросаОпределенияДанных = "
		|	ВЫБРАТЬ
		|		0 КАК НомерУзла,
		|		0 КАК НомерУзлаНЗП,
		|		0 КАК НомерУзлаРезервов,
		|		0 КАК НомерУзлаТранзитовОВЗ
		|";

	ТекстЗапросаПоследнийНомерУзлыКорректировкиДополнительныхРасходов = "
		|	ВЫБРАТЬ
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		УзлыКорректировкиДополнительныхРасходов КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтУзлыКорректировки = "
		|	ВЫБРАТЬ
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ВтУзлыКорректировки КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтНезавершенноеПроизводство = "
		|	ВЫБРАТЬ
		|		0,
		|		МАКСИМУМ(Т.НомерУзла),
		|		0,
		|		0
		|	ИЗ
		|		ВтНезавершенноеПроизводство КАК Т
		|";

	ТекстЗапросаПоследнийНомерПокрываемыеРезервамиСтатьиРасходов = "
		|	ВЫБРАТЬ
		|		0,
		|		0,
		|		МАКСИМУМ(Т.НомерУзла),
		|		0
		|	ИЗ
		|		ПокрываемыеРезервамиСтатьиРасходов КАК Т
		|";

	ТекстЗапросаПоследнийНомерВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ = "
		|	ВЫБРАТЬ
		|		0,
		|		0,
		|		0,
		|		МАКСИМУМ(Т.НомерУзла)
		|	ИЗ
		|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Т
		|";

	ТекстыЗапросовПоследнихНомеров = Новый Массив;
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаОпределенияДанных);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерУзлыКорректировкиДополнительныхРасходов);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтУзлыКорректировки);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтНезавершенноеПроизводство);
	ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерПокрываемыеРезервамиСтатьиРасходов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		ТекстыЗапросовПоследнихНомеров.Добавить(ТекстЗапросаПоследнийНомерВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ);
	КонецЕсли;
	СоставЗапросовПоследнихНомеров = СтрСоединить(ТекстыЗапросовПоследнихНомеров, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());	
	
	ТекстЗапросаПоследнихНомеров = "
		|ВЫБРАТЬ
		|	МАКСИМУМ(Т.НомерУзла) КАК НомерУзла,
		|	МАКСИМУМ(Т.НомерУзлаНЗП) КАК НомерУзлаНЗП,
		|	МАКСИМУМ(Т.НомерУзлаРезервов) КАК НомерУзлаРезервов,
		|	МАКСИМУМ(Т.НомерУзлаТранзитовОВЗ) КАК НомерУзлаТранзитовОВЗ
		|ПОМЕСТИТЬ ПоследнийНомерУзла
		|ИЗ &СоставЗапросовПоследнихНомеров КАК Т";
	
	ТекстЗапросаПоследнихНомеров = СтрЗаменить(ТекстЗапросаПоследнихНомеров, "&СоставЗапросовПоследнихНомеров","("+СоставЗапросовПоследнихНомеров+")");
	#КонецОбласти
		
	#Область ТекстЗапросаУзловВтНезавершенноеПроизводство
	ТекстЗапросаУзловВтНезавершенноеПроизводство = "
		|ВЫБРАТЬ
		|	ПоследнийНомерУзла.НомерУзла
		|		+ Таблица.НомерУзла										КАК НомерУзла,
		|	Таблица.Организация                							КАК Организация,
		|	Таблица.РазделУчета                		 					КАК РазделУчета,
		|	Таблица.Партия                     							КАК Партия,
		|	Таблица.АналитикаУчетаПартий       							КАК АналитикаУчетаПартий,
		|	Таблица.КодСтрокиПродукция       							КАК КодСтрокиПродукция,
		|	Таблица.Подразделение						 				КАК Подразделение,
		|	Таблица.ВидДеятельностиНДС									КАК ВидДеятельностиНДС,
		|	Таблица.НаправлениеДеятельности    							КАК НаправлениеДеятельности,
		|	Таблица.СтатьяРасходов             							КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов          							КАК АналитикаРасходов,
		|	Таблица.СтатьяКалькуляции									КАК СтатьяКалькуляции,
		|	Таблица.Этап												КАК Этап,
		|	Таблица.ГруппаПродукции										КАК ГруппаПродукции,
		|	Таблица.ПравилоОтнесенияНаВыпуск							КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	Таблица.Количество                 							КАК ВесПостатейные,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|			ТОГДА Таблица.Сумма
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеСНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.Сумма
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПеременныеСНДС,
		|
		|	Таблица.КоличествоБезНДС           							КАК ВесПостатейныеБезНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|			ТОГДА Таблица.СуммаБезНДС
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеБезНДС,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаБезНДС
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	Таблица.КоличествоРегл                 						КАК ВесПостатейныеРегл,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПостоянныеРегл,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПеременныеРегл,
		|	Таблица.ПостояннаяРазница          							КАК ПостояннаяРазница,
		|	Таблица.ВременнаяРазница           							КАК ВременнаяРазница,
		|
		|	Таблица.КоличествоУпр                 						КАК ВесПостатейныеУпр,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПостоянныеУпр,
		|	(ВЫБОР
		|		КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0	КОНЕЦ)											КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостатейныеРасходыНЗП
		|ИЗ
		|	ВтНезавершенноеПроизводство КАК Таблица
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|ПО
		|	Таблица.СтатьяРасходов = Статья.Ссылка
		|ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|	ПО ИСТИНА
		|ГДЕ
		|	(Таблица.Количество <> 0
		|		ИЛИ Таблица.КоличествоБезНДС <> 0
		|		ИЛИ Таблица.КоличествоРегл <> 0
		|		ИЛИ Таблица.КоличествоУпр <> 0
		|		ИЛИ Таблица.СуммаРегл <> 0
		|		ИЛИ Таблица.СуммаУпр <> 0)
		|	И Таблица.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов
	ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов = "
		// Данные по прочим статьям расходов
		|ВЫБРАТЬ
		|	ПоследнийНомерУзла.НомерУзла
		|		+ ПоследнийНомерУзла.НомерУзлаНЗП
		|		+ Таблица.НомерУзла										КАК НомерУзла,
		|	Таблица.Организация                							КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО                       							КАК Партия,
		|	НЕОПРЕДЕЛЕНО                       							КАК АналитикаУчетаПартий,
		|	0															КАК КодСтрокиПродукция,
		|	Таблица.Подразделение                       				КАК Подразделение,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)	КАК ВидДеятельностиНДС,
		|	Таблица.НаправлениеДеятельности    							КАК НаправлениеДеятельности,
		|	Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов                       			КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|	0															КАК ВесПостатейные,
		|	0															КАК ПостатейныеПостоянныеСНДС,
		|	0															КАК ПостатейныеПеременныеСНДС,
		|	0															КАК ВесПостатейныеБезНДС,
		|	0															КАК ПостатейныеПостоянныеБезНДС,
		|	0															КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ВесПостатейныеРегл,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0
		|			ТОГДА Таблица.СуммаРегл
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеРегл,
		|	0															КАК ПостатейныеПеременныеРегл,
		|	0															КАК ПостояннаяРазница,
		|	0															КАК ВременнаяРазница,
		|
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0 ТОГДА 1
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ВесПостатейныеУпр,
		|	(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0
		|			ТОГДА Таблица.СуммаУпр
		|		ИНАЧЕ 0 КОНЕЦ)											КАК ПостатейныеПостоянныеУпр,
		|	0															КАК ПостатейныеПеременныеУпр
		|ИЗ
		|	ПокрываемыеРезервамиСтатьиРасходов КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтНезавершенноеПроизводство КАК НЗП
		|	ПО Таблица.Организация = НЗП.Организация
		|		И Таблица.Подразделение = НЗП.Подразделение
		|		И Таблица.НаправлениеДеятельности = НЗП.НаправлениеДеятельности
		|		И Таблица.СтатьяРасходов = НЗП.СтатьяРасходов
		|		И Таблица.АналитикаРасходов = НЗП.АналитикаРасходов
		|		И НЗП.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА
		|ГДЕ
		|	ЕСТЬNULL(НЗП.КоличествоРегл, 0) = 0
		|	ИЛИ ЕСТЬNULL(НЗП.КоличествоУпр, 0) = 0
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ
	ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ = "
		// Данные по транзитам на объекты возникновения затрат
		|	ВЫБРАТЬ
		|		ПоследнийНомерУзла.НомерУзла
		|		+ ПоследнийНомерУзла.НомерУзлаНЗП
		|		+ ПоследнийНомерУзла.НомерУзлаРезервов
		|		+ Таблица.НомерУзла											КАК НомерУзла,
		|		Таблица.Организация											КАК Организация,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|		ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)		КАК Партия,
		|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|		0															КАК КодСтрокиПродукция,	
		|		Таблица.Подразделение										КАК Подразделение,
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
		|		Таблица.НаправлениеДеятельности								КАК НаправлениеДеятельности,
		|		Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|		Таблица.АналитикаРасходов									КАК АналитикаРасходов,
		|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|		ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|		ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|		ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		|		Таблица.ПриведенныйВес										КАК ВесПостатейные,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ЕСТЬNULL(Т.Сумма,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеСНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.Сумма,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеСНДС,
		|		Таблица.ПриведенныйВес										КАК ВесПостатейныеБезНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаБезНДС,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеБезНДС,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаБезНДС,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеБезНДС,
		|		Таблица.ПриведенныйВесРегл									КАК ВесПостатейныеРегл,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВесРегл = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаРегл,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеРегл,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВесРегл = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаРегл,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеРегл,
		|		0															КАК ПостояннаяРазница,
		|		0															КАК ВременнаяРазница,
		|		Таблица.ПриведенныйВес													КАК ВесПостатейныеУпр,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаУпр,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПостоянныеУпр,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПриведенныйВес = 0 И Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ЕСТЬNULL(Т.СуммаУпр,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ														КАК ПостатейныеПеременныеУпр
		|	ИЗ
		|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВТКэшРасчетныеОстаткиПрочиеРасходы КАК Т
		|	ПО
		|		Таблица.Организация = Т.Организация
		|		И Таблица.Подразделение = Т.Подразделение
		|		И Таблица.НаправлениеДеятельности = Т.НаправлениеДеятельности
		|		И Таблица.СтатьяРасходов = Т.СтатьяРасходов
		|		И Таблица.АналитикаРасходов = Т.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|	ПО
		|		Таблица.СтатьяРасходов = Статья.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА
		|
		|	ГДЕ
		|		НЕ (Таблица.Вес = 0 И Таблица.ВесРегл = 0)
		|";
	#КонецОбласти

	#Область ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ
	ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ = "
		// Данные по списанию на статьи из объектов возникновения затрат
		|	ВЫБРАТЬ
		|		ПоследнийНомерУзла.НомерУзла
		|			+ ПоследнийНомерУзла.НомерУзлаНЗП
		|			+ ПоследнийНомерУзла.НомерУзлаРезервов
		|			+ ПоследнийНомерУзла.НомерУзлаТранзитовОВЗ
		|			+ Таблица.НомерУзла										КАК НомерУзла,
		|		Таблица.Организация											КАК Организация,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|		ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)		КАК Партия,
		|		ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|		0															КАК КодСтрокиПродукция,	
		|		Таблица.Подразделение										КАК Подразделение,
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)  КАК ВидДеятельностиНДС,
		|		Таблица.НаправлениеДеятельности							КАК НаправлениеДеятельности,
		|		Таблица.СтатьяРасходов										КАК СтатьяРасходов,
		|		Таблица.АналитикаРасходов									КАК АналитикаРасходов,
		|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)			КАК СтатьяКалькуляции,
		|		ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)			КАК Этап,
		|		ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|		ЗНАЧЕНИЕ(Перечисление.ПравилаОтнесенияНаВыпуск.ПустаяСсылка) КАК ПравилоОтнесенияНаВыпуск,
		// Ресурсы для расчета себестоимости товаров предприятия.
		|		0	КАК ВесПостатейные,
		|		0	КАК ПостатейныеПостоянныеСНДС,
		|		0	КАК ПостатейныеПеременныеСНДС,
		|
		|		0	КАК ВесПостатейныеБезНДС,
		|		0	КАК ПостатейныеПостоянныеБезНДС,
		|		0	КАК ПостатейныеПеременныеБезНДС,
		// Ресурсы для расчета себестоимости товаров организаций.
		|		0	КАК ВесПостатейныеРегл,
		|		0	КАК ПостатейныеПостоянныеРегл,
		|		0	КАК ПостатейныеПеременныеРегл,
		|		0	КАК ПостояннаяРазница,
		|		0	КАК ВременнаяРазница,
		|
		|		0	КАК ВесПостатейныеУпр,
		|		0	КАК ПостатейныеПостоянныеУпр,
		|		0	КАК ПостатейныеПеременныеУпр
		|	ИЗ
		|		ВтСписанияНаСтатьиИзОВЗ КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПоследнийНомерУзла КАК ПоследнийНомерУзла
		|		ПО ИСТИНА";
	#КонецОбласти
	
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтНезавершенноеПроизводство);
	ТекстыЗапросов.Добавить(ТекстЗапросаУзловПокрываемыеРезервамиСтатьиРасходов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ);
		ТекстыЗапросов.Добавить(ТекстЗапросаУзловВтСписанияНаСтатьиИзОВЗ);
	КонецЕсли;
	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());	
	
	Возврат ТекстЗапросаПоследнихНомеров 
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете()
		+ ТекстЗапроса;
	
КонецФункции

Функция ТекстВтСписанияНаСтатьиИзОВЗ()
	Возврат "
	// Данные по списанию на статьи из объектов возникновения затрат
	|	ВЫБРАТЬ
	|		АВТОНОМЕРЗАПИСИ()											КАК НомерУзла,
	|		ДД.Организация												КАК Организация,
	|		СтатьиСписания.Подразделение								КАК Подразделение,
	|		СтатьиСписания.НаправлениеДеятельности						КАК НаправлениеДеятельности,
	|		СтатьиСписания.СтатьяРасходов								КАК СтатьяРасходов,
	|		СтатьиСписания.АналитикаРасходов							КАК АналитикаРасходов
	|	ПОМЕСТИТЬ ВтСписанияНаСтатьиИзОВЗ
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеПрочихЗатрат.Списание КАК СтатьиСписания
	|	ПО
	|		ДД.Ссылка = СтатьиСписания.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтНезавершенноеПроизводство КАК НЗП
	|	ПО ДД.Организация = НЗП.Организация
	|		И СтатьиСписания.Подразделение = НЗП.Подразделение
	|		И СтатьиСписания.НаправлениеДеятельности = НЗП.НаправлениеДеятельности
	|		И СтатьиСписания.СтатьяРасходов = НЗП.СтатьяРасходов
	|		И СтатьиСписания.АналитикаРасходов = НЗП.АналитикаРасходов
	|		И НЗП.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|ГДЕ
	|	НЗП.НомерУзла ЕСТЬ NULL
	|	И (ДД.Проведен И НАЧАЛОПЕРИОДА(ДД.Дата, МЕСЯЦ) = &НачалоПериода)
	|	И ДД.РаспределятьНаСтатьи И ДД.НазначениеНастройкиРаспределения = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаОВЗ)
	|";
КонецФункции

Функция ТекстВтВыпуски()
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов, 
		|	ДД.Партия,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаФинансовогоУчета,
		|	ДД.ВидДеятельностиНДС
		|ПОМЕСТИТЬ ВтВыпуски
		|ИЗ
		|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
		|	И НЕ ДД.Сторно
		|";
КонецФункции

Функция ТекстВтТаблицаСвязейПостатейныеРасходы()
	ОсновнойЗапрос = "
		|ВЫБРАТЬ
		|	Себестоимость.НомерУзлаИсточник                      КАК НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник                      КАК НомерУзлаПриемник,
		|	СУММА(Себестоимость.ВесДугиПостатейныеРасходыСНДС)   КАК ВесДугиПостатейныеРасходыСНДС,
		|	СУММА(Себестоимость.ВесДугиПостатейныеРасходыБезНДС) КАК ВесДугиПостатейныеРасходыБезНДС,
		|	СУММА(Себестоимость.ВесДугиПостатейныеРасходыРегл)   КАК ВесДугиПостатейныеРасходыРегл,
		|	СУММА(Себестоимость.ВесДугиПостатейныеРасходыУпр)    КАК ВесДугиПостатейныеРасходыУпр,
		|	МАКСИМУМ(Себестоимость.ПостатейныеПостоянные)        КАК ПостатейныеПостоянные,
		|	МАКСИМУМ(Себестоимость.ПостатейныеПеременные)        КАК ПостатейныеПеременные,
		|	МАКСИМУМ(Себестоимость.ПринимаемыеВНУ)               КАК ПринимаемыеВНУ,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВБухУчете)    КАК НеРаспределяетсяВБухУчете,
		|	МАКСИМУМ(Себестоимость.НеРаспределяетсяВНалУчете)	 КАК НеРаспределяетсяВНалУчете
		|ПОМЕСТИТЬ ВтТаблицаСвязейПостатейныеРасходы
		|ИЗ &СоставСвязей КАК Себестоимость
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.НомерУзлаИсточник,
		|	Себестоимость.НомерУзлаПриемник
		|";

	#Область ТекстЗапросаСписаниеМатериаловНаСтатьи
	ТекстЗапросаСписаниеМатериаловНаСтатьи = "
	// Списание материалов на производственные статьи расходов
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла  КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла  КАК НомерУзлаПриемник,
		|		(ВЫБОР
		|			КОГДА НЕ Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиПостатейныеРасходыСНДС,
		|		(ВЫБОР
		|			КОГДА НЕ Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиПостатейныеРасходыБезНДС,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				И НЕ Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовНУ
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиПостатейныеРасходыРегл,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация В (
		|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
		|				ТОГДА 0
		|			КОГДА НЕ Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
		|			 В (
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства), 
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат)
		|				)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход ТОГДА -Себестоимость.Количество
		|			ИНАЧЕ Себестоимость.Количество КОНЕЦ) КАК ВесДугиПостатейныеРасходыУпр,
		|
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Себестоимость.СтатьяРасходовСписания.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПеременные,
		|		ЕСТЬNULL(Себестоимость.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		(ВЫБОР
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|			ИЛИ ЕСТЬNULL(Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Себестоимость.СтатьяРасходовСписания.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры   = Себестоимость.АналитикаУчетаНоменклатуры
		|			И УзлыКорректировкиИсточник.РазделУчета               = Себестоимость.РазделУчета
		|			И УзлыКорректировкиИсточник.ВидЗапасов                = Себестоимость.ВидЗапасов
		|			И УзлыКорректировкиИсточник.Организация               = Себестоимость.Организация
		|			И УзлыКорректировкиИсточник.Партия                    = Себестоимость.Партия
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий      = Себестоимость.АналитикаУчетаПартий
		|			И УзлыКорректировкиИсточник.АналитикаФинансовогоУчета = Себестоимость.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС        = Себестоимость.ВидДеятельностиНДС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
		|		ПО КорОрганизации.Ссылка = Себестоимость.КорОрганизация
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.СтатьяРасходов               = Себестоимость.СтатьяРасходовСписания
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Себестоимость.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Себестоимость.КорНаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.Подразделение             = Себестоимость.Подразделение
		|			И УзлыКорректировкиПриемник.Организация               = ЕСТЬNULL(КорОрганизации.Ссылка, Себестоимость.Организация)
		|			И УзлыКорректировкиПриемник.РазделУчета               = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	ГДЕ
		|		Себестоимость.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
		|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели))
		// Исключение сторно списания расходов с возвратом прошлого периода, т.к. стоимость рассчитывается на шаге СкорректироватьСтоимостьВозвратовПрошлыхПериодов
		|		И НЕ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы) 
		|			И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов))
		|		И НЕ (Себестоимость.Сторно И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода))
		|";
	#КонецОбласти

	#Область ТекстЗапросаРаспределениеНаПартииПроизводства
	ТекстЗапросаРаспределениеНаПартииПроизводства = "
	// Распределение производственных расходов на партии производства
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла  		КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 		КАК НомерУзлаПриемник,
		|		Расходы.ПоказательОтнесенияНаПартию 		КАК ВесДугиПостатейныеРасходыСНДС,
		|		Расходы.ПоказательОтнесенияНаПартиюБезНДС 	КАК ВесДугиПостатейныеРасходыБезНДС,
		|		Расходы.ПоказательОтнесенияНаПартиюРегл 	КАК ВесДугиПостатейныеРасходыРегл,
		|		Расходы.ПоказательОтнесенияНаПартиюУпр 	    КАК ВесДугиПостатейныеРасходыУпр,
		|		(ВЫБОР
		|			КОГДА Расходы.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Расходы.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|		ЕСТЬNULL(Расходы.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		Реквизиты.НалоговыйУчет
		|			И НЕ Реквизиты.РегламентированныйУчет КАК НеРаспределяетсяВБухУчете,
		|		Реквизиты.РегламентированныйУчет
		|			И НЕ Реквизиты.НалоговыйУчет КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		втПрочиеРасходыНезавершенногоПроизводства КАК Расходы
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|		ПО Реквизиты.Ссылка = Расходы.Регистратор
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.Организация                  = Расходы.Организация
		|			И УзлыКорректировкиИсточник.Подразделение             = Реквизиты.Подразделение
		|			И УзлыКорректировкиИсточник.НаправлениеДеятельности   = Расходы.КорНаправлениеДеятельности
		|			И УзлыКорректировкиИсточник.СтатьяРасходов            = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиИсточник.АналитикаРасходов         = Расходы.АналитикаРасходов
		|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                 = Расходы.Организация
		|			И УзлыКорректировкиПриемник.Подразделение            = Расходы.Подразделение
		|			И УзлыКорректировкиПриемник.СтатьяРасходов           = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности  = Расходы.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.АналитикаРасходов        = Расходы.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.СтатьяКалькуляции        = Расходы.СтатьяКалькуляции
		|			И УзлыКорректировкиПриемник.Этап                     = Расходы.Этап
		|			И УзлыКорректировкиПриемник.ГруппаПродукции          = Расходы.ГруппаПродукции
		|			И УзлыКорректировкиПриемник.ПравилоОтнесенияНаВыпуск = Расходы.ПравилоОтнесенияНаВыпуск
		|			И УзлыКорректировкиПриемник.Партия                   = Расходы.ДокументВыпуска
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий     = Расходы.АналитикаПартииВыпуска
		|			И УзлыКорректировкиПриемник.КодСтрокиПродукция       = Расходы.КодСтрокиПродукция
		|			И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|	ГДЕ
		|		Расходы.Организация В (&МассивОрганизаций)
		|		И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (Расходы.ПоказательОтнесенияНаПартию <> 0
		|			ИЛИ Расходы.ПоказательОтнесенияНаПартиюБезНДС <> 0
		|			ИЛИ Расходы.ПоказательОтнесенияНаПартиюРегл <> 0
		|			ИЛИ Расходы.ПоказательОтнесенияНаПартиюУпр <> 0)
		|";
	#КонецОбласти

	#Область ТекстЗапросаРаспределениеНаВыпускПродукции
	ТекстЗапросаРаспределениеНаВыпускПродукции = "
	// Распределение производственных расходов на выпуск продукции
		|	ВЫБРАТЬ
		|		УзлыКорректировкиИсточник.НомерУзла  		КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 		КАК НомерУзлаПриемник,
		|		Расходы.ПоказательОтнесенияНаВыпуск 		КАК ВесДугиПостатейныеРасходыСНДС,
		|		Расходы.ПоказательОтнесенияНаВыпускБезНДС 	КАК ВесДугиПостатейныеРасходыБезНДС,
		|		Расходы.ПоказательОтнесенияНаВыпускРегл 	КАК ВесДугиПостатейныеРасходыРегл,
		|		Расходы.ПоказательОтнесенияНаВыпускУпр 	    КАК ВесДугиПостатейныеРасходыУпр,
		|		(ВЫБОР
		|			КОГДА Расходы.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Расходы.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|		ЕСТЬNULL(Расходы.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		ЛОЖЬ                                                              КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Расходы.СтатьяРасходов.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		втПрочиеРасходыНезавершенногоПроизводства КАК Расходы
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиИсточник
		|		ПО УзлыКорректировкиИсточник.Организация                 = Расходы.Организация
		|			И УзлыКорректировкиИсточник.Подразделение            = Расходы.Подразделение
		|			И УзлыКорректировкиИсточник.СтатьяРасходов           = Расходы.СтатьяРасходов
		|			И УзлыКорректировкиИсточник.АналитикаРасходов        = Расходы.АналитикаРасходов
		|			И УзлыКорректировкиИсточник.СтатьяКалькуляции        = Расходы.СтатьяКалькуляции
		|			И УзлыКорректировкиИсточник.Этап                     = Расходы.Этап
		|			И УзлыКорректировкиИсточник.ГруппаПродукции          = Расходы.ГруппаПродукции
		|			И УзлыКорректировкиИсточник.ПравилоОтнесенияНаВыпуск = Расходы.ПравилоОтнесенияНаВыпуск
		|			И УзлыКорректировкиИсточник.Партия                   = Расходы.ДокументВыпуска
		|			И УзлыКорректировкиИсточник.АналитикаУчетаПартий     = Расходы.АналитикаПартииВыпуска
		|			И УзлыКорректировкиИсточник.КодСтрокиПродукция       = Расходы.КодСтрокиПродукция
		|			И УзлыКорректировкиИсточник.ВидДеятельностиНДС       = Расходы.ВидДеятельностиНДС
		|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|			ПО Аналитика.Ссылка = Расходы.АналитикаУчетаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукцииБезНазначения
		|			ПО АналитикаПродукцииБезНазначения.Номенклатура     = Аналитика.Номенклатура
		|			И АналитикаПродукцииБезНазначения.Характеристика    = Аналитика.Характеристика
		|			И АналитикаПродукцииБезНазначения.Серия             = Аналитика.Серия
		|			И АналитикаПродукцииБезНазначения.МестоХранения     = Аналитика.МестоХранения
		|			И АналитикаПродукцииБезНазначения.Назначение        = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			И АналитикаПродукцииБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|			И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтВыпуски КАК Выпуски
		|		ПО Выпуски.Регистратор = Расходы.Регистратор
		|			И ЕСТЬNULL(АналитикаПродукцииБезНазначения.КлючАналитики, Расходы.АналитикаУчетаПродукции)
		|				= Выпуски.АналитикаУчетаНоменклатуры
		|			И Выпуски.РазделУчета              = Расходы.РазделУчета
		|			И Выпуски.АналитикаУчетаПартий     = Расходы.КорАналитикаУчетаПартий
		|			И Выпуски.ВидЗапасов               = Расходы.ВидЗапасов
		|			И (Выпуски.ВидДеятельностиНДС      = Расходы.ВидДеятельностиНДС
		|				ИЛИ Расходы.ВидДеятельностиНДС = НЕОПРЕДЕЛЕНО)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
		|				= ЕСТЬNULL(АналитикаПродукцииБезНазначения.КлючАналитики, Расходы.АналитикаУчетаПродукции)
		|			И УзлыКорректировкиПриемник.РазделУчета               = Расходы.РазделУчета
		|			И УзлыКорректировкиПриемник.Организация               = Расходы.Организация
		|			И УзлыКорректировкиПриемник.ВидЗапасов                = Выпуски.ВидЗапасов
		|			И УзлыКорректировкиПриемник.Партия                    = Выпуски.Партия
		|			И УзлыКорректировкиПриемник.АналитикаУчетаПартий      = Выпуски.АналитикаУчетаПартий
		|			И УзлыКорректировкиПриемник.АналитикаФинансовогоУчета = Выпуски.АналитикаФинансовогоУчета
		|			И УзлыКорректировкиПриемник.ВидДеятельностиНДС        = Выпуски.ВидДеятельностиНДС
		|	ГДЕ
		|		Расходы.Организация В (&МассивОрганизаций)
		|		И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Расходы.ДокументИсточник <> ЗНАЧЕНИЕ(Документ.РаспределениеПрочихЗатрат.ПустаяСсылка)
		|";
	#КонецОбласти

	#Область ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов
	ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов = "
		|// Распределение доп. расходов выбывших материалов на производственные затраты
		|	ВЫБРАТЬ
		|		Связи.НомерУзлаИсточник					КАК НомерУзлаИсточник,
		|		УзлыКорректировкиПриемник.НомерУзла 	КАК НомерУзлаПриемник,
		|		Связи.ВесДугиСНДС 						КАК ВесДугиПостатейныеРасходыСНДС,
		|		Связи.ВесДугиБезНДС						КАК ВесДугиПостатейныеРасходыБезНДС,
		|		Связи.ВесДугиРегл						КАК ВесДугиПостатейныеРасходыРегл,
		|		Связи.ВесДугиУпр						КАК ВесДугиПостатейныеРасходыУпр,
		|		(ВЫБОР
		|			КОГДА Связи.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
		|		(ВЫБОР
		|			КОГДА Связи.СтатьяРасходов.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
		|		ЕСТЬNULL(Связи.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринимаемыеВНУ,
		|		ЕСТЬNULL(Связи.СтатьяРасходов.ВариантРаспределенияРасходовРегл, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВБухУчете,
		|		ЕСТЬNULL(Связи.СтатьяРасходов.ВариантРаспределенияРасходовНУ, 
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) КАК НеРаспределяетсяВНалУчете
		|	ИЗ
		|		СвязиУзловПроизводственныхРасходовПрошлыхПериодов КАК Связи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.Организация                  = Связи.Организация
		|			И УзлыКорректировкиПриемник.Подразделение             = Связи.Подразделение
		|			И УзлыКорректировкиПриемник.НаправлениеДеятельности   = Связи.НаправлениеДеятельности
		|			И УзлыКорректировкиПриемник.СтатьяРасходов            = Связи.СтатьяРасходов
		|			И УзлыКорректировкиПриемник.АналитикаРасходов         = Связи.АналитикаРасходов
		|			И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|";
	#КонецОбласти

	#Область ТекстЗапросаТранзитыМеждуОВЗ
	ТекстЗапросаТранзитыМеждуОВЗ = "
	// Транзиты между ОВЗ
	|	ВЫБРАТЬ
	|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыСНДС,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыБезНДС,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.ВесРегл <> 0
	|				ТОГДА Расходы.ПриведенныйВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыРегл,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И УзлыТранзита.Вес <> 0
	|				ТОГДА Расходы.ПриведенныйВес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыУпр,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ)                                             КАК ПостатейныеПеременные,
	|		Статья.ПринятиеКНалоговомуУчету КАК ПринимаемыеВНУ,
	|		ЛОЖЬ                                                              КАК НеРаспределяетсяВБухУчете,
	|		Статья.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности) КАК НеРаспределяетсяВНалУчете
	|	ИЗ
	|		ВтТранзитРасходовМеждуОВЗ КАК Расходы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК УзлыТранзита
	|		ПО
	|			УзлыТранзита.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыТранзита.АналитикаРасходов = Расходы.АналитикаРасходов
	|			И УзлыТранзита.Организация = Расходы.Организация
	|			И УзлыТранзита.Подразделение = Расходы.Подразделение
	|			И УзлыТранзита.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиИсточник
	|		ПО
	|			УзлыКорректировкиИсточник.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыКорректировкиИсточник.АналитикаРасходов = Расходы.АналитикаРасходов
	|			И УзлыКорректировкиИсточник.Организация = Расходы.Организация
	|			И УзлыКорректировкиИсточник.Подразделение = Расходы.Подразделение
	|			И УзлыКорректировкиИсточник.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
	|		ПО
	|			УзлыКорректировкиПриемник.СтатьяРасходов = Расходы.СтатьяРасходов
	|			И УзлыКорректировкиПриемник.АналитикаРасходов = Расходы.КорАналитикаРасходов
	|			И УзлыКорректировкиПриемник.Организация = Расходы.Организация
	|			И УзлыКорректировкиПриемник.Подразделение = Расходы.КорПодразделение
	|			И УзлыКорректировкиПриемник.НаправлениеДеятельности = Расходы.НаправлениеДеятельности
	|			И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО
	|			Расходы.СтатьяРасходов = Статья.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтОВЗ КАК ВтОВЗ
	|		ПО
	|			Расходы.АналитикаРасходов = ВтОВЗ.ОВЗ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтДолиРаспределенияПрочихЗатрат КАК ДД
	|		ПО
	|			Расходы.ДокументДвижения = ДД.Ссылка
	|";
	#КонецОбласти
	
	#Область ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ
	ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ = "
	// Списание на статьи при транзите из ОВЗ
	|	ВЫБРАТЬ
	|		УзлыКорректировкиИсточник.НомерУзла КАК НомерУзлаИсточник,
	|		УзлыКорректировкиПриемник.НомерУзла КАК НомерУзлаПриемник,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыСНДС,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыБезНДС,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.ВесРегл <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.ВесРегл
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыРегл,
	|		ВЫБОР 
	|			КОГДА ДД.РаспределятьНаОВЗ И Таблица.Вес <> 0
	|				ТОГДА СтатьиСписания.ДоляСтоимости * Таблица.Вес
	|			ИНАЧЕ 0 
	|		КОНЕЦ										КАК ВесДугиПостатейныеРасходыУпр,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Постоянные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПостоянные,
	|		(ВЫБОР
	|			КОГДА Статья.ХарактерПроизводственныхЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерПроизводственныхЗатрат.Переменные)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПостатейныеПеременные,
	|		Статья.ПринятиеКНалоговомуУчету КАК ПринимаемыеВНУ,
	|		ЛОЖЬ                            КАК НеРаспределяетсяВБухУчете,
	|		Статья.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности) КАК НеРаспределяетсяВНалУчете
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.Списание КАК СтатьиСписания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтДолиРаспределенияПрочихЗатрат КАК ДД
	|	ПО
	|		ДД.Ссылка = СтатьиСписания.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтИсходныеДанныеУзловТранзитаРасходовМеждуОВЗ КАК Таблица
	|	ПО
	|		Таблица.Организация = ДД.Организация
	|		И Таблица.Подразделение = ДД.Подразделение
	|		И Таблица.АналитикаРасходов = ДД.АналитикаРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиИсточник
	|		ПО
	|			УзлыКорректировкиИсточник.Организация = Таблица.Организация
	|			И УзлыКорректировкиИсточник.Подразделение = Таблица.Подразделение
	|			И УзлыКорректировкиИсточник.НаправлениеДеятельности = Таблица.НаправлениеДеятельности
	|			И УзлыКорректировкиИсточник.СтатьяРасходов = Таблица.СтатьяРасходов
	|			И УзлыКорректировкиИсточник.АналитикаРасходов = Таблица.АналитикаРасходов
	|			И УзлыКорректировкиИсточник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
	|	ПО
	|		УзлыКорректировкиПриемник.Организация = ДД.Организация
	|		И УзлыКорректировкиПриемник.Подразделение = СтатьиСписания.Подразделение
	|		И УзлыКорректировкиПриемник.НаправлениеДеятельности = СтатьиСписания.НаправлениеДеятельности
	|		И УзлыКорректировкиПриемник.СтатьяРасходов = СтатьиСписания.СтатьяРасходов
	|		И УзлыКорректировкиПриемник.АналитикаРасходов = СтатьиСписания.АналитикаРасходов
	|		И УзлыКорректировкиПриемник.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|	ПО
	|		УзлыКорректировкиИсточник.СтатьяРасходов = Статья.Ссылка
	|
	|	ГДЕ ДД.НазначениеНастройкиРаспределения = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаОВЗ)
	|		И ДД.РаспределятьНаСтатьи 
	|";
	#КонецОбласти

	ТекстЗапросовСостава = Новый Массив;
	ТекстЗапросовСостава.Добавить(ТекстЗапросаСписаниеМатериаловНаСтатьи);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаРаспределениеНаВыпускПродукции);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаРаспределениеНаПартииПроизводства);
	ТекстЗапросовСостава.Добавить(ТекстЗапросаСвязиУзловПроизводственныхРасходовПрошлыхПериодов);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОбъектамВозникновенияЗатрат") Тогда
		ТекстЗапросовСостава.Добавить(ТекстЗапросаТранзитыМеждуОВЗ);
		ТекстЗапросовСостава.Добавить(ТекстЗапросаСписаниеНаСтатьиПриТранзитеИзОВЗ);
	КонецЕсли;
	
	ТекстЗапроса =	СтрЗаменить(ОсновнойЗапрос, "&СоставСвязей", "("+ 
		СтрСоединить(ТекстЗапросовСостава, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении())+")");	
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов

// Этап "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"РезервыПоУзлам, ДетальныеРезервыПоУзлам");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстПриемникиРезервов()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстРезервыСРасходами()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстСводныеРасходыПоРезервам()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстДетальныеРезервыПоУзлам()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстРезервыПоУзлам()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстПриемникиРезервов() // вт ПриемникиРезервов, использует РезервыПоРасходам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	Узлы.НомерУзла,
		|	ДД.РезервРегл,
		|	ДД.РезервУпр
		|ПОМЕСТИТЬ ПриемникиРезервов
		|ИЗ
		|	РезервыПоРасходам КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК Узлы
		|		ПО Узлы.Организация            = ДД.Организация
		|		И Узлы.НаправлениеДеятельности = ДД.НаправлениеДеятельности
		|		И Узлы.Подразделение           = ДД.Подразделение
		|		И Узлы.СтатьяРасходов          = ДД.СтатьяРасходов
		|		И Узлы.АналитикаРасходов       = ДД.АналитикаРасходов
		|		И Узлы.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Узлы.НомерУзла
		|";
КонецФункции

Функция ТекстРезервыСРасходами() // вт РезервыСРасходами, использует ПриемникиРезервов
	Возврат "
		|ВЫБРАТЬ
		|	ПриемникиРезервов.Организация,
		|	ПриемникиРезервов.НаправлениеДеятельности,
		|	ПриемникиРезервов.ВидРезервов,
		|	ПриемникиРезервов.ОбъектУчетаРезервов,
		|	ПриемникиРезервов.НомерУзла,
		|	ПриемникиРезервов.РезервРегл,
		|	ПриемникиРезервов.РезервУпр,
		|
		|	ВЫРАЗИТЬ((ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеРегл, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеРегл, 0))
		|		* УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК РасходРегл,
		|
		|	ВЫРАЗИТЬ((ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеУпр, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеУпр, 0))
		|		* УзлыКорректировки.ВесПостатейныеУпр КАК ЧИСЛО(28,10)) КАК РасходУпр
		|
		|ПОМЕСТИТЬ РезервыСРасходами
		|ИЗ
		|	ПриемникиРезервов КАК ПриемникиРезервов
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|		ПО УзлыКорректировки.НомерУзла = ПриемникиРезервов.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ВтТаблицаРешенийПостатейные
		|		ПО ВтТаблицаРешенийПостатейные.НомерУзла = ПриемникиРезервов.НомерУзла
		|ГДЕ
		|	(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеРегл, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеРегл, 0)) > 0
		|	ИЛИ
		|	(ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПеременныеУпр, 0)
		|		+ ЕСТЬNULL(ВтТаблицаРешенийПостатейные.ПостатейныеПостоянныеУпр, 0)) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПриемникиРезервов.Организация,
		|	ПриемникиРезервов.НаправлениеДеятельности,
		|	ПриемникиРезервов.ВидРезервов,
		|	ПриемникиРезервов.ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстСводныеРасходыПоРезервам() // вт СводныеРасходыПоРезервам, использует РезервыСРасходами
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходРегл < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходРегл
		|		КОНЕЦ) КАК РасходыРегл,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА ДД.РасходУпр < 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				ДД.РасходУпр
		|		КОНЕЦ) КАК РасходыУпр
		|
		|ПОМЕСТИТЬ СводныеРасходыПоРезервам
		|ИЗ
		|	РезервыСРасходами КАК ДД
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстДетальныеРезервыПоУзлам() // вт ДетальныеРезервыПоУзлам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	ДД.НомерУзла,
		|	ВЫРАЗИТЬ(ДД.РасходРегл КАК ЧИСЛО(28,10)) КАК РасходРегл,
		|	ВЫРАЗИТЬ(ДД.РасходУпр КАК ЧИСЛО(28,10))  КАК РасходУпр,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА Расходы.РасходыРегл = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходРегл / Расходы.РасходыРегл КАК ЧИСЛО(28,10)) * ДД.РезервРегл
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервРегл,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА Расходы.РасходыУпр = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходУпр / Расходы.РасходыУпр КАК ЧИСЛО(28,10)) * ДД.РезервУпр
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервУпр
		|
		|ПОМЕСТИТЬ ДетальныеРезервыПоУзлам
		|ИЗ
		|	РезервыСРасходами КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СводныеРасходыПоРезервам КАК Расходы
		|		ПО Расходы.Организация            = ДД.Организация
		|		И Расходы.НаправлениеДеятельности = ДД.НаправлениеДеятельности
		|		И Расходы.ВидРезервов             = ДД.ВидРезервов
		|		И Расходы.ОбъектУчетаРезервов     = ДД.ОбъектУчетаРезервов
		|";
КонецФункции

Функция ТекстРезервыПоУзлам() // вт РезервыПоУзлам, использует ДетальныеРезервыПоУзлам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.НомерУзла,
		|	СУММА(ДД.РезервРегл) КАК РезервРегл,
		|	СУММА(ДД.РезервУпр)  КАК РезервУпр
		|
		|ПОМЕСТИТЬ РезервыПоУзлам
		|ИЗ
		|	ДетальныеРезервыПоУзлам КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.НомерУзла
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции

#КонецОбласти

//++ Локализация

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет

// Этап "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтУзлыКорректировкиНалоговыйУчет");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстСебестоимостьНалоговыйУчет() // вт СебестоимостьНалоговыйУчет
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВтУзлыКорректировкиНалоговыйУчет() // вт ВтУзлыКорректировкиНалоговыйУчет
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстСебестоимостьНалоговыйУчет() // вт СебестоимостьНалоговыйУчет
	Возврат "
		|ВЫБРАТЬ
		|	Себестоимость.Организация                КАК Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета                КАК РазделУчета,
		|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
		|	Себестоимость.Партия                     КАК Партия,
		|	Себестоимость.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		|
		|	СУММА(Себестоимость.ПостояннаяРазница)   КАК ПостояннаяРазница,
		|	СУММА(Себестоимость.ВременнаяРазница)    КАК ВременнаяРазница
		|
		|ПОМЕСТИТЬ СебестоимостьНалоговыйУчет
		|ИЗ (
		|	ВЫБРАТЬ
		|		Себестоимость.Организация,
		|		Себестоимость.АналитикаУчетаНоменклатуры,
		|		Себестоимость.РазделУчета,
		|		Себестоимость.ВидЗапасов,
		|		Себестоимость.Партия,
		|		Себестоимость.АналитикаУчетаПартий,
		|		Себестоимость.АналитикаФинансовогоУчета,
		|		Себестоимость.ВидДеятельностиНДС,
		|
		// Условия формирования суммовых показателей должны соответствовать функции ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты().
		|		(ВЫБОР
		// Сторно движения с типом записи "Корректировка приобретения" исключаются из начальной стоимости узлов расчета,
		// т.к. по этим записям выполняется расчет отклонений в стоимости в процедуре СкорректироватьСтоимостьСписанияЗапасов().
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи В (
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
		|					ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
		|				ТОГДА 0
		|			КОГДА НЕ РаспределениеДопРасходов.СтатьяРасходов ЕСТЬ NULL
		|			 И НЕ РаспределениеДопРасходов.СтатьяРасходов.ПринятиеКНалоговомуУчету
		|				ТОГДА Себестоимость.ДопРасходыРегл
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ПостояннаяРазница
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ПостояннаяРазница
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПостояннаяРазница,
		|		(ВЫБОР
		// Сторно движения с типом записи "Корректировка приобретения" исключаются из начальной стоимости узлов расчета,
		// т.к. по этим записям выполняется расчет отклонений в стоимости в процедуре СкорректироватьСтоимостьСписанияЗапасов().
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
		|				ТОГДА 0
		|			КОГДА Себестоимость.СлужебноеВидДвиженияПриход
		|				ТОГДА Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.Сторно
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода)
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
		|			ТОГДА
		|				-Себестоимость.ВременнаяРазница
		|			КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
		|			 И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
		|			 И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|			 И Реестр.ДатаДокументаИБ < &НачалоПериода
		|				ТОГДА -Себестоимость.ВременнаяРазница
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВременнаяРазница
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК РаспределениеДопРасходов
		|			ПО РаспределениеДопРасходов.Ссылка = Себестоимость.Регистратор
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
		|		ПО Реестр.Организация = Себестоимость.Организация
		|			И Реестр.Ссылка = Себестоимость.ДокументИсточник
		|			И НЕ Реестр.ДополнительнаяЗапись
		|			И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|
		// Остатки на начало расчетного периода.
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Остатки.Организация,
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|
		|		Остатки.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|		Остатки.ВременнаяРазницаОстаток  КАК ВременнаяРазница
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров.Остатки(
		|			&ГраницаНачалоПериода,
		|			Организация В (&МассивОрганизаций)
		|		) КАК Остатки
		|	) КАК Себестоимость
		|
		|СГРУППИРОВАТЬ ПО
		|	Себестоимость.Организация,
		|	Себестоимость.АналитикаУчетаНоменклатуры,
		|	Себестоимость.РазделУчета,
		|	Себестоимость.ВидЗапасов,
		|	Себестоимость.Партия,
		|	Себестоимость.АналитикаУчетаПартий,
		|	Себестоимость.АналитикаФинансовогоУчета,
		|	Себестоимость.ВидДеятельностиНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	РазделУчета,
		|	ВидЗапасов,
		|	Партия,
		|	АналитикаУчетаПартий,
		|	АналитикаФинансовогоУчета,
		|	ВидДеятельностиНДС
		|";
КонецФункции	

Функция ТекстВтУзлыКорректировкиНалоговыйУчет() // вт ВтУзлыКорректировкиНалоговыйУчет
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла,           
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.ВидЗапасов,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС,
		|
		|	УзлыКорректировки.Количество,
		|	Себестоимость.ПостояннаяРазница КАК ПостояннаяРазница,
		|	Себестоимость.ВременнаяРазница  КАК ВременнаяРазница
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиНалоговыйУчет
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СебестоимостьНалоговыйУчет КАК Себестоимость
		|	ПО Себестоимость.Организация                   = УзлыКорректировки.Организация
		|		И Себестоимость.АналитикаУчетаНоменклатуры = УзлыКорректировки.АналитикаУчетаНоменклатуры
		|		И Себестоимость.РазделУчета                = УзлыКорректировки.РазделУчета
		|		И Себестоимость.ВидЗапасов                 = УзлыКорректировки.ВидЗапасов
		|		И Себестоимость.Партия                     = УзлыКорректировки.Партия
		|		И Себестоимость.АналитикаУчетаПартий       = УзлыКорректировки.АналитикаУчетаПартий
		|		И Себестоимость.АналитикаФинансовогоУчета  = УзлыКорректировки.АналитикаФинансовогоУчета
		|		И Себестоимость.ВидДеятельностиНДС         = УзлыКорректировки.ВидДеятельностиНДС
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1

// Этап "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"НачальнаяСтоимостьПостояннаяРазница, ВтУзлыКорректировкиПостояннаяРазница, ВтТаблицаСвязейПостояннаяРазница");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстНачальнаяСтоимостьПостояннаяРазница() // вт НачальнаяСтоимостьПостояннаяРазница
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВтУзлыКорректировкиПостояннаяРазница() // вт ВтУзлыКорректировкиПостояннаяРазница
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВтТаблицаСвязейПостояннаяРазница() // вт ВтТаблицаСвязейПостояннаяРазница
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстНачальнаяСтоимостьПостояннаяРазница() // вт НачальнаяСтоимостьПостояннаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Постоянная разница по расходам, не принимаемым к налоговому учету.
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
		|
		|ПОМЕСТИТЬ НачальнаяСтоимостьПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|ГДЕ
		|	УзлыКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|	И НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Постоянная разница по расходам, не принимаемым к налоговому учету.
		|	ВЫРАЗИТЬ(СУММА(ВЫБОР
		|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиРегл, 0)
		|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
		|
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции	

Функция ТекстВтУзлыКорректировкиПостояннаяРазница() // вт ВтУзлыКорректировкиПостояннаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла         КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|
		|ПОМЕСТИТЬ ВтУзлыКорректировкиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                             КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                             КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
		|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|";
КонецФункции

Функция ТекстВтТаблицаСвязейПостояннаяРазница() // вт ВтТаблицаСвязейПостояннаяРазница 
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|
		|ПОМЕСТИТЬ ВтТаблицаСвязейПостояннаяРазница
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		// Начальная стоимость производственных затрат для непринимаемых расходов уже сформирована.
		// Поэтому необходимо отключить дугу в узел непринимаемых производственных затрат.
		|		КОГДА ЕСТЬNULL(УзлыКорректировкиПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		 И НЕ ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА) ТОГДА 0
		// Если расходы не будут распределены в бух. учете, то постоянную разницу оставляем на исходном узле (вместе с суммой бух учета).
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		// Начальная стоимость производственных затрат для непринимаемых расходов уже сформирована.
		|		КОГДА НЕ ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА) ТОГДА 0
		// Если расходы не будут распределены в бух. учете, то постоянную разницу оставляем на исходном узле (вместе с суммой бух учета).
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиРегл, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1

// Этап "ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"НачальнаяСтоимостьВременнаяРазница, ВтУзлыКорректировкиВременнаяРазница, ВтТаблицаСвязейВременнаяРазница");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляРешенияСЛУВременнаяРазница(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляРешенияСЛУВременнаяРазница(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстНачальнаяСтоимостьВременнаяРазница() // вт НачальнаяСтоимостьВременнаяРазница
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВтУзлыКорректировкиВременнаяРазница() // вт ВтУзлыКорректировкиВременнаяРазница
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВтТаблицаСвязейВременнаяРазница() // вт ВтТаблицаСвязейВременнаяРазница
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстНачальнаяСтоимостьВременнаяРазница() // вт НачальнаяСтоимостьВременнаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	НачальнаяСтоимостьУзлов.НомерУзла КАК НомерУзла,
		|	СУММА(НачальнаяСтоимостьУзлов.ВременнаяРазница) КАК ВременнаяРазница
		|
		|ПОМЕСТИТЬ НачальнаяСтоимостьВременнаяРазница
		|ИЗ (
		|
		// Формирование начальной стоимости постатейных расходов.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Не распределяется в бух. учете и распределяются в нал. учете. Должна возникнуть отрицательная временная разница.
		|	ВЫРАЗИТЬ(СУММА(
		|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			ТОГДА -(ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				+ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		// Не распределяются в нал. учете. Возникает положительная временная разница. Например, временная разница по косвенным расходам в налоговом учета.
		|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				- ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		|		+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0))
		| 		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|	) КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДопРасходов
		|		ПО СтоимостьДопРасходов.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
		|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И УзлыКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование начальной стоимости дополнительных расходов по товарам.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Не распределяется в бух. учете и распределяются в нал. учете. Должна возникнуть отрицательная временная разница.
		|	ВЫРАЗИТЬ(СУММА(
		|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			ТОГДА -(ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				+ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		// Не распределяются в нал. учете. Возникает положительная временная разница.
		|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				- ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		|		+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0))
		| 		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|	) КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДопРасходов
		|		ПО СтоимостьДопРасходов.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
		|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование начальной стоимости номенклатуры из постатейных производственных расходов.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Не распределяется в бух. учете. Должна возникнуть отрицательная временная разница. Например, временная разница по инвентарю, переданному в эксплуатацию.
		|	ВЫРАЗИТЬ(СУММА(
		|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			ТОГДА -(ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				+ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		// Не распределяются в нал. учете. Возникает положительная временная разница. Например, временная разница по косвенным расходам в налоговом учета.
		|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0)
		|				+ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0)
		|				+ ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				- ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		|		+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0))
		|		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|		)
		|	КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
		|
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДопРасходов
		|		ПО СтоимостьДопРасходов.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
		|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование начальной стоимости номенклатуры из дополнительных расходов по товарам.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзла,
		|
		// Не распределяется в бух. учете. Должна возникнуть отрицательная временная разница. Например, временная разница по инвентарю, переданному в эксплуатацию.
		|	ВЫРАЗИТЬ(СУММА(
		|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			ТОГДА -(ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				+ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ
		// Не распределяются в нал. учете. Возникает положительная временная разница. Например, временная разница по косвенным расходам в налоговом учета.
		|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|			ТОГДА (ЕСТЬNULL(СтоимостьДопРасходов.СтоимостьРегл, 0)
		|				)
		|				- ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
		|		ИНАЧЕ 0 КОНЕЦ)
		|		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиРегл, 0)
		|		)
		|	КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
		|
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостьДопРасходов
		|		ПО СтоимостьДопРасходов.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
		|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла,
		|	ВЫРАЗИТЬ(Стоимости.РезервПодОбесценениеРегл * СвязиРезервов.ВесДуги КАК ЧИСЛО(28, 10)) КАК ВременнаяРазница
		|ИЗ
		|	СвязиУзловРезервовПодОбесценениеЗапасов КАК СвязиРезервов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
		|		ПО СвязиРезервов.НомерУзлаПриемник = УзлыКорректировки.НомерУзла
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Стоимости
		|	ПО СвязиРезервов.НомерУзлаИсточник = Стоимости.НомерУзла
		|ГДЕ
		|	НЕ СвязиРезервов.ПереноситьРезерв
		|
		|) КАК НачальнаяСтоимостьУзлов
		|
		|СГРУППИРОВАТЬ ПО
		|	НачальнаяСтоимостьУзлов.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|";
КонецФункции	

Функция ТекстВтУзлыКорректировкиВременнаяРазница() // вт ВтУзлыКорректировкиВременнаяРазница
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла        КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ВременнаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ВременнаяРазница
		|ПОМЕСТИТЬ ВтУзлыКорректировкиВременнаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазница КАК НачальнаяСтоимость
		|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                            КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ВременнаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ВременнаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазница КАК НачальнаяСтоимость
		|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                            КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница
		|		+ ЕСТЬNULL(НачальнаяСтоимость.ВременнаяРазница, 0) КАК ЧИСЛО(28, 10)) КАК ВременнаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазница КАК НачальнаяСтоимость
		|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
		|";
КонецФункции

Функция ТекстВтТаблицаСвязейВременнаяРазница() // вт ВтТаблицаСвязейВременнаяРазница 
	Возврат "
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
		|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|
		|ПОМЕСТИТЬ ВтТаблицаСвязейВременнаяРазница
		|ИЗ
		|	ВтПеремещенияСписания КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		// Начальная стоимость производственных затрат уже сформирована. Поэтому необходимо отключить дугу в узел производственных затрат.
		// Условия должны соответствовать запросу области НачальнаяСтоимостьВременнаяРазница_Шаг1
		|			КОГДА ЕСТЬNULL(УзлыКорректировкиПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|			 И (ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|			 ИЛИ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА))
		|				ТОГДА 0
		// В незавершенное производство всегда должна быть дуга из производственых затрат
		|			КОГДА ЕСТЬNULL(УзлыКорректировкиПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
		|				ТОГДА ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		// Расходы не распределяются в бух. учете и распределяются в налоговом учете - временная разница должна перейти от источника к приемнику.
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ)
		|				ТОГДА ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		// Не распределяются в нал. учете.
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
		|		КОНЕЦ
		|	КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировкиПриемник
		|		ПО УзлыКорректировкиПриемник.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		// Расходы не распределяются в бух. учете и распределяются в налоговом учете - временная разница должна перейти от источника к приемнику.
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И НЕ ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) ТОГДА
		|				ЕСТЬNULL(-ПеремещенияСписания.ВесДугиРегл, 0)
		// Не распределяются в нал. учете.
		|			КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДугиРегл, 0)
		|		КОНЕЦ
		|	КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
		|ГДЕ
		|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
		|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
		|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
		|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
		|ИЗ
		|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|";
КонецФункции

#КонецОбласти

//-- Локализация

//-- НЕ УТ

// Расчет системы линейных уравнений
#Область ПроцедурыРешенияСЛУПлатформой

// Для совместимости с платформой ниже 8.3.14
//
// Возвращаемое значение:
//	РасчетСистемЛинейныхУравнений - компонента решения системы линейных уравнений
//
Функция ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета) Экспорт
	
	РасчетСистемЛинейныхУравнений = ОбщегоНазначения.ВычислитьВБезопасномРежиме("Новый РасчетСистемЛинейныхУравнений");
	
	РасчетСистемЛинейныхУравнений.КоличествоИтераций				  = ПараметрыРасчета.РешениеСЛУ.МаксимальноеКоличествоИтераций;
	РасчетСистемЛинейныхУравнений.ТребуемаяТочность					  = ПараметрыРасчета.РешениеСЛУ.ТребуемаяТочность;
	РасчетСистемЛинейныхУравнений.ИспользованиеВычислительныхРесурсов = ПараметрыРасчета.РешениеСЛУ.ИспользованиеВычислительныхРесурсов;
	
	Возврат РасчетСистемЛинейныхУравнений;
	
КонецФункции

// Выполняет расчет систем уравнений для показателей:
//	Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, Трудозатраты
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьПредприятия"
//
Процедура РешитьСЛУПлатформой_СебестоимостьПредприятия(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_СебестоимостьПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости предприятия';
								|en = 'Solution for the enterprise cost'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла				    КАК НомерУзла,
	|	УзлыКорректировки.Стоимость                 КАК Стоимость,
	|	УзлыКорректировки.СтоимостьБезНДС           КАК СтоимостьБезНДС,
	|	УзлыКорректировки.СтоимостьЗабалансовая     КАК СтоимостьЗабалансовая,
	|	УзлыКорректировки.Трудозатраты              КАК Трудозатраты
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимость,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.РаботаДляДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатраты
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимость,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьБезНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатраты
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "Стоимость";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимость";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьЗабалансовая";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьЗабалансовая";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "Трудозатраты";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатраты";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, Трудозатраты");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.Стоимость, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК Стоимость,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансовая, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансовая,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.Трудозатраты, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК Трудозатраты
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьПредприятия
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешений 
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	СохранитьСЛУВФайл(ПараметрыРасчета);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	СтоимостьРегл, СтоимостьЗабалансоваяРегл, ТрудозатратыРегл, СтоимостьУпр, ТрудозатратыУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_СебестоимостьОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_СебестоимостьОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст =
		"ВЫБРАТЬ
		|	НачальнаяСтоимостьУзлов.НомерУзла КАК НомерУзла,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.ТрудозатратыРегл) КАК ТрудозатратыРегл,
		|	СУММА(НачальнаяСтоимостьУзлов.СтоимостьУпр) КАК СтоимостьУпр,
		|	СУММА(НачальнаяСтоимостьУзлов.ТрудозатратыУпр) КАК ТрудозатратыУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		УзлыКорректировки.НомерУзла КАК НомерУзла,
		|		УзлыКорректировки.СтоимостьРегл КАК СтоимостьРегл,
		|		УзлыКорректировки.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
		|		УзлыКорректировки.ТрудозатратыРегл КАК ТрудозатратыРегл,
		|		УзлыКорректировки.СтоимостьУпр КАК СтоимостьУпр,
		|		УзлыКорректировки.ТрудозатратыУпр КАК ТрудозатратыУпр
		|	ИЗ
		|		ВтУзлыКорректировки КАК УзлыКорректировки
		|
		//++ НЕ УТ	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УзлыКорректировки.НомерУзла,
		|		ВЫРАЗИТЬ(Стоимости.РезервПодОбесценениеРегл * СвязиРезервов.ВесДуги КАК ЧИСЛО(28, 10)),
		|		0,
		|		0,
		|		ВЫРАЗИТЬ(Стоимости.РезервПодОбесценениеУпр * СвязиРезервов.ВесДуги КАК ЧИСЛО(28, 10)),
		|		0
		|	ИЗ
		|		СвязиУзловРезервовПодОбесценениеЗапасов КАК СвязиРезервов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
		|			ПО СвязиРезервов.НомерУзлаПриемник = УзлыКорректировки.НомерУзла
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК Стоимости
		|			ПО СвязиРезервов.НомерУзлаИсточник = Стоимости.НомерУзла
		|	ГДЕ
		|		НЕ СвязиРезервов.ПереноситьРезерв
		//-- НЕ УТ
		|) КАК НачальнаяСтоимостьУзлов
		|
		|СГРУППИРОВАТЬ ПО
		|	НачальнаяСтоимостьУзлов.НомерУзла";
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.РаботаДляДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансоваяРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиТрудозатратыУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьЗабалансоваяРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьЗабалансоваяРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ТрудозатратыУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиТрудозатратыУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьРегл, СтоимостьЗабалансоваяРегл, ТрудозатратыРегл, СтоимостьУпр, ТрудозатратыУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьЗабалансоваяРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ТрудозатратыРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ТрудозатратыУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ТрудозатратыУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешений 
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ДопРасходы, ДопРасходыБезНДС
//		
// Результатом работы данной процедуры будет временная таблица "ТаблицаРешений".
//
Процедура РешитьСЛУПлатформой_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ДопРасходыПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости предприятия';
								|en = 'Solution for the enterprise cost'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(
	|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0))
	|		* ЕСТЬNULL(Связи.ВесДугиСНДС, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыСНДС,
	|
	|	ВЫРАЗИТЬ(
	|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0))
	|		* ЕСТЬNULL(Связи.ВесДугиБезНДС, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
	|				- ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0))
	|		* ЕСТЬNULL(Связи.ВесДугиРегл, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыРегл,
	|
	|	ВЫРАЗИТЬ(
	|		СУММА((ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
	|				- ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0))
	|		* ЕСТЬNULL(Связи.ВесДугиУпр, 0)) КАК ЧИСЛО(28,10)) КАК ДопРасходыУпр
	|
	|ПОМЕСТИТЬ НачальнаяСтоимостьДополнительныхРасходов
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК Связи
	|		ПО УзлыКорректировки.НомерУзла = Связи.НомерУзлаПриемник
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|		ПО СтоимостьПартийТоваров.НомерУзла = Связи.НомерУзлаИсточник
	|
	|ГДЕ
	|	НЕ Связи.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ Связи.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	// Узлы
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.СтоимостьСНДС
	|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыСНДС, 0)   КАК СтоимостьСНДС,
	|	УзлыКорректировки.СтоимостьБезНДС
	|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыБезНДС, 0) КАК СтоимостьБезНДС,
	|	УзлыКорректировки.СтоимостьРегл
	|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыРегл, 0)   КАК СтоимостьРегл,
	|	УзлыКорректировки.СтоимостьУпр
	|		+ ЕСТЬNULL(СтоимостьУзлов.ДопРасходыУпр, 0)    КАК СтоимостьУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьДополнительныхРасходов КАК СтоимостьУзлов
	|		ПО УзлыКорректировки.НомерУзла = СтоимостьУзлов.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла            КАК НомерУзла,
	|	УзлыКорректировки.ДопРасходы           КАК СтоимостьСНДС,
	|	УзлыКорректировки.ДопРасходыБезНДС     КАК СтоимостьБезНДС,
	|	УзлыКорректировки.ДопРасходыРегл       КАК СтоимостьРегл,
	|	УзлыКорректировки.ДопРасходыУпр        КАК СтоимостьУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки";
	
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																									|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	//Связи
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ПеремещенияСписания.РеализацияВДругуюОрганизацию ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ПеремещенияСписания.РеализацияВДругуюОрганизацию ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(-Связи.ВесДугиСНДС КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(-Связи.ВесДугиБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
	|	ВЫРАЗИТЬ(-Связи.ВесДугиРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(-Связи.ВесДугиУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	СвязиУзловДополнительныхРасходов КАК Связи
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесСНДС КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесУпр КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(
		ПараметрыРасчета, Запрос.Текст);
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, Запрос,,, Истина, 
		ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	#Область РешениеСЛУ
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета,
		"РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьСНДС, СтоимостьБезНДС, СтоимостьРегл, СтоимостьУпр",
		,
		"РезультатРасчета");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьСНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|
	|ПОМЕСТИТЬ ТаблицаРешений
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчета КАК РезультатРасчета
	|	ПО РезультатРасчета.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьСНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РезультатРасчета.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезультатРасчета КАК РезультатРасчета
	|	ПО РезультатРасчета.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РезультатРасчета";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	СтоимостьРегл, СтоимостьУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ВключениеИсключениеНДСОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла        КАК НомерУзла,
	|	УзлыКорректировки.СтоимостьРегл    КАК СтоимостьРегл,
	|	УзлыКорректировки.СтоимостьУпр     КАК СтоимостьУпр
	|ИЗ
	|	УзлыКорректировкиВключениеИсключениеНДС КАК УзлыКорректировки";
	
	#КонецОбласти
	
	#Область Связи
	
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСтоимостьУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	#Область РешениеСЛУ
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "СтоимостьУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСтоимостьУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"СтоимостьРегл, СтоимостьУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК СтоимостьУпр
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
КонецПроцедуры

//++ НЕ УТ

// Выполняет расчет систем уравнений для показателей:
//	РезервПодОбесценениеРегл, РезервПодОбесценениеУпр
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций".
//
Процедура РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_РезервыПодОбесценениеЗапасовОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для себестоимости организаций';
								|en = 'Solution for cost of companies'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	УзлыКорректировки.РезервПодОбесценениеРегл  КАК РезервПодОбесценениеРегл,
	|	УзлыКорректировки.РезервПодОбесценениеУпр   КАК РезервПодОбесценениеУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";

	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	СвязиУзлов.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	СвязиУзлов.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА НЕ СвязиУзлов.ПереноситьРезерв
	|				ТОГДА 0
	|			ИНАЧЕ
	|				-СвязиУзлов.ВесДуги
	|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРезервРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА НЕ СвязиУзлов.ПереноситьРезерв
	|				ТОГДА 0
	|			ИНАЧЕ
	|				-СвязиУзлов.ВесДуги
	|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРезервУпр
	|ИЗ
	|	СвязиУзловРезервовПодОбесценениеЗапасов КАК СвязиУзлов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРезервРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРезервУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "РезервПодОбесценениеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРезервРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "РезервПодОбесценениеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРезервУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"РезервПодОбесценениеРегл, РезервПодОбесценениеУпр",
		,
		"ТаблицаРешений_Резервы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.РезервПодОбесценениеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервПодОбесценениеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.РезервПодОбесценениеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_Резервы КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|УНИЧТОЖИТЬ ТаблицаРешений_Резервы 
	|";
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС
//		
// Результатом работы данной процедуры будут временные таблицы:
// - "ВтТаблицаРешений_СебестоимостьПредприятия"
//
Процедура РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ПостатейныеРасходыПредприятия");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для постатейных расходов предприятия';
								|en = 'Solution for the enterprise itemized expenses'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область НачальнаяСтоимостьПостатейныеРасходы
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	// Постатейные расходы предприятия с НДС
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходы, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.Стоимость, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходы, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	// Постатейные расходы предприятия без НДС
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьБезНДС, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.Трудозатраты, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|
	|ПОМЕСТИТЬ НачальнаяСтоимостьПостатейныеРасходы
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы предприятия с НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеСНДС   КАК ПостатейныеПостоянныеСНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеСНДС   КАК ПостатейныеПеременныеСНДС,
	// Постатейные расходы предприятия без НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                       КАК НомерУзла,
	// Постатейные расходы предприятия с НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеСНДС
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеСНДС, 0)   КАК ПостатейныеПостоянныеСНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеСНДС
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеСНДС, 0)   КАК ПостатейныеПеременныеСНДС,
	// Постатейные расходы предприятия без НДС
	|	УзлыКорректировки.ПостатейныеПостоянныеБезНДС
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеБезНДС, 0) КАК ПостатейныеПостоянныеБезНДС,
	|	УзлыКорректировки.ПостатейныеПеременныеБезНДС
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеБезНДС, 0) КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостатейныеРасходы КАК НачальнаяСтоимость
	|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	0 КАК ПостатейныеПостоянныеСНДС,
	|	0 КАК ПостатейныеПеременныеСНДС,
	|	0 КАК ПостатейныеПостоянныеБезНДС,
	|	0 КАК ПостатейныеПеременныеБезНДС
	|
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|";
	
	#КонецОбласти
	
	#Область Связи
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыСНДС, 0) КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
	|ИЗ
	|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(-Связи.ВесДугиСНДС КАК ЧИСЛО(28,10))   КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(-Связи.ВесДугиБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
	|ИЗ
	|	СвязиУзловДополнительныхРасходов КАК Связи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейные КАК ЧИСЛО(28,10))       КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеБезНДС КАК ЧИСЛО(28,10)) КАК ВесДугиБезНДС
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесСНДС КАК ЧИСЛО(28,10))       КАК ВесДугиСНДС,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесБезНДС КАК ЧИСЛО(28,10))     КАК ВесДугиБезНДС
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	#Область РешениеСЛУ
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеСНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиСНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеБезНДС";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиБезНДС";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_СебестоимостьПредприятия
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС",
		,
		"ТаблицаРешений_СебестоимостьПредприятия");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьПредприятия
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесСНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеСНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеБезНДС, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений_СебестоимостьПредприятия
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
КонецПроцедуры

// Выполняет расчет систем уравнений для показателей:
//	ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
//		
// Результатом работы данной процедуры будут временные таблицы:
// - "ВтТаблицаРешений_СебестоимостьОрганизаций"
//
Процедура РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_ПостатейныеРасходыОрганизаций");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для постатейных расходов организаций';
								|en = 'Solution for the company itemized expenses'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область НачальнаяСтоимостьПостатейныеРасходы
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	// Постатейные расходы организаций (регламентированный учет)
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПостоянные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПостатейныеПеременные, ЛОЖЬ)
	|			ТОГДА (ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0)
	|				) * ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ НачальнаяСтоимостьПостатейныеРасходы
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
	#Область Узлы
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	УзлыКорректировки.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	УзлыКорректировки.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                     КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеРегл
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеРегл, 0) КАК ПостатейныеПостоянныеРегл,
	|	УзлыКорректировки.ПостатейныеПеременныеРегл 
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеРегл, 0) КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеУпр
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеУпр, 0)  КАК ПостатейныеПостоянныеУпр,
	|	УзлыКорректировки.ПостатейныеПеременныеУпр
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеУпр, 0)  КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостатейныеРасходы КАК НачальнаяСтоимость
	|	ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	0 КАК ПостатейныеПостоянныеРегл,
	|	0 КАК ПостатейныеПеременныеРегл,
	|	0 КАК ПостатейныеПостоянныеУпр,
	|	0 КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|";
	
	#КонецОбласти
	
	#Область Связи

	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0) КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0) КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Связи.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	Связи.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|
	|	ВЫРАЗИТЬ(-Связи.ВесДугиРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(-Связи.ВесДугиУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	СвязиУзловДополнительныхРасходов КАК Связи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10))  КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесУпр КАК ЧИСЛО(28,10))   КАК ВесДугиУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	#Область РешениеСЛУОбщаяЧасть
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	#КонецОбласти
	
	#Область РешениеСЛУ_Регл
	
	// описание систем 
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	// решение
	
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// загрузка решения во временную таблицу
	
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл",
		,
		"ТаблицаРешений_СебестоимостьОрганизацийРегл");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
	#Область РешениеСЛУ_Упр
	
	// сброс параметров предыдущего расчета
	
	РасчетСистемЛинейныхУравнений.ОписанияСистем.Очистить();
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	// решение
	
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	
	// загрузка решения во временную таблицу
	
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр",
		,
		"ТаблицаРешений_СебестоимостьОрганизацийУпр");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	ТаблицаРешений.Очистить();
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_СебестоимостьОрганизаций
	
	// Объединение решений во одну временную таблицу.
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийРегл.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийУпр.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийРегл КАК ТаблицаРешенийРегл
	|	ПО ТаблицаРешенийРегл.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизацийУпр КАК ТаблицаРешенийУпр
	|	ПО ТаблицаРешенийУпр.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений_СебестоимостьОрганизацийРегл;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений_СебестоимостьОрганизацийУпр;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
КонецПроцедуры

// Выполняет корректировку предстоящих расходов на сумму резервов для показателей:
//		ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, 
//		ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр
//
Процедура РешитьСЛУПлатформой_РезервыПредстоящихРасходов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_РезервыПредстоящихРасходов");
	
	ПояснениеДляЗамера = НСтр("ru = 'Резервы предстоящих расходов';
								|en = 'Provisions and contingent liabilities'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПеремещенияСписания.НомерУзлаПриемник
	|ПОМЕСТИТЬ ЕстьПроизводственныеУзлы
	|ИЗ
	|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДетальныеРезервыПоУзлам КАК ДД
	|		ПО ДД.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|ГДЕ
	|	ПеремещенияСписания.ПостатейныеПостоянные
	|	ИЛИ ПеремещенияСписания.ПостатейныеПеременные
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	// Если таблица РезервыПоУзлам пустая, то нет смысла считать резервы
	КоличествоСтрокРезервыПоУзлам = 
			РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета.МенеджерВременныхТаблиц, "ЕстьПроизводственныеУзлы");
			
	Если КоличествоСтрокРезервыПоУзлам = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область Узлы_СУчетомРезервов
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                   КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеРегл   КАК ПостатейныеПостоянныеРегл,
	|	УзлыКорректировки.ПостатейныеПеременныеРегл   КАК ПостатейныеПеременныеРегл,
	// Постатейные расходы организаций (управленческий учет)
	|	УзлыКорректировки.ПостатейныеПостоянныеУпр    КАК ПостатейныеПостоянныеУпр,
	|	УзлыКорректировки.ПостатейныеПеременныеУпр    КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                       КАК НомерУзла,
	// Постатейные расходы организаций (регламентированный учет)
	|	ВЫБОР
	// Если для узла нет резевов или при расчете СЛУ получилась отрицательная сумма расходов в узле,
	// то для такого узла корректировку на сумму резерва не выполняем.
	// В таком узле оставляем начальную стоимость расходов.
	|		КОГДА ЕСТЬNULL(Резервы.РезервРегл, 0) = 0
	|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <= 0
	|			ТОГДА УзлыКорректировки.ПостатейныеПостоянныеРегл
	|				+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеРегл, 0)
	// Если общая сумма в узле меньше резерва - зануляем начальную сумму.
	|		КОГДА (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		 * УзлыКорректировки.ВесПостатейныеРегл
	|		 - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
	|			ТОГДА 0
	// Из общей суммы расходов в узле вычитаем резерв и корректируем на отношение постоянных расходов к общей сумме расходов.
	|		ИНАЧЕ (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		 * УзлыКорректировки.ВесПостатейныеРегл
	|		 - ЕСТЬNULL(Резервы.РезервРегл, 0)) // разница между суммой в узле и резервом
	|		 * ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0)
	|		 / ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|	КОНЕЦ КАК ПостатейныеПостоянныеРегл,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Резервы.РезервРегл, 0) = 0
	|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) <= 0
	|			ТОГДА УзлыКорректировки.ПостатейныеПеременныеРегл
	|				+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеРегл, 0)
	// Если общая сумма в узле меньше резерва - зануляем начальную сумму.
	|		КОГДА (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		 * УзлыКорректировки.ВесПостатейныеРегл
	|		 - ЕСТЬNULL(Резервы.РезервРегл, 0)) <= 0
	|			ТОГДА 0
	// Из общей суммы расходов в узле вычитаем резерв и корректируем на отношение постоянных расходов к общей сумме расходов.
	|		ИНАЧЕ (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		 * УзлыКорректировки.ВесПостатейныеРегл
	|		 - ЕСТЬNULL(Резервы.РезервРегл, 0)) // разница между суммой в узле и резервом
	|		 * ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|		 / ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл + СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0)
	|	КОНЕЦ КАК ПостатейныеПеременныеРегл,
	|
	// Постатейные расходы организаций (управленческий учет)
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Резервы.РезервУпр, 0) = 0
	|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) <= 0
	|			ТОГДА УзлыКорректировки.ПостатейныеПостоянныеУпр
	|				+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПостоянныеУпр, 0)
	// Если общая сумма в узле меньше резерва - зануляем начальную сумму.
	|		КОГДА (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|		 * УзлыКорректировки.ВесПостатейныеУпр
	|		 - ЕСТЬNULL(Резервы.РезервУпр, 0)) <= 0
	|			ТОГДА 0
	// Из общей суммы расходов в узле вычитаем резерв и корректируем на отношение постоянных расходов к общей сумме расходов.
	|		ИНАЧЕ (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|		 * УзлыКорректировки.ВесПостатейныеУпр
	|		 - ЕСТЬNULL(Резервы.РезервУпр, 0)) // разница между суммой в узле и резервом
	|		 * ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр, 0)
	|		 / ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|	КОНЕЦ КАК ПостатейныеПостоянныеУпр,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Резервы.РезервУпр, 0) = 0
	|		 ИЛИ ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) <= 0
	|			ТОГДА УзлыКорректировки.ПостатейныеПеременныеУпр
	|				+ ЕСТЬNULL(НачальнаяСтоимость.ПостатейныеПеременныеУпр, 0)
	// Если общая сумма в узле меньше резерва - зануляем начальную сумму.
	|		КОГДА (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|		 * УзлыКорректировки.ВесПостатейныеУпр
	|		 - ЕСТЬNULL(Резервы.РезервУпр, 0)) <= 0
	|			ТОГДА 0
	// Из общей суммы расходов в узле вычитаем резерв и корректируем на отношение постоянных расходов к общей сумме расходов.
	|		ИНАЧЕ (ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|		 * УзлыКорректировки.ВесПостатейныеУпр
	|		 - ЕСТЬNULL(Резервы.РезервУпр, 0)) // разница между суммой в узле и резервом
	|		 * ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|		 / ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр + СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0)
	|	КОНЕЦ КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО УзлыКорректировки.НомерУзла = СебестоимостьОрганизаций.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостатейныеРасходы КАК НачальнаяСтоимость
	|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК Резервы
	|		ПО УзлыКорректировки.НомерУзла = Резервы.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	0 КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(
	|		СУММА(
	|			(ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыРегл, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеРегл, 0))
	|			* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
	|			+ УзлыКорректировки.СтоимостьРегл)
	|		КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	0 КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(
	|		СУММА(
	|			(ЕСТЬNULL(СтоимостьПартийТоваров.СтоимостьУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ТрудозатратыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.ДопРасходыУпр, 0)
	|				+ ЕСТЬNULL(СтоимостьПартийТоваров.РезервПодОбесценениеУпр, 0))
	|			* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0)
	|			+ УзлыКорректировки.СтоимостьУпр)
	|		КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|		ПО СтоимостьПартийТоваров.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|";
	
	#КонецОбласти
	
	#Область Связи
	                                          
	ЗапросСвязи = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязи, ПараметрыРасчета);
	
	ЗапросСвязи.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ЕСТЬNULL(ПеремещенияСписания.ПродукцияДавальца, ЛОЖЬ) ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ПеремещенияСписания.ВесДуги, 0)
	|	КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	ВтПеремещенияСписания КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0) КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(-ПеремещенияСписания.ВесДугиПостатейныеРасходыУпр, 0) КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.Количество КАК ЧИСЛО(28,10)) КАК ВесДугиУпр
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеРегл КАК ЧИСЛО(28,10))   КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесПостатейныеУпр КАК ЧИСЛО(28,10))    КАК ВесДугиУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаИсточник,
	|	УзлыКорректировки.НомерУзла КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесРегл КАК ЧИСЛО(28,10))  КАК ВесДугиРегл,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВесУпр КАК ЧИСЛО(28,10))   КАК ВесДугиУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки";
	ЗапросСвязи.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязи.Текст);
	
	#КонецОбласти
	
	#Область РешениеСЛУ
	
	// источники данных
	МатрицаУзлов  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросУзлы,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																																										|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязей = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросСвязи,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																																										|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеРегл";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиРегл";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПостоянныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостатейныеПеременныеУпр";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиУпр";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	#КонецОбласти
	
	#Область ВтТаблицаРешений_СебестоимостьОрганизаций
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр",
		,
		"ТаблицаРешений_СебестоимостьОрганизаций");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВтТаблицаРешений_СебестоимостьОрганизаций");
	
	Запрос = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_СебестоимостьОрганизаций
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейные = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеБезНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеРегл, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПостоянныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесУпр = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешений.ПостатейныеПеременныеУпр, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеУпр
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
	|	ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений_СебестоимостьОрганизаций
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ТаблицаРешений.Очистить();
	
	#КонецОбласти
	
КонецПроцедуры

//++ Локализация
//
// Выполняет расчет систем уравнений для показателей:
//	ПостояннаяРазница, ВременнаяРазница
//		
// Результатом работы данной процедуры будет временная таблица "ВтТаблицаРешений_НалоговыйУчет"
//
Процедура РешитьСЛУПлатформой_НалоговыйУчет(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РешитьСЛУПлатформой_НалоговыйУчет");
	
	ПояснениеДляЗамера = НСтр("ru = 'Решение для налогового учета';
								|en = 'Solution for taxation accounting'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1(ПараметрыРасчета);
	
	#Область УзлыПостояннаяРазница_Шаг1
	
	ЗапросУзлыПостояннаяРазница = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлыПостояннаяРазница, ПараметрыРасчета);
	
	ЗапросУзлыПостояннаяРазница.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла         КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ПостояннаяРазница КАК ЧИСЛО(28, 10)) КАК ПостояннаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостояннаяРазница КАК УзлыКорректировки
	|";
	
	#КонецОбласти
	
	#Область СвязиПостояннаяРазница
	                                          
	ЗапросСвязиПостояннаяРазница = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязиПостояннаяРазница, ПараметрыРасчета);
	
	ЗапросСвязиПостояннаяРазница.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ПеремещенияСписания.ВесДугиПостояннаяРазница КАК ЧИСЛО(28,10)) КАК ВесДугиПостояннаяРазница
	|ИЗ
	|	ВтТаблицаСвязейПостояннаяРазница КАК ПеремещенияСписания
	|";
	ЗапросСвязиПостояннаяРазница.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязиПостояннаяРазница.Текст);
	#КонецОбласти
	
	// источники данных
	МатрицаУзловПостояннаяРазница  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыПостояннаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																									|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязейПостояннаяРазница = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросСвязиПостояннаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																									|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РешениеСЛУ_ПостояннаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловПостояннаяРазница, МатрицаСвязейПостояннаяРазница);
	
	ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1(ПараметрыРасчета);

	#Область УзлыВременнаяРазница_Шаг1
	
	ЗапросУзлыВременнаяРазница = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлыВременнаяРазница, ПараметрыРасчета);
	
	ЗапросУзлыВременнаяРазница.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(УзлыКорректировки.ВременнаяРазница КАК ЧИСЛО(28, 10)) КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиВременнаяРазница КАК УзлыКорректировки
	|";
	ЗапросУзлыВременнаяРазница.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросУзлыВременнаяРазница.Текст);
	
	#КонецОбласти
	
	#Область СвязиВременнаяРазница
	                                          
	ЗапросСвязиВременнаяРазница = Новый Запрос();
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросСвязиВременнаяРазница, ПараметрыРасчета);
	
	ЗапросСвязиВременнаяРазница.Текст = "
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник КАК НомерУзлаПриемник,
	|	ВЫРАЗИТЬ(ПеремещенияСписания.ВесДугиВременнаяРазница КАК ЧИСЛО(28,10)) КАК ВесДугиВременнаяРазница
	|ИЗ
	|	ВтТаблицаСвязейВременнаяРазница КАК ПеремещенияСписания
	|";
	ЗапросСвязиВременнаяРазница.Текст = 
		РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ЗапросСвязиВременнаяРазница.Текст);
	
	#КонецОбласти
	
	// источники данных
	МатрицаУзловВременнаяРазница  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыВременнаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																								|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	МатрицаСвязейВременнаяРазница = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросСвязиВременнаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'связи';
																									|en = 'links'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	РешениеСЛУ_ВременнаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловВременнаяРазница, МатрицаСвязейВременнаяРазница);
	
	#Область НачальнаяСтоимостьПостояннаяРазница_Шаг2
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	// Начальную стоимость уменьшается на сумму временной разницы 
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ЕСТЬNULL(НЕ ПеремещенияСписания.ПринимаемыеВНУ, ЛОЖЬ)
	|			ТОГДА ЕСТЬNULL(ТаблицаРешений.ВременнаяРазница, 0)
	|				* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
	|		ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ НачальнаяСтоимостьПостояннаяРазницаКорректировка
	|ИЗ
	|	НачальнаяСтоимостьПостояннаяРазница КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
	#Область УзлыПостояннаяРазница_Шаг2
	
	ЗапросУзлыПостояннаяРазница = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлыПостояннаяРазница, ПараметрыРасчета);
	
	ЗапросУзлыПостояннаяРазница.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла         КАК НомерУзла,
	|	УзлыКорректировки.ПостояннаяРазница КАК ПостояннаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                         КАК НомерУзла,
	|	УзлыКорректировки.ПостояннаяРазница
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0)
	|		- ЕСТЬNULL(НачальнаяСтоимостьКорректировка.ВременнаяРазница, 0) КАК ПостояннаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
	|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазницаКорректировка КАК НачальнаяСтоимостьКорректировка
	|		ПО НачальнаяСтоимостьКорректировка.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                         КАК НомерУзла,
	|	УзлыКорректировки.ПостояннаяРазница
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ПостояннаяРазница, 0)
	|		- ЕСТЬNULL(НачальнаяСтоимостьКорректировка.ВременнаяРазница, 0) КАК ПостояннаяРазница
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазница КАК НачальнаяСтоимость
	|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьПостояннаяРазницаКорректировка КАК НачальнаяСтоимостьКорректировка
	|		ПО НачальнаяСтоимостьКорректировка.НомерУзла = УзлыКорректировки.НомерУзла
	|";
	
	#КонецОбласти
	
	МатрицаУзловПостояннаяРазница  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыПостояннаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																									|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	// Решение СЛУ в части постоянной разницы, скорректированной на сумму временной разницы.	
	РешениеСЛУ_ПостояннаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловПостояннаяРазница, МатрицаСвязейПостояннаяРазница);
	
	#Область НачальнаяСтоимостьВременнаяРазница_Шаг2
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	|	ВЫРАЗИТЬ(СУММА(
	// Не распределяется в бух. учете и распределяются в нал. учете.
	|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ИСТИНА)
	|			ТОГДА ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
	|		ИНАЧЕ 0 КОНЕЦ
	// Не распределяются в нал. учете.
	|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
	|			ТОГДА -ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
	|		ИНАЧЕ 0 КОНЕЦ)
	| 		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиПостатейныеРасходыРегл, 0)
	|	) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ НачальнаяСтоимостьВременнаяРазницаКорректировка
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСвязейПостатейныеРасходы КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|ГДЕ
	|	УзлыКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И 
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|
	// Постоянная разница по расходам, не принимаемым к налоговому учету.
	|	ВЫРАЗИТЬ(СУММА(
	// Не распределяется в бух. учете и распределяются в нал. учете.
	|		(ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВБухУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ИСТИНА)
	|			ТОГДА ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
	|		ИНАЧЕ 0 КОНЕЦ
	// Не распределяются в нал. учете.
	|		+ ВЫБОР КОГДА ЕСТЬNULL(ПеремещенияСписания.НеРаспределяетсяВНалУчете, ЛОЖЬ) И ЕСТЬNULL(ПеремещенияСписания.ПринимаемыеВНУ, ИСТИНА)
	|			ТОГДА -ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0)
	|		ИНАЧЕ 0 КОНЕЦ)
	| 		* ЕСТЬNULL(ПеремещенияСписания.ВесДугиРегл, 0)
	|	) КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница
	|
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СвязиУзловДополнительныхРасходов КАК ПеремещенияСписания
	|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = ПеремещенияСписания.НомерУзлаИсточник
	|ГДЕ
	|	НЕ ПеремещенияСписания.НомерУзлаПриемник ЕСТЬ NULL
	|	И НЕ ПеремещенияСписания.НомерУзлаИсточник ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти

	#Область УзлыВременнаяРазница_Шаг2
	
	ЗапросУзлы = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(ЗапросУзлы, ПараметрыРасчета);
	
	ЗапросУзлы.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла        КАК НомерУзла,
	|	УзлыКорректировки.ВременнаяРазница КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиНалоговыйУчет КАК УзлыКорректировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                          КАК НомерУзла,
	|	УзлыКорректировки.ВременнаяРазница
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ВременнаяРазница, 0)
	|		- ЕСТЬNULL(НачальнаяСтоимостьКорректировка.ПостояннаяРазница, 0) КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазница КАК НачальнаяСтоимость
	|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазницаКорректировка КАК НачальнаяСтоимостьКорректировка
	|		ПО НачальнаяСтоимостьКорректировка.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла                                          КАК НомерУзла,
	|	УзлыКорректировки.ВременнаяРазница
	|		+ ЕСТЬNULL(НачальнаяСтоимость.ВременнаяРазница, 0)
	|		- ЕСТЬNULL(НачальнаяСтоимостьКорректировка.ПостояннаяРазница, 0) КАК ВременнаяРазница
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазница КАК НачальнаяСтоимость
	|		ПО НачальнаяСтоимость.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачальнаяСтоимостьВременнаяРазницаКорректировка КАК НачальнаяСтоимостьКорректировка
	|		ПО НачальнаяСтоимостьКорректировка.НомерУзла = УзлыКорректировки.НомерУзла
	|";
	
	#КонецОбласти
	
	МатрицаУзловВременнаяРазница  = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(
		ПараметрыРасчета, ЗапросУзлыВременнаяРазница,,, Истина, ПояснениеДляЗамера + ", " + НСтр("ru = 'узлы';
																								|en = 'nodes'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	// Решение СЛУ в части временной разницы, скорректированной на сумму постоянной разницы.
	РешениеСЛУ_ВременнаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзловВременнаяРазница, МатрицаСвязейВременнаяРазница);
	
	#Область ВтТаблицаРешений_НалоговыйУчет
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений_НалоговыйУчет
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесПостатейныеРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла КАК НомерУзла,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийПостояннаяРазница.ПостояннаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА УзлыКорректировки.ВесРегл = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРешенийВременнаяРазница.ВременнаяРазница, 0) КОНЕЦ КАК ЧИСЛО(28,10)) КАК ВременнаяРазница
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ПостояннаяРазница КАК ТаблицаРешенийПостояннаяРазница
	|		ПО ТаблицаРешенийПостояннаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений_ВременнаяРазница КАК ТаблицаРешенийВременнаяРазница
	|		ПО ТаблицаРешенийВременнаяРазница.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРешений_ПостояннаяРазница
	|;
	|УНИЧТОЖИТЬ ТаблицаРешений_ВременнаяРазница
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
		
КонецПроцедуры

Процедура РешениеСЛУ_ПостояннаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзлов, МатрицаСвязей)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ПостояннаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиПостояннаяРазница";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ПостояннаяРазница",
		,
		"ТаблицаРешений_ПостояннаяРазница");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
КонецПроцедуры

Процедура РешениеСЛУ_ВременнаяРазница(ПараметрыРасчета, ПояснениеДляЗамера, МатрицаУзлов, МатрицаСвязей)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "РассчитатьСистемыЛинейныхУравнений", ПояснениеДляЗамера);
	РасчетСистемЛинейныхУравнений = ПолучитьКомпонентуДляРешенияСЛУ(ПараметрыРасчета);
	
	РасчетСистемЛинейныхУравнений.ИсточникДанныхУзлов = МатрицаУзлов;
	РасчетСистемЛинейныхУравнений.ИсточникДанныхСвязей = МатрицаСвязей;
	
	// описание ключевых колонок
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВУзлах = "НомерУзла";
	РасчетСистемЛинейныхУравнений.КолонкаУравненияВСвязях = "НомерУзлаПриемник";
	РасчетСистемЛинейныхУравнений.КолонкаПеременныеВСвязях = "НомерУзлаИсточник";
	
	// описание систем
	
	ОписаниеСистемы = РасчетСистемЛинейныхУравнений.ОписанияСистем.Добавить();
	ОписаниеСистемы.КолонкаКоэффициентовВУзлах = "ВременнаяРазница";
	ОписаниеСистемы.КолонкаКоэффициентовВСвязях = "ВесДугиВременнаяРазница";
	
	// решение
	ТаблицаРешений = РасчетСебестоимостиПрикладныеАлгоритмы.РассчитатьСистемыЛинейныхУравнений(ПараметрыРасчета, РасчетСистемЛинейныхУравнений);
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
	// Загрузка решений во временную таблицу.
	ПараметрыЗагрузкиСЛУ = РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыЗагрузкиРешенияСЛУ(
		"ВременнаяРазница",
		,
		"ТаблицаРешений_ВременнаяРазница");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗагрузитьРешениеСЛУВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыЗагрузкиСЛУ,
		ТаблицаРешений,
		ПояснениеДляЗамера);
	
КонецПроцедуры

//-- Локализация

//-- НЕ УТ

Процедура СохранитьСЛУ(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоВыполненияФрагментаКода(ПараметрыРасчета, "СохранитьСЛУ", "");
		
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(Т.НомерУзла), -1) + 1 КАК НомерУзла
	|ИЗ
	|	ВтУзлыКорректировкиСебестоимости КАК Т";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ПервыйНомерУзла = Выборка.НомерУзла;
	
	Запрос.УстановитьПараметр("ПервыйНомерУзла", ПервыйНомерУзла);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УзлыКорректировки.НомерУзла + &ПервыйНомерУзла 	КАК НомерУзла,
	|	УзлыКорректировки.Организация                	КАК Организация,
	|	УзлыКорректировки.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	УзлыКорректировки.РазделУчета                	КАК РазделУчета,
	|	УзлыКорректировки.ВидЗапасов                 	КАК ВидЗапасов,
	|	УзлыКорректировки.Партия					 	КАК Партия,
	|	УзлыКорректировки.АналитикаУчетаПартий		 	КАК АналитикаУчетаПартий,
	|	УзлыКорректировки.АналитикаФинансовогоУчета	 	КАК АналитикаФинансовогоУчета,
	|	УзлыКорректировки.ВидДеятельностиНДС		 	КАК ВидДеятельностиНДС,
	|
	|	УзлыКорректировки.Количество          		 	КАК Вес
	|ПОМЕСТИТЬ ВТТекущиеУзлы
	|ИЗ
	|	ВТУзлыКорректировки КАК УзлыКорректировки
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПеремещенияСписания.НомерУзлаИсточник + &ПервыйНомерУзла КАК НомерУзлаИсточник,
	|	ПеремещенияСписания.НомерУзлаПриемник + &ПервыйНомерУзла КАК НомерУзлаПриемник,
	|	ПеремещенияСписания.ВесДуги                              КАК Вес
	|ПОМЕСТИТЬ ВТТекущиеСвязи
	|ИЗ
	|	ВТПеремещенияСписания КАК ПеремещенияСписания
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУзлыКорректировки КАК УзлыПриемник
	|		ПО УзлыПриемник.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
	|ГДЕ
	|	НЕ ПеремещенияСписания.РеализацияВДругуюОрганизацию
	|	И НЕ ЕСТЬNULL(УзлыПриемник.РазделУчета, НЕОПРЕДЕЛЕНО) В (
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания),
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение))
	|";
	
	Запрос.Выполнить();
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбъединитьВременныеТаблицы(
		ПараметрыРасчета,
		"ВТТекущиеУзлы",
		"ВтУзлыКорректировкиСебестоимости",
		"НомерУзла, Организация, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов,
			|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, Вес",
		"",
		"НомерУзла",
		Истина);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбъединитьВременныеТаблицы(
		ПараметрыРасчета,
		"ВТТекущиеСвязи",
		"ВтСвязиУзловКорректировкиСебестоимости",
		"НомерУзлаИсточник, НомерУзлаПриемник, Вес",
		"",
		"НомерУзлаИсточник",
		Истина);
	
	РасчетСебестоимостиПротоколРасчета.ОкончаниеВыполненияФрагментаКода(ПараметрыРасчета);
	
КонецПроцедуры
//
// Сохраняет временные таблицы, используемые для решения СЛУ, в файлы на диск.
//
Процедура СохранитьСЛУВФайл(ПараметрыРасчета, РасчетСтоимостиРегл = Ложь)
	
	ИмяКаталога = СокрЛП(ПараметрыРасчета.ВыгрузкаДанныхРасчета.КаталогДляСохраненияДанныхСЛУ);
	
	Если НЕ ЗначениеЗаполнено(ИмяКаталога) Тогда
		Возврат; // выгрузка СЛУ не требуется
	КонецЕсли;
	
	Попытка
		ТекстОшибки = "";
		СоздатьКаталог(ИмяКаталога);
	Исключение
		ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога);
	Каталог     = Новый Файл(ИмяКаталога);
	
	Если НЕ Каталог.Существует() ИЛИ НЕ Каталог.ЭтоКаталог() Тогда
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найден каталог для сохранения данных СЛУ: ""%1""
				|%2';
				|en = 'Directory for saving LES data is not found: ""%1""
				|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ИмяКаталога),
			ТекстОшибки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
		Возврат; // каталог для выгрузки не найден
		
	КонецЕсли;
	
	ФорматВыгрузки = СокрЛП(НРег(ПараметрыРасчета.ВыгрузкаДанныхРасчета.ФорматСохраненияДанныхСЛУ));
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если ФорматВыгрузки = "mxl" Тогда
		
		// ВтУзлыКорректировки и ВтТаблицаРешений выгружаем в один файл "...Узлы".
		//	- одноименным колонкам этих таблиц присвоим префиксы "Узел" и "Решение" соответственно
		// ВтПеремещенияСписания выгружаем в файл "...Дуги".
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предварительный", "Фактический") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_%1.mxl";													   // какую временную таблицу выгружаем
		
		// Получим данные из временных таблиц
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла					 	КАК НомерУзла,
		|	УзлыКорректировки.Организация                	КАК Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.РазделУчета                	КАК РазделУчета,
		|	УзлыКорректировки.ВидЗапасов                 	КАК ВидЗапасов,
		|	УзлыКорректировки.Партия					 	КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий		 	КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета	 	КАК АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС		 	КАК ВидДеятельностиНДС,
		|
		|	УзлыКорректировки.Количество          		 	КАК Количество,
		|	УзлыКорректировки.Стоимость                     КАК УзелСтоимость,
		|	УзлыКорректировки.СтоимостьБезНДС               КАК УзелСтоимостьБезНДС,
		|	УзлыКорректировки.Трудозатраты                  КАК ТрудозатратыГраф_1,
		|	УзлыКорректировки.СтоимостьЗабалансовая 		КАК УзелСтоимостьЗабалансовая,
		|
		|	СебестоимостьПредприятия.Стоимость              КАК РешениеСтоимость,
		|	СебестоимостьПредприятия.СтоимостьБезНДС        КАК РешениеСтоимостьБезНДС,
		|	СебестоимостьПредприятия.Трудозатраты           КАК РешениеТрудозатраты,
		|	СебестоимостьПредприятия.СтоимостьЗабалансовая 	КАК РешениеСтоимостьЗабалансовая
		|ИЗ
		|	ВТУзлыКорректировки КАК УзлыКорректировки
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = УзлыКорректировки.НомерУзла
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзла
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПеремещенияСписания.НомерУзлаИсточник 		     КАК НомерУзлаИсточник,
		|	ПеремещенияСписания.НомерУзлаПриемник 		     КАК НомерУзлаПриемник,
		|	ПеремещенияСписания.РеализацияВДругуюОрганизацию КАК РеализацияВДругуюОрганизацию,
		|	ПеремещенияСписания.ВесДуги                      КАК ВесДуги,
		|	ПеремещенияСписания.РаботаДляДавальца            КАК РаботаДляДавальца,
		|	ПеремещенияСписания.ПродукцияДавальца		     КАК ПродукцияДавальца
		|ИЗ
		|	ВТПеремещенияСписания КАК ПеремещенияСписания
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУзлаПриемник,
		|	НомерУзлаИсточник
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		// Сохраним первый файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[0].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Узлы"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда  // ошибка записи файла
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
		// Сохраним второй файл
		ТекстДляПротокола = ОбщегоНазначенияУТ.СохранитьТаблицуЗначенийВФайл(
			РезультатЗапроса[1].Выгрузить(),
			ИмяКаталога + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, "Дуги"));
		
		Если ЗначениеЗаполнено(ТекстДляПротокола) Тогда
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецЕсли;
		
	ИначеЕсли ФорматВыгрузки = "csv" Тогда
		// ВтУзлыКорректировки - свободные члены
		// ВтПеремещенияСписания - коэффициенты; НомерУзлаИсточник - № уравнения, НомерУзлаПриемник - № элемента
		//
		// СЛУ из n неизвестных:
		// А(1,1)*Х1 + А(1,2)*Х2 + ... А(1,n)*Xn = B1
		// А(2,1)*Х1 + А(2,2)*Х2 + ... А(2,n)*Xn = B2
		// ...
		// А(n,1)*Х1 + А(n,2)*Х2 + ... А(n,n)*Xn = Bn
		//
		// Формат строки файла CSV:
		// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
		// Для каждого уравнения обязательно есть строка, при этом порядковый номер строки = номеру уравнения
		
		ФайлСЛУ = Новый ТекстовыйДокумент;
		
		ШаблонИмениФайла =
			Формат(ТекущаяДатаСеанса() - Дата(1,1,1), "ЧЦ=12; ЧВН=; ЧГ=")      // дата-время выгрузки
			+ "_" + ?(ПараметрыРасчета.ПредварительныйРасчет, "Предв", "Факт") // какой вид расчета
			+ "_" + ?(РасчетСтоимостиРегл, "Регл", "Упр")					   // какую себестоимость рассчитываем
			+ "_СЛУ.csv";													   // какую временную таблицу выгружаем
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НомераУравнения.НомерУзла КАК НомерУравнения,
		|	ЕСТЬNULL(Коэффициенты.НомерУзлаПриемник, 0) КАК НомерНеизвестного,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(Коэффициенты.ВесДуги, 0) КАК ЧИСЛО(28,10)) КАК КоэффициентНеизвестного,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА НомераУравнения.Количество = 0
		|				ТОГДА 0
		|			КОГДА ЕСТЬNULL(Коэффициенты.ПродукцияДавальца, ЛОЖЬ)
		|				ТОГДА 0
		|			ИНАЧЕ НомераУравнения.Стоимость
		|		КОНЕЦ КАК ЧИСЛО(28,10)) КАК СвободныйКоэффициент
		|ИЗ
		|	ВтУзлыКорректировки КАК НомераУравнения
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК Коэффициенты
		|		ПО НомераУравнения.НомерУзла = Коэффициенты.НомерУзлаИсточник
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерУравнения,
		|	НомерНеизвестного
		|ИТОГИ
		|	МИНИМУМ(СвободныйКоэффициент)
		|ПО
		|	НомерУравнения";
		
		Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
		
		ВыборкаУравнений = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаУравнений.Следующий() Цикл
			
			СтрокаФайла = СокрЛП(Формат(ВыборкаУравнений.СвободныйКоэффициент, "ЧРД=.; ЧН=0; ЧГ=0"));
			
			ВыборкаНеизвестных = ВыборкаУравнений.Выбрать();
			
			Пока ВыборкаНеизвестных.Следующий() Цикл
				
				Если ВыборкаНеизвестных.НомерНеизвестного = NULL Тогда
					Прервать; // в этом уравнении нет ненулевых коэффициентов
				КонецЕсли;
				
				// <Свободный коэффициент В>[,(<Номер неизвестного X>, <Коэффициент А>)]
				СтрокаФайла = СтрокаФайла
					+ ",("
					+ СокрЛП(Формат(ВыборкаНеизвестных.НомерНеизвестного, "ЧДЦ=; ЧН=0; ЧГ=0"))
					+ ","
					+ СокрЛП(Формат(ВыборкаНеизвестных.КоэффициентНеизвестного, "ЧРД=.; ЧН=0; ЧГ=0"))
					+ ")";
				
			КонецЦикла;
			
			ФайлСЛУ.ДобавитьСтроку(СтрокаФайла);
			
		КонецЦикла;
		
		Попытка
			ФайлСЛУ.Записать(ИмяКаталога + ШаблонИмениФайла);
		Исключение
			
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось записать файл ""%1""
					|%2';
					|en = 'Cannot save the ""%1"" file
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				ИмяКаталога + ШаблонИмениФайла,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
				ПараметрыРасчета,
				Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
				ТекстДляПротокола);
			
		КонецПопытки;
		
	Иначе
		
		ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверный формат выгрузки СЛУ: %1';
				|en = 'Incorrect LES export format: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ФорматВыгрузки);
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВремениВыполнения,
			ТекстДляПротокола);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Формирование таблицы ВтСтоимостьПартийТоваров

#Область ПроцедурыЭтапов_ЗарегистрироватьСтоимость

Процедура ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты(ПараметрыРасчета)

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОбновитьСтоимостьПартийТоваров_МатериальныеИТрудозатраты");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО                                 КАК ДокументДвижения,
		|	&НачалоПериода                               КАК Период,
		|	СтоимостьПартийТоваров.НомерУзла                  КАК НомерУзла,
		// Измерения
		|	СтоимостьПартийТоваров.Организация                КАК Организация,
		|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
		|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
		|	СтоимостьПартийТоваров.Партия                     КАК Партия,
		|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.Стоимость, 0) КАК ЧИСЛО(28,10))                 КАК Стоимость,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))           КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(28,10))     КАК СтоимостьЗабалансовая,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходыБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.Трудозатраты, 0) КАК ЧИСЛО(28,10))              КАК Трудозатраты,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеБезНДС,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))             КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьЗабалансоваяРегл, 0) КАК ЧИСЛО(28,10)) КАК СтоимостьЗабалансоваяРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ТрудозатратыРегл, 0) КАК ЧИСЛО(28,10))          КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ВременнаяРазница,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                            КАК РезервПодОбесценениеРегл,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))              КАК СтоимостьУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ТрудозатратыУпр, 0) КАК ЧИСЛО(28,10))           КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеУпр,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                             КАК РезервПодОбесценениеУпр
		|
		|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
		|ИЗ
		|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
		|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|;
		|/////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
		|ИЗ
		|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров
		|;
		|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"СтоимостьПартийТоваровПредварительная");
		
	// Добавим в протокол информацию об узлах с переполнением поля
	СтрокаПротокола = "";
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Организация,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Партия КАК Партия,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК Т
	|ГДЕ
	|	Т.НомерУзла В (&УзлыСПереполнениемПоля)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	Партия,
	|	ВидДеятельностиНДС
	|";
	
	Запрос.УстановитьПараметр("УзлыСПереполнениемПоля", ПараметрыРасчета.УзлыСПереполнениемПоля);
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаПротокола = СтрокаПротокола + ?(СтрокаПротокола = "", "", Символы.ПС)
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Организация: ""%1"", Аналитика номенклатуры: ""%2"", Партия: ""%3"", Вид деятельности НДС: ""%4"",';
					|en = 'Company: ""%1"", Item dimension: ""%2"", Lot: ""%3"", VAT activity type: ""%4"",'"),
				Выборка.Организация,
				Выборка.АналитикаУчетаНоменклатуры,
				Выборка.Партия,
				Выборка.ВидДеятельностиНДС);
				
	КонецЦикла;
	
	СтрокаПротокола =
		НСтр("ru = 'Стоимость некоторых аналитик номенклатуры не может быть рассчитана при решении СЛУ.
			|Возможные причины: превышение расходов над приходами и начальными остатками или зацикливание движений.';
			|en = 'The cost of some item dimensions can not be calculated when solving LES.
			|Possible causes: consumption exceeding receipts and beginning inventories or looping records.'")
		+ Символы.ПС + СтрокаПротокола;
	
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
		
КонецПроцедуры

Процедура ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОбновитьСтоимостьПартийТоваров_ДополнительныеРасходы");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                     КАК ДокументДвижения,
	|	&НачалоПериода                                   КАК Период,
	|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
	// Измерения
	|	СтоимостьПартийТоваров.Организация                КАК Организация,
	|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
	|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
	|	СтоимостьПартийТоваров.Партия                     КАК Партия,
	|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	// Ресурсы
	|	СтоимостьПартийТоваров.Стоимость                                        КАК Стоимость,
	|	СтоимостьПартийТоваров.СтоимостьБезНДС                                  КАК СтоимостьБезНДС,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                            КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьСНДС, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьДопРасходы,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))  КАК СтоимостьДопРасходыБезНДС,
	|	СтоимостьПартийТоваров.Трудозатраты                                     КАК Трудозатраты,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеБезНДС,
	|
	|	СтоимостьПартийТоваров.СтоимостьРегл                                    КАК СтоимостьРегл,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                        КАК СтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))    КАК ДопРасходыРегл,
	|	СтоимостьПартийТоваров.ТрудозатратыРегл                                 КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ВременнаяРазница,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                         КАК РезервПодОбесценениеРегл,
	|
	|	СтоимостьПартийТоваров.СтоимостьУпр                                     КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))     КАК ДопРасходыУпр,
	|	СтоимостьПартийТоваров.ТрудозатратыУпр                                  КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                           КАК ПостатейныеПеременныеУпр,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                          КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = СтоимостьПартийТоваров.НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
	|ИЗ
	|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров
	|;
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"СуммыРасходов, СтоимостьПартийТоваровПредварительная");
	
КонецПроцедуры

Процедура ЗарегистрироватьСтоимость_ДополнительныеРасходы(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗарегистрироватьСтоимость_ДополнительныеРасходы");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Узлы.НомерУзла,
	// Измерения
	|	Узлы.Организация,
	|	Узлы.Подразделение,
	|	Узлы.НаправлениеДеятельности,
	|	Узлы.СтатьяРасходов,
	|	Узлы.АналитикаРасходов,
	// Ресурсы
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьСНДС, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьСНДС,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС, 0) КАК ЧИСЛО(28,10))  КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))    КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаРешений.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))     КАК СтоимостьУпр
	|ПОМЕСТИТЬ СтоимостьДополнительныхРасходов
	|ИЗ
	|	УзлыКорректировкиДополнительныхРасходов КАК Узлы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРешений КАК ТаблицаРешений
	|		ПО ТаблицаРешений.НомерУзла = Узлы.НомерУзла
	|";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

Процедура ОбновитьСтоимостьПартийТоваров_ВключениеИсключениеНДС(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ЗарегистрироватьСтоимость_ВключениеИсключениеНДС");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО                                     КАК ДокументДвижения,
	|	&НачалоПериода                                   КАК Период,
	|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
	// Измерения
	|	СтоимостьПартийТоваров.Организация                КАК Организация,
	|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
	|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
	|	СтоимостьПартийТоваров.Партия                     КАК Партия,
	|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	// Ресурсы
	|	СтоимостьПартийТоваров.Стоимость                                                  КАК Стоимость,
	|	СтоимостьПартийТоваров.СтоимостьБезНДС                                            КАК СтоимостьБезНДС,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                                      КАК СтоимостьЗабалансовая,
	|	СтоимостьПартийТоваров.СтоимостьДопРасходы                                        КАК СтоимостьДопРасходы,
	|	СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС                                  КАК СтоимостьДопРасходыБезНДС,
	|	СтоимостьПартийТоваров.Трудозатраты                                               КАК Трудозатраты,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеБезНДС,
	|
	|	ВЫРАЗИТЬ(СтоимостьПартийТоваров.СтоимостьРегл
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьРегл, 0) КАК ЧИСЛО(28,10))       КАК СтоимостьРегл,
	|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                                  КАК СтоимостьЗабалансоваяРегл,
	|	СтоимостьПартийТоваров.ДопРасходыРегл                                             КАК ДопРасходыРегл,
	|	СтоимостьПартийТоваров.ТрудозатратыРегл                                           КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ВременнаяРазница,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                   КАК РезервПодОбесценениеРегл,
	|
	|	ВЫРАЗИТЬ(СтоимостьПартийТоваров.СтоимостьУпр
	|		+ ЕСТЬNULL(СебестоимостьОрганизаций.СтоимостьУпр, 0) КАК ЧИСЛО(28,10))        КАК СтоимостьУпр,
	|	СтоимостьПартийТоваров.ДопРасходыУпр                                              КАК ДопРасходыУпр,
	|	СтоимостьПартийТоваров.ТрудозатратыУпр                                            КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                     КАК ПостатейныеПеременныеУпр,
	|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                    КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ СтоимостьПартийТоваровПредварительная
	|ИЗ
	|	ВТСтоимостьПартийТоваров КАК СтоимостьПартийТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
	|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
	|ИЗ
	|	СтоимостьПартийТоваровПредварительная КАК СтоимостьПартийТоваров";
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"УзлыКорректировкиВключениеИсключениеНДС, ВтТаблицаРешений_СебестоимостьОрганизаций,
		|СтоимостьПартийТоваровПредварительная");
	
КонецПроцедуры

Процедура СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьСтоимостьПартийТоваров_РезервыПодОбесценениеЗапасов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиКорректировкаСтоимости.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО                                 КАК ДокументДвижения,
		|	&НачалоПериода                               КАК Период,
		|	УзлыКорректировки.НомерУзла                  КАК НомерУзла,
		// Измерения
		|	УзлыКорректировки.Организация                КАК Организация,
		|	УзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	УзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
		|	УзлыКорректировки.РазделУчета                КАК РазделУчета,
		|	УзлыКорректировки.Партия                     КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	УзлыКорректировки.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК Стоимость,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьЗабалансовая,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьДопРасходыБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК Трудозатраты,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеБезНДС,
		|
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК СтоимостьЗабалансоваяРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеРегл,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ВременнаяРазница,
		|	ВЫРАЗИТЬ(&РезервПодОбесценениеРегл КАК ЧИСЛО(28,10))                                       КАК РезервПодОбесценениеРегл,
		|
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК СтоимостьУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ДопРасходыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(28,10))                                                               КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(0 КАК ЧИСЛО (28,10))                                                              КАК ПостатейныеПеременныеУпр,
		|	ВЫРАЗИТЬ(&РезервПодОбесценениеУпр КАК ЧИСЛО(28,10))                                        КАК РезервПодОбесценениеУпр
		|ПОМЕСТИТЬ ВТСтоимостьПартийТоваров
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		//++ НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_РезервыПодОбесценениеЗапасовОрганизаций КАК ТаблицаРешенийОрганизаций
		|		ПО ТаблицаРешенийОрганизаций.НомерУзла = УзлыКорректировки.НомерУзла
		//-- НЕ УТ
		|";
		
	//++ НЕ УТ
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеРегл", "ЕСТЬNULL(ТаблицаРешенийОрганизаций.РезервПодОбесценениеРегл, 0)");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеУпр", "ЕСТЬNULL(ТаблицаРешенийОрганизаций.РезервПодОбесценениеУпр, 0)");
	//-- НЕ УТ
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеРегл", "0");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РезервПодОбесценениеУпр", "0");
	
	Запрос.Текст = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, Запрос.Текст);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиПартийТоваров

// Этап "ПодготовкаДанныхДляСтоимостиПартийТоваров"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиПартийТоваров(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиПартийТоваров");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтСтоимостьПартийТоваров");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = "" 
		+ ТекстСтоимостьПартийТоваров()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстСтоимостьПартийТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	СтоимостьПартийТоваров.НомерУзла                 КАК НомерУзла,
		// Измерения
		|	СтоимостьПартийТоваров.Организация                КАК Организация,
		|	СтоимостьПартийТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьПартийТоваров.ВидЗапасов                 КАК ВидЗапасов,
		|	СтоимостьПартийТоваров.РазделУчета                КАК РазделУчета,
		|	СтоимостьПартийТоваров.Партия                     КАК Партия,
		|	СтоимостьПартийТоваров.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
		|	СтоимостьПартийТоваров.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
		|	СтоимостьПартийТоваров.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
		// Ресурсы
		|	СтоимостьПартийТоваров.Стоимость                                                             КАК Стоимость,
		|	СтоимостьПартийТоваров.СтоимостьДопРасходы                                                   КАК СтоимостьДопРасходы,
		|	СтоимостьПартийТоваров.СтоимостьЗабалансовая                                                 КАК СтоимостьЗабалансовая,
		|	СтоимостьПартийТоваров.СтоимостьБезНДС                                                       КАК СтоимостьБезНДС,
		|	СтоимостьПартийТоваров.СтоимостьДопРасходыБезНДС                                             КАК СтоимостьДопРасходыБезНДС,
		|	СтоимостьПартийТоваров.Трудозатраты                                                          КАК Трудозатраты,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПостоянныеСНДС, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеСНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПеременныеСНДС, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеСНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПостоянныеБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПостоянныеБезНДС,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьПредприятия.ПостатейныеПеременныеБезНДС, 0) КАК ЧИСЛО(28,10)) КАК ПостатейныеПеременныеБезНДС,
		|
		|	СтоимостьПартийТоваров.СтоимостьРегл                                                         КАК СтоимостьРегл,
		|	СтоимостьПартийТоваров.СтоимостьЗабалансоваяРегл                                             КАК СтоимостьЗабалансоваяРегл,
		|	СтоимостьПартийТоваров.ДопРасходыРегл                                                        КАК ДопРасходыРегл,
		|	СтоимостьПартийТоваров.ТрудозатратыРегл                                                      КАК ТрудозатратыРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПостоянныеРегл,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(28,10))   КАК ПостатейныеПеременныеРегл,
		|
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьНалоговыйУчет.ПостояннаяРазница, 0) КАК ЧИСЛО(28,10))         КАК ПостояннаяРазница,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьНалоговыйУчет.ВременнаяРазница, 0) КАК ЧИСЛО(28,10))          КАК ВременнаяРазница,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеРегл                                              КАК РезервПодОбесценениеРегл,
		|
		|	СтоимостьПартийТоваров.СтоимостьУпр                                                          КАК СтоимостьУпр,
		|	СтоимостьПартийТоваров.ДопРасходыУпр                                                         КАК ДопРасходыУпр,
		|	СтоимостьПартийТоваров.ТрудозатратыУпр                                                       КАК ТрудозатратыУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(28,10))    КАК ПостатейныеПостоянныеУпр,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СебестоимостьОрганизаций.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(28,10))    КАК ПостатейныеПеременныеУпр,
		|	СтоимостьПартийТоваров.РезервПодОбесценениеУпр                                               КАК РезервПодОбесценениеУпр
		|
		|ПОМЕСТИТЬ ВтСтоимостьПартийТоваров
		|ИЗ
		|	ВТСтоимостьПартийТоваровПредыдущая КАК СтоимостьПартийТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьПредприятия КАК СебестоимостьПредприятия
		|		ПО СебестоимостьПредприятия.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_СебестоимостьОрганизаций КАК СебестоимостьОрганизаций
		|		ПО СебестоимостьОрганизаций.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК СебестоимостьНалоговыйУчет
		|		ПО СебестоимостьНалоговыйУчет.НомерУзла = СтоимостьПартийТоваров.НомерУзла
		|";
КонецФункции

#КонецОбласти

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП

// Этап "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП");
	
	// 1. Инициализация структуры данных этапа подготовки данных.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПодготовкуДанныхДляСледующихЭтапов(
		ПараметрыРасчета,
		"ВтСтоимостиНезавершенногоПроизводства, ВтСтоимостиНезавершенногоПроизводстваРегл, РезервыПредстоящихРасходов,
		|ВтСтоимостиДополнительныхРасходов, ВтСтоимостиДополнительныхРасходовРегл");
		
	// 2. Формирование временных таблиц.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьДанныеДляСледующихЭтапов(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета));
	
	// 3. Завершаем этап подготовки данных. 
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьПодготовкуДанныхДляСледующихЭтапов(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		+ ВтСтоимостиНезавершенногоПроизводства()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ВтСтоимостиНезавершенногоПроизводстваРегл()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + РезервыПредстоящихРасходов()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ВтСтоимостиДополнительныхРасходовПостатейные()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ВтСтоимостиДополнительныхРасходовПостатейныеРегл()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ВтСтоимостиНезавершенногоПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.РазделУчета 					  КАК РазделУчета,
		|	УзлыКорректировки.Организация 					  КАК Организация,
		|	УзлыКорректировки.Подразделение                   КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности		  КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов 				  КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов 			  КАК АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции 			  КАК СтатьяКалькуляции,
		|	УзлыКорректировки.Этап 							  КАК Этап,
		|	УзлыКорректировки.ГруппаПродукции 				  КАК ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск 		  КАК ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия 						  КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий 			  КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция 			  КАК КодСтрокиПродукция,
		
		|	0                                                 КАК Стоимость,
		|	0                                                 КАК СтоимостьДопРасходы,
		|	0                                                 КАК Трудозатраты,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеСНДС)	  КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеСНДС)	  КАК ПостатейныеПеременныеСНДС,
		|	0                                                 КАК СтоимостьЗабалансовая,
		
		|	0                                                 КАК СтоимостьБезНДС,
		|	0                                                 КАК СтоимостьДопРасходыБезНДС,
		|	0                                                 КАК ТрудозатратыБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС
		|
		|ПОМЕСТИТЬ ВтСтоимостиНезавершенногоПроизводства
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
		|ГДЕ
		|	(ТаблицаРешений.ПостатейныеПостоянныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеБезНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеБезНДС <> 0)
		|	И УзлыКорректировки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|	И УзлыКорректировки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И УзлыКорректировки.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции,
		|	УзлыКорректировки.Этап,
		|	УзлыКорректировки.ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	АналитикаУчетаПартий,
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Подразделение,
		|	Этап
		|";
КонецФункции

Функция ВтСтоимостиНезавершенногоПроизводстваРегл()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.РазделУчета 				КАК РазделУчета,
		|	УзлыКорректировки.Организация 				КАК Организация,
		|	УзлыКорректировки.Подразделение             КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности	КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов 			КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов 		КАК АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции 		КАК СтатьяКалькуляции,
		|	УзлыКорректировки.Этап 						КАК Этап,
		|	УзлыКорректировки.ГруппаПродукции 			КАК ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск 	КАК ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия					КАК Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий		КАК АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция		КАК КодСтрокиПродукция,
		
		|	0 КАК СтоимостьРегл,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
		|	СУММА(ЕСТЬNULL(РезервыПоУзлам.РезервРегл, 0))   КАК РезервРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0)) КАК ПостояннаяРазница,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0))  КАК ВременнаяРазница,
		
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ТрудозатратыУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр,
		|	СУММА(ЕСТЬNULL(РезервыПоУзлам.РезервУпр, 0))   КАК РезервУпр
		|
		|ПОМЕСТИТЬ ВтСтоимостиНезавершенногоПроизводстваРегл
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК УзлыКорректировки
		|	ПО УзлыКорректировки.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений_НалоговыйУчет
		|	ПО ТаблицаРешений_НалоговыйУчет.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК РезервыПоУзлам
		|		ПО ТаблицаРешений.НомерУзла = РезервыПоУзлам.НомерУзла
		|ГДЕ
		|	(ТаблицаРешений.ПостатейныеПостоянныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПостоянныеУпр <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеУпр <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0) <> 0)
		|	И УзлыКорректировки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|	И УзлыКорректировки.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И УзлыКорректировки.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство))
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.РазделУчета,
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов,
		|	УзлыКорректировки.СтатьяКалькуляции,
		|	УзлыКорректировки.Этап,
		|	УзлыКорректировки.ГруппаПродукции,
		|	УзлыКорректировки.ПравилоОтнесенияНаВыпуск,
		|	УзлыКорректировки.Партия,
		|	УзлыКорректировки.АналитикаУчетаПартий,
		|	УзлыКорректировки.КодСтрокиПродукция
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партия,
		|	АналитикаУчетаПартий,
		|	СтатьяРасходов,
		|	АналитикаРасходов,
		|	Подразделение,
		|	Этап
		|";
КонецФункции

Функция ВтСтоимостиДополнительныхРасходовПостатейные()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.Организация КАК Организация,
		|	УзлыКорректировки.Подразделение КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов КАК АналитикаРасходов,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеСНДС)   КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеСНДС)   КАК ПостатейныеПеременныеСНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС
		|ПОМЕСТИТЬ ВтСтоимостиДополнительныхРасходов
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьПредприятия КАК ТаблицаРешений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|		ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
		|ГДЕ
		|	ТаблицаРешений.ПостатейныеПеременныеСНДС + ТаблицаРешений.ПостатейныеПостоянныеСНДС <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеБезНДС + ТаблицаРешений.ПостатейныеПостоянныеБезНДС <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|";
КонецФункции

Функция ВтСтоимостиДополнительныхРасходовПостатейныеРегл()
	Возврат "
		|ВЫБРАТЬ
		|	УзлыКорректировки.Организация КАК Организация,
		|	УзлыКорректировки.Подразделение КАК Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов КАК СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов КАК АналитикаРасходов,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеРегл)   КАК ПостатейныеПостоянныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеРегл)   КАК ПостатейныеПеременныеРегл,
		|	СУММА(ТаблицаРешений.ПостатейныеПостоянныеУпр)    КАК ПостатейныеПостоянныеУпр,
		|	СУММА(ТаблицаРешений.ПостатейныеПеременныеУпр)    КАК ПостатейныеПеременныеУпр,
		|
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0)) КАК ПостояннаяРазница,
		|	СУММА(ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0))  КАК ВременнаяРазница
		|ПОМЕСТИТЬ ВтСтоимостиДополнительныхРасходовРегл
		|ИЗ
		|	ВтТаблицаРешений_СебестоимостьОрганизаций КАК ТаблицаРешений
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКорректировкиДополнительныхРасходов КАК УзлыКорректировки
		|	ПО УзлыКорректировки.НомерУзла = ТаблицаРешений.НомерУзла
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений_НалоговыйУчет КАК ТаблицаРешений_НалоговыйУчет
		|	ПО ТаблицаРешений_НалоговыйУчет.НомерУзла = ТаблицаРешений.НомерУзла
		|ГДЕ
		|	ТаблицаРешений.ПостатейныеПеременныеРегл + ТаблицаРешений.ПостатейныеПостоянныеРегл <> 0
		|		ИЛИ ТаблицаРешений.ПостатейныеПеременныеУпр + ТаблицаРешений.ПостатейныеПостоянныеУпр <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ПостояннаяРазница, 0) <> 0
		|		ИЛИ ЕСТЬNULL(ТаблицаРешений_НалоговыйУчет.ВременнаяРазница, 0) <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	УзлыКорректировки.Организация,
		|	УзлыКорректировки.Подразделение,
		|	УзлыКорректировки.НаправлениеДеятельности,
		|	УзлыКорректировки.СтатьяРасходов,
		|	УзлыКорректировки.АналитикаРасходов
		|";
КонецФункции

Функция РезервыПредстоящихРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.НаправлениеДеятельности,
		|	ДД.ВидРезервов,
		|	ДД.ОбъектУчетаРезервов,
		|	Узлы.Подразделение,
		|	Узлы.СтатьяРасходов,
		|	Узлы.АналитикаРасходов,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходРегл = 0 ИЛИ РезервыПоУзлам.РезервРегл = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходРегл /
		|					ВЫБОР
		|						КОГДА ДД.РасходРегл < РезервыПоУзлам.РезервРегл
		|							ТОГДА РезервыПоУзлам.РезервРегл
		|						ИНАЧЕ ДД.РасходРегл
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервРегл КАК ЧИСЛО(28,10)) КАК СуммаРегл,
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ДД.РасходУпр = 0 ИЛИ РезервыПоУзлам.РезервУпр = 0
		|				ТОГДА 0
		|			ИНАЧЕ
		|				ВЫРАЗИТЬ(ДД.РасходУпр /
		|					ВЫБОР
		|						КОГДА ДД.РасходУпр < РезервыПоУзлам.РезервУпр
		|							ТОГДА РезервыПоУзлам.РезервУпр
		|						ИНАЧЕ ДД.РасходУпр
		|					КОНЕЦ КАК ЧИСЛО(28,10))
		|		КОНЕЦ * ДД.РезервУпр КАК ЧИСЛО(28,10)) КАК СуммаУпр
		|ПОМЕСТИТЬ РезервыПредстоящихРасходов
		|ИЗ
		|	ДетальныеРезервыПоУзлам КАК ДД
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РезервыПоУзлам КАК РезервыПоУзлам
		|		ПО ДД.НомерУзла = РезервыПоУзлам.НомерУзла
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКорректировкиПостатейныеРасходыНЗП КАК Узлы
		|		ПО ДД.НомерУзла = Узлы.НомерУзла
		|";
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ПроцедурыЭтапа_ПодготовкаДанныхДляСтоимостиТоваров

// Этап "ПодготовкаДанныхДляСтоимостиТоваров"
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура ПодготовкаДанныхДляСтоимостиТоваров(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляСтоимостиТоваров");
	
	// 1. Инициализация структуры данных для расчета
	//	- формирует структуру ПараметрыРасчета.РаспределениеПартий.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьТрансляциюПартий(
		ПараметрыРасчета,
		Неопределено,
		Метаданные.РегистрыСведений.СтоимостьТоваров.Имя);
		
	ПараметрыРасчета.Вставить("ИдетРасчетСебестоимости", Истина);
		
	// 2. Получение исходных данных для трансляции
	// 	- формирует временную таблицу Данные.
	РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьДанныеЭтапаРасчета(
		ПараметрыРасчета,
		ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета));
		
	ПараметрыРасчета.Вставить("ИдетРасчетСебестоимости", Ложь);
		
	// 3. Помещение данных в таблицу-приемник и очистка вспомогательных временных таблиц.
	// 	- формирует движения по регистру сведений СтоимостьТоваров.
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗавершитьРаспределениеПартий(ПараметрыРасчета);
	
КонецПроцедуры

// Тексты запросов

// ... общий

Функция ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета = Неопределено) Экспорт
	
	ТекстЗапроса = ""
		// подготовка временных таблиц
		+ ТекстВТОборотыКоличествоСПартиями()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВТОборотыКоличествоБезПартий()
		+ ОбщегоНазначенияУТ.РазделительЗапросовВПакете()
		// выборка данных
		+ ТекстОписаниеДанныхДляСтоимостиТоваров() 
		+ ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстСтоимостьТоваров()
		+ "";
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ТекстЗапроса = РасчетСебестоимостиКорректировкаСтоимости.УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ... формирования временные таблиц

Функция ТекстВТОборотыКоличествоСПартиями()
	Возврат "
		|ВЫБРАТЬ
		|	Т.АналитикаУчетаНоменклатуры,
		|	Т.РазделУчета,
		|	Т.ВидЗапасов,
		|	Т.Организация,
		|	Т.Партия,
		|	Т.АналитикаУчетаПартий,
		|	Т.АналитикаФинансовогоУчета,
		|	Т.ВидДеятельностиНДС,
		|	ВЫБОР
		|		КОГДА Т.КоличествоРасход <> 0 ТОГДА Т.КоличествоРасход
		|		ИНАЧЕ Т.КоличествоОстаток
		|	КОНЕЦ КАК Количество
		|ПОМЕСТИТЬ ВТОборотыКоличествоСПартиями
		|ИЗ
		|(ВЫБРАТЬ
		|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
		|	ДанныеПоКоличеству.РазделУчета,
		|	ДанныеПоКоличеству.ВидЗапасов,
		|	ДанныеПоКоличеству.Организация,
		|	ДанныеПоКоличеству.Партия,
		|	ДанныеПоКоличеству.АналитикаУчетаПартий,
		|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
		|	ДанныеПоКоличеству.ВидДеятельностиНДС,
		|	СУММА(ДанныеПоКоличеству.КоличествоРасход)  КАК КоличествоРасход,
		|	СУММА(ДанныеПоКоличеству.КоличествоОстаток) КАК КоличествоОстаток
		|ИЗ
		|	(ВЫБРАТЬ
		|		Обороты.АналитикаУчетаНоменклатуры,
		|		Обороты.РазделУчета КАК РазделУчета,
		|		Обороты.ВидЗапасов,
		|		Обороты.Организация,
		|		Обороты.Партия,
		|		Обороты.АналитикаУчетаПартий,
		|		Обороты.АналитикаФинансовогоУчета,
		|		Обороты.ВидДеятельностиНДС,
		|		Обороты.Количество 	КАК КоличествоРасход,
		|		0 					КАК КоличествоОстаток
		|	ИЗ
		|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Обороты
		|	ГДЕ
		|		НЕ Обороты.СлужебноеВидДвиженияПриход
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Остатки.АналитикаУчетаНоменклатуры,
		|		Остатки.РазделУчета,
		|		Остатки.ВидЗапасов,
		|		Остатки.Организация,
		|		Остатки.Партия,
		|		Остатки.АналитикаУчетаПартий,
		|		Остатки.АналитикаФинансовогоУчета,
		|		Остатки.ВидДеятельностиНДС,
		|		0 					КАК КоличествоРасход,
		|		Остатки.Количество 	КАК КоличествоОстаток
		|	ИЗ
		|		ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Остатки
		|	) КАК ДанныеПоКоличеству
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПоКоличеству.АналитикаУчетаНоменклатуры,
		|	ДанныеПоКоличеству.Организация,
		|	ДанныеПоКоличеству.ВидЗапасов,
		|	ДанныеПоКоличеству.РазделУчета,
		|	ДанныеПоКоличеству.Партия,
		|	ДанныеПоКоличеству.АналитикаУчетаПартий,
		|	ДанныеПоКоличеству.АналитикаФинансовогоУчета,
		|	ДанныеПоКоличеству.ВидДеятельностиНДС
		|) КАК Т
		|";
КонецФункции

Функция ТекстВТОборотыКоличествоБезПартий() // использует ВТОборотыКоличествоСПартиями
	Возврат "
		|ВЫБРАТЬ
		|	Обороты.АналитикаУчетаНоменклатуры,
		|	Обороты.РазделУчета,
		|	Обороты.ВидЗапасов,
		|	Обороты.Организация,
		|	СУММА(Обороты.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТОборотыКоличествоБезПартий
		|ИЗ
		|	ВТОборотыКоличествоСПартиями КАК Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	Обороты.АналитикаУчетаНоменклатуры,
		|	Обороты.РазделУчета,
		|	Обороты.ВидЗапасов,
		|	Обороты.Организация
		|
		|ИМЕЮЩИЕ
		|	СУММА(Обороты.Количество) <> 0
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляСтоимостиТоваров()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	СтоимостьТоваров.Регистратор,
		|	СтоимостьТоваров.Период,
		|
		|	СтоимостьТоваров.Организация,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.ВидЗапасов,
		|	СтоимостьТоваров.РазделУчета,
		|
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьЗабалансовая,
		|	0 КАК СтоимостьДопРасходы,
		|	0 КАК СтоимостьДопРасходыБезНДС,
		|	0 КАК Трудозатраты,
		|	0 КАК ПостатейныеПостоянныеСНДС,
		|	0 КАК ПостатейныеПостоянныеБезНДС,
		|	0 КАК ПостатейныеПеременныеСНДС,
		|	0 КАК ПостатейныеПеременныеБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК СтоимостьЗабалансоваяРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	0 КАК ДопРасходыРегл,
		|	0 КАК ТрудозатратыРегл,
		|	0 КАК ПостатейныеПостоянныеРегл,
		|	0 КАК ПостатейныеПеременныеРегл,
		|	0 КАК СтоимостьУпр,
		|	0 КАК ДопРасходыУпр,
		|	0 КАК ТрудозатратыУпр,
		|	0 КАК ПостатейныеПостоянныеУпр,
		|	0 КАК ПостатейныеПеременныеУпр
		|
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
		|";
		
	ТекстЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ПодготовитьЗапросОписанияДанных(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстСтоимостьТоваров() // использует ВТОборотыКоличествоСПартиями, ВТОборотыКоличествоБезПартий
	Возврат "
		|ВЫБРАТЬ
		|	ДокументыРасчетаСебестоимости.Ссылка													КАК Регистратор,
		|	&НачалоПериода 																			КАК Период,
		|
		|	СтоимостьТоваров.Организация 															КАК Организация,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры 											КАК АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.ВидЗапасов 															КАК ВидЗапасов,
		|	СтоимостьТоваров.РазделУчета 															КАК РазделУчета,
		|
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Стоимость * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Стоимость,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьБезНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансовая * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансовая,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходы * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходы,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьДопРасходыБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.Трудозатраты * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК Трудозатраты,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеСНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеСНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеБезНДС,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьЗабалансоваяРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостояннаяРазница * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостояннаяРазница,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ВременнаяРазница * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ВременнаяРазница,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеРегл * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеРегл,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.СтоимостьУпр * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК СтоимостьУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ДопРасходыУпр * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ДопРасходыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ТрудозатратыУпр * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ТрудозатратыУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПостоянныеУпр * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПостоянныеУпр,
		|	СУММА(
		|		ВЫРАЗИТЬ(СтоимостьТоваров.ПостатейныеПеременныеУпр * ОборотыСПартиями.Количество
		|				 / Обороты.Количество КАК ЧИСЛО(31,10)))									КАК ПостатейныеПеременныеУпр
		|ИЗ
		|	ВТСтоимостьПартийТоваров КАК СтоимостьТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
		|		ПО СтоимостьТоваров.Организация = ДокументыРасчетаСебестоимости.Организация
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОборотыКоличествоСПартиями КАК ОборотыСПартиями
		|		ПО ОборотыСПартиями.АналитикаУчетаНоменклатуры  = СтоимостьТоваров.АналитикаУчетаНоменклатуры
		|		И ОборотыСПартиями.РазделУчета 					= СтоимостьТоваров.РазделУчета
		|		И ОборотыСПартиями.ВидЗапасов 					= СтоимостьТоваров.ВидЗапасов
		|		И ОборотыСПартиями.Организация 					= СтоимостьТоваров.Организация
		|		И (ОборотыСПартиями.Партия 						= СтоимостьТоваров.Партия
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.АналитикаУчетаПартий 		= СтоимостьТоваров.АналитикаУчетаПартий
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.АналитикаФинансовогоУчета 	= СтоимостьТоваров.АналитикаФинансовогоУчета
		|			ИЛИ &РегламентноеЗадание)
		|		И (ОборотыСПартиями.ВидДеятельностиНДС 			= СтоимостьТоваров.ВидДеятельностиНДС
		|			ИЛИ &РегламентноеЗадание)
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОборотыКоличествоБезПартий КАК Обороты
		|		ПО Обороты.АналитикаУчетаНоменклатуры   = СтоимостьТоваров.АналитикаУчетаНоменклатуры
		|		И Обороты.РазделУчета 					= СтоимостьТоваров.РазделУчета
		|		И Обороты.ВидЗапасов 					= СтоимостьТоваров.ВидЗапасов
		|		И Обороты.Организация 					= СтоимостьТоваров.Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыРасчетаСебестоимости.Ссылка,
		|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
		|	СтоимостьТоваров.РазделУчета,
		|	СтоимостьТоваров.ВидЗапасов,
		|	СтоимостьТоваров.Организация
		|";
КонецФункции

#КонецОбласти

#Область Тестирование

// Дополняет список этапов расчета.
// 
// Параметры:
// 	СписокЭтапов - СписокЗначений - 
//
Процедура ДополнитьЭтапыСПодготовкойДанныхДляСледующихЭтапов(СписокЭтапов) Экспорт
	
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы");
	//++ НЕ УТ
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиПартийТоваров");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1");
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП");
	//-- НЕ УТ
	
КонецПроцедуры

// Дополняет список этапов расчета.
// 
// Параметры:
// 	СписокЭтапов - СписокЗначений - 
//
Процедура ДополнитьЭтапыСТрансляциейПартий(СписокЭтапов) Экспорт
	
	СписокЭтапов.Добавить("ПодготовкаДанныхДляСтоимостиТоваров");
	
КонецПроцедуры

Процедура ТекстЗапросаДляРасчетаЭтапа(ИмяЭтапа, ПараметрыРасчета, ТекстЗапроса) Экспорт
	
	Если ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУ(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ_РезервыПодОбесценениеЗапасов" Тогда
		ТекстЗапроса = ТекстДляРешенияСЛУ_РезервыПодОбесценениеЗапасов(ПараметрыРасчета);
	//++ НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиПартийТоваров" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиПартийТоваров(ПараметрыРасчета);
	//-- НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУ_ДополнительныеРасходы" Тогда
		ТекстЗапроса = ТекстДляРешенияСЛУ_ДополнительныеРасходы(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиТоваров" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиТоваров(ПараметрыРасчета);
	//++ НЕ УТ
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУПостатейныеРасходы" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУПостатейныеРасходы(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУРезервыПредстоящихРасходов" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУРезервыПредстоящихРасходов(ПараметрыРасчета);
	//++ Локализация
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУНалоговыйУчет" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУНалоговыйУчет(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУПостояннаяРазница_Этап1" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУПостояннаяРазница(ПараметрыРасчета);
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляРешенияСЛУВременнаяРазница_Этап1" Тогда
		ТекстЗапроса = ТекстЗапросаДляРешенияСЛУВременнаяРазница(ПараметрыРасчета);
	//-- Локализация
	ИначеЕсли ИмяЭтапа = "ПодготовкаДанныхДляСтоимостиПрочихРасходовНЗП" Тогда
		ТекстЗапроса = ТекстЗапросаДляСтоимостиПрочихРасходовНЗП(ПараметрыРасчета);
	//-- НЕ УТ
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
