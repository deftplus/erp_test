////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

Процедура ПослеЗаписи(Объект) Экспорт

	//++ Локализация
	Оповестить("ЗаписьДокументаНаОснованииИнвентаризации",, Объект.Ссылка);
	//-- Локализация
	
КонецПроцедуры

// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения -
Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	Если Элемент.Имя = Элементы.ДокументНаОсновании.Имя Тогда
		
		ПродолжитьИзменениеРеквизита = ФормаДокумента_ДокументНаОснованииПриИзменении(Объект, Форма);
		
	ИначеЕсли Элемент.Имя = Элементы.ХозяйственнаяОперация.Имя Тогда
		
		ФормаДокумента_ХозяйственнаяОперацияПриИзменении(Объект, ДополнительныеПараметры);
		ТребуетсяВызовСервера = Истина;
		
	ИначеЕсли Элемент.Имя = Элементы.Дата.Имя
		ИЛИ Элемент.Имя = Элементы.ПорядокУчетаНУ.Имя 
		ИЛИ Элемент.Имя = Элементы.ВариантРаздельногоУчетаНДС.Имя
		ИЛИ Элемент.Имя = Элементы.ВариантРаздельногоУчетаНДСРаспределяется.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ВариантПримененияЦелевогоФинансирования.Имя
		ИЛИ Элемент.Имя = Элементы.ПорядокУчетаБУ.Имя
		ИЛИ Элемент.Имя = Элементы.МетодНачисленияАмортизацииБУ.Имя Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ПервоначальнаяСтоимостьБУ.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовДоИзменения");
		ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьИнформациюВПодвале");
		
	ИначеЕсли Элемент.Имя = Элементы.ПервоначальнаяСтоимостьПР.Имя Тогда
		
		ПринятиеКУчетуНМАКлиентСерверЛокализация.ПересчитатьСуммуВР(Форма); 
		
	ИначеЕсли Элемент.Имя = Элементы.ПервоначальнаяСтоимостьНУ.Имя Тогда
		
		ПринятиеКУчетуНМАКлиентСерверЛокализация.ПересчитатьСуммуВР(Форма); 
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовДоИзменения");
		
	ИначеЕсли Элемент.Имя = Элементы.ПередаватьРасходыВДругуюОрганизацию.Имя Тогда
		
		ФормаДокумента_ПередаватьРасходыВДругуюОрганизациюПриИзменении(Объект);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовБУ.Имя
		ИЛИ Элемент.Имя = Элементы.СтатьяДоходовЦФ.Имя 
		ИЛИ Элемент.Имя = Элементы.СтатьяДоходовПоИнвентаризации.Имя Тогда
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элемент);
		
	ИначеЕсли Элемент.Имя = Элементы.ЦелевоеФинансированиеСчет.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			Элемент.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

// 
// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	
	Если Команда.Имя = Форма.Команды.ЗаполнитьИсточникиФинансирования.Имя Тогда
		ТребуетсяВызовСервера = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

Процедура СрокИспользованияПриИзменении(Форма, Элемент, СрокиИспользования) Экспорт

	//++ Локализация	
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Элемент.Имя = "СрокИспользованияБУ" Тогда
		
		Если Объект.СрокИспользованияНУ = 0
			Или Объект.СрокИспользованияНУ = Форма.ЗначенияРеквизитовДоИзменения.СрокИспользованияБУ Тогда
			Объект.СрокИспользованияНУ = Объект.СрокИспользованияБУ;
			СрокиИспользования.Вставить(Элементы.СрокИспользованияНУ, Объект.СрокИспользованияБУ);
		КонецЕсли;
		
		Если Объект.СрокИспользованияУУ = 0
			Или Объект.СрокИспользованияУУ = Форма.ЗначенияРеквизитовДоИзменения.СрокИспользованияБУ Тогда
			Объект.СрокИспользованияУУ = Объект.СрокИспользованияБУ;
			СрокиИспользования.Вставить(Элементы.СрокИспользованияУУ, Объект.СрокИспользованияБУ);
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	Элементы = Форма.Элементы;
	Если Элемент = Элементы.СтатьяРасходовБУ Тогда
		ДоходыИРасходыКлиент.НачалоВыбораСтатьи(Форма, Элемент, СтандартнаяОбработка);
	ИначеЕсли Элемент = Элементы.АналитикаРасходовБУ Тогда
		ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(Форма, Элемент, СтандартнаяОбработка);
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

Процедура АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	Элементы = Форма.Элементы;
	Если Элемент = Элементы.АналитикаРасходовБУ Тогда
		ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

Процедура ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	Элементы = Форма.Элементы;
	Если Элемент = Элементы.АналитикаРасходовБУ Тогда
		ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

//++ Локализация

Функция ФормаДокумента_ДокументНаОснованииПриИзменении(Объект, Форма)
	
	Если Объект.ДокументНаОсновании Тогда
		
		ОтборСписка = Новый Структура;
		ОтборСписка.Вставить("Проведен", Истина);
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			ОтборСписка.Вставить("Организация", Объект.Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
			ОтборСписка.Вставить("Подразделение", Объект.Подразделение);
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ИмяРеквизита", Форма.Элементы.ДокументНаОсновании.Имя);
		ОписаниеОповещения = Новый ОписаниеОповещения("ФормаДокумента_ДокументНаОснованииПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", ОтборСписка);
		ОткрытьФорму("Документ.ИнвентаризацияНМА.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещения);
		
		Возврат Ложь;
		
	Иначе
		Объект.ДокументОснование = Неопределено;
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

Процедура ФормаДокумента_ДокументНаОснованииПриИзмененииЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Объект = ДополнительныеПараметры.Форма.Объект;
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Объект.ДокументОснование = РезультатЗакрытия;
	Иначе
		Объект.ДокументНаОсновании = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ТекстВопроса = НСтр("ru = 'Заполнить документ по инвентаризации?';
							|en = 'Fill in the stocktaking document?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ФормаДокумента_ЗаполнитьПоДаннымОснованияЗавершение", ЭтотОбъект, ДополнительныеПараметры.Форма);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ФормаДокумента_ЗаполнитьПоДаннымОснованияЗавершение(РезультатВопроса, Форма) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "Организация,Подразделение");
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, "ДокументНаОсновании", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокумента_ХозяйственнаяОперацияПриИзменении(Объект, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = "ХозяйственнаяОперация";
	
	Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации")
		И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР") Тогда
		Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		Объект.ГруппаФинансовогоУчета = Неопределено;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ВидОбъектаУчета";
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура ФормаДокумента_ПередаватьРасходыВДругуюОрганизациюПриИзменении(Объект)
	
	Если Не Объект.ПередаватьРасходыВДругуюОрганизацию Тогда
		Объект.ОрганизацияПолучательРасходов = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
