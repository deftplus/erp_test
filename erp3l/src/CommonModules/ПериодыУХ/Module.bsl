
// Выполняет запрос к справочнику Периоды для пролучения подчиненных периодов с указанными отборами
//
// Параметры:
//  ПериодНачало  - Дата,Справочник.Периоды - Начало отбора периодов
//  ПериодОкончания  - Дата,Справочник.Периоды - Верхняя граница отбора периодов
//  Периодичность  - Перечисление.Периодичность - Отбор периодов по периодичности
//
// Возвращаемое значение:
//   Массив   - подчиненные периоды
//
Функция ПолучитьПодчиненныеПериоды(ПериодНачало, ПериодОкончания, Периодичность = Неопределено) Экспорт

	Если ТипЗнч(ПериодНачало) = Тип("СправочникСсылка.Периоды") И Периодичность = Неопределено Тогда
		 Периодичность =  ПериодНачало.Периодичность;
	КонецЕсли;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Периоды.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Периоды КАК Периоды
	               |ГДЕ
	               |	Периоды.ПометкаУдаления = ЛОЖЬ
	               |	И Периоды.ДатаНачала >= &ДатаНачала
	               |	И Периоды.ДатаНачала <= &ДатаОкончания
	               |	И Периоды.Произвольный = ЛОЖЬ
	               |	И Периоды.Периодичность = &Периодичность
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Периоды.ДатаНачала";

	Запрос.УстановитьПараметр("ДатаНачала",    ?(ТипЗнч(ПериодНачало) = Тип("Дата"), ПериодНачало, ПериодНачало.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ТипЗнч(ПериодОкончания) = Тип("Дата"), ПериодОкончания, ПериодОкончания.ДатаНачала));
	Запрос.УстановитьПараметр("Периодичность", Периодичность);
	
	Результат = Запрос.Выполнить();
	
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");	
	
КонецФункции // ПолучитьПодчиненныеПериоды()

Функция ПолучитьПодчиненныеПериодыТаблица(ПериодСценария,ПериодСценарияОкончание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Периоды.Ссылка КАК ПериодКурса
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ  ";
	
	Запрос.Текст=Запрос.Текст+"	
	|	Периоды.Периодичность = &Периодичность
	|	И Периоды.ДатаНачала >= &ДатаНачала
	|	И Периоды.ДатаОкончания <= &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала",		ПериодСценария.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",	ПериодСценарияОкончание.ДатаОкончания);
	Запрос.УстановитьПараметр("Периодичность",	ПериодСценария.Периодичность);
	
	
	Запрос.Текст=Запрос.Текст+"
	|Упорядочить ПО Периоды.ДатаНачала";
	
	
		
	Возврат Запрос.Выполнить().Выгрузить();
		
		
КонецФункции // ПолучитьПодчиненныеПериоды()

Функция ПолучитьПериодПоСдвигу(ДатаНачала, ЗначениеСдвига, Периодичность) Экспорт
	
	ЗначениеОтбораС = ?(ЗначениеЗаполнено(ЗначениеСдвига), Число(ЗначениеСдвига), 0);
	
	нПериод = ОбщегоНазначенияУХ.ДобавитьИнтервал(ДатаНачала, Периодичность, ЗначениеОтбораС);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Периоды.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ
	|	Периоды.ПометкаУдаления 		= ЛОЖЬ
	|	И Периоды.Периодичность 		= &Периодичность
	|	И Периоды.Произвольный 			= ЛОЖЬ
	|	И Периоды.ПометкаУдаления 		= ЛОЖЬ
	|	И Периоды.ДатаНачала 			= &ДатаНачала";
	
	Запрос.УстановитьПараметр("Периодичность"	,Периодичность);
	Запрос.УстановитьПараметр("ДатаНачала"		,нПериод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл																												   
		Возврат Выборка.Ссылка;	
	КонецЦикла;

	Возврат Справочники.Периоды.ПустаяСсылка();
		
КонецФункции
