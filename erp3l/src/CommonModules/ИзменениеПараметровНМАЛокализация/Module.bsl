////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Изменение параметров НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Добавляет в текст запроса реквизиты шапки документа.
//  Реквизиты добавляются вместо параметра "&ИзменениеПараметровНМА_РеквизитыДокумента".
//
// Параметры:
//  ТекстЗапроса - Строка	 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыДокумента(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	
	ПоляЛокализации = 
	"	ДанныеДокумента.ОтражатьВБУ КАК ОтражатьВБУ,
	|	ДанныеДокумента.ОтражатьВНУ КАК ОтражатьВНУ,
	|	ДанныеДокумента.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ДанныеДокумента.МетодНачисленияАмортизацииБУФлаг КАК МетодНачисленияАмортизацииБУФлаг,
	|	ДанныеДокумента.СрокИспользованияБУ КАК СрокИспользованияБУ,
	|	ДанныеДокумента.СрокИспользованияБУФлаг КАК СрокИспользованияБУФлаг,
	|	ДанныеДокумента.КоэффициентБУ КАК КоэффициентБУ,
	|	ДанныеДокумента.КоэффициентБУФлаг КАК КоэффициентБУФлаг,
	|	ДанныеДокумента.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ДанныеДокумента.НачислятьАмортизациюНУФлаг КАК НачислятьАмортизациюНУФлаг,
	|	ДанныеДокумента.СрокИспользованияНУ КАК СрокИспользованияНУ,
	|	ДанныеДокумента.СрокИспользованияНУФлаг КАК СрокИспользованияНУФлаг,
	|	ДанныеДокумента.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
	|	ДанныеДокумента.СпециальныйКоэффициентНУФлаг КАК СпециальныйКоэффициентНУФлаг";
	
	ПоляЛокализации = СтрЗаменить(ПоляЛокализации, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзменениеПараметровНМА_РеквизитыДокумента", ПоляЛокализации);
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("АмортизационныеРасходы.ОрганизацияПолучательРасходов");
	
	ПроверитьЗаполнениеПараметров(Объект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ИзменениеПараметровНМА2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеПеремещенияСтоимостиНМА(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеПеремещенияАмортизацииНМА(СписокЗапросов);
	
	#Область ПеремещениеДоходыОтЦелевогоФинансирования // Дт 98 :: Кт 98
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение доходов от целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ 
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияНУЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияПРЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияВРЦФ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ 
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияНУЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияПРЦФ, 0)
	|		- ЕСТЬNULL(АмортизацияНМА.АмортизацияВРЦФ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Перемещение доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|	ПО АмортизацияНМА.Регистратор = Строки.Регистратор
	|		И АмортизацияНМА.НематериальныйАктив = Строки.НематериальныйАктив
	|		И АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|ГДЕ
	|	(Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)
	|	И Строки.НаправлениеДеятельности <> Строки.КорНаправлениеДеятельности";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьСтрокуАмортизационныеРасходы(Объект, ДанныеСтроки, Отказ) Экспорт

	//++ Локализация
	
	ШаблонПолучатель = НСтр("ru = 'Не заполнено поле ""Организация-получатель расходов"" в строке ""%1"" списка ""Амортизационные расходы"".';
							|en = 'The ""Expense recipient company"" field is left empty in ""%1"" line of the ""Depreciation expenses"" list.'");
	Если ДанныеСтроки.ПередаватьРасходыВДругуюОрганизацию
		И Не ЗначениеЗаполнено(ДанныеСтроки.ОрганизацияПолучательРасходов) Тогда
		Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("АмортизационныеРасходы", ДанныеСтроки.НомерСтроки, "ОрганизацияПолучательРасходов");
		ТекстСообщения = СтрШаблон(ШаблонПолучатель, ДанныеСтроки.НомерСтроки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Дополняет блокировку данных.
// 
// Параметры:
// 	Объект - ДокументОбъект.ИзменениеПараметровНМА2_4 - Документ.
// 	Блокировка - БлокировкаДанных - Блокировка данных.
Процедура ДополнитьБлокировкуДанныхПриПроведении(Объект, Блокировка) Экспорт

	//++ Локализация
	
	Если Объект.ОтражатьВРеглУчете Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииНМАБУ");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.НМА;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НематериальныйАктив", "НематериальныйАктив");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииНМАБУ");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.НМА;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НематериальныйАктив", "НематериальныйАктив");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ПараметрыВыбраны(Объект) Экспорт

	ПараметрыВыбраны = Ложь;
	
	//++ Локализация
	
	ПараметрыВыбраны =
		Объект.МетодНачисленияАмортизацииБУФлаг
		ИЛИ Объект.СрокИспользованияБУФлаг
		ИЛИ Объект.КоэффициентБУФлаг
		ИЛИ Объект.НачислятьАмортизациюНУФлаг
		ИЛИ Объект.СрокИспользованияНУФлаг
		ИЛИ Объект.СпециальныйКоэффициентНУФлаг;

	//-- Локализация
	
	Возврат ПараметрыВыбраны;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоИзменяемыеПараметрыИспользуются() Экспорт
	
	ТекстЗапроса = Неопределено;

	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(РезультатПроверки.НеДопускаетсяИзменениеКоэффициентаУскоренияБУ) КАК НеДопускаетсяИзменениеКоэффициентаУскоренияБУ,
	|	МАКСИМУМ(РезультатПроверки.НеИспользуетсяМетодНачисленияПоНаработке) КАК НеИспользуетсяМетодНачисленияПоНаработке,
	|	МАКСИМУМ(РезультатПроверки.НеДопускаетсяИзменениеКоэффициентаУскоренияУУ) КАК НеДопускаетсяИзменениеКоэффициентаУскоренияУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|
			// НеДопускаетсяИзменениеКоэффициентаУскоренияБУ
	|		&КоэффициентБУФлаг
	|		И (НЕ &МетодНачисленияАмортизацииБУФлаг
	|					И ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка)
	|			ИЛИ &МетодНачисленияАмортизацииБУФлаг
	|					И &МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка)) КАК НеДопускаетсяИзменениеКоэффициентаУскоренияБУ,
	|		
			// НеИспользуетсяМетодНачисленияПоНаработке
	|		&ОбъемНаработкиФлаг
	|		И НЕ (НЕ &МетодНачисленияАмортизацииУУФлаг
	|					И ПараметрыАмортизацииНМАУУ.МетодНачисленияАмортизации В (&СпособыПоНаработке)
	|				ИЛИ &МетодНачисленияАмортизацииУУФлаг
	|					И &МетодНачисленияАмортизацииУУ В (&СпособыПоНаработке)
	|				ИЛИ НЕ &МетодНачисленияАмортизацииБУФлаг
	|					И ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ В (&СпособыПоНаработке)
	|				ИЛИ &МетодНачисленияАмортизацииБУФлаг
	|					И &МетодНачисленияАмортизацииБУ В (&СпособыПоНаработке)) КАК НеИспользуетсяМетодНачисленияПоНаработке,
	|
			// НеДопускаетсяИзменениеКоэффициентаУскоренияУУ
	|		&КоэффициентУскоренияУУФлаг
	|		И (НЕ &МетодНачисленияАмортизацииУУФлаг
	|					И ПараметрыАмортизацииНМАУУ.МетодНачисленияАмортизации <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка)
	|			ИЛИ &МетодНачисленияАмортизацииУУФлаг
	|					И &МетодНачисленияАмортизацииУУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка)) КАК НеДопускаетсяИзменениеКоэффициентаУскоренияУУ
	|	ИЗ
	|		Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				&Дата, 
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведенияНМА
	|		ПО ПервоначальныеСведенияНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка
	|			И ПервоначальныеСведенияНМА.Организация = &Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАУУ.СрезПоследних(
	|				&Дата, 
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПараметрыАмортизацииНМАУУ
	|		ПО ПараметрыАмортизацииНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка
	|			И ПараметрыАмортизацииНМАУУ.Организация = &Организация
	|	ГДЕ
	|		НематериальныеАктивы.Ссылка В (&СписокНМА)
	|
	|	) КАК РезультатПроверки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(РезультатПроверки.НеДопускаетсяИзменениеКоэффициентаУскоренияБУ) = ИСТИНА
	|		ИЛИ МАКСИМУМ(РезультатПроверки.НеИспользуетсяМетодНачисленияПоНаработке) = ИСТИНА
	|		ИЛИ МАКСИМУМ(РезультатПроверки.НеДопускаетсяИзменениеКоэффициентаУскоренияУУ) = ИСТИНА";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаДляПроверкиЧтоИзменяемыеПараметрыИспользуются(Объект, Запрос) Экспорт
	
	//++ Локализация
	
	// БУ
	Запрос.УстановитьПараметр("КоэффициентБУФлаг", Объект.КоэффициентБУФлаг);
	Запрос.УстановитьПараметр("МетодНачисленияАмортизацииБУФлаг", Объект.МетодНачисленияАмортизацииБУФлаг);
	Запрос.УстановитьПараметр("МетодНачисленияАмортизацииБУ", Объект.МетодНачисленияАмортизацииБУ);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьРезультатПроверкиИспользованияИзменяемыхПараметров(Выборка, Объект, Отказ) Экспорт

	//++ Локализация
	
	Если Выборка.НеДопускаетсяИзменениеКоэффициентаУскоренияБУ Тогда
		ТекстСообщения = НСтр("ru = 'Для изменения параметра ""Коэффициент ускорения (бухгалтерский учет)"" у НМА должен быть способ начисления амортизации ""Уменьшаемого остатка"".';
								|en = 'IA must have ""Declining balance"" depreciation accrual method to change the ""Acceleration factor (bookkeeping)"" parameter.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "КоэффициентБУФлаг",, Отказ);
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаДокумента

// Устанавливает условное оформление формы.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма.
Процедура УстановитьУсловноеОформление(Форма) Экспорт

	//++ Локализация
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	#Область АмортизационныеРасходыОрганизацияПолучательРасходов
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.АмортизационныеРасходыОрганизацияПолучательРасходов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.АмортизационныеРасходы.ПередаватьРасходыВДругуюОрганизацию");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	#КонецОбласти
	
	#Область НеПринятКУчету_Регл
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НМАНачислятьАмортизациюНУ.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НМАСпециальныйКоэффициентНУ.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НМА.ПринятКУчетуРегл");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не принят к учету>';
																|en = '<not recognized>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаДляЗаполненияТекущихЗначенийПараметров() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка КАК НематериальныйАктив,
	|	ЕСТЬNULL(ПорядокУчетаНМА.ГруппаФинансовогоУчета, НЕОПРЕДЕЛЕНО) КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ПорядокУчетаНМА.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПорядокУчетаНМА.ОбъемНаработки, НЕОПРЕДЕЛЕНО) КАК ОбъемНаработки,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.СрокИспользования, 0) КАК СрокИспользованияУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.КоэффициентУскорения, 0) КАК КоэффициентУскоренияУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.МетодНачисленияАмортизации, НЕОПРЕДЕЛЕНО) КАК МетодНачисленияАмортизацииУУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАУУ.ЛиквидационнаяСтоимостьРегл, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ, ЛОЖЬ) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию)
	|	КОНЕЦ КАК ПорядокУчета,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ПринятКУчетуУпр
	|	,ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент, 0) КАК СпециальныйКоэффициентНУ
	|	,ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ, 0) КАК СрокИспользованияБУ
	|	,ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокИспользованияНУ
	|	,ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.КоэффициентБУ, 0) КАК КоэффициентБУ
	|	,ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ, 0) КАК НачислятьАмортизациюНУ
	|	,ЕСТЬNULL(ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ, 0) КАК МетодНачисленияАмортизацииБУ
	|	,ЕСТЬNULL(ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ПринятКУчетуРегл
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПараметрыАмортизацииНМАУУ
	|		ПО (ПараметрыАмортизацииНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМА
	|		ПО (ПорядокУчетаНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведенияНМА
	|		ПО (ПервоначальныеСведенияНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПараметрыАмортизацииНМАБУ
	|		ПО (ПараметрыАмортизацииНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	 
КонецФункции

Процедура ДополнитьИнформациюВПодвале(Объект, ЗаголовокНадписи) Экспорт

	//++ Локализация
	
	Если ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()) < ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4() Тогда
		Если ЗаголовокНадписи.Количество() <> 0 Тогда
			ЗаголовокНадписи.Добавить(Символы.ПС);
		КонецЕсли;
		ЗаголовокНадписи.Добавить(НСтр("ru = 'Документ введен для перехода на учет внеоборотных активов версии 2.4';
										|en = 'Document is entered to migrate to capital assets accounting 2.4'"));
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияНМА(ТекстыЗапроса, "Документ.ИзменениеПараметровНМА2_4");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	&Организация КАК Организация,
	|	втПервоначальныеСведенияНМА.СпособПоступления КАК СпособПоступления,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР КАК ПервоначальнаяСтоимостьПР,
	|	втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР КАК ПервоначальнаяСтоимостьВР,
	|	втПервоначальныеСведенияНМА.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	&МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	втПервоначальныеСведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	втПервоначальныеСведенияНМА.ДатаПринятияКУчетуУУ КАК ДатаПринятияКУчетуУУ,
	|	втПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	втПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ КАК ДокументПринятияКУчетуУУ,
	|	втПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуБУ,
	|	втПервоначальныеСведенияНМА.ДокументСписания КАК ДокументСписания,
	|	втПервоначальныеСведенияНМА.Коэффициент КАК Коэффициент,
	|	втПервоначальныеСведенияНМА.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	втПервоначальныеСведенияНМА.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	втПервоначальныеСведенияНМА.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	втПервоначальныеСведенияНМА.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	втПервоначальныеСведенияНМА.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	втПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.НМА КАК ТаблицаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияНМА КАК втПервоначальныеСведенияНМА
	|		ПО втПервоначальныеСведенияНМА.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И &ОтражатьВБУ
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &МетодНачисленияАмортизацииБУФлаг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокУчетаНМАБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, "Документ.ИзменениеПараметровНМА2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	&Организация КАК Организация,
	|	
	|	ПорядокУчета.Состояние КАК Состояние,
	|	ПорядокУчета.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ВЫБОР
	|		КОГДА &НачислятьАмортизациюНУФлаг
	|			ТОГДА &НачислятьАмортизациюНУ
	|		ИНАЧЕ ПорядокУчета.НачислятьАмортизациюНУ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВБУ
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ПорядокУчета.СпособОтраженияРасходовБУ
	|	КОНЕЦ КАК СпособОтраженияРасходовБУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВНУ
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ПорядокУчета.СпособОтраженияРасходовНУ
	|	КОНЕЦ КАК СпособОтраженияРасходовНУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВБУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчета.СтатьяРасходовБУ
	|	КОНЕЦ КАК СтатьяРасходовБУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВБУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчета.АналитикаРасходовБУ
	|	КОНЕЦ КАК АналитикаРасходовБУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВНУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчета.СтатьяРасходовНУ
	|	КОНЕЦ КАК СтатьяРасходовНУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|				И &ОтражатьВНУ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчета.АналитикаРасходовНУ
	|	КОНЕЦ КАК АналитикаРасходовНУ,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|	КОНЕЦ КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ВЫБОР
	|		КОГДА &АмортизационныеРасходыФлаг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ ПорядокУчета.ОрганизацияПолучательРасходов
	|	КОНЕЦ КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.НМА КАК ТаблицаНМА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|				И &Организация = Организация
	|				И НематериальныйАктив В
	|						(ВЫБРАТЬ СписокНМА.НематериальныйАктив ИЗ ВтСписокНМА КАК СписокНМА)
	|			) КАК ПорядокУчета
	|		ПО
	|			ПорядокУчета.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И (&АмортизационныеРасходыФлаг
	|		ИЛИ &НачислятьАмортизациюНУФлаг)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииНМАБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыАмортизацииНМАБУ(ТекстыЗапроса, "Документ.ИзменениеПараметровНМА2_4");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	&Организация КАК Организация,
	|
	|	ВЫБОР
	|		КОГДА &СрокИспользованияБУФлаг
	|			ТОГДА &СрокИспользованияБУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияБУ,
	|
	|	ВЫБОР
	|		КОГДА &СрокИспользованияНУФлаг
	|			ТОГДА &СрокИспользованияНУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ
	|	КОНЕЦ КАК СрокПолезногоИспользованияНУ,
	|
	|	ВЫБОР
	|		КОГДА &КоэффициентБУФлаг
	|			ТОГДА &КоэффициентБУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.КоэффициентБУ
	|	КОНЕЦ КАК КоэффициентБУ,
	|
	|	ВЫБОР
	|		КОГДА &СпециальныйКоэффициентНУФлаг
	|			ТОГДА &СпециальныйКоэффициентНУ
	|		ИНАЧЕ втПараметрыАмортизацииНМАБУ.СпециальныйКоэффициент
	|	КОНЕЦ КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.НМА КАК ТаблицаНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыАмортизацииНМАБУ КАК втПараметрыАмортизацииНМАБУ
	|		ПО втПараметрыАмортизацииНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И (&СпециальныйКоэффициентНУФлаг
	|		ИЛИ &КоэффициентБУФлаг
	|		ИЛИ &СрокИспользованияБУФлаг
	|		ИЛИ &СрокИспользованияНУФлаг)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПараметров(Объект, Отказ)
	
	Если Объект.ГруппаФинансовогоУчетаФлаг 
		И (НЕ Объект.ОтражатьВРеглУчете ИЛИ НЕ Объект.ОтражатьВУпрУчете) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И Организация = &Организация
		|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаБУ
		|		ПО (ПорядокУчетаБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И Организация = &Организация
		|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаУУ
		|		ПО (ПорядокУчетаУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
		|ГДЕ
		|	НематериальныеАктивы.Ссылка В(&СписокНМА)
		|	И ПорядокУчетаБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
		|	И ПорядокУчетаУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("СписокНМА", Объект.НМА.ВыгрузитьКолонку("НематериальныйАктив"));
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо отразить изменение параметров в управленческом и регламентированном учетах, т.к. изменяется группа финансового учета и выбраны нематериальные активы (расходы на НИОКР), которые приняты в обоих учетах';
									|en = 'Record the parameter change in management and local accounting because the group of financial accounting changes and intangible assets (R&D expenses) accepted in both accountings are selected'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВариантОтраженияВУчете");
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Прочее

Процедура ДополнитьСписокЗапросовРегистрацииДанныхКОбработкеДляПереходаНаНовуюВерсию(СписокЗапросов) Экспорт

	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИзменениеПараметровНМА2_4.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4 КАК ИзменениеПараметровНМА2_4
	|ГДЕ
	|	ИзменениеПараметровНМА2_4.ОтражатьВРеглУчете
	|	И НЕ ИзменениеПараметровНМА2_4.ОтражатьВБУ
	|	И НЕ ИзменениеПараметровНМА2_4.ОтражатьВНУ";

	СписокЗапросов.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(ДанныеОбъекта) Экспорт

	//++ Локализация
	
	Если ДанныеОбъекта.ОтражатьВРеглУчете
		И НЕ ДанныеОбъекта.ОтражатьВБУ
		И НЕ ДанныеОбъекта.ОтражатьВНУ Тогда
		
		ДанныеОбъекта.ОтражатьВБУ = Истина;
		ДанныеОбъекта.ОтражатьВНУ = Истина;
	КонецЕсли; 
			
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
