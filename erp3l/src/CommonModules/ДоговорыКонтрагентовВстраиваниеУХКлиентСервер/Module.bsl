
#Область ПрограммныйИнтерфейс	

#Область ПрограммныйИнтерфейс_ИменаРеквизитов

Функция ИмяРеквизитаКонтрагент(ТипФИ = Неопределено) Экспорт
	
	Если ТипФИ = Тип("СправочникСсылка.ЦенныеБумаги") Тогда
		Возврат "Эмитент";
	Иначе	
		Возврат "Контрагент";
	КонецЕсли;
	
КонецФункции

Функция ИмяРеквизитаВидДоговора(ВидДоговораУХ) Экспорт
	
	ИмяСправочника = 	УправлениеДоговорамиУХКлиентСерверПовтИсп.ПолучитьИмяСправочникаДоговора(ВидДоговораУХ);
	
	Если ИмяСправочника = ИмяСправочникаДоговорыКонтрагентов() Тогда
		Возврат "ТипДоговора";
	Иначе
		Возврат "ХарактерДоговора";
	КонецЕсли;
	
КонецФункции

Функция ИмяРеквизитаСуммаДоговора(ТипДоговора = Неопределено) Экспорт
	
	Если ТипДоговора = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Возврат "Сумма";
	ИначеЕсли ТипДоговора = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда	
		Возврат "СуммаТраншей";
	ИначеЕсли ТипДоговора = Тип("СправочникСсылка.ДоговорыАренды") Тогда	
		Возврат Неопределено; // Для договоров аренды получать сумму договора необходимо из регистра сведений.
	ИначеЕсли ТипДоговора = Тип("СправочникСсылка.ЦенныеБумаги") Тогда	
		Возврат "Номинал";		
	КонецЕсли;
	
КонецФункции

Функция ИмяРеквизитаСрокДействияДоговора(ТипДоговора = Неопределено) Экспорт
	
	Если ТипДоговора = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Возврат "ДатаОкончанияДействия";
	ИначеЕсли ТипДоговора = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда
		Возврат "ДатаПоследнегоПлатежа";
	КонецЕсли;
	
КонецФункции

Функция ИмяРеквизитаДатаНачала(ТипФИ = Неопределено) Экспорт
	
	Если ТипФИ = Тип("СправочникСсылка.ЦенныеБумаги") Тогда
		Возврат "ДатаВыпуска";
	ИначеЕсли ТипФИ = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда
		Возврат "ДатаПервогоТранша";		
	Иначе	
		Возврат "ДатаНачалаДействия";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

Функция ЭтоСсылкаНаДоговор(ПроверяемоеЗначение) Экспорт
	
	Возврат (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникСсылка.ДоговорыКонтрагентов"))
			Или (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов"))
			Или (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникСсылка.ДоговорыАренды"));
	
КонецФункции

Функция ЭтоОбъектДоговор(ПроверяемоеЗначение) Экспорт
	
	Возврат (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникОбъект.ДоговорыКонтрагентов"))
			Или (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникОбъект.ДоговорыКредитовИДепозитов"))
			Или (ТипЗнч(ПроверяемоеЗначение) = Тип("СправочникОбъект.ДоговорыАренды"));
	
КонецФункции

Функция НаименованиеПоУмолчаниюБезРеквизитов() Экспорт
	
	Возврат НСтр("ru='Основной договор'");
	
КонецФункции		// НаименованиеПоУмолчаниюБезРеквизитов()

Функция РеквизитыДоговораСтрокой(Номер, Дата) Экспорт
	
	// 123 от 08.12.1999
	
	Слова = Новый Массив;
	Если ЗначениеЗаполнено(Номер) Тогда
		Слова.Добавить(СокрЛП(Номер));
	КонецЕсли;
	Если ЗначениеЗаполнено(Дата) Тогда
		СтрокаШаблона = НСтр("ru = 'от %1'; en = 'from %1'");
		Если СтрокаШаблона <> "" тогда
			Слова.Добавить(СтрШаблон(СтрокаШаблона, Формат(Дата, "ДЛФ=D")));
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрСоединить(Слова, " ");
	
КонецФункции

Функция ПорядковыйНомерПола(Пол) Экспорт
	
	Перем НомерПола;
	
	Если Пол = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский") Тогда
		НомерПола = 2;
	ИначеЕсли Пол = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Мужской") Тогда
		НомерПола = 1;
	КонецЕсли;
	
	Возврат НомерПола;

КонецФункции		// ПорядковыйНомерПола()

Функция ПроверитьСоответствиеТребованиямИНН(Знач ИНН, Знач ЭтоЮрЛицо) Экспорт
	
	Перем ТекстОшибкиФорматнаяПроверка;
	
	РезультатПроверки = Новый Структура("СоответствуетТребованиям, ЭтоЮрЛицо, ОписаниеОшибки", Истина, ЭтоЮрЛицо, "");
	
	Если ЗначениеЗаполнено(ИНН) Тогда
		
		ИНН = СокрП(ИНН);
		
		ЭтоИННФизическогоЛица  = ЭтоИННФизическогоЛица(ИНН);
		ЭтоИННЮридическогоЛица = ЭтоИННЮридическогоЛица(ИНН);
		
		Если РезультатПроверки.ЭтоЮрЛицо И НЕ ЭтоИННЮридическогоЛица Тогда
			РезультатПроверки.ОписаниеОшибки = НСтр("ru = 'ИНН юридического лица должен состоять из 10 цифр'");
			
			Если ЭтоИННФизическогоЛица Тогда
				// Ошибка в определении вида контрагента, однако ИНН может быть все равно корректным - просто надо изменить вид.
				РезультатПроверки.ЭтоЮрЛицо = Ложь;
			Иначе
				РезультатПроверки.СоответствуетТребованиям = Ложь;
			КонецЕсли; 
		ИначеЕсли НЕ РезультатПроверки.ЭтоЮрЛицо И НЕ ЭтоИННФизическогоЛица Тогда
			РезультатПроверки.ОписаниеОшибки = НСтр("ru = 'ИНН физического лица должен состоять из 12 цифр'");
			
			Если ЭтоИННЮридическогоЛица Тогда
				// Ошибка в определении вида контрагента, однако ИНН может быть все равно корректным - просто надо изменить вид.
				РезультатПроверки.ЭтоЮрЛицо = Истина;
			Иначе
				РезультатПроверки.СоответствуетТребованиям = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатПроверки.СоответствуетТребованиям Тогда
			Если Лев(ИНН, 2) = "00" Тогда
				РезультатПроверки.ОписаниеОшибки = НСтр("ru = 'Первые две цифры ИНН не могут быть ""00""'");
				РезультатПроверки.СоответствуетТребованиям = Ложь;
			Иначе
				РезультатПроверки.СоответствуетТребованиям = РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, РезультатПроверки.ЭтоЮрЛицо, ТекстОшибкиФорматнаяПроверка);
				
				Если НЕ РезультатПроверки.СоответствуетТребованиям Тогда
					РезультатПроверки.ОписаниеОшибки = ТекстОшибкиФорматнаяПроверка;
				КонецЕсли; 
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		РезультатПроверки.СоответствуетТребованиям = Ложь;
		// В этом случае описание ошибки не выводим,
		// так как описание ошибки из этой функции обычно используется для вывода на форме,
		// а о незаполненном ИНН на форме сообщаем другими средствами.
		
	КонецЕсли;
	
	Возврат РезультатПроверки;

КонецФункции		// ПроверитьСоответствиеТребованиямИНН()

Функция ОчередностьПлатежаПоУмолчанию() Экспорт
	Возврат 5;
КонецФункции		// ОчередностьПлатежаПоУмолчанию()

Функция ЭтоОтделениеЦентральногоБанка(БИК) Экспорт
	
 	// п. 2.2 Положения 
	// 7 - 9 разряды слева - идентификатор кредитной организации (филиала), клиента, не являющегося кредитной организацией,
	// уникальный в рамках подразделения расчетной сети Банка России или РКЦ, - принимает значения от "050" до "999".
	//
	// Для РКЦ или подразделения расчетной сети Банка России в составе территориального учреждения Банка России,
	// отделения ГУ Банка России по Центральному федеральному округу,
	// наделенного функциями расчетно-кассового (кассового) центра, в 7 - 9 разрядах указывается значение "000".
	//
	// Для Головного расчетно-кассового центра или другого подразделения расчетной сети Банка России
	// в составе территориального учреждения Банка России, наделенного функциями Головного расчетно-кассового центра,
	// в 7 - 9 разрядах указывается значение "001".
	// 
	// Для других подразделений расчетной сети Банка России и структурных подразделений Банка России 
	// в 7 - 9 разрядах указывается значение "002".
	
	УсловныйНомер = Сред(БИК, 7, 3);
	Возврат УсловныйНомер = "000" Или УсловныйНомер = "001" Или УсловныйНомер = "002";

КонецФункции		// ЭтоОтделениеЦентральногоБанка()

Функция НадписьРеквизитыПлатежейВБюджет(ДокументОбъект) Экспорт
	Возврат "";
КонецФункции		// НадписьРеквизитыПлатежейВБюджет()

Функция ИмяСправочникаГосударственныеКонтракты() Экспорт
	
	Возврат "ГосударственныеКонтракты";
	
КонецФункции

Функция ПустаяСсылкаСправочникГосударственныеКонтракты() Экспорт
	
	Возврат ПредопределенноеЗначение("Справочник.ГосударственныеКонтракты.ПустаяСсылка");
	
КонецФункции

Функция ВернутьТекстЗапросаСчетаОрганизацииВнутригрупповыхКонтрагентов() Экспорт
	РезультатФункции = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаПереопределяемая.Ссылка КАК СчетОрганизации,
	|	ТаблицаПереопределяемая.Владелец КАК Организация
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК ТаблицаПереопределяемая
	|ГДЕ
	|	ТаблицаПереопределяемая.Владелец ССЫЛКА Справочник.Организации
	|	И НЕ ТаблицаПереопределяемая.ПометкаУдаления
	|	И НЕ ТаблицаПереопределяемая.Владелец.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ПустойБанковскийСчет,
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК ТаблицаПереопределяемая
	|		ПО (ТаблицаПереопределяемая.Владелец = Организации.Ссылка)
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|	И (Организации.ИностранныйНалоговыйРезидент
	|			ИЛИ Организации.ИспользоватьВРегламентированномУчете)
	|	И ТаблицаПереопределяемая.Ссылка ЕСТЬ NULL";
	Возврат РезультатФункции;
КонецФункции		// ВернутьТекстЗапросаСчетаОрганизацииВнутригрупповыхКонтрагентов()

Функция ВернутьТекстЗапросаСчетаКонтрагентовВнутригрупповыхКонтрагентов() Экспорт
	РезультатФункции = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаПереопределяемая.СчетОрганизации КАК СчетОрганизации,
	|	ТаблицаПереопределяемая.Ссылка КАК СчетКонтрагента,
	|	1 КАК Количество
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК ТаблицаПереопределяемая
	|ГДЕ
	|	ТаблицаПереопределяемая.СчетОрганизации В(&МассивСчетовОрганизаций)
	|	И НЕ ТаблицаПереопределяемая.ПометкаУдаления
	|	И ТаблицаПереопределяемая.Владелец В(&Владелец)";
	Возврат РезультатФункции;
КонецФункции		// ВернутьТекстЗапросаСчетаКонтрагентовВнутригрупповыхКонтрагентов()

Функция ВернутьТекстЗапросаСчетаОрганизацийПоВладельцуВнутригрупповыеКонтрагенты() Экспорт
	РезультатФункции = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаПереопределяемая.Владелец КАК Владелец,
	|	ТаблицаПереопределяемая.Ссылка КАК СчетОрганизации,
	|	ТаблицаПереопределяемая.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК ТаблицаПереопределяемая
	|ГДЕ
	|	НЕ ТаблицаПереопределяемая.ПометкаУдаления
	|	И ТаблицаПереопределяемая.Ссылка = &СчетОрганизации
	|	И ТаблицаПереопределяемая.Владелец = &Владелец";
	Возврат РезультатФункции;
КонецФункции		// ВернутьТекстЗапросаСчетаКонтрагентовВнутригрупповыхКонтрагентов()

Функция ВернутьТекстЗапросаСопоставленияСчетовКонтрагетов() Экспорт
	РезультатФункции = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаПереопределяемая.Ссылка КАК Ссылка,
		|	ТаблицаПереопределяемая.Владелец КАК Владелец,
		|	ТаблицаПереопределяемая.СчетОрганизации КАК СчетОрганизации
		|ИЗ
		|	Справочник.БанковскиеСчетаКонтрагентов КАК ТаблицаПереопределяемая
		|ГДЕ
		|	ТаблицаПереопределяемая.Владелец = &Владелец
		|	И НЕ ТаблицаПереопределяемая.ПометкаУдаления
		|	И ТаблицаПереопределяемая.СчетОрганизации = &СчетОрганизации
		|	И ТаблицаПереопределяемая.Ссылка <> &Ссылка";
	Возврат РезультатФункции;	
КонецФункции		// ВернутьТекстЗапросаСопоставленияСчетовКонтрагетов()

Процедура УправлениеФормой_ВерсияСоглашенияКоммерческийДоговор(Форма) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоПлательщикНДС = Форма.ЭтоПлательщикНДС;
	
	ЭтоДоговорКомиссии     = (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионером"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентом"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионеромНаЗакупку"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентомНаЗакупку"));
		
	ЭтоДоговорПриобретения = УправлениеДоговорамиУХКлиентСерверПовтИсп.ЭтоДоговорСПоставщиком(Объект.ВидДоговораУХ)
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентом"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионеромНаЗакупку"));
		
	ЭтоДоговорРеализации   = УправлениеДоговорамиУХКлиентСерверПовтИсп.ЭтоДоговорСПокупателем(Объект.ВидДоговораУХ)
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионером"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентомНаЗакупку"));
	
	
	ЭтоДоговорФакторинга = (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.Факторинг"));
	
	ЭтоПрочийДоговор = НЕ (ЭтоДоговорКомиссии ИЛИ ЭтоДоговорПриобретения ИЛИ ЭтоДоговорРеализации ИЛИ ЭтоДоговорФакторинга);
	
	ВидимостьКомиссионногоВознаграждения = (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионером"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентом"))
		ИЛИ (Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентомНаЗакупку"));
	
	Если ЭтоДоговорФакторинга Тогда
		Элементы.Контрагент.Заголовок = НСтр("ru='Факторинговая компания'");
		Элементы.ГруппаФакторинг.Видимость = Истина;
		Элементы.КоличествоДнейОтсрочкиФакторинга.Доступность = 
			(Объект.СпособВычисленияДатыФакторинга <> ПредопределенноеЗначение("Перечисление.СпособыВычисленияДатыФакторинга.ВКонцеМесяца"));

	Иначе
		Элементы.Контрагент.Заголовок = НСтр("ru='Контрагент'");
		Элементы.ГруппаФакторинг.Видимость = Ложь;
	КонецЕсли;
	
	//Группа "Расчеты"
	
	Элементы.ГруппаСрокОплаты.Видимость = Объект.ВидДоговораУХ <> ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.Прочее");
	Элементы.ДатаОплаты.Видимость = (Объект.УстановленСрокОплаты И Объект.ИспользоватьДатуОплаты);
	Элементы.СрокОплаты.Видимость = (Объект.УстановленСрокОплаты И Не Объект.ИспользоватьДатуОплаты);
	
	//Группа "Комиссионное вознаграждение"
	
	Элементы.ГруппаКомиссионноеВознаграждение.Видимость = ВидимостьКомиссионногоВознаграждения;
		
	//Группа "Платежный агент"
	Элементы.ГруппаПлатежныйАгент.Видимость               = ВидимостьКомиссионногоВознаграждения;
	
	Элементы.ПризнакАгента.Доступность                    = Объект.ПлатежныйАгент;
	
	ЭтоПлатежныйАгент  = Объект.ПлатежныйАгент 
		И (Объект.ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.ПлатежныйАгент") 
			ИЛИ (Объект.ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.ПлатежныйСубагент")));
	ЭтоБанковскийАгент = Объект.ПлатежныйАгент 
		И (Объект.ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.БанковскийПлатежныйАгент") 
			ИЛИ (Объект.ПризнакАгента = ПредопределенноеЗначение("Перечисление.ПризнакиАгента.БанковскийПлатежныйСубагент")));
	
	Элементы.ТелефонПоставщика.Видимость                = ЭтоПлатежныйАгент ИЛИ ЭтоБанковскийАгент;
	Элементы.НаименованиеОператораПеревода.Видимость    = ЭтоБанковскийАгент;
	Элементы.ИННОператораПеревода.Видимость             = ЭтоБанковскийАгент;
	Элементы.АдресОператораПеревода.Видимость           = ЭтоБанковскийАгент;
	Элементы.ТелефонОператораПеревода.Видимость         = ЭтоБанковскийАгент;
	Элементы.ТелефонОператораПоПриемуПлатежей.Видимость = ЭтоПлатежныйАгент;
	Элементы.ТелефонПлатежногоАгента.Видимость          = ЭтоПлатежныйАгент ИЛИ ЭтоБанковскийАгент;
	Элементы.ОперацияПлатежногоАгента.Видимость         = ЭтоБанковскийАгент;
		
КонецПроцедуры

Функция ИмяСправочникаДоговорыКонтрагентов() Экспорт

	Возврат "ДоговорыКонтрагентов";

КонецФункции // ИмяСправочникаДоговорыКонтрагентов()

Функция ИмяСправочникаДоговорыКредитовДепозитов() Экспорт

	Возврат "ДоговорыКредитовИДепозитов";

КонецФункции // ИмяСправочникаДоговорыКонтрагентов()

Функция ИмяСправочникаДоговорыАренды() Экспорт

	Возврат "ДоговорыАренды";

КонецФункции // ИмяСправочникаДоговорыКонтрагентов()

Функция ПолучитьВидДоговораПрочие() Экспорт
	Возврат ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ПустаяСсылка");
КонецФункции

Процедура ДополнитьВидыДоговораПоВидуОперации(ВидДоговораПоВидуОпераций, НаборыВидовДоговора) Экспорт
	
КонецПроцедуры 

#КонецОбласти

#Область УнификацияРешений

Процедура ЗаполнитьСписокСпособовРасчетаКомиссионногоВознаграждения(Форма) Экспорт

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	ЭтоКомиссияПоЗакупке = Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомиссионеромНаЗакупку")
		ИЛИ Объект.ВидДоговораУХ = ПредопределенноеЗначение("Справочник.ВидыДоговоровКонтрагентовУХ.СКомитентомНаЗакупку");

	//СписокСпособов = ОбщегоНазначенияБПКлиентСервер.СформироватьСписокСпособовРасчетаКомиссионногоВознаграждения(ЭтоКомиссияПоЗакупке);
	СписокСпособов = СформироватьСписокСпособовРасчетаКомиссионногоВознаграждения(ЭтоКомиссияПоЗакупке);
	СписокВыбора = Элементы.СпособРасчетаКомиссионногоВознаграждения.СписокВыбора;
	СписокВыбора.Очистить();
	Для Каждого ЭлементСписка Из СписокСпособов Цикл
		СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;

КонецПроцедуры

// Функция формирует список доступных способов расчета комиссионного вознаграждения, 
// в зависимости от типа комиссиионного договора
//
Функция СформироватьСписокСпособовРасчетаКомиссионногоВознаграждения(ЭтоКомиссияПоЗакупке) Экспорт

	СписокСпособов = Новый СписокЗначений;
	
	СписокСпособов.Добавить(ПредопределенноеЗначение("Перечисление.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается"), НСтр("ru = 'Не рассчитывается'"));
	
	Если ЭтоКомиссияПоЗакупке Тогда
		СписокСпособов.Добавить(ПредопределенноеЗначение("Перечисление.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи"), НСтр("ru = 'Процент от суммы закупки'"));
	Иначе
		СписокСпособов.Добавить(ПредопределенноеЗначение("Перечисление.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммыПродажиИСуммыКомитента"), НСтр("ru = 'Процент от разности суммы продажи и суммы комитента'"));
		СписокСпособов.Добавить(ПредопределенноеЗначение("Перечисление.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи"), НСтр("ru = 'Процент от суммы продажи'"));
	КонецЕсли;

	Возврат СписокСпособов;

КонецФункции // СформироватьСписокСпособовРасчетаКомиссионногоВознаграждения()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции
Функция ЭтоИННЮридическогоЛица(ИНН)
	
	// ММВ-7-6/435@
	// 1. Структура идентификационного номера налогоплательщика (далее - ИНН) представляет собой:
	// 1) для организации - десятизначный цифровой код:
	
	Возврат СтрДлина(ИНН) = МинимальнаяДлинаИНН();
	
КонецФункции

Функция ЭтоИННФизическогоЛица(ИНН)
	
	// ММВ-7-6/435@
	// 1. Структура идентификационного номера налогоплательщика (далее - ИНН) представляет собой:
	// 2) для физического лица - двенадцатизначный цифровой код:
	
	Возврат СтрДлина(ИНН) = МаксимальнаяДлинаИНН();
	
КонецФункции

Функция МинимальнаяДлинаИНН() Экспорт
	
	// ММВ-7-6/435@
	// 1. Структура идентификационного номера налогоплательщика (далее - ИНН) представляет собой:
	// 1) для организации - десятизначный цифровой код:
	// 2) для физического лица - двенадцатизначный цифровой код:
	
	Возврат 10;
	
КонецФункции

Функция МаксимальнаяДлинаИНН() Экспорт
	
	// ММВ-7-6/435@
	// 1. Структура идентификационного номера налогоплательщика (далее - ИНН) представляет собой:
	// 1) для организации - десятизначный цифровой код:
	// 2) для физического лица - двенадцатизначный цифровой код:
	
	Возврат 12;
	
КонецФункции

#КонецОбласти
