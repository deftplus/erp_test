#Область СобытияМодуляФормыДокумента


// Функция, т.к. нет возможности передать форму с клиента на сервер
// напрямую. Только через серверный вызов в контексте формы.
// Возвращает:
//	Неопределено - если серверный вызов в контексте формы не требуется.
//	Любое значение - если необходим серверный вызов. Значение будет
//		передано в функцию ЗаказПоставщикуСерверВнедрениеЕХ.УХ_ПолеФормыПриИзмененииНаСервере().
Функция ФормаДокумента_ПолеФормыПриИзменении(Форма, Элемент) Экспорт
	Если Элемент.Имя = "МестоПоставки" Тогда
		Возврат Истина;
	ИначеЕсли Элемент.Имя = "Склад" Тогда
		ФормаДокумента_СкладПриИзменении(Форма, Элемент);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Процедура ФормаДокумента_ПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт
	ПроверитьУстановитьСклад(Форма, Отказ, ПараметрыЗаписи);
	ПроверитьУстановитьИсходнуюНоменклатуру(Форма);
КонецПроцедуры
	

#КонецОбласти


#Область ЭкспортныеФункции



#КонецОбласти


#Область ВнутренниеПроцедуры



Процедура ФормаДокумента_СкладПриИзменении(Форма, Элемент)
	ЗаказПоставщикуКлиентСерверВнедрениеЕХ.ФормаДокумента_СкладПриИзмененииКлиентСервер(
			Форма.Объект);
КонецПроцедуры
		
Процедура ПроверитьУстановитьСклад(Форма, Отказ, ПараметрыЗаписи)
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	флОдинСклад = Элементы.Склад.Видимость;
	флПроведение = ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Если флОдинСклад И флПроведение Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен склад!";
			Сообщение.Поле = "Объект.Склад";
			Сообщение.Сообщить();
		Иначе
			ЗаказПоставщикуКлиентСерверВнедрениеЕХ.ФормаДокумента_УстановитьРеквизитТЧНоменклатура(
				Объект.Товары, "Склад", Объект.Склад);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьУстановитьИсходнуюНоменклатуру(Форма)
	Объект = Форма.Объект;
	Для Каждого Строка Из Объект.Товары Цикл
		Если НЕ ЗначениеЗаполнено(Строка.НоменклатураИсходная) Тогда
			Строка.НоменклатураИсходная = Строка.Номенклатура;
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.ХарактеристикаИсходная)
				<> ЗначениеЗаполнено(Строка.Характеристика) Тогда
			Строка.ХарактеристикаИсходная = Строка.Характеристика;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


#КонецОбласти