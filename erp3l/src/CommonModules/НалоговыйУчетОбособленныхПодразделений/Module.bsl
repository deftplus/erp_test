#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ СВЕДЕНИЯ О НАЛОГОВОМ УЧЕТЕ ОБОСОБЛЕННЫХ ПОДРАЗДЕЛЕНИЙ

Функция УчетВРазрезеНалоговыхОрганов() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Определяет ставку налога в региональный бюджет, действующую по месту регистрации в налоговом органе.
Функция НалоговаяСтавка(Организация, НалоговыйОрган, Дата) Экспорт
	
	Отбор    = Новый Структура("Организация, РегистрацияВНалоговомОргане", Организация, НалоговыйОрган);
	Ставки   = РегистрыСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.ПолучитьПоследнее(Дата, Отбор);
	Возврат ?(Ставки = Неопределено, 0, Ставки.СтавкаСубъектРФ / 100);
	
КонецФункции

// Определяет ставки налога на прибыль, подлежащего уплате в региональные бюджеты
// по местам нахождения организации и ее обособленных подразделений.
//
// Параметры:
//  Ставки - Соответствие - заполняемая коллекция
//        * Ключ - СправочникСсылка.РегистрацииВНалоговомОргане - все значения из параметра РегистрацииВНалоговомОргане
//        * Значение - ставка в виде доли от единицы (например, 0.135 для 13,5%)
//  Период	    - Дата - характеризует налоговый период
//  Организация - СправочникСсылка.Организации	- налогоплательщик
//  РегистрацииВНалоговомОргане - Массив - перечень регистраций в налоговом органе, в отношении которых нужно получить ставки.
// 
Процедура ЗаполнитьНалоговыеСтавкиРегиональныйБюджет(Ставки, Период, Организация, РегистрацииВНалоговомОргане) Экспорт
	
	// Ставка может быть задана для организации в целом ...
	СтавкаНалога = НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(Период, Организация);
	Для Каждого РегистрацияВНалоговомОргане Из РегистрацииВНалоговомОргане Цикл
		Ставки.Вставить(РегистрацияВНалоговомОргане, СтавкаНалога);
	КонецЦикла;
	
	// ... а может - для обособленных подразделений
	Если ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",                      Период);
		Запрос.УстановитьПараметр("Организация",                 Организация); // Регистрации в налоговом органе всегда подчинены головной организации, но не обособленному подразделению
		Запрос.УстановитьПараметр("РегистрацииВНалоговомОргане", РегистрацииВНалоговомОргане);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкиНалога.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	МАКСИМУМ(СтавкиНалога.СтавкаСубъектРФ / 100) КАК СтавкаНалогаРегиональныйБюджет
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И РегистрацияВНалоговомОргане В (&РегистрацииВНалоговомОргане)) КАК СтавкиНалога
		|
		|СГРУППИРОВАТЬ ПО
		|	СтавкиНалога.РегистрацияВНалоговомОргане";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Ставки.Вставить(Выборка.РегистрацияВНалоговомОргане, Выборка.СтавкаНалогаРегиональныйБюджет);
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

// Для заполнения декларации по налогу на прибыль получает общую налоговую базу,
// рассчитанную для закрытых в течение текущего отчетного периода подразделений
//
// Параметры:
//  НалоговаяБазаЗакрытыхПодразделений
//             - Число        - возвращаемое значение, налоговая база закрытых подразделений
//             - Неопределено - возвращаемое значение, в отчетном периоде не закрывались подразделения
//  КонтекстРасчета	- см. НалогНаПрибыльДекларация.НовыйКонтекстРасчета() - описывает период и организацию, по которой готовится расчет
//
Процедура ОпределитьНалоговуюБазуЗакрытыхПодразделений(НалоговаяБазаЗакрытыхПодразделений, КонтекстРасчета) Экспорт
	
	НалоговаяБазаЗакрытыхПодразделений = РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.НалоговаяБазаЗакрытыхПодразделений(КонтекстРасчета);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// РАСПРЕДЕЛЕНИЕ НАЛОГОВОЙ БАЗЫ МЕЖДУ НАЛОГОВЫМИ ОРГАНАМИ

// Читает из информационной базы данные о фактическом распределении налоговой базы,
// рассчитанные и зарегистрированные регламентной операцией РасчетНалогаНаПрибыль.
//
// Параметры:
//  Расчет		 - ТаблицаЗначений - см. НовыйРасчетРаспределенияНалоговойБазы()
//                 Возвращаемый параметр. Следует передать неинициализированную переменную;
//                 процедура поместит в нее результат НовыйРасчетРаспределенияНалоговойБазы().
//  Период		 - Дата - дата, характеризующая отчетный период - любая дата последнего месяца отчетного периода.
//  Организация	 - СправочникСсылка.Организации - налогоплательщик.
//
Процедура ПрочитатьРасчетРаспределенияНалоговойБазы(Расчет, Период, Организация) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца",  КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьАмортизируемогоИмущества КАК СтоимостьАмортизируемогоИмущества,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца,
	|	РасчетДолейБазыНалогаНаПрибыль.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|	РасчетДолейБазыНалогаНаПрибыль.СреднесписочнаяЧисленность КАК СреднесписочнаяЧисленность,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетДолейБазыНалогаНаПрибыль.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетДолейБазыНалогаНаПрибыль.Закрыто КАК Закрыто
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РасчетДолейБазыНалогаНаПрибыль.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистрацияВНалоговомОргане";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Расчет = НовыйРасчетРаспределенияНалоговойБазы();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Расчет.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьВидСубконтоРегистрацияВНалоговомОргане(ВидыСубконто) Экспорт
	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВНалоговомОргане);
	
КонецПроцедуры

Функция ПодготовитьТаблицуРасчетДолейБазыНалогаНаПрибыль(Знач Реквизиты, СписокОрганизаций) Экспорт
	
	Параметры = РасчетНалогаНаПрибыль.ПодготовитьПараметры(
		Неопределено, 
		ПолучитьЗаписьДолиБазыНалогаНаПрибыль(), 
		Реквизиты);
	Реквизиты                       = Параметры.Реквизиты[0];
	ТаблицаДолейБазыНалогаНаПрибыль = Параметры.ЗаписьДолиБазыНалогаНаПрибыль;
	Параметры = Неопределено; // Далее не используем
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, СписокОрганизаций);
	
	// Убедимся, что имеет смысл рассчитывать базу распределения
	Если НЕ ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоказательОпределенияДолиПрибыли = НалоговыйУчет.ПоказательОпределенияДолиПрибыли(Реквизиты.НачалоГода,Реквизиты.Организация);
	
	// Получим суммы расходов по оплате труда
	
	РасходыПоОплатеТруда = Новый Массив;
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ОплатаТруда);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоГода",           Реквизиты.НачалоГода);
	Запрос.УстановитьПараметр("КонецПериода",         Реквизиты.КонДата);
	Запрос.УстановитьПараметр("СписокОрганизаций",    СписокОрганизаций);
	Запрос.УстановитьПараметр("РасходыПоОплатеТруда", РасходыПоОплатеТруда);
	Запрос.УстановитьПараметр("СчетаРасходов",        БухгалтерскийУчет.СформироватьМассивСубсчетов(НалоговыйУчет.ПолучитьМассивСчетовУчетаРасходов()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК Статья
	|ПОМЕСТИТЬ СтатьиОплатыТруда
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов В(&РасходыПоОплатеТруда)
	|	И НЕ СтатьиРасходов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Статья
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоОплатеТруда.Организация КАК Организация,
	|	РасходыПоОплатеТруда.Подразделение КАК Подразделение,
	|	СУММА(РасходыПоОплатеТруда.Сумма) КАК Сумма
	|ПОМЕСТИТЬ РасходыПоОплатеТруда
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотДт, 0) КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецПериода,
	|			,
	|			Счет В (&СчетаРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СтатьиОплатыТруда.Статья
	|					ИЗ
	|						СтатьиОплатыТруда),
	|			НЕ КорСчет В (&СчетаРасходов),
	|			) КАК ХозрасчетныйОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотДт, 0) КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецПериода,
	|			,
	|			Счет В (&СчетаРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ТипыЗатрат),
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.СдельнаяОплатаТруда),
	|			НЕ КорСчет В (&СчетаРасходов) 
	|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию)),
	|			) КАК ХозрасчетныйОбороты) КАК РасходыПоОплатеТруда
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоОплатеТруда.Организация,
	|	РасходыПоОплатеТруда.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|";
	
	Запрос.Выполнить();
	
	// Получим суммы амортизируемого имущества
	СчетаАмортизируемогоИмущества = Новый Массив;
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств);
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	СчетаАмортизируемогоИмущества = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаАмортизируемогоИмущества); // разворачиваем до субсчетов
	
	// На счете 01.К отражается сумма будущих расходов, подлежащих признанию в соответствии с подп. 10 п. 1. ст. 264.
	// Эти суммы не включаются в стоимость ОС.
	КорректировкаСтоимостиАрендованногоИмущества = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
		ПланыСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества);
		
	СчетаАмортизируемогоИмущества = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
		СчетаАмортизируемогоИмущества,
		КорректировкаСтоимостиАрендованногоИмущества);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетаАмортизируемогоИмущества", СчетаАмортизируемогоИмущества);
	Запрос.УстановитьПараметр("КонПериода", Реквизиты.КонДата);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК Объект
	|ПОМЕСТИТЬ АрендованноеИмущество
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество)
	|	ИЛИ ОсновныеСредства.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаАмортизируемогоИмущества
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В (&СчетаАмортизируемогоИмущества)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	Запрос.Выполнить();
	
	// Получим по каждому подразделению
	// - суммарную стоимость амортизируемого имущества за предыдущие месяцы 
	// - стоимость амортизируемого имущества на конец месяца расчета.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетаАмортизируемогоИмущества", СчетаАмортизируемогоИмущества);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОрганизаций",    СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаПоследнегоМесяца", КонецМесяца(Реквизиты.КонДата) + 1);
	Запрос.УстановитьПараметр("ПустоеПодразделение",  БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	
	КоличествоМесяцев = Месяц(Реквизиты.КонДата);
	
	// Текст запроса содержит служебный комментарий //ОБЪЕДИНИТЬ
	// который далее заменяется на текст объединения.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	&ПустоеПодразделение КАК Подразделение,
	|	0 КАК СтоимостьОСПрошлыхМесяцев,
	|	0 КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ СтоимостьАмортизируемогоИмущества
	|	ГДЕ ЛОЖЬ
	|
	|//ОБЪЕДИНИТЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|";
	
	ШаблонЗапросаОбъединить = Символы.ПС + 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ДатаНачалаМесяца = &ДатаПоследнегоМесяца
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0)
	|	КОНЕЦ КАК СтоимостьОСПрошлыхМесяцев,
	|	ВЫБОР
	|		КОГДА &ДатаНачалаМесяца = &ДатаПоследнегоМесяца
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьОССледующегоМесяца
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаНачалаМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаАмортизируемогоИмущества.Счет
	|				ИЗ
	|					СчетаАмортизируемогоИмущества),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&СписокОрганизаций)
	|				И НЕ Субконто1 В
	|						(ВЫБРАТЬ
	|							АрендованноеИмущество.Объект
	|						ИЗ
	|							АрендованноеИмущество)) КАК ХозрасчетныйОстатки
	|
	|//ОБЪЕДИНИТЬ
	|";
	
	Для НомерМесяца = 0 По КоличествоМесяцев Цикл
		
		ДатаНачалаМесяца = ДобавитьМесяц(Реквизиты.НачалоГода, НомерМесяца);
		ИмяПараметра     = "ДатаНачалаМесяца" + НомерМесяца;
		
		ТекстЗапросаОбъединить = СтрЗаменить(ШаблонЗапросаОбъединить, "&ДатаНачалаМесяца", "&" + ИмяПараметра);
		Запрос.УстановитьПараметр(ИмяПараметра, ДатаНачалаМесяца);
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"//ОБЪЕДИНИТЬ", 
			"ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + Символы.ПС + ТекстЗапросаОбъединить + Символы.ПС);
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоГода",           Реквизиты.НачалоГода);
	Запрос.УстановитьПараметр("КонецПериода",         Реквизиты.КонДата);
	Запрос.УстановитьПараметр("СписокОрганизаций",    СписокОрганизаций);
	Запрос.УстановитьПараметр("КоличествоМесяцев", КоличествоМесяцев);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Статистика.РегистрацияВНалоговомОргане КАК НалоговыйОрган,
	|	ВЫРАЗИТЬ(СУММА(Статистика.СреднесписочнаяЧисленностьСотрудников)/&КоличествоМесяцев КАК ЧИСЛО(15,2)) КАК СреднесписочнаяЧисленность
	|ПОМЕСТИТЬ ДанныеССЧ
	|ИЗ
	|	Документ.СтатистикаПерсонала.Показатели КАК Статистика
	|ГДЕ
	|	Статистика.Ссылка.Дата МЕЖДУ &НачалоГода И &КонецПериода
	|	И Статистика.Ссылка.Организация В (&СписокОрганизаций)
	|	И Статистика.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Статистика.РегистрацияВНалоговомОргане
	|";
	
	Запрос.Выполнить();

	// Сложим в одну таблицу все данные в разрезе налоговых органов
	// - оплату труда
	// - среднесписочную численность
	// - стоимость амортизируемого имущества.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДляРасчета.Организация КАК Организация,
	|	ДанныеДляРасчета.Подразделение КАК Подразделение,
	|	СУММА(ДанныеДляРасчета.РасходыПоОплатеТруда) КАК РасходыПоОплатеТруда,
	|	СУММА(ДанныеДляРасчета.СтоимостьОСПрошлыхМесяцев) КАК СтоимостьОСПрошлыхМесяцев,
	|	СУММА(ДанныеДляРасчета.СтоимостьОССледующегоМесяца) КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ ДанныеДляРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОплатаТруда.Организация КАК Организация,
	|		ОплатаТруда.Подразделение КАК Подразделение,
	|		ОплатаТруда.Сумма КАК РасходыПоОплатеТруда,
	|		0 КАК СтоимостьОСПрошлыхМесяцев,
	|		0 КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		РасходыПоОплатеТруда КАК ОплатаТруда
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизируемоеИмущество.Организация,
	|		АмортизируемоеИмущество.Подразделение,
	|		0,
	|		АмортизируемоеИмущество.СтоимостьОСПрошлыхМесяцев,
	|		АмортизируемоеИмущество.СтоимостьОССледующегоМесяца
	|	ИЗ
	|		СтоимостьАмортизируемогоИмущества КАК АмортизируемоеИмущество) КАК ДанныеДляРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчета.Организация,
	|	ДанныеДляРасчета.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиПоНалоговымОрганам.НалоговыйОрган,
	|	СУММА(ПоказателиПоНалоговымОрганам.РасходыПоОплатеТруда) КАК РасходыПоОплатеТруда,
	|	СУММА(ПоказателиПоНалоговымОрганам.СреднесписочнаяЧисленность) КАК СреднесписочнаяЧисленность,
	|	СУММА(ПоказателиПоНалоговымОрганам.СтоимостьОСПрошлыхМесяцев) КАК СтоимостьОСПрошлыхМесяцев,
	|	СУММА(ПоказателиПоНалоговымОрганам.СтоимостьОССледующегоМесяца) КАК СтоимостьОССледующегоМесяца
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(НеОбособ.НалоговыйОрган, Филиалы.НалоговыйОрган) КАК НалоговыйОрган,
	|		ДанныеДляРасчета.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|		0 КАК СреднесписочнаяЧисленность,
	|		ДанныеДляРасчета.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|		ДанныеДляРасчета.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		ДанныеДляРасчета КАК ДанныеДляРасчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Филиалы КАК Филиалы
	|		ПО
	|			ДанныеДляРасчета.Организация = Филиалы.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			НеОбособленныеПодразделения КАК НеОбособ
	|		ПО
	|			ДанныеДляРасчета.Организация = НеОбособ.Организация
	|			И ДанныеДляРасчета.Подразделение = НеОбособ.Подразделение
	|	ГДЕ
	|		НЕ (НеОбособ.НалоговыйОрган ЕСТЬ NULL И Филиалы.НалоговыйОрган ЕСТЬ NULL)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеССЧ.НалоговыйОрган КАК НалоговыйОрган,
	|		0 КАК РасходыПоОплатеТруда,
	|		ДанныеССЧ.СреднесписочнаяЧисленность КАК СреднесписочнаяЧисленность,
	|		0 КАК СтоимостьОСПрошлыхМесяцев,
	|		0 КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		ДанныеССЧ КАК ДанныеССЧ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Филиалы.НалоговыйОрган,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		Филиалы КАК Филиалы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НеОбособленныеПодразделения.НалоговыйОрган,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		НеОбособленныеПодразделения КАК НеОбособленныеПодразделения) КАК ПоказателиПоНалоговымОрганам
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоказателиПоНалоговымОрганам.НалоговыйОрган";
	
	РезультатЗапроса = Запрос.Выполнить();
	Итоги = РезультатЗапроса.Выгрузить();
	
	ИтогРасходыПоОплатеТруда       = Итоги.Итог("РасходыПоОплатеТруда");
	ИтогСреднесписочнаяЧисленность = Итоги.Итог("СреднесписочнаяЧисленность");
	ИтогСредняяСтоимостьИмущества  = 
		(Итоги.Итог("СтоимостьОСПрошлыхМесяцев") + Итоги.Итог("СтоимостьОССледующегоМесяца")) 
		/ (КоличествоМесяцев + 1);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = ТаблицаДолейБазыНалогаНаПрибыль.Добавить();
		Запись.РегистрацияВНалоговомОргане = Выборка.НалоговыйОрган;
		ЗаполнитьЗначенияСвойств(Запись, Выборка); // Исходные суммы
		
		Запись.СтоимостьАмортизируемогоИмущества = 
			(Выборка.СтоимостьОСПрошлыхМесяцев + Выборка.СтоимостьОССледующегоМесяца) 
			/ (КоличествоМесяцев + 1);
		
		Если ПоказательОпределенияДолиПрибыли = Перечисления.ПоказателиДляОпределенияДолиПрибыли.СреднесписочнаяЧисленность Тогда
			Если ИтогСреднесписочнаяЧисленность = 0 И ИтогСредняяСтоимостьИмущества = 0 Тогда
				Запись.ДоляНалоговойБазы = 0;
			ИначеЕсли ИтогСреднесписочнаяЧисленность = 0 Тогда
				Запись.ДоляНалоговойБазы = Запись.СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества;
			ИначеЕсли ИтогСредняяСтоимостьИмущества = 0 Тогда
				Запись.ДоляНалоговойБазы = Запись.СреднесписочнаяЧисленность / ИтогСреднесписочнаяЧисленность;
			Иначе
				Запись.ДоляНалоговойБазы = 
					(Запись.СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества
					+ Запись.СреднесписочнаяЧисленность / ИтогСреднесписочнаяЧисленность)
					/2;
			КонецЕсли;
		Иначе
			Если ИтогРасходыПоОплатеТруда = 0 И ИтогСредняяСтоимостьИмущества = 0 Тогда
				Запись.ДоляНалоговойБазы = 0;
			ИначеЕсли ИтогРасходыПоОплатеТруда = 0 Тогда
				Запись.ДоляНалоговойБазы = Запись.СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества;
			ИначеЕсли ИтогСредняяСтоимостьИмущества = 0 Тогда
				Запись.ДоляНалоговойБазы = Запись.РасходыПоОплатеТруда / ИтогРасходыПоОплатеТруда;
			Иначе
				Запись.ДоляНалоговойБазы = 
					(Запись.СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества
					+ Запись.РасходыПоОплатеТруда / ИтогРасходыПоОплатеТруда)
					/2;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаДолейБазыНалогаНаПрибыль.Количество() > 0 Тогда
		ИтогДолей = ТаблицаДолейБазыНалогаНаПрибыль.Итог("ДоляНалоговойБазы");
		Если ИтогДолей <> 1 Тогда
			ТаблицаДолейБазыНалогаНаПрибыль[0].ДоляНалоговойБазы = 
				ТаблицаДолейБазыНалогаНаПрибыль[0].ДоляНалоговойБазы - ИтогДолей + 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаДолейБазыНалогаНаПрибыль;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕСЧЕТ ОНА И ОНО ПО РАСЧЕТНОЙ СТАВКЕ НАЛОГА НА ПРИБЫЛЬ

Процедура ПроведениеПересчетаОНАиОНОКаждыйМесяц(СтруктураШапкиДокумента, Движения, Отказ) Экспорт
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПараметрыПроведения = ПодготовитьПараметрыПересчетаОНАИОНО(СтруктураШапкиДокумента, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	ТаблицаОНАОНО       = ЗакрытиеМесяца.ПодготовитьТаблицуПересчетОНАиОНО(
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода,
		СтруктураШапкиДокумента.СписокОрганизаций, Отказ, Ложь);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
		Движения,
		ТаблицаОНАОНО,
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода,
		"РасчетСтоимостиНалоговыхАктивовИОбязательствПослеИзмененияСтавкиНалогаНаПрибыль");
	
	ЗакрытиеМесяца.СформироватьДвиженияуПересчетОНАиОНО(ТаблицаОНАОНО,
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода, Движения, Отказ, Ложь);
	
КонецПроцедуры // ПроведениеПересчетаОНАиОНОКаждыйМесяц()

Функция ПолучитьРасчетнуюСтавкуНалогаНаПрибыль(Организация, Дата) Экспорт 

		Отбор    = Новый Структура("Организация,ПериодРасчета", Организация, Дата);
		Ставки   = РегистрыСведений.РасчетСтавкиНалогаНаПрибыльЗаМесяц.Получить(Отбор);
		Если Ставки = Неопределено Или Ставки.Ставка = 0 Тогда
			ПараметрыСтавки = Новый Структура("Организация, Дата", Организация, Дата);
			СтавкаНалога = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(ПараметрыСтавки);
		Иначе
			СтавкаНалога = Ставки.Ставка / 100;
		КонецЕсли;
	
	Возврат СтавкаНалога;

КонецФункции // ПолучитьРасчетнуюСтавкуНалогаНаПрибыль()


////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ЛИСТА ДЕКЛАРАЦИИ С РАСЧЕТОМ БАЗЫ В РАЗРЕЗЕ НАЛОГОВЫХ ОРГАНОВ


// Для заполнения декларации по налогу на прибыль получает данные информационной базы
// о распределении налога между обособленными подразделениями.
//
// Параметры:
//  Расчет							 - см. НовыйРасчетРаспределенияНалоговойБазы
//  КонтекстРасчета					 - см. НалогНаПрибыльДекларация.НовыйКонтекстРасчета
//
Процедура ПолучитьРаспределениеНалогаДляЗаполненияДекларации(Расчет, КонтекстРасчета) Экспорт
	
	// Получим данные о распределении налога между налоговыми органами (КПП)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Распределение.Организация КАК Организация,
	|	Распределение.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Распределение.ДоляНалоговойБазы * 100 КАК ДоляНалоговойБазы,
	|	Распределение.РегистрацияВНалоговомОргане.КПП КАК КПП,
	|	НЕ Распределение.Организация.ОбособленноеПодразделение
	|		И Распределение.РегистрацияВНалоговомОргане = Распределение.Организация.РегистрацияВНалоговомОргане КАК ПоМестуНахожденияОрганизации,
	|	Распределение.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения КАК НаименованиеОбособленногоПодразделения,
	|	Распределение.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Распределение.РегистрацияВНалоговомОргане <> Распределение.Организация.РегистрацияВНалоговомОргане
	|		И ЕСТЬNULL(Распределение.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения, """") = """" КАК НаименованиеСледуетОпределитьИзПодразделения
	|ПОМЕСТИТЬ РаспределениеНалоговойБазы
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК Распределение
	|ГДЕ
	|	Распределение.Организация = &Организация
	|	И Распределение.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецПериода";
	
	Если Не ПустаяСтрока(КонтекстРасчета.КППОбособленногоПодразделения) Тогда
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		
		СхемаЗапроса.ПакетЗапросов[0].Операторы[0].Отбор.Добавить("Распределение.РегистрацияВНалоговомОргане.КПП = &КППОбособленногоПодразделения");
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",                   КонтекстРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоМесяца",                  НачалоМесяца(КонтекстРасчета.КонецПериода)); // В каждом месяце формируются записи, характеризующие весь налоговый период
	Запрос.УстановитьПараметр("КонецПериода",                  КонтекстРасчета.КонецПериода);
	Запрос.УстановитьПараметр("КППОбособленногоПодразделения", КонтекстРасчета.КППОбособленногоПодразделения);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	// Дополняем именами подразделений
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Подразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(Подразделения.НаименованиеПолное) КАК Наименование
	|ПОМЕСТИТЬ НаименованияПодразделенийНаОтдельномБалансе
	|ИЗ
	|	Справочник.Организации КАК Подразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеНалоговойБазы КАК ДолиНалоговойБазы
	|		ПО (Подразделения.ОбособленноеПодразделение)
	|			И Подразделения.ГоловнаяОрганизация = ДолиНалоговойБазы.Организация
	|			И Подразделения.РегистрацияВНалоговомОргане = ДолиНалоговойБазы.РегистрацияВНалоговомОргане
	|			И (ДолиНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения)
	|ГДЕ
	|	Подразделения.НаименованиеПолное <> """"
	|
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(Подразделения.Подразделение.Наименование) КАК Наименование
	|ПОМЕСТИТЬ НаименованияПодразделенийНаОбщемБалансе
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК Подразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеНалоговойБазы КАК ДолиНалоговойБазы
	|		ПО  (Подразделения.Организация = ДолиНалоговойБазы.Организация ИЛИ 
	|			   Подразделения.Организация.ГоловнаяОрганизация = ДолиНалоговойБазы.Организация) 
	|			И Подразделения.РегистрацияВНалоговомОргане = ДолиНалоговойБазы.РегистрацияВНалоговомОргане
	|			И (ДолиНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОтдельномБалансе КАК НайденныеРанееНаименования
	|		ПО Подразделения.РегистрацияВНалоговомОргане = НайденныеРанееНаименования.РегистрацияВНалоговомОргане
	|ГДЕ
	|	Подразделения.Подразделение.Наименование <> """"
	|	И НайденныеРанееНаименования.РегистрацияВНалоговомОргане ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РаспределениеНалоговойБазы.КПП КАК КПП,
	|	МАКСИМУМ(РаспределениеНалоговойБазы.ПоМестуНахожденияОрганизации) КАК ПоМестуНахожденияОрганизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РаспределениеНалоговойБазы.ПоМестуНахожденияОрганизации
	|				ТОГДА РаспределениеНалоговойБазы.НаименованиеОрганизации
	|			КОГДА НЕ РаспределениеНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения
	|				ТОГДА РаспределениеНалоговойБазы.НаименованиеОбособленногоПодразделения
	|			КОГДА НЕ НаименованияПодразделенийНаОтдельномБалансе.Наименование ЕСТЬ NULL 
	|				ТОГДА НаименованияПодразделенийНаОтдельномБалансе.Наименование
	|			КОГДА НЕ НаименованияПодразделенийНаОбщемБалансе.Наименование ЕСТЬ NULL 
	|				ТОГДА НаименованияПодразделенийНаОбщемБалансе.Наименование
	|			ИНАЧЕ РаспределениеНалоговойБазы.НаименованиеОрганизации
	|		КОНЕЦ) КАК НаименованиеПодразделения,
	|	СУММА(РаспределениеНалоговойБазы.ДоляНалоговойБазы) КАК ДоляНалоговойБазы
	|ИЗ
	|	РаспределениеНалоговойБазы КАК РаспределениеНалоговойБазы
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОтдельномБалансе КАК НаименованияПодразделенийНаОтдельномБалансе
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = НаименованияПодразделенийНаОтдельномБалансе.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОбщемБалансе КАК НаименованияПодразделенийНаОбщемБалансе
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = НаименованияПодразделенийНаОбщемБалансе.РегистрацияВНалоговомОргане
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНалоговойБазы.КПП,
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоМестуНахожденияОрганизации УБЫВ,
	|	КПП,
	|	РегистрацияВНалоговомОргане";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Расчет.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Выборка.ПоМестуНахожденияОрганизации Тогда
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "1"; // = "по организации без входящих в нее обособленных подразделений", см. пояснение к полю на форме декларации
		Иначе
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "2"; // = "по обособленному подразделению", см. пояснение к полю на форме декларации
		КонецЕсли;
		
		Если Выборка.ПоМестуНахожденияОрганизации Тогда
			НоваяСтрока.ВозложенаОбязанностьУплатыНалога = "1"; // = "возложена", см. пояснение к полю на форме декларации
		Иначе
			// Организация может возложить обязанность по уплате на обособленное подразделение.
			// При этом порядок такой: организация рассчитывает сумму налога и сообщает ее обособленному подразделению,
			// а подразделение (филиал или представительство) уплачивает со своего счета.
			// В программе нет сведений о выбранном порядке.
			// Поэтому в этом случае поле не заполняем.
			НоваяСтрока.ВозложенаОбязанностьУплатыНалога = "";
		КонецЕсли;
		
	КонецЦикла;
	
	// Получим ставки налога на прибыль в региональный бюджет.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	РаспределениеНалоговойБазы КАК РаспределениеНалоговойБазы";
	РегистрацииВНалоговомОргане = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РегистрацияВНалоговомОргане");
		
	НалоговыеСтавкиРегиональныйБюджет = Новый Соответствие;
	ЗаполнитьНалоговыеСтавкиРегиональныйБюджет(
		НалоговыеСтавкиРегиональныйБюджет,
		КонтекстРасчета.НачалоПериода,
		КонтекстРасчета.Организация,
		РегистрацииВНалоговомОргане);
		
	Для Каждого Запись Из Расчет Цикл
		Запись.СтавкаНалогаРегиональныйБюджет = НалоговыеСтавкиРегиональныйБюджет[Запись.РегистрацияВНалоговомОргане] * 100; // Следует показывать в процентах, а не в долях
	КонецЦикла;
	
	// Налог может быть уменьшен на суммы торгового сбора
	
	// См. также НалогНаПрибыльДекларация.ПолучитьТорговыйСбор()
	
	ЕстьЗадолженностьПоТорговомуСбору = РасчетНалогаНаПрибыль.ЕстьЗадолженностьПоТорговомуСбору(
		КонтекстРасчета.Организация,
		КонтекстРасчета.ДатаПодписи);
		
	Если ЕстьЗадолженностьПоТорговомуСбору Тогда
		Возврат;
	КонецЕсли;	
		
	// РАСЧЕТ СУММ ТОРГОВОГО СБОРА, НА КОТОРЫЕ УМЕНЬШЕН НАЛОГ ЗА ТЕКУЩИЙ ОТЧЕТНЫЙ (НАЛОГОВЫЙ) ПЕРИОД
	УменьшениеНалога = РасчетНалогаНаПрибыль.НалогФактическиУменьшенныйНаСуммыТорговогоСбора(
		КонтекстРасчета.КонецПериода,
		КонтекстРасчета.Организация);
		
	Для Каждого ЗаписьУменьшениеНалога Из УменьшениеНалога Цикл
		
		ЗаписьРасчет = Расчет.Найти(ЗаписьУменьшениеНалога.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане");
		
		Если ЗаписьРасчет = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор = ЗаписьУменьшениеНалога.Сумма;
		
	КонецЦикла;
	
	Если НЕ НалогНаПрибыльДекларация.ЗаполнятьДетальнуюИнформациюПоТорговомуСборуВДекларации(КонтекстРасчета.КонецПериода) Тогда
		Возврат;
	КонецЕсли;
	
	// РАСЧЕТ СУММ ТОРГОВОГО СБОРА, НА КОТОРЫЕ УМЕНЬШЕН НАЛОГ ЗА ПРОШЛЫЙ ОТЧЕТНЫЙ ПЕРИОД
	// Если текущий отчетный период является первым, то торговый сбор прошлого периода не заполняем.
	КонецПрошлогоПериода = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(КонтекстРасчета.КонецПериода, КонтекстРасчета.Периодичность, -1);
	КонецПрошлогоПериода = КонецМесяца(КонецПрошлогоПериода);
	Если КонецПрошлогоПериода > КонтекстРасчета.НачалоПериода Тогда
		
		УменьшениеНалогаПрошлогоПериода = РасчетНалогаНаПрибыль.НалогФактическиУменьшенныйНаСуммыТорговогоСбора(
			КонецПрошлогоПериода,
			КонтекстРасчета.Организация);
		
		Для Каждого ЗаписьУменьшениеНалога Из УменьшениеНалогаПрошлогоПериода Цикл
			
			ЗаписьРасчет = Расчет.Найти(ЗаписьУменьшениеНалога.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане");
			
			Если ЗаписьРасчет = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаписьРасчет.УменьшениеНалогаНаТорговыйСборПрошлогоПериода = ЗаписьУменьшениеНалога.Сумма;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	// РАСЧЕТ СУММ УПЛАЧЕННОГО ТОРГОВОГО СБОРА
	// Для целей расчета сумму уплаченного торгового сбора признаем равной сумме начисленного.
	
	СуммаУменьшенияНалога = Расчет.Итог("УменьшениеНалогаНаТорговыйСбор");
	
	// Если налог не уменьшается на торговый сбор, то уплаченный торговый сбор также не считаем.
	Если СуммаУменьшенияНалога = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	// 1. Возьмем сумму начисленного торгового сбора с начала года по конец закрываемого месяца
	// Это целое число.
	СуммаТорговогоСбора = РасчетНалогаНаПрибыль.СуммаНачисленногоТорговогоСбора(КонтекстРасчета.КонецПериода, КонтекстРасчета.Организация);

	Если СуммаТорговогоСбора = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	// 2. Распределим сумму из п. 1 между регистрациями
	// Если сумма уплаченного торгового сбора равна сумме торгового сбора, на которую уменьшен налог,
	// то по каждой отдельной регистрации эти суммы также должны быть равны.
	Если СуммаТорговогоСбора = СуммаУменьшенияНалога Тогда
		
		Для каждого ЗаписьРасчет Из Расчет Цикл
			ЗаписьРасчет.ТорговыйСборУплаченный = ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор;
		КонецЦикла; 
		
	Иначе
								
		// Распределим сумму торгового сбора пропорционально суммам уменьшения налога на торговый сбор
		// Это позволяет выполнить 2 ограничения:
		//	- сумма уплаченного торгового сбора распределяется только на те территории,
		//    где установлен торговый сбор (УменьшениеНалогаНаТорговыйСбор <> 0)
		//	- сумма уплаченного торгового сбора для каждой отдельной регистрации не меньше суммы уменьшения налога
		// Т.к. здесь СуммаТорговогоСбора > СуммаУменьшенияНалога (см. РасчетНалогаНаПрибыль.УменьшениеНалогаНаСуммуТорговогоСбора()),
		// то после распределения во всех строках расчета ТорговыйСборУплаченный >= УменьшениеНалогаНаТорговыйСбор.
		РаспределеннаяСумма = 0;
		Для Каждого ЗаписьРасчет Из Расчет Цикл 
			ЗаписьРасчет.ТорговыйСборУплаченный = Окр(СуммаТорговогоСбора * ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор / СуммаУменьшенияНалога, 0);
			РаспределеннаяСумма = РаспределеннаяСумма + ЗаписьРасчет.ТорговыйСборУплаченный;
		КонецЦикла; 
		
		// Погрешность округления распределяем так, 
		// чтобы ни по какой регистрации не оказалось, что ТорговыйСборУплаченный < УменьшениеНалогаНаТорговыйСбор.
		ПогрешностьОкругления = СуммаТорговогоСбора - РаспределеннаяСумма;
		Если ПогрешностьОкругления <> 0 Тогда
			
			// Для сохранения сортировки пронумеруем таблицу 
			ОбщегоНазначенияБПВызовСервера.ПронумероватьТаблицу(Расчет);  // Добавляется колонка "НомерСтроки"
			Расчет.Сортировать("УменьшениеНалогаНаТорговыйСбор Убыв");
						
			Если ПогрешностьОкругления > 0 Тогда
			    // Добавляем погрешность в строку с максимальной суммой торгового сбора 
				Расчет[0].ТорговыйСборУплаченный = Расчет[0].ТорговыйСборУплаченный + ПогрешностьОкругления;
			Иначе
				// Уменьшаем ТорговыйСборУплаченный с учетом ограничения (ТорговыйСборУплаченный >= УменьшениеНалогаНаТорговыйСбор).
				Для каждого ЗаписьРасчет Из Расчет Цикл
					// Из двух отрицательных чисел выбираем минимальное по модулю и добавляем к ТорговыйСборУплаченный.
					СуммаУменьшения = Макс(ПогрешностьОкругления, ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор - ЗаписьРасчет.ТорговыйСборУплаченный); 
					ЗаписьРасчет.ТорговыйСборУплаченный = ЗаписьРасчет.ТорговыйСборУплаченный + СуммаУменьшения; 
					ПогрешностьОкругления = ПогрешностьОкругления - СуммаУменьшения; 
					
					Если ПогрешностьОкругления = 0 Тогда
						Прервать;
					КонецЕсли;	
					
				КонецЦикла; 
			КонецЕсли; 
			
			Расчет.Сортировать("НомерСтроки"); // Возвращаем исходную сортировку
			Расчет.Колонки.Удалить("НомерСтроки");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Лист02_Прил5) Экспорт
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	СтраницаЛист02_Прил5 = Лист02_Прил5[0].Данные[0].Значение;
	
	ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(СтраницаЛист02_Прил5);
	
	Пока Лист02_Прил5.Количество()>1 Цикл
		Лист02_Прил5.Удалить(1);
	КонецЦикла;
	
	КПП = ПараметрыОтчета.КПП;
	ПоВсем = Истина;
	КППРеквизитОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыОтчета.Организация, "КПП");
	Если КПП = КППРеквизитОрганизации Тогда
		РегистрацияВНалоговомОргане = ПараметрыОтчета.Организация.РегистрацияВНалоговомОргане; 
	Иначе
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.НайтиПоРеквизиту("КПП",КПП,,ПараметрыОтчета.Организация);
		ПоВсем = Ложь;
		Если РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По указанному КПП %1 не обнаружена регистрация в налоговом органе. Необходимо проверить правильность указания КПП или регистрации в налоговом органе. Приложение 5 листа 02 заполнено не будет';
					|en = 'Registration with tax authority is not found by specified CRTR %1. Check if the CRTR or registration with tax authority is specified correctly. Annex 5 of sheet 02 will not be filled in'"),
				КПП));
			ЗаполнитьПриложение5Листа2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, СписокОрганизаций);
	
	Если НЕ ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц) Тогда
		Возврат;
	КонецЕсли;
	
	Если КПП = КППРеквизитОрганизации Тогда
		РегистрацияВНалоговомОргане = ПараметрыОтчета.Организация.РегистрацияВНалоговомОргане; 
	Иначе
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.НайтиПоРеквизиту("КПП",КПП,,ПараметрыОтчета.Организация);
		ПоВсем = Ложь;
		Если РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По указанному КПП %1 не обнаружена регистрация в налоговом органе. Необходимо проверить правильность указания КПП или регистрации в налоговом органе. Приложение 5 листа 02 заполнено не будет';
					|en = 'Registration with tax authority is not found by specified CRTR %1. Check if the CRTR or registration with tax authority is specified correctly. Annex 5 of sheet 02 will not be filled in'"),
				КПП));
			ЗаполнитьПриложение5Листа2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаНачМесяца",     НачалоМесяца(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения КАК ОбособленноеПодразделение,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане.КПП КАК КПП
	|ПОМЕСТИТЬ ДолиНалоговойБазы
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация В(&СписокОрганизаций)
	|	И РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &ДатаНачМесяца И &ДатаКон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаСубъектРФ КАК Ставка
	|ПОМЕСТИТЬ ОбщаяСтавка
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&ДатаНач, ) КАК СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.РегистрацияВНалоговомОргане.КПП КАК КПП,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.СтавкаСубъектРФ КАК Ставка
	|ПОМЕСТИТЬ РазныеСтавки
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
	|			&ДатаНач,
	|			Организация В (&СписокОрганизаций)
	|				И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Значение КАК Значение
	|ПОМЕСТИТЬ ПрименяютсяРазныеСтавки
	|ИЗ
	|	Константа.ПрименяютсяРазныеСтавкиНалогаНаПрибыль КАК ПрименяютсяРазныеСтавкиНалогаНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДоляНалоговойБазы,
	|	ВложенныйЗапрос.ОбособленноеПодразделение,
	|	ВложенныйЗапрос.КПП,
	|	ВложенныйЗапрос.Ставка КАК СтавкаСубъектРФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДолиНалоговойБазы.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|		ДолиНалоговойБазы.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|		ДолиНалоговойБазы.КПП КАК КПП,
	|		ОбщаяСтавка.Ставка КАК Ставка
	|	ИЗ
	|		ПрименяютсяРазныеСтавки КАК ПрименяютсяРазныеСтавки,
	|		ДолиНалоговойБазы КАК ДолиНалоговойБазы,
	|		ОбщаяСтавка КАК ОбщаяСтавка
	|	ГДЕ
	|		НЕ ПрименяютсяРазныеСтавки.Значение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДолиНалоговойБазы.ДоляНалоговойБазы,
	|		ДолиНалоговойБазы.ОбособленноеПодразделение,
	|		ДолиНалоговойБазы.КПП,
	|		ЕСТЬNULL(РазныеСтавки.Ставка, 0)
	|	ИЗ
	|		ПрименяютсяРазныеСтавки КАК ПрименяютсяРазныеСтавки,
	|		ДолиНалоговойБазы КАК ДолиНалоговойБазы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РазныеСтавки КАК РазныеСтавки
	|			ПО ДолиНалоговойБазы.КПП = РазныеСтавки.КПП
	|	ГДЕ
	|		ПрименяютсяРазныеСтавки.Значение) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДоляНалоговойБазы,
	|	ВложенныйЗапрос.ОбособленноеПодразделение,
	|	ВложенныйЗапрос.КПП,
	|	ВложенныйЗапрос.Ставка";
	
	Если ПоВсем Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане","");
	КонецЕсли;                                      
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Приложение 5 листа 02 заполнено не будет.
			|По указанному КПП %1 не обнаружено начисление налога на прибыль.
			|Необходимо проверить правильность указания КПП или регистрации в налоговом органе
			|или проведение операции закрытия месяца ""Расчет налога на прибыль""';
			|en = 'Annex 5 of sheet 02 will not be filled in.
			|Profit tax accrual is not found for the specified CRTR %1.
			|Make sure that the specified CRTR, registration with tax authority,
			|and performance of month-end closing operation ""Profit tax calculation"" are correct'"), КПП));
	Иначе
		ПерваяСтраница = Истина;
		ЕстьОбособленныеПодразделения = Ложь;
		
		Результат = Результат.Выгрузить();
		Для Каждого ДоляНалоговойБазы Из Результат Цикл
			Если Не ПерваяСтраница Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				
				Для Каждого Показатель Из СтраницаЛист02_Прил5 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, Показатель.Значение);
				КонецЦикла;
				
				ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(СтруктураНовойТаблицы);
				
				Лист02_Прил5.Добавить().Данные = Новый СписокЗначений();
				Лист02_Прил5[Лист02_Прил5.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				ЕстьОбособленныеПодразделения = Истина;
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаЛист02_Прил5 = Лист02_Прил5[Лист02_Прил5.Количество()-1].Данные[0].Значение;
			
			ЭтоОбособленноеПодразделение = ЗначениеЗаполнено(РегистрацияВНалоговомОргане);
			СтраницаЛист02_Прил5.П002050000100 = "1";
			Если ЭтоОбособленноеПодразделение Тогда
				СтраницаЛист02_Прил5.П002050001000 = "2"; 
				СтраницаЛист02_Прил5.П002050002003 = ДоляНалоговойБазы.ОбособленноеПодразделение;
				СтраницаЛист02_Прил5.П002050002001 = ДоляНалоговойБазы.КПП;
			Иначе
				СтраницаЛист02_Прил5.П002050001000 = "1";
				СтраницаЛист02_Прил5.П002050002003 = "";
				СтраницаЛист02_Прил5.П002050002001 = "";
			КонецЕсли;
			СтраницаЛист02_Прил5.П002050004003 = ДоляНалоговойБазы.ДоляНалоговойБазы * 100;
			СтраницаЛист02_Прил5.П002050006003 = ДоляНалоговойБазы.СтавкаСубъектРФ;
		КонецЦикла;
		
		Если ЕстьОбособленныеПодразделения Тогда 
			// Налогоплательщики, имеющие обособленные подразделения, проставляют только налоговую ставку для исчисления налога
			// на прибыль, подлежащего уплате в федеральный бюджет.
			СтраницаЛист02 = Контейнер.Лист02[0].Данные[0].Значение;
			СтраницаЛист02.П002000016003 = 0;
			СтраницаЛист02.П002000017003 = 0;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С ВАРИАНТАМИ ОТЧЕТОВ

Процедура СписокОтчетовПоддерживаемыхПодсистемой(СписокОтчетов) Экспорт
	
	СписокОтчетов.Добавить("Отчет.СправкаРасчетДолиНалоговойБазы");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СПРАВКИ-РАСЧЕТЫ

Процедура ДополнитьСписокСправокРасчетов(Список) Экспорт
	
	Список.Добавить("СправкаРасчетДолиНалоговойБазы", НСтр("ru = 'Распределение прибыли по бюджетам субъектов РФ';
															|en = 'Profit allocation by budgets of the RF territorial entities'"));
	
КонецПроцедуры	

Функция ВыполнитьЗапросРасчетСтавкиНалогаНаПрибыльЗаМесяц(Организация, КонецПериода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокДоступныхОрганизаций(Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Ставка,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.СуммаНалога,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.СуммаБазы,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация.ГоловнаяОрганизация
	|ИЗ
	|	РегистрСведений.РасчетСтавкиНалогаНаПрибыльЗаМесяц КАК РасчетСтавкиНалогаНаПрибыльЗаМесяц
	|ГДЕ
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация В(&СписокОрганизаций)
	|	И РасчетСтавкиНалогаНаПрибыльЗаМесяц.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ) И &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ВыполнитьЗапросРасчетНалогаНаПрибыль(Организация, КонецПериода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалогГод.СуммаОборот КАК СуммаНалогГод,
	|	НалогГод.Организация,
	|	ЕСТЬNULL(НалогГод.СубконтоКт3, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	НалогГод.СубконтоКт2 КАК Бюджет
	|ПОМЕСТИТЬ НалогГод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В (&СчетаРасчетыСБюджетом),
	|			&Субконто68_04_1,
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И СубконтоКт2 В (&УровниБюджетов)) КАК НалогГод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалогМесяц.СуммаОборот КАК СуммаНалогМесяц,
	|	НалогМесяц.Организация,
	|	ЕСТЬNULL(НалогМесяц.СубконтоКт3, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	НалогМесяц.СубконтоКт2 КАК Бюджет
	|ПОМЕСТИТЬ НалогМесяц
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ),
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В (&СчетаРасчетыСБюджетом),
	|			&Субконто68_04_1,
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И СубконтоКт2 В (&УровниБюджетов)) КАК НалогМесяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы
	|ПОМЕСТИТЬ РасчетДолейБазыНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ) И &КонецПериода
	|	И РасчетДолейБазыНалогаНаПрибыль.Организация В (&СписокОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// На текущий момент отчет не поддерживает корректный вывод ставки налога в случаях,
	|// когда две и более организации привязаны к одной ФНС с разными ставками.
	|// Будет выведена максимальная ставка, но фактические суммы налога будут корректны.
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СтавкаСубъектРФ) КАК СтавкаСубъектРФ
	|ПОМЕСТИТЬ СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
	|			&КонецПериода,
	|			Организация.ГоловнаяОрганизация В (&СписокОрганизаций)
	|		) КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФ
	|
	|СГРУППИРОВАТЬ ПО
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.Организация.ГоловнаяОрганизация,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НалогГод.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА НалогГод.Бюджет = ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА 1
	|		ИНАЧЕ РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы
	|	КОНЕЦ КАК ДоляНалоговойБазы,
	|	ВЫБОР
	|		КОГДА НалогГод.Бюджет = ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаФБ
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.СтавкаСубъектРФ, СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаСубъектРФ)
	|	КОНЕЦ КАК СтавкаСубъектРФ,
	|	НалогГод.СуммаНалогГод,
	|	НалогМесяц.СуммаНалогМесяц,
	|	НалогГод.СуммаНалогГод - НалогМесяц.СуммаНалогМесяц КАК СуммаНалогОстальныеМесяцы,
	|	НалогГод.Бюджет,
	|	НалогГод.Организация КАК Организация,
	|	НалогГод.Организация.ГоловнаяОрганизация
	|ИЗ
	|	НалогГод КАК НалогГод
	|		ЛЕВОЕ СОЕДИНЕНИЕ НалогМесяц КАК НалогМесяц
	|		ПО НалогГод.Организация = НалогМесяц.Организация
	|			И НалогГод.РегистрацияВНалоговомОргане = НалогМесяц.РегистрацияВНалоговомОргане
	|			И НалогГод.Бюджет = НалогМесяц.Бюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|		ПО НалогГод.Организация = РасчетДолейБазыНалогаНаПрибыль.Организация
	|			И НалогГод.РегистрацияВНалоговомОргане = РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|		ПО НалогГод.РегистрацияВНалоговомОргане = СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.РегистрацияВНалоговомОргане
	|			И НалогГод.Организация = СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.ГоловнаяОрганизация,
	|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&КонецПериода, ) КАК СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних";
	
	Субконто68_04_1 = Новый Массив;
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВНалоговомОргане);
	
	УровниБюджетов = Новый Массив;
	УровниБюджетов.Добавить(Перечисления.УровниБюджетов.ФедеральныйБюджет);
	УровниБюджетов.Добавить(Перечисления.УровниБюджетов.РегиональныйБюджет);
	
	НачалоПериода = НалоговыйУчет.НачалоНалоговогоПериода(КонецПериода, Организация);
	Если НачалоПериода = Неопределено Тогда
		НачалоПериода = НачалоГода(КонецПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокОрганизаций",        СписокДоступныхОрганизаций(Организация));
	Запрос.УстановитьПараметр("Субконто68_04_1",          Субконто68_04_1);
	Запрос.УстановитьПараметр("НачалоПериода",            НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",             КонецПериода);
	Запрос.УстановитьПараметр("УровниБюджетов",           УровниБюджетов);
	Запрос.УстановитьПараметр("СчетаРасчетыСБюджетом",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом));
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает временные таблицы 
// - Филиалы                   (список обособленных подразделений, выделенных на отдельный баланс)
// - НеОбособленныеПодразделения (список обособленных подразделений, не выделенных на отдельный баланс, с указанием всех
// их потомков до 3 колена) Во всех таблицах указан налоговый орган, в котором подразделение стоит на учете.
Процедура СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, СписокОрганизаций)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	Организации.РегистрацияВНалоговомОргане КАК НалоговыйОрган
	|ПОМЕСТИТЬ Филиалы
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&СписокОрганизаций)
	|	И НЕ Организации.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистрации.Организация					КАК Организация,
	|	Регистрации.Подразделение				КАК Подразделение,
	|	Регистрации.РегистрацияВНалоговомОргане	КАК НалоговыйОрган
	|ПОМЕСТИТЬ НеОбособленныеПодразделения
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК Регистрации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.СтруктураПредприятия КАК Подразделения
	|	ПО
	|		Подразделения.Ссылка = Регистрации.Подразделение
	|ГДЕ
	|	Регистрации.Организация В(&СписокОрганизаций)
	|	И НЕ Подразделения.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	Т.НалоговыйОрган КАК НалоговыйОрган
	|ИЗ
	|	(ВЫБРАТЬ Т.НалоговыйОрган ИЗ Филиалы КАК Т
	|	ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ Т.НалоговыйОрган ИЗ НеОбособленныеПодразделения КАК Т) КАК Т
	|";
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Возврат (Выборка.Количество() > 1);
	
КонецФункции


// функция-конструктор расчета распределения налоговой базы
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// * РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
// * СтоимостьАмортизируемогоИмущества - Число -
// * СтоимостьОСПрошлыхМесяцев - Число -
// * СтоимостьОССледующегоМесяца - Число -
// * РасходыПоОплатеТруда - Число -
// * СреднесписочнаяЧисленность - Число -
// * ДоляНалоговойБазы - Число -
// * НалоговаяБаза - Число -
// * Закрыто - Булево -
// * ПоследнийОтчетныйПериод - Дата -
Функция НовыйРасчетРаспределенияНалоговойБазы()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ЗаписьРаспределенияБазыНалогаНаПрибыль = Новый ТаблицаЗначений;
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("РегистрацияВНалоговомОргане",       Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьАмортизируемогоИмущества", ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОСПрошлыхМесяцев",         ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОССледующегоМесяца",       ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("РасходыПоОплатеТруда",              ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СреднесписочнаяЧисленность",        ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("ДоляНалоговойБазы",                 Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.ДоляНалоговойБазы.Тип);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("НалоговаяБаза",                 	 Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.НалоговаяБаза.Тип);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("Закрыто",                 			 Новый ОписаниеТипов("Булево"));
	
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("ПоследнийОтчетныйПериод",   		 ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Возврат ЗаписьРаспределенияБазыНалогаНаПрибыль;
	
КонецФункции

Функция ПолучитьЗаписьДолиБазыНалогаНаПрибыль()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	
	ЗаписьДолиБазыНалогаНаПрибыль = Новый ТаблицаЗначений;
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("РегистрацияВНалоговомОргане",       Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьАмортизируемогоИмущества", ОписаниеТипаЧисла15_2);
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОСПрошлыхМесяцев",         ОписаниеТипаЧисла15_2);
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОССледующегоМесяца",       ОписаниеТипаЧисла15_2);
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("РасходыПоОплатеТруда",              ОписаниеТипаЧисла15_2);
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("СреднесписочнаяЧисленность",        ОписаниеТипаЧисла15_2);
	ЗаписьДолиБазыНалогаНаПрибыль.Колонки.Добавить("ДоляНалоговойБазы",                 Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.ДоляНалоговойБазы.Тип);
	
	Возврат ЗаписьДолиБазыНалогаНаПрибыль;
	
КонецФункции

Функция ПодготовитьПараметрыПересчетаОНАИОНО(СтруктураШапки, Отказ)  
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	СодержаниеРеформация   = НСтр("ru = 'Пересчет ОНА и ОНО';
									|en = 'Recalculate deferred tax assets and deferred tax liabilities'");
	СодержаниеЗакрытиеГода = "";
	
	Период        = СтруктураШапки.Дата;
	НоваяСтавка   = СтруктураШапки.СтавкаНалогаНаПрибыль * 100;
	ДатаДляСтавки = КонецМесяца(НачалоМесяца(СтруктураШапки.Дата) - 1);
	СтараяСтавка  = ПолучитьРасчетнуюСтавкуНалогаНаПрибыль(СтруктураШапки.Организация, ДатаДляСтавки) * 100;
	
	Запрос.УстановитьПараметр("Ссылка",                 СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("НоваяСтавка",            НоваяСтавка);
	Запрос.УстановитьПараметр("СтараяСтавка",           СтараяСтавка);
	Запрос.УстановитьПараметр("Предприниматель",        СтруктураШапки.Предприниматель);
	Запрос.УстановитьПараметр("СодержаниеРеформация",   СодержаниеРеформация);
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеГода", СодержаниеЗакрытиеГода);
	
	НомераТаблиц = Новый Структура;
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытиеГода", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&НоваяСтавка КАК НоваяСтавка,
	|	&СтараяСтавка КАК СтараяСтавка,
	|	&Предприниматель КАК Предприниматель,
	|	&СодержаниеРеформация КАК СодержаниеРеформация,
	|	&СодержаниеЗакрытиеГода КАК СодержаниеЗакрытиеГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыПересчетаОНАИОНО()

// Выполняет обнуление показалетей Листа2 Приложения 5 декларация по прибыли.
//
Процедура ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(КоллекцияПоказателей)

	// Показатели из форм отчета до 2015Кв1
	КоллекцияПоказателей.П002050000100 = "";
	КоллекцияПоказателей.П002050001000 = "";
	КоллекцияПоказателей.П002050002001 = "";
	КоллекцияПоказателей.П002050002002 = "";
	КоллекцияПоказателей.П002050002003 = "";
	КоллекцияПоказателей.П002050003003 = 0;
	КоллекцияПоказателей.П002050003103 = 0;
	КоллекцияПоказателей.П002050004003 = 0;
	КоллекцияПоказателей.П002050005003 = 0;
	КоллекцияПоказателей.П002050006003 = 0;
	КоллекцияПоказателей.П002050007003 = 0;
	КоллекцияПоказателей.П002050008003 = 0;
	КоллекцияПоказателей.П002050009003 = 0;
	КоллекцияПоказателей.П002050010003 = 0;
	КоллекцияПоказателей.П002050011003 = 0;
	КоллекцияПоказателей.П002050012003 = 0;
	КоллекцияПоказателей.П002050012103 = 0;

КонецПроцедуры

Функция СписокДоступныхОрганизаций(Организация)
	
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	Если ЗначениеЗаполнено(Организация) И СписокДоступныхОрганизаций.Найти(Организация) <> Неопределено Тогда
		СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	ИначеЕсли СписокДоступныхОрганизаций.Количество() <> 0 Тогда
		СписокОрганизаций = СписокДоступныхОрганизаций;
	Иначе
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СписокОрганизаций;
	
КонецФункции

#КонецОбласти
