
/// Обертки функций ОсновнойИС

#Область ФункцииУчетнойСистемы

Функция ТекстРазделителяЗапросовПакета() Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьСтруктуруИзРезультатаЗапроса(РезультатЗапроса) Экспорт

	СтруктураПараметров = Новый Структура;

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Для каждого КолонкаРезультата Из РезультатЗапроса.Колонки Цикл
		СтруктураПараметров.Вставить(КолонкаРезультата.Имя, Выборка[КолонкаРезультата.Имя]);
	КонецЦикла;

    Возврат СтруктураПараметров;

КонецФункции

// Функция СтрокаТаблицыЗначенийВСтруктуру создает
// структуру со свойствами, как колонки таблицы
// значений передаваемой строки
// и устанавливает этим свойствам значения
// из строки таблицы значений
// 
// Параметры:
//  СтрокаТаблицыЗначений - СтрокаТаблицыЗначений
//
// ВозвращаемоеЗначение:
//  Структура
//
Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
	
	Структура = Новый Структура;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Структура.Вставить(Колонка.Имя, СтрокаТаблицыЗначений[Колонка.Имя]);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#Область Интеграция

Функция ПолучитьИмяДокументаУчетнойСистемы(ИмяДокументаПараллельногоУчета) Экспорт 

	

КонецФункции // ()

#КонецОбласти

#Область Проведение

//Для отладки следует вызывать //ДополнитьТаблицамиИзПакетаЗапросов(ПараметрыПроведения, Запрос, НомераТаблиц, "", Истина)
Функция ДополнитьТаблицамиИзПакетаЗапросов(ПараметрыПроведения, Запрос, НомераТаблиц, ИсключаемыеПрефиксы = "вт,Уничтожить", Отладка = Ложь) Экспорт
		
	Если Отладка Тогда
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		РезультатПакет = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Иначе	
		РезультатПакет = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИсключаемыеПрефиксы) Тогда
		ПрефиксыИскл = Новый Структура(ИсключаемыеПрефиксы);
	Иначе 
		ПрефиксыИскл = Новый Структура;
	КонецЕсли;
		
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл		
		
		ПропуститьТаблицу = Ложь;
		Для каждого ТекПрефикс Из ПрефиксыИскл Цикл		
			Если СтрНачинаетсяС(НомерТаблицы.Ключ, ТекПрефикс.Ключ) Тогда			
				ПропуститьТаблицу = Истина;
				Продолжить; // сработал префикс исключения
			КонецЕсли;		
		КонецЦикла;
		
		Если ПропуститьТаблицу Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, РезультатПакет[НомерТаблицы.Значение].Выгрузить());
		
	КонецЦикла;

	Возврат ПараметрыПроведения;
		
КонецФункции

Процедура ОтразитьДвиженияПоТаблицам(СтруктураТаблицы, Движения, Отказ) Экспорт 

	Для каждого ЭлементТаблица Из СтруктураТаблицы Цикл
		
		ДвиженияПриемник = Движения.Найти(ЭлементТаблица.Ключ);
		Если ДвиженияПриемник = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПроведениеСерверУХ.ОтразитьДвижения(ЭлементТаблица.Значение, ДвиженияПриемник, Отказ)	
		
	КонецЦикла;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения
Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, ДополнительныеСвойства, РежимПроведения = Неопределено) Экспорт

	ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, ДополнительныеСвойства, РежимПроведения);

КонецПроцедуры

// Устарела. Следует использовать ПроведениеСерверУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
Процедура ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства) Экспорт

	ПроведениеСерверУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

// Устарела. Следует использовать ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений.
Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект, ЭтоНовый = Ложь) Экспорт

	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект, ЭтоНовый);
	
КонецПроцедуры

// Устарела. Следует использовать ПроведениеСерверУХ.ЗаписатьНаборыЗаписей.
Процедура ЗаписатьНаборыЗаписей(Объект) Экспорт
	
	ПроведениеСерверУХ.ЗаписатьНаборыЗаписей(Объект);

КонецПроцедуры

// Устарела. Следует использовать ПроведениеСерверУХ.ОтразитьДвижения.
Процедура ОтразитьДвижения(Таблица, Движения, Отказ) Экспорт
	
	ПроведениеСерверУХ.ОтразитьДвижения(Таблица, Движения, Отказ);
	
КонецПроцедуры

// Устарела. Следует использовать ПроведениеСерверУХ.ВыполнитьКонтрольРезультатовПроведения.
Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт 
	
	ПроведениеСерверУХ.ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ);
				
КонецПроцедуры

#КонецОбласти

#КонецОбласти