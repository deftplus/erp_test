////////////////////////////////////////////////////////////////////////////////
// Модуль предназначен для реализации фукнциональности механизма шаблонов 
// заполнения контексте клиентского кода.
////////////////////////////////////////////////////////////////////////////////

Функция КомандаЗавершение(ВыбранноеЗначение, ДопПараметр) Экспорт
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ИмяОсновнойФормы = УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьИмяОсновнойФормы(ДопПараметр);
		Если ЗначениеЗаполнено(ИмяОсновнойФормы) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Основание", ВыбранноеЗначение);
			ОткрытьФорму(ИмяОсновнойФормы, ПараметрыФормы);	
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось получить основную форму элемента для объекта %Элемент%. Операция отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Элемент%", Строка(ДопПараметр));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		// Шаблон не выбран. Ничего не делаем.
	КонецЕсли;
КонецФункции		// КомандаЗавершение()

// По эталонному элементу ЭталонныйЭлементВход (например, пустая ссылка на справочник)
// выбирает шаблон и создает новый элемент по шаблону.
Функция ВыбратьИСоздатьПоШаблону(ЭталонныйЭлементВход) Экспорт
	Попытка
		ОписаниеЗакрытия = Новый ОписаниеОповещения("КомандаЗавершение", ЭтотОбъект, ЭталонныйЭлементВход);
		ПараметрыФормы =  УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьСтруктуруДанныхОбъектаШаблона(ЭталонныйЭлементВход);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ВыбранныйШаблон = ОткрытьФорму("Справочник.ШаблоныЗаполнения.ФормаВыбора", ПараметрыФормы, , , , , ОписаниеЗакрытия);
	Исключение
		ТекстСообщения = НСтр("ru = 'Во время создания объекта по шаблону возникли ошибки: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецПопытки;
КонецФункции		// ВыбратьИСоздатьПоШаблону()

// Создаёт новый шаблон заполнения для справочника НастройкаВыбораВход,
// выставляя наименование шаблона НаименованиеВход.
Процедура СоздатьШаблонНастройкиПроцессаВыбора(НастройкаВыбораВход, ВариантЗаполненияВход, НаименованиеВход)
	// Проверка реквизитов варианта заполнения.
	СтруктураРеквизитов = ОбщегоНазначенияУХ.ПолучитьСтруктуруРеквизитовОбъекта(ВариантЗаполненияВход);
	ИмяРодителя = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураРеквизитов, "ИмяРодителя", "");
	Назначение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураРеквизитов, "Назначение", ПредопределенноеЗначение("Перечисление.НазначенияШаблонов.ПустаяСсылка"));
	ЭтоИмяРодителяНастройкиПроцесса = (СокрЛП(ИмяРодителя) = "НастройкиПроцессаВыбора");
	ЭтоНазначениеСправочник = (Назначение = ПредопределенноеЗначение("Перечисление.НазначенияШаблонов.Справочник"));
	Если (ЭтоИмяРодителяНастройкиПроцесса) И (ЭтоНазначениеСправочник) Тогда
		// Получение списка полей для заполнения шаблона по варианту заполнения.
		СтруктураРеквизитов = УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьСтруктуруРеквизитовВариантаЗаполненияШаблона(ВариантЗаполненияВход);
		Реквизиты = СтруктураРеквизитов.СписокРеквизитовДляПереноса;
		ТабЧасти = СтруктураРеквизитов.СписокТабличныхЧастейДляПереноса;
		// Создание шаблона.
		НовыйШаблон = УправлениеШаблонамиЗаполненияВызовСервераУХ.СоздатьШаблон(НастройкаВыбораВход, Реквизиты, ТабЧасти, НаименованиеВход, , ВариантЗаполненияВход);
		// Извещение пользователя о результатах.
		Если ЗначениеЗаполнено(НовыйШаблон) Тогда
			КартинкаОповещения = БиблиотекаКартинок.Успешно32;
			ТекстОповещения = НСтр("ru = 'Создание шаблона'");
			ПояснениеОповещения = НСтр("ru = 'Шаблон %Шаблон% был успешно создан'");
			ПояснениеОповещения = СтрЗаменить(ПояснениеОповещения, "%Шаблон%", Строка(НовыйШаблон));
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(НовыйШаблон);
			ПоказатьОповещениеПользователя(ТекстОповещения, НавигационнаяСсылка, ПояснениеОповещения, КартинкаОповещения);
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось шаблон'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Неизвестный вариант назначения %Назначение% и имени родителя %ИмяРодителя%. Операция отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Строка(Назначение));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРодителя%", Строка(ИмяРодителя));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры		// СоздатьШаблонНастройкиПроцессаВыбора()

Процедура ВыборВариантыЗаполненияШаблонов_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
			ЕстьОбъектРодитель = ДополнительныеПараметры.Свойство("ОбъектРодитель");
			Если ЕстьОбъектРодитель Тогда
				Если ТипЗнч(Результат) = Тип("Структура") Тогда
					ВыбранноеЗначение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "ВыбранныйВариант", ПредопределенноеЗначение("Справочник.ВариантыЗаполненияШаблонов.ПустаяСсылка"));	
					НовоеНаименование = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Наименование", "");	
				Иначе
					ВыбранноеЗначение = Результат;
					НовоеНаименование = "";
				КонецЕсли;
				СоздатьШаблонНастройкиПроцессаВыбора(ДополнительныеПараметры.ОбъектРодитель, ВыбранноеЗначение, НовоеНаименование);
			Иначе
				ТекстСообщения = НСтр("ru = 'Не удалось получить значение объекта-родителя для создания шаблона. Операция отменена.'");
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru = 'Неизвестный вариант выбранного значения: %Результат%. Операция отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Результат%", Строка(Результат));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		// Пользователь отказался. Ничего не делаем.
	КонецЕсли;
КонецПроцедуры		// ВыборВариантыЗаполненияШаблонов_Завершение()

// Сохраняет объект СсылкаНаОбъектВход в виде шаблона на форме ФормаВход.
Процедура СохранитьВШаблон(ФормаВход, СсылкаНаОбъектВход) Экспорт
	Если ФормаВход.Модифицированность Тогда
		ТекстСообщения = НСтр("ru = 'Для создания шаблона требуется сохранить объект. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Возврат;
	Иначе	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОбъектРодитель", СсылкаНаОбъектВход);
		Если ТипЗнч(СсылкаНаОбъектВход) = Тип("СправочникСсылка.Лоты") Тогда
			// Для лотов используем помощник ввода шаблонов лотов.
			ОрганизаторЗакупки = УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьОрганизациюЗакупочнойПроцедурыЛота(СсылкаНаОбъектВход);
			Если ЗначениеЗаполнено(ОрганизаторЗакупки) Тогда
				ПараметрыФормы.Вставить("АналитикаОтбора", ОрганизаторЗакупки);
			Иначе
				// Не добавляем в шаблон принадлежность к организации.
			КонецЕсли;
			ВыбранныйШаблон = ОткрытьФорму("Справочник.ШаблоныЗаполнения.Форма.ФормаПомощникВводаШаблонаЛота", ПараметрыФормы);
		ИначеЕсли ТипЗнч(СсылкаНаОбъектВход) = Тип("СправочникСсылка.НастройкиПроцессаВыбора") Тогда
			// Для настроек процесса выбора используем варианты заполнения шаблонов.
			СтруктураОповещения = Новый Структура;
			СтруктураОповещения.Вставить("ОбъектРодитель", СсылкаНаОбъектВход);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВариантыЗаполненияШаблонов_Завершение", УправлениеШаблонамиЗаполненияКлиентУХ, СтруктураОповещения);
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("НастройкаПроцессаВыбора", СсылкаНаОбъектВход);
			ОткрытьФорму("Справочник.ШаблоныЗаполнения.Форма.ФормаПомощникВводаШаблонаНастройкиПроцессаВыбора", ПараметрыФормы, , , , , ОписаниеОповещения);
		ИначеЕсли ТипЗнч(СсылкаНаОбъектВход) = Тип("СправочникСсылка.ЗакупочныеПроцедуры") Тогда	
			// Для закупочной процедуры укажем организацию как аналитику отбора.
			ОрганизаторЗакупки = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(СсылкаНаОбъектВход, "ОрганизацияДляЗаключенияДоговора");
			ПараметрыФормы.Вставить("АналитикаОтбора", ОрганизаторЗакупки);
			ВыбранныйШаблон = ОткрытьФорму("Справочник.ШаблоныЗаполнения.Форма.ФормаПомощникВводаШаблона", ПараметрыФормы);
		ИначеЕсли ТипЗнч(СсылкаНаОбъектВход) = Тип("ДокументСсылка.ОбоснованиеТребованийКЗакупочнойПроцедуре") Тогда	
			// Для запроса на проведение закупки укажем организацию как аналитику отбора.
			ОрганизаторЗакупки = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
			ДокументОснование = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(СсылкаНаОбъектВход, "ДокументОснование");
			Если ЗначениеЗаполнено(ДокументОснование) Тогда
				ОрганизаторЗакупки = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ДокументОснование, "ОрганизаторЗакупки");
			Иначе
				ОрганизаторЗакупки = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
			КонецЕсли;	
			ПараметрыФормы.Вставить("АналитикаОтбора", ОрганизаторЗакупки);
			ВыбранныйШаблон = ОткрытьФорму("Справочник.ШаблоныЗаполнения.Форма.ФормаПомощникВводаШаблона", ПараметрыФормы);
		Иначе
			// Для прочих объектов открываем стандартную форму редактирования шаблона.
			ВыбранныйШаблон = ОткрытьФорму("Справочник.ШаблоныЗаполнения.Форма.ФормаПомощникВводаШаблона", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры		// СохранитьВШаблон()

// Вызывается после заполнения по шаблону ШаблонВход для 
// объекта с формой ФормаВход
Процедура ПослеЗаполненияПоШаблону(ФормаВход, ШаблонВход) Экспорт
	Если СокрЛП(ФормаВход.ИмяФормы) = "Справочник.Лоты.Форма.ФормаЭлемента" Тогда
		ФормаВход.ПриЧтенииНаСервере(Неопределено);
	Иначе
		// Неизвестный вариант формы. Ничего не делаем.
	КонецЕсли;
КонецПроцедуры		// ПослеЗаполненияПоШаблону()

// Заполняет форму ФормаВход по данным шаблона ШаблонВход.
Процедура ЗаполнитьФормуПоШаблону(ФормаВход, ШаблонВход) Экспорт
	// Заполнение Наименования.
	НаименованиеОбъекта = НСтр("ru = '<Пример заполнения по шаблону %Шаблон%>'");
	НаименованиеОбъекта = СтрЗаменить(НаименованиеОбъекта, "%Шаблон%", Строка(ШаблонВход.Наименование));
	ФормаВход.Объект.Наименование = НаименованиеОбъекта;
	// Заполнение реквизитов.
	СтруктураРеквизитов = УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьСтруктуруРеквизитовВШаблоне(ШаблонВход.Ссылка);
	ЗаполнитьЗначенияСвойств(ФормаВход.Объект, СтруктураРеквизитов);
	// Заполнение табличных частей.
	СтруктураТабЧастей = УправлениеШаблонамиЗаполненияВызовСервераУХ.ПолучитьСтруктуруТабличныхЧастейВШаблоне(ШаблонВход.Ссылка);
	Для Каждого ТекСтруктураТабЧастей Из СтруктураТабЧастей Цикл
		ИмяТабЧасти = ТекСтруктураТабЧастей.Ключ;
		ТабЧасть = ФормаВход.Объект[ИмяТабЧасти];
		Для Каждого ТекСтрокиТабЧасти Из ТекСтруктураТабЧастей.Значение Цикл
			НоваяСтрока = ТабЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокиТабЧасти);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры		// ЗаполнитьФормуПоШаблону()
