Функция ПолучитьМассивИменОбъектовWS(ТипОбъектаМетаданных, ТекСоединениеВИБ, ПараметрыПодключения = Неопределено, Кэш = Неопределено) Экспорт
	
	ИменаОбъектов = ИменаОбъектовИзКэша(Кэш, ТипОбъектаМетаданных);
	Если ИменаОбъектов <> Неопределено Тогда
		Возврат ИменаОбъектов;
	КонецЕсли;
		
	ИсходныеДанные = Новый Структура("ТипОбъектаМетаданных, ПараметрыПодключения", ТипОбъектаМетаданных, ПараметрыПодключения);	
	Возврат ТекСоединениеВИБ.GetArrayOfMetadataObjectsName(Новый ХранилищеЗначения(ИсходныеДанные, Новый СжатиеДанных(9))).Получить()
	
КонецФункции // ПолучитьМассивИменОбъектов8x()

Функция СтруктураОписанияСправочникаWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;

	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияСправочникаWS()

Функция СтруктураОписанияСправочника77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
	
	СправочникБД=ТекСоединениеВИБ.Метаданные().Справочник(ШаблонОписания.ИмяОбъектаМетаданных);
	ШаблонОписания.Синоним=СправочникБД.Представление();
	
	НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
	НоваяСтрока.Имя="Наименование";
	НоваяСтрока.Синоним="Наименование";
	НОваяСтрока.ТипДанных="Строка";
	НоваяСтрока.ОписаниеПримитивногоТипа="Строка"+"("+СправочникБД.ДлинаНаименования()+")";
	
	НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
	НоваяСтрока.Имя="Код";
	НоваяСтрока.Синоним="Код";
	НоваяСтрока.ТипДанных=?(СправочникБД.ТипКода = "Текстовый","Строка","Число");
	НоваяСтрока.ОписаниеПримитивногоТипа=НоваяСтрока.ТипДанных+"("+СправочникБД.ДлинаКода()+")";
	НоваяСтрока.Обязательный=Истина;
	
	Для Инд =1 По СправочникБД.Реквизит() Цикл
		
		ТекРеквизит=СправочникБД.Реквизит(Инд);				
		ТипРеквизита = ТекРеквизит.Тип();
		
		НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
		НоваяСтрока.Имя=ТекРеквизит.Идентификатор();
		НоваяСтрока.Синоним=ТекРеквизит.Представление();
		
		Если ТипРеквизита = "Строка" Тогда
			
			НоваяСтрока.ТипДанных=ТипРеквизита;
			НоваяСтрока.ОписаниеПримитивногоТипа=ТипРеквизита+"("+ТекРеквизит.Длина()+")";
			
		ИначеЕсли ТипРеквизита = "Число" Тогда
			
			НоваяСтрока.ТипДанных=ТипРеквизита;
			НоваяСтрока.ОписаниеПримитивногоТипа=ТипРеквизита+"("+ТекРеквизит.Длина()+","+ТекРеквизит.Точность()+")";
			
		ИначеЕсли ТипРеквизита = "Дата" Тогда 
			
			НоваяСтрока.ТипДанных=ТипРеквизита;
			НоваяСтрока.ОписаниеПримитивногоТипа=ТипРеквизита+"(Дата)";
			
		ИначеЕсли ТипРеквизита = "Булево" Тогда
			
			НоваяСтрока.ТипДанных=ТипРеквизита;
			НоваяСтрока.ОписаниеПримитивногоТипа=ТипРеквизита;
			
		ИначеЕсли (ТипРеквизита = "Справочник"
			ИЛИ ТипРеквизита = "Перечисление" ИЛИ ТипРеквизита = "Документ")	
			И НЕ ПустаяСтрока(ТекРеквизит.Вид()) Тогда
			
			НоваяСтрока.ТипДанных = ТипРеквизита + "." + ТекРеквизит.Вид();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияСправочника77() 

Функция ПолучитьМассивСтруктурТабличныхЧастей1CПредприятие77(ДанныеОбъектаВладельцаТЧ,ТекСоединениеВИБ) Экспорт
	
	МассивТЧ = Новый Массив;
	
	МетаданныеВладельцаТЧ=ТекСоединениеВИБ.Метаданные().Документ(ДанныеОбъектаВладельцаТЧ.ИмяОбъектаМетаданных);
	
	Если МетаданныеВладельцаТЧ.РеквизитТабличнойЧасти() > 0 Тогда
		
		РеквизитыТЧ = Новый Массив;
		
		СтруктураТЧ = Новый Структура("Имя,Представление,Реквизиты", "ТабличнаяЧасть", "Табличная часть", РеквизитыТЧ);
		
		МассивТЧ.Добавить(СтруктураТЧ);
		
		РеквизитыТЧ.Добавить(Новый Структура("Имя,Представление,Тип", "НомерСтроки", "Номер строки", "Число"));
		
		Для ИндексРеквизита = 1 По МетаданныеВладельцаТЧ.РеквизитТабличнойЧасти() Цикл
			
			МетаданыеРеквизит = МетаданныеВладельцаТЧ.РеквизитТабличнойЧасти(ИндексРеквизита);				
			
			ТипРеквизита = МетаданыеРеквизит.Тип();
			Если НЕ ОбщегоНазначенияУХ.ПримитивныйТипСтрока(ТипРеквизита) Тогда
				ВидРеквизита = МетаданыеРеквизит.Вид();
				Если (ТипРеквизита = "Справочник" ИЛИ ТипРеквизита = "Перечисление" ИЛИ ТипРеквизита = "Документ") И НЕ ПустаяСтрока(ВидРеквизита) Тогда
					ТипРеквизита = ТипРеквизита + "." + ВидРеквизита;
				Иначе
					ТипРеквизита = "";
				КонецЕсли;
			КонецЕсли;
			
			РеквизитыТЧ.Добавить(Новый Структура("Имя,Представление,Тип", МетаданыеРеквизит.Идентификатор(), МетаданыеРеквизит.Представление(), ТипРеквизита));
			
			Если ПустаяСтрока(ТипРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивТЧ;
	
КонецФункции

Функция ПолучитьМассивСтруктурТабличныхЧастей1CПредприятиеWS(ДанныеОбъектаВладельцаТЧ, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеМетаданных = РаботаСОбъектамиМетаданныхУХ.ОписаниеОбъектовМетаданных(Кэш, ДанныеОбъектаВладельцаТЧ.ТипОбъектаМетаданных);
	Если ОписаниеМетаданных <> Неопределено Тогда		
		Возврат ОписаниеМетаданных.ТабличныеЧастиОбъектов[ДанныеОбъектаВладельцаТЧ.ИмяОбъектаМетаданных];
	КонецЕсли;
	
	Результат = ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ДанныеОбъектаВладельцаТЧ, Новый СжатиеДанных(9))).Получить();
	
	Возврат Результат;
	
КонецФункции // СтруктураОписанияСправочникаWS()

Функция СтруктураОписанияДокументаWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияСправочникаWS()

Функция СтруктураОписанияДокумента77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
		
	ДокументБД=ТекСоединениеВИБ.Метаданные().Документ(ШаблонОписания.ИмяОбъектаМетаданных);
	
	ШаблонОписания.Синоним=ДокументБД.Представление();
	
	НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
	НоваяСтрока.Имя="ДатаДок";
	НоваяСтрока.Синоним="Дата";
	НоваяСтрока.ТипДанных="Дата";
	
	НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
	НоваяСтрока.Имя="НомерДок";
	НоваяСтрока.Синоним="Номер";
	
	НоваяСтрока.ТипДанных=?(ДокументБД.ТипНомера = "Текстовый","Строка","Число");
	
	Для Инд = 1 По ДокументБД.РеквизитШапки() Цикл
		
		ТекРеквизит=ДокументБД.РеквизитШапки(Инд);				
		ТипРеквизита = ТекРеквизит.Тип();
		
		НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
		НоваяСтрока.Имя=ТекРеквизит.Идентификатор();
		НоваяСтрока.Синоним=ТекРеквизит.Представление();
		
		Если ТипРеквизита = "Строка"
			ИЛИ ТипРеквизита = "Число"
			ИЛИ ТипРеквизита = "Дата"
			ИЛИ ТипРеквизита = "Булево" Тогда
			
			НоваяСтрока.ТипДанных=ТипРеквизита;
			
		ИначеЕсли (ТипРеквизита = "Справочник"
			ИЛИ ТипРеквизита = "Перечисление" ИЛИ ТипРеквизита = "Документ")	
			И НЕ ПустаяСтрока(ТекРеквизит.Вид()) Тогда
			
			НоваяСтрока.ТипДанных = ТипРеквизита + "." + ТекРеквизит.Вид();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияСправочника77()

Функция СтруктураОписанияПланаВидовХарактеристикWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияСправочникаWS()

Функция СтруктураОписанияПеречисленияWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияПеречисленияWS()

Функция СтруктураОписанияПеречисления77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
		
	СправочникБД=ТекСоединениеВИБ.Метаданные().Перечисление(ШаблонОписания.ИмяОбъектаМетаданных);
	ШаблонОписания.Синоним=СправочникБД.Представление();
		
		Для Инд=1 по СправочникБД.Значение() Цикл
			
			НоваяСтрока=ШаблонОписания.Реквизиты.Добавить();
			
			НоваяСтрока.Имя=СправочникБД.Значение(Инд).Идентификатор;
			НоваяСтрока.Синоним=СправочникБД.Значение(Инд).Представление();
						
		КонецЦикла;
	
	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияПеречисления77()

Функция СтруктураОписанияРегистраНакопленияWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияРегистраНакопленияWS()

Функция СтруктураОписанияРегистраНакопления77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
		
	РегистрБД=ТекСоединениеВИБ.Метаданные().Регистр(ШаблонОписания.ИмяОбъектаМетаданных);
	ШаблонОписания.Синоним=РегистрБД.Представление();
	ШаблонОписания.ВидРегистра = РегистрБД.ТипРегистра;
	
	Для Инд = 1 По РегистрБД.Ресурс() Цикл
		
		НоваяСтрока=ШаблонОписания.Ресурсы.Добавить();
		НоваяСтрока.Имя=РегистрБД.Ресурс(Инд).Идентификатор;
		НоваяСтрока.Синоним=РегистрБД.Ресурс(Инд).Синоним;
		
	КонецЦикла;
	
	Для Инд = 1 По РегистрБД.Измерение() Цикл
		
		ТекИзмерение = РегистрБД.Измерение(Инд);
		
		СтрИзмерение=ШаблонОписания.Измерения.Добавить();
		СтрИзмерение.Имя=ТекИзмерение.Идентификатор;
		СтрИзмерение.Синоним=ТекИзмерение.Представление();
		
		ТипИзмерения = ТекИзмерение.Тип;
		Если ТипИзмерения = "Строка"
			ИЛИ ТипИзмерения = "Число"
			ИЛИ ТипИзмерения = "Дата"
			ИЛИ ТипИзмерения = "Булево" Тогда
			
			СтрИзмерение.ТипДанных=ТипИзмерения;
			
		ИначеЕсли (ТипИзмерения = "Справочник"
			ИЛИ ТипИзмерения = "Перечисление" 
			ИЛИ ТипИзмерения = "Документ")
			
			И НЕ ПустаяСтрока(ТекИзмерение.Вид) Тогда
			
			СтрИзмерение.ТипДанных = ТипИзмерения + "." + ТекИзмерение.Вид;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияРегистраНакопления77() 

Функция СтруктураОписанияРегистраБухгалтерииWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияРегистраБухгалтерииWS()

Функция СтруктураОписанияРегистраБухгалтерии77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
		
	РегистрБД=ТекСоединениеВИБ.Метаданные().ПланСчетов(ШаблонОписания.ИмяОбъектаМетаданных);
	ШаблонОписания.Синоним=РегистрБД.Представление();
	
	ШаблонОписания.Вставить("ИмяПланаСчетов",ШаблонОписания.ИмяОбъектаМетаданных);
		
	НоваяСтрока=ШаблонОписания.Ресурсы.Добавить();
	НоваяСтрока.Имя="С";
	НоваяСтрока.Синоним="Сумма";
	НоваяСтрока.Балансовый=Истина;
	
	НоваяСтрока=ШаблонОписания.Ресурсы.Добавить();
	НоваяСтрока.Имя="В";
	НоваяСтрока.Синоним=Нстр("ru = 'Валютная сумма'");
	НоваяСтрока.Балансовый=Ложь;
	НоваяСтрока.ПризнакУчета="Валютный";
	
	НоваяСтрока=ШаблонОписания.Ресурсы.Добавить();
	НоваяСтрока.Имя="К";
	НоваяСтрока.Синоним="Количество";
	НоваяСтрока.Балансовый=Ложь;
	НоваяСтрока.ПризнакУчета="Количественный";
	
	ШаблонОписания.Корреспонденция=Истина;
	
	РазделительУчета = ТекСоединениеВИБ.Метаданные().РазделительУчета.ПолныйИдентификатор();
	Валюта_ВИБ       = ТекСоединениеВИБ.Метаданные().Валюта.ПолныйИдентификатор();
	
	Если НЕ ПустаяСтрока(Валюта_ВИБ) Тогда
		
		СтрокаПоказателей                 = ШаблонОписания.Измерения.Добавить();
		СтрокаПоказателей.Имя         	  = "Валюта";
		СтрокаПоказателей.Синоним         = "Валюта";
		СтрокаПоказателей.Балансовый      = Истина;
		СтрокаПоказателей.ТипДанных       = Валюта_ВИБ;
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(РазделительУчета) Тогда
		
		РазделительУчета_Тип = ТекСоединениеВИБ.Метаданные().РазделительУчета.Тип();
		РазделительУчета_Вид = ТекСоединениеВИБ.Метаданные().РазделительУчета.Вид();			
		
		СтрокаПоказателей                = ШаблонОписания.Измерения.Добавить();
		СтрокаПоказателей.Имя         	 = "Организация";
		СтрокаПоказателей.Синоним		 = "Организация";
		
		СтрокаПоказателей.Балансовый      = Истина;
		СтрокаПоказателей.ТипДанных 	  = РазделительУчета_Тип +"."+ РазделительУчета_Вид;
		
	КонецЕсли;
	
	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияРегистраБухгалтерии77()

Функция СтруктураОписанияПланаСчетовWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
		
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияПланаСчетовWS()

Функция СтруктураОписанияПланаСчетов77(ШаблонОписания,ТекСоединениеВИБ) Экспорт
		
	ПланСчетовБД = ТекСоединениеВИБ.CreateObject("Счет." + ШаблонОписания.ИмяОбъектаМетаданных);
	
	ШаблонОписания.ПризнакиУчета="Валютный;Количественный";
	ШаблонОписания.ПризнакиУчетаСубконто="Суммовой;Валютный;Количественный";
	ШаблонОписания.ДлинаКода=8;
	ШаблонОписания.ПланСчетовМетаданные=ШаблонОписания.ИмяОбъектаМетаданных;
	
	ПланСчетовБД.ВыбратьСчета();
	
	Пока ПланСчетовБД.ПолучитьСчет() = 1 Цикл
		
		СтрокаПланаСчетов = ШаблонОписания.мПланСчетов.Добавить();
		СтрокаПланаСчетов.Код = СокрЛП(ПланСчетовБД.Код);
		СтрокаПланаСчетов.Наименование 	 = ПланСчетовБД.Наименование;
		СтрокаПланаСчетов.Родитель 		 = ПланСчетовБД.Родитель().Код;
		СтрокаПланаСчетов.Забалансовый   = (ПланСчетовБД.Забалансовый=1);
		
		ПризнакиУчетаСчета="";
		
		Если ПланСчетовБД.Валютный=1 Тогда
			ПризнакиУчетаСчета=ПризнакиУчетаСчета+";"+"Валютный";
		КонецЕсли;
		
		Если ПланСчетовБД.Количественный=1 Тогда
			ПризнакиУчетаСчета=ПризнакиУчетаСчета+";"+"Количественный";
		КонецЕсли;
		
		СтрокаПланаСчетов.ПризнакиУчета=Сред(ПризнакиУчетаСчета,2);
		
		Активность=ПланСчетовБД.Активный;
		
		Если Активность=1 Тогда
			СтрокаПланаСчетов.ВидСтрока="Активный";
		ИначеЕсли Активность=2 Тогда
			СтрокаПланаСчетов.ВидСтрока="Пассивный";
		ИначеЕсли Активность=3 Тогда
			СтрокаПланаСчетов.ВидСтрока="АктивноПассивный";
		КонецЕсли;		
		
		ТекТаблицаСубконто=ШаблонОписания.ТаблицаСубконто.СкопироватьКолонки();	
		
		Для Инд = 1  По ПланСчетовБД.КоличествоСубконто() Цикл
			
			ТекПризнакиУчетаСубконто="";
			
			НоваяСтрока=ТекТаблицаСубконто.Добавить();
			НоваяСтрока.Номер=Инд;
			НоваяСтрока.ВидСубконто=ПланСчетовБД.SubcontoKind(Инд).Identifier();
			НоваяСтрока.ТолькоОбороты=(ПланСчетовБД.ТолькоОбороты(Инд)=1);
			
			Если (ПланСчетовБД.УчетПоСумме(Инд)=1) Тогда
				ТекПризнакиУчетаСубконто=ТекПризнакиУчетаСубконто+";"+"Суммовой";
			КонецЕсли;
			
			Если (ПланСчетовБД.УчетПоКоличеству(Инд)=1) Тогда
				ТекПризнакиУчетаСубконто=ТекПризнакиУчетаСубконто+";"+"Количественный";
			КонецЕсли;
			
			Если (ПланСчетовБД.УчетПоВалютнойСумме(Инд)=1) Тогда
				ТекПризнакиУчетаСубконто=ТекПризнакиУчетаСубконто+";"+"Валютный";
			КонецЕсли;
			
			НоваяСтрока.ПризнакиУчетаСубконто=Сред(ТекПризнакиУчетаСубконто,2);
			НоваяСтрока.ТипДанных=ПланСчетовБД.SubcontoKind(Инд).SubcontoType();		
			
		КонецЦикла;
		
		СтрокаПланаСчетов.ВидыСубконто=ТекТаблицаСубконто;
		
	КонецЦикла;
	
	Возврат ШаблонОписания;
	
КонецФункции // СтруктураОписанияПланаСчетов77()

Функция СтруктураОписанияРегистраСведенийWS(ШаблонОписания, ТекСоединениеВИБ, Кэш = Неопределено) Экспорт
	
	ОписаниеОбъекта = ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания);
	Если ОписаниеОбъекта <> Неопределено Тогда
		Возврат ОписаниеОбъекта;
	КонецЕсли;
	
	Возврат ТекСоединениеВИБ.GetPropertiesOfMetadataObject(Новый ХранилищеЗначения(ШаблонОписания, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияРегистраСведенийWS()

Функция СтруктураОписанияПроизвольногоЗапросаWS(ТекСоединениеВИБ,ТекстЗапросаМодуля,ПараметрыПодключения=Неопределено)
	
	ИсходныеДанные=Новый Структура("ТекстЗапросаМодуля,ПараметрыПодключения",ТекстЗапросаМодуля,ПараметрыПодключения);
	
	Возврат ТекСоединениеВИБ.GetDescriptionOfCustomQuery(Новый ХранилищеЗначения(ИсходныеДанные, Новый СжатиеДанных(9))).Получить();	
	
КонецФункции // СтруктураОписанияПроизвольногоЗапросаWS() 

Функция ПолучитьСтруктуруОписанияПроизвольногоЗапросаБД(ТекСоединениеВИБ,ТекстЗапросаМодуля) Экспорт
	
	Если ТипЗнч(ТекСоединениеВИБ) = Тип("WSProxy") Тогда
		
		Возврат СтруктураОписанияПроизвольногоЗапросаWS(ТекСоединениеВИБ,ТекстЗапросаМодуля);
		
	Иначе
		
		Возврат РаботаСОбъектамиМетаданныхВнешнийУХ.СтруктураОписанияПроизвольногоЗапроса8х(ТекСоединениеВИБ,ТекстЗапросаМодуля);
		
	КонецЕсли;
		
КонецФункции // ПолучитьСтруктуруОписанияПроизвольногоЗапросаБД()

Функция ПолучитьТаблицуИдентификаторовОбъектовWS(ТекСоединениеВИБ,ТаблицаАналитики,ПараметрыПодключения=Неопределено)
	
	ИсходныеДанные=Новый Структура("ТаблицаАналитики,ПараметрыПодключения",ТаблицаАналитики,ПараметрыПодключения);
	
	Возврат ТекСоединениеВИБ.GetTableOfObjectsID(Новый ХранилищеЗначения(ИсходныеДанные, Новый СжатиеДанных(9))).Получить();	
	
КонецФункции // СтруктураОписанияПроизвольногоЗапросаWS() 

Функция ПолучитьТаблицуИдентификаторовОбъектовБД(ТекСоединениеВИБ,ТаблицаАналитики) Экспорт
	
	Если ТипЗнч(ТекСоединениеВИБ) = Тип("WSProxy") Тогда
		
		Возврат ПолучитьТаблицуИдентификаторовОбъектовWS(ТекСоединениеВИБ,ТаблицаАналитики);
		
	Иначе
		
		Возврат РаботаСОбъектамиМетаданныхВнешнийУХ.ПолучитьТаблицуИдентификаторовОбъектов8х(ТекСоединениеВИБ,ТаблицаАналитики);
		
	КонецЕсли;
	
КонецФункции // ПолучитьТаблицуИдентификаторовОбъектовБД() 

Функция ПолучитьРабочуюТаблицуДанныхWS(ТекСоединениеВИБ,ДанныеДляЗапроса) Экспорт
		
	Возврат ТекСоединениеВИБ.GetWorkingDataTable(Новый ХранилищеЗначения(ДанныеДляЗапроса, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // СтруктураОписанияПеречисленияWS()

Функция ПолучитьРабочуюТаблицуДанных(ТекСоединениеВИБ,ДанныеДляЗапроса) Экспорт
	
	Если ТипЗнч(ТекСоединениеВИБ) = Тип("WSProxy") Тогда
		
		Возврат ПолучитьРабочуюТаблицуДанныхWS(ТекСоединениеВИБ,ДанныеДляЗапроса);
		
	Иначе
		
		Возврат РаботаСОбъектамиМетаданныхВнешнийУХ.ПолучитьРабочуюТаблицуДанных8х(ТекСоединениеВИБ,ДанныеДляЗапроса);
		
	КонецЕсли;
		
КонецФункции // ПолучитьРабочуюТаблицуДанных()

Функция ЗаполнитьДеревоЗначенийДляСправочника77(ТекСоединениеВИБ,Параметры) Экспорт
	
	ДеревоЗначений=Новый ДеревоЗначений;
	ДеревоЗначений.Колонки.Добавить("Код");
	ДеревоЗначений.Колонки.Добавить("Наименование");
	
	ЗаполнитьВетвьДерева77(ТекСоединениеВИБ, ДеревоЗначений, Параметры.ТипМетаДанных+"." + Параметры.СправочникБД, Неопределено);	
		
	Если Параметры.ТипМетаДанных="Справочник" Тогда
		КодНеИспользуется = ТекСоединениеВИБ.Метаданные().Справочник(Параметры.СправочникБД).ДлинаКода = 0;
	КонецЕсли;
	
	ДанныеСправочника=Новый Структура;
	ДанныеСправочника.Вставить("ДеревоЗначений",ДеревоЗначений);
	ДанныеСправочника.Вставить("КодНеИспользуется",КодНеИспользуется);
		
	Возврат ДанныеСправочника;

КонецФункции // ЗаполнитьДеревоЗначенийДляСправочника77()

Процедура ЗаполнитьВетвьДерева77(База, СтрокаДерева, Справочник, Родитель)
	
	СправочникБД = База.CreateObject(Справочник);
	Если Родитель <> Неопределено Тогда
		СправочникБД.ИспользоватьРодителя(Родитель);
	Иначе
		СправочникБД.ИспользоватьРодителя();
	КонецЕсли;
	СправочникБД.ВключатьПодчиненные(0);
	
	СправочникБД.ВыбратьЭлементы();
	Пока СправочникБД.ПолучитьЭлемент() > 0 Цикл
		
		ТекСтрока = СтрокаДерева.Строки.Добавить();
		ТекСтрока.Код          = СправочникБД.Код;
		ТЕкСтрока.Наименование = СправочникБД.Наименование;
		
		Если СправочникБД.ЭтоГруппа() = 1 Тогда
			ЗаполнитьВетвьДерева77(База, ТекСтрока, Справочник, СправочникБД);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаполнитьДеревоЗначенийДляСправочникаWS(База,РабочиеПараметры,ПараметрыПодключения=Неопределено) Экспорт
	
	ИсходныеДанные=Новый Структура("РабочиеПараметры,ПараметрыПодключения",РабочиеПараметры,ПараметрыПодключения);
	
	Возврат База.FillValueTreeForCatalog(Новый ХранилищеЗначения(ИсходныеДанные, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // ЗаполнитьДеревоЗначенийДляСправочникаWS() 

Функция ЗаполнитьДеревоЗначенийДляПеречисленияWS(База,РабочиеПараметры,ПараметрыПодключения=Неопределено) Экспорт
	
	ИсходныеДанные=Новый Структура("РабочиеПараметры,ПараметрыПодключения",РабочиеПараметры,ПараметрыПодключения);
	
	Возврат База.FillValueTreeForEnum(Новый ХранилищеЗначения(ИсходныеДанные, Новый СжатиеДанных(9))).Получить();
	
КонецФункции // ЗаполнитьДеревоЗначенийДляПеречисленияWS() 

#Область КэшМетаданныхWS
Процедура ЗаполнитьКэшМетаданныхWS(Кэш, ТекСоединениеВИБ, ТипОбъектаМетаданных, ЕстьТабличныеЧасти = Ложь) Экспорт
	
	Параметры = НовыеПараметрыЗаполненияКэшаМетаданныхWS();
	ДобавитьПараметрЗаполненияКэшаМетаданныхWS(Параметры, ТипОбъектаМетаданных, ЕстьТабличныеЧасти);
	ЗаполнитьКэшМетаданныхWSПакетно(Кэш, ТекСоединениеВИБ, Параметры);
			
КонецПроцедуры

Процедура ЗаполнитьКэшМетаданныхWSПакетно(Кэш, ТекСоединениеВИБ, ПараметрыЗаполнения) Экспорт
	
	Если Кэш = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
			
	СоответствиеОписанияМетаданных = ТекСоединениеВИБ.GetObjectsMetadata(
		Новый ХранилищеЗначения(ПараметрыЗаполнения, Новый СжатиеДанных(9))).Получить();
		
	Для каждого ЭлементОписания Из СоответствиеОписанияМетаданных Цикл
		РаботаСОбъектамиМетаданныхУХ.СохранитьОписаниеМетаданных(Кэш, ЭлементОписания.Значение, ЭлементОписания.Ключ);	
	КонецЦикла;
		
КонецПроцедуры

Функция НовыеПараметрыЗаполненияКэшаМетаданныхWS() Экспорт
	Возврат Новый Массив;
КонецФункции

Функция ДобавитьПараметрЗаполненияКэшаМетаданныхWS(Параметры, ТипОбъектаМетаданных, ЕстьТабличныеЧасти = Ложь) Экспорт
	Параметры.Добавить(НовыйПараметрЗаполненияКэшаМетаданныхWS(ТипОбъектаМетаданных, ЕстьТабличныеЧасти));
КонецФункции

Функция НовыйПараметрЗаполненияКэшаМетаданныхWS(ТипОбъектаМетаданных = "", ЕстьТабличныеЧасти = Ложь) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ТипОбъектаМетаданных", ТипОбъектаМетаданных);
	Результат.Вставить("ЕстьТабличныеЧасти", ЕстьТабличныеЧасти);
	Результат.Вставить("ШаблонОписания", ОбщегоНазначенияУХ.ПолучитьШаблонСтруктурыОписанияОбъектаБД(ТипОбъектаМетаданных));
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеОбъектаИзКэша(Кэш, ШаблонОписания)
	
	ОписаниеМетаданных = РаботаСОбъектамиМетаданныхУХ.ОписаниеОбъектовМетаданных(Кэш, ШаблонОписания.ТипОбъектаМетаДанных);
	Если ОписаниеМетаданных <> Неопределено Тогда
		Возврат ОписаниеМетаданных.ОписанияОбъектов[ШаблонОписания.ИмяОбъектаМетаданных];	
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Функция ИменаОбъектовИзКэша(Кэш, ТипОбъектаМетаданных)
	
	ОписаниеМетаданных = РаботаСОбъектамиМетаданныхУХ.ОписаниеОбъектовМетаданных(Кэш, ТипОбъектаМетаданных);
	Если ОписаниеМетаданных <> Неопределено Тогда
		Возврат ОписаниеМетаданных.ИменаОбъектов;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции
#КонецОбласти