
// Функция - Получить настройку ТР
//
// Параметры:
//  ВидОтчета			 - <СправочникСсылка.ВидыОтчетов>	 - вид отчета для определения счета ТР
//  ДополнительныеВалюты - <Массив,СписокЗначений>	 - Если коллекция пустая то расчет ТР не требуется
// 
// Возвращаемое значение:
//  Ложь - трансляционный резерв не используется
//  Истина - трансляционный резерв используется, но расчет не выполнен, потому что нет изменений 
//  Структура("ПоказателиИтога,ПоказателиТР", Соответствие(ПоказательОтчетаСсылка,Коэффициент), Структура("СКД,СКК"))
Функция ПолучитьНастройкуТР(ВидОтчета, ДополнительныеВалюты, ЛогИзмененийПоказателей) Экспорт

	Если ДополнительныеВалюты.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Если ЛогИзмененийПоказателей = Неопределено Или (ЛогИзмененийПоказателей.Количество() = 0) Тогда
	//	Возврат Неопределено;// расчет ТР будет рассчитан позже при вычислении(после заполнения, после редактирования или при "вычислить сейчас")
	//КонецЕсли;
	
	ПоказателиТР = ПолучитьПоказателиТР(ВидОтчета);
	Если ПоказателиТР = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	т.Ссылка КАК ПоказательОтчета,
	|	т.КоэффициентТР КАК Коэффициент
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК т
	|ГДЕ
	|	т.Владелец = &ВидОтчета
	|	И НЕ т.ПометкаУдаления
	|	И т.КоэффициентТР <> 0");

	Запрос.УстановитьПараметр("ВидОтчета", ВидОтчета);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь; // не найдены счета расчета ТР
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	ПоказателиИтога = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		ПоказателиИтога.Вставить(Выборка.ПоказательОтчета, Выборка.Коэффициент);
	КонецЦикла;
	
	Возврат Новый Структура("ПоказателиИтога,ПоказателиТР", ПоказателиИтога, ПоказателиТР);
	
КонецФункции

Функция ПолучитьПоказателиТР(ВидОтчета) Экспорт

	СчетТР = КэшируемыеПроцедурыУХ.ПолучитьСчетТР(ВидОтчета);
	
	Если СчетТР = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат КэшируемыеПроцедурыУХ.ПолучитьПоказателиТР(ВидОтчета, СчетТР);
	
КонецФункции

Функция ПолучитьКурсовыеРазницыТР(ЭтотОбъект, СоответствиеВерсийИВалют, КурсовыеРазницы, АктивностьДвижений) Экспорт

	Результат = Новый Массив;
	
	МаксАналитикОтчета = ЭтотОбъект.МаксАналитикОтчета;	
	НастройкаПересчетаВалют = ЭтотОбъект.НастройкаПересчетаВалют;

	Для Каждого СтрРазница ИЗ КурсовыеРазницы Цикл
		
		ВерсияВалюта = СоответствиеВерсийИВалют[СтрРазница.Ключ];
		
		ПоказателиТР = ПолучитьПоказателиНастройкиТР(СтрРазница.Значение, НастройкаПересчетаВалют);
		Если НЕ ЗначениеЗаполнено(ПоказателиТР.СКД) Или НЕ ЗначениеЗаполнено(ПоказателиТР.СКК) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаЗаписиСКД = Новый Структура("Показатель, Версия, Активность, Регистратор, ИтоговоеЗначение"
			, ПоказателиТР.СКД
			, ВерсияВалюта
			, АктивностьДвижений
			, ВерсияВалюта
			, Истина);
		
		Для Индекс=1 По МаксАналитикОтчета Цикл
			СтрокаЗаписиСКД.Вставить("Аналитика"+Индекс, ЭтотОбъект["Аналитика"+Индекс]);
		КонецЦикла;
		
		СтрокаЗаписиСКД.Вставить("Значение", ?(СтрРазница.Значение < 0, -СтрРазница.Значение, 0));
		Результат.Добавить(СтрокаЗаписиСКД);
		
		СтрокаЗаписиСКК = ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(СтрокаЗаписиСКД);
		СтрокаЗаписиСКК.Вставить("Показатель", ПоказателиТР.СКК);
		СтрокаЗаписиСКК.Вставить("Значение", ?(СтрРазница.Значение > 0, СтрРазница.Значение, 0));
		
		Результат.Добавить(СтрокаЗаписиСКК);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура РассчитатьКурсовуюРазницуТР(ДокументОбъект, ТаблицаПоказателейВалюты, МассивКодовПоказателей = Неопределено, ЕстьИзмененияПоказателей = Ложь) Экспорт
	
	Если ДокументОбъект.мТекущаяВалюта = ДокументОбъект.ОсновнаяВалюта Тогда
		Возврат;// курсовые разницы вычисляются только для доп.валют
	КонецЕсли;
	
	ТребуетсяРасчет = ТребуетсяРасчетКурсовыхРазницТР(ДокументОбъект.НастройкаПересчетаВалют, ДокументОбъект.ВидОтчета, ДокументОбъект.ДополнительныеВалюты, ДокументОбъект.ЛогИзмененийПоказателей);
	Если НЕ ТребуетсяРасчет Тогда
		Возврат;// нет показателей 
	ИначеЕсли ДокументОбъект.НастройкаПересчетаВалют = Истина Тогда
		ДокументОбъект.НастройкаПересчетаВалют = Неопределено;
		Возврат;
	КонецЕсли;
	
	ИтогТР = 0;
	
	ИндексПоСсылке = ТаблицаПоказателейВалюты.Индексы.Добавить("Ссылка");
	
	Для каждого СтрокаИтог Из ДокументОбъект.НастройкаПересчетаВалют.ПоказателиИтога Цикл
	
		Если СтрокаИтог.Значение = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		Для каждого СтрокаПок Из ТаблицаПоказателейВалюты.НайтиСтроки(Новый Структура("Ссылка", СтрокаИтог.Ключ)) Цикл		
			Если СтрокаПок.Значение <> 0 Тогда
				ИтогТР = ИтогТР + СтрокаПок.Значение * СтрокаИтог.Значение;
			КонецЕсли;
		КонецЦикла; 
	
	КонецЦикла;
	
	ПоказателиТР = ПолучитьПоказателиНастройкиТР(ИтогТР, ДокументОбъект.НастройкаПересчетаВалют);
	Если НЕ ЗначениеЗаполнено(ПоказателиТР.СКД) Или НЕ ЗначениеЗаполнено(ПоказателиТР.СКК) Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивКодовПоказателей = Неопределено Тогда
		МассивКодовПоказателей = Новый Массив;
	КонецЕсли;
	
	НомерАналитикиОрганизации = 0;
	
	Для Каждого СтрПоказатель ИЗ ТаблицаПоказателейВалюты.НайтиСтроки(Новый Структура("Ссылка", ПоказателиТР.СКД)) Цикл
		
		НомерАналитикиОрганизации = ПолучитьНомерАналитикиОрганизация(ДокументОбъект, СтрПоказатель);
		
		НовоеЗначение = ?(ИтогТР < 0, -ИтогТР, 0);
		Если СтрПоказатель.Значение <> НовоеЗначение Тогда
			
			УстановитьЗначениеПоказателя(СтрПоказатель, НовоеЗначение, ДокументОбъект);
			ЕстьИзмененияПоказателей = Истина;
			
		КонецЕсли; 
		
		ДобавитьПоказателиДляПересчетаТР(ДокументОбъект, МассивКодовПоказателей, СтрПоказатель.Код);
		
	КонецЦикла;

	Для Каждого СтрПоказатель ИЗ ТаблицаПоказателейВалюты.НайтиСтроки(Новый Структура("Ссылка", ПоказателиТР.СКК)) Цикл		
		
		НовоеЗначение = ?(ИтогТР > 0, ИтогТР, 0);
		Если СтрПоказатель.Значение <> НовоеЗначение Тогда
						
			УстановитьЗначениеПоказателя(СтрПоказатель, НовоеЗначение, ДокументОбъект);
			ЕстьИзмененияПоказателей = Истина;
			
		КонецЕсли; 
		
		ДобавитьПоказателиДляПересчетаТР(ДокументОбъект, МассивКодовПоказателей, СтрПоказатель.Код);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура УстановитьЗначениеПоказателя(СтрПоказатель, НовоеЗначение, ДокументОбъект)

	Если СтрПоказатель.ГруппаРаскрытия.Пустая() Тогда
	    УправлениеОтчетамиУХ.ЗаписатьЗначениеВмПоказатели(ДокументОбъект, СтрПоказатель, НовоеЗначение, , Ложь);
	Иначе	
		СтрПоказатель.Значение = НовоеЗначение;
		ДокументОбъект.УстановитьЗначениеПоказателя(СокрЛП(СтрПоказатель.Код), НовоеЗначение, ДокументОбъект.Организация,,,,,, Ложь);
	КонецЕсли;	

КонецПроцедуры


Функция ПолучитьНомерАналитикиОрганизация(ДокументОбъект, СтрокаПоказателя)
	
	Если СтрокаПоказателя.ГруппаРаскрытия.Пустая() Тогда
	    Возврат 0;
	Иначе
		
		НомерАналитики = 0;
		ТипОрганизации = Тип("СправочникСсылка.Организации");
		Для ТекущийНомер = 1 По (ДокументОбъект.МаксАналитикОтчета + ДокументОбъект.МаксАналитикПоказателя) Цикл
			ТекущийВидАналитики = СтрокаПоказателя["ВидАналитики"+ТекущийНомер];
			Если НЕ ТекущийВидАналитики.Пустая() И ТекущийВидАналитики.ТипЗначения.СодержитТип(ТипОрганизации) Тогда
				НомерАналитики = ТекущийНомер;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Возврат НомерАналитики;
		
	КонецЕсли;

КонецФункции

Процедура ДобавитьПоказателиДляПересчетаТР(ДокументОбъект, МассивКодовПоказателей, КодПоказателяИсточника)

	КодыПоказателейПересчета = ДокументОбъект.ПолучитьПутьВычисления(КодПоказателяИсточника);
	
	Если КодыПоказателейПересчета <> Неопределено Тогда	
		ОбщегоНазначенияУХ.ДобавитьМассивВСписокЗначений(МассивКодовПоказателей, КодыПоказателейПересчета);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьПоказателиНастройкиТР(КурсоваяРазница, НастройкаПересчетаВалют)
	Возврат Новый Структура("СКД,СКК", НастройкаПересчетаВалют.ПоказателиТР.СКД, НастройкаПересчетаВалют.ПоказателиТР.СКК);	
КонецФункции

Функция ТребуетсяРасчетКурсовыхРазницТР(НастройкаПересчетаВалют = Неопределено, ВидОтчета, ДополнительныеВалюты, ЛогИзмененийПоказателей) Экспорт

	Если НастройкаПересчетаВалют = Неопределено Тогда
		НастройкаПересчетаВалют = ПолучитьНастройкуТР(ВидОтчета, ДополнительныеВалюты, ЛогИзмененийПоказателей);
	КонецЕсли;
	
	Возврат (НастройкаПересчетаВалют <> Неопределено) И (НастройкаПересчетаВалют <> Ложь);
	
КонецФункции

Процедура ОбновитьКурсовыеРазницыТР(КурсовыеРазницыТР, КоэффициентТР, ТекущееЗначение, Валюта) Экспорт

	Если КоэффициентТР = Неопределено Тогда 
		Возврат;
	ИначеЕсли КоэффициентТР = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийИтог = КурсовыеРазницыТР.Получить(Валюта);
	Если ТекущийИтог=Неопределено Тогда
		КурсовыеРазницыТР.Вставить(Валюта, ТекущееЗначение * КоэффициентТР);
	Иначе	
		КурсовыеРазницыТР.Вставить(Валюта, ТекущийИтог + ТекущееЗначение * КоэффициентТР);
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбновитьКоэффициентТР(ПланСчетов, Отказ = Ложь) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	т.СчетИтога
	|ПОМЕСТИТЬ втСчетаИтога
	|ИЗ
	|	Справочник.ПланыСчетовБД.СчетаИтогов КАК т
	|ГДЕ
	|	т.Ссылка = &ПланСчетовБД
	|	И т.Ссылка.СчетТР <> ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.СчетИтога
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Ссылка КАК СчетБД,
	|	ВЫБОР
	|		КОГДА т.Ссылка В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						т.СчетИтога
	|					ИЗ
	|						втСчетаИтога КАК т)
	|				И НЕ т.ГруппирующийСчет
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетРасчетаТР
	|ПОМЕСТИТЬ втСчетаРасчетаТР
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|ГДЕ
	|	т.Владелец = &ПланСчетовБД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетБД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Ссылка КАК ВидОтчета
	|ПОМЕСТИТЬ втВидыОтчетовОСВ
	|ИЗ
	|	Справочник.ВидыОтчетов КАК т
	|ГДЕ
	|	т.ПланСчетов = &ПланСчетовБД
	|	И т.ПланСчетов.СчетТР <> ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиОтчетов.Ссылка КАК Показатель,
	|	ВЫБОР
	|		КОГДА ПоказателиОтчетов.КоэффициентТР <> 0
	|			ТОГДА 0
	|		КОГДА ПоказателиОтчетов.ВидИтогаПоСчету = ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СКД)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК КоэффициентТР
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаРасчетаТР КАК втСчетаРасчетаТР
	|		ПО ПоказателиОтчетов.СчетБД = втСчетаРасчетаТР.СчетБД
	|			И ((ПоказателиОтчетов.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СКД), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СКК))
	|				И втСчетаРасчетаТР.СчетРасчетаТР) = (ПоказателиОтчетов.КоэффициентТР = 0))
	|			И (ПоказателиОтчетов.Владелец В
	|				(ВЫБРАТЬ
	|					т.ВидОтчета
	|				ИЗ
	|					втВидыОтчетовОСВ КАК т))");
	
	Запрос.УстановитьПараметр("ПланСчетовБД", ПланСчетов);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Попытка
		
		НачатьТранзакцию();
		
		Пока Выборка.Следующий() Цикл
			
			Объект = Выборка.Показатель.ПолучитьОбъект();
			Объект.КоэффициентТР = Выборка.КоэффициентТР;
			Объект.ОбменДанными.Загрузка = Истина;
			Объект.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОтменитьТранзакцию();
		Отказ = Истина;
		
	КонецПопытки;
	
КонецПроцедуры

#Область КурсовыеРазницыБезПланаСчетов

Процедура ОбновитьДанныеКурсовыхРазниц(Показатель, ЗначениеВВалюте, Валюта, КурсовыеРазницы) Экспорт

	Если Показатель.ВидИтогаПоСчету = Перечисления.ВидыБухгалтерскихИтогов.СКД Тогда
		
		ДанныеДляРасчета = ЗначениеВВалюте;
		
	ИначеЕсли Показатель.ВидИтогаПоСчету = Перечисления.ВидыБухгалтерскихИтогов.СКК Тогда
		
		ДанныеДляРасчета = -ЗначениеВВалюте;
		
	Иначе
		
		ДанныеДляРасчета = 0;
		
	КонецЕсли;
	
	Если КурсовыеРазницы[Валюта] = Неопределено Тогда
		КурсовыеРазницы.Вставить(Валюта, ДанныеДляРасчета);
	Иначе
		КурсовыеРазницы.Вставить(Валюта, КурсовыеРазницы[Валюта] + ДанныеДляРасчета);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
