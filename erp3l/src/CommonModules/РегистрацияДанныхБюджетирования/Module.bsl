
#Область ПрограммныйИнтерфейс

// Добавляет регистры для вывода в отчет о движениях по полю, отличному от Регистратор.
// 
// Параметры:
//    Документ - ДокументСсылка - документ коллекцию движений которого необходимо дополнить.
//    СоответствиеРегистров - Соответствие - соответствие с данными:
//        * Ключ     - ОбъектМетаданных - регистр как объект метаданных.
//        * Значение - Строка           - имя поля регистратора.
//
Процедура ДополнитьСоответствияРегистраторовОтчетаОДвижениях(Документ, СоответствиеРегистров) Экспорт
	
	Если Метаданные.ОпределяемыеТипы.РегистрацияДанныхБюджетированияСсылки.Тип.СодержитТип(ТипЗнч(Документ)) Тогда
		СоответствиеРегистров.Вставить(Метаданные.РегистрыНакопления.ОперативныйПланПоБюджетам,		"ДокументРегистратор");
		СоответствиеРегистров.Вставить(Метаданные.РегистрыНакопления.ЛимитыПоБюджетам,				"ДокументРегистратор");
		СоответствиеРегистров.Вставить(Метаданные.РегистрыСведений.ВерсииРасчетов, 					"ВерсияГрафика");
		СоответствиеРегистров.Вставить(Метаданные.РегистрыНакопления.РасчетыСКонтрагентамиГрафики,	"ДокументРегистратор");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура РегистрацияДанныхБюджетированияОбработкаПроведения(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДокументов = ПолучитьДокументыОтраженияИсточника(Источник.Ссылка);
	
	// ТекущаяОрганизация
	СтруктураПоиска = Новый Структура("Организация", Источник.Организация);
	Строки = ТаблицаДокументов.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() = 0 Тогда
		// Создать новый документ отражения
		Строка = СоздатьНовыйДокументОтражения(ТаблицаДокументов, Источник.Ссылка, Источник.Организация);
		ОтразитьИсточник(Источник, Строка);
	Иначе
		ОтразитьИсточник(Источник, Строки[0]);
	КонецЕсли;
	
	// Очистить 
	ОчиститьОтражениеДокументов(ТаблицаДокументов);
	
КонецПроцедуры

Процедура РегистрацияДанныхБюджетированияОбработкаУдаленияПроведенияОбработчик(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДокументов = ПолучитьДокументыОтраженияИсточника(Источник.Ссылка);
	ОчиститьОтражениеДокументов(ТаблицаДокументов);
	
КонецПроцедуры

Процедура РегистрацияДанныхБюджетированияПередЗаписьюОбработчик(Источник) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ДополнительныеСвойства.Свойство("ИзмениласьПометкаУдаления") Тогда
		ПометкаСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ПометкаУдаления");
		Источник.ДополнительныеСвойства.Вставить("ИзмениласьПометкаУдаления", 
			Источник.ПометкаУдаления <> ПометкаСсылки);
	КонецЕсли;
	
	ПодготовитьРеквизитыПлатежнойПозицииПередЗаписью(Источник);
КонецПроцедуры

Процедура РегистрацияДанныхБюджетированияПриЗаписи(Источник) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ДополнительныеСвойства.Свойство("ИзмениласьПометкаУдаления") 
			ИЛИ НЕ Источник.ДополнительныеСвойства.ИзмениласьПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ПометкаУдаления = Истина Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		ТаблицаДокументов = ПолучитьДокументыОтраженияИсточника(Источник.Ссылка);
		
		СтруктураПоиска = Новый Структура("ПометкаУдаления", Ложь);
		Строки = ТаблицаДокументов.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из Строки Цикл
			Строка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			Строка.Ссылка = неопределено;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрацияДанныхБюджетированияОбработкаПроверкиЗаполненияОбработчик(Источник, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Если НЕ АналитикиПланированияДокументовКлиентСервер.ДолжныФормироватьсяПозиции(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнен банковский счет
	ИмяРеквизитаСчетКонтрагента = "БанковскийСчетКонтрагента";
	Если Источник.ФормаОплаты <> Перечисления.ФормыОплаты.Наличная 
		И НЕ ЗначениеЗаполнено(Источник[ИмяРеквизитаСчетКонтрагента]) Тогда
		ТекстСообщения = НСтр("ru = 'В документе не указан банковский счет контрагента'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Источник, ИмяРеквизитаСчетКонтрагента,, Отказ);
	КонецЕсли;
	
	// Удаленные этапы, оплата которых уже произведена или производится.
	Если ПлатежныеПозицииКоторыеНельзяУдалить(Источник).Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'В документе есть этапы, по которым уже проведена проводится оплата'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Источник, ИмяРеквизитаСчетКонтрагента,, Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрацияДанныхБюджетированияОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("Массив")
			И ДанныеЗаполнения.ДокументОснование.Количество() > 0 Тогда
			Основание = ДанныеЗаполнения.ДокументОснование[0];
		Иначе
			Основание = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ТипОснования = ТипЗнч(Основание);
	Если НЕ Метаданные.ОпределяемыеТипы.РегистрацияДанныхБюджетированияСсылки.Тип.СодержитТип(ТипОснования) Тогда
		Возврат;
	КонецЕсли;
	
	АналитикиПланирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "АналитикиПланирования");
	Источник.АналитикиПланирования.Загрузить(АналитикиПланирования.Выгрузить());	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДокументыОтраженияИсточника(ДокументИсточник)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументИсточник", ДокументИсточник);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистраторОтраженияВБюджетировании.Ссылка КАК Ссылка,
	|	РегистраторОтраженияВБюджетировании.Организация КАК Организация,
	|	РегистраторОтраженияВБюджетировании.Документ КАК Документ,
	|	РегистраторОтраженияВБюджетировании.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК Использован
	|ИЗ
	|	Документ.РегистраторОтраженияВБюджетировании КАК РегистраторОтраженияВБюджетировании
	|ГДЕ
	|	РегистраторОтраженияВБюджетировании.Документ = &ДокументИсточник
	|	И РегистраторОтраженияВБюджетировании.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистраторОтраженияВБюджетировании.Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СоздатьНовыйДокументОтражения(ТаблицаДокументов, Документ, Организация)
	
	ДокументОбъект = Документы.РегистраторОтраженияВБюджетировании.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.Документ = Документ;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Строка = ТаблицаДокументов.Добавить();
	Строка.Ссылка = ДокументОбъект.Ссылка;
	Строка.Использован = Ложь;
	Строка.Организация = Организация;
	Строка.Документ = Документ;
	
	Возврат Строка;
	
КонецФункции

Процедура ОтразитьИсточник(Источник, Строка)
	
	Если АналитикиПланированияДокументовКлиентСервер.ТребуетсяОтражениеВБюджетировании(Источник) Тогда
		ТребуютсяПлатежныеПозиции = АналитикиПланированияДокументовКлиентСервер.ДолжныФормироватьсяПозиции(Источник);
		ВыполнитьОтражение(Строка.Ссылка, Строка.Документ, ТребуютсяПлатежныеПозиции);
		Строка.Использован = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура ОчиститьОтражениеДокументов(ТаблицаДокументов)
	
	СтруктураПоиска = Новый Структура("Использован", Ложь);
	НеиспользованныеДокументы = ТаблицаДокументов.Скопировать(СтруктураПоиска);
	Если НеиспользованныеДокументы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыРегистраторы = НеиспользованныеДокументы.ВыгрузитьКолонку("Ссылка");
	ДокументыИсточники = НеиспользованныеДокументы.ВыгрузитьКолонку("Документ");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистр.Регистратор КАК Регистратор
	|ИЗ
	|	%1.%2 КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор В(&МассивДокументов)";			
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", ДокументыРегистраторы);
	
	Для Каждого МетаданныеРегистра Из Метаданные.Документы.РегистраторОтраженияВБюджетировании.Движения Цикл
		
		Если Метаданные.РегистрыНакопления.Содержит(МетаданныеРегистра) Тогда
			// Регистр накопления
			ТипРегистра = "РегистрНакопления";
			НаборЗаписей = РегистрыНакопления[МетаданныеРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(МетаданныеРегистра) Тогда
		    // Регистр сведений
			ТипРегистра = "РегистрСведений";
			НаборЗаписей = РегистрыСведений[МетаданныеРегистра.Имя].СоздатьНаборЗаписей();
		КонецЕсли;
		
		Запрос.Текст = СтрШаблон(ШаблонЗапроса, ТипРегистра, МетаданныеРегистра.Имя);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
		
	КонецЦикла;
	
	// рс.ПлатежныеПозиции
	НаборЗаписей = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
	
	Запрос.УстановитьПараметр("МассивДокументов", ДокументыИсточники);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|ГДЕ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию В (&МассивДокументов)
	|	И РазмещениеЗаявок.Проведен = ИСТИНА";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей.Отбор.ЗаявкаНаОперацию.Установить(Выборка.ЗаявкаНаОперацию);
		НаборЗаписей.Прочитать();
		
		Для Каждого Движение Из НаборЗаписей Цикл
			Движение.Проведен = Ложь;
		КонецЦикла;
		
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьОтражение(Регистратор, ИсходныйДокумент, ТребуютсяПлатежныеПозиции)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Сформировать планы документа
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Регистратор, "Ссылка, Дата, Организация, Документ, Документ.Дата");
	Для Каждого КлючЗначение из Реквизиты Цикл
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ОсновнойДокумент", ИсходныйДокумент);
	Запрос.УстановитьПараметр("Рубль", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПустоеЗначениеБанковскогоСчета", КэшируемыеПроцедурыОПК.ПустойБанковскийСчетОрганизации());
	Запрос.УстановитьПараметр("ПустоеЗначениеКасса", КэшируемыеПроцедурыОПК.ПустаяКассаОрганизации());
	Запрос.УстановитьПараметр("ПустойУИД", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ТребуютсяПлатежныеПозиции", ТребуютсяПлатежныеПозиции);
	
	ТипОсновногоДокумента = ТипЗнч(Запрос.Параметры.ОсновнойДокумент);
	Если ТипОсновногоДокумента = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.Текст = СборДанныхПоЗаказуПоставщику();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Запрос.Текст = СборДанныхПоПриобретениеТоваровУслуг();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов") Тогда
		Запрос.Текст = СборДанныхПоПриобретениеУслугПрочихАктивов();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Запрос.Текст = СборДанныхПоЗаказуКлиента();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Запрос.Текст = СборДанныхПоРеализацияТоваровУслуг();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		Запрос.Текст = СборДанныхПоАктВыполненныхРабот();
	ИначеЕсли ТипОсновногоДокумента = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		Запрос.Текст = СборДанныхПоЗаявкаНаВозвратТоваровОтКлиента();
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	//
	ТаблицыДвижений = Новый Структура;
	
	//
	Запрос.Текст = ТекстЗапросаПлатежныеПозицииДокумента();
	ТаблицаПлатежныеПозиции = Запрос.Выполнить().Выгрузить();
	Если ТаблицаПлатежныеПозиции.Количество() > 0 Тогда
		ПараметрыКурса = ПлатежныеПозицииКлиентСервер.СтруктураПараметровРасчетаКурса();
		ЗаполнитьЗначенияСвойств(ПараметрыКурса, ТаблицаПлатежныеПозиции[0]);
		ПлатежныеПозиции.ПереоценитьПлатежнуюПозицию(ТаблицаПлатежныеПозиции, ПараметрыКурса);
	КонецЕсли;
	ОбщегоНазначенияОПК.ЗагрузитьТаблицуВоВременнуюТаблицуЗапроса(Запрос, "ВТ_ПлатежныеПозиции", ТаблицаПлатежныеПозиции);
	
	// Подготовка данных
	Запрос.Текст = ТекстЗапросаПодготовкаДанныхДокумента();
	Запрос.Выполнить();
	
	// Таблицы движений документа
	Запрос.Текст = ТекстЗапросаТаблицыДвижений();
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДвижений.Вставить("ТаблицаПлатежныеПозиции", 				ТаблицаПлатежныеПозиции);
	ТаблицыДвижений.Вставить("ТаблицаОперативныйПлан", 					Результат[0].Выгрузить());
	ТаблицыДвижений.Вставить("ТаблицаРасчетыСКонтрагентамиГрафики", 	Результат[2].Выгрузить());
	ТаблицыДвижений.Вставить("ТаблицаДвиженияБюджетированияПоПозициям", Результат[3].Выгрузить());
	ТаблицыДвижений.Вставить("ТаблицаВерсииРасчетов",					Результат[4].Выгрузить());
	
	ТаблицаЛимитов = КонтрольЛимитовУХ.ПолучитьТаблицуЛимитов(Запрос, Реквизиты.ДокументДата);
	// Добавить колонку ДокументРегистратор для связи с основным документом
	ТаблицаЛимитов.Колонки.Добавить("ДокументРегистратор");
	ТаблицаЛимитов.ЗаполнитьЗначения(ИсходныйДокумент, "ДокументРегистратор");
	//
	ТаблицыДвижений.Вставить("ТаблицаЛимитов", ТаблицаЛимитов);
	
	НачатьТранзакцию();
	Попытка
		// Логика блокировки и обработки данных
		ОтразитьВРегистрах(Регистратор, ИсходныйДокумент, ТаблицыДвижений);
		
	 	ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Отражение документа в регистрах УХ'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки; 
	
КонецПроцедуры

Процедура ОтразитьВРегистрах(Регистратор, ОсновнойДокумент, СтруктураТаблиц)
	
	// движения бюджетирования по позициям
	НаборЗаписей = РегистрыСведений.ДвиженияБюджетированияПоПозициям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаявкаНаОперацию.Установить(ОсновнойДокумент);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаДвиженияБюджетированияПоПозициям);
	НаборЗаписей.Записать(Истина);
	
	// Отразить планы в опер-планах
	НаборЗаписей = РегистрыНакопления.ОперативныйПланПоБюджетам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаОперативныйПлан);
	НаборЗаписей.Записать(Истина);
	
	// Отразить лимиты
	НаборЗаписей = РегистрыНакопления.ЛимитыПоБюджетам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаЛимитов);
	НаборЗаписей.Записать(Истина);
	
	// Отразить рн.РасчетыСКонтрагентамиГрафики
	НаборЗаписей = РегистрыНакопления.РасчетыСКонтрагентамиГрафики.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаРасчетыСКонтрагентамиГрафики);
	НаборЗаписей.Записать(Истина);
	
	// Отразить рс.ВерсииРасчетов
	НаборЗаписей = РегистрыСведений.ВерсииРасчетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаВерсииРасчетов);
	НаборЗаписей.Записать(Истина);
	
	// Сформировать позиции
	НаборЗаписей = РегистрыСведений.РазмещениеЗаявок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаявкаНаОперацию.Установить(ОсновнойДокумент);
	НаборЗаписей.Загрузить(СтруктураТаблиц.ТаблицаПлатежныеПозиции);
	НаборЗаписей.Записать(Истина);
	
	// Установить состояние платежной позиции
	Для Каждого ПлатежнаяПозиция Из СтруктураТаблиц.ТаблицаПлатежныеПозиции Цикл
		
		Если НЕ ЗначениеЗаполнено(ПлатежнаяПозиция.СостояниеИсполнения) Тогда
			ПлатежныеПозиции.УстановитьСостояниеИсполненияДокумента(
				ПлатежнаяПозиция.ЗаявкаНаОперацию, ПлатежнаяПозиция.ИдентификаторПозиции, 
				Перечисления.СостоянияИсполненияЗаявки.НеОбработана,,,ОсновнойДокумент);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет массив непроверяемых реквизитов распоряжения на доставку в зависимости от способа доставки.
//
// Параметры:
//  ДокументОбъект					 - ДокументОбъект	- распоряжение, в котором проверяется заполнение реквизитов;
//  МассивНепроверяемыхРеквизитов	 - Массив			- массив реквизитов, заполнение которых не обязательно;
//  Отказ							 - Булево			- Истина - признак отказа выполнения заполнения реквизитов;
//  НакладнаяПоЗаказам				 - Булево			- Истина - ДокументОбъект является накладной по заказу.
//
Процедура ПроверитьЗаполнениеРеквизитовПлатежнойПозции(Источник, МассивНепроверяемыхРеквизитов, Отказ, НакладнаяПоЗаказам = Ложь) Экспорт
	
	Если НЕ АналитикиПланированияДокументовКлиентСервер.ДолжныФормироватьсяПозиции(Источник) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("БанковскийСчетКонтрагента");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьРеквизитыПлатежнойПозицииПередЗаписью(Источник)
	
	Если НЕ АналитикиПланированияДокументовКлиентСервер.ДолжныФормироватьсяПозиции(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ЭтапыГрафикаОплаты") Тогда
		// Идентификатор платежной позиции в тч.ЭтапыГрафикаОплаты
		Для Каждого СтрокаЭтап Из Источник.ЭтапыГрафикаОплаты Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаЭтап.ИдентификаторПозиции) Тогда
				СтрокаЭтап.ИдентификаторПозиции = Новый УникальныйИдентификатор;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ИдентификаторПозиции") Тогда
		// Идентификатор платежной позиции в шапке
		Если НЕ ЗначениеЗаполнено(Источник.ИдентификаторПозиции) Тогда
			Источник.ИдентификаторПозиции = Новый УникальныйИдентификатор;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПлатежныеПозицииКоторыеНельзяУдалить(Документ) 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", Документ.Ссылка);
	
	СписокСостояний = Новый Массив;
	СписокСостояний.Добавить(Перечисления.СостоянияИсполненияЗаявки.НеОбработана);
	СписокСостояний.Добавить(Перечисления.СостоянияИсполненияЗаявки.Отменена);
	Запрос.УстановитьПараметр("СписокСостоянийПозицийПриКоторыхУдалениеВозможно", СписокСостояний);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ЗаказПоставщику.ЭтапыГрафикаОплаты КАК ЗаказПоставщикуЭтапыГрафикаОплаты
	|ГДЕ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РазмещениеЗаявок.ЗаявкаНаОперацию, ВТ_ПланОплат.ДокументПланирования) КАК ЗаявкаНаОперацию,
	|	ЕСТЬNULL(РазмещениеЗаявок.ИдентификаторПозиции, ВТ_ПланОплат.ИдентификаторПозиции) КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА РазмещениеЗаявок.ИдентификаторПозиции ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоВРегистре,
	|	ВЫБОР
	|		КОГДА ВТ_ПланОплат.ИдентификаторПозиции ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоВДокументе
	|ПОМЕСТИТЬ ВТ_ВсеПлатежныеПозиции
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПланОплат КАК ВТ_ПланОплат
	|		ПО РазмещениеЗаявок.ЗаявкаНаОперацию = ВТ_ПланОплат.ДокументПланирования
	|			И РазмещениеЗаявок.ИдентификаторПозиции = ВТ_ПланОплат.ИдентификаторПозиции
	|ГДЕ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеПлатежныеПозиции.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	ВТ_ВсеПлатежныеПозиции.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВТ_ВсеПлатежныеПозиции.ТолькоВРегистре КАК ТолькоВРегистре,
	|	ВТ_ВсеПлатежныеПозиции.ТолькоВДокументе КАК ТолькоВДокументе,
	|	СостоянияИсполненияДокументовПланированияСрезПоследних.СостояниеИсполнения КАК СостояниеИсполнения
	|ПОМЕСТИТЬ ВТ_ПлатежныеПозицииСостояние
	|ИЗ
	|	ВТ_ВсеПлатежныеПозиции КАК ВТ_ВсеПлатежныеПозиции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних(, ДокументПланирования = &Документ) КАК СостоянияИсполненияДокументовПланированияСрезПоследних
	|		ПО ВТ_ВсеПлатежныеПозиции.ЗаявкаНаОперацию = СостоянияИсполненияДокументовПланированияСрезПоследних.ДокументПланирования
	|			И ВТ_ВсеПлатежныеПозиции.ИдентификаторПозиции = СостоянияИсполненияДокументовПланированияСрезПоследних.ИдентификаторПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлатежныеПозицииСостояние.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	ВТ_ПлатежныеПозицииСостояние.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВТ_ПлатежныеПозицииСостояние.ТолькоВРегистре КАК ТолькоВРегистре,
	|	ВТ_ПлатежныеПозицииСостояние.ТолькоВДокументе КАК ТолькоВДокументе,
	|	ВТ_ПлатежныеПозицииСостояние.СостояниеИсполнения КАК СостояниеИсполнения
	|ИЗ
	|	ВТ_ПлатежныеПозицииСостояние КАК ВТ_ПлатежныеПозицииСостояние
	|ГДЕ
	|	ВТ_ПлатежныеПозицииСостояние.ТолькоВРегистре = ИСТИНА
	|	И НЕ ВТ_ПлатежныеПозицииСостояние.СостояниеИсполнения ЕСТЬ NULL
	|	И НЕ ВТ_ПлатежныеПозицииСостояние.СостояниеИсполнения В (&СписокСостоянийПозицийПриКоторыхУдалениеВозможно)";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

#Область ТекстыЗапросов
	
Функция ТекстЗапросаПлатежныеПозицииДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ПланОплат.ДокументПланирования КАК ЗаявкаНаОперацию,
	|	ВТ_ПланОплат.ПриходРасход КАК ПриходРасход,
	|	ВТ_ПланОплат.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	&ПустойУИД КАК ИдентификаторВстречнойПозиции,
	|	ВТ_ПланОплат.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ВТ_ПланОплат.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПланОплат.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов = &Рубль
	|				ИЛИ ВТ_ПланОплат.ОплатаВВалюте = ИСТИНА
	|			ТОГДА ВТ_ПланОплат.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВТ_ПланОплат.ФормаОплаты КАК ФормаОплаты,
	|	ВТ_ПланОплат.Проведен КАК Проведен,
	|	ВЫБОР
	|		КОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов = &Рубль
	|			ТОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов
	|		КОГДА ВТ_ПланОплат.ОплатаВВалюте = ИСТИНА
	|			ТОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов
	|		ИНАЧЕ &Рубль
	|	КОНЕЦ КАК ВалютаОплаты,
	|	ВЫБОР
	|		КОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов = &Рубль
	|				ИЛИ ВТ_ПланОплат.ОплатаВВалюте = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КурсПлатежа,
	|	ВЫБОР
	|		КОГДА ВТ_ПланОплат.ВалютаВзаиморасчетов = &Рубль
	|				ИЛИ ВТ_ПланОплат.ОплатаВВалюте = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КратностьПлатежа,
	|	ВТ_ПланОплат.ВидОперацииУХ КАК ВидОперацииУХ,
	|	ВТ_ПланОплат.ДатаИсполнения КАК ДатаИсполнения,
	|	ВТ_ПланОплат.ДатаИсполнения КАК КрайняяДата,
	|	ИСТИНА КАК ЗапретИзмененияДаты,
	|	ЛОЖЬ КАК ЗапретИзмененияБанковскогоСчетаКассы,
	|	ИСТИНА КАК ЗапретРазбиенияСлияния,
	|	ЕСТЬNULL(ВТ_ПланОплат.ДоговорКонтрагента.ВерсияСоглашения.БезакцептноеСписание, ЛОЖЬ) КАК БезакцептноеСписание,
	|	ВТ_ПланОплат.Организация КАК Организация,
	|	ВТ_ПланОплат.Контрагент КАК Контрагент,
	|	ВТ_ПланОплат.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ПланОплат.СчетКонтрагента КАК СчетКонтрагента,
	|	ВТ_ПланОплат.ДокументПланирования.ПриоритетПлатежа КАК Приоритет,
	|	ВТ_ПланОплат.ДокументПланирования.СпособОпределенияКурсаПлатежа КАК СпособОпределенияКурсаПлатежа,
	|	ВТ_ПланОплат.ДокументПланирования.ДатаФиксацииКурсаПлатежа КАК ДатаФиксацииКурсаПлатежа,
	|	ВТ_ПланОплат.ДокументПланирования.КурсПлатежаНеБолее КАК КурсПлатежаНеБолее,
	|	ВТ_ПланОплат.ДокументПланирования.КурсПлатежаНеМенее КАК КурсПлатежаНеМенее,
	|	ВТ_ПланОплат.ДокументПланирования.КурсПлатежаНеМенееВВалютеОплаты КАК КурсПлатежаНеМенееВВалютеОплаты,
	|	ВТ_ПланОплат.ДокументПланирования.КурсПлатежаНеБолееВВалютеОплаты КАК КурсПлатежаНеБолееВВалютеОплаты,
	|	ВТ_ПланОплат.ДокументПланирования.СдвигДатыФиксацииКурсаПлатежа КАК СдвигДатыФиксацииКурсаПлатежа,
	|	СостоянияИсполненияДокументовПланированияСрезПоследних.СостояниеИсполнения КАК СостояниеИсполнения
	|ИЗ
	|	ВТ_ПланОплат КАК ВТ_ПланОплат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних КАК СостоянияИсполненияДокументовПланированияСрезПоследних
	|		ПО ВТ_ПланОплат.ДокументПланирования = СостоянияИсполненияДокументовПланированияСрезПоследних.ДокументПланирования
	|			И ВТ_ПланОплат.ИдентификаторПозиции = СостоянияИсполненияДокументовПланированияСрезПоследних.ИдентификаторПозиции
	|ГДЕ
	|	&ТребуютсяПлатежныеПозиции = Истина";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодготовкаДанныхДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_АналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ВТ_АналитикиПланирования.ЦФО КАК ЦФО,
	|	ВТ_АналитикиПланирования.Проект КАК Проект,
	|	ВТ_АналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_АналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ВТ_АналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ВТ_АналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ВТ_АналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ВТ_АналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ВТ_АналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиОплаты
	|ИЗ
	|	ВТ_АналитикиПланирования КАК ВТ_АналитикиПланирования
	|ГДЕ
	|	ВТ_АналитикиПланирования.ВидБюджета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ВТ_АналитикиПланирования.ЦФО КАК ЦФО,
	|	ВТ_АналитикиПланирования.Проект КАК Проект,
	|	ВТ_АналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_АналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ВТ_АналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ВТ_АналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ВТ_АналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ВТ_АналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ВТ_АналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиИсполнения
	|ИЗ
	|	ВТ_АналитикиПланирования КАК ВТ_АналитикиПланирования
	|ГДЕ
	|	ВТ_АналитикиПланирования.НомерСтроки В
	|			(ВЫБРАТЬ
	|				МИНИМУМ(ВТ_АналитикиПланирования.НомерСтроки) КАК НомерСтроки
	|			ИЗ
	|				ВТ_АналитикиПланирования КАК ВТ_АналитикиПланирования
	|			ГДЕ
	|				ВТ_АналитикиПланирования.ВидБюджета <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсполнениеПоДокументу.Период КАК Период,
	|	ВТ_ИсполнениеПоДокументу.ДатаИсполнения КАК ДатаИсполнения,
	|	ВТ_АналитикиИсполнения.ВидБюджета КАК ВидБюджета,
	|	ВТ_АналитикиИсполнения.ЦФО КАК ЦФО,
	|	ВТ_АналитикиИсполнения.Проект КАК Проект,
	|	ВТ_АналитикиИсполнения.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_АналитикиИсполнения.Аналитика1 КАК Аналитика1,
	|	ВТ_АналитикиИсполнения.Аналитика2 КАК Аналитика2,
	|	ВТ_АналитикиИсполнения.Аналитика3 КАК Аналитика3,
	|	ВТ_АналитикиИсполнения.Аналитика4 КАК Аналитика4,
	|	ВТ_АналитикиИсполнения.Аналитика5 КАК Аналитика5,
	|	ВТ_АналитикиИсполнения.Аналитика6 КАК Аналитика6,
	|	ВТ_ИсполнениеПоДокументу.Валюта КАК Валюта,
	|	ВТ_ИсполнениеПоДокументу.Сумма КАК Сумма,
	|	ВТ_ИсполнениеПоДокументу.Ссылка КАК ДокументПланирования,
	|	ВТ_ИсполнениеПоДокументу.ПриходРасход КАК ПриходРасход,
	|	ВТ_ИсполнениеПоДокументу.Организация КАК Организация,
	|	ВТ_ИсполнениеПоДокументу.Контрагент КАК Контрагент,
	|	ВТ_ИсполнениеПоДокументу.Договор КАК ДоговорКонтрагента,
	|	ВТ_ИсполнениеПоДокументу.ВзаиморасчетыГрафик_ВидДвижения КАК ВзаиморасчетыГрафик_ВидДвижения
	|ПОМЕСТИТЬ ВТ_ПланыДокумента
	|ИЗ
	|	ВТ_ПланПоставок КАК ВТ_ИсполнениеПоДокументу,
	|	ВТ_АналитикиИсполнения КАК ВТ_АналитикиИсполнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПланОплат.Период,
	|	ВТ_ПланОплат.ДатаИсполнения,
	|	ВТ_АналитикиОплаты.ВидБюджета,
	|	ВТ_АналитикиОплаты.ЦФО,
	|	ВТ_АналитикиОплаты.Проект,
	|	ВТ_АналитикиОплаты.СтатьяБюджета,
	|	ВТ_АналитикиОплаты.Аналитика1,
	|	ВТ_АналитикиОплаты.Аналитика2,
	|	ВТ_АналитикиОплаты.Аналитика3,
	|	ВТ_АналитикиОплаты.Аналитика4,
	|	ВТ_АналитикиОплаты.Аналитика5,
	|	ВТ_АналитикиОплаты.Аналитика6,
	|	ВТ_ПланОплат.ВалютаВзаиморасчетов,
	|	ВТ_ПланОплат.СуммаВзаиморасчетов,
	|	ВТ_ПланОплат.ДокументПланирования,
	|	ВТ_ПланОплат.ПриходРасход,
	|	ВТ_ПланОплат.Организация,
	|	ВТ_ПланОплат.Контрагент,
	|	ВТ_ПланОплат.ДоговорКонтрагента,
	|	ВТ_ПланОплат.ВзаиморасчетыГрафик_ВидДвижения
	|ИЗ
	|	ВТ_ПланОплат КАК ВТ_ПланОплат,
	|	ВТ_АналитикиОплаты КАК ВТ_АналитикиОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПланыДокумента.Период КАК Период,
	|	ВТ_ПланыДокумента.ВидБюджета КАК ВидБюджета,
	|	ВЫРАЗИТЬ(ВТ_ПланыДокумента.ВидБюджета КАК ПланВидовХарактеристик.ВидыБюджетов).Предназначение КАК Предназначение,
	|	Периоды.Ссылка КАК ПериодОтчета,
	|	ВТ_ПланыДокумента.ЦФО КАК ЦФО,
	|	ВТ_ПланыДокумента.Проект КАК Проект,
	|	ВТ_ПланыДокумента.Валюта КАК Валюта,
	|	ВТ_ПланыДокумента.ДокументПланирования КАК ДокументПланирования,
	|	ВЫРАЗИТЬ(ВТ_ПланыДокумента.ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов).ВерсияСоглашения.ИсточникЛимитовБДДС КАК ДокументРезервирования,
	|	ВТ_ПланыДокумента.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ПланыДокумента.Аналитика1 КАК Аналитика1,
	|	ВТ_ПланыДокумента.Аналитика2 КАК Аналитика2,
	|	ВТ_ПланыДокумента.Аналитика3 КАК Аналитика3,
	|	ВТ_ПланыДокумента.Аналитика4 КАК Аналитика4,
	|	ВТ_ПланыДокумента.Аналитика5 КАК Аналитика5,
	|	ВТ_ПланыДокумента.Аналитика6 КАК Аналитика6,
	|	ВТ_ПланыДокумента.ПриходРасход КАК ПриходРасход,
	|	ВТ_ПланыДокумента.Организация КАК Организация,
	|	ВТ_ПланыДокумента.Контрагент КАК Контрагент,
	|	ВТ_ПланыДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ПланыДокумента.Сумма КАК Заявлено
	|ПОМЕСТИТЬ ВТ_ОперативныйПлан
	|ИЗ
	|	ВТ_ПланыДокумента КАК ВТ_ПланыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОперативногоПланирования КАК ПараметрыОперативногоПланирования
	|		ПО ВТ_ПланыДокумента.ВидБюджета = ПараметрыОперативногоПланирования.ВидБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Периоды КАК Периоды
	|		ПО (Периоды.Произвольный = ЛОЖЬ)
	|			И (ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования = Периоды.Периодичность)
	|			И (ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования = Периоды.Периодичность)
	|			И ВТ_ПланыДокумента.ДатаИсполнения >= Периоды.ДатаНачала
	|			И ВТ_ПланыДокумента.ДатаИсполнения <= Периоды.ДатаОкончания";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыДвижений()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ОперативныйПлан.Период КАК Период,
	|	ВТ_ОперативныйПлан.ВидБюджета КАК ВидБюджета,
	|	ВТ_ОперативныйПлан.Предназначение КАК Предназначение,
	|	ВТ_ОперативныйПлан.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ОперативныйПлан.ЦФО КАК ЦФО,
	|	ВТ_ОперативныйПлан.Проект КАК Проект,
	|	ВТ_ОперативныйПлан.Валюта КАК Валюта,
	|	ВТ_ОперативныйПлан.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ОперативныйПлан.ДокументРезервирования КАК ДокументРезервирования,
	|	ВТ_ОперативныйПлан.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ОперативныйПлан.Аналитика1 КАК Аналитика1,
	|	ВТ_ОперативныйПлан.Аналитика2 КАК Аналитика2,
	|	ВТ_ОперативныйПлан.Аналитика3 КАК Аналитика3,
	|	ВТ_ОперативныйПлан.Аналитика4 КАК Аналитика4,
	|	ВТ_ОперативныйПлан.Аналитика5 КАК Аналитика5,
	|	ВТ_ОперативныйПлан.Аналитика6 КАК Аналитика6,
	|	ВТ_ОперативныйПлан.ПриходРасход КАК ПриходРасход,
	|	ВТ_ОперативныйПлан.Организация КАК Организация,
	|	ВТ_ОперативныйПлан.Контрагент КАК Контрагент,
	|	ВТ_ОперативныйПлан.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ОперативныйПлан.Заявлено КАК Заявлено,
	|	&Документ КАК ДокументРегистратор
	|ИЗ
	|	ВТ_ОперативныйПлан КАК ВТ_ОперативныйПлан
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОперативныйПлан.Период КАК Период,
	|	ВТ_ОперативныйПлан.ВидБюджета КАК ВидБюджета,
	|	ВТ_ОперативныйПлан.Предназначение КАК Предназначение,
	|	ВТ_ОперативныйПлан.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ОперативныйПлан.ЦФО КАК ЦФО,
	|	ВТ_ОперативныйПлан.Проект КАК Проект,
	|	ВТ_ОперативныйПлан.Валюта КАК Валюта,
	|	ВТ_ОперативныйПлан.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ОперативныйПлан.ДокументРезервирования КАК ДокументРезервирования,
	|	ВТ_ОперативныйПлан.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ОперативныйПлан.Аналитика1 КАК Аналитика1,
	|	ВТ_ОперативныйПлан.Аналитика2 КАК Аналитика2,
	|	ВТ_ОперативныйПлан.Аналитика3 КАК Аналитика3,
	|	ВТ_ОперативныйПлан.Аналитика4 КАК Аналитика4,
	|	ВТ_ОперативныйПлан.Аналитика5 КАК Аналитика5,
	|	ВТ_ОперативныйПлан.Аналитика6 КАК Аналитика6,
	|	ВТ_ОперативныйПлан.ПриходРасход КАК ПриходРасход,
	|	ВТ_ОперативныйПлан.Организация КАК Организация,
	|	ВТ_ОперативныйПлан.Контрагент КАК Контрагент,
	|	ВТ_ОперативныйПлан.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	0 КАК Лимит,
	|	0 КАК Зарезервировано,
	|	ВТ_ОперативныйПлан.Заявлено КАК Заявлено,
	|	0 КАК Исполнено
	|ПОМЕСТИТЬ ВТ_ТаблицаПлановССуммамиЛимитирования
	|ИЗ
	|	ВТ_ОперативныйПлан КАК ВТ_ОперативныйПлан
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПланыДокумента.ДатаИсполнения КАК Период,
	|	ВТ_ПланыДокумента.ВзаиморасчетыГрафик_ВидДвижения КАК ВидДвижения,
	|	&Документ КАК ВерсияГрафика,
	|	ВТ_ПланыДокумента.Организация КАК Организация,
	|	ВТ_ПланыДокумента.Контрагент КАК Контрагент,
	|	&Документ КАК ПредметГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг) КАК ЭлементСтруктурыЗадолженности,
	|	ВТ_ПланыДокумента.Валюта КАК Валюта,
	|	ВТ_ПланыДокумента.Сумма КАК Сумма,
	|	ВТ_ПланыДокумента.ВидБюджета КАК ВидБюджета,
	|	ВТ_ПланыДокумента.ПриходРасход КАК ПриходРасход,
	|	ВТ_ПланыДокумента.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ПланыДокумента.Аналитика1 КАК Аналитика1,
	|	ВТ_ПланыДокумента.Аналитика2 КАК Аналитика2,
	|	ВТ_ПланыДокумента.Аналитика3 КАК Аналитика3,
	|	ВТ_ПланыДокумента.Аналитика4 КАК Аналитика4,
	|	ВТ_ПланыДокумента.Аналитика5 КАК Аналитика5,
	|	ВТ_ПланыДокумента.Аналитика6 КАК Аналитика6,
	|	ВТ_ПланыДокумента.ЦФО КАК ЦФО,
	|	ВТ_ПланыДокумента.Проект КАК Проект,
	|	ВЫБОР
	|		КОГДА ВТ_ПланыДокумента.ВидБюджета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.РасходныйКоммерческийДоговор_Оплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.РасходныйКоммерческийДоговор_Начисление)
	|	КОНЕЦ КАК Операция,
	|	ВТ_ПланыДокумента.ДоговорКонтрагента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	&Документ КАК ДокументРегистратор
	|ИЗ
	|	ВТ_ПланыДокумента КАК ВТ_ПланыДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлатежныеПозиции.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	ВТ_АналитикиОплаты.СтатьяБюджета КАК СтатьяДвиженияДенежныхСредств,
	|	ВТ_АналитикиОплаты.Аналитика1 КАК Аналитика1,
	|	ВТ_АналитикиОплаты.Аналитика2 КАК Аналитика2,
	|	ВТ_АналитикиОплаты.Аналитика3 КАК Аналитика3,
	|	ВТ_АналитикиОплаты.Аналитика4 КАК Аналитика4,
	|	ВТ_АналитикиОплаты.Аналитика5 КАК Аналитика5,
	|	ВТ_АналитикиОплаты.Аналитика6 КАК Аналитика6,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	ВТ_АналитикиОплаты.ЦФО КАК ЦФО,
	|	ВТ_АналитикиОплаты.Проект КАК Проект,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВТ_ПлатежныеПозиции.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ВТ_ПлатежныеПозиции.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВТ_ПлатежныеПозиции.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ПлатежныеПозиции.КурсПлатежа КАК КурсВзаиморасчетов,
	|	ВТ_ПлатежныеПозиции.КратностьПлатежа КАК КратностьВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг) КАК ЭлементСтруктурыЗадолженности,
	|	ВТ_ПлатежныеПозиции.СуммаВзаиморасчетов КАК Сумма
	|ИЗ
	|	ВТ_ПлатежныеПозиции КАК ВТ_ПлатежныеПозиции,
	|	ВТ_АналитикиОплаты КАК ВТ_АналитикиОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Документ КАК ПредметГрафика,
	|	&Организация КАК Организация,
	|	ИСТИНА КАК ОпорныйГрафик,
	|	ЛОЖЬ КАК План,
	|	&Документ КАК ВерсияГрафика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область СборДанных

Функция СборДанныхПоЗаказуПоставщику()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ЗаказПоставщикуАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ЗаказПоставщикуАналитикиПланирования.ЦФО КАК ЦФО,
	|	ЗаказПоставщикуАналитикиПланирования.Проект КАК Проект,
	|	ЗаказПоставщикуАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ЗаказПоставщикуАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.ЗаказПоставщику.АналитикиПланирования КАК ЗаказПоставщикуАналитикиПланирования
	|ГДЕ
	|	ЗаказПоставщикуАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗаказПоставщикуТовары.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ПоступлениеОднойДатой = ИСТИНА
	|				И ЗаказПоставщикуТовары.Ссылка.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ЗаказПоставщикуТовары.Ссылка.ДатаПоступления
	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ПоступлениеОднойДатой = ЛОЖЬ
	|				И ЗаказПоставщикуТовары.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ЗаказПоставщикуТовары.ДатаПоступления
	|		ИНАЧЕ ЗаказПоставщикуТовары.Ссылка.Дата
	|	КОНЕЦ КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	СУММА(ЗаказПоставщикуТовары.СуммаСНДС) КАК Сумма,
	|	ЗаказПоставщикуТовары.Ссылка.Организация КАК Организация,
	|	ЗаказПоставщикуТовары.Ссылка.Контрагент КАК Контрагент,
	|	ЗаказПоставщикуТовары.Ссылка.Договор КАК Договор,
	|	ЗаказПоставщикуТовары.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка = &Документ
	|	И ЗаказПоставщикуТовары.Отменено = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ПоступлениеОднойДатой = ИСТИНА
	|				И ЗаказПоставщикуТовары.Ссылка.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ЗаказПоставщикуТовары.Ссылка.ДатаПоступления
	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ПоступлениеОднойДатой = ЛОЖЬ
	|				И ЗаказПоставщикуТовары.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ЗаказПоставщикуТовары.ДатаПоступления
	|		ИНАЧЕ ЗаказПоставщикуТовары.Ссылка.Дата
	|	КОНЕЦ,
	|	ЗаказПоставщикуТовары.Ссылка.Организация,
	|	ЗаказПоставщикуТовары.Ссылка.Контрагент,
	|	ЗаказПоставщикуТовары.Ссылка.Договор,
	|	ЗаказПоставщикуТовары.Ссылка,
	|	ЗаказПоставщикуТовары.Ссылка.Валюта,
	|	ЗаказПоставщикуТовары.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Касса
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Касса
	|		ИНАЧЕ ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаПоставщику) КАК ВидОперацииУХ,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ЗаказПоставщику.ЭтапыГрафикаОплаты КАК ЗаказПоставщикуЭтапыГрафикаОплаты
	|ГДЕ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоПриобретениеТоваровУслуг()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК Ссылка,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ГДЕ ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаПоставщику) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.ЭтапыГрафикаОплаты КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоАктВыполненныхРабот()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.АктВыполненныхРабот.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК Ссылка,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ГДЕ ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаПоставщику) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.АктВыполненныхРабот.ЭтапыГрафикаОплаты КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоПриобретениеУслугПрочихАктивов()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК Ссылка,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ГДЕ ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.БанковскийСчетОрганизации
	|		КОГДА ДокументЭтапыГрафикаОплаты.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|		КОГДА ДокументЭтапыГрафикаОплаты.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.БанковскийСчетОрганизации
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаПоставщику) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоЗаказуКлиента()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.ЗаказКлиента.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ДокументТовары.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Ссылка.НеОтгружатьЧастями = ИСТИНА
	|			ТОГДА ДокументТовары.Ссылка.ДатаОтгрузки
	|		ИНАЧЕ ДокументТовары.ДатаОтгрузки
	|	КОНЕЦ КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	СУММА(ДокументТовары.СуммаСНДС) КАК Сумма,
	|	ДокументТовары.Ссылка.Организация КАК Организация,
	|	ДокументТовары.Ссылка.Контрагент КАК Контрагент,
	|	ДокументТовары.Ссылка.Договор КАК Договор,
	|	ДокументТовары.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДокументТовары.Ссылка.НеОтгружатьЧастями = ИСТИНА
	|			ТОГДА ДокументТовары.Ссылка.ДатаОтгрузки
	|		ИНАЧЕ ДокументТовары.ДатаОтгрузки
	|	КОНЕЦ,
	|	ДокументТовары.Ссылка.Организация,
	|	ДокументТовары.Ссылка.Контрагент,
	|	ДокументТовары.Ссылка.Договор,
	|	ДокументТовары.Ссылка,
	|	ДокументТовары.Ссылка.Валюта,
	|	ДокументТовары.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаОтПокупателя) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоЗаявкаНаВозвратТоваровОтКлиента()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ДокументТовары.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Ссылка.НеОтгружатьЧастями = ИСТИНА
	|			ТОГДА ДокументТовары.Ссылка.ДатаПоступления
	|		ИНАЧЕ ДокументТовары.ДатаПоступления
	|	КОНЕЦ КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	СУММА(ДокументТовары.СуммаСНДС) КАК Сумма,
	|	ДокументТовары.Ссылка.Организация КАК Организация,
	|	ДокументТовары.Ссылка.Контрагент КАК Контрагент,
	|	ДокументТовары.Ссылка.Договор КАК Договор,
	|	ДокументТовары.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДокументТовары.Ссылка.НеОтгружатьЧастями = ИСТИНА
	|			ТОГДА ДокументТовары.Ссылка.ДатаПоступления
	|		ИНАЧЕ ДокументТовары.ДатаПоступления
	|	КОНЕЦ,
	|	ДокументТовары.Ссылка.Организация,
	|	ДокументТовары.Ссылка.Контрагент,
	|	ДокументТовары.Ссылка.Договор,
	|	ДокументТовары.Ссылка,
	|	ДокументТовары.Ссылка.Валюта,
	|	ДокументТовары.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчет <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаОтПокупателя) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЭтапыГрафикаОплаты КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ
	|	И ДокументЭтапыГрафикаОплаты.Ссылка.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства)";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция СборДанныхПоРеализацияТоваровУслуг()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументАналитикиПланирования.НомерСтроки КАК НомерСтроки,
	|	ДокументАналитикиПланирования.ВидБюджета КАК ВидБюджета,
	|	ДокументАналитикиПланирования.ЦФО КАК ЦФО,
	|	ДокументАналитикиПланирования.Проект КАК Проект,
	|	ДокументАналитикиПланирования.СтатьяБюджета КАК СтатьяБюджета,
	|	ДокументАналитикиПланирования.Аналитика1 КАК Аналитика1,
	|	ДокументАналитикиПланирования.Аналитика2 КАК Аналитика2,
	|	ДокументАналитикиПланирования.Аналитика3 КАК Аналитика3,
	|	ДокументАналитикиПланирования.Аналитика4 КАК Аналитика4,
	|	ДокументАналитикиПланирования.Аналитика5 КАК Аналитика5,
	|	ДокументАналитикиПланирования.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_АналитикиПланирования
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.АналитикиПланирования КАК ДокументАналитикиПланирования
	|ГДЕ
	|	ДокументАналитикиПланирования.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК Ссылка,
	|	ДАТАВРЕМЯ(1,1,1,0,0,0) КАК ДатаИсполнения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход) КАК ПриходРасход,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПланПоставок
	|ГДЕ ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВзаиморасчетыГрафик_ВидДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета,
	|	ДокументЭтапыГрафикаОплаты.Ссылка КАК ДокументПланирования,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход) КАК ПриходРасход,
	|	ДокументЭтапыГрафикаОплаты.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса
	|		ИНАЧЕ ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации
	|	КОНЕЦ КАК БанковскийСчетКасса,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Контрагент КАК Контрагент,
	|	ДокументЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаВзаиморасчетов,
	|	0 КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты <> ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|			ТОГДА ДокументЭтапыГрафикаОплаты.Ссылка.ФормаОплаты
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетОрганизации <> &ПустоеЗначениеБанковскогоСчета
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		КОГДА ДокументЭтапыГрафикаОплаты.Ссылка.Касса <> &ПустоеЗначениеКасса
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	КОНЕЦ КАК ФормаОплаты,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Валюта КАК ВалютаВзаиморасчетов,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Проведен КАК Проведен,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОперацийУХ.ОплатаОтПокупателя) КАК ВидОперацииУХ,
	|	ДокументЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаИсполнения,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.БанковскийСчетКонтрагента КАК СчетКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Организация КАК Организация,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ДокументЭтапыГрафикаОплаты.Ссылка.ОплатаВВалюте КАК ОплатаВВалюте
	|ПОМЕСТИТЬ ВТ_ПланОплат
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ЭтапыГрафикаОплаты КАК ДокументЭтапыГрафикаОплаты
	|ГДЕ
	|	ДокументЭтапыГрафикаОплаты.Ссылка = &Документ";
	
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти 

#КонецОбласти 

#КонецОбласти

