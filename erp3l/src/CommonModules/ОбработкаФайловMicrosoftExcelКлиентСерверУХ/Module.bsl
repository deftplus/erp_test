
#Если Не ВебКлиент Тогда

// Изменяет формат данных всех листов файла Microsoft Excel
// Конвертированные данные помещает по тому же адресу хранилища, по которому переданы исходные
// Возвращает Истину, если всё прошло успешно, Ложь - иначе
Функция ПривестиФорматКТексту(АдресХранилища, Excel2003, ВнешнийExcelApplication = Неопределено) Экспорт
	
	ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ = "ОбщийМодуль.ОбработкаФайловMicrosoftExcel.ПривестиФорматКТексту";
	
	Расширение = ?(Excel2003, "xls", "xlsx");
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ИмяНовогоФайла = ПолучитьИмяВременногоФайла(Расширение);
	
	Попытка
		
		ПолучитьИзВременногоХранилища(АдресХранилища).Записать(ИмяВременногоФайла);
		
		Если ВнешнийExcelApplication = Неопределено Тогда
	
			Excel_Настройки = Неопределено;
			ExcelApplication = ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Создать(Excel_Настройки);
			
			Если ExcelApplication = Неопределено Тогда
				ВызватьИсключение Нстр("ru = 'Не удалось создать COM-объект Microsoft Excel.'");
			КонецЕсли;
			
		Иначе
			
			ExcelApplication = ВнешнийExcelApplication;
			
		КонецЕсли;
		
		Workbook = ExcelApplication.Workbooks.Open(ИмяВременногоФайла);
		
		For Each Sheet In Workbook.Sheets Do
			If Not Sheet.ProtectContents Then 
				Sheet.UsedRange.NumberFormat = "@";
			EndIf
		EndDo;
		
		Sheet=Неопределено;
		
		Workbook.SaveAs(ИмяНовогоФайла);
		
		Workbook.Close(False);
		
		Если ВнешнийExcelApplication = Неопределено Тогда
			ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Закрыть(ExcelApplication, Excel_Настройки);
		КонецЕсли;
		
		Workbook=Неопределено;
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяНовогоФайла);
		ПоместитьВоВременноеХранилище(ДвоичныеДанные, АдресХранилища);
		
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьОшибка(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
	КонецПопытки;
	
	Попытка
		РаботаСФайламиУХ.УдалитьФайлыАсинхронно(ИмяВременногоФайла);
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьИнформация(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Попытка
		РаботаСФайламиУХ.УдалитьФайлыАсинхронно(ИмяНовогоФайла);
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьИнформация(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

// Отбор - [{ ИмяЛиста, [ ИмяКолонки ] }] - соответсвие, описывающее листы-колонки, значения которых надо преобразовать в текст
// Листы, которые не указаны в отборе, не конвертируются
// Листы, указанные в отборе, выгружаются в CSV и импортируются обратно с применением типизации для указанных колонок
// Имена листов и колонок - в нотации ADO (но без [])
Функция ПривестиЗначенияКТексту(АдресХранилища, Excel2003, Отбор, Пароль, ВнешнийExcelApplication)
	
	ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ = "ОбщийМодуль.ОбработкаФайловMicrosoftExcel.ПривестиЗначенияКТексту";
	
	Расширение = ?(Excel2003, "xls", "xlsx");
	
	ИмяВременногоКаталога = ПолучитьИмяВременногоФайла();
	
	СоздатьКаталог(ИмяВременногоКаталога);
	
	ИмяВременногоФайла = ИмяВременногоКаталога + "\" + Новый УникальныйИдентификатор + "." + Расширение;
	ИмяНовогоФайла = ИмяВременногоКаталога + "\" + Новый УникальныйИдентификатор + "." + Расширение;
	
	Попытка
		
		ПолучитьИзВременногоХранилища(АдресХранилища).Записать(ИмяВременногоФайла);
	
		Если ВнешнийExcelApplication = Неопределено Тогда
	
			Excel_Настройки = Неопределено;
			ExcelApplication = ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Создать(Excel_Настройки);
			
			Если ExcelApplication = Неопределено Тогда
				ВызватьИсключение Нстр("ru = 'Не удалось создать COM-объект Microsoft Excel.'");
			КонецЕсли;
			
		Иначе
			
			ExcelApplication = ВнешнийExcelApplication;
			
		КонецЕсли;
		
		Workbook = ExcelApplication.Workbooks.Open(ИмяВременногоФайла);
		
		xlCSV = 6;
		xlDelimited = 1;
		xlDoubleQuote = 1;
		xlTextQualifierDoubleQuote = 1;
		xlNormal = -4143;
		xlWorkbookNormal = -4143;
		xlExcel8 = 56;
		xlOpenXMLWorkbook = 51;
		xlInsertDeleteCells = 1;
		
		ИменаФайловЛистов = Новый Соответствие;
		ОписанияПолейЛистов = Новый Соответствие;
		
		ОписаниеПолейДляQueryTables = ОбработкаФайловMicrosoftExcelВызовСервераУХ.ПолучитьОписаниеПолейДляQueryTables(АдресХранилища, Excel2003, Отбор);
		
		For Each Sheet In Workbook.Sheets Do
			
			ЗаписыватьЛист = Ложь;
			
			Если Отбор = Неопределено Тогда
				ЗаписыватьЛист = Истина;
				ТекстовыеКолонки = Неопределено;
			Иначе
				ТекстовыеКолонки = ОписаниеПолейДляQueryTables[ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.ИмяЛистаCOM2ADO(Sheet.Name)];
				ЗаписыватьЛист = НЕ ТекстовыеКолонки = Неопределено;
			КонецЕсли;
			
			Если НЕ ЗаписыватьЛист Тогда
				Продолжить;
			КонецЕсли;
			
			If НЕ ПустаяСтрока(Пароль) И Sheet.ProtectContents Тогда
				Sheet.Unprotect(Пароль);
			EndIf;
			
			Sheet.Activate();
			
			ИмяФайлаЛиста = "HM_TMP_CSV_" + Формат(ИменаФайловЛистов.Количество() + 1, "ЧГ=");
			ИменаФайловЛистов.Вставить(Sheet.Name, ИмяФайлаЛиста);
			ОписанияПолейЛистов.Вставить(ИмяФайлаЛиста, ТекстовыеКолонки);
			
			Workbook.SaveAs(ИмяВременногоКаталога + "\" + ИмяФайлаЛиста + "." + "txt", xlCSV);
			
		EndDo;
		
		Sheet=Неопределено;
		
		Для Каждого ЭлементЛистФайл Из ИменаФайловЛистов Цикл
			
			ИмяФайлаЛиста = ЭлементЛистФайл.Значение;
			
			Sheet = Workbook.Sheets(ИмяФайлаЛиста);
			
			Sheet.Activate();
			
			Sheet.Cells.Clear();
			
			ТекстовыеКолонки = ОписанияПолейЛистов[ИмяФайлаЛиста];
			Если НЕ ТекстовыеКолонки = Неопределено Тогда
				ОписаниеПолей = Новый COMSafeArray(ТекстовыеКолонки, "VT_VARIANT", ТекстовыеКолонки.Количество());
			Иначе
				ОписаниеПолей = Неопределено;
			КонецЕсли;
			
			QueryTable = Sheet.QueryTables.Add("TEXT;" + ИмяВременногоКаталога + "\" + ИмяФайлаЛиста + "." + "txt", Sheet.Range("A1"));
			QueryTable.Name = ИмяФайлаЛиста;
			QueryTable.FieldNames = True;
			QueryTable.RowNumbers = False;
			QueryTable.FillAdjacentFormulas = False;
			QueryTable.PreserveFormatting = True;
			QueryTable.RefreshOnFileOpen = False;
			QueryTable.RefreshStyle = xlInsertDeleteCells;
			QueryTable.SavePassword = False;
			QueryTable.SaveData = True;
			QueryTable.AdjustColumnWidth = True;
			QueryTable.RefreshPeriod = 0;
			QueryTable.TextFilePromptOnRefresh = False;
			QueryTable.TextFilePlatform = 1251;
			QueryTable.TextFileStartRow = 1;
			QueryTable.TextFileParseType = xlDelimited;
			QueryTable.TextFileTextQualifier = xlTextQualifierDoubleQuote;
			QueryTable.TextFileConsecutiveDelimiter = False;
			QueryTable.TextFileTabDelimiter = False;
			QueryTable.TextFileSemicolonDelimiter = True;
			QueryTable.TextFileCommaDelimiter = False;
			QueryTable.TextFileSpaceDelimiter = False;
			Если НЕ ОписаниеПолей = Неопределено Тогда
				QueryTable.TextFileColumnDataTypes = ОписаниеПолей;
			КонецЕсли;
			QueryTable.Refresh(False);
			QueryTable.Delete();
			
			QueryTable=Неопределено;
			Sheet=Неопределено;
			
		КонецЦикла; 
		
		Для Каждого ЭлементЛистФайл Из ИменаФайловЛистов Цикл
			
			ИмяЛиста = ЭлементЛистФайл.Ключ;
			ИмяФайлаЛиста = ЭлементЛистФайл.Значение;
			
			Workbook.Sheets(ИмяФайлаЛиста).Name = ИмяЛиста;
			
		КонецЦикла;
		
		Если ExcelApplication.Version <= "11.0" Тогда
			Workbook.SaveAs(ИмяНовогоФайла, ?(Excel2003, xlNormal, xlOpenXMLWorkbook));
		Иначе
			Workbook.SaveAs(ИмяНовогоФайла, ?(Excel2003, xlExcel8, xlOpenXMLWorkbook));
		КонецЕсли;
		
		Workbook.Close(False);
		
		Если ВнешнийExcelApplication = Неопределено Тогда
			ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Закрыть(ExcelApplication, Excel_Настройки);
		КонецЕсли;
		
		Workbook=Неопределено;
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяНовогоФайла);
		ПоместитьВоВременноеХранилище(ДвоичныеДанные, АдресХранилища);
		
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьОшибка(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Попытка
		РаботаСФайламиУХ.УдалитьФайлыАсинхронно(ИмяВременногоКаталога);
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьИнформация(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция ПривестиЗначенияКТекстуДляПравилаИмпортаДанных(АдресХранилищаФайла, Excel2003, ПравилоИмпортаДанных, Пароль, ВнешнийExcelApplication = Неопределено) Экспорт
	
	Отбор = ОбработкаФайловMicrosoftExcelВызовСервераУХ.ПолучитьОтборСтроковыхКолонокПравилаИмпортаДанных(ПравилоИмпортаДанных);
	
	Возврат ПривестиЗначенияКТексту(АдресХранилищаФайла, Excel2003, Отбор, Пароль, ВнешнийExcelApplication);
	
КонецФункции

Функция ПривестиЗначенияКТекстуДляПравилаОбработки(АдресХранилищаФайла, Excel2003, ПравилоОбработки, Пароль, ВнешнийExcelApplication = Неопределено) Экспорт
	
	Отбор = ОбработкаФайловMicrosoftExcelВызовСервераУХ.ПолучитьОтборСтроковыхКолонокПравилаОбработки(ПравилоОбработки);
	
	Возврат ПривестиЗначенияКТексту(АдресХранилищаФайла, Excel2003, Отбор, Пароль, Неопределено);//, ВнешнийExcelApplication);
	
КонецФункции

Функция ПолучитьТабличныйДокументИзЛистаТолькоДанные(АдресХранилищаФайла, Excel2003, ИмяЛиста = "", Пароль, ДанныеИменнованныхОбластей = Неопределено) Экспорт
	
		ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ = "ОбщийМодуль.ОбработкаФайловMicrosoftExcel.ПолучитьТабличныйДокументИзЛистаТолькоДанные";
	
	Расширение = ?(Excel2003, "xls", "xlsx");
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	
	Попытка
		
		ПолучитьИзВременногоХранилища(АдресХранилищаФайла).Записать(ИмяВременногоФайла);
		
		Excel_Настройки = Неопределено;
		ExcelApplication = ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Создать(Excel_Настройки);
		
		Если ExcelApplication = Неопределено Тогда
			ВызватьИсключение Нстр("ru = 'Не удалось создать COM-объект Microsoft Excel.'");
		КонецЕсли;
				
		Workbook = ExcelApplication.Workbooks.Open(ИмяВременногоФайла);
		
		Если ПустаяСтрока(ИмяЛиста) Тогда
			Если Workbook.Sheets.Count = 1 Тогда
				Sheet = Workbook.Sheets(1);
			Иначе
				ВызватьИсключение Нстр("ru = 'Не указано имя листа файла Microsoft Excel'");
			КонецЕсли;
		Иначе
			Sheet = Workbook.Sheets(ИмяЛиста);
		КонецЕсли;
			
		If НЕ ПустаяСтрока(Пароль) И Sheet.ProtectContents Тогда
			Sheet.Unprotect(Пароль);
		EndIf;
		
		UsedRange = Sheet.UsedRange;
		
		ВсегоКолонок = Sheet.UsedRange.Column + Sheet.UsedRange.Columns.Count - 1;
		ВсегоСтрок = Sheet.UsedRange.Row + Sheet.UsedRange.Rows.Count - 1;
				
		Т = Новый ТабличныйДокумент;
		
		МассивКоллекцийИмен = Новый Массив;
		
		Если Sheet.Names.Count > 0 Тогда
			МассивКоллекцийИмен.Добавить(Sheet.Names);
		ИначеЕсли Workbook.Names.Count > 0 Тогда
			МассивКоллекцийИмен.Добавить(Workbook.Names);
		КонецЕсли;
				
		Для Каждого КоллекцияИмен Из МассивКоллекцийИмен Цикл
			
			Для Каждого Name Из КоллекцияИмен Цикл
				
				Попытка
					КоличествоКолонок = Name.RefersToRange.Columns.Count;
				Исключение
					Продолжить;
				КонецПопытки;
				
				Если КоличествоКолонок = 0 ИЛИ КоличествоКолонок = 256
					ИЛИ КоличествоКолонок = 16384 Тогда // считаем такую область - секцией
					
					КоличествоСтрок = Name.RefersToRange.Rows.Count;
					КоординатаВерхнейСтроки = Name.RefersToRange.Rows.Item(1).Row;
					КоординатаНижнейСтроки = Name.RefersToRange.Rows.Item(КоличествоСтрок).Row;
					
					Имя = СтрЗаменить(Name.Name, Sheet.Name + "!", "");
					
					Т.Область(КоординатаВерхнейСтроки, 0, КоординатаНижнейСтроки, 0).Имя = Имя;
					
					Если НЕ ДанныеИменнованныхОбластей = Неопределено Тогда
						ТекМассив = Name.RefersToRange.Value.Выгрузить();
						ДанныеИменнованныхОбластей.Вставить(Имя, ТекМассив);
					КонецЕсли;
					
				КонецЕсли;
				
				Name=Неопределено;
				
			КонецЦикла; 
			
			КоллекцияИмен=Неопределено;
			
		КонецЦикла; 
				
		ОписаниеПростыхТипов = Новый Соответствие;
		ОписаниеПростыхТипов.Вставить(Тип("Строка"), Новый ОписаниеТипов("Строка"));
		ОписаниеПростыхТипов.Вставить(Тип("Число"), Новый ОписаниеТипов("Число"));
		ОписаниеПростыхТипов.Вставить(Тип("Дата"), Новый ОписаниеТипов("Дата"));
		
		Данные = UsedRange.Value.Выгрузить();
		
		ПерваяСтрока = UsedRange.Row;
		ПерваяКолонка = UsedRange.Column;
		
		UsedRange = Неопределено;
		
		Для ИндексКолонки = 0 По Данные.ВГраница() Цикл
			
			ДанныеКолонки = Данные[ИндексКолонки];
			
			Для ИндексСтроки = 0 По ДанныеКолонки.ВГраница() Цикл
				
				Значение = ДанныеКолонки[ИндексСтроки];
				
				Если Значение = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Область = Т.Область(ИндексСтроки + ПерваяСтрока, ИндексКолонки + ПерваяКолонка);
				
				ОписаниеТипаЗначения = ОписаниеПростыхТипов[ТипЗнч(Значение)];
				
				Если НЕ ОписаниеТипаЗначения = Неопределено Тогда
					Область.СодержитЗначение = Истина;
					Область.ТипЗначения = ОписаниеТипаЗначения;
					Область.Значение = Значение;
				Иначе
					Область.СодержитЗначение = Ложь;
					Область.Текст = Значение;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
					
		ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Закрыть(ExcelApplication, Excel_Настройки);
		
		Sheet 		= Неопределено;
		UsedRange	= Неопределено;
		Workbook	= Неопределено;
			
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьОшибка(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Т = Неопределено;
	КонецПопытки;
	
	Попытка
		РаботаСФайламиУХ.УдалитьФайлыАсинхронно(ИмяВременногоФайла);
	Исключение
		ПротоколируемыеСобытияВызовСервераУХ.ДобавитьЗаписьИнформация(ПРОТОКОЛИРУЕМОЕ_СОБЫТИЕ,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Т;
			
КонецФункции
		
Функция ВернутьСписокЛистов(ИмяФайла) Экспорт
	
	СписокЛистов = Новый СписокЗначений;
	
	Попытка
		Ексел = Новый COMОбъект("Excel.Application");
		РабочаяКнига  = Ексел.Workbooks.Open(ИмяФайла);
		Ексел.Visible = Ложь;
		Для Инд = 1 По РабочаяКнига.Sheets.Count Цикл
			СписокЛистов.Добавить(Инд, РабочаяКнига.Sheets(Инд).Name, РабочаяКнига.Sheets(Инд).ProtectContents);
		КонецЦикла;
		РабочаяКнига.Close(0);
	Исключение
		ТекстыОшибки = Новый Массив;
		ТекстыОшибки.Добавить(Нстр("ru = 'Не удалось открыть файл XLS.'"));
		ТекстыОшибки.Добавить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ТекстыОшибки.Добавить(Нстр("ru = 'Возможные причины ошибки описаны в справке к документу ""Экземпляр отчета"" в разделе ""Импорт""'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрСоединить(ТекстыОшибки, Символы.ПС));
	КонецПопытки;
	
	Если Ексел <> Неопределено Тогда
		Ексел.Quit();
		Ексел = Неопределено;
	КонецЕсли;
	
	Возврат СписокЛистов;
	
КонецФункции

#КонецЕсли