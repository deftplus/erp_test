////////////////////////////////////////////////////////////////////////////////
// Содержит процедуры документа ВнутреннееПотреблениеТоваров, предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

// Вызывается при изменении реквизита ХозяйственнаяОперация в документе
//
Процедура ХозяйственнаяОперацияПриИзменении(Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ОчиститьТовары = Объект.Товары.Количество() > 0;
	
	Если ОчиститьТовары Тогда
		
		ДополнительныеПараметры = Новый Структура("ОчиститьТовары,Форма", ОчиститьТовары, Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ХозяйственнаяОперацияПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru = 'Список ""Товары"" будет очищен. Продолжить?';
							|en = 'The Item list will be cleared. Continue?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Возврат;
		
	КонецЕсли;
	
	//-- Локализация
	
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
		Форма, 
		"ХозяйственнаяОперация", 
		Истина, 
		Новый Структура("ОчиститьТовары", Ложь));
	
КонецПроцедуры

Функция МожноРазбитьСтроку(ТекущаяСтрока) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Если ТекущаяСтрока <> Неопределено И ТекущаяСтрока.ИнвентарныйУчет Тогда
		ТекстСообщения = НСтр("ru = 'Невозможно разбить строку с инвентарным учетом.';
								|en = 'Cannot split the line with stocktaking record.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	Возврат Истина;
	
КонецФункции

// 
// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	
	//++ НЕ УТ
	Если Команда.Имя = Форма.Команды.СоздатьГрупповоеОС.Имя Тогда
		
		СоздатьГрупповоеОС(Форма);
		ПродолжитьВыполнениеКоманды = Ложь;
		
	КонецЕсли; 
	//-- НЕ УТ
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область Локализация

//++ Локализация

// Вызывается при изменении реквизита КатегорияЭксплуатации в документе
//
Процедура ТоварыКатегорияЭксплуатацииПриИзменении(Форма, КэшированныеЗначения) Экспорт

	Элементы = Форма.Элементы;
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакиКатегорииЭксплуатации");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Процедура ХозяйственнаяОперацияПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		
		// Если пользователь отказался от изменения хоз.операции, нужно вернуть хоз.операцию до изменения.
		ЭтоСписаниеПоТребованию = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию"));
		
		Объект.ХозяйственнаяОперация = ?(ЭтоСписаниеПоТребованию,
										ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию"),
										ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию"));
										
		Возврат;
		
	КонецЕсли;
										
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
		Форма, 
		"ХозяйственнаяОперация", 
		Истина,
		Новый Структура("ОчиститьТовары", ДополнительныеПараметры.ОчиститьТовары));
	
КонецПроцедуры

//++ НЕ УТ

Процедура СоздатьГрупповоеОС(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию") Тогда
		Возврат;
	КонецЕсли;

	СписокСтрок = Новый Массив;
	Для Каждого ИдентификаторСтроки Из Элементы.Товары.ВыделенныеСтроки Цикл
		ДанныеСтроки = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ДанныеСтроки.УчитыватьВВидеГрупповогоОС Тогда
			СписокСтрок.Добавить(ИдентификаторСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокСтрок.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать строки с учетом в виде группового ОС';
										|en = 'Select lines with recording as group fixed assets'"));
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Создать групповое ОС и заполнить аналитику в выбранных строках?';
						|en = 'Create group fixed assets and fill in the analytics in the selected lines?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьГрупповоеОСЗавершение", ЭтотОбъект, Форма);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура СоздатьГрупповоеОСЗавершение(РезультатВопроса, Форма) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Форма.Команды.СоздатьГрупповоеОС.Имя, 
			Истина);
			
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

//-- Локализация

#КонецОбласти
