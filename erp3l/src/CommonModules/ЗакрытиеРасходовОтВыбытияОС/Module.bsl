////////////////////////////////////////////////////////////////////////////////
// Процедуры, связанные с операцией "Закрытие расходов от выбытия ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап(ТаблицаЭтапов, ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС);
		
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоВнеоборотнымАктивам);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Выполнить';
										|en = 'Calculate'");
	
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ЗакрытиеРасходовОтВыбытияОС.ОпределитьСтатусОперации");
		
	НоваяСтрока.ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ЗакрытиеРасходовОтВыбытияОС.ВыполнитьОперацию");
		
КонецПроцедуры

// Определяет статус операции "Использование_ЗакрытиеРасходовОтВыбытияОС".
// 
// Параметры:
//  ПараметрыОбработчика - см. ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыОбработчикаЭтапаЗакрытияМесяцаДляПроверки
Процедура ОпределитьСтатусОперации(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.Период) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов отключен.';
				|en = 'Accounting of fixed assets disabled.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|ГДЕ
	|	СписаниеОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СписаниеОС.Организация В (&МассивОрганизаций)
	|	И СписаниеОС.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|ГДЕ
	|	(РеализацияОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		ИЛИ РеализацияОС.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|	И РеализацияОС.Организация В (&МассивОрганизаций)
	|	И РеализацияОС.Проведен
	|
	|	И РеализацияОС.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда

		ТекстПояснения = СтрШаблон(
			НСтр("ru = 'За период %1 нет заданий для расчета данной операции.';
				|en = 'No jobs to calculate this operation for the %1 period.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации));
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика, ТекстПояснения);
			
	КонецЕсли;
		
КонецПроцедуры

// Выполняет операцию "ЗакрытьРасходыОтВыбытияОС".
// 
// Параметры:
//  ПараметрыОбработчика - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьПараметрыОбработчикаЭтапа
Процедура ВыполнитьОперацию(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
			
	ПараметрыОперации = ПараметрыОперации(ПараметрыРасчета);
	
	НачалоРасчета = ЗакрытиеМесяцаСервер.НачалоРасчета(
		ПараметрыОбработчика.ДанныеЭтапа.Код,
		ПараметрыРасчета.Период,,
		ПараметрыРасчета.МассивОрганизаций);
	
	ЕстьОшибки = Ложь;
	
	Пока НачалоРасчета <= ПараметрыОперации.КонецПериода Цикл
		
		НомерЗадания = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		
		НомерЗадания = РегистрыСведений.ЗаданияКЗакрытиюМесяца.УвеличитьНомерЗадания();
		
		НачатьТранзакцию();
		
		Попытка
			
			 ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(
				НомерЗадания,
				ПараметрыОперации.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ДанныеКРасчетуЗаМесяц = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(
				НачалоРасчета,
				ОкончаниеПериода,
				НомерЗадания,
				ПараметрыОперации.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2';
					|en = 'An error occurred when calculating for the %1 period:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОперации.ПериодРегистрации),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			 ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ТекстОшибки,
				ПараметрыОперации.МассивОрганизаций,
				НачалоРасчета);
			
		КонецПопытки;
		
		ЕстьОшибкиВыполненияРасчета = Ложь;
		
		Попытка
			
			ПараметрыОперации.НачалоПериода = НачалоРасчета;
			ПараметрыОперации.КонецПериода = ОкончаниеПериода;
			
			ВыполнитьОперациюЗаМесяц(ПараметрыОперации);
			
			ЕстьОшибкиВыполненияРасчета = ЗакрытиеМесяцаСервер.ЕстьОшибкиВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				ПараметрыОперации.МассивОрганизаций, 
				НачалоРасчета);
											
		Исключение
			
			ЕстьОшибки = Истина;
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,
				НачалоРасчета);
			
		КонецПопытки;
		
		Если ЕстьОшибкиВыполненияРасчета Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		Если ЕстьОшибки Тогда
			Прервать;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
			
			 ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(
				НомерЗадания,
				ПараметрыОперации.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			 ЗакрытиеМесяцаСервер.ЗафиксироватьРасчет(
				Неопределено,
				НомерЗадания,
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				ДанныеКРасчетуЗаМесяц);
			
			РегистрыСведений.ЗаданияКЗакрытиюМесяца.СформироватьЗаданияНаСледующийПериод(
				ДанныеКРасчетуЗаМесяц.ВременныеТаблицы,
				ОкончаниеПериода + 1);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2';
					|en = 'An error occurred when calculating for the %1 period:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоРасчета),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			 ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ТекстОшибки,
				ПараметрыОперации.МассивОрганизаций,
				НачалоРасчета);
			
		КонецПопытки;
		
		НачалоРасчета = ОкончаниеПериода + 1;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет операцию "ЗакрытиеРасходовОтВыбытияОС" для документов.
// 
// Параметры:
//  МассивСсылок - Массив из ДокументСсылка - Документы для которых формируются проводки
Процедура ВыполнитьОперациюДляДокументов(МассивСсылок) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыОперации = ПараметрыОперации();
	ПараметрыОперации.ВернутьДокументыКОтражению = Ложь;
	ПараметрыОперации.СформироватьЗадания = Ложь;
	ПараметрыОперации.СписокДокументов = МассивСсылок;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Организация КАК Организация,
	|	СписокДокументов.Дата КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&МассивСсылок)
	|		И ДанныеДокумента.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата
	|	ИЗ
	|		Документ.ПрочееОприходованиеТоваров КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&МассивСсылок)
	|		И ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата
	|	ИЗ
	|		Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&МассивСсылок)
	|		И ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|	) КАК СписокДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ПараметрыОперации.МассивОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.Организация);
		ПараметрыОперации.НачалоПериода = НачалоМесяца(Выборка.Дата);
		ПараметрыОперации.КонецПериода = КонецМесяца(Выборка.Дата);
		
		ВыполнитьОперациюЗаМесяц(ПараметрыОперации);
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Определяет период, начиная с которого требуется выполнить операцию "ЗакрытиеРасходовОтВыбытияОС".
//
// Параметры:
//  Организация   - СправочникСсылка.Организации - 
//  НачалоПериода - Дата - Проверяемый период.
// 
// Возвращаемое значение:
//  Дата - Дата, начиная с которой требуется расчет.
//
Функция СледующийПериодОперации(Организация, НачалоПериода) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДокументов.Период) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеОС.Дата КАК Период
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК СписаниеОС
	|	ГДЕ
	|		СписаниеОС.Дата >= &НачалоПериода
	|		И СписаниеОС.Организация В (&Организация)
	|		И СписаниеОС.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПрочееОприходование.Дата КАК Период
	|	ИЗ
	|		Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходование
	|	ГДЕ
	|		ПрочееОприходование.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС)
	|		И ПрочееОприходование.Дата >= &НачалоПериода
	|		И ПрочееОприходование.Организация В (&Организация)
	|		И ПрочееОприходование.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА РеализацияОС.Дата >= &НачалоПериода
	|				ТОГДА РеализацияОС.Дата
	|			ИНАЧЕ РеализацияОС.ДатаПереходаПраваСобственности 
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|			ПО ТаблицаОС.Ссылка = РеализацияОС.Ссылка
	|				И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|
	|	ГДЕ
	|		РеализацияОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|		И (РеализацияОС.Дата >= &НачалоПериода
	|			ИЛИ РеализацияОС.ДатаПереходаПраваСобственности >= &НачалоПериода)
	|
	|		И РеализацияОС.Организация В (&Организация)
	|		И РеализацияОС.Проведен
	|
	|	) КАК ТаблицаДокументов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоПериода));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(ЗначениеЗаполнено(Выборка.Период), НачалоМесяца(Выборка.Период), '000101010000');
	КонецЕсли;

	Возврат '000101010000';
	
КонецФункции

// Формирует задания к выполнению операции при изменении исходных данных.
// 
// Параметры:
//  Документ - ДокументОбъект - Документ.
//  ДанныеТаблиц - Структура - Данные таблиц.
Процедура СформироватьЗадания(Документ, ДанныеТаблиц) Экспорт
	
	Если ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПрочиеРасходы_ЗаданияКЗакрытиюРасходовОтВыбытияОС");
	
	ОпределитьИзмененияВРегистреПрочиеРасходыДляЗакрытияРасходовОтВыбытияОС(ДанныеТаблиц);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц);
	
	// Документы регистрируются всегда, т.к. при проведении удаляются отложенные движения.
	ЗарегистрироватьДокумент = 
		ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.СписаниеОС2_4")
		ИЛИ ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров");
	
	Если ЗарегистрироватьДокумент Тогда
		
		СписокЗапросовОбъединение = Новый Массив;
		
		Если ТекстОбъединенияДанных <> "" Тогда
			СписокЗапросовОбъединение.Добавить(ТекстОбъединенияДанных);
		КонецЕсли; 
			
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.ДатаДокументаИБ КАК Период,
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	"""" КАК ИмяТаблицы
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК ИзмененныеДанные
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС))";
		
		СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
		
		ТекстОбъединенияДанных = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли; 
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ЗакрытиеРасходовОтВыбытияОС) КАК Операция,
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|				КОГДА НЕ ВводОстатков.Дата ЕСТЬ NULL
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатков.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	&ТекстОбъединенияДанных КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковПрочиеРасходы КАК ВводОстатков
	|		ПО ВводОстатков.Ссылка = ИзмененныеДанные.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", "(" + ТекстОбъединенияДанных + ")");

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Определяет записываются ли движений при выполнении операции.
// 
// Параметры:
//  Документ - ДокументОбъект -
// 
// Возвращаемое значение:
//  Булево
Функция ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Экспорт

	Возврат Документ <> Неопределено
			И Документ.ДополнительныеСвойства.Свойство(ИмяОперации());
	
КонецФункции

#КонецОбласти

#Область ФормированиеТаблицДляПроведения

// Формирует текст запроса для таблицы регистра "Прочие расходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область ОтражениеСписанияРасходовОтВыбытияВРасходах // Дт 91 -
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	СписаниеРасходов.Организация                    КАК Организация,
	|	СписаниеРасходов.Подразделение                  КАК Подразделение,
	|	СписаниеРасходов.КорСтатьяРасходов              КАК СтатьяРасходов,
	|	СписаниеРасходов.КорАналитикаРасходов           КАК АналитикаРасходов,
	|	СписаниеРасходов.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	СписаниеРасходов.Сумма                          КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС                    КАК СуммаБезНДС,
	|	СписаниеРасходов.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаСНДСРегл,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаБезНДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница              КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница        КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС                 КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки            КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтВыбытияОС        КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеРасходов // - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	СписаниеРасходов.Организация                    КАК Организация,
	|	СписаниеРасходов.Подразделение                  КАК Подразделение,
	|	СписаниеРасходов.СтатьяРасходов                 КАК СтатьяРасходов,
	|	СписаниеРасходов.АналитикаРасходов              КАК АналитикаРасходов,
	|	СписаниеРасходов.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	СписаниеРасходов.Сумма                          КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС                    КАК СуммаБезНДС,
	|	СписаниеРасходов.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаСНДСРегл,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаБезНДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница              КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница        КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС                 КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки            КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтВыбытияОС        КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаСтоимостиТМЦ.Период                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	КорректировкаСтоимостиТМЦ.Организация           КАК Организация,
	|	КорректировкаСтоимостиТМЦ.Подразделение         КАК Подразделение,
	|	КорректировкаСтоимостиТМЦ.СтатьяРасходов        КАК СтатьяРасходов,
	|	КорректировкаСтоимостиТМЦ.АналитикаРасходов     КАК АналитикаРасходов,
	|	КорректировкаСтоимостиТМЦ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	-КорректировкаСтоимостиТМЦ.Сумма                КАК СуммаСНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаБезНДС          КАК СуммаБезНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр             КАК СуммаБезНДСУпр,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК СуммаСНДСРегл,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК СуммаБезНДСРегл,
	|	0                                               КАК ПостояннаяРазница,
	|
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл            КАК ВременнаяРазница,
	|
	|	&ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	КорректировкаСтоимостиТМЦ.ИдентификаторСтроки   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|ГДЕ
	|	КорректировкаСтоимостиТМЦ.Регистратор = &Ссылка";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область КорректировкаРасходов // - Дт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаРасходов.Период                    КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	КорректировкаРасходов.Организация               КАК Организация,
	|	КорректировкаРасходов.Подразделение             КАК Подразделение,
	|	КорректировкаРасходов.СтатьяРасходов            КАК СтатьяРасходов,
	|	КорректировкаРасходов.АналитикаРасходов         КАК АналитикаРасходов,
	|	КорректировкаРасходов.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	0                                               КАК СуммаСНДС,
	|	0                                               КАК СуммаБезНДС,
	|	0                                               КАК СуммаБезНДСУпр,
	|	0                                               КАК СуммаСНДСРегл,
	|	0                                               КАК СуммаБезНДСРегл,
	|	КорректировкаРасходов.ПостояннаяРазница         КАК ПостояннаяРазница,
	|
	|	-КорректировкаРасходов.СуммаНУ
	|		- КорректировкаРасходов.ПостояннаяРазница   КАК ВременнаяРазница,
	|
	|	&ХО_КорректировкаРасходовОтВыбытияОС            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	КорректировкаРасходов.ИдентификаторСтроки       КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_КорректировкаРасходовОтВыбытияОС   КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	КорректировкаРасходов КАК КорректировкаРасходов
	|ГДЕ
	|	КорректировкаРасходов.Регистратор = &Ссылка";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(), "ВтПрочиеРасходы");
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(), "ПрочиеРасходы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ПартииПрочихРасходов".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса) Экспорт
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов());
	
	#Область ОтражениеСписанияРасходовОтВыбытияВРасходах
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|
	|	СписаниеРасходов.Организация                КАК Организация,
	|	СписаниеРасходов.Подразделение              КАК Подразделение,
	|	СписаниеРасходов.КорСтатьяРасходов          КАК СтатьяРасходов,
	|	СписаниеРасходов.КорАналитикаРасходов       КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	&Ссылка                                     КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СписаниеРасходов.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                КАК ВидДеятельностиНДС,
	|
	|	СписаниеРасходов.СуммаУпр                   КАК Стоимость,
	|	СписаниеРасходов.СуммаБезНДС                КАК СтоимостьБезНДС,
	|	0                                           КАК НДСУпр,
	|	СписаниеРасходов.СуммаРегл                  КАК СтоимостьРегл,
	|	0                                           КАК НДСРегл,
	|	СписаниеРасходов.ПостояннаяРазница          КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница    КАК ВременнаяРазница,
	|
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС             КАК ХозяйственнаяОперация,
	|	
	|	СписаниеРасходов.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтВыбытияОС    КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПартииПрочихРасходов");

	ТекстыЗапроса.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов(), "ВтПартииПрочихРасходов");
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов(), "ПартииПрочихРасходов", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ПрочиеАктивыПассивы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	СписаниеРасходов.Период                      КАК Период,
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС              КАК ХозяйственнаяОперация,
	|	СписаниеРасходов.Организация                 КАК Организация,
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	СписаниеРасходов.КорСтатьяРасходов           КАК Статья,
	|	СписаниеРасходов.КорАналитикаАктивовПассивов КАК Аналитика,
	|
	|	СписаниеРасходов.СуммаУпр                    КАК Сумма
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И СписаниеРасходов.СуммаУпр <> 0
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ПрочиеАктивыПассивы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияПоПрочимАктивамПассивам".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                   КАК Период,
	|	СписаниеРасходов.Организация              КАК Организация,
	|	СписаниеРасходов.Подразделение            КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов        КАК Статья,
	|	СписаниеРасходов.КорСтатьяРасходов        КАК Аналитика,
	|	СписаниеРасходов.КорНастройкаСчетовУчета  КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаУпр,
	|	СписаниеРасходов.СуммаУпр                 КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС              КАК СуммаБезНДС,
	|
	|	СписаниеРасходов.СуммаРегл                КАК СуммаРегл,
	|	СписаниеРасходов.ПостояннаяРазница        КАК ПостояннаяРазница,
	|
	|	СписаниеРасходов.СуммаРегл 
	|		- СписаниеРасходов.СуммаНУ 
	|		- СписаниеРасходов.ПостояннаяРазница  КАК ВременнаяРазница,
	|
	|	СписаниеРасходов.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ЗакрытиеРасходовОтВыбытияОС КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияПоПрочимАктивамПассивам", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияДоходыРасходыПрочиеАктивыПассивы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса) Экспорт
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область СписаниеРасходов_НаСтатьюЗатрат // Дт <затраты> - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                      КАК Период,
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС              КАК ХозяйственнаяОперация,
	|	СписаниеРасходов.Организация                 КАК Организация,
	|
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов              КАК Статья,
	|	СписаниеРасходов.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Подразделение               КАК КорПодразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов           КАК КорСтатья,
	|	СписаниеРасходов.КорАналитикаРасходов        КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Сумма                       КАК Сумма,
	|	СписаниеРасходов.СуммаУпр                    КАК СуммаУпр,
	|	СписаниеРасходов.СуммаРегл                   КАК СуммаРегл
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеРасходов_НаСтатьюАктивов // Дт <затраты> - Кт 01.09
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеРасходов.Период                      КАК Период,
	|	&ХО_ЗакрытиеРасходовОтВыбытияОС              КАК ХозяйственнаяОперация,
	|	СписаниеРасходов.Организация                 КАК Организация,
	|
	|	СписаниеРасходов.Подразделение               КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов              КАК Статья,
	|	СписаниеРасходов.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Подразделение               КАК КорПодразделение,
	|	СписаниеРасходов.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	СписаниеРасходов.КорСтатьяРасходов           КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	СписаниеРасходов.КорАналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	СписаниеРасходов.Сумма                       КАК Сумма,
	|	СписаниеРасходов.СуммаУпр                    КАК СуммаУпр,
	|	СписаниеРасходов.СуммаРегл                   КАК СуммаРегл
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.Регистратор = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(СписаниеРасходов.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияДоходыРасходыПрочиеАктивыПассивы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияНоменклатураДоходыРасходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимостиТМЦ.Период                  КАК Период,
	|	&ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС КАК ХозяйственнаяОперация,
	|	КорректировкаСтоимостиТМЦ.Организация             КАК Организация,
	|	КорректировкаСтоимостиТМЦ.КорПодразделение        КАК Подразделение,
	|
	|	ВЫБОР 
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА КорректировкаСтоимостиТМЦ.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|
	|	КорректировкаСтоимостиТМЦ.Склад                   КАК Склад,
	|	КорректировкаСтоимостиТМЦ.ВидЗапасов.ТипЗапасов   КАК ТипЗапасов,
	|	КорректировкаСтоимостиТМЦ.ВидЗапасов              КАК ВидЗапасов,
	|
	|	КорректировкаСтоимостиТМЦ.СтатьяРасходов          КАК СтатьяДоходовРасходов,
	|	КорректировкаСтоимостиТМЦ.АналитикаРасходов       КАК АналитикаРасходов,
	|
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр               КАК Стоимость,
	|	-КорректировкаСтоимостиТМЦ.СуммаУпр               КАК СтоимостьБезНДС,
	|	-КорректировкаСтоимостиТМЦ.СуммаРегл              КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА КорректировкаСтоимостиТМЦ.ВидЗапасов
	|		ИНАЧЕ КорректировкаСтоимостиТМЦ.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	КорректировкаСтоимостиТМЦ.КорНаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	КорректировкаСтоимостиТМЦ.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры
	|
	|ИЗ
	|	КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО КорректировкаСтоимостиТМЦ.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|			И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|			И Аналитика.Серия = АналитикаБезНазначения.Серия
	|			И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|ГДЕ
	|	КорректировкаСтоимостиТМЦ.Регистратор = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДвиженияНоменклатураДоходыРасходы", Истина);
	
КонецПроцедуры

// Устанавливает параметры запроса, которые используются при выполнении операции.
// 
// Параметры:
//  Запрос - Запрос - Запрос
Процедура УстановитьПараметрыЗапроса(Запрос) Экспорт
	
	Запрос.УстановитьПараметр("ХО_ЗакрытиеРасходовОтВыбытияОС", Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("НастройкаХО_ЗакрытиеРасходовОтВыбытияОС", Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	Запрос.УстановитьПараметр("НастройкаХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", Справочники.НастройкиХозяйственныхОпераций.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	Запрос.УстановитьПараметр("ХО_КорректировкаРасходовОтВыбытияОС", Перечисления.ХозяйственныеОперации.КорректировкаРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("НастройкаХО_КорректировкаРасходовОтВыбытияОС", Справочники.НастройкиХозяйственныхОпераций.КорректировкаРасходовОтВыбытияОС);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОперациюЗаМесяц(ПараметрыОперации)
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОперации.НачалоПериода) Тогда
		Возврат;
	КонецЕсли;

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ЗакрытиеРасходовОтВыбытияОС.ВыполнитьОперациюЗаМесяц");
	
	ПараметрыОперации.КоличествоДанных = 0;
	ПараметрыОперации.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПодготовитьВременныеТаблицы(ПараметрыОперации);
	ВыбратьДокументыИЗаписатьДвижения(ПараметрыОперации);
	
	ПараметрыОперации.МенеджерВременныхТаблиц.Закрыть();
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ПараметрыОперации.КоличествоДанных);
	
КонецПроцедуры

Процедура ПодготовитьВременныеТаблицы(ПараметрыОперации)
	
	СписокЗапросов = Новый Массив;
	
	#Область ВыбытияИОстатки
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписаниеОС.Ссылка КАК Ссылка,
	|	СписаниеОС.Дата КАК Дата,
	|	СписаниеОС.Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	ЛОЖЬ КАК ПраваПерешли,
	|	СписаниеОС.Дата КАК ДатаПереходаПрав,
	|
	|	СписаниеОС.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	СписаниеОС.СтатьяРасходов КАК СтатьяРасходов,
	|	СписаниеОС.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	СписаниеОС.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	СписаниеОС.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|
	|	ТаблицаОС.СуммаСписанияУУ КАК СуммаСписанияУУ,
	|	ТаблицаОС.СуммаСписанияБУ КАК СуммаСписанияБУ,
	|	ТаблицаОС.СуммаСписанияНУ КАК СуммаСписанияНУ,
	|	ТаблицаОС.СуммаСписанияПР КАК СуммаСписанияПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = СписаниеОС.Ссылка
	|ГДЕ
	|	СписаниеОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СписаниеОС.Организация В (&МассивОрганизаций)
	|	И СписаниеОС.Проведен
	|	И (СписаниеОС.Ссылка В (&СписокДокументов)
	|		ИЛИ &БезОтбораДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияОС.Ссылка КАК Ссылка,
	|	РеализацияОС.Дата КАК Дата,
	|	РеализацияОС.Организация КАК Организация,
	|	ТаблицаОС.ВнеоборотныйАктив КАК ОсновноеСредство,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	РеализацияОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|		И РеализацияОС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) КАК ПраваПерешли,
	|
	|	РеализацияОС.ДатаПереходаПраваСобственности КАК ДатаПереходаПрав,
	|
	|	РеализацияОС.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаСчетовУчета,
	|
	|	0 КАК СуммаСписанияУУ,
	|	0 КАК СуммаСписанияБУ,
	|	0 КАК СуммаСписанияНУ,
	|	0 КАК СуммаСписанияПР
	|
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияОС
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = РеализацияОС.Ссылка
	|			И ТаблицаОС.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|ГДЕ
	|	(РеализацияОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		ИЛИ РеализацияОС.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &КонецПериода)
	|
	|	И РеализацияОС.Организация В (&МассивОрганизаций)
	|	И РеализацияОС.Проведен
	|
	|	И РеализацияОС.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|	И (РеализацияОС.Ссылка В (&СписокДокументов)
	|		ИЛИ &БезОтбораДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	СУММА(ПрочиеРасходы.Сумма) КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаУпр) КАК СуммаУпр,
	|
	|	СУММА(ПрочиеРасходы.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница - ПрочиеРасходы.ВременнаяРазница) КАК СуммаНУ,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ РасходыПриСписанииОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ПрочиеРасходы.СуммаОстаток КАК Сумма,
	|		ПрочиеРасходы.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		ПрочиеРасходы.СуммаУпрОстаток КАК СуммаУпр,
	|
	|		ПрочиеРасходы.СуммаРеглОстаток КАК СуммаРегл,
	|		ПрочиеРасходы.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		ПрочиеРасходы.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&МассивОрганизаций)
	|				И СтатьяРасходов В (&СтатьяВыбытиеОС)
	|				И АналитикаРасходов В (
	|					ВЫБРАТЬ
	|						ВыбытиеОС.ОсновноеСредство
	|					ИЗ
	|						ВыбытиеОС КАК ВыбытиеОС)
	|		) КАК ПрочиеРасходы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.Сумма
	|			ИНАЧЕ -ПрочиеРасходы.Сумма
	|		КОНЕЦ КАК Сумма,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаБезНДС
	|			ИНАЧЕ -ПрочиеРасходы.СуммаБезНДС
	|		КОНЕЦ КАК СуммаБезНДС,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаУпр
	|			ИНАЧЕ -ПрочиеРасходы.СуммаУпр
	|		КОНЕЦ КАК СуммаУпр,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаРегл
	|			ИНАЧЕ -ПрочиеРасходы.СуммаРегл
	|		КОНЕЦ КАК СуммаРегл,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|			ИНАЧЕ -ПрочиеРасходы.ПостояннаяРазница
	|		КОНЕЦ КАК ПостояннаяРазница,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.ВременнаяРазница
	|			ИНАЧЕ -ПрочиеРасходы.ВременнаяРазница
	|		КОНЕЦ КАК ВременнаяРазница
	|
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ГДЕ
	|		ПрочиеРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ПрочиеРасходы.Организация В (&МассивОрганизаций)
	|		И ПрочиеРасходы.СтатьяРасходов В (&СтатьяВыбытиеОС)
	|		И ПрочиеРасходы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.ЗакрытиеРасходовОтВыбытияОС)
	|		И ПрочиеРасходы.АналитикаРасходов В (
	|				ВЫБРАТЬ
	|					ВыбытиеОС.ОсновноеСредство
	|				ИЗ
	|					ВыбытиеОС КАК ВыбытиеОС)
	|
	|		) КАК ПрочиеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВспомогательныеДанные
	ПодготовитьВспомогательныеДанные(СписокЗапросов);
	#КонецОбласти
	
	#Область ВыбытиеОС_Распределение
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВыбытиеОС.СуммаСписанияУУ) КАК СуммаБазыУУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияБУ) КАК СуммаБазыБУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияНУ) КАК СуммаБазыНУ,
	|	СУММА(ВыбытиеОС.СуммаСписанияПР) КАК СуммаБазыПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС_СуммаБазы
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияУУ, 0)) КАК БазаНакопленнаяУУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияБУ, 0)) КАК БазаНакопленнаяБУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияНУ, 0)) КАК БазаНакопленнаяНУ,
	|	СУММА(ЕСТЬNULL(ВыбытиеОС_Предыдущие.СуммаСписанияПР, 0)) КАК БазаНакопленнаяПР
	|	
	|ПОМЕСТИТЬ ВыбытиеОС_БазаНакопленная
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС_Предыдущие
	|		ПО ВыбытиеОС_Предыдущие.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|			И ВыбытиеОС_Предыдущие.Ссылка < ВыбытиеОС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка КАК Ссылка,
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	1 КАК БазаУУ,
	|	0 КАК БазаНакопленнаяУУ,
	|	1 КАК СуммаБазыУУ,
	|
	|	1 КАК БазаБУ,
	|	0 КАК БазаНакопленнаяБУ,
	|	1 КАК СуммаБазыБУ,
	|
	|	1 КАК БазаНУ,
	|	0 КАК БазаНакопленнаяНУ,
	|	1 КАК СуммаБазыНУ,
	|
	|	1 КАК БазаПР,
	|	0 КАК БазаНакопленнаяПР,
	|	1 КАК СуммаБазыПР
	|
	|ПОМЕСТИТЬ ВыбытиеОС_Распределение
	| 
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|ГДЕ
	|	ВыбытиеОС.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка КАК Ссылка,
	|	ВыбытиеОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ВыбытиеОС.СуммаСписанияУУ КАК БазаУУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяУУ КАК БазаНакопленнаяУУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыУУ КАК СуммаБазыУУ,
	|
	|	ВыбытиеОС.СуммаСписанияБУ КАК БазаБУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяБУ КАК БазаНакопленнаяБУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыБУ КАК СуммаБазыБУ,
	|
	|	ВыбытиеОС.СуммаСписанияНУ КАК БазаНУ,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяНУ КАК БазаНакопленнаяНУ,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыНУ КАК СуммаБазыНУ,
	|	
	|	ВыбытиеОС.СуммаСписанияПР КАК БазаПР,
	|	ВыбытиеОС_БазаНакопленная.БазаНакопленнаяПР КАК БазаНакопленнаяПР,
	|	ВыбытиеОС_СуммаБазы.СуммаБазыПР КАК СуммаБазыПР
	|
	|ИЗ
	|	ВыбытиеОС КАК ВыбытиеОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС_СуммаБазы КАК ВыбытиеОС_СуммаБазы
	|		ПО ВыбытиеОС_СуммаБазы.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыбытиеОС_БазаНакопленная КАК ВыбытиеОС_БазаНакопленная
	|		ПО ВыбытиеОС_БазаНакопленная.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ВыбытиеОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И НЕ ВыбытиеОС.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ПолноеВыбытиеОС.ОсновноеСредство
	|			ИЗ
	|				ВыбытиеОС КАК ПолноеВыбытиеОС
	|			ГДЕ
	|				ПолноеВыбытиеОС.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|				И ПолноеВыбытиеОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Ссылка";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеПоложительногоОстатка
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка                                  КАК Регистратор,
	|	ВыбытиеОС_Распределение.Период                    КАК Период,
	|
	|	ВыбытиеОС.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
	|
	|	ВыбытиеОС.СтатьяРасходов                          КАК КорСтатьяРасходов,
	|	ВыбытиеОС.АналитикаРасходов                       КАК КорАналитикаРасходов,
	|	ВыбытиеОС.АналитикаАктивовПассивов                КАК КорАналитикаАктивовПассивов,
	|	ВыбытиеОС.НастройкаСчетовУчета                    КАК КорНастройкаСчетовУчета,
	|
	|	ВыбытиеОС_Распределение.Организация               КАК Организация,
	|	ВыбытиеОС_Распределение.Подразделение             КАК Подразделение,
	|	ВыбытиеОС_Распределение.СтатьяРасходов            КАК СтатьяРасходов,
	|	ВыбытиеОС_Распределение.АналитикаРасходов         КАК АналитикаРасходов,
	|	ВыбытиеОС_Распределение.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|
	|	СУММА(ВыбытиеОС_Распределение.Сумма) КАК Сумма,
	|	СУММА(ВыбытиеОС_Распределение.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВыбытиеОС_Распределение.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВыбытиеОС_Распределение.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВыбытиеОС_Распределение.СуммаНУ) КАК СуммаНУ,
	|	СУММА(ВыбытиеОС_Распределение.ПостояннаяРазница) КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ СписаниеРасходов
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыбытиеОС_Распределение.Ссылка                    КАК Ссылка,
	|		ВыбытиеОС_Распределение.ОсновноеСредство          КАК ОсновноеСредство,
	|
	|		ВЫБОР
	|			КОГДА ВыбытиеОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|				ТОГДА ВыбытиеОС.ДатаПереходаПрав
	|			ИНАЧЕ ВыбытиеОС.Дата
	|		КОНЕЦ КАК Период,
	|
	|		РасходыПриСписанииОС.Организация                  КАК Организация,
	|		РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|		РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|		РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|		РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &Сумма_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &СуммаБезНДС_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаУпр > 0
	|				ТОГДА &СуммаУпр_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаУпр,
	|
	|		ВЫБОР
	|			КОГДА РасходыПриСписанииОС.СуммаРегл > 0
	|				ТОГДА &СуммаРегл_Распределение
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаРегл,
	|
	|		0 КАК СуммаНУ,
	|		0 КАК ПостояннаяРазница
	| 
	|	ИЗ
	|		РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС_Распределение КАК ВыбытиеОС_Распределение
	|			ПО ВыбытиеОС_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|			ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|				И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|
	|	ГДЕ
	|		(РасходыПриСписанииОС.СуммаУпр > 0
	|			ИЛИ РасходыПриСписанииОС.СуммаРегл > 0)
	|
	|		И (ВыбытиеОС.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|				ИЛИ ВыбытиеОС.ПраваПерешли)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВыбытиеОС_Распределение.Ссылка                    КАК Ссылка,
	|		ВыбытиеОС_Распределение.ОсновноеСредство          КАК ОсновноеСредство,
	|
	|		ВЫБОР
	|			КОГДА ВыбытиеОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|					И ВыбытиеОС.ПраваПерешли
	|				ТОГДА ВыбытиеОС.ДатаПереходаПрав
	|			ИНАЧЕ ВыбытиеОС.Дата
	|		КОНЕЦ КАК Период,
	|
	|		РасходыПриСписанииОС.Организация                  КАК Организация,
	|		РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|		РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|		РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|		РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|		0 КАК Сумма,
	|		0 КАК СуммаБезНДС,
	|		0 КАК СуммаУпр,
	|		0 КАК СуммаРегл,
	|
	|		&СуммаНУ_Распределение КАК СуммаНУ,
	|
	|		&ПостояннаяРазница_Распределение КАК ПостояннаяРазница
	|
	|	ИЗ
	|		РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС_Распределение КАК ВыбытиеОС_Распределение
	|			ПО ВыбытиеОС_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|			ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|				И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВспомогательныеДанные КАК ВспомогательныеДанные
	|			ПО ВспомогательныеДанные.Организация = ВыбытиеОС.Организация
	|				И ВспомогательныеДанные.ОсновноеСредство = ВыбытиеОС.ОсновноеСредство
	|
	|	ГДЕ
	|		(РасходыПриСписанииОС.СуммаНУ > 0
	|			ИЛИ РасходыПриСписанииОС.СуммаНУ = 0
	|				И РасходыПриСписанииОС.ПостояннаяРазница <> 0)
	|
	|		И (ВыбытиеОС.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)
	|			ИЛИ ЕСТЬNULL(ВспомогательныеДанные.НедвижимоеИмущество, ЛОЖЬ)
	|			ИЛИ ВыбытиеОС.ПраваПерешли)
	|
	|	) КАК ВыбытиеОС_Распределение
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|		ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|			И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	ВыбытиеОС.Ссылка,
	|	ВыбытиеОС_Распределение.Период,
	|	ВыбытиеОС.ИдентификаторСтроки,
	|	ВыбытиеОС.СтатьяРасходов,
	|	ВыбытиеОС.АналитикаРасходов,
	|	ВыбытиеОС.АналитикаАктивовПассивов,
	|	ВыбытиеОС.НастройкаСчетовУчета,
	|	ВыбытиеОС_Распределение.Организация,
	|	ВыбытиеОС_Распределение.Подразделение,
	|	ВыбытиеОС_Распределение.СтатьяРасходов,
	|	ВыбытиеОС_Распределение.АналитикаРасходов,
	|	ВыбытиеОС_Распределение.НаправлениеДеятельности";
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.Сумма",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сумма_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаБезНДС",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаБезНДС_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаУпр",
		"ВыбытиеОС_Распределение.БазаУУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяУУ",
		"ВыбытиеОС_Распределение.СуммаБазыУУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаУпр_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаРегл",
		"ВыбытиеОС_Распределение.БазаБУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяБУ",
		"ВыбытиеОС_Распределение.СуммаБазыБУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаРегл_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.СуммаНУ",
		"ВыбытиеОС_Распределение.БазаНУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяНУ",
		"ВыбытиеОС_Распределение.СуммаБазыНУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУ_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"РасходыПриСписанииОС.ПостояннаяРазница",
		"ВыбытиеОС_Распределение.БазаПР",
		"ВыбытиеОС_Распределение.БазаНакопленнаяПР",
		"ВыбытиеОС_Распределение.СуммаБазыПР");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПостояннаяРазница_Распределение", ТекстРаспределенияСуммы);
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеОтрицательногоОстатка
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.Дата КАК Дата,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СтатьяРасходовДоходов КАК СтатьяДоходов,
	|	ТаблицаТовары.АналитикаДоходов КАК АналитикаДоходов,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ПрочееОприходование.Склад КАК Склад,
	|	ПрочееОприходование.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.Сумма КАК Сумма
	|	
	|ПОМЕСТИТЬ ПрочееОприходование
	|
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходование
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаТовары.Ссылка = ПрочееОприходование.Ссылка
	|ГДЕ
	|	ПрочееОприходование.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС)
	|	И ПрочееОприходование.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПрочееОприходование.Организация В (&МассивОрганизаций)
	|	И ПрочееОприходование.Проведен
	|	И (ПрочееОприходование.Ссылка В (&СписокДокументов)
	|		ИЛИ &БезОтбораДокументов)
	|
	|	И ТаблицаТовары.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				РасходыПриСписанииОС.АналитикаРасходов
	|			ИЗ
	|				РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|			ГДЕ
	|				РасходыПриСписанииОС.Сумма < 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ПрочееОприходование.Сумма) КАК СуммаБазы
	|
	|ПОМЕСТИТЬ ПрочееОприходование_СуммаБазы
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочееОприходование.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СУММА(ЕСТЬNULL(ПрочееОприходование_Предыдущие.Сумма, 0)) КАК БазаНакопленная
	|	
	|ПОМЕСТИТЬ ПрочееОприходование_БазаНакопленная
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование КАК ПрочееОприходование_Предыдущие
	|		ПО ПрочееОприходование_Предыдущие.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|			И (ПрочееОприходование_Предыдущие.Ссылка < ПрочееОприходование.Ссылка
	|				ИЛИ ПрочееОприходование_Предыдущие.Ссылка = ПрочееОприходование.Ссылка
	|					И ПрочееОприходование_Предыдущие.НомерСтроки < ПрочееОприходование.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочееОприходование.ОсновноеСредство,
	|	ПрочееОприходование.Ссылка,
	|	ПрочееОприходование.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка КАК Ссылка,
	|	ПрочееОприходование.ОсновноеСредство КАК ОсновноеСредство,
	|	ПрочееОприходование.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|
	|	ПрочееОприходование.Сумма КАК База,
	|	ПрочееОприходование_БазаНакопленная.БазаНакопленная КАК БазаНакопленная,
	|	ПрочееОприходование_СуммаБазы.СуммаБазы КАК СуммаБазы
	|
	|ПОМЕСТИТЬ ПрочееОприходование_Распределение
	|	
	|ИЗ
	|	ПрочееОприходование КАК ПрочееОприходование
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование_СуммаБазы КАК ПрочееОприходование_СуммаБазы
	|		ПО ПрочееОприходование_СуммаБазы.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрочееОприходование_БазаНакопленная КАК ПрочееОприходование_БазаНакопленная
	|		ПО ПрочееОприходование_БазаНакопленная.ОсновноеСредство = ПрочееОприходование.ОсновноеСредство
	|			И ПрочееОприходование_БазаНакопленная.Ссылка = ПрочееОприходование.Ссылка
	|			И ПрочееОприходование_БазаНакопленная.ИдентификаторСтроки = ПрочееОприходование.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочееОприходование.Ссылка                        КАК Регистратор,
	|	ПрочееОприходование.Дата                          КАК Период,
	|
	|	ПрочееОприходование.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ПрочееОприходование.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ПрочееОприходование.Склад                         КАК Склад,
	|	ПрочееОприходование.ВидЗапасов                    КАК ВидЗапасов,
	|	ПрочееОприходование.Номенклатура                  КАК Номенклатура,
	|	ПрочееОприходование.Подразделение                 КАК КорПодразделение,
	|	ПрочееОприходование.НаправлениеДеятельности       КАК КорНаправлениеДеятельности,
	|	ПрочееОприходование.Назначение                    КАК Назначение,
	|
	|	РасходыПриСписанииОС.Организация                  КАК Организация,
	|	РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|	РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|	РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|	РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &Сумма_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &СуммаБезНДС_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаУпр < 0
	|			ТОГДА &СуммаУпр_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА РасходыПриСписанииОС.СуммаРегл < 0
	|			ТОГДА &СуммаРегл_Распределение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл
	|
	|ПОМЕСТИТЬ КорректировкаСтоимостиТМЦ
	| 
	|ИЗ
	|	РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование_Распределение КАК ПрочееОприходование_Распределение
	|		ПО ПрочееОприходование_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочееОприходование КАК ПрочееОприходование
	|		ПО ПрочееОприходование.Ссылка = ПрочееОприходование_Распределение.Ссылка
	|			И ПрочееОприходование.ИдентификаторСтроки = ПрочееОприходование_Распределение.ИдентификаторСтроки
	|
	|ГДЕ
	|	(РасходыПриСписанииОС.СуммаУпр < 0
	|		ИЛИ РасходыПриСписанииОС.СуммаРегл < 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеОС.Ссылка                                  КАК Регистратор,
	|	ВыбытиеОС.Дата                                    КАК Период,
	|
	|	ВыбытиеОС.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
	|
	|	РасходыПриСписанииОС.Организация                  КАК Организация,
	|	РасходыПриСписанииОС.Подразделение                КАК Подразделение,
	|	РасходыПриСписанииОС.СтатьяРасходов               КАК СтатьяРасходов,
	|	РасходыПриСписанииОС.АналитикаРасходов            КАК АналитикаРасходов,
	|	РасходыПриСписанииОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	&СуммаНУ_Распределение КАК СуммаНУ,
	|	&ПостояннаяРазница_Распределение КАК ПостояннаяРазница
	|
	|ПОМЕСТИТЬ КорректировкаРасходов
	| 
	|ИЗ
	|	РасходыПриСписанииОС КАК РасходыПриСписанииОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС_Распределение КАК ВыбытиеОС_Распределение
	|		ПО ВыбытиеОС_Распределение.ОсновноеСредство = РасходыПриСписанииОС.АналитикаРасходов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеОС КАК ВыбытиеОС
	|		ПО ВыбытиеОС.Ссылка = ВыбытиеОС_Распределение.Ссылка
	|			И ВыбытиеОС.ОсновноеСредство = ВыбытиеОС_Распределение.ОсновноеСредство
	|
	|ГДЕ
	|	(РасходыПриСписанииОС.СуммаНУ < 0)";
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.Сумма",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Сумма_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаБезНДС",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаБезНДС_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаУпр",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаУпр_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаРегл",
		"ПрочееОприходование_Распределение.База",
		"ПрочееОприходование_Распределение.БазаНакопленная",
		"ПрочееОприходование_Распределение.СуммаБазы");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаРегл_Распределение", ТекстРаспределенияСуммы);
	
	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.СуммаНУ",
		"ВыбытиеОС_Распределение.БазаНУ",
		"ВыбытиеОС_Распределение.БазаНакопленнаяНУ",
		"ВыбытиеОС_Распределение.СуммаБазыНУ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУ_Распределение", ТекстРаспределенияСуммы);

	ТекстРаспределенияСуммы = ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы(
		"-РасходыПриСписанииОС.ПостояннаяРазница",
		"ВыбытиеОС_Распределение.БазаПР",
		"ВыбытиеОС_Распределение.БазаНакопленнаяПР",
		"ВыбытиеОС_Распределение.СуммаБазыПР");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПостояннаяРазница_Распределение", ТекстРаспределенияСуммы);
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыОперации.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыОперации.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОперации.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОперации.КонецПериода);
	Запрос.УстановитьПараметр("НачалоСледующегоПериода", ПараметрыОперации.КонецПериода + 1);
	
	Если ПараметрыОперации.СписокДокументов <> Неопределено Тогда
		Запрос.УстановитьПараметр("СписокДокументов", ПараметрыОперации.СписокДокументов);
		Запрос.УстановитьПараметр("БезОтбораДокументов", Ложь);
	Иначе
		Запрос.УстановитьПараметр("СписокДокументов", Новый Массив);
		Запрос.УстановитьПараметр("БезОтбораДокументов", Истина);
	КонецЕсли;

	СтатьяВыбытиеОС = Новый Массив;
	СтатьяВыбытиеОС.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС);
	СтатьяВыбытиеОС.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС);
	Запрос.УстановитьПараметр("СтатьяВыбытиеОС", СтатьяВыбытиеОС);
	
	Запрос.Выполнить();
	
	ИспользуемыеВТ = "СписаниеРасходов,КорректировкаСтоимостиТМЦ,КорректировкаРасходов";
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыОперации.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
КонецПроцедуры

Процедура ВыбратьДокументыИЗаписатьДвижения(ПараметрыОперации)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	СписокДокументов.Период КАК Период,
	|	СписокДокументов.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеРасходов.Регистратор КАК Ссылка,
	|		СписаниеРасходов.Период КАК Период,
	|		СписаниеРасходов.Организация КАК Организация
	|	ИЗ
	|		СписаниеРасходов КАК СписаниеРасходов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		КорректировкаСтоимостиТМЦ.Регистратор КАК Ссылка,
	|		КорректировкаСтоимостиТМЦ.Период КАК Период,
	|		КорректировкаСтоимостиТМЦ.Организация КАК Организация
	|	ИЗ
	|		КорректировкаСтоимостиТМЦ КАК КорректировкаСтоимостиТМЦ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		КорректировкаРасходов.Регистратор КАК Ссылка,
	|		КорректировкаРасходов.Период КАК Период,
	|		КорректировкаРасходов.Организация КАК Организация
	|	ИЗ
	|		КорректировкаРасходов КАК КорректировкаРасходов
	|
	|	) КАК СписокДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыОперации.МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыОперации.МенеджерВременныхТаблиц);
	
	Пока Выборка.Следующий() Цикл
	
		НачатьТранзакцию();
		Попытка
			
			ТаблицыПроведения = ПодготовитьТаблицыДвиженийДокумента(ПараметрыОперации.МенеджерВременныхТаблиц, Выборка);
			
			ДокументОбъект = ПроведениеДокументов.ЭмуляцияДокумента(Выборка.Ссылка, Выборка.Период);
			
			УстановитьПризнакВыполненияОперации(ДокументОбъект);
		
			ВнеоборотныеАктивыСлужебный.ЗаписатьТаблицыДвижений(
				ТаблицыПроведения, 
				ДокументОбъект, 
				ПараметрыОперации.МенеджерВременныхТаблиц, 
				Истина, 
				Перечисления.ВидыИсточниковДвижений.ЗакрытиеРасходовОтВыбытияОС);
		
			ВнеоборотныеАктивыСлужебный.ОбновитьДвиженияАктивовПассивов(Выборка.Ссылка);
			
			Если ПараметрыОперации.СформироватьЗадания Тогда
				ПроведениеДокументов.СформироватьЗаданияНаОтложенныеДвижения(ДокументОбъект, ПараметрыОперации.МенеджерВременныхТаблиц);
			КонецЕсли;
			
			Если ПараметрыОперации.ВернутьДокументыКОтражению Тогда
				ВнеоборотныеАктивыСлужебный.ВернутьДокументыКОтражению(
					Выборка.Ссылка, Выборка.Организация, Выборка.Период, ТаблицыПроведения);
			КонецЕсли;
			
			ПараметрыОперации.КоличествоДанных = ПараметрыОперации.КоличествоДанных + 1;
			
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыОперации.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = НСтр("ru = 'Не удалось сформировать движения по документу %1, по причине:
                                |%2';
                                |en = 'Cannot generate register records for document %1. Reason:
                                |%2'");
			
			ТекстОшибки = СтрШаблон(ТекстОшибки, 
				Строка(Выборка.Ссылка),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыДвиженийДокумента(МенеджерВременныхТаблиц, Выборка)
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
	ТаблицыПроведения = МенеджерОбъекта.ТаблицыДвиженийПриЗакрытииРасходовОтВыбытияОС(Выборка.Ссылка, МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	Возврат ТаблицыПроведения;
	
КонецФункции

// Параметры выполнения операции "ЗакрытиеРасходовОтВыбытияОС".
// 
// Параметры:
//  ПараметрыРасчета - Структура - Параметры расчета операции закрытия месяца.
// 
// Возвращаемое значение:
//  Структура - содержит параметры:
// 		* МассивОрганизаций - Массив из СправочникСсылка.Организации - Организации, для которых выполняется операция.
// 		* НачалоПериода - Дата - Начало периода, в котором выполняется операция.
// 		* КонецПериода - Дата - Конец периода, в котором выполняется операция.
// 		* ВернутьДокументыКОтражению - Булево - Истина, если документы нужно вернуть к отражению в регл. и межд. учете.
// 		* СписокДокументов - Массив, Неопределено - Документы, для которых нужно выполнить операцию.
//		* КоличествоДанных - Число - Количество обработанных данных.
//		* МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц.
Функция ПараметрыОперации(ПараметрыРасчета = Неопределено)
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("МассивОрганизаций");
	ПараметрыОперации.Вставить("НачалоПериода");
	ПараметрыОперации.Вставить("КонецПериода");
	ПараметрыОперации.Вставить("ВернутьДокументыКОтражению", Истина);
	ПараметрыОперации.Вставить("СформироватьЗадания", Истина);
	ПараметрыОперации.Вставить("СписокДокументов", Неопределено);
	ПараметрыОперации.Вставить("КоличествоДанных", 0);
	ПараметрыОперации.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ПараметрыОперации.МассивОрганизаций = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыОперации.НачалоПериода = НачалоМесяца(ПараметрыРасчета.Период);
		ПараметрыОперации.КонецПериода = КонецМесяца(ПараметрыРасчета.Период);
	КонецЕсли;
	
	Возврат ПараметрыОперации;
	
КонецФункции

Процедура ОпределитьИзмененияВРегистреПрочиеРасходыДляЗакрытияРасходовОтВыбытияОС(ДанныеТаблиц)
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаИзмененийПрочиеРасходы") = Неопределено Тогда
		Возврат;	
	КонецЕсли;
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период            КАК Период,
	|	Таблица.Организация       КАК Организация,
	|	Таблица.Регистратор       КАК Документ
	|ПОМЕСТИТЬ ПрочиеРасходы_ЗаданияКЗакрытиюРасходовОтВыбытияОСИзменение
	|ИЗ
	|	ТаблицаИзмененийПрочиеРасходы КАК Таблица
	|ГДЕ
	|	Таблица.СтатьяРасходов В (
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС),
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц.Вставить("ПрочиеРасходы_ЗаданияКЗакрытиюРасходовОтВыбытияОСИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

Процедура ПодготовитьВспомогательныеДанные(СписокЗапросов)
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЛОЖЬ КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВспомогательныеДанные";
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВспомогательныеДанные
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация В (&МассивОрганизаций)
	|				И ОсновноеСредство В (
	|					ВЫБРАТЬ
	|						ВыбытиеОС.ОсновноеСредство
	|					ИЗ
	|						ВыбытиеОС КАК ВыбытиеОС)) КАК ПорядокУчетаОСБУ
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	//-- Локализация

	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура УстановитьПризнакВыполненияОперации(ДокументОбъект) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяОперации(), Истина);
	
КонецПроцедуры

Функция ИмяОперации()
	Возврат "ЗакрытиеРасходовОтВыбытияОС";
КонецФункции

#КонецОбласти
