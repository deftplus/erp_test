// Получить настройку процесса выбора по его владельцу.
//
// Параметры:
//  ВладелецОбъектовВыбора - ОпределяемыйТип.ВладельцыОбъектовВыбора - объект-владелец выбора.
//  СоздаватьНовуюНастройку - Булево - Истина - создать настройку, если ее нет. Ложь - не создавать.
// 
// Возвращаемое значение:
//	СправочникСсылка.НастройкиПроцессаВыбора - настройка процесса выбора.
//	ПустаяСсылка() - если флаг СоздаватьНовуюНастройку == Ложь и настройка не существует.
//
Функция НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора, СоздаватьНовуюНастройку=Ложь) Экспорт
	
	НастройкаПроцессаВыбора = Справочники.НастройкиПроцессаВыбора.ПустаяСсылка();
	
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		Возврат НастройкаПроцессаВыбора;
	КонецЕСли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПроцессовВыбора.НастройкаПроцессаВыбора КАК НастройкаПроцессаВыбора
		|ИЗ
		|	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|ГДЕ
		|	НастройкиПроцессовВыбора.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			НастройкаПроцессаВыбора = ВыборкаДетальныеЗаписи.НастройкаПроцессаВыбора;
		КонецЕсли;
		
	КонецЕсли;

	Если СоздаватьНовуюНастройку И НЕ ЗначениеЗаполнено(НастройкаПроцессаВыбора) Тогда
		// создаем настройку
		ОбъектНастройка = Справочники.НастройкиПроцессаВыбора.СоздатьЭлемент();
		ОбъектНастройка.Наименование = Строка(ВладелецОбъектовВыбора);
		ОбъектНастройка.Записать();
		
		НастройкаПроцессаВыбора = ОбъектНастройка.Ссылка;
		
		// и назначем ее владельцу процесса
		НаборЗаписей = РегистрыСведений.НастройкиПроцессовВыбора.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Владелец = ВладелецОбъектовВыбора;
		НоваяЗапись.НастройкаПроцессаВыбора = НастройкаПроцессаВыбора;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	Возврат НастройкаПроцессаВыбора;
КонецФункции

Процедура УдалитьНастройкуПроцесса(ВладелецОбъектовВыбора) Экспорт
	// удалим из регистра настроек
	НаборЗаписей = РегистрыСведений.НастройкиПроцессовВыбора.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Записать();
КонецПроцедуры

// Помечает только если настройка
// Вызываем при удалении записи регистра НастройкиПроцессаВыбора
Процедура ПометитьНаУдалениеНастройкуПроцесса(ВладелецОбъектовВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкаПоВладельцу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроцессовВыбора КАК НастройкаНеПоВлдадельцу
		|		ПО НастройкаПоВладельцу.НастройкаПроцессаВыбора = НастройкаНеПоВлдадельцу.НастройкаПроцессаВыбора
		|			И (НастройкаПоВладельцу.Владелец = &Владелец)
		|			И (НастройкаНеПоВлдадельцу.Владелец <> &Владелец)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаПоВладельцу.НастройкаПроцессаВыбора КАК НастройкаПроцессаВыбора
		|ИЗ
		|	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкаПоВладельцу
		|ГДЕ
		|	НастройкаПоВладельцу.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если мРезультатЗапроса[0].Пустой() Тогда
		Если НЕ мРезультатЗапроса[1].Пустой() Тогда
			ВыборкаНастроек = мРезультатЗапроса[1].Выбрать();
			Если ВыборкаНастроек.Следующий() Тогда
				НастройкаВыбора = ВыборкаНастроек.НастройкаПроцессаВыбора;
				ОбъектНастройка = НастройкаВыбора.ПолучитьОбъект();
				ОбъектНастройка.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ЗарегистрироватьОбъектВыбора(ВладелецОбъектовВыбора, СсылкаОбъектаВыбора) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СсылкаОбъектаВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		// удалим регистрацию объекта
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(СсылкаОбъектаВыбора);
		НаборЗаписей.Записать();
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
		|ГДЕ
		|	ОбъектыВыбора.Объект = &Объект
		|	И ОбъектыВыбора.Владелец = &Владелец
		|	И ОбъектыВыбора.ЭтапВыбора <> ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиПроцессаВыбораЭтапыВыбора.Этап
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|		ПО НастройкиПроцессаВыбораЭтапыВыбора.Ссылка = НастройкиПроцессовВыбора.НастройкаПроцессаВыбора
		|			И (НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки = 1)
		|			И (НастройкиПроцессовВыбора.Владелец = &Владелец)";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	Запрос.УстановитьПараметр("Объект", СсылкаОбъектаВыбора);
	
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если мРезультатЗапроса[0].Пустой() Тогда
		
		ВыборкаПервогоЭтапаВыбора = мРезультатЗапроса[1].Выбрать();
		Если ВыборкаПервогоЭтапаВыбора.Следующий() Тогда
			ТекущийЭтап = ВыборкаПервогоЭтапаВыбора.Этап;
		Иначе
			ТекущийЭтап = Справочники.ЭтапыОценки.ПустаяСсылка();
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
		НаборЗаписей.Отбор.Объект.Установить(СсылкаОбъектаВыбора);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Владелец = ВладелецОбъектовВыбора;
		НоваяЗапись.Объект = СсылкаОбъектаВыбора;
		НоваяЗапись.ЭтапВыбора = ТекущийЭтап;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура УстановитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбора, ТекущийЭтапВыбора, ПроцессВыбораЗавершен = Ложь, НомерПереторжкиВход = 0) Экспорт
		
	НаборЗаписей = РегистрыСведений.СостояниеПроцессовВыбора.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Отбор.НомерПереторжки.Установить(НомерПереторжкиВход);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Владелец				 = ВладелецОбъектовВыбора;
	НоваяЗапись.ТекущийЭтапВыбора		 = ТекущийЭтапВыбора;
	НоваяЗапись.ПроцессВыбораЗавершен	 = ПроцессВыбораЗавершен;
	НоваяЗапись.НомерПереторжки			 = НомерПереторжкиВход;
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Устанавливает в этапе выбора ЭтапВход для объекта ВладелецОбъектовВыбораВход
// состояние выбора ПроцессВыбораЗавершен. При необходимости записывает номер переторжки.
Процедура УстановитьСостояниеПроцессаСУчетомПереторжки(ВладелецОбъектовВыбораВход, ЭтапВход, ПроцессВыбораЗавершен = Ложь) Экспорт
	Если ТипЗнч(ВладелецОбъектовВыбораВход) = Тип("СправочникСсылка.Лоты") Тогда
		Закупка = ВладелецОбъектовВыбораВход.ЗакупочнаяПроцедура;
		НомерПереторжки = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(Закупка);
		УстановитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбораВход, ЭтапВход, ПроцессВыбораЗавершен, НомерПереторжки);
	Иначе
		УстановитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбораВход, ЭтапВход, ПроцессВыбораЗавершен);
	КонецЕсли;
КонецПроцедуры		// УстановитьСостояниеПроцессаСУчетомПереторжки()

// Возвращает структуру описания состояния для объекта выбора ВладелецОбъектовВыбораВход.
// При необходимости учитывает текущий номер переторжки.
Функция ПолучитьСостояниеПроцессаСУчетомПереторжки(ВладелецОбъектовВыбораВход) Экспорт
	РезультатФункции = Новый Структура;
	Если ТипЗнч(ВладелецОбъектовВыбораВход) = Тип("СправочникСсылка.Лоты") Тогда
		Закупка = ВладелецОбъектовВыбораВход.ЗакупочнаяПроцедура;
		НовыйНомерПереторжки = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(Закупка);
		РезультатФункции = ВыборОбъектовУХ.ПолучитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбораВход, НовыйНомерПереторжки);
	Иначе
		РезультатФункции = ВыборОбъектовУХ.ПолучитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбораВход);
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ПолучитьСостояниеПроцессаСУчетомПереторжки()

Функция ПолучитьСостояниеПроцессаВыбора(ВладелецОбъектовВыбора, НомерПереторжкиВход = Неопределено) Экспорт
	
	ОписаниеСостояния = Новый Структура("ТекущийЭтапВыбора, ПроцессВыбораЗавершен", Справочники.ЭтапыОценки.ПустаяСсылка(), Ложь);
	
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		Возврат ОписаниеСостояния;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеПроцессовВыбора.ТекущийЭтапВыбора КАК ТекущийЭтапВыбора,
		|	СостояниеПроцессовВыбора.ПроцессВыбораЗавершен КАК ПроцессВыбораЗавершен
		|ИЗ
		|	РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
		|ГДЕ
		|	СостояниеПроцессовВыбора.Владелец = &Владелец
		|	И ВЫБОР
		|			КОГДА &ЕстьПереторжка
		|				ТОГДА СостояниеПроцессовВыбора.НомерПереторжки = &НомерПеререторжки
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиПроцессаВыбораЭтапыВыбора.Этап КАК Этап
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|		ПО НастройкиПроцессаВыбораЭтапыВыбора.Ссылка = НастройкиПроцессовВыбора.НастройкаПроцессаВыбора
		|			И (НастройкиПроцессовВыбора.Владелец = &Владелец)
		|			И (НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки = 1)";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	Если НомерПереторжкиВход <> Неопределено Тогда
		Запрос.УстановитьПараметр("НомерПеререторжки", НомерПереторжкиВход);
		Запрос.УстановитьПараметр("ЕстьПереторжка", Истина);
	Иначе
		Запрос.УстановитьПараметр("НомерПеререторжки", 0);
		Запрос.УстановитьПараметр("ЕстьПереторжка", Ложь);
	КонецЕсли;
	
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если мРезультатЗапроса[0].Пустой() Тогда
		// Установим процесс на первый этап
		ОписаниеСостояния.ПроцессВыбораЗавершен = Ложь;
		
		ВыборкаДетальныеЗаписи = мРезультатЗапроса[1].Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ОписаниеСостояния.ТекущийЭтапВыбора = ВыборкаДетальныеЗаписи.Этап;
			УстановитьСостояниеПроцессаСУчетомПереторжки(ВладелецОбъектовВыбора, ОписаниеСостояния.ТекущийЭтапВыбора);
		КонецЕсли;
	
	Иначе
		ВыборкаДетальныеЗаписи = мРезультатЗапроса[0].Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ОписаниеСостояния, ВыборкаДетальныеЗаписи);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОписаниеСостояния;
	
КонецФункции

// Регистрирует объект выбора.
// Вызывается из подписки на событие РегистрацияОбъектаСравненияПриЗаписи.
// 
Процедура РегистрацияПриЗаписиОБъектаВыбора(Источник, Отказ) Экспорт
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	ТипОбъекта = ТипЗнч(Источник);
	Если ТипОбъекта = Тип("СправочникОбъект.Проекты") Тогда
		ВладелецОбъектаВыбора = Источник.РазделИнвестиционнойПрограммы;
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПредложениеПоставщика") Тогда
		ВладелецОбъектаВыбора = Источник.Лот;
		Если НЕ Источник.Проведен ИЛИ НЕ Источник.ДопущенКУчастию Тогда
			Если ЗначениеЗаполнено(Источник.Ссылка) Тогда
				ОтменитьРегистрациюОбъектаВыбора(ВладелецОбъектаВыбора, Источник.Ссылка);
			КонецЕсли;
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ВыборОбъектовУХ.ЗарегистрироватьОбъектВыбора(ВладелецОбъектаВыбора, Источник.Ссылка);
КонецПроцедуры

// Очищает все регистры по измерениям объекта и владельца выбора.
//
Процедура ОтменитьРегистрациюОбъектаВыбора(ВладелецОбъектовВыбора, ОбъектВыбора) Экспорт
	НачатьТранзакцию();
	
	// Удалим регистрацию
	НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектВыбора);
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Записать();
	
	// Удалим все значения критериев
	НаборЗаписей = РегистрыСведений.ЗначенияКритериевОценки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Отбор.ОбъектОценки.Установить(ОбъектВыбора);
	НаборЗаписей.Записать();
	
	// Удалим состояния выбора объекта
	НаборЗаписей = РегистрыСведений.СостояниеОценкиОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Отбор.ОбъектОценки.Установить(ОбъектВыбора);
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

// Параметры:
//	ВладелецОбъектовВыбора - ОпределяемыйТип.ОбъектыВыбора, либо Справочник.НастройкиПроцессаВыбора
//		В первом случае отбор объектов делаем по владельцу.
//		Во втором, по всем владельцам связанным с настройкой (по умолчанию: один владелец - одна настройка).
//
Процедура ОбновитьРегистрациюОбъектовВыбора(ВладелецОбъектовВыбора) Экспорт
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		Возврат;
	КонецЕСли;
	
	Если ТипЗнч(ВладелецОбъектовВыбора) = Тип("СправочникСсылка.НастройкиПроцессаВыбора") Тогда
		НастройкаПроцессаВыбора = ВладелецОбъектовВыбора;
		флОтборПоВладельцу = Ложь;
	Иначе
		НастройкаПроцессаВыбора = НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора);
		флОтборПоВладельцу = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НастройкаПроцессаВыбора) Тогда
		// нет настройки, нет объектов для регистрации
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
		НаборЗаписей.Записать();
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если флОтборПоВладельцу Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОбъектыВыбора.Объект КАК Объект,
			|	ОбъектыВыбора.Владелец КАК Владелец
			|ИЗ
			|	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
			|ГДЕ
			|	ОбъектыВыбора.ЭтапВыбора = ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПустаяСсылка)
			|	И ОбъектыВыбора.Владелец = &Владелец
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	НастройкиПроцессаВыбораЭтапыВыбора.Этап КАК Этап
			|ИЗ
			|	Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
			|ГДЕ
			|	НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки = 1
			|	И НастройкиПроцессаВыбораЭтапыВыбора.Ссылка = &НастройкаПроцессаВыбора";
			
		Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
		
	Иначе
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОбъектыВыбора.Объект КАК Объект,
			|	ОбъектыВыбора.Владелец КАК Владелец
			|ИЗ
			|	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
			|		ПО ОбъектыВыбора.Владелец = НастройкиПроцессовВыбора.Владелец
			|			И (НастройкиПроцессовВыбора.НастройкаПроцессаВыбора = &НастройкаПроцессаВыбора)
			|ГДЕ
			|	ОбъектыВыбора.ЭтапВыбора = ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	НастройкиПроцессаВыбораЭтапыВыбора.Этап КАК Этап
			|ИЗ
			|	Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
			|ГДЕ
			|	НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки = 1
			|	И НастройкиПроцессаВыбораЭтапыВыбора.Ссылка = &НастройкаПроцессаВыбора";
			
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НастройкаПроцессаВыбора", НастройкаПроцессаВыбора);
	
		
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если НЕ мРезультатЗапроса[0].Пустой() Тогда
		
		ВыборкаПервогоЭтапаВыбора = мРезультатЗапроса[1].Выбрать();
		Если ВыборкаПервогоЭтапаВыбора.Следующий() Тогда
			ПервыйЭтап = ВыборкаПервогоЭтапаВыбора.Этап;
		Иначе
			Возврат;
		КонецЕсли;
	
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		
		ВыборкаОбъектовИВладельцев = мРезультатЗапроса[0].Выбрать();
		Пока ВыборкаОбъектовИВладельцев.Следующий() Цикл
			
			НаборЗаписей.Отбор.Владелец.Установить(ВыборкаОбъектовИВладельцев.Владелец);
			НаборЗаписей.Отбор.Объект.Установить(ВыборкаОбъектовИВладельцев.Объект);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Владелец = ВыборкаОбъектовИВладельцев.Владелец;
			НоваяЗапись.Объект = ВыборкаОбъектовИВладельцев.Объект;
			НоваяЗапись.ЭтапВыбора = ПервыйЭтап;
			НаборЗаписей.Записать();
			
			НаборЗаписей.Очистить();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Сбрасывает состояние процесса выбора по объекту ВладелецОбъектовВыбораВход
// на первый этап ЭтапВход.
Процедура РестартСостояния(ВладелецОбъектовВыбораВход, ЭтапВход) Экспорт
	Попытка
		// Очистка существующих записей.
		НаборЗаписей = РегистрыСведений.СостояниеПроцессовВыбора.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбораВход); 
		НаборЗаписей.Записать();
		// Создание новой записи для первого этапа.
		НаборЗаписей = РегистрыСведений.СостояниеПроцессовВыбора.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбораВход); 
		НаборЗаписей.Отбор.НомерПереторжки.Установить(0); 
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Владелец				 = ВладелецОбъектовВыбораВход; 
		НоваяЗапись.НомерПереторжки			 = 0; 
		НоваяЗапись.ТекущийЭтапВыбора		 = ЭтапВход; 
		НоваяЗапись.ПроцессВыбораЗавершен	 = Ложь; 
		НаборЗаписей.Записать(); 	
	Исключение
		ТекстСообщения = НСтр("ru = 'При рестарте состояния процесса выбора для объекта ""%Объект%"" произошли ошибки: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ВладелецОбъектовВыбораВход));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецПопытки;
КонецПроцедуры		// РестартСостояния()

Процедура РестартПроцессаВыбора(ВладелецОбъектовВыбора) Экспорт
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		Возврат;
	КонецЕСли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПроцессовВыбора.НастройкаПроцессаВыбора
		|ПОМЕСТИТЬ НастройкиПроцессов
		|ИЗ
		|	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|ГДЕ
		|	НастройкиПроцессовВыбора.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыВыбора.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
		|ГДЕ
		|	ОбъектыВыбора.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиПроцессаВыбораЭтапыВыбора.Этап КАК Этап
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиПроцессов КАК НастройкиПроцессов
		|		ПО НастройкиПроцессаВыбораЭтапыВыбора.Ссылка = НастройкиПроцессов.НастройкаПроцессаВыбора
		|			И (НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки = 1)";
		
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	
		
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПервогоЭтапаВыбора = мРезультатЗапроса[2].Выбрать();
	Если ВыборкаПервогоЭтапаВыбора.Следующий() Тогда
		ПервыйЭтап = ВыборкаПервогоЭтапаВыбора.Этап;
	Иначе
		ПервыйЭтап = Справочники.ЭтапыОценки.ПустаяСсылка();
	КонецЕсли;
	
	// Сбросим состояние процесса на первый этап.
	УстановитьСостояниеПроцессаСУчетомПереторжки(ВладелецОбъектовВыбора, ПервыйЭтап, Ложь);
	
	// Сбросим состояния оценки объектов
	НаборЗаписей = РегистрыСведений.СостояниеОценкиОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписей.Записать();
		
	// Установим состояние объектов регистрации
	Если мРезультатЗапроса[1].Пустой() Тогда
		
		// нет настройки, нет объектов для регистрации
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
		НаборЗаписей.Записать();
		
	Иначе
		
		// Сбросим состояние объектов выбора
		НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
		
		ВыборкаОбъектовИВладельцев = мРезультатЗапроса[1].Выбрать();
		Пока ВыборкаОбъектовИВладельцев.Следующий() Цикл
			
			НаборЗаписей.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
			НаборЗаписей.Отбор.Объект.Установить(ВыборкаОбъектовИВладельцев.Объект);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Владелец = ВладелецОбъектовВыбора;
			НоваяЗапись.Объект = ВыборкаОбъектовИВладельцев.Объект;
			НоваяЗапись.ЭтапВыбора = ПервыйЭтап;
			НаборЗаписей.Записать();
			
			НаборЗаписей.Очистить();
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Удалим все значения критериев
	НаборЗаписейЗначений = РегистрыСведений.ЗначенияКритериевОценки.СоздатьНаборЗаписей();
	НаборЗаписейЗначений.Отбор.Владелец.Установить(ВладелецОбъектовВыбора);
	НаборЗаписейЗначений.Записать();
	
КонецПроцедуры

// Возвращает:
//	Булево - Истина - сотрудник может оценивать объект.
//		Ложь - сотрудник не может оценивать объект.
//
Функция СотрудникМожетОцениватьПоВладельцу(Сотрудник, ВладелецОбъектовВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
		|		ПО (НастройкиПроцессовВыбора.Владелец = &ВладелецОбъектовВыбора)
		|			И НастройкиПроцессовВыбора.НастройкаПроцессаВыбора = НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка
		|			И (НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник = &Сотрудник)
		|			И (НЕ НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка.ПометкаУдаления)";
		
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ВладелецОбъектовВыбора", ВладелецОбъектовВыбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

// Возвращает:
//	Массив, элементы - ОпределяемыйТип.ВладельцыОбъектовВыбора, у которых в настройках процесса выбора указан данный сотрудник.
//
Функция ПолучитьВладельцевВыбораПоСотруднику(Сотрудник, ПроверитьВозможностьЗакрыватьЭтапОценки=Ложь, ТолькоАктивные=Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка
		|ПОМЕСТИТЬ НастройкиВыбораПоСотруднику
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
		|ГДЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник = &Сотрудник
		|	И НЕ НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка.ПометкаУдаления
		|	И НастройкиПроцессаВыбораОценочнаяКомиссия.ЗакрываетЭтапОценки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиПроцессовВыбора.Владелец
		|ИЗ
		|	НастройкиВыбораПоСотруднику КАК НастройкиВыбораПоСотруднику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
		|			ПО НастройкиПроцессовВыбора.Владелец = СостояниеПроцессовВыбора.Владелец
		|		ПО НастройкиВыбораПоСотруднику.Ссылка = НастройкиПроцессовВыбора.НастройкаПроцессаВыбора
		|ГДЕ
		|	НЕ НастройкиПроцессовВыбора.Владелец.ПометкаУдаления
		|	И НЕ СостояниеПроцессовВыбора.ПроцессВыбораЗавершен";
		
	Если НЕ ПроверитьВозможностьЗакрыватьЭтапОценки Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НастройкиПроцессаВыбораОценочнаяКомиссия.ЗакрываетЭтапОценки", "");
	КонецЕсли;
	
	Если НЕ ТолькоАктивные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ СостояниеПроцессовВыбора.ПроцессВыбораЗавершен", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Владелец");
	
КонецФункции

// Возвращает соответствие типов объектов выбора типам их владельцев.
// Ключ - тип владельца объектов выбора.
// Значение - строка с именем типа объекта выбора, как для функции Тип().
//
Функция СоответствиеОбъектовВыбораВладельцам() Экспорт
	ОбъектыИВладельцы = Новый Соответствие;
	
	// Выбор предложений поставщиков в лоте.
	ОбъектыИВладельцы.Вставить(Тип("СправочникСсылка.Лоты"),"ДокументСсылка.ПредложениеПоставщика");
	
	// Выбор проектов в разделах инвестиционных программ
	ОбъектыИВладельцы.Вставить(Тип("СправочникСсылка.РазделыИнвестиционныхПрограмм"), "СправочникСсылка.Проекты");
	
	Возврат ОбъектыИВладельцы;
КонецФункции

// По типу владельца получаем имя типа объекта выбора.
// Параметры:
//	ТипВладельца - Строка - типа владельца из множества ОперделяемыйТип.ВладельцыОбъектовВыбора. Если строка, то как для функции Тип().
//	ТипРезультата - Число. Определяет тип возвращаемого результата:
//		0 - Строка, имя типа, как для функции Тип();
//		1 - Тип;
//		2 - ОбъектМетаданных по типу.
//
// Возвращает:
//	Строка, Тип, ОбъектМетаданных - описание типа объекта выбора (из множества типов ОпределяемыйТип.ОбъектыВыбора).
//
Функция ИмяТипаОбъектаВыбораПоВладельцу(ТипВладельца, ТипРезультата=0) Экспорт
	
	Если ТипЗнч(ТипВладельца) = Тип("Строка") Тогда
		Если ПустаяСтрока(ТипВладельца) Тогда
			Возврат Тип("Неопределено");
		КонецЕсли;
		ТипДляПоиска = Тип(ТипВладельца);
		
	Иначе
		ТипДляПоиска = ТипВладельца;
	КонецЕсли;
	
	ОбъектыИВладельцы = ВыборОбъектовУХ.СоответствиеОбъектовВыбораВладельцам();
	
	ИмяТипа = ОбъектыИВладельцы[ТипДляПоиска];
	
	Если ТипРезультата = 0 Тогда
		Возврат ИмяТипа;
		
	ИначеЕсли ТипРезультата = 1 Тогда
		Возврат Тип(ИмяТипа);
		
	ИначеЕсли ТипРезультата = 2 Тогда
		Возврат Метаданные.НайтиПоТипу(Тип(ИмяТипа));
	КонецЕсли;
	
	Возврат ИмяТипа
КонецФункции

// Получить интегральную оценку объекта.
Функция ИнтегральнаяОценкаОбъекта(ВладелецОбъектовВыбора, ОбъектОценки, ЭтапОценки=Неопределено, ТолькоВыбранныйЭтап=Ложь) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗначенияКритериевОценки.Значение) КАК Значение,
		|	ЗначенияКритериевОценки.ЭтапОценки,
		|	ЗначенияКритериевОценки.Критерий
		|ПОМЕСТИТЬ МаксимальныеЗначения
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|ГДЕ
		|	ЗначенияКритериевОценки.Владелец = &Владелец
		|	И НЕ ЗначенияКритериевОценки.НеЗаполнен
		|	И ЗначенияКритериевОценки.ЭтапОценки = &ЭтапОценки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияКритериевОценки.Критерий,
		|	ЗначенияКритериевОценки.ЭтапОценки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ЗначенияКритериевОценки.НеЗаполнен
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы
		|						ТОГДА ВЫБОР
		|								КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|									ТОГДА 0
		|								ИНАЧЕ ВЫБОР
		|										КОГДА МаксимальныеЗначения.Значение - ЕСТЬNULL(НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение, 0) = 0
		|											ТОГДА 0
		|										ИНАЧЕ (ЗначенияКритериевОценки.Значение - ЕСТЬNULL(НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение, 0)) / (МаксимальныеЗначения.Значение - ЕСТЬNULL(НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение, 0))
		|									КОНЕЦ
		|							КОНЕЦ * ЗначенияКритериевОценки.Вес
		|					ИНАЧЕ ЗначенияКритериевОценки.БалльноеЗначение / 5 * ЗначенияКритериевОценки.Вес
		|				КОНЕЦ
		|		КОНЕЦ) КАК Оценка
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|		ПО ЗначенияКритериевОценки.Критерий = НастройкиПроцессаВыбораКритерииОценки.КритерийОценки
		|			И (НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаПроцессаВыбора)
		|			И (ЗначенияКритериевОценки.Владелец = &Владелец)
		|			И (ЗначенияКритериевОценки.ОбъектОценки = &ОбъектОценки)
		|			И ЗначенияКритериевОценки.ЭтапОценки = НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора
		|			И (ЗначенияКритериевОценки.ЭтапОценки = &ЭтапОценки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФункциональныеНаправленияФизическихЛиц КАК ФункциональныеНаправленияФизическихЛиц
		|		ПО ЗначенияКритериевОценки.Ответственный = ФункциональныеНаправленияФизическихЛиц.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
		|		ПО ЗначенияКритериевОценки.Критерий = МаксимальныеЗначения.Критерий
		|			И ЗначенияКритериевОценки.ЭтапОценки = МаксимальныеЗначения.ЭтапОценки
		|ГДЕ
		|	(ЗначенияКритериевОценки.Критерий.ФункциональноеНаправление = ЕСТЬNULL(ФункциональныеНаправленияФизическихЛиц.ФункциональноеНаправление, ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))
		|			ИЛИ ЗначенияКритериевОценки.Критерий.ФункциональноеНаправление = ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецОбъектовВыбора);
	Запрос.УстановитьПараметр("НастройкаПроцессаВыбора", ВыборОбъектовУХ.НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора));
	Запрос.УстановитьПараметр("ОбъектОценки", ОбъектОценки);
	Запрос.УстановитьПараметр("ЭтапОценки", ЭтапОценки);
	
	Если НЕ ТолькоВыбранныйЭтап Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И (ЗначенияКритериевОценки.ЭтапОценки = &ЭтапОценки)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ЗначенияКритериевОценки.ЭтапОценки = &ЭтапОценки", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	Если ВыборкаЗапроса.Следующий() Тогда
		Возврат ВыборкаЗапроса.Оценка;
	КонецЕсли;
		
	Возврат 0;
	
КонецФункции

// Рассчитываем нормальное значение критерия. 
// Параметры:
//	ВладелецОбъектовВыбора - ОпределяемыйТип.ВладельцыОбъектовВыбора, определяет настройки критерия.
//	Критерий - СправочникСсылка.КритерииВыбора.
//	Значение - Число, значение критерия, которое ввел пользователь.
// Возвращает: Число - нормальное значение, умноженное на вес критерия, а также,
//	либо отнесенное к баллу 0-5 (и поделенное на 5, для приведения к диапазону 0..1),
//	либо приводим к дипазону 0-1 по отношению к минимальному и максимальному значению критерия.
//
Функция ПолучитьБалльноеЗначениеКритерия(ВладелецОбъектовВыбора, Критерий, Знач Значение) Экспорт
	Если НЕ ЗначениеЗаполнено(Критерий) Тогда
		Возврат Значение;
	КонеЦЕсли;
	
	Попытка
		Значение = Число(Значение);
	Исключение
		Значение = 0;
	КонецПопытки;
	
	НастройкаВыбора = ВыборОбъектовУХ.НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора);
	Если НЕ ЗначениеЗаполнено(НастройкаВыбора) Тогда
		Возврат 0;
	КонеЦЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗначенияКритериевОценки.Значение) КАК Значение,
		|	ЗначенияКритериевОценки.ЭтапОценки
		|ПОМЕСТИТЬ МаксимальныеЗначения
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|ГДЕ
		|	ЗначенияКритериевОценки.Владелец = &ВладелецОбъектов
		|	И НЕ ЗначенияКритериевОценки.НеЗаполнен
		|	И ЗначенияКритериевОценки.Критерий = &КритерийОценки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияКритериевОценки.ЭтапОценки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиПроцессаВыбораКритерииОценки.Вес,
		|	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы,
		|	НастройкиПроцессаВыбораКритерииОценки.От0,
		|	НастройкиПроцессаВыбораКритерииОценки.До0,
		|	НастройкиПроцессаВыбораКритерииОценки.От1,
		|	НастройкиПроцессаВыбораКритерииОценки.До1,
		|	НастройкиПроцессаВыбораКритерииОценки.От2,
		|	НастройкиПроцессаВыбораКритерииОценки.До2,
		|	НастройкиПроцессаВыбораКритерииОценки.От3,
		|	НастройкиПроцессаВыбораКритерииОценки.До3,
		|	НастройкиПроцессаВыбораКритерииОценки.От4,
		|	НастройкиПроцессаВыбораКритерииОценки.До4,
		|	НастройкиПроцессаВыбораКритерииОценки.До5,
		|	НастройкиПроцессаВыбораКритерииОценки.От5,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА 1
		|				ИНАЧЕ МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|			КОНЕЦ
		|	КОНЕЦ КАК К1,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|				ИНАЧЕ -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение / (МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение)
		|			КОНЕЦ
		|	КОНЕЦ КАК К0,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение
		|		ИНАЧЕ МаксимальныеЗначения.Значение
		|	КОНЕЦ КАК МаксимальноеЗначение,
		|	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение КАК МинимальноеЗначение
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
		|		ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = СостояниеПроцессовВыбора.ТекущийЭтапВыбора
		|			И (НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаВыбора)
		|			И (СостояниеПроцессовВыбора.Владелец = &ВладелецОбъектов)
		|			И (НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = &КритерийОценки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
		|		ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = МаксимальныеЗначения.ЭтапОценки";
	
	Запрос.УстановитьПараметр("ВладелецОбъектов", ВладелецОбъектовВыбора);
	Запрос.УстановитьПараметр("НастройкаВыбора", НастройкаВыбора);
	Запрос.УстановитьПараметр("КритерийОценки", Критерий);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Значение = БаллПоЗначению(Значение, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат Значение;
КонецФункции

// Получить балл по "сырому" значению критерия. Проверяем вхождение переменной Значение в один из диапазонов [От0,До0), [От1,До1), ... [От5,До5].
// Если такой интервал найден, то возвращаем его номер 0..5. Если не найдено, то возвращаем 0.
// Параметры:
//	Значение - Число, проверяемое значение.
//	ОписаниеБаллов - Структура:
//		От0..5 - Число, значение нижней границы для проверки вхождения значения в диапазон 0..5.
//		До0..5 - Число, значение верхней границы для проверки вхождения значения в диапазон 0..5.
// Возвращаем Число, номер диапазона от 0 до 5.
//
Функция БаллПоЗначению(Значение, ОписаниеБаллов) Экспорт
	Если ОписаниеБаллов.НеИспользоватьПреобразованиеВБаллы Тогда
		Возврат 0;
	КонецЕсли;
	
	Для ТекБалл = 0 По 5 Цикл
		Если Значение >= ОписаниеБаллов["От"+ТекБалл] И
			(Значение < ОписаниеБаллов["До"+ТекБалл] ИЛИ ТекБалл = 5 И Значение = ОписаниеБаллов["До"+ТекБалл]) Тогда
			Возврат ТекБалл;
		КонецЕсли;
	КонецЦикла;
	Возврат 0;
КонецФункции

// Рассчитываем нормальное значение критерия. 
// Параметры:
//	ВладелецОбъектовВыбора - ОпределяемыйТип.ВладельцыОбъектовВыбора, определяет настройки критерия.
//	Критерий - СправочникСсылка.КритерииВыбора.
//	Значение - Число, значение критерия, которое ввел пользователь.
// Возвращает: Число - нормальное значение, умноженное на вес критерия, а также,
//	либо отнесенное к баллу 0-5 (и поделенное на 5, для приведения к диапазону 0..1),
//	либо приводим к дипазону 0-1 по отношению к минимальному и максимальному значению критерия.
//
Функция НормальноеЗначениеКритерия(ВладелецОбъектовВыбора, Критерий, Значение) Экспорт
	Если НЕ ЗначениеЗаполнено(Критерий) Тогда
		Возврат Значение;
	КонеЦЕсли;
	
	Попытка
		НормальноеЗначение = Число(Значение);
	Исключение
		НормальноеЗначение = 0;
	КонецПопытки;
	
	НастройкаВыбора = ВыборОбъектовУХ.НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора);
	Если НЕ ЗначениеЗаполнено(НастройкаВыбора) Тогда
		Возврат 0;
	КонеЦЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗначенияКритериевОценки.Значение) КАК Значение,
		|	ЗначенияКритериевОценки.ЭтапОценки
		|ПОМЕСТИТЬ МаксимальныеЗначения
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|ГДЕ
		|	ЗначенияКритериевОценки.Владелец = &ВладелецОбъектов
		|	И НЕ ЗначенияКритериевОценки.НеЗаполнен
		|	И ЗначенияКритериевОценки.Критерий = &КритерийОценки
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияКритериевОценки.ЭтапОценки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиПроцессаВыбораКритерииОценки.Вес,
		|	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы,
		|	НастройкиПроцессаВыбораКритерииОценки.От0,
		|	НастройкиПроцессаВыбораКритерииОценки.До0,
		|	НастройкиПроцессаВыбораКритерииОценки.От1,
		|	НастройкиПроцессаВыбораКритерииОценки.До1,
		|	НастройкиПроцессаВыбораКритерииОценки.От2,
		|	НастройкиПроцессаВыбораКритерииОценки.До2,
		|	НастройкиПроцессаВыбораКритерииОценки.От3,
		|	НастройкиПроцессаВыбораКритерииОценки.До3,
		|	НастройкиПроцессаВыбораКритерииОценки.От4,
		|	НастройкиПроцессаВыбораКритерииОценки.До4,
		|	НастройкиПроцессаВыбораКритерииОценки.До5,
		|	НастройкиПроцессаВыбораКритерииОценки.От5,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА 1
		|				ИНАЧЕ МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|			КОНЕЦ
		|	КОНЕЦ КАК К1,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|				ИНАЧЕ -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение / (МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение)
		|			КОНЕЦ
		|	КОНЕЦ КАК К0,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение
		|		ИНАЧЕ МаксимальныеЗначения.Значение
		|	КОНЕЦ КАК МаксимальноеЗначение,
		|	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение КАК МинимальноеЗначение
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
		|		ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = СостояниеПроцессовВыбора.ТекущийЭтапВыбора
		|			И (НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаВыбора)
		|			И (СостояниеПроцессовВыбора.Владелец = &ВладелецОбъектов)
		|			И (НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = &КритерийОценки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
		|		ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = МаксимальныеЗначения.ЭтапОценки";
	
	Запрос.УстановитьПараметр("ВладелецОбъектов", ВладелецОбъектовВыбора);
	Запрос.УстановитьПараметр("НастройкаВыбора", НастройкаВыбора);
	Запрос.УстановитьПараметр("КритерийОценки", Критерий);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		НормальноеЗначение = РассчитатьНормальноеЗначениеПоЗначению(НормальноеЗначение, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат НормальноеЗначение;
КонецФункции

Функция РассчитатьНормальноеЗначениеПоЗначению(Значение, ПараметрыРасчета)
	
	Если ПараметрыРасчета.НеИспользоватьПреобразованиеВБаллы Тогда
		Максимум = ?(Значение > ПараметрыРасчета.МаксимальноеЗначение, Значение, ПараметрыРасчета.МаксимальноеЗначение);
		Длинна_ = (Максимум - ПараметрыРасчета.МинимальноеЗначение);
		Возврат ПараметрыРасчета.Вес * (Значение - ПараметрыРасчета.МинимальноеЗначение) / ?(Длинна_=0, 1, Длинна_);
	КонеЦЕсли;
		
	Возврат БаллПоЗначению(Значение, ПараметрыРасчета) / 5 * ПараметрыРасчета.Вес;
	
КонецФункции

// Рассчитываем значения критериев по владельцу выбора (настройке выбора) для всех этапов процесса выбора
// Параметры:
//	ВладелецОбъектовВыборка - ОпределяемыйТип.ВладельцыОбъектовВыбора.
//
Процедура РассчитатьЗначенияКритериев(ВладелецОбъектовВыбора) Экспорт
	Если НЕ ЗначениеЗаполнено(ВладелецОбъектовВыбора) Тогда
		Возврат;
	КонеЦЕсли;
	
	НастройкаВыбора = ВыборОбъектовУХ.НастройкаПроцессаВыбораВладельца(ВладелецОбъектовВыбора);
	Если НЕ ЗначениеЗаполнено(НастройкаВыбора) Тогда
		Возврат;
	КонеЦЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗначенияКритериевОценки.Значение) КАК Значение,
		|	ЗначенияКритериевОценки.ЭтапОценки,
		|	ЗначенияКритериевОценки.Критерий
		|ПОМЕСТИТЬ МаксимальныеЗначения
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|ГДЕ
		|	ЗначенияКритериевОценки.Владелец = &ВладелецОбъектов
		|	И НЕ ЗначенияКритериевОценки.НеЗаполнен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияКритериевОценки.Критерий,
		|	ЗначенияКритериевОценки.ЭтапОценки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора,
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки,
		|	НастройкиПроцессаВыбораКритерииОценки.Вес,
		|	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение
		|		ИНАЧЕ МаксимальныеЗначения.Значение
		|	КОНЕЦ КАК МаксимальноеЗначение,
		|	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы,
		|	НастройкиПроцессаВыбораКритерииОценки.От0,
		|	НастройкиПроцессаВыбораКритерииОценки.До0,
		|	НастройкиПроцессаВыбораКритерииОценки.От1,
		|	НастройкиПроцессаВыбораКритерииОценки.До1,
		|	НастройкиПроцессаВыбораКритерииОценки.От2,
		|	НастройкиПроцессаВыбораКритерииОценки.До2,
		|	НастройкиПроцессаВыбораКритерииОценки.От3,
		|	НастройкиПроцессаВыбораКритерииОценки.До3,
		|	НастройкиПроцессаВыбораКритерииОценки.От4,
		|	НастройкиПроцессаВыбораКритерииОценки.До4,
		|	НастройкиПроцессаВыбораКритерииОценки.До5,
		|	НастройкиПроцессаВыбораКритерииОценки.От5,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|				ИНАЧЕ -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение / (МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение)
		|			КОНЕЦ
		|	КОНЕЦ КАК К0,
		|	ВЫБОР
		|		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL 
		|			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
		|					ТОГДА 1
		|				ИНАЧЕ МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
		|			КОНЕЦ
		|	КОНЕЦ КАК К1,
		|	НастройкиПроцессаВыбораКритерииОценки.ИсточникДанных,
		|	НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение
		|ПОМЕСТИТЬ НастройкиКритериев
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
		|		ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = МаксимальныеЗначения.ЭтапОценки
		|			И НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = МаксимальныеЗначения.Критерий
		|ГДЕ
		|	НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаВыбора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиКритериев.КритерийОценки,
		|	НастройкиКритериев.ИсточникДанных,
		|	НастройкиКритериев.Вес,
		|	НастройкиКритериев.НеИспользоватьПреобразованиеВБаллы,
		|	НастройкиКритериев.От0,
		|	НастройкиКритериев.До0,
		|	НастройкиКритериев.От1,
		|	НастройкиКритериев.До1,
		|	НастройкиКритериев.От2,
		|	НастройкиКритериев.До2,
		|	НастройкиКритериев.От3,
		|	НастройкиКритериев.До3,
		|	НастройкиКритериев.От4,
		|	НастройкиКритериев.До4,
		|	НастройкиКритериев.От5,
		|	НастройкиКритериев.До5,
		|	НастройкиКритериев.К1,
		|	НастройкиКритериев.К0,
		|	НастройкиКритериев.ЭтапВыбора,
		|	ОбъектыВыбора.Объект КАК ОбъектВыбора,
		|	НастройкиКритериев.МинимальноеЗначение,
		|	НастройкиКритериев.МаксимальноеЗначение
		|ИЗ
		|	НастройкиКритериев КАК НастройкиКритериев
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
		|		ПО (ОбъектыВыбора.Владелец = &ВладелецОбъектов)
		|			И (НастройкиКритериев.РассчитатьЗначение)
		|			И (НастройкиКритериев.ИсточникДанных <> ЗНАЧЕНИЕ(Справочник.ИсточникиДанныхДляРасчетов.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияКритериевОценки.Ответственный,
		|	ЗначенияКритериевОценки.ОбъектОценки,
		|	ЗначенияКритериевОценки.ЭтапОценки,
		|	ЗначенияКритериевОценки.Критерий,
		|	ЗначенияКритериевОценки.Значение,
		|	ЗначенияКритериевОценки.Вес,
		|	ЗначенияКритериевОценки.ЗначениеМножества,
		|	НастройкиКритериев.МинимальноеЗначение,
		|	НастройкиКритериев.МаксимальноеЗначение,
		|	НастройкиКритериев.От0,
		|	НастройкиКритериев.До0,
		|	НастройкиКритериев.От1,
		|	НастройкиКритериев.До1,
		|	НастройкиКритериев.От2,
		|	НастройкиКритериев.До2,
		|	НастройкиКритериев.От3,
		|	НастройкиКритериев.До3,
		|	НастройкиКритериев.От4,
		|	НастройкиКритериев.До4,
		|	НастройкиКритериев.До5,
		|	НастройкиКритериев.От5,
		|	НастройкиКритериев.НеИспользоватьПреобразованиеВБаллы
		|ИЗ
		|	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиКритериев КАК НастройкиКритериев
		|		ПО (ЗначенияКритериевОценки.Ответственный <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
		|			И (ЗначенияКритериевОценки.Владелец = &ВладелецОбъектов)
		|			И (НЕ ЗначенияКритериевОценки.НеЗаполнен)
		|			И ЗначенияКритериевОценки.ЭтапОценки = НастройкиКритериев.ЭтапВыбора
		|			И ЗначенияКритериевОценки.Критерий = НастройкиКритериев.КритерийОценки
		|			И (НЕ НастройкиКритериев.РассчитатьЗначение)";
	
	Запрос.УстановитьПараметр("ВладелецОбъектов", ВладелецОбъектовВыбора);
	Запрос.УстановитьПараметр("НастройкаВыбора", НастройкаВыбора);
	
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВиртуальныйОтчет = Справочники.ВиртуальныйОтчетОбъектДляПолученияЗначенийОтбора.СоздатьЭлемент();
	
	КонтекстОтчета=Новый Структура("ПериодОтчета,Сценарий,ОсновнаяВалюта,АнализЧувствительности,ЧтениеНеактуальныхЗаписей,Организация,ИспользуемаяИБ,ОтчетОбъект",
		Справочники.Периоды.ПустаяСсылка(),
		Справочники.Сценарии.ПустаяСсылка(),
		Справочники.Валюты.ПустаяСсылка(),
		Ложь,
		Истина,
		Справочники.Организации.ПустаяСсылка(),
		Справочники.ВнешниеИнформационныеБазы.ТекущаяИБ,
		ВиртуальныйОтчет);
		
	
	ВыборкаОбъектовВыбора = мРезультатЗапроса[2].Выбрать();
	Пока ВыборкаОбъектовВыбора.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаОбъектовВыбора.ИсточникДанных) Тогда
			Продолжить;
		КонецЕсли;
		
		ВиртуальныйОтчет.ЗначениеОтбора = ВыборкаОбъектовВыбора.ОбъектВыбора;
		
		ТЗДанных = УправлениеОтчетамиУХ.ПолучитьТаблицуДанныхПоИсточнику(КонтекстОтчета, ВыборкаОбъектовВыбора.ИсточникДанных);
		Попытка
			ЗначениеКритерия = ТЗДанных.Итог("Значение");
		Исключение
			ЗначениеКритерия = 0;
		КонецПопытки;
		
		Если ЗначениеКритерия = Неопределено Тогда
			ЗначениеКритерия = 0;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.ЗначенияКритериевОценки.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Владелец = ВладелецОбъектовВыбора;
		МенеджерЗаписи.Ответственный = Справочники.ФизическиеЛица.ПустаяСсылка();
		МенеджерЗаписи.ОбъектОценки = ВыборкаОбъектовВыбора.ОбъектВыбора;
		МенеджерЗаписи.ЭтапОценки = ВыборкаОбъектовВыбора.ЭтапВыбора;
		МенеджерЗаписи.Критерий = ВыборкаОбъектовВыбора.КритерийОценки;
		МенеджерЗаписи.Значение = ЗначениеКритерия;
		МенеджерЗаписи.БалльноеЗначение = БаллПоЗначению(ЗначениеКритерия, ВыборкаОбъектовВыбора);
		МенеджерЗаписи.Вес = ВыборкаОбъектовВыбора.Вес;
		МенеджерЗаписи.НеЗаполнен = Ложь;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	ВыборкаОбъектовВыбора = мРезультатЗапроса[3].Выбрать();
	Пока ВыборкаОбъектовВыбора.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗначенияКритериевОценки.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаОбъектовВыбора);
		МенеджерЗаписи.БалльноеЗначение = БаллПоЗначению(ВыборкаОбъектовВыбора.Значение, ВыборкаОбъектовВыбора);
		МенеджерЗаписи.Владелец = ВладелецОбъектовВыбора;
		МенеджерЗаписи.НеЗаполнен = Ложь;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция КоличествоЧленовКомиссииЭтапа(НастройкаПроцессаВыбора, ЭтапВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки КАК КритерийОценки,
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление КАК ФункциональноеНаправление
		|ПОМЕСТИТЬ КритерииНастройки
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|ГДЕ
		|	НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаПроцессаВыбора
		|	И НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = &ЭтапВыбора
		|	И НЕ НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ Сотрудники
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
		|ГДЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка = &НастройкаПроцессаВыбора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Сотрудники.Сотрудник) КАК Количество
		|ИЗ
		|	КритерииНастройки КАК КритерииНастройки,
		|	Сотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФункциональныеНаправленияФизическихЛиц КАК ФункциональныеНаправленияФизическихЛиц
		|		ПО ФункциональныеНаправленияФизическихЛиц.ФизическоеЛицо = Сотрудники.Сотрудник
		|ГДЕ
		|	(КритерииНастройки.КритерийОценки.ФункциональноеНаправление = ФункциональныеНаправленияФизическихЛиц.ФункциональноеНаправление
		|			ИЛИ КритерииНастройки.КритерийОценки.ФункциональноеНаправление = ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("НастройкаПроцессаВыбора", НастройкаПроцессаВыбора);
	Запрос.УстановитьПараметр("ЭтапВыбора", ЭтапВыбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Количество = Null Тогда
			Возврат 0;
		КонецЕсли;
		
		Возврат ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

Процедура ОбновитьЭкспертовЭтапов(НастройкаПроцессаВыбора) Экспорт
	
	Если Не ЗначениеЗаполнено(НастройкаПроцессаВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора,
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки,
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление КАК ФункциональноеНаправление
		|ПОМЕСТИТЬ ТаблицаКритериев
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|ГДЕ
		|	НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаПроцессаВыбора
		|	И НЕ НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник,
		|	ЕСТЬNULL(ФункциональныеНаправленияФизическихЛиц.ФункциональноеНаправление, ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка)) КАК ФункциональноеНаправление
		|ПОМЕСТИТЬ ТаблицаЭкспертов
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФункциональныеНаправленияФизическихЛиц КАК ФункциональныеНаправленияФизическихЛиц
		|		ПО НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник = ФункциональныеНаправленияФизическихЛиц.ФизическоеЛицо
		|ГДЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка = &НастройкаПроцессаВыбора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаКритериев.ЭтапВыбора КАК Этап,
		|	ТаблицаЭкспертов.Сотрудник КАК Сотрудник
		|ИЗ
		|	ТаблицаКритериев КАК ТаблицаКритериев
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЭкспертов КАК ТаблицаЭкспертов
		|		ПО (ТаблицаКритериев.ФункциональноеНаправление = ТаблицаЭкспертов.ФункциональноеНаправление)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТаблицаКритериев.ЭтапВыбора,
		|	ТаблицаЭкспертов.Сотрудник
		|ИЗ
		|	ТаблицаКритериев КАК ТаблицаКритериев
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЭкспертов КАК ТаблицаЭкспертов
		|		ПО (ТаблицаКритериев.ФункциональноеНаправление = ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))";
		
	Запрос.УстановитьПараметр("НастройкаПроцессаВыбора", НастройкаПроцессаВыбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыСведений.ЭкспертыЭтаповОценки.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.НастройкаПроцессаВыбора.Установить(НастройкаПроцессаВыбора);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.НастройкаПроцессаВыбора = НастройкаПроцессаВыбора;
		НоваяЗапись.ЭтапОценки = ВыборкаДетальныеЗаписи.Этап;
		НоваяЗапись.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОбновитьНастройкиПроцессаВыбораПоСотрудникам(мСотрудников) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
		|ГДЕ
		|	НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник В(&мСотрудников)";
	
	Запрос.УстановитьПараметр("мСотрудников", мСотрудников);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВыборОбъектовУХ.ОбновитьЭкспертовЭтапов(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьНастройкиПроцессаВыбораПоКритерию(КритерийОценки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиПроцессаВыбораКритерииОценки.Ссылка
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|ГДЕ
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = &КритерийОценки";
	
	Запрос.УстановитьПараметр("КритерийОценки", КритерийОценки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВыборОбъектовУХ.ОбновитьЭкспертовЭтапов(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает массив структур с описанием критериев для указанного этапа и функционального направления.
// Параметры:
//	НастройкаПроцессаВыбора - СправочникСсылка.НастройкиПроцессаВыбора - обязательный, настройка выбора по которой читаем данные.
//	ЭтапОценки - СправочникСсылка.ЭтапыОценки - необязательный, если не указан, то возвращает критерии по всем этапам.
//		Иначе используется как фильтр для отбора критериев.
//	ФункциональноеНаправление - СправочникСсылка.ФункциональныеНаправления - необязательный, если передано значение, то
//		возвращаются критерии без функционального направления и с указанным функциональным направлением.
//		Если значение не указано, то возвращаются только критерии без функционального направления.
//
Функция ПолучитьКритерииЭтапаДляФункциональногоНаправления(НастройкаПроцессаВыбора, ЭтапОценки, ФункциональноеНаправление) Экспорт
	мКритерии = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПроцессаВыбораКритерииОценки.НомерСтроки,
		|	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора,
		|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки,
		|	НастройкиПроцессаВыбораКритерииОценки.Вес,
		|	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение,
		|	НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение,
		|	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы,
		|	НастройкиПроцессаВыбораКритерииОценки.От0,
		|	НастройкиПроцессаВыбораКритерииОценки.До0,
		|	НастройкиПроцессаВыбораКритерииОценки.От1,
		|	НастройкиПроцессаВыбораКритерииОценки.До1,
		|	НастройкиПроцессаВыбораКритерииОценки.От2,
		|	НастройкиПроцессаВыбораКритерииОценки.До2,
		|	НастройкиПроцессаВыбораКритерииОценки.От3,
		|	НастройкиПроцессаВыбораКритерииОценки.До3,
		|	НастройкиПроцессаВыбораКритерииОценки.От4,
		|	НастройкиПроцессаВыбораКритерииОценки.До4,
		|	НастройкиПроцессаВыбораКритерииОценки.До5,
		|	НастройкиПроцессаВыбораКритерииОценки.От5,
		|	НастройкиПроцессаВыбораКритерииОценки.К0,
		|	НастройкиПроцессаВыбораКритерииОценки.К1,
		|	НастройкиПроцессаВыбораКритерииОценки.ИсточникДанных,
		|	НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение
		|ИЗ
		|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
		|ГДЕ
		|	НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаПроцессаВыбора
		|	И НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = &ЭтапВыбора
		|	И НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление = ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка)";
		
	Если ЗначениеЗаполнено(ФункциональноеНаправление) Тогда
		Запрос.Текст = Запрос.Текст +
			"
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	НастройкиПроцессаВыбораКритерииОценки.НомерСтроки,
			|	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора,
			|	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки,
			|	НастройкиПроцессаВыбораКритерииОценки.Вес,
			|	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение,
			|	НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение,
			|	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы,
			|	НастройкиПроцессаВыбораКритерииОценки.От0,
			|	НастройкиПроцессаВыбораКритерииОценки.До0,
			|	НастройкиПроцессаВыбораКритерииОценки.От1,
			|	НастройкиПроцессаВыбораКритерииОценки.До1,
			|	НастройкиПроцессаВыбораКритерииОценки.От2,
			|	НастройкиПроцессаВыбораКритерииОценки.До2,
			|	НастройкиПроцессаВыбораКритерииОценки.От3,
			|	НастройкиПроцессаВыбораКритерииОценки.До3,
			|	НастройкиПроцессаВыбораКритерииОценки.От4,
			|	НастройкиПроцессаВыбораКритерииОценки.До4,
			|	НастройкиПроцессаВыбораКритерииОценки.До5,
			|	НастройкиПроцессаВыбораКритерииОценки.От5,
			|	НастройкиПроцессаВыбораКритерииОценки.К0,
			|	НастройкиПроцессаВыбораКритерииОценки.К1,
			|	НастройкиПроцессаВыбораКритерииОценки.ИсточникДанных,
			|	НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение
			|ИЗ
			|	Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
			|ГДЕ
			|	НастройкиПроцессаВыбораКритерииОценки.Ссылка = &НастройкаПроцессаВыбора
			|	И НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = &ЭтапВыбора
			|	И НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление = &ФункциональноеНаправление";
	
		Запрос.УстановитьПараметр("ФункциональноеНаправление", ФункциональноеНаправление);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтапОценки) Тогда
		Запрос.УстановитьПараметр("ЭтапВыбора", ЭтапОценки);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = &ЭтапВыбора", "");
	КонецЕсли;
	Запрос.УстановитьПараметр("НастройкаПроцессаВыбора", НастройкаПроцессаВыбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтрРеквизитыКритерия = "";
	Для Каждого КолонкаЗапроса Из РезультатЗапроса.Колонки Цикл
		СтрРеквизитыКритерия = СтрРеквизитыКритерия + ?(ПустаяСтрока(СтрРеквизитыКритерия), "", ",") + КолонкаЗапроса.Имя;
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДанныеКритерия = Новый Структура(СтрРеквизитыКритерия);
		ЗаполнитьЗначенияСвойств(ДанныеКритерия, ВыборкаДетальныеЗаписи);
		мКритерии.Добавить(ДанныеКритерия);
	КонецЦикла;
		
	Возврат мКритерии;
КонецФункции

// Получить массив типов владельцев объектов выбора достуных пользователю
// Параметры:
//	Пользователь - СправочникСсылка.Пользователи - пользователь для которого проверяем доступность типов
//
// Возвращает:
//	Массив, элементы - Тип как подмножество определяемого типа "ВладельцыОбъектовВыбора"
Функция ПолучитьТипыОбъектовВыбораДоступныеПользователю(Пользователь) Экспорт
	мТипыОбъектовВыбора = Метаданные.ОпределяемыеТипы.ВладельцыОбъектовВыбора.Тип.Типы();
	мДоступныеТипы = Новый Массив;
	Для Каждого ТипОбъекта Из мТипыОбъектовВыбора Цикл
		МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипОбъекта);
		Если ПравоДоступа("Просмотр", МетаданныеОбъекта) Тогда
			мДоступныеТипы.Добавить(ТипОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат мДоступныеТипы;
КонецФункции

// Производит заполнение списка выбора СписокВыбораВход для реквизита 
// ИмяТипаОбъекта на форме.
Процедура ЗаполнитьСписокВыбораИмяТипаОбъекта(СписокВыбораВход) Экспорт
	СписокВыбораВход.Очистить();
	ОписаниеТиповВладельцыОбъектовВыбора = Метаданные.ОпределяемыеТипы.ВладельцыОбъектовВыбора.Тип;
	Для Каждого ТекТипы Из ОписаниеТиповВладельцыОбъектовВыбора.Типы() Цикл
		ДокументСсылка = Новый(ТекТипы);
		Имя = ВыборОбъектовУХ.ИмяТипаОбъектаВыбораПоВладельцу(ТипЗнч(ДокументСсылка), 0); 
		Синоним = ДокументСсылка.Метаданные().Синоним;
		СписокВыбораВход.Добавить(Имя, Синоним);
	КонецЦикла;

КонецПроцедуры
