////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для обработки действий пользователя
// в процессе работы с ценами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ИмяОбработкиПечатьЭтикетокИЦенников() Экспорт
	
	Если ИспользуетсяЦенообразование25() Тогда
		ИмяОбработки = "Обработка.ПечатьЭтикетокИЦенников2_5";
	Иначе
		ИмяОбработки = "Обработка.ПечатьЭтикетокИЦенников";
	КонецЕсли;
	
	Возврат ИмяОбработки;
	
КонецФункции

Функция ИмяФормыПечатьЭтикетокИЦенников() Экспорт
	
	ИмяФормы = ИмяОбработкиПечатьЭтикетокИЦенников() + ".Форма.ФормаТовары";
	
	Возврат ИмяФормы;
	
КонецФункции

Функция ИспользуетсяЦенообразование25(Дата = Неопределено) Экспорт

	Возврат ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(Дата);

КонецФункции

#Область ПроцедурыИФункцииПроверкиВозможностиВыполненияДействий

// Проверяет заполненность реквизитов, необходимых для пересчета из валюты в валюту.
//
// Параметры:
//  Документ	 - ДокументОбъект			 - Документ, для которого выполняются проверки.
//  СтараяВалюта - СправочникСсылка.Валюты	 - Предыдущая валюта документа.
//  ИмяТЧ		 - Строка					 - Имя табличной части.
//  ИмяПоляЦена	 - Строка					 - Имя поля, содержащее сумму, которая зависит от валюты.
// 
// Возвращаемое значение:
//  Булево - Истина, если необходим пересчет в валюту.
//
Функция НеобходимПересчетВВалюту(Документ, СтараяВалюта, ИмяТЧ="Товары", ИмяПоляЦена = "Цена") Экспорт

	Если Не ЗначениеЗаполнено(Документ.Валюта) Тогда
		Документ.Валюта = СтараяВалюта;
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(СтараяВалюта) Тогда
		Возврат Ложь;
	ИначеЕсли СтараяВалюта = Документ.Валюта Тогда
		Возврат Ложь;
	ИначеЕсли Документ[ИмяТч].Итог(ИмяПоляЦена) = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Проверяет заполненность реквизитов, необходимых пересчета сумм взаиморасчетов
//
// Параметры:
// 		Документ 		- ДокументОбъект 			- ДокументОбъект, для которого выполняются проверки
// 		СтараяВалюта 	- СправочникСсылка.Валюты	- Предыдущая валюта взаиморасчетов
// 		ИмяТЧ 			- Строка 					- Имя табличной части.
//
// Возвращаемое значение:
// 		Булево - Ложь, если необходимые пересчитать суммы взаиморасчетов.
//
Функция НеобходимПересчетСуммыВзаиморасчетов(Документ, СтараяВалюта, ИмяТЧ="Товары") Экспорт

	Если Не ЗначениеЗаполнено(Документ.ВалютаВзаиморасчетов) Тогда
		Документ.ВалютаВзаиморасчетов = СтараяВалюта;
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(СтараяВалюта) Тогда
		Возврат Истина;
	ИначеЕсли СтараяВалюта = Документ.ВалютаВзаиморасчетов Тогда
		Возврат Ложь;
	ИначеЕсли Документ[ИмяТч].Итог("СуммаВзаиморасчетов") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

#Область ПроцедурыОповещенияПользователяОВыполненныхДействиях

// Показывает оповещение пользователя об окончании пересчета сумм из валюты в валюту.
//
// Параметры:
// ВалютаИсточник - СправочникСсылка.Валюты - валюта, из которой осуществлялся пересчет
// ВалютаПриемник - СправочникСсылка.Валюты - валюта, в которую осуществляется пересчет.
//
Процедура ОповеститьОбОкончанииПересчетаСуммВВалюту(ВалютаИсточник, ВалютаПриемник) Экспорт

	СтрокаСообщения = НСтр("ru = 'Суммы в документе пересчитаны из валюты %ВалютаИсточник% в валюту %ВалютаПриемник%';
							|en = 'Amounts in the document are converted from currency %ВалютаИсточник% to currency %ВалютаПриемник%'");
	СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%ВалютаИсточник%", ВалютаИсточник);
	СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%ВалютаПриемник%", ВалютаПриемник);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Суммы пересчитаны';
			|en = 'Amounts are recalculated'"),
		,
		СтрокаСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

#КонецОбласти

#КонецОбласти
