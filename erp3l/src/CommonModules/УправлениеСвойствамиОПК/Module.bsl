
#Область ПрограммныйИнтерфейс

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ЗакрытиеПлатежнойПозиции";
	Набор.Идентификатор = Новый УникальныйИдентификатор("0118d9e3-4e29-490f-bf74-0f6d2e339943");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ЗаявкаНаКорректировкуЛимитов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("32180bc1-94a5-451f-826c-04b209ed4fe7");
	
	// ЗНО
	ИмяНабора = ИмяПредопределенногоНабора(КэшируемыеПроцедурыОПК.ТипЗаявкаНаОплату());
	Если НЕ ЕстьПредопределенныйНаборДопРеквизитовСведений(ИмяНабора) Тогда
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = ИмяНабора;
		Набор.Идентификатор = Новый УникальныйИдентификатор("7859e43e-178f-4a87-a9a8-044e3acf7a8a");
	КонецЕсли;
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ЗаявкаНаРасход";
	Набор.Идентификатор = Новый УникальныйИдентификатор("abfe5fb0-e697-43c7-be9d-f3798b860f73");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_КорректировкаЛимитов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("acaf8b48-13ef-11eb-87c7-4cedfb6824f3");
	
	// ОЖПДС
	ИмяНабора = ИмяПредопределенногоНабора(КэшируемыеПроцедурыОПК.ТипПланируемоеПоступление());
	Если НЕ ЕстьПредопределенныйНаборДопРеквизитовСведений(ИмяНабора) Тогда
		Набор = Наборы.Строки.Добавить();
		Набор.Имя = ИмяНабора;
		Набор.Идентификатор = Новый УникальныйИдентификатор("e2ead50d-1cc4-40c1-bd2d-b9832a88fee7");
	КонецЕсли;
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ОперативныйПлан";
	Набор.Идентификатор = Новый УникальныйИдентификатор("a6eef929-90f9-43c8-a3fd-d52143d11af8");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ОтражениеФактическихДанныхБюджетирования";
	Набор.Идентификатор = Новый УникальныйИдентификатор("16efac5e-c966-4df4-a274-ca7dd6da5eb8");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПереносЛимитов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("ceb6f3da-7b4d-11eb-a50b-60a44ccf9347");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПланируемыйДоход";
	Набор.Идентификатор = Новый УникальныйИдентификатор("ac1c1420-b05e-4874-af50-9f3d6f8ac8a8");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_СтатьиДвиженияРесурсов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("b3c4c9ae-9820-4271-9074-6d686ee24c09");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Справочник_СтатьиДоходовИРасходов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("9b161e37-c0ab-4438-b0c3-8cbc26a7e7d8");
	
	// Статьи движения денежных средств ERP уже имеют ДопСвойства
	ВстраиваниеОПКПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств(Наборы);
	
КонецПроцедуры

// Получает наименования наборов свойств второго уровня на разных языках.
//
// Параметры:
//  Наименования - Соответствие - представление набора на переданном языке:
//     * Ключ     - Строка - Имя набора свойств. Например, "Справочник_Партнеры_Общие".
//     * Значение - Строка - Наименование набора для переданного кода языка.
//  КодЯзыка - Строка - Код языка. Например, "en".
//
// Пример:
//  Наименования["Справочник_Партнеры_Общие"] = НСтр("ru='Общие'; en='General';", КодЯзыка);
//
Процедура ПриПолученииНаименованийНаборовСвойств(Наименования, КодЯзыка) Экспорт
	
КонецПроцедуры

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - ЛюбаяСсылка      - ссылка на объект со свойствами.
//               - ФормаКлиентскогоПриложения - форма объекта, к которому подключены свойства.
//               - ДанныеФормыСтруктура - описание объекта, к которому подключены свойства.
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений - с колонками:
//     * Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений -
//     * ОбщийНабор - Булево - Истина, если набор свойств содержит свойства,
//                             общие для всех объектов.
//    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//    // или страница, которая создается, если наборов больше одного без учета
//    // пустого набора, который описывает свойства группы удаленных реквизитов.
//
//    // Если значение Неопределено, значит, использовать значение по умолчанию.
//
//    // Для любой группы управляемой формы.
//     * Высота                   - Число -
//     * Заголовок                - Строка -
//     * Подсказка                - Строка -
//     * РастягиватьПоВертикали   - Булево -
//     * РастягиватьПоГоризонтали - Булево -
//     * ТолькоПросмотр           - Булево -
//     * ЦветТекстаЗаголовка      - Цвет -
//     * Ширина                   - Число -
//     * ШрифтЗаголовка           - Шрифт -
//                    
//    // Для обычной группы и страницы.
//     * Группировка              - ГруппировкаПодчиненныхЭлементовФормы -
//
//    // Для обычной группы.
//     * Отображение              - ОтображениеОбычнойГруппы -
//
//    // Для страницы.
//     * Картинка                 - Картинка -
//     * ОтображатьЗаголовок      - Булево -
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает, получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хеш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Знач Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьПредопределенныйНаборДопРеквизитовСведений(ИмяНабора)
	
	Возврат ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(
			Справочники.НаборыДополнительныхРеквизитовИСведений, 
			ИмяНабора);
	
КонецФункции
		
Функция ИмяПредопределенногоНабора(ТипОбъекта)
	
	СсылкаНаОбъект = Новый (ТипОбъекта);
	МетаданныеОбъекта = СсылкаНаОбъект.Метаданные();
	МассивИмени = СтрРазделить(МетаданныеОбъекта.ПолноеИмя(), ".");
	Возврат МассивИмени[0] + "_" + МассивИмени[1];
	
КонецФункции
		

#КонецОбласти
 