#Область ПрограммныйИнтерфейс

// См. РегламентированнаяОтчетностьКлиентПереопределяемый.ОткрытьРасшифровкуОтчета
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		
		ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиОтчетности(
			ИДОтчета, ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
		ОткрытьРасшифровкуТекущегоОтчета(ИДИменПоказателей, ПараметрыОтчета, ЗаголовокРасшифровкиДляВсегоРаздела);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьМП" Или ИДОтчета = "РегламентированныйОтчетБухОтчетностьСОНКО" Тогда
		
		ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиОтчетности(
			ИДОтчета, ПараметрыОтчета.ДатаНачалаПериодаОтчета, ПараметрыОтчета.ДатаКонцаПериодаОтчета);
		ОткрытьРасшифровкуТекущегоОтчета(ИДИменПоказателей, ПараметрыОтчета, ЗаголовокРасшифровкиДляВсегоРаздела);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиОтчетности(
			ИДОтчета, ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
		ОткрытьРасшифровкуТекущегоОтчета(ИДИменПоказателей, ПараметрыОтчета, ЗаголовокРасшифровкиДляВсегоРаздела);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетНДС" Тогда
		
		ОткрытьРасшифровкуОтчетНДС(ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2017Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2019Кв1"
			Или ИДРедакцииОтчета = "ФормаОтчета2019Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4"
			Или ИДРедакцииОтчета = "ФормаОтчета2020Кв4_1"
			Или ИДРедакцииОтчета = "ФормаОтчета2021Кв4" Тогда
			
			ОткрытьРасшифровкуОтчетИмущество(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		Если  ИДРедакцииОтчета = "ФормаОтчета2013Кв4"
			ИЛИ ИДРедакцииОтчета = "ФормаОтчета2017Кв1"
			ИЛИ ИДРедакцииОтчета = "ФормаОтчета2019Кв1" Тогда
			
			ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;

	ИначеЕсли ЗаполнениеФормСтатистикиКлиентСервер.РеализованоАвтозаполнениеФормы(ИДОтчета) Тогда
		
		ЗаполнениеФормСтатистикиКлиент.ОткрытьРасшифровкуСтатистики(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "БухгалтерскаяОтчетностьВБанк" Тогда
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4"
		 ИЛИ ИДРедакцииОтчета = "ФормаОтчета2017Кв3" Тогда
			ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровкиОтчетности(
				ИДОтчета, ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
			ПреобразоватьИдИменПоказателей(ИДИменПоказателей);
			ОткрытьРасшифровкуТекущегоОтчета(ИДИменПоказателей, ПараметрыОтчета, ЗаголовокРасшифровкиДляВсегоРаздела);
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИсполнениеКонтрактовГОЗ" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2018Кв1" Тогда
			
			ОткрытьРасшифровкуИсполнениеКонтрактовГОЗ(ИДИменПоказателей, ПараметрыОтчета);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура реализует печать уведомлений о контролируемых сделках,
// отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо напечатать
//		Если для данного объекта печать невозможна - нужно выдавать соответствующее предупреждение
//	ИмяМакетаДляПечати - Строка - имя макета для печати, при использовании которого необходимо распечатать объект
//		Если ИмяМакетаДляПечати пустое, то для печати использовать основной макет
//	СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнена печать с помощью подсистемы печати из БСП.
Процедура ПечатьРегламентированногоОтчета(Ссылка, ИмяМакетаДляПечати, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.УведомлениеОКонтролируемыхСделках") Тогда
		
		СтандартнаяОбработка = Ложь;
		Если Не ЗначениеЗаполнено(Ссылка) Тогда 
			Возврат;
		КонецЕсли;
		
		ПараметрыПечати = Новый Структура("Уведомление", Ссылка);
		ОткрытьФорму("Документ.УведомлениеОКонтролируемыхСделках.Форма.ФормаПечатиУведомления", ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура реализует выгрузку уведомлений о контролируемых сделках,
// отображаемых на закладке Отчеты и Уведомления формы Отчетность
// Параметры
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект, который необходимо выгрузить
// Если для данного объекта выгрузка невозможна - нужно выдавать соответствующее предупреждение.
//
Процедура ВыгрузкаРегламентированногоОтчета(Ссылка) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.УведомлениеОКонтролируемыхСделках") Тогда
		
		ПараметрыФормы = Новый Структура("Уведомление", Ссылка);
		ОткрытьФорму("Обработка.ПомощникПодготовкиУведомленияОКонтролируемыхСделках.Форма.Форма", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура реализует создание уведомлений о контролируемых сделках,
// отображаемых на закладке Уведомления и Отчетность формы Отчетность, не входящие в состав БРО 
// Параметры
//	Организация - СправочникСсылка.Организации - Организация, по которой нужно создать объект
//  Тип  - Тип - Тип объекта, который необходимо создать
//  СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будет выполнено создание объекта стандартным образом.
Процедура СозданиеРегламентированногоОтчета(Организация, Тип, СтандартнаяОбработка) Экспорт
	
	Если Тип = Тип("ДокументСсылка.УведомлениеОКонтролируемыхСделках") Тогда
		
		ПараметрыФормы = Новый Структура("Организация", Организация);
		ОткрытьФорму("Обработка.ПомощникПодготовкиУведомленияОКонтролируемыхСделках.Форма.Форма", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Расшифровка

Функция НаименованиеРасшифровкиОтчетности(ИДОтчета, НачалоПериода, КонецПериода)
	
	СтрокаВозврата = НСтр("ru = '%1 за %2 - расшифровка значений показателей';
							|en = '%1 for %2 – drill-dpwn of indicator values'");
	
	Если ИДОтчета <> "РегламентированныйОтчетПрибыль" Тогда
		Если НачалоГода(НачалоПериода) <> НачалоДня(НачалоПериода) Тогда
			ПериодОтчета = Формат(НачалоПериода, "ДЛФ=D") + " - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
		Иначе
			Если Месяц(КонецПериода) = 1 Тогда 
				ПериодОтчета = Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
			Иначе
				ПериодОтчета = "Январь - " + Формат(КонецПериода, "ДФ='ММММ гггг'") + " г." ;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ПериодОтчета = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
	КонецЕсли;
	
	СоответствиеОтчетовИЗаголовков = Новый Соответствие;
	СоответствиеОтчетовИЗаголовков.Вставить("РегламентированныйОтчетБухОтчетность", НСтр("ru = 'Бухгалтерская отчетность';
																						|en = 'Accounting reporting'"));
	СоответствиеОтчетовИЗаголовков.Вставить("РегламентированныйОтчетБухОтчетностьМП", НСтр("ru = 'Бухгалтерская отчетность малых предприятий';
																							|en = 'Small business accounting reporting'"));
	СоответствиеОтчетовИЗаголовков.Вставить("РегламентированныйОтчетБухОтчетностьСОНКО", НСтр("ru = 'Бухгалтерская отчетность СО НКО';
																								|en = 'Accounting reporting of SO NPO'"));
	СоответствиеОтчетовИЗаголовков.Вставить("РегламентированныйОтчетПрибыль", НСтр("ru = 'Декларация по налогу на прибыль';
																					|en = 'Profit tax declaration'"));
	СоответствиеОтчетовИЗаголовков.Вставить("БухгалтерскаяОтчетностьВБанк", НСтр("ru = 'Отчетность в банки';
																				|en = 'Reporting to banks'"));
	
	ЗаголовокОтчета = СоответствиеОтчетовИЗаголовков.Получить(ИДОтчета);
	
	СтрокаВозврата = СтрШаблон(СтрокаВозврата, ЗаголовокОтчета, ПериодОтчета);
	
	Возврат СтрокаВозврата;
	
КонецФункции

Процедура ОткрытьРасшифровкуТекущегоОтчета(ИДИменПоказателей, ПараметрыОтчета, ЗаголовокРасшифровкиДляВсегоРаздела)
	
	ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	Если НЕ ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей) Тогда
		ТекстВопроса = НСтр("ru = 'Для выбранной ячейки расшифровка не существует." + Символы.ПС
			+ "Показать расшифровку для всех показателей формы?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	ИначеЕсли ИДИменПоказателей.Количество() И
		(СтрНачинаетсяС(ИДИменПоказателей.Получить(0), "П00007М")
			Или СтрНачинаетсяС(ИДИменПоказателей.Получить(0), "П00008М")
			Или СтрНачинаетсяС(ИДИменПоказателей.Получить(0), "П00006М")) Тогда
		// Сразу открываем отчет, находящийся в доп. параметрах показателя.
		ОткрытьРасшифровкуОтчетПоДопПараметрам(ИДИменПоказателей, ПараметрыОтчета);
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетПоДопПараметрам(ИДИменПоказателей, ПараметрыОтчета)
	ПоказательДляРасшифровки = ИДИменПоказателей.Получить(0);
	ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
	Если ТипЗнч(ДополнительныеПараметрыРасшифровки) = Тип("Структура")
		И ДополнительныеПараметрыРасшифровки.Свойство("Отчет") И ТипЗнч(ДополнительныеПараметрыРасшифровки.Отчет) = Тип("Структура")
		И ДополнительныеПараметрыРасшифровки.Отчет.Свойство("ИмяОтчета") Тогда
		ИмяФормыОтчета = ДополнительныеПараметрыРасшифровки.Отчет.ИмяОтчета;
		ПараметрыФормы = Новый Структура;
		Если ДополнительныеПараметрыРасшифровки.Отчет.Свойство("ПараметрыФормы") Тогда
			Для Каждого ЭлементНастройки Из ДополнительныеПараметрыРасшифровки.Отчет.ПараметрыФормы Цикл
				ПараметрыФормы.Вставить(ЭлементНастройки.Ключ, ЭлементНастройки.Значение);
			КонецЦикла;
		КонецЕсли;
		ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы, , Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетНДС(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПользовательскиеНастройки = Неопределено;
		
		ИдПоказателя = ИДИменПоказателей[0];
		
		ИдентификаторМакета = УчетНДСВызовСервера.ПолучитьИдентификаторМакетаРасшифровкиДекларацииПоНДС(ПараметрыОтчета, ИдПоказателя, ПользовательскиеНастройки);
		
		Если ЗначениеЗаполнено(ИдентификаторМакета) Тогда
			
			Если ТипЗнч(ИдентификаторМакета) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("Ключ", ИдентификаторМакета);
				ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаОбъекта", ПараметрыФормы,, Новый УникальныйИдентификатор);
				
			Иначе
				
				Если ПользовательскиеНастройки = Неопределено Тогда
					ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
				КонецЕсли;
				
				ЗаполняемыеНастройки = ПараметрыЗаполняемыхНастроек();
				ЗаполняемыеНастройки.Отбор = ПользовательскиеНастройки.Элементы.Найти("Отбор") <> Неопределено;
				
				ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
				ДополнительныеСвойства.Вставить("РежимРасшифровки", Истина);
				ДополнительныеСвойства.Вставить("Организация",      ПараметрыОтчета.Организация);
				
				Если ПараметрыОтчета.Свойство("ДатаНачалаРасширенногоПериодаОтчета") Тогда
					ДополнительныеСвойства.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаРасширенногоПериодаОтчета);
				Иначе
					ДополнительныеСвойства.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаПериодаОтчета);
				КонецЕсли;

				ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
				ДополнительныеСвойства.Вставить("ВыводитьЗаголовок", Истина);
				ДополнительныеСвойства.Вставить("КлючВарианта",      ИдентификаторМакета);
				
				ГруппаОрганизаций = Новый СписокЗначений;
				Если ПараметрыОтчета.Свойство("ГруппаОрганизаций", ГруппаОрганизаций)
					И ТипЗнч(ГруппаОрганизаций) = Тип("СписокЗначений")
					И ГруппаОрганизаций.Количество() > 0 Тогда
					
					ДополнительныеСвойства.Вставить("ВключатьОбособленныеПодразделения", Истина);
					
				КонецЕсли;
				
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("ВидРасшифровки", 2);
				ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				ПараметрыФормы.Вставить("ИДРасшифровки", ИдентификаторМакета);
				ПараметрыФормы.Вставить("ЗаполняемыеНастройки", ЗаполняемыеНастройки);
				ПараметрыФормы.Вставить("ЭтоРасшифровкаДекларации", Истина);
				ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
				
				ОткрытьФорму("Отчет.РасшифровкаПоказателейНДС.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
			КонецЕсли;
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.';
										|en = 'Drill-down is not available for the selected cell.'");
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетАвансыИмуществоФормаОтчета2013Кв4(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		
		ПоказательДляРасшифровки = ИДИменПоказателей[0] + "_" + ПараметрыОтчета.НомерТекущейстраницы;
		
		ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
		
		Если ДополнительныеПараметрыРасшифровки <> Неопределено 
			И ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
			
			ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
			
			ЗаполняемыеНастройки = ПараметрыЗаполняемыхНастроек();
			ЗаполняемыеНастройки.Группировка = Истина;
			ЗаполняемыеНастройки.Отбор = Истина;
			
			ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
			ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
			ДополнительныеСвойства.Вставить("НачалоПериода",     ПараметрыОтчета.ДатаНачалаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КонецПериода",      ПараметрыОтчета.ДатаКонцаПериодаОтчета);
			ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ВидРасшифровки", 2);
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
			ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
			
			ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
		Иначе
			Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
				ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.';
											|en = 'Drill-down is not available for the selected cell.'");
			Иначе
				ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".';
											|en = 'Perform the period-end operation ""Property tax calculation"" to drill down the indicator.'");
			КонецЕсли;
			ПоказатьПредупреждение(,ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуОтчетИмущество(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	ПоказательДляРасшифровки = ИДИменПоказателей[0] + ?(ПараметрыОтчета.НомерТекущейстраницы = 0, "", "_" + ПараметрыОтчета.НомерТекущейстраницы);
	
	// Если показатель расшифровывается таблицей детальных записей, то используем стандартную форму расшифровки...
	Если ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЕстьДетальныеЗаписиРасшифровки(
		 ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, 
		 ПоказательДляРасшифровки) Тогда
		 
		ПараметрыФормы = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПараметрыОтчета);
		ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
		ОткрытьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы,, Истина);
		Возврат;
		 
	КонецЕсли;	 
	
	// ... в ином случае расшифровка выполняет справкой-расчетом налога на имущество
	ДополнительныеПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
			
	Если ДополнительныеПараметрыРасшифровки = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Для выбранной ячейки расшифровка не существует.';
									|en = 'Drill-down is not available for the selected cell.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;	
		
	Если ДополнительныеПараметрыРасшифровки.РегламентныеОперацииВыполнены Тогда
		
		ПараметрыРасшифровки = ДополнительныеПараметрыРасшифровки.ПараметрыРасшифровки;
		
		ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, Отбор, ВыводимыеДанные", Ложь, Истина, Истина, Ложь);
		ДополнительныеСвойства = ПараметрыРасшифровки.ДополнительныеСвойства;
		ДополнительныеСвойства.Вставить("РежимРасшифровки",  Истина);
		ДополнительныеСвойства.Вставить("Организация",       ПараметрыОтчета.Организация);
		ДополнительныеСвойства.Вставить("НачалоПериода", 	 ПараметрыОтчета.ДатаНачалаПериодаОтчета);
		Если ДополнительныеПараметрыРасшифровки.Свойство("КонецПериода") Тогда
			ДополнительныеСвойства.Вставить("КонецПериода",  ДополнительныеПараметрыРасшифровки.КонецПериода);
		Иначе
			ДополнительныеСвойства.Вставить("КонецПериода",  ПараметрыОтчета.ДатаКонцаПериодаОтчета);
		КонецЕсли;	
		ДополнительныеСвойства.Вставить("КлючВарианта",      "РасчетНалогаНаимущество");
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидРасшифровки", 2);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", 		Истина);
		ПараметрыФормы.Вставить("ЗаполняемыеНастройки", 		ЗаполняемыеНастройки);
		ПараметрыФормы.Вставить("ПользовательскиеНастройки", 	ПараметрыРасшифровки);
		
		ОткрытьФорму("Отчет.СправкаРасчетНалогаНаИмущество.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Для расшифровки показателя необходимо выполнить регламентную операцию ""Расчет налога на имущество"".';
									|en = 'Perform the period-end operation ""Property tax calculation"" to drill down the indicator.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуИсполнениеКонтрактовГОЗ(ИДИменПоказателей, ПараметрыОтчета)
	
	Если ИДИменПоказателей.Количество() > 0 Тогда
		ПоказательДляРасшифровки = ИДИменПоказателей[0] + "_" + ПараметрыОтчета.НомерТекущейстраницы;
		ПараметрыРасшифровки = ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьДополнительныеПараметрыРасшифровкиПоказателя(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ПоказательДляРасшифровки);
		Если ПараметрыРасшифровки <> Неопределено Тогда
			Если ТипЗнч(ПараметрыРасшифровки) = Тип("СправочникСсылка.НаправленияДеятельности") 
				ИЛИ ТипЗнч(ПараметрыРасшифровки) = Тип("СправочникСсылка.ГосударственныеКонтракты") Тогда
				ПоказатьЗначение(, ПараметрыРасшифровки);
			Иначе
				ПараметрыФормы = Новый Структура();
				ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				ПараметрыФормы.Вставить("Организация", ПараметрыОтчета.Организация);
				ПараметрыФормы.Вставить("Период", ПараметрыОтчета.ДатаСоставленияОтчета);
				ПараметрыФормы.Вставить("ПредставлениеСумм", ПредопределенноеЗначение("Перечисление.ВидыПредставленияЧисел.БезИзменений"));
				ПараметрыФормы.Вставить("Детализация", "ДоОборотов");
				ПараметрыФормы.Вставить("ВариантФормирования", 0);
				ПараметрыФормы.Вставить("НаправлениеДеятельности", ПараметрыРасшифровки.НаправлениеДеятельности);
				ПараметрыФормы.Вставить("РежимРасшифровки", Истина);
				ПараметрыФормы.Вставить("КодПоказателя", ПараметрыРасшифровки.КодПоказателя);
				ОткрытьФорму("Отчет.ИсполнениеКонтрактовГОЗ.Форма.ФормаОтчета", ПараметрыФормы,, Новый УникальныйИдентификатор);
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(,НСтр("ru = 'Для выбранной ячейки расшифровка не существует.';
										|en = 'Drill-down is not available for the selected cell.'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаголовокРасшифровкиДляВсегоРаздела = ДополнительныеПараметры.ЗаголовокРасшифровкиДляВсегоРаздела;
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы)
	
	ПараметрыФормы.Вставить("ЗаголовокРасшифровки", ЗаголовокРасшифровкиДляВсегоРаздела);
	
	ФормаРасшифровки = ПолучитьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, , Истина);
	Если ПустаяСтрока(ФормаРасшифровки.Параметры.РезультатПроверкиВозможностиВывода) Тогда
		
		ФормаРасшифровки.Открыть();
		
	Иначе
		
		ТекстПредупреждения = ФормаРасшифровки.Параметры.РезультатПроверкиВозможностиВывода;
		
		Если ФормаРасшифровки.Открыта() Тогда
			ФормаРасшифровки.Закрыть();
		КонецЕсли;
		
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочие

Процедура ОткрытьРасшифровкуРегламентированногоОтчета(ИДИменПоказателей, ПараметрыОтчета) Экспорт

	// Заполняем параметры для вызова формы
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилищаРасшифровки", ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПараметрыФормы.Вставить("ИДИменПоказателей",  				   ИДИменПоказателей);
	
	ФормаРасшифровки = ПолучитьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, , Истина);
	
	Если ПустаяСтрока(ФормаРасшифровки.Параметры.РезультатПроверкиВозможностиВывода) Тогда
		
		ФормаРасшифровки.Открыть();
		
	Иначе
		
		ТекстПредупреждения = ФормаРасшифровки.Параметры.РезультатПроверкиВозможностиВывода;
		
		Если ФормаРасшифровки.Открыта() Тогда
			ФормаРасшифровки.Закрыть();
		КонецЕсли;
		
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		
	КонецЕсли;
	       
КонецПроцедуры

Процедура ПреобразоватьИдИменПоказателей(ИДИменПоказателей)
	
	МассивРезультата = Новый Массив;
	
	// Для расшифровки показателей лизинга или кредитов депозитов сократим имя показателя расшифровки
	Для каждого Показатель Из ИДИменПоказателей Цикл
		Если СтрНачинаетсяС(Показатель, "П00007М") Тогда
			Показатель = "П00007М_" + Прав(Показатель, СтрДлина(Показатель) - СтрНайти(Показатель, "_", НаправлениеПоиска.СКонца));
		КонецЕсли;
		Если СтрНачинаетсяС(Показатель, "П00008М") Тогда
			Показатель = "П00008М_" + Прав(Показатель, СтрДлина(Показатель) - СтрНайти(Показатель, "_", НаправлениеПоиска.СКонца));
		КонецЕсли;
		Если СтрНачинаетсяС(Показатель, "П00006М") Тогда
			Показатель = "П00006М_" + Прав(Показатель, СтрДлина(Показатель) - СтрНайти(Показатель, "_", НаправлениеПоиска.СКонца));
		КонецЕсли;
		МассивРезультата.Добавить(Показатель);
	КонецЦикла;
	
	ИДИменПоказателей = МассивРезультата;
	
КонецПроцедуры

Функция ПараметрыЗаполняемыхНастроек()
	
	ЗаполняемыеНастройки = Новый Структура;
	ЗаполняемыеНастройки.Вставить("Показатели", Ложь);
	ЗаполняемыеНастройки.Вставить("Группировка", Ложь);
	ЗаполняемыеНастройки.Вставить("Отбор", Ложь);
	ЗаполняемыеНастройки.Вставить("ВыводимыеДанные", Ложь);
	
	Возврат ЗаполняемыеНастройки;
	
КонецФункции

#КонецОбласти

#КонецОбласти
