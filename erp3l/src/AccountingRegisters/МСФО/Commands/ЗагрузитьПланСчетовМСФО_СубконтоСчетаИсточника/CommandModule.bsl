
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыОповещения = Новый Структура("УникальныйИдентификатор,Команда", Новый УникальныйИдентификатор, "ЗагрузитьПланСчетовМСФО");
	
	ПараметрыГрафика = Новый Структура("Заголовок", НСтр("ru = 'Данные для загрузки плана счетов'"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", 			НСтр("ru = 'Загрузка плана счетов МСФО'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиЗагрузить", НСтр("ru = 'Загрузка плана счетов МСФО'"));
	ПараметрыФормы.Вставить("АдресТаблицы", 			ПолучитьТекущийПС(ПараметрыОповещения.УникальныйИдентификатор));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ПриЗакрытии", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Обработка.ЗагрузкаДанныхТаблицей.Форма.Форма", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриЗакрытии(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено)
	
	Если Не ЭтоАдресВременногоХранилища(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьПланСчетов(РезультатЗакрытия);	
	//УдалитьИзВременногоХранилища(ДополнительныеПараметры.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущийПС(УникальныйИдентификатор)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МСФО.Код КАК Код,
	|	МСФО.Наименование КАК Наименование,
	|	МСФО.Вид КАК Вид,
	|	МСФО.Забалансовый КАК Забалансовый,
	|	МСФО.ВидКурса КАК ВидКурса,
	|	МСФО.ПересчитыватьВалютнуюСумму КАК ПересчитыватьВалютнуюСумму,
	|	МСФО.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|	МСФО.СпособРасчетаКурсовыхРазниц КАК СпособРасчетаКурсовыхРазниц,
	|	МСФО.СодержитВидыДвижений КАК СодержитВидыДвижений,
	|	МСФО.РазделПланаСчетов КАК РазделПланаСчетов,
	|	МСФО.СчетИсточник КАК СчетИсточник,
	|	МСФО.Валютный КАК Валютный,
	|	МСФО.Количественный КАК Количественный,
	|	МСФО.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	МСФО.УчетПоНаправлениямДеятельности КАК УчетПоНаправлениямДеятельности,
	|	МСФО.Наименование1 КАК Наименование1,
	|	МСФО.Наименование2 КАК Наименование2
	|ИЗ
	|	ПланСчетов.МСФО КАК МСФО
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК МСФОВидыСубконто1
	|		ПО МСФО.Ссылка = МСФОВидыСубконто1.Ссылка
	|			И (МСФОВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК МСФОВидыСубконто2
	|		ПО МСФО.Ссылка = МСФОВидыСубконто2.Ссылка
	|			И (МСФОВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК МСФОВидыСубконто3
	|		ПО МСФО.Ссылка = МСФОВидыСубконто3.Ссылка
	|			И (МСФОВидыСубконто3.НомерСтроки = 3)");
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	псМСФО = Метаданные.ПланыСчетов.МСФО;
	
	ГруппыРеквизитов = Новый Структура;
	ГруппыРеквизитов.Вставить("Реквизиты", 				псМСФО.Реквизиты);
	ГруппыРеквизитов.Вставить("СтандартныеРеквизиты", 	псМСФО.СтандартныеРеквизиты);
	ГруппыРеквизитов.Вставить("ПризнакиУчета", 			псМСФО.ПризнакиУчета);
	ГруппыРеквизитов.Вставить("ПризнакиУчетаСубконто", 	псМСФО.ПризнакиУчетаСубконто);
	ГруппыРеквизитов.Вставить("ВидыСубконто", 			псМСФО.СтандартныеТабличныеЧасти.ВидыСубконто.СтандартныеРеквизиты);
	
	Для каждого ГруппаРеквизитов Из ГруппыРеквизитов Цикл
		Для каждого ТекущийРеквизит Из ГруппаРеквизитов.Значение Цикл
			
			Если ГруппаРеквизитов.Ключ = "ВидыСубконто" Тогда
				Для НомерСубконто = 1 По 3 Цикл
					ЗаменыЗаголовков = Новый Структура(ТекущийРеквизит.Имя + НомерСубконто, ТекущийРеквизит.Синоним + " " + НомерСубконто);
				КонецЦикла;				
			Иначе	
				ЗаменыЗаголовков = Новый Структура(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЕсли;
			
			Для каждого ТекущаяЗамена Из ЗаменыЗаголовков Цикл
			
				ТекущаяКолонка = Результат.Колонки.Найти(ТекущаяЗамена.Ключ);
				Если ТекущаяКолонка <> Неопределено Тогда
					ТекущаяКолонка.Заголовок = ТекущаяЗамена.Значение;
				КонецЕсли;
			
			КонецЦикла;
			
		КонецЦикла;		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПланСчетов(РезультатЗакрытия)
	ПланыСчетов.МСФО.ЗагрузитьПланСчетов(ПолучитьИзВременногоХранилища(РезультатЗакрытия), Истина);	
КонецПроцедуры
