#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура МеханизмРегистрацииОбъектовПередЗаписью(Источник, Отказ) Экспорт
	ЗарегистрироватьИзменениеОбъекта(Источник, Отказ);
КонецПроцедуры

Процедура МеханизмРегистрацииОбъектовПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	ДополнительныеПараметры = Новый Структура("РежимЗаписи", РежимЗаписи);
	ЗарегистрироватьИзменениеОбъекта(Источник, Отказ, ДополнительныеПараметры);
КонецПроцедуры

Процедура МеханизмРегистрацииОбъектовПередЗаписьюРегистра(Источник, Отказ, Замещение) Экспорт
	ДополнительныеПараметры = Новый Структура("ЭтоРегистр,Замещение", Истина, Замещение);
	ЗарегистрироватьИзменениеОбъекта(Источник, Отказ, ДополнительныеПараметры);
КонецПроцедуры

Процедура МеханизмРегистрацииОбъектовПередУдалением(Источник, Отказ) Экспорт
	ДополнительныеПараметры = Новый Структура("ЭтоУдалениеОбъекта", Истина);
	ЗарегистрироватьИзменениеОбъекта(Источник, Отказ, ДополнительныеПараметры);
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбменДанными

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Ложь;
	
	Настройки.НазначениеПланаОбмена = "РИБСФильтром";
	
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	ОписаниеВарианта.ИмяКонфигурацииКорреспондента = Метаданные.Имя;
	
	КраткаяИнформацияПоОбмену = НСтр("ru = 'Налоговый мониторинг.'");
	КраткаяИнформацияПоОбмену = СтрЗаменить(КраткаяИнформацияПоОбмену, Символы.ПС, "");
	
	ОписаниеВарианта.КраткаяИнформацияПоОбмену   = КраткаяИнформацияПоОбмену;
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = "ПланОбмена.НалоговыйМониторинг.Форма.ПодробнаяИнформация";;
	
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена = Новый Массив;
	
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника = НСтр("ru = 'Настройки обмена распределенной информационной базы'");
	
	ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными = НСтр("ru = 'Копия информационной базы для целей налогового мониторинга'");
	
	ОписаниеВарианта.ИмяФормыСозданияНачальногоОбраза = "ОбщаяФорма.СозданиеНачальногоОбразаСФайлами";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбменДанными

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("РегистрироватьИзменения");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

#КонецОбласти

#КонецОбласти

#Область РегистрацияОбмена

Процедура ЗарегистрироватьИзменениеОбъекта(Объект, Отказ, ДополнительныеПараметры = Неопределено)
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УзлыПланаОбмена = НалоговыйМониторингВызовСервераПовтИсп.ПолучитьУзлыНМ();
	Если УзлыПланаОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Метаданные.ПланыОбмена.НалоговыйМониторинг.Состав.Содержит(Объект.Метаданные()) Тогда
		Возврат;
	КонецЕсли;
	
	МассивУзлов = УзлыПланаОбмена.ВыгрузитьКолонку("Ссылка");
	
	Если МассивУзлов.Количество() Тогда 
		ОбменДаннымиСобытия.ДополнитьПолучателей(Объект, МассивУзлов);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьУзлыПоПравилу(Объект, УзлыПланаОбмена, ПроверитьОрганизацию = Истина) Экспорт
	
	ОрганизацияДокумента = Неопределено;
	Если ПроверитьОрганизацию И ТипЗнч(Объект) <> Тип("УдалениеОбъекта") Тогда
		
		МетаданныеОбъекта = Объект.Метаданные();
		Если ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) И (МетаданныеОбъекта.Реквизиты.Найти("Организация") <> Неопределено) Тогда
			ОрганизацияДокумента = Объект.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	МассивУзлов = Новый Массив;
	
	Для Каждого СтрокаТаб Из УзлыПланаОбмена Цикл
		
		Если (ОрганизацияДокумента <> Неопределено) 
			И СтрокаТаб.Организации.Количество() 
			И (СтрокаТаб.Организации.Найти(ОрганизацияДокумента, "Организация") = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивУзлов.Добавить(СтрокаТаб.Ссылка);
		
	КонецЦикла;
	
	Возврат МассивУзлов;

КонецФункции

#КонецОбласти

#КонецЕсли