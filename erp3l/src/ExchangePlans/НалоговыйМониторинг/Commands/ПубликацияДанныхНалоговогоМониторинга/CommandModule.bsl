
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	УзловНалоговогоМониторинга = КоличествоУзловНалоговогоМониторинга();
	
	Если ТипЗнч(УзловНалоговогоМониторинга) = Тип("ПланОбменаСсылка.НалоговыйМониторинг") Тогда
		Если Не НастройкаСинхронизацииЗавершена(УзловНалоговогоМониторинга) Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ТекущиеДанные", УзловНалоговогоМониторинга);
			
			ОповещениеЗавершения = Новый ОписаниеОповещения("ВопросПродолжитьНастройкуСинхронизацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОповещениеЗавершения,
				НСтр("ru = 'Перед запуском синхронизации данных необходимо завершить ее настройку.
				|Открыть форму помощника настройки?'"),
				РежимДиалогаВопрос.ДаНет);
		Иначе
			
			ПараметрыПомощника = Новый Структура;	
			ПараметрыПомощника.Вставить("ЭтоОбменСПриложениемВСервисе", Ложь);
			ПараметрыПомощника.Вставить("ОбластьДанныхКорреспондента",  0);
				
			ВспомогательныеПараметры = Новый Структура;
			ВспомогательныеПараметры.Вставить("ПараметрыПомощника", ПараметрыПомощника);
			
			ОбменДаннымиКлиент.ВыполнитьОбменДаннымиОбработкаКоманды(УзловНалоговогоМониторинга,
				ЭтотОбъект, , Истина, ВспомогательныеПараметры);
		КонецЕсли;
	ИначеЕсли УзловНалоговогоМониторинга = 0 Тогда
		
		УстановитьСинхронизацию();
		
		ПараметрыПомощника = Новый Структура;
		ПараметрыПомощника.Вставить("ИмяПланаОбмена",         "НалоговыйМониторинг");
		ПараметрыПомощника.Вставить("ИдентификаторНастройки", "");
		ПараметрыПомощника.Вставить("НастройкаНовойСинхронизации");
		
		КлючУникальностиПомощника = "НалоговыйМониторинг_"; //ПараметрыПомощника.ИмяПланаОбмена + "_" + ПараметрыПомощника.ИдентификаторНастройки;
		
		ОткрытьФорму("Обработка.ПомощникСозданияОбменаДанными.Форма.НастройкаСинхронизации", ПараметрыПомощника, , КлючУникальностиПомощника);
	Иначе
		ОткрытьФорму("ОбщаяФорма.НастройкиСинхронизацииДанных");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПродолжитьНастройкуСинхронизацииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОткрытьФормуНастройкиПараметровСинхронизации(ДополнительныеПараметры.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиПараметровСинхронизации(ТекущиеДанные)
	
	ПараметрыПомощника = Новый Структура;
		
	ПараметрыПомощника.Вставить("УзелОбмена", ТекущиеДанные);
	
	ОткрытьФорму("Обработка.ПомощникСозданияОбменаДанными.Форма.НастройкаСинхронизации",
		ПараметрыПомощника, , , , , , РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСинхронизацию()
	Если Константы.ИспользоватьСинхронизациюДанных.Получить() = Ложь Тогда
		Константы.ИспользоватьСинхронизациюДанных.Установить(Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КоличествоУзловНалоговогоМониторинга()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговыйМониторинг.Ссылка КАК Ссылка
		|ИЗ
		|	ПланОбмена.НалоговыйМониторинг КАК НалоговыйМониторинг
		|ГДЕ
		|	НалоговыйМониторинг.ПометкаУдаления = ЛОЖЬ
		|	И НалоговыйМониторинг.ЭтотУзел = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе 
		Возврат 2;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция НастройкаСинхронизацииЗавершена(УзелОбмена)
	
	Возврат ОбменДаннымиСервер.НастройкаСинхронизацииЗавершена(УзелОбмена);
	
КонецФункции
