&НаСервере
Функция ПровестиДокумент(ПараметрКоманды)
	
	ДокументОбъект = ПараметрКоманды.ПолучитьОбъект();
	Попытка
		Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда 
			Возврат Ложь;
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;

КонецФункции

&НаСервере
Функция ПолучитьПараметрыДокумента(Ссылка)
	
	МетаданныеДокумента	= Ссылка.Метаданные();
	
	ЕстьРучнаяКорректировка	= ОбщегоНазначения.ЕстьРеквизитОбъекта("РучнаяКорректировка", МетаданныеДокумента);
	
	ИменаРеквизитов	= "Проведен, ПометкаУдаления";
	Если ЕстьРучнаяКорректировка Тогда
		ИменаРеквизитов	= ИменаРеквизитов + ", РучнаяКорректировка";
	КонецЕсли;
	
	Результат	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов);
	Если НЕ ЕстьРучнаяКорректировка Тогда
		Результат.Вставить("РучнаяКорректировка", Ложь);
	КонецЕсли;
	
	Результат.Вставить("РегОперация",	БухгалтерскийУчетКлиентСерверУХ.ЭтоРегламентнаяОперация(Ссылка));
	Результат.Вставить("ОперацияБух",	ТипЗнч(Ссылка) = Тип("ДокументСсылка.ОперацияБух"));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыДокумента = ПолучитьПараметрыДокумента(ПараметрКоманды);
	
	Если НЕ ПараметрыДокумента.ПометкаУдаления И НЕ ПараметрыДокумента.ОперацияБух И
		НЕ ПараметрыДокумента.РегОперация И НЕ ПараметрыДокумента.РучнаяКорректировка И
		НЕ ПараметрыДокумента.Проведен Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Вставить(0, КодВозвратаДиалога.Да, "Провести");
		Кнопки.Вставить(1, КодВозвратаДиалога.Отмена, "Отмена");
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ПараметрыВыполненияКоманды", ПараметрыВыполненияКоманды);
		ДополнительныеПараметры.Вставить("ПараметрКоманды", ПараметрКоманды);
		
		Оповещение = Новый ОписаниеОповещения("ВопросПередПросмотромСледуетПровестиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Перед просмотром проводок документ следует провести'"), Кнопки,, КодВозвратаДиалога.Да);
	Иначе
			
		ОткрытьФормуПоТипуДокумента(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередПросмотромСледуетПровестиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрКоманды = ДополнительныеПараметры.ПараметрКоманды;
	ПараметрыВыполненияКоманды = ДополнительныеПараметры.ПараметрыВыполненияКоманды;
	
	ДокументПроведен = ПровестиДокумент(ПараметрКоманды);
	Если ДокументПроведен Тогда
		ОповеститьОбИзменении(ПараметрКоманды);
		Оповестить("ВыполненаЗаписьДокумента", Новый Структура("ДокументСсылка", ПараметрКоманды));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не удалось провести документ'"));
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуПоТипуДокумента(ПараметрКоманды, ПараметрыВыполненияКоманды);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоТипуДокумента(ДокументСсылка, ПараметрыВыполненияКоманды)

	ТипыУХ = Новый Массив; // для данных документов важно отображение периода в движениях
	ТипыУХ.Добавить(Тип("ДокументСсылка.АкцептПротестПереводногоВекселя"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ВыбытиеВекселей"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ВыкупЦеннойБумаги"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ВыпускЦеннойБумаги"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.НачисленияПоФинансовымИнструментам"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ПоступлениеВекселя"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ПриобретениеЦеннойБумаги"));
	ТипыУХ.Добавить(Тип("ДокументСсылка.ПродажаЦеннойБумаги"));
	
	Если ТипыУХ.Найти(ТипЗнч(ДокументСсылка)) <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура("ДокументСсылка", ДокументСсылка);
		ОткрытьФорму("Обработка.ДвиженияДокумента.Форма", 
			ПараметрыФормы, 
			ПараметрыВыполненияКоманды.Источник, 
			ДокументСсылка);

		Возврат;
		
	КонецЕсли;
	
	ВстраиваниеУХКлиент.ОткрытьДвиженияДокумента(ДокументСсылка, ПараметрыВыполненияКоманды.Источник);
		
КонецПроцедуры
	
