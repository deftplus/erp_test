
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Режим", Режим);
	Параметры.Свойство("ИмяТЧ", ИмяТЧ);
	
	Если Параметры.Свойство("АдресХранилища")
		И ЭтоАдресВременногоХранилища(Параметры.АдресХранилища) Тогда
		
		Список.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресХранилища));
		
		ТекущаяСсылка = Неопределено;
		Если Параметры.Свойство("ТекущаяСсылка", ТекущаяСсылка) Тогда
			НайденныеСтроки = Список.НайтиСтроки(Новый Структура("Ссылка", ТекущаяСсылка));
			Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
				Элементы.Список.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Результат = Новый Структура;
	Результат.Вставить("Ссылка",       ТекущиеДанные.Ссылка);
	Результат.Вставить("Наименование", ТекущиеДанные.Наименование);
	Результат.Вставить("Режим",        Режим);
	Результат.Вставить("ДобавитьПромежуточныйВыпускПриВыборе", ТекущиеДанные.ДобавитьПромежуточныйВыпускПриВыборе);
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	Элементы.ФормаПоказатьВсе.Пометка = Не Элементы.ФормаПоказатьВсе.Пометка;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "УстановитьОтборСтрок");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Если Режим = "Этап" Тогда
		
		Заголовок = НСтр("ru = 'Этапы производства';
						|en = 'Production stages'");
		
		Элементы.СписокРабочийЦентр.Видимость = Ложь;
		Элементы.ФормаПоказатьВсе.Видимость = Ложь;
		Элементы.СписокУпаковка.Видимость = Ложь;
		Элементы.СписокКоличество.Видимость = Ложь;
		
	ИначеЕсли Режим = "ЭтапВыпуска" Тогда
		
		Если Параметры.Свойство("Номенклатура")
				И Параметры.Свойство("Характеристика")
				И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			Заголовок = СтрШаблон(НСтр("ru = 'Этапы производства изделия %1';
										|en = 'Manufacturing stages of %1 product'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Параметры.Номенклатура, Параметры.Характеристика));
		Иначе
			Заголовок = НСтр("ru = 'Этапы производства';
							|en = 'Production stages'");
		КонецЕсли;
		
		Элементы.СписокРабочийЦентр.Видимость = Ложь;
		Элементы.ФормаПоказатьВсе.Видимость = Список.Количество() > 0;
		Элементы.ФормаПоказатьВсе.Пометка = Список.НайтиСтроки(Новый Структура("КоличествоДостаточно", Истина)).ВГраница() = -1;
		
	ИначеЕсли Режим = "Операция" Тогда
		
		Заголовок = НСтр("ru = 'Технологические операции';
						|en = 'Manufacturing operations'");
		
		Элементы.СписокПодразделение.Видимость = Ложь;
		Элементы.ФормаПоказатьВсе.Видимость = Ложь;
		Элементы.СписокУпаковка.Видимость = Ложь;
		Элементы.СписокКоличество.Видимость = Ложь;
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("УстановитьОтборСтрок")
		ИЛИ (Инициализация И Форма.Режим = "ЭтапВыпуска") Тогда
			
			Если Элементы.ФормаПоказатьВсе.Пометка Тогда
				ОтборСтрок = Новый ФиксированнаяСтруктура;
			Иначе
				ОтборСтрок = Новый ФиксированнаяСтруктура("КоличествоДостаточно", Истина);
			КонецЕсли;
			
			Элементы.Список.ОтборСтрок = ОтборСтрок;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();
	
	//
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.КоличествоДостаточно");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Режим");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "ЭтапВыпуска";
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокКоличество.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.РасчетПоФормуле");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<по формуле>';
																|en = '<using formula>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	
КонецПроцедуры

#КонецОбласти