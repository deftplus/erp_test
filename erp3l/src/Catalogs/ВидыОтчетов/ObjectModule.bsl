
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Перем ПараметрыКопирования Экспорт;
Перем ПредназначениеСтар;

Перем ОбновитьПометкуУдаленияДляПодчиненных;

Перем АдресПараметровРеструктуризации Экспорт;

Перем ЗаписьНовогоОбъекта;
Перем РодительСтар;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	// Сформируем код для новой группы по наименованию.
	Если (НЕ ЗначениеЗаполнено(Ссылка)) И (СокрЛП(Код) = "") И (СокрЛП(Наименование) <> "") Тогда
		Код = ОбщегоНазначенияУХ.СформироватьКодНаОснованииНаименования(Наименование,,"ВидыОтчетов");
	Иначе
		// Не требуется формировать код новой группы.
	КонецЕсли;
	
	ЗаписьНовогоОбъекта=ЭтоНовый();
	
	Если НЕ ЗаписьНовогоОбъекта Тогда
		
		РодительСтар=Ссылка.Родитель;
		
	КонецЕсли;
			
	Если НЕ УправлениеОтчетамиУХ.СтрокаМожетИспользоватьсяВКачествеКода(Код) Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Код вида отчета задан неверно!'"), Отказ,, СтатусСообщения.Важное);
	КонецЕсли;
	
	Если ПометкаУдаления И (НЕ Ссылка.ПометкаУдаления) И Справочники.ВидыОтчетов.ЕстьЗаписиПоЭлементуСтруктуры(Ссылка) Тогда
		
		ТекстОшибки=Справочники.ВидыОтчетов.ПроверитьВозможностьИзмененияДанныхПоЗлементуСтруктуры(Ссылка);
		
		Если Не ПустаяСтрока(ТекстОшибки) Тогда
			
			СтрокаШаблона = НСтр("ru = 'Вид отчета %1: установка пометки на удаление отменена.
				|%2'");
			
			Если Не ПустаяСтрока(СтрокаШаблона) тогда
				ПолныйТекстОшибки = СтрШаблон(СтрокаШаблона, Ссылка, ТекстОшибки);
			Иначе
				ПолныйТекстОшибки = ТекстОшибки;
			КонецЕсли;
				
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ПолныйТекстОшибки, Отказ,, СтатусСообщения.Важное);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		ИспользоватьПоУмолчанию=Ложь;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		Если НЕ ОбъектДляСогласованияЗначений=Ссылка.ОбъектДляСогласованияЗначений Тогда
			
			Запрос=Новый Запрос;
			МаксАналитикОтчета = ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(Ссылка);
						
			Если МаксАналитикОтчета = 0 тогда
				
				Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния,
				|	ЗначенияСтатусовПоказателейСинтетика.ОрганизационнаяЕдиница.Наименование КАК ОрганизацияНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.ПериодОтчета.Наименование КАК ПериодОтчетаНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Сценарий.Наименование КАК СценарийНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Проект.Наименование КАК ПроектНаименование,
				|	СУММА(ЗначенияСтатусовПоказателейСинтетика.ЗначениеЗаблокировано) КАК ЗначениеЗаблокировано
				|ИЗ
				|	РегистрСведений.ЗначенияСтатусовПоказателейСинтетика КАК ЗначенияСтатусовПоказателейСинтетика
				|ГДЕ
				|	ЗначенияСтатусовПоказателейСинтетика.ВидОтчета = &Ссылка
				|	И (ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния > 0
				|			ИЛИ ЗначенияСтатусовПоказателейСинтетика.ЗначениеЗаблокировано > 1)
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния,
				|	ЗначенияСтатусовПоказателейСинтетика.ОрганизационнаяЕдиница.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.ПериодОтчета.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Сценарий.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Проект.Наименование";
				
			Иначе
				
				ПоляАналитика = "";
				ПоляИндексирования = "";
				ОтборПоАналитикам = "";
				
				Для ИндексАналитики = 1 По МаксАналитикОтчета Цикл
					
					ИндАналитики = Строка(ИндексАналитики);
					
					ОтборПоАналитикам = ОтборПоАналитикам + "
				|			И ЗначенияСтатусовПоказателейСинтетика.Аналитика" + ИндАналитики + " = ВТАналитикаПоказателей.Аналитика" + ИндАналитики;
					
					ПоляАналитика = ПоляАналитика + ",
				|	ЗначенияПоказателейОтчетов.Аналитика" + ИндАналитики + " КАК Аналитика" + ИндАналитики;
					
					ПоляИндексирования = ПоляИндексирования + ",
				|	Аналитика" + ИндАналитики;
										
				КонецЦикла;
				
				Запрос.Текст = "ВЫБРАТЬ
				|	ВерсииЗначенийПоказателей.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ВТВерсииПоказателей
				|ИЗ
				|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
				|ГДЕ
				|	НЕ ВерсииЗначенийПоказателей.ПометкаУдаления
				|	И ВерсииЗначенийПоказателей.ВидОтчета = &Ссылка
				|	И НЕ ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗначенияПоказателейОтчетов.Показатель КАК Показатель" + ПоляАналитика + "
				|ПОМЕСТИТЬ ВТАналитикаПоказателей
				|ИЗ
				|	ВТВерсииПоказателей КАК ВТВерсииПоказателей
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейОтчетов" + ИндАналитики + " КАК ЗначенияПоказателейОтчетов
				|		ПО ВТВерсииПоказателей.Ссылка = ЗначенияПоказателейОтчетов.Версия
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Показатель" + ПоляИндексирования + "
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТВерсииПоказателей
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния КАК ИндексСостояния,
				|	ЗначенияСтатусовПоказателейСинтетика.ОрганизационнаяЕдиница.Наименование КАК ОрганизацияНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.ПериодОтчета.Наименование КАК ПериодОтчетаНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Сценарий.Наименование КАК СценарийНаименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Проект.Наименование КАК ПроектНаименование,
				|	СУММА(ЗначенияСтатусовПоказателейСинтетика.ЗначениеЗаблокировано) КАК ЗначениеЗаблокировано
				|ИЗ
				|	РегистрСведений.ЗначенияСтатусовПоказателейСинтетика КАК ЗначенияСтатусовПоказателейСинтетика
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАналитикаПоказателей КАК ВТАналитикаПоказателей
				|		ПО ЗначенияСтатусовПоказателейСинтетика.Показатель = ВТАналитикаПоказателей.Показатель" + ОтборПоАналитикам + "
				|ГДЕ
				|	ЗначенияСтатусовПоказателейСинтетика.ВидОтчета = &Ссылка
				|	И (ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния > 0
				|			ИЛИ ЗначенияСтатусовПоказателейСинтетика.ЗначениеЗаблокировано > 1)
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния,
				|	ЗначенияСтатусовПоказателейСинтетика.ОрганизационнаяЕдиница.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.ПериодОтчета.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Сценарий.Наименование,
				|	ЗначенияСтатусовПоказателейСинтетика.Проект.Наименование
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТАналитикаПоказателей";
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			
			ТекстОшибки="";
			
			Результат=Запрос.Выполнить().Выбрать();
			
			Пока Результат.Следующий() Цикл
				
				СодержаниеОшибки = "";
				
				Если ПустаяСтрока(Результат.ПроектНаименование) тогда
					
					СтрокаШаблона = НСтр("ru = 'Организация: %1, период: %2, сценарий: %3'");
					
					Если Не ПустаяСтрока(СтрокаШаблона) тогда
						СодержаниеОшибки = СтрШаблон(СтрокаШаблона, Результат.ОрганизацияНаименование, Результат.ПериодОтчетаНаименование, Результат.СценарийНаименование);						
					КонецЕсли;
					
				Иначе
					
					СтрокаШаблона = НСтр("ru = 'Организация: %1, период: %2, сценарий: %3, проект: %4'");
					
					Если Не ПустаяСтрока(СтрокаШаблона) тогда
						СодержаниеОшибки = СтрШаблон(СтрокаШаблона, Результат.ОрганизацияНаименование, Результат.ПериодОтчетаНаименование, Результат.СценарийНаименование, Результат.ПроектНаименование);						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ПустаяСтрока(СодержаниеОшибки) тогда
					Продолжить;
				КонецЕсли;
				
				ТекстОшибки = ТекстОшибки + СодержаниеОшибки + Символы.ПС;
										
				Если Результат.ИндексСостояния=1 Тогда
											
					ТекстОшибки=ТекстОшибки + НСтр("ru = ', состояние: проверен, на утверждении.'");
					
				ИначеЕсли Результат.ИндексСостояния=2 Тогда
											
					ТекстОшибки=ТекстОшибки + НСтр("ru = ', состояние: возвращен.'");
					
				ИначеЕсли Результат.ИндексСостояния=3 Тогда
											
					ТекстОшибки=ТекстОшибки + НСтр("ru = ', состояние: утвержден.'");
					
				КонецЕсли;
				
				Если Результат.ЗначениеЗаблокировано>1 Тогда
					
					ТекстОшибки=ТекстОшибки + НСтр("ru = '; Данные заблокированы от изменений.'");
					
				КонецЕсли;
							
			КонецЦикла;
			
			Если Не ПустаяСтрока(ТекстОшибки) Тогда
				
				СтрокаШаблона1 = НСтр("ru = 'Вид отчета %1'");
				СтрокаШаблона2 = НСтр("ru = 'Изменение объекта для согласования значений невозможно: существуют данные на различных стадиях согласования и блокировки.'");
				
				Если Не ПустаяСтрока(СтрокаШаблона1) тогда
					ПолныйТекстОшибки = СтрШаблон(СтрокаШаблона1, Наименование) + Символы.ПС + СтрокаШаблона2 + Символы.ПС + ТекстОшибки;
				Иначе
					ПолныйТекстОшибки = ТекстОшибки;
				КонецЕсли;
				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ПолныйТекстОшибки, Отказ,, СтатусСообщения.Важное);
								
			КонецЕсли;
			
			Если Отказ Тогда
				
				Возврат;
				
			КонецЕсли;
			
			НаборЗаписей=РегистрыСведений.ЗначенияСтатусовПоказателейСинтетика.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВидОтчета.Установить(Ссылка);
			НаборЗаписей.Записать(Истина);
								
		КонецЕсли;
	
		Если НЕ ЭтоГруппа
			И Ссылка.СохранятьИсториюИзменений
			И (НЕ СохранятьИсториюИзменений) Тогда
			
			Если НЕ Документы.НастраиваемыйОтчет.СвернутьВерсии(Ссылка) Тогда
				
				СтрокаШаблона = НСтр("ru = 'Не удалось свернуть версии экземпляров отчетов вида %1
				|%2'");
				
				Если Не ПустаяСтрока(СтрокаШаблона) тогда
					ТекстОшибки = СтрШаблон(СтрокаШаблона, Наименование, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				Иначе
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				КонецЕсли;
								
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ,, СтатусСообщения.Важное);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ПометкаУдаления=Ссылка.ПометкаУдаления Тогда
			ОбновитьПометкуУдаленияДляПодчиненных=Истина;
		КонецЕсли;
		
	ИначеЕсли Не (ЗначениеЗаполнено(ОбъектДляСогласованияЗначений) ИЛИ ЭтоГруппа) Тогда
		
		ОбъектДляСогласованияЗначений=Перечисления.ОбъектыСогласованияЗначенийПоказателейОтчетов.ЭкземплярОтчета;
		
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Предназначение) Тогда
		
		Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.ПроизвольныеДанные;
		
	КонецЕсли;
		
	Если НЕ Отказ Тогда
		НомерПервойПустойАналитики = 0;
		Для Инд = 1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			Если Метаданные().Реквизиты.Найти("ВидАналитики" + Инд) = Неопределено Тогда
				Продолжить;
			КонецЕсли;

			Если ЭтотОбъект["ВидАналитики" + Инд] = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка() И НомерПервойПустойАналитики = 0 Тогда
				НомерПервойПустойАналитики = Инд;
			ИначеЕсли ЭтотОбъект["ВидАналитики" + Инд] <> ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка() И НомерПервойПустойАналитики <> 0 Тогда
				Сообщить(НСтр("ru = 'Список аналитик на уровне отчета не может иметь пропуски!'"), СтатусСообщения.Важное);
				Отказ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
	Если Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.ОборотноСальдоваяВедомость И (Не ПометкаУдаления) Тогда
		
		Если Не ЗначениеЗаполнено(ПланСчетов) Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не указан используемый план счетов.'"), Отказ,, СтатусСообщения.Внимание);
			
		КонецЕсли;
				
	КонецЕсли;
		
	ПредназначениеСтар=Ссылка.Предназначение;
						
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		Код=ОбщегоНазначенияУХ.СформироватьКодНаОснованииНаименования(Наименование,,"ВидыОтчетов");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьПометкуУдаленияДанных(Отказ)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ОписаниеВерсий.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОписаниеВерсий КАК ОписаниеВерсий
	|ГДЕ
	|	ОписаниеВерсий.ВидОтчета = &ВидОтчета";
	
	Запрос.УстановитьПараметр("ВидОтчета",Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();
		
	Пока Результат.Следующий() Цикл
		Попытка
			Результат.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(ПометкаУдаления, Истина);
		Исключение
			
			ТекстОшибки=СтрШаблон(Нстр("ru = 'Не удалось изменить пометку удаления вида отчета %1: %2'"),Ссылка,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ,,СтатусСообщения.Важное);
			Возврат;
		КонецПопытки;
	КонецЦикла;
	
	Запрос.Текст="ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|ГДЕ
	|	НастраиваемыйОтчет.ВидОтчета = &ВидОтчета";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ДокументОбъект=Результат.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ОбрабатыватьПометкуУдаленияОписанияВерсий=Ложь;
		ДокументОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
		
		Попытка
			
			ДокументОбъект.Записать();
			
		Исключение
			
			ТекстОшибки=СтрШаблон(Нстр("ru = 'Не удалось пометить на удаление вид отчета %1: %2'"),ДокументОбъект,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ,,СтатусСообщения.Важное);
			Возврат;
		КонецПопытки;
		
	КонецЦикла;
			
			
			

	
	
	
КонецПроцедуры // ОбновитьПометкуУдаленияДанных()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
			
	Если ОбновитьПометкуУдаленияДляПодчиненных Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ПравилаОбработки.Ссылка
		|ИЗ
		|	Справочник.ПравилаОбработки КАК ПравилаОбработки
		|ГДЕ
		|	ПравилаОбработки.Владелец = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Пока Результат.Следующий() Цикл
			
			МассивРеквизитов=Новый Массив;
			МассивРеквизитов.Добавить("НазначениеРасчетов");
			
			ОбщегоНазначенияУХ.ПометитьСправочникПоРеквизиту("ИсточникиДанныхДляРасчетов",МассивРеквизитов,Результат.Ссылка,ПометкаУдаления,Ложь);
			
		КонецЦикла;
		
		ОбщегоНазначенияУХ.ПометитьСправочникПоРеквизиту("ХранимыеФайлыОрганизаций","УДАЛИТЬ_ВидОтчета",	Ссылка,ПометкаУдаления,Отказ);
		ОбщегоНазначенияУХ.ПометитьСправочникПоРеквизиту("ДокументыБД",				"ШаблонДокументаБД",	Ссылка,ПометкаУдаления,Отказ);
		
		ОбновитьПометкуУдаленияДанных(Отказ);
		
	КонецЕсли;
	
	Если Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.ОборотноСальдоваяВедомость И ИспользоватьПоУмолчанию Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ВидыОтчетов.Ссылка
		|ИЗ
		|	Справочник.ВидыОтчетов КАК ВидыОтчетов
		|ГДЕ
		|	ВидыОтчетов.ПланСчетов = &ПланСчетов
		|	И ВидыОтчетов.ИспользоватьПоУмолчанию
		|	И НЕ ВидыОтчетов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("ПланСчетов",				ПланСчетов);
		Запрос.УстановитьПараметр("Ссылка",					Ссылка);
		Запрос.УстановитьПараметр("ИспользоватьПоУмолчанию",ИспользоватьПоУмолчанию);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			СправочникОбъект=Результат.Ссылка.ПолучитьОбъект();
			СправочникОбъект.ИспользоватьПоУмолчанию=Ложь;
			СправочникОбъект.ОбменДанными.Загрузка=Истина;
			СправочникОбъект.Записать();
			
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПланСчетов,"ВидОтчетаОСВ")=Ссылка Тогда
			
			ПланОбъект=ПланСчетов.ПолучитьОбъект();
			ПланОбъект.ВидОтчетаОСВ=Ссылка;
			ПланОбъект.ОбменДанными.Загрузка=Истина;
			
			Попытка
				
				ПланОбъект.Записать();
				
			Исключение
				
				СтрокаШаблона = НСтр("ru = 'Не удалось изменить вид отчета для остатков и оборотов у плана счетов %1: %2'");
				
				Если Не ПустаяСтрока(СтрокаШаблона) тогда
					ТекстОшибки = СтрШаблон(СтрокаШаблона, ПланСчетов, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				Иначе
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				КонецЕсли;
								
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ,, СтатусСообщения.Важное);
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПредназначениеСтар=Предназначение Тогда
		
		Справочники.ВидыОтчетов.ИзменитьПредназначениеЭлементовСтруктуры(Ссылка,Предназначение);
		
	КонецЕсли;
	
	//Создаем минимум один ракурс для согласования, если не было.
	РасширениеБизнесЛогикиУХ.СоздатьРакурсПоУмолчанию(Ссылка);
	
	Если НЕ (Отказ ИЛИ АдресПараметровРеструктуризации=Неопределено) Тогда
			
		Отказ = НЕ Справочники.ВидыОтчетов.ВыполнитьДействияПоРеструктуризации(АдресПараметровРеструктуризации);
			
	КонецЕсли;
	
	Если Не Отказ
		И ОбщегоНазначения.ПодсистемаСуществует("ПодсистемыУХ.РасчетПоказателей") Тогда
		МодульУправлениеРасчетомПоказателей = ОбщегоНазначения.ОбщийМодуль("УправлениеРасчетомПоказателей");
		МодульУправлениеРасчетомПоказателей.ОчиститьСтруктуруРасчетаПоказателейПоПравилуРасчета(Ссылка);
	КонецЕсли;
	
//	ОбработатьИзменениеИерархииДляГруппДоступа()	
		
КонецПроцедуры

Процедура ОбработатьИзменениеИерархииДляГруппДоступа()
	
	МассивОбработанныхГрупп=Новый Массив;
	
	Если ЗаписьНовогоОбъекта Тогда
		
		ОбработатьГруппыДоступа(Ссылка,МассивОбработанныхГрупп);
		
	ИначеЕсли НЕ РодительСтар=Родитель Тогда
		
		Если ЗначениеЗаполнено(РодительСтар) Тогда // убираем права по старому родителю
			
			ОбработатьГруппыДоступа(РодительСтар,МассивОбработанныхГрупп); 
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Родитель) Тогда // Назначаем права по новому родителю
			
			ОбработатьГруппыДоступа(Родитель,МассивОбработанныхГрупп);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьИзменениеИерархииДляГруппДоступа()


Процедура ОбработатьГруппыДоступа(ЭлементДоступа,МассивОбработанныхГрупп)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ВидыОтчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыОтчетов КАК ВидыОтчетов
	|ГДЕ
	|	ВидыОтчетов.Ссылка = &Ссылка
	|ИТОГИ ПО
	|	Ссылка ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Ссылка",ЭлементДоступа);
	СписокРодителей=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыДоступаКВидамОтчетов.ГруппыВидыОтчетов КАК ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов
	|ГДЕ
	|	ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов.ВидОтчета.ЭтоГруппа
	|	И ГруппыДоступаКВидамОтчетовГруппыВидыОтчетов.ВидОтчета В(&СписокРодителей)";
	
	Запрос.УстановитьПараметр("СписокРодителей",СписокРодителей);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Если МассивОбработанныхГрупп.Найти(Результат.Ссылка)=Неопределено Тогда
			
			СправочникОбъект=Результат.Ссылка.ПолучитьОбъект();
			СправочникОбъект.Записать();
			МассивОбработанныхГрупп.Добавить(Результат.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ОбработатьГруппыДоступа() 

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей=РегистрыСведений.НастройкаОбработкиОтчетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ШаблонДокументаБД.Установить(Ссылка);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
		ПараметрыМетода = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект);
		ПараметрыМетода.Добавить(МассивНепроверяемыхРеквизитов);
		ОбщегоНазначения.ВыполнитьМетодКонфигурации("УстановкаЛимитовУХ.ОбработкаПроверкиЗаполненияВидаОтчета", ПараметрыМетода);
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ПараметрыУстановкиЛимитов.КолонкаОтчета");
		МассивНепроверяемыхРеквизитов.Добавить("ПараметрыУстановкиЛимитов.ВидБюджета");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не ЭтотОбъект.ЭтоГруппа Тогда
		Если ЭтотОбъект.МожетИспользоватьсяДляУстановкиЛимитов Тогда
			Если ЭтотОбъект.ПараметрыУстановкиЛимитов.Количество() = 0 Тогда
				ТекстСообщения = НСтр("ru = 'Лимиты не могут быть установлены по этому виду отчета, т.к. не указана колонка отчета ни для одного вида бюджета.
				|Снимите признак возможности установки лимитов по этому виду отчета или укажите колонку для строк, связанных со статьями бюджетов.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПараметрыУстановкиЛимитов",, Отказ); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

ПараметрыКопирования = Новый Структура;
ОбновитьПометкуУдаленияДляПодчиненных=Ложь;

#КонецЕсли

