
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоступныеОбъекты = ПолучитьОбъектыДоступныеДляОбмена();
	Элементы.ИмяОбъекта.СписокВыбора.ЗагрузитьЗначения(ДоступныеОбъекты);
	
	ЗаполнитьДоступныеНастройкиКомпоновкиДанных();
	
	УстановитьВидимостьИменТопиков();
	
	УстановитьЗаголовокГруппыОтбора();
	
	УстановитьВидимостьКомандыСозданияСхем();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	НастройкиОтбора = ТекущийОбъект.ХранилищеОтбора.Получить();
	Если НЕ НастройкиОтбора = Неопределено Тогда
		АдресНастройкиОтбора = ПоместитьВоВременноеХранилище(НастройкиОтбора, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеОтбора = Новый ХранилищеЗначения(КомпоновщикНастроек.Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаПриИзменении(Элемент)
	
	ИмяОбъектаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагОтправкаПриИзменении(Элемент)
	
	УстановитьВидимостьИменТопиков();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагПолучениеПриИзменении(Элемент)
	
	УстановитьВидимостьИменТопиков();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПриИзмененииНастроекОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборПослеУдаления(Элемент)
	
	ПриИзмененииНастроекОтбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьСхемуДанных(Команда)
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ИмяОбъекта", Объект.ИмяОбъекта);
	СтруктураЗаполнения.Вставить("Наименование", Объект.ПространствоИмен);
	
	ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения);
	
	ОткрытьФорму(
		"Справочник.СП_СхемыДанных.Форма.ФормаЭлемента",
		ПараметрыОткрытия,
		ЭтотОбъект,
		ЭтотОбъект,
		,
		,
		Новый ОписаниеОповещения("СоздатьСхемуДанныхЗавершение", ЭтотОбъект)
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьОбъектыДоступныеДляОбмена()
	
	ДоступныеОбъекты = Новый Массив;
	
	ДоступныеМетаданные = Новый Массив;
	ДоступныеМетаданные.Добавить("Справочники");
	ДоступныеМетаданные.Добавить("Документы");
	ДоступныеМетаданные.Добавить("РегистрыСведений");
	ДоступныеМетаданные.Добавить("Задачи");
	
	Для Каждого ИмяМетаданных Из ДоступныеМетаданные Цикл
		Для Каждого МетаОбъект Из Метаданные[ИмяМетаданных] Цикл
			ДоступныеОбъекты.Добавить(МетаОбъект.ПолноеИмя());
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДоступныеОбъекты;
	
КонецФункции

&НаСервере
Процедура ИмяОбъектаПриИзмененииНаСервере()
	
	УстановитьНаименованиеПоУмолчанию();
	
	УстановитьСхемуДанныхПоУмолчанию();
	
	ЗаполнитьДоступныеНастройкиКомпоновкиДанных();
	
	УстановитьВидимостьКомандыСозданияСхем();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаименованиеПоУмолчанию()
	
	МетаОбъект = Метаданные.НайтиПоПолномуИмени(Объект.ИмяОбъекта);
	Объект.Наименование = МетаОбъект.Синоним;
	Объект.ПространствоИмен = СП_СхемыДанных.ПространствоИменПоИмениОбъекта(Объект.ИмяОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСхемуДанныхПоУмолчанию()
	
	Объект.СхемаДанныхСсылка = 
		СП_СхемыДанных.ПолучитьСхемуДанныхПоПространствуИмен(Объект.ПространствоИмен);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеНастройкиКомпоновкиДанных()
	
	Если ПустаяСтрока(Объект.ИмяОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СП_РаботаССообщениями.ПолучитьТекстЗапросаПоИмениОбъекта(Объект.ИмяОбъекта);
	СхемаКомпоновки = СП_РаботаССообщениями.НоваяСхемаКомпоновкиДанных(ТекстЗапроса);
	
	Если ЭтоАдресВременногоХранилища(АдресНастройкиОтбора) Тогда
		НастройкиОтбора = ПолучитьИзВременногоХранилища(АдресНастройкиОтбора);
	Иначе
		НастройкиОтбора = СхемаКомпоновки.НастройкиПоУмолчанию;
	КонецЕсли;
	
	АдресСхемыКомпоновки = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновки);
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИменТопиков()
	
	Элементы.ТемаДляОтправки.Видимость = Объект.ФлагОтправка;
	Элементы.ТемаДляПолучения.Видимость = Объект.ФлагПолучение;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокГруппыОтбора()
	
	ЗаголовокОтбора = "Отбор";
	КоличествоЭлементовОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество();
	
	Если КоличествоЭлементовОтбора = 0 Тогда
		Элементы.ГруппаОтбор.Заголовок = ЗаголовокОтбора;
	Иначе
		Элементы.ГруппаОтбор.Заголовок = СтрШаблон("%1 (%2)", ЗаголовокОтбора, КоличествоЭлементовОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНастроекОтбора()
	
	УстановитьЗаголовокГруппыОтбора();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандыСозданияСхем()
	
	Элементы.СоздатьСхемуДанных.Видимость = РазрешеноСоздаватьСхемуДанных();
	
КонецПроцедуры

&НаСервере
Функция РазрешеноСоздаватьСхемуДанных()
	
	Если ЗначениеЗаполнено(Объект.СхемаДанныхСсылка)
		ИЛИ (Не ЗначениеЗаполнено(Объект.ИмяОбъекта) 
			И Не ЗначениеЗаполнено(Объект.ПространствоИмен)) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	СхемаДанных = СП_СхемыДанных.ПолучитьСхемуДанныхПоПространствуИмен(Объект.ПространствоИмен);
	
	Возврат СхемаДанных = Неопределено;
	
КонецФункции

&НаСервере
Процедура СоздатьСхемуДанныхЗавершение(Результат, ДопПараметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПространствоИмен", Объект.ПространствоИмен);
	Запрос.УстановитьПараметр("ИмяОбъекта", Объект.ИмяОбъекта);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СП_СхемыДанных.Ссылка
	|ИЗ
	|	Справочник.СП_СхемыДанных КАК СП_СхемыДанных
	|ГДЕ
	|	СП_СхемыДанных.Наименование = &ПространствоИмен
	|	И СП_СхемыДанных.ИмяОбъекта = &ИмяОбъекта";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.СхемаДанныхСсылка = Выборка.Ссылка;
		УстановитьВидимостьКомандыСозданияСхем();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
