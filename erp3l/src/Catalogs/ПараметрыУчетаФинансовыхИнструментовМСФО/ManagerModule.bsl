#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СоответствиеСчетаСубконто

Функция ПолучитьСоответствиеСчетаСубконто(СчетаСведенийФИ = Ложь, СчетаДолгосрочногоКраткосрочногоФИ = Ложь) Экспорт 

	СчетаСубконто = Новый Структура;
	
	ДобавитьСчетаСубконто_СчетаФИ(СчетаСубконто, СчетаДолгосрочногоКраткосрочногоФИ);
	ДобавитьСчетаСубконто_СчетаПриПереоценке(СчетаСубконто);
	ДобавитьСчетаСубконто_СчетаДоходыРасходы(СчетаСубконто);
	ДобавитьСчетаСубконто_СчетаДоходыРасходыПоКурсовымРазницам(СчетаСубконто);
	ДобавитьСчетаСубконто_СчетаУчетаСтоимости(СчетаСубконто);
	ДобавитьСчетаСубконто_СчетаЛизинга(СчетаСубконто);
	
	Если СчетаСведенийФИ Тогда
		ДобавитьСчетаСубконто_СчетаСведенийФИ(СчетаСубконто);
	КонецЕсли;
			
	Возврат СчетаСубконто;
	
КонецФункции

Функция ДобавитьСчетаСубконто_СчетаФИ(СчетаСубконто, СчетаДолгосрочногоКраткосрочногоФИ) Экспорт

	Если СчетаДолгосрочногоКраткосрочногоФИ Тогда
	
		СчетаСубконто.Вставить("СчетДолгосрочногоФИ", Новый Соответствие);
		СчетаСубконто.СчетДолгосрочногоФИ.Вставить(1, "СчетДолгосрочногоФИСубконто1");
		СчетаСубконто.СчетДолгосрочногоФИ.Вставить(2, "СчетДолгосрочногоФИСубконто2");
		СчетаСубконто.СчетДолгосрочногоФИ.Вставить(3, "СчетДолгосрочногоФИСубконто3");
			
		СчетаСубконто.Вставить("СчетКраткосрочногоФИ", Новый Соответствие);
		СчетаСубконто.СчетКраткосрочногоФИ.Вставить(1, "СчетКраткосрочногоФИСубконто1");
		СчетаСубконто.СчетКраткосрочногоФИ.Вставить(2, "СчетКраткосрочногоФИСубконто2");
		СчетаСубконто.СчетКраткосрочногоФИ.Вставить(3, "СчетКраткосрочногоФИСубконто3");
		
	КонецЕсли;
	
	СчетаСубконто.Вставить("СчетКраткосрочнойЧасти", Новый Соответствие);
	СчетаСубконто.СчетКраткосрочнойЧасти.Вставить(1, "СчетКраткосрочнойЧастиСубконто1");
	СчетаСубконто.СчетКраткосрочнойЧасти.Вставить(2, "СчетКраткосрочнойЧастиСубконто2");
	СчетаСубконто.СчетКраткосрочнойЧасти.Вставить(3, "СчетКраткосрочнойЧастиСубконто3");

	СчетаСубконто.Вставить("СчетКраткосрочныхПроцентов", Новый Соответствие);
	СчетаСубконто.СчетКраткосрочныхПроцентов.Вставить(1, "СчетКраткосрочныхПроцентовСубконто1");
	СчетаСубконто.СчетКраткосрочныхПроцентов.Вставить(2, "СчетКраткосрочныхПроцентовСубконто2");
	СчетаСубконто.СчетКраткосрочныхПроцентов.Вставить(3, "СчетКраткосрочныхПроцентовСубконто3");
	
	СчетаСубконто.Вставить("СчетДолгосрочныхПроцентов", Новый Соответствие);
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(1, "СчетДолгосрочныхПроцентовСубконто1");
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(2, "СчетДолгосрочныхПроцентовСубконто2");
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(3, "СчетДолгосрочныхПроцентовСубконто3");
	
	СчетаСубконто.Вставить("СчетДисконтаБалансовый", Новый Соответствие);
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(1, "СчетДисконтаБалансовыйСубконто1");
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(2, "СчетДисконтаБалансовыйСубконто2");
	СчетаСубконто.СчетДолгосрочныхПроцентов.Вставить(3, "СчетДисконтаБалансовыйСубконто3");

КонецФункции

Функция ДобавитьСчетаСубконто_СчетаПриПереоценке(СчетаСубконто) Экспорт
	
	СчетаСубконто.Вставить("СчетАктиваКраткосрочный", Новый Соответствие);
	СчетаСубконто.СчетАктиваКраткосрочный.Вставить(1, "СчетАктиваКраткосрочныйСубконто1");
	СчетаСубконто.СчетАктиваКраткосрочный.Вставить(2, "СчетАктиваКраткосрочныйСубконто2");
	СчетаСубконто.СчетАктиваКраткосрочный.Вставить(3, "СчетАктиваКраткосрочныйСубконто3");
	
	СчетаСубконто.Вставить("СчетОбязательстваКраткосрочный", Новый Соответствие);
	СчетаСубконто.СчетОбязательстваКраткосрочный.Вставить(1, "СчетОбязательстваКраткосрочныйСубконто1");
	СчетаСубконто.СчетОбязательстваКраткосрочный.Вставить(2, "СчетОбязательстваКраткосрочныйСубконто2");
	СчетаСубконто.СчетОбязательстваКраткосрочный.Вставить(3, "СчетОбязательстваКраткосрочныйСубконто3");
	
	СчетаСубконто.Вставить("СчетАктиваДолгосрочный", Новый Соответствие);
	СчетаСубконто.СчетАктиваДолгосрочный.Вставить(1, "СчетАктиваДолгосрочныйСубконто1");
	СчетаСубконто.СчетАктиваДолгосрочный.Вставить(2, "СчетАктиваДолгосрочныйСубконто2");
	СчетаСубконто.СчетАктиваДолгосрочный.Вставить(3, "СчетАктиваДолгосрочныйСубконто3");
	
	СчетаСубконто.Вставить("СчетОбязательстваДолгосрочный", Новый Соответствие);
	СчетаСубконто.СчетОбязательстваДолгосрочный.Вставить(1, "СчетОбязательстваДолгосрочныйСубконто1");
	СчетаСубконто.СчетОбязательстваДолгосрочный.Вставить(2, "СчетОбязательстваДолгосрочныйСубконто2");
	СчетаСубконто.СчетОбязательстваДолгосрочный.Вставить(3, "СчетОбязательстваДолгосрочныйСубконто3");
	
КонецФункции

Функция ДобавитьСчетаСубконто_СчетаДоходыРасходы(СчетаСубконто) Экспорт

	СчетаСубконто.Вставить("СчетДоходаОсновной", Новый Соответствие);
	СчетаСубконто.СчетДоходаОсновной.Вставить(1, "СчетДоходаОсновнойСубконто1");
	СчетаСубконто.СчетДоходаОсновной.Вставить(2, "СчетДоходаОсновнойСубконто2");
	СчетаСубконто.СчетДоходаОсновной.Вставить(3, "СчетДоходаОсновнойСубконто3");
	
	СчетаСубконто.Вставить("СчетРасходаОсновной", Новый Соответствие);
	СчетаСубконто.СчетРасходаОсновной.Вставить(1, "СчетРасходаОсновнойСубконто1");
	СчетаСубконто.СчетРасходаОсновной.Вставить(2, "СчетРасходаОсновнойСубконто2");
	СчетаСубконто.СчетРасходаОсновной.Вставить(3, "СчетРасходаОсновнойСубконто3");
		
	СчетаСубконто.Вставить("СчетДоходаПоПроцентам", Новый Соответствие);
	СчетаСубконто.СчетДоходаПоПроцентам.Вставить(1, "СчетДоходаПоПроцентамСубконто1");
	СчетаСубконто.СчетДоходаПоПроцентам.Вставить(2, "СчетДоходаПоПроцентамСубконто2");
	СчетаСубконто.СчетДоходаПоПроцентам.Вставить(3, "СчетДоходаПоПроцентамСубконто3");
	
	СчетаСубконто.Вставить("СчетРасходаПоПроцентам", Новый Соответствие);
	СчетаСубконто.СчетРасходаПоПроцентам.Вставить(1, "СчетРасходаПоПроцентамСубконто1");
	СчетаСубконто.СчетРасходаПоПроцентам.Вставить(2, "СчетРасходаПоПроцентамСубконто2");
	СчетаСубконто.СчетРасходаПоПроцентам.Вставить(3, "СчетРасходаПоПроцентамСубконто3");
	
	// при переоценке
	
	СчетаСубконто.Вставить("СчетДоходаОтПереоценки", Новый Соответствие);
	СчетаСубконто.СчетДоходаОтПереоценки.Вставить(1, "СчетДоходаОтПереоценкиСубконто1");
	СчетаСубконто.СчетДоходаОтПереоценки.Вставить(2, "СчетДоходаОтПереоценкиСубконто2");
	СчетаСубконто.СчетДоходаОтПереоценки.Вставить(3, "СчетДоходаОтПереоценкиСубконто3");
	
	СчетаСубконто.Вставить("СчетРасходаОтПереоценки", Новый Соответствие);
	СчетаСубконто.СчетРасходаОтПереоценки.Вставить(1, "СчетРасходаОтПереоценкиСубконто1");
	СчетаСубконто.СчетРасходаОтПереоценки.Вставить(2, "СчетРасходаОтПереоценкиСубконто2");
	СчетаСубконто.СчетРасходаОтПереоценки.Вставить(3, "СчетРасходаОтПереоценкиСубконто3");
	
	СчетаСубконто.Вставить("СчетСписанияНеарендногоПлатежа", Новый Соответствие);
	СчетаСубконто.СчетСписанияНеарендногоПлатежа.Вставить(1, "СчетСписанияНеарендногоПлатежаСубконто1");
	СчетаСубконто.СчетСписанияНеарендногоПлатежа.Вставить(2, "СчетСписанияНеарендногоПлатежаСубконто2");
	СчетаСубконто.СчетСписанияНеарендногоПлатежа.Вставить(3, "СчетСписанияНеарендногоПлатежаСубконто3");

КонецФункции

Функция ДобавитьСчетаСубконто_СчетаДоходыРасходыПоКурсовымРазницам(СчетаСубконто) Экспорт

	СчетаСубконто.Вставить("СчетДоходаПоКурсовымРазницам", Новый Соответствие);
	СчетаСубконто.СчетДоходаПоКурсовымРазницам.Вставить(1, "СчетДоходаПоКурсовымРазницамСубконто1");
	СчетаСубконто.СчетДоходаПоКурсовымРазницам.Вставить(2, "СчетДоходаПоКурсовымРазницамСубконто2");
	СчетаСубконто.СчетДоходаПоКурсовымРазницам.Вставить(3, "СчетДоходаПоКурсовымРазницамСубконто3");
	
	СчетаСубконто.Вставить("СчетРасходаПоКурсовымРазницам", Новый Соответствие);
	СчетаСубконто.СчетРасходаПоКурсовымРазницам.Вставить(1, "СчетРасходаПоКурсовымРазницамСубконто1");
	СчетаСубконто.СчетРасходаПоКурсовымРазницам.Вставить(2, "СчетРасходаПоКурсовымРазницамСубконто2");
	СчетаСубконто.СчетРасходаПоКурсовымРазницам.Вставить(3, "СчетРасходаПоКурсовымРазницамСубконто3");
	
КонецФункции

Функция ДобавитьСчетаСубконто_СчетаУчетаСтоимости(СчетаСубконто) Экспорт
	
	СчетаСубконто.Вставить("СчетОбесценения", Новый Соответствие);
	СчетаСубконто.СчетОбесценения.Вставить(1, "СчетОбесцененияСубконто1");
	СчетаСубконто.СчетОбесценения.Вставить(2, "СчетОбесцененияСубконто2");
	СчетаСубконто.СчетОбесценения.Вставить(3, "СчетОбесцененияСубконто3");
	
	СчетаСубконто.Вставить("СчетСправедливойСтоимости", Новый Соответствие);
	СчетаСубконто.СчетСправедливойСтоимости.Вставить(1, "СчетСправедливойСтоимостиСубконто1");
	СчетаСубконто.СчетСправедливойСтоимости.Вставить(2, "СчетСправедливойСтоимостиСубконто2");
	СчетаСубконто.СчетСправедливойСтоимости.Вставить(3, "СчетСправедливойСтоимостиСубконто3");
	
	СчетаСубконто.Вставить("СчетАмортизацииПоправки", Новый Соответствие);
	СчетаСубконто.СчетАмортизацииПоправки.Вставить(1, "СчетАмортизацииПоправкиСубконто1");
	СчетаСубконто.СчетАмортизацииПоправки.Вставить(2, "СчетАмортизацииПоправкиСубконто2");
	СчетаСубконто.СчетАмортизацииПоправки.Вставить(3, "СчетАмортизацииПоправкиСубконто3");
 	
КонецФункции

Функция ДобавитьСчетаСубконто_СчетаЛизинга(СчетаСубконто) Экспорт

	СчетаСубконто.Вставить("СчетПрочейЗадолженностиКраткосрочный", Новый Соответствие);
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(1, "СчетПрочейЗадолженностиКраткосрочныйСубконто1");
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(2, "СчетПрочейЗадолженностиКраткосрочныйСубконто2");
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(3, "СчетПрочейЗадолженностиКраткосрочныйСубконто3");
	
	СчетаСубконто.Вставить("СчетЗадолженности", Новый Соответствие);
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(1, "СчетЗадолженностиСубконто1");
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(2, "СчетЗадолженностиСубконто2");
	СчетаСубконто.СчетПрочейЗадолженностиКраткосрочный.Вставить(3, "СчетЗадолженностиСубконто3");
	
	СчетаСубконто.Вставить("СчетНачисленияПлатежа", Новый Соответствие);
	СчетаСубконто.СчетНачисленияПлатежа.Вставить(1, "СчетНачисленияПлатежаСубконто1");
	СчетаСубконто.СчетНачисленияПлатежа.Вставить(2, "СчетНачисленияПлатежаСубконто2");
	СчетаСубконто.СчетНачисленияПлатежа.Вставить(3, "СчетНачисленияПлатежаСубконто3");
	
	СчетаСубконто.Вставить("СчетНачисленияАванса", Новый Соответствие);
	СчетаСубконто.СчетНачисленияАванса.Вставить(1, "СчетНачисленияАвансаСубконто1");
	СчетаСубконто.СчетНачисленияАванса.Вставить(2, "СчетНачисленияАвансаСубконто2");
	СчетаСубконто.СчетНачисленияАванса.Вставить(3, "СчетНачисленияАвансаСубконто3");
	
	СчетаСубконто.Вставить("СчетРаскрытияМинимальныхПлатежей", Новый Соответствие);
	СчетаСубконто.СчетРаскрытияМинимальныхПлатежей.Вставить(1, "СчетРаскрытияМинимальныхПлатежейСубконто1");
	СчетаСубконто.СчетРаскрытияМинимальныхПлатежей.Вставить(2, "СчетРаскрытияМинимальныхПлатежейСубконто2");
	СчетаСубконто.СчетРаскрытияМинимальныхПлатежей.Вставить(3, "СчетРаскрытияМинимальныхПлатежейСубконто3");
	
	СчетаСубконто.Вставить("СчетБудущихРасходов", Новый Соответствие);
	СчетаСубконто.СчетБудущихРасходов.Вставить(1, "СчетБудущихРасходовСубконто1");
	СчетаСубконто.СчетБудущихРасходов.Вставить(2, "СчетБудущихРасходовСубконто2");
	СчетаСубконто.СчетБудущихРасходов.Вставить(3, "СчетБудущихРасходовСубконто3");
	
	СчетаСубконто.Вставить("СчетБудущихДоходов", Новый Соответствие);
	СчетаСубконто.СчетБудущихРасходов.Вставить(1, "СчетБудущихДоходовСубконто1");
	СчетаСубконто.СчетБудущихРасходов.Вставить(2, "СчетБудущихДоходовСубконто2");
	СчетаСубконто.СчетБудущихРасходов.Вставить(3, "СчетБудущихДоходовСубконто3");
	
	СчетаСубконто.Вставить("СчетРаскрытияЧистыеИнвестиции", Новый Соответствие);
	СчетаСубконто.СчетРаскрытияЧистыеИнвестиции.Вставить(1, "СчетРаскрытияЧистыеИнвестицииСубконто1");
	СчетаСубконто.СчетРаскрытияЧистыеИнвестиции.Вставить(2, "СчетРаскрытияЧистыеИнвестицииСубконто2");
	СчетаСубконто.СчетРаскрытияЧистыеИнвестиции.Вставить(3, "СчетРаскрытияЧистыеИнвестицииСубконто3");

КонецФункции

Функция ДобавитьСчетаСубконто_СчетаСведенийФИ(СчетаСубконто) Экспорт

	СчетаСубконто.Вставить("СчетНДС", Новый Соответствие);
	СчетаСубконто.СчетНДС.Вставить(1, "СчетНДССубконто1");
	СчетаСубконто.СчетНДС.Вставить(2, "СчетНДССубконто2");
	СчетаСубконто.СчетНДС.Вставить(3, "СчетНДССубконто3");
	
	СчетаСубконто.Вставить("СчетИсточник", Новый Соответствие);
	СчетаСубконто.СчетИсточник.Вставить(1, "СчетИсточник");
	СчетаСубконто.СчетИсточник.Вставить(2, "СчетИсточник");
	СчетаСубконто.СчетИсточник.Вставить(3, "СчетИсточник");
	
	СчетаСубконто.Вставить("СчетПрочейЗадолженности", Новый Соответствие);
	СчетаСубконто.СчетПрочейЗадолженности.Вставить(1, "СчетПрочейЗадолженностиСубконто1");
	СчетаСубконто.СчетПрочейЗадолженности.Вставить(2, "СчетПрочейЗадолженностиСубконто2");
	СчетаСубконто.СчетПрочейЗадолженности.Вставить(3, "СчетПрочейЗадолженностиСубконто3");


КонецФункции // ()

#КонецОбласти

Функция ПолучитьСчетаУчета(КонтекстВидФИ) Экспорт
	
	СпрС = КонтекстВидФИ.УчетПоСправедливойСтоимости;
	
	ЧерезПрочийСовокупныйДоход = КонтекстВидФИ.СпособУчетаПереоценки = Перечисления.СпособыУчетаПереоценкиФИ.ЧерезПрочийСовокупныйДоход;
	ЕстьДисконт = КонтекстВидФИ.ВидСтавкиРасчетаПроцентов <> ПредопределенноеЗначение("Перечисление.ВидыСтавокОбъектовФинансовогоХарактера.ЭффективнаяСтавка");
	ЕстьНДС = КонтекстВидФИ.Лизинг Или КонтекстВидФИ.Задолженность;
	Узел = Новый Структура;
	
	#Область СчетаУчета	
	Узел.Вставить("СчетАктиваДолгосрочный", 		КонтекстВидФИ.ДоступенАктив);
	Узел.Вставить("СчетАктиваКраткосрочный", 		НЕ СпрС И КонтекстВидФИ.ДоступенАктив);	
	Узел.Вставить("СчетОбязательстваДолгосрочный", 	КонтекстВидФИ.ДоступноОбязательство);	
	Узел.Вставить("СчетОбязательстваКраткосрочный",	Не СпрС И КонтекстВидФИ.ДоступноОбязательство);
	Узел.Вставить("СчетАмортизацииПоправки", 		Не СпрС И ЕстьДисконт И НЕ КонтекстВидФИ.ПорядокУчетаДисконта);
	Узел.Вставить("СчетДисконтаБалансовый", 		Не СпрС И ЕстьДисконт И КонтекстВидФИ.ПорядокУчетаДисконта);
	Узел.Вставить("СчетСправедливойСтоимости", 		Не СпрС И КонтекстВидФИ.ДоступноРаскрытиеСпрС);
	Узел.Вставить("СчетКраткосрочнойЧасти", 		Не СпрС И КонтекстВидФИ.ПереводВКраткосрочную);
	Узел.Вставить("СчетКраткосрочныхПроцентов", 	Не СпрС); // И ЗначенияРеквизитов.РеклассДляОтчетности;
	Узел.Вставить("СчетДолгосрочныхПроцентов", 		Не СпрС И КонтекстВидФИ.РеклассДляОтчетности);	
	Узел.Вставить("СчетНачисленияАванса",			Истина);//ЕстьНДС
	Узел.Вставить("СчетНДССРеализации",				ЕстьНДС И КонтекстВидФИ.ДоступенАктив);
	#КонецОбласти
	
	#Область СчетаДоходыРасходы
	
	Узел.Вставить("СчетДоходаОсновной", 			Не СпрС);
	Узел.Вставить("СчетРасходаОсновной", 			Не СпрС);
	Узел.Вставить("СчетДоходаПоПроцентам", 			Не СпрС И КонтекстВидФИ.ДоступенАктив);
	Узел.Вставить("СчетРасходаПоПроцентам",			Не СпрС И КонтекстВидФИ.ДоступноОбязательство);
	Узел.Вставить("СчетОбесценения", 				Не СпрС);
	Узел.Вставить("СчетДоходаОтВыбытия", 			СпрС);
	Узел.Вставить("СчетРасходаОтВыбытия", 			СпрС);
	Узел.Вставить("СчетСписанияНеарендногоПлатежа", КонтекстВидФИ.Лизинг);
	
	#КонецОбласти
	
	#Область СчетаПереоценки
	
	//Первоначальная стоимость производного ФИ признается через счет дохода/расхода от переоценки
	Узел.Вставить("СчетДоходаОтПереоценки", 		СпрС И Не ЧерезПрочийСовокупныйДоход Или (КонтекстВидФИ.ДоступенАктив И КонтекстВидФИ.ПроизводныйФИ));
	Узел.Вставить("СчетРасходаОтПереоценки", 		СпрС И Не ЧерезПрочийСовокупныйДоход Или (КонтекстВидФИ.ДоступенАктив И КонтекстВидФИ.ПроизводныйФИ));
	Узел.Вставить("СчетКапиталаПриПереоценке",		СпрС И ЧерезПрочийСовокупныйДоход);
	Узел.Вставить("СчетУбыткаОтОбесценения", 		СпрС И ЧерезПрочийСовокупныйДоход);
	Узел.Вставить("СчетРеализованнойПереоценки",	СпрС И ЧерезПрочийСовокупныйДоход);
		
	#КонецОбласти
	
	#Область Лизинг
	
	Узел.Вставить("СчетНачисленияПлатежа",					КонтекстВидФИ.Лизинг);
	Узел.Вставить("СчетПрочейЗадолженностиКраткосрочный",	Ложь);	
	Узел.Вставить("СчетРаскрытияМинимальныхПлатежей",		КонтекстВидФИ.Лизинг И КонтекстВидФИ.ДоступноРаскрытиеСпрС);
	Узел.Вставить("СчетБудущихРасходов", 					КонтекстВидФИ.Лизинг И КонтекстВидФИ.ДоступноОбязательство);
	Узел.Вставить("СчетБудущихДоходов", 					КонтекстВидФИ.Лизинг И КонтекстВидФИ.ДоступенАктив);
	Узел.Вставить("СчетРаскрытияЧистыеИнвестиции",			КонтекстВидФИ.Лизинг И КонтекстВидФИ.ДоступенАктив);//только лизинг выданный
	
	#КонецОбласти
	
	#Область Задолженность
	
	Узел.Вставить("СчетАвансаПоНДС", КонтекстВидФИ.Задолженность);
	
	#КонецОбласти
	
	Возврат Узел;

КонецФункции

Функция ТекстЗапросаПараметрыУчетаФИ(НомераТаблиц, ТекстЗапросаОтборПараметрыФИ, СтруктураИменаСчетовУчета) Экспорт

	НомераТаблиц.Вставить("втСчетаУчета", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втПараметрыУчетаФИ", НомераТаблиц.Количество());
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	СчетаУчета.Ссылка КАК ПараметрыУчетаФИ,
	|	&МаксимумСчетСубконто
	|ПОМЕСТИТЬ втСчетаУчета
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.Ссылка В(&ТекстЗапросаОтборПараметрыФИ)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаУчета.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыУчетаФИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тПараметрыУчетаФИ.Ссылка КАК ПараметрыУчетаФИ,
	|	ЕСТЬNULL(тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВидСтавкиРасчетаПроцентов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокОбъектовФинансовогоХарактера.РыночнаяСтавка) КАК РасчетПроцентовОтЧПС,
	|	ВЫБОР
	|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
	|			ТОГДА ИСТИНА
	|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Обязательство)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АктивОбязательство,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство КАК АктивОбязательствоИсточник,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ИспользоватьСрокиЗадолженности КАК ИспользоватьСрокиЗадолженности,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Лизинг КАК Лизинг,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПризнаниеПроцентовМСФО КАК ПризнаниеПроцентовМСФО,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПереводВКраткосрочную КАК ПереводВКраткосрочную,	
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПрименятьПоправкуПоСправедливойСтоимости КАК ПрименятьПоправкуПоСправедливойСтоимости,	
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.РеклассДляОтчетности КАК РеклассДляОтчетности,
	|	тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПорядокУчетаДисконта КАК ДисконтНаБалансе,
	|	тПараметрыУчетаФИ.ВидСтавкиРыночная КАК ВидСтавкиРыночная,
	|	&СчетСубконто
	|ПОМЕСТИТЬ втПараметрыУчетаФИ
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО КАК тПараметрыУчетаФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаУчета КАК втСчетаУчета
	|		ПО тПараметрыУчетаФИ.Ссылка = втСчетаУчета.ПараметрыУчетаФИ
	|			И (тПараметрыУчетаФИ.Ссылка В (&ТекстЗапросаОтборПараметрыФИ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыУчетаФИ";
	
	КоличествоСубконто = 3;
	МаксимумСчетСубконто = "";
	СчетСубконто = "";
	
	ШаблонМаксимумСчетСубконто = 
	"МАКСИМУМ(ВЫБОР 
	|			КОГДА СчетаУчета.СчетУчета = ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.%1) 
	|				ТОГДА СчетаУчета.%2 
	|			ИНАЧЕ NULL 
	|		КОНЕЦ) КАК %3";
				
	Для каждого ИмяСчетаУчета Из СтруктураИменаСчетовУчета Цикл
		
		ПсевдонимПоля = ИмяСчетаУчета.Ключ;
		
		МаксимумСчетСубконто = ?(МаксимумСчетСубконто = "", "", МаксимумСчетСубконто + ", " + Символы.ПС) + СтрШаблон(ШаблонМаксимумСчетСубконто, ИмяСчетаУчета.Ключ, "Счет", ПсевдонимПоля);		
		СчетСубконто = ?(СчетСубконто = "", "", СчетСубконто + ", " + Символы.ПС) + "втСчетаУчета." + ПсевдонимПоля + " КАК " + ПсевдонимПоля;
		
		Для НомерСубконто = 1 По КоличествоСубконто Цикл
			
			ПсевдонимПоля = ИмяСчетаУчета.Ключ + "Субконто" + НомерСубконто;
			
			МаксимумСчетСубконто = ?(МаксимумСчетСубконто = "", "", МаксимумСчетСубконто + ", " + Символы.ПС) + СтрШаблон(ШаблонМаксимумСчетСубконто, ИмяСчетаУчета.Ключ, "Субконто" + НомерСубконто, ПсевдонимПоля);		
			СчетСубконто = ?(СчетСубконто = "", "", СчетСубконто + ", " + Символы.ПС) + "втСчетаУчета." + ПсевдонимПоля + " КАК " + ПсевдонимПоля;
					
		КонецЦикла;
	
	КонецЦикла;
	
	Если СтруктураИменаСчетовУчета.Свойство("СчетАктиваДолгосрочный") И СтруктураИменаСчетовУчета.Свойство("СчетОбязательстваДолгосрочный") Тогда
		
		СчетСубконто = СчетСубконто +
		",
		|ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваДолгосрочный
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваДолгосрочный
		|	КОНЕЦ КАК СчетДолгосрочногоФИ,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваДолгосрочныйСубконто1
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваДолгосрочныйСубконто1
		|	КОНЕЦ КАК СчетДолгосрочногоФИСубконто1,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваДолгосрочныйСубконто2
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваДолгосрочныйСубконто2
		|	КОНЕЦ КАК СчетДолгосрочногоФИСубконто2,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваДолгосрочныйСубконто3
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваДолгосрочныйСубконто3
		|	КОНЕЦ КАК СчетДолгосрочногоФИСубконто3";		
	
	КонецЕсли;
	
	Если СтруктураИменаСчетовУчета.Свойство("СчетАктиваКраткосрочный") И СтруктураИменаСчетовУчета.Свойство("СчетОбязательстваКраткосрочный") Тогда
		
		СчетСубконто = СчетСубконто +
		",
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваКраткосрочный
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваКраткосрочный
		|	КОНЕЦ КАК СчетКраткосрочногоФИ,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваКраткосрочныйСубконто1
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваКраткосрочныйСубконто1
		|	КОНЕЦ КАК СчетКраткосрочногоФИСубконто1,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваКраткосрочныйСубконто2
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваКраткосрочныйСубконто2
		|	КОНЕЦ КАК СчетКраткосрочногоФИСубконто2,
		|	ВЫБОР
		|		КОГДА тПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
		|			ТОГДА втСчетаУчета.СчетАктиваКраткосрочныйСубконто3
		|		ИНАЧЕ втСчетаУчета.СчетОбязательстваКраткосрочныйСубконто3
		|	КОНЕЦ КАК СчетКраткосрочногоФИСубконто3";
		
	КонецЕсли;
	
	
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&СчетСубконто", 				СчетСубконто);
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&ТекстЗапросаОтборПараметрыФИ", ТекстЗапросаОтборПараметрыФИ);
	Возврат 		СтрЗаменить(ШаблонЗапроса, "&МаксимумСчетСубконто", 		МаксимумСчетСубконто);

КонецФункции

Функция ПолучитьНастройкиВидаФИ(ВидФИ) Экспорт

	НастройкиФИ = Новый Структура;	
	Возврат НастройкиФИ;
	
КонецФункции

Функция ПолучитьНастройкиПараметровУчетаФИ(ПараметрыУчетаФИ) Экспорт

	НастройкиФИ = Новый Структура;
	Возврат НастройкиФИ;

КонецФункции

Функция ИспользуетсяКоличественныйУчет(ПараметрыУчетаФИ) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	т.Счет
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И ВЫБОР
	|			КОГДА т.Ссылка.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
	|				ТОГДА т.СчетУчета = ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|			ИНАЧЕ т.СчетУчета = ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|		КОНЕЦ");
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыУчетаФИ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат Ложь;		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(Выборка.Счет).Количественный;
	
КонецФункции

#Область ОбновлениеИБ
Процедура ОбновитьХранениеПараметровУчетаФИ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.УдалитьПараметрыУчетаФИ <> ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|	И ДоговорыКонтрагентов.ПараметрыУчетаФИ = ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦенныеБумаги.Ссылка
	|ИЗ
	|	Справочник.ЦенныеБумаги КАК ЦенныеБумаги
	|ГДЕ
	|	ЦенныеБумаги.ПараметрыУчетаФИ = ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|	И ЦенныеБумаги.УдалитьПараметрыУчетаФИ <> ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ПараметрыУчетаФИ = Объект.УдалитьПараметрыУчетаФИ;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
