
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом()		
		И Параметры.Свойство("ФИ") И ЗначениеЗаполнено(Параметры.ФИ) Тогда
		
		ФИ 		= Параметры.ФИ;
		ТипФИ 	= ТипЗнч(ФИ);
		ЭтоЦБ 	= (ТипФИ = Тип("СправочникСсылка.ЦенныеБумаги"));
		
		ИмяДатаНачалаФИ 		= ВстраиваниеУХКлиентСервер.ИмяРеквизитаДатаНачала(ТипФИ);
		ИмяДатаОкончанияФИ 		= ВстраиваниеУХКлиентСервер.ИмяРеквизитаСрокДействияДоговора(ТипФИ);
		ИмяСуммаФИ 				= ВстраиваниеУХКлиентСервер.ИмяРеквизитаСуммаДоговора(ТипФИ);
				
		СрокДействия 	= ?(ЗначениеЗаполнено(Параметры.СрокДействия), Параметры.СрокДействия, ?(ЭтоЦБ, ФИ.СрокПогашения, ФИ[ИмяДатаОкончанияФИ]));
		ДатаНачала 		= ?(ЗначениеЗаполнено(Параметры.ДатаНачала), Параметры.ДатаНачала, 		?(ЭтоЦБ, ФИ.ДатаВыпуска, ФИ[ИмяДатаНачалаФИ]));
		СуммаФИ 		= ?(ЭтоЦБ, ФИ.Номинал * ФИ.Количество, ФИ[ИмяСуммаФИ]);
		
		Лизинг_СрокАренды 	= (СрокДействия - ДатаНачала) / 86400 / 30;
		Лизинг_Сумма 		= ?(ЗначениеЗаполнено(Параметры.Стоимость), Параметры.Стоимость, СуммаФИ);
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда
			Организация = Параметры.Организация;
		Иначе	
		  	Организация = ?(ЭтоЦБ, ФИ.ПервыйПолучатель.ОрганизационнаяЕдиница, ФИ.Организация);
		КонецЕсли;
		
		ПорогПризнанияАренды = МСФОВызовСервераУХ.ЗначениеУП("ПорогПризнанияАренды", Организация, ДатаСведений, Сценарий);
								
		ВалютныйФИ = Неопределено;
		Если ТипЗнч(Параметры.ФИ) = Тип("СправочникСсылка.ДоговорыКонтрагентов") И НЕ Параметры.ФИ.Пустая() Тогда				
			
			РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(Организация);
   
			ВалютныйФИ = (ФИ.ВалютаВзаиморасчетов <> РеквизитыУП.ФункциональнаяВалюта);
			
		ИначеЕсли ТипЗнч(Параметры.ФИ) = Тип("СправочникСсылка.ЦенныеБумаги") И НЕ Параметры.ФИ.Пустая() Тогда				
			
			РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(Организация);
   
			ВалютныйФИ = (ФИ.ВалютаКотировки <> Организация.ФункциональнаяВалюта);			
			
		КонецЕсли;
		
		СтарыеПараметры = Параметры.ВыборПараметровУчетаФИУХ;
		Если Не ЗначениеЗаполнено(СтарыеПараметры) Тогда
			СтарыеПараметры = РегистрыСведений.ВыборПараметровУчетаФИ.Получить(Новый Структура("ФИ", Параметры.ФИ));
		ИначеЕсли ТипЗнч(СтарыеПараметры) = Тип("ФиксированноеСоответствие") Тогда
			СтарыеПараметры = СтарыеПараметры.Получить(Параметры.ФИ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтарыеПараметры) Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма, СтарыеПараметры);		
		КонецЕсли;
				
	Иначе // стандартная форма
		
		Элементы.ФормаИспользоватьПомощникВыбора.Пометка = Ложь;
		
	КонецЕсли;
	
	КэшируемыеЗначения = Новый Структура;
	
	РеквизитыВыбора = Новый Массив;
	Для каждого ТекущийРесурс Из Метаданные.РегистрыСведений.ВыборПараметровУчетаФИ.Ресурсы Цикл
		РеквизитыВыбора.Добавить(ТекущийРесурс.Имя);	
	КонецЦикла;
	
	КэшируемыеЗначения.Вставить("РеквизитыВыбора", СтрСоединить(РеквизитыВыбора, ","));
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ВыборПараметровУчетаФИ = Новый Структура(КэшируемыеЗначения.РеквизитыВыбора);
	ЗаполнитьЗначенияСвойств(ВыборПараметровУчетаФИ, ЭтаФорма);
	ВыборПараметровУчетаФИ.Удалить("ПараметрыУчетаФИ");
	ВыборПараметровУчетаФИ.Вставить("ФИ", ФИ);
	
	ВидимостьПараметров = УчетФинансовыхИнструментовМСФОКлиентСерверУХ.ПолучитьВидимостьПараметрыВыбораФИ(ВыборПараметровУчетаФИ);
	ВидимостьПараметров.Вставить("Лизинг", Истина);
	ВидимостьПараметров.Вставить("ФИ", Истина);
	
	Для каждого ТекущаяВидимость Из ВидимостьПараметров Цикл
		Если Не ТекущаяВидимость.Значение Тогда
			ВыборПараметровУчетаФИ.Удалить(ТекущаяВидимость.Ключ);	
		КонецЕсли;
	КонецЦикла;
		
	Оповестить("ВыборПараметровУчетаФИ", ВыборПараметровУчетаФИ, ЭтаФорма.ВладелецФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидИнструментаПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура СнизитьРискССЧПУПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПлатежиВключаютПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура БизнесМодельПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СнизитьРискССПСДПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура БизнесМодельДолевойПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЛизингПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПомощникВыбора(Команда)
	
	Элементы.ФормаИспользоватьПомощникВыбора.Пометка = Не Элементы.ФормаИспользоватьПомощникВыбора.Пометка;
	УправлениеФормой(ЭтаФорма);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_Аренда

&НаКлиенте
Процедура ПорогПризнанияАрендыНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Лизинг10ПриИзменении(Элемент)	
	УправлениеФормой(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура Лизинг11ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг12ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг13ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг14ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг15ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг21ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг22ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг23ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг31ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг32ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Лизинг41ПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаКлиентеНаСервереБезКонтекста
Функция УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Лизинг = Форма.Лизинг;
	Элементы.ГруппаУсловияАренды.Видимость	= Лизинг;
	Элементы.ГруппаПараметрыСведений.Видимость = Лизинг И ЛОЖЬ;
	
	РеквизитыВыбора = Новый Структура(Форма.КэшируемыеЗначения.РеквизитыВыбора);
	ЗаполнитьЗначенияСвойств(РеквизитыВыбора, Форма);
	
	ВидимостьПараметровВыбора = УчетФинансовыхИнструментовМСФОКлиентСерверУХ.ПолучитьВидимостьПараметрыВыбораФИ(РеквизитыВыбора);
	
	Для каждого ТекущаяВидимость Из ВидимостьПараметровВыбора Цикл	
		Элементы[ТекущаяВидимость.Ключ].Видимость = ТекущаяВидимость.Значение;	
	КонецЦикла;
	
	Элементы.ГруппаПомощник.Видимость = Элементы.ФормаИспользоватьПомощникВыбора.Пометка;
	Элементы.ДекорацияЗаголовок.Видимость = Элементы.ФормаИспользоватьПомощникВыбора.Пометка;
	
	УстановитьОтбор(Форма);
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтбор(Форма)

	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Ссылка.ВидОбъектаФинансовогоХарактера.Лизинг");		
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Ссылка.ВидОбъектаФинансовогоХарактера.Задолженность");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчета");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, "ВалютныеПараметры");
	
	Если Не Форма.Элементы.ФормаИспользоватьПомощникВыбора.Пометка Тогда
		
		Возврат;// отборы не используются
	КонецЕсли;
		
	СпособАС = ПредопределенноеЗначение("Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости");
	СпособПС = ПредопределенноеЗначение("Перечисление.СпособыУчетаФинансовыхИнструментов.ПоСправедливойСтоимости");
	
	ССЧПУ = ПредопределенноеЗначение("Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток");
	ССПСД = ПредопределенноеЗначение("Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрочийСовокупныйДоход");
	
	ИмяПоля_СпособУчета = "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчета";
	ИмяПоля_СпособУчетаПереоценки = "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки";
	
	ОтборСписка = Форма.Список.Отбор;
	
	Если Форма.ВалютныйФИ <> Неопределено Тогда
		Представление_ВалютныеПараметры = ?(Форма.ВалютныйФИ, НСтр("ru = 'в валюте'"), НСтр("ru = 'в функциональной валюте'"));
		УстановитьЭлементОтбора(Форма.Список.Отбор, "ВалютныеПараметры", Форма.ВалютныйФИ, Представление_ВалютныеПараметры);
	КонецЕсли;
	
	Если Форма.Лизинг > 0 Тогда
		Форма.Элементы.ВидОбъектаФинансовогоХарактераСпособУчетаПереоценки.Видимость = Ложь;
		ОбновитьОтборыАренда(Форма);		
		Возврат;
	КонецЕсли;
	
	Представление_Лизинг = Форма.Элементы.Лизинг.СписокВыбора.Получить(Форма.Лизинг).Представление;	
	УстановитьЭлементОтбора(ОтборСписка, "Ссылка.ВидОбъектаФинансовогоХарактера.Лизинг", Форма.Лизинг > 0, Представление_Лизинг);
	
	Форма.Элементы.ВидОбъектаФинансовогоХарактераСпособУчетаПереоценки.Видимость = Истина;
	Если Форма.ВидИнструмента = 0 Тогда
		
		Если Форма.СнизитьРискССЧПУ Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССЧПУ);
			
		ИначеЕсли Форма.ПлатежиВключают Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССЧПУ);
						
		ИначеЕсли Форма.БизнесМодель = 0 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособАС);
			Форма.Элементы.ВидОбъектаФинансовогоХарактераСпособУчетаПереоценки.Видимость = Ложь;
			
		ИначеЕсли Форма.БизнесМодель = 1 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССПСД);
			
		ИначеЕсли Форма.БизнесМодель = 2 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССЧПУ);
			
		КонецЕсли;
				
	Иначе 
		
		Если Форма.СнизитьРискССПСД Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССПСД);
			
		ИначеЕсли Форма.БизнесМодельДолевой = 0 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССПСД);
			
		ИначеЕсли Форма.БизнесМодельДолевой = 1 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССПСД);
			
		ИначеЕсли Форма.БизнесМодельДолевой = 2 Тогда
			
			Установить_СпособУчета(ОтборСписка, СпособПС);
			Установить_СпособУчетаПереоценки(ОтборСписка, ССЧПУ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьОписаниеОтбора(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборыАренда(Форма)

	Элементы = Форма.Элементы;
	
	ТребуютсяВопросы = Ложь;
	
	ВозможнаАренда = Ложь;
	ВозможнаДКЗ = Истина;
	
	Если Форма.Лизинг_СрокАренды > 12 Тогда
		ТребуютсяВопросы = Истина;
	КонецЕсли;	
	
	Если (Форма.ПорогПризнанияАренды > 0) И (Форма.Лизинг_Сумма < Форма.ПорогПризнанияАренды) Тогда
		ТребуютсяВопросы = Ложь;		
	КонецЕсли;
	
	Лизинг1 = Форма.Лизинг10 И (Форма.Лизинг11 Или Форма.Лизинг12 Или Форма.Лизинг13 Или Форма.Лизинг14 Или Форма.Лизинг15);
	Лизинг2 = (Форма.Лизинг21 Или Форма.Лизинг22 Или Форма.Лизинг23);
	Лизинг3 = (Форма.Лизинг31 Или Форма.Лизинг32);
	Лизинг4 = Форма.Лизинг41;
		
	Если ТребуютсяВопросы И Лизинг1 Тогда
		ВозможнаАренда = Ложь;
		ВозможнаДКЗ = Истина;
	КонецЕсли;

	Если ТребуютсяВопросы И Лизинг2 Тогда
		ВозможнаАренда = Истина;
		ВозможнаДКЗ = Ложь;
	КонецЕсли;	
	
	Если ТребуютсяВопросы И Лизинг3 Тогда
		ВозможнаАренда = Ложь;
		ВозможнаДКЗ = Истина;
	КонецЕсли;	
	
	Если ТребуютсяВопросы И Лизинг4 Тогда
		ВозможнаАренда = Истина;
		ВозможнаДКЗ = Ложь;
	КонецЕсли;
	
	Если ТребуютсяВопросы И (Лизинг1 Или Лизинг3) И (Лизинг2 Или Лизинг4)Тогда
		
		ВозможнаАренда = Истина;
		ВозможнаДКЗ = Истина;

	КонецЕсли;
	
	Элементы.ГруппаУсловияАренды.Видимость = Истина;
	Элементы.Группа_МСФО16_1.Видимость = ТребуютсяВопросы;
	Элементы.Группа_МСФО16_2.Видимость = ТребуютсяВопросы;
	Элементы.Группа_МСФО16_3.Видимость = ТребуютсяВопросы;
	Элементы.Группа_МСФО16_4.Видимость = ТребуютсяВопросы;
		
	ГруппаАренда = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Форма.Список.Отбор.Элементы, "ГруппаАренда", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаАренда, "Ссылка.ВидОбъектаФинансовогоХарактера.Задолженность", Истина, , "параметры учета задолженности", ВозможнаДКЗ, ,"ЯвляетсяЗадолженностью");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаАренда, "Ссылка.ВидОбъектаФинансовогоХарактера.Лизинг", Истина, , "параметры учета аренды", ВозможнаАренда, , "ЯвляетсяАрендой");

	ОбновитьОписаниеОтбора(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Установить_СпособУчета(Отбор, ПравоеЗначение)
	УстановитьЭлементОтбора(Отбор, "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчета", ПравоеЗначение, НСтр("ru = 'Способ учета'"));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Установить_СпособУчетаПереоценки(Отбор, ПравоеЗначение)
	УстановитьЭлементОтбора(Отбор, "Ссылка.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки", ПравоеЗначение, НСтр("ru = 'Способ переоценки'"));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЭлементОтбора(Отбор, ИмяПоля, ПравоеЗначение, Представление = Неопределено)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Отбор, ИмяПоля, ПравоеЗначение, , Представление, , , ?(Представление = Неопределено, Неопределено, ИмяПоля));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОписаниеОтбора(Форма)

	Список = Форма.Список;
	Элементы = Форма.Элементы;
	
	Мас = Новый Массив();
	Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл		
		ДобавитьРекурсивно(Мас, ЭлементОтбора);
	КонецЦикла;
	
	Элементы.ДекорацияЗаголовок.Заголовок = НСтр("ru = 'Предлагаемая классификация: '") + Символы.ПС + СтрСоединить(Мас, ", " + Символы.ПС);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьРекурсивно(Мас, ЭлементОтбора)
	
	Если Не ЭлементОтбора.Использование Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		Мас1 = Новый Массив;
		Для каждого ЭлементОтбора1 Из ЭлементОтбора.Элементы Цикл
			ДобавитьРекурсивно(Мас1, ЭлементОтбора1)
		КонецЦикла;
		
		Если Мас1.Количество() Тогда
		
			ТипГруппы = ?(ЭлементОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли, НСтр("ru = ' или '"), НСтр("ru = ' и '"));
			Мас.Добавить(СтрСоединить(Мас1, ТипГруппы));
		
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если (ЭлементОтбора.ПравоеЗначение = Истина) 
		Или (ЭлементОтбора.ИдентификаторПользовательскойНастройки = "ВалютныеПараметры") 
		Или (ЭлементОтбора.ИдентификаторПользовательскойНастройки = "Ссылка.ВидОбъектаФинансовогоХарактера.Лизинг") Тогда
		
		Мас.Добавить(ЭлементОтбора.Представление);
		
	ИначеЕсли ЭлементОтбора.ПравоеЗначение = Ложь Тогда
		Мас.Добавить(НСтр("ru = 'Не '") + ЭлементОтбора.Представление);
	Иначе
		Мас.Добавить(СтрШаблон("%1: %2", ЭлементОтбора.Представление, ЭлементОтбора.ПравоеЗначение));	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
