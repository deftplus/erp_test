
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере(?(ЗначениеЗаполнено(Параметры.ЗначениеКопирования), Параметры.ЗначениеКопирования, Неопределено));
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.СчетаУчета.Очистить();
	Таб = СчетаУчета.Выгрузить(Новый Структура("Видимость", Истина), "Ссылка,ИмяПредопределенныхДанных");
	ЧислоСубконто = 3;
	
	Для каждого СтрокаТаб Из Таб Цикл
		
		ИмяСчетаУчета = СтрокаТаб.ИмяПредопределенныхДанных;
		
		НоваяСтрока = ТекущийОбъект.СчетаУчета.Добавить();
		НоваяСтрока.СчетУчета = СтрокаТаб.Ссылка;
		НоваяСтрока.Счет = ЭтаФорма[ИмяСчетаУчета];
		Для НомерСубконто = 1 По 3 Цикл
			НоваяСтрока["Субконто" + НомерСубконто] = ЭтаФорма[ИмяСчетаУчета + "Субконто" + НомерСубконто];	
		КонецЦикла;
		
		Если Не НоваяСтрока.Счет.Пустая() Тогда
			Продолжить;
		КонецЕсли;	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Не заполнен счет <%1>'"), СтрокаТаб.Ссылка), , ИмяСчетаУчета, , Отказ);
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидОбъектаФинансовогоХарактераПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_СчетаУчета

&НаКлиенте
Процедура Подключаемый_СчетУчетаПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(ЭтаФорма, Элемент.Имя, ЭтаФорма, "", Ложь, ЭтаФорма[Элемент.Имя]);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)
	
	ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	
	ЭтаФорма.КэшируемыеЗначения.Вставить("КлючевыеСубконто", МСФОКлиентСерверУХ.ПолучитьКлючевыеСубконтоФИ(Истина, Истина) );
	ЭтаФорма.КэшируемыеЗначения.Вставить("ЗаголовкиСубконто", Новый Структура("Субконто1,Субконто2,Субконто3"));	
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", Новый Структура);
	
	МСФОКлиентСерверУХ.УстановитьПланСчетов(ЭтаФорма);                        
	ЭтаФорма.КэшируемыеЗначения.Вставить("ПланСчетовМСФО", ЭтаФорма.Объект.ПланСчетовБД);
	
	ОбновитьОтображениеСчетовУчета(, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма, ОбновитьОтображениеСчетовУчета = Истина)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ЗначенияРеквизитов = ПолучитьЗначенияРеквизитов(Объект.ВидОбъектаФинансовогоХарактера);	
	//видимость счетов учета
	
	СпрС = ЗначенияРеквизитов.УчетПоСправедливойСтоимости;
	
	#Область Параметры
	РаскрытиеПоГрафику = ЗначенияРеквизитов.РаскрытиеСправедливойСтоимости = ПредопределенноеЗначение("Перечисление.ВидыРаскрытияСправедливойСтоимостиФИ.ПоГрафику");
	
	Элементы.ВариантОтображенияГрафика.Видимость		= Не СпрС;	
	Элементы.ВидКурсаСтавкиДисконтирования.Видимость	= Не СпрС И ЗначенияРеквизитов.ДоступнаСтавкаДисконтирования;	
	Элементы.ВидСтавкиРыночная.Видимость 				= Не СпрС И РаскрытиеПоГрафику;
	
	#КонецОбласти
	
	Если ОбновитьОтображениеСчетовУчета Тогда
		Форма.ОбновитьОтображениеСчетовУчета(ЗначенияРеквизитов);	
	КонецЕсли;
	
	Элементы.ДекорацияПараметрыУчетаФИ.Заголовок = ЗначенияРеквизитов.ОписаниеВидаФИ;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияРеквизитов(ВидОбъектаФинансовогоХарактера)	
	Возврат Справочники.ВидыОбъектовФинансовогоХарактера.ПолучитьЗначенияРеквизитов(ВидОбъектаФинансовогоХарактера);
КонецФункции

#Область ОтображениеСчетовУчета

&НаСервере
Процедура ОбновитьОтображениеСчетовУчета(ЗначенияРеквизитов = Неопределено, ТекущийОбъект = Неопределено) Экспорт 

	Если ЗначенияРеквизитов = Неопределено Тогда
	
		ЗначенияРеквизитов = ПолучитьЗначенияРеквизитов(Объект.ВидОбъектаФинансовогоХарактера);	
		СпрС = ЗначенияРеквизитов.УчетПоСправедливойСтоимости;

	КонецЕсли;
	
	Если СчетаУчета.Количество() = 0 Тогда
		
		СчетаУчета.Загрузить(Справочники.СчетаУчетаФИ.ПолучитьСчета());		
		ДобавитьГруппыСчетовУчета();
		
	КонецЕсли;
	
	Узел = Справочники.ПараметрыУчетаФинансовыхИнструментовМСФО.ПолучитьСчетаУчета(ЗначенияРеквизитов);
	
	ДобавитьРеквизитыСчетаУчета(Узел, ТекущийОбъект);
			
	ОбновитьЭлементыСчетаУчета(Узел);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыСчетаУчета(Узел)
	
	Для каждого СчетУчета Из СчетаУчета Цикл
		
		Если СчетУчета.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяСчетаУчета = СчетУчета.ИмяПредопределенныхДанных;
		Видимость = Узел.Свойство(ИмяСчетаУчета) И Узел[ИмяСчетаУчета];
		
		Если СчетУчета.Создан И (СчетУчета.Видимость <> Видимость) Тогда
			
			Элементы["Группа" + ИмяСчетаУчета].Видимость = Видимость; 
			СчетУчета.Видимость = Видимость;
			
		ИначеЕсли Не СчетУчета.Создан И Видимость Тогда
			
			ДобавитьГруппуСчетУчета(СчетУчета);		
			СчетУчета.Видимость = Видимость;
			СчетУчета.Создан = Истина;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьГруппуСчетУчета(СчетУчета)
	
	ЧислоСубконто = 3;
	ИмяСчета = СчетУчета.ИмяПредопределенныхДанных;
	
	ГруппаУзел = Элементы[СчетУчета.Родитель];	
	ГруппаСчетУчета = Элементы.Добавить("Группа" + ИмяСчета, Тип("ГруппаФормы"), ГруппаУзел);
	
	ГруппаСчетУчета.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСчетУчета.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ГруппаСчетУчета.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	ГруппаСчетУчета.ОтображатьЗаголовок = Ложь;
			
	ЭлементСчетУчета = Элементы.Добавить(ИмяСчета, Тип("ПолеФормы"), ГруппаСчетУчета);
	
	ЭлементСчетУчета.Вид 						= ВидПоляФормы.ПолеВвода;
	ЭлементСчетУчета.АвтоОтметкаНезаполненного	= Истина;
	ЭлементСчетУчета.ПутьКДанным 				= ИмяСчета;
	ЭлементСчетУчета.ПараметрыВыбора 			= ПолучитьПараметрыВыбора(СчетУчета);
	ЭлементСчетУчета.РастягиватьПоГоризонтали	= Ложь;
	
	ЭлементСчетУчета.УстановитьДействие("ПриИзменении", "Подключаемый_СчетУчетаПриИзменении");
	Если ЗначениеЗаполнено(СчетУчета.Описание) Тогда
		ЭлементСчетУчета.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		ЭлементСчетУчета.Подсказка = СчетУчета.Описание;	
	КонецЕсли;
	
	ИменаСубконто = Новый Соответствие;
		
	Для НомерСубконто = 1 По ЧислоСубконто Цикл
		
		ИмяЭлемента = ИмяСчета + "Субконто" + НомерСубконто;		
		ИменаСубконто.Вставить(НомерСубконто, ИмяЭлемента);
		
		ЭлементСубконто = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаСчетУчета);
		
		ЭлементСубконто.Вид 						= ВидПоляФормы.ПолеВвода;
		ЭлементСубконто.ПутьКДанным 				= ИмяЭлемента;
		//ЭлементСубконто.РастягиватьПоГоризонтали 	= Ложь;
				
	КонецЦикла;
	
	КэшируемыеЗначения.ИменаСубконто.Вставить(ИмяСчета, ИменаСубконто);
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(ЭтаФорма, ИмяСчета, ЭтаФорма, "", Ложь, ЭтаФорма[ИмяСчета]);

КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыВыбора(СчетУчета)

	ИсточникПараметров = Новый Структура;
	
	ИсточникПараметров.Вставить("Владелец", 	КэшируемыеЗначения.ПланСчетовМСФО);
	ИсточникПараметров.Вставить("Забалансовый",	СчетУчета.Забалансовый);
	
	Если Не СчетУчета.РазделПланаСчетов.Пустая() Тогда
		ИсточникПараметров.Вставить("РазделПланаСчетов", СчетУчета.РазделПланаСчетов);
	КонецЕсли;
	
	Возврат МСФОКлиентСерверУХ.ПолучитьПараметрыВыбора(ИсточникПараметров);

КонецФункции

&НаСервере
Процедура ДобавитьГруппыСчетовУчета()
	
	ГруппаРодитель = Элементы.ГруппаСчетаУчета;
	
	Если ГруппаРодитель.ПодчиненныеЭлементы.Количество() Тогда
		Возврат
	КонецЕсли;
		
	ГруппыСчетов = СчетаУчета.Выгрузить(Новый Структура("ЭтоГруппа", Истина), "ИмяПредопределенныхДанных,Наименование");
	
	Для каждого ГруппаСчетов Из ГруппыСчетов Цикл
		
		ГруппаУзел = Элементы.Добавить(ГруппаСчетов.ИмяПредопределенныхДанных, Тип("ГруппаФормы"), ГруппаРодитель);
		
		ГруппаУзел.Заголовок	= ГруппаСчетов.Наименование;
		ГруппаУзел.Вид 			= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаУзел.Отображение 	= ОтображениеОбычнойГруппы.Нет;//для сквозного выравнивания заголовков счетов 
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыСчетаУчета(Узел, ТекущийОбъектИсточник = Неопределено)
	
	ЧислоСубконто = 3;
	отСчетБД = Новый ОписаниеТипов("СправочникСсылка.СчетаБД");
	отПВХ = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.Тип;
	
	ДобавляемыеРеквизиты = новый Массив;
	КэшПоСсылке = Новый Соответствие;
	
	Для каждого СчетУчета Из СчетаУчета Цикл
		
		Если СчетУчета.Создан Или СчетУчета.ЭтоГруппа Тогда
			Продолжить;//счет добавлен ранее		
		КонецЕсли;
		
		ИмяСчета = СчетУчета.ИмяПредопределенныхДанных;
		
		Если Не Узел.Свойство(ИмяСчета) Или (Не Узел[ИмяСчета]) Тогда 
			Продолжить;//нет видимости		
		КонецЕсли;
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяСчета, отСчетБД,,СчетУчета.Наименование));
		Для НомерСубконто = 1 По ЧислоСубконто Цикл
			
			ИмяСубконто = ИмяСчета + "Субконто" + Формат(НомерСубконто, "ЧГ=");			
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяСубконто, отПВХ));
			
		КонецЦикла;
		
		КэшПоСсылке.Вставить(СчетУчета.Ссылка, ИмяСчета);
		
	КонецЦикла;
		
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если ТекущийОбъектИсточник = Неопределено Тогда
		Возврат; // не надо заполнять данными
	КонецЕсли;
	
	Для каждого СтрокаТаб Из ТекущийОбъектИсточник.СчетаУчета Цикл
		
		ИмяСчетУчета = КэшПоСсылке.Получить(СтрокаТаб.СчетУчета);
		
		Если ИмяСчетУчета = Неопределено Тогда
			Продолжить;	
		КонецЕсли;
				
		ЭтаФорма[ИмяСчетУчета] = СтрокаТаб.Счет;
		Для НомерСубконто = 1 По ЧислоСубконто Цикл
			ИмяСубконто = "Субконто" + НомерСубконто;
			ЭтаФорма[ИмяСчетУчета + ИмяСубконто] = СтрокаТаб[ИмяСубконто];
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
