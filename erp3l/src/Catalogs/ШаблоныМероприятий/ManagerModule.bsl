#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Возвращает таблицу стадий шаблона мероприятия ШаблонМероприятияВход без группирующих строк.
Функция ВернутьТаблицуСтадийШаблонаМероприятия(ШаблонМероприятияВход) Экспорт
	РезультатФункции = Новый ТаблицаЗначений;
	Если ЗначениеЗаполнено(ШаблонМероприятияВход) Тогда
		ТабВыгрузка = ШаблонМероприятияВход.Стадии.Выгрузить();
		РезультатФункции = ТабВыгрузка.СкопироватьКолонки();
		Для Каждого ТекТабВыгрузка Из ТабВыгрузка Цикл
			МожноДобавлять = ((НЕ ТекТабВыгрузка.ГруппирующаяСтрока) И (ЗначениеЗаполнено(ТекТабВыгрузка.Стадия)));
			Если МожноДобавлять Тогда
				НоваяСтрока = РезультатФункции.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекТабВыгрузка);
			Иначе
				// Это группа либо пустая стадия. Пропускаем.
			КонецЕсли;
		КонецЦикла;	
	Иначе
		РезультатФункции = Новый ТаблицаЗначений;
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ВернутьТаблицуСтадийШаблона()	

// Возвращает шаблон мероприятия закупочной процедуры для способа закупки СпособЗакупкиВход.
Функция ВернутьШаблонЗакупки(СпособЗакупкиВход) Экспорт
	РезультатФункции = Справочники.ШаблоныМероприятий.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ШаблоныМероприятий.Ссылка КАК Ссылка,
		|	ШаблоныМероприятий.ВидМероприятия КАК ВидМероприятия,
		|	ШаблоныМероприятий.СпособВыбораПоставщика КАК СпособВыбораПоставщика
		|ИЗ
		|	Справочник.ШаблоныМероприятий КАК ШаблоныМероприятий
		|ГДЕ
		|	НЕ ШаблоныМероприятий.ПометкаУдаления
		|	И ШаблоныМероприятий.ВидМероприятия = &ВидМероприятия
		|	И ШаблоныМероприятий.СпособВыбораПоставщика = &СпособВыбораПоставщика";
	Запрос.УстановитьПараметр("ВидМероприятия", Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура);
	Запрос.УстановитьПараметр("СпособВыбораПоставщика", СпособЗакупкиВход);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РезультатФункции = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат РезультатФункции;
КонецФункции		// ВернутьШаблонЗакупки(СпособЗакупкиВход)

#КонецЕсли	