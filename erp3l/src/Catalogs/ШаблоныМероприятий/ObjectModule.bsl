// Осуществляет проверку наличия обязательных стадий для шаблона мероприятия
// по закупочной процедуре. Возвращает успешность проверки.
Функция ПроверитьНаличиеОбязательныхСтадийЗакупочнойПроцедуры()
	РезультатФункции = Истина;
	Если ВидМероприятия = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура Тогда
		МассивОфициальноеОбъявлениеЗакупки		 = Справочники.СтадииМероприятий.ВернутьСтадииОфициальноеОбъявлениеЗакупки();
		МассивНачалоПодготовкиЗакупки			 = Справочники.СтадииМероприятий.ВернутьСтадииНачалоПодготовкиЗакупкиКПубликации();
		НайденоОфициальноеОбъявлениеЗакупки	 = Ложь;
		НайденоНачалоПодготовкиЗакупки		 = Ложь;
		Для Каждого ТекСтадии Из Стадии Цикл
			Если МассивОфициальноеОбъявлениеЗакупки.Найти(ТекСтадии.Стадия) <> Неопределено Тогда
				НайденоОфициальноеОбъявлениеЗакупки = Истина;
			Иначе
				// Выполняем поиск далее.
			КонецЕсли;
			Если МассивНачалоПодготовкиЗакупки.Найти(ТекСтадии.Стадия) <> Неопределено Тогда
				НайденоНачалоПодготовкиЗакупки = Истина;
			Иначе
				// Выполняем поиск далее.
			КонецЕсли;
		КонецЦикла;	
		Если Не НайденоОфициальноеОбъявлениеЗакупки Тогда
			ТекстСообщения = НСтр("ru = 'В шаблоне %Шаблон% не найдена стадия официального объявления закупки. Запись отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Шаблон%", Строка(Наименование));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			РезультатФункции = Ложь;
		Иначе
			// Проверка стадии официального объявления закупки пройдена.
		КонецЕсли;
		Если Не НайденоНачалоПодготовкиЗакупки Тогда
			ТекстСообщения = НСтр("ru = 'В шаблоне %Шаблон% не найдена стадия начала подготовки закупки к публикации. Запись отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Шаблон%", Строка(Наименование));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			РезультатФункции = Ложь;
		Иначе
			// Проверка стадии начала подготовки закупки к публикации пройдена.
		КонецЕсли;
	Иначе
		// Для прочих видов операций не осуществляем проверку.
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		// ПроверитьНаличиеОбязательныхСтадий();	

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	// Проверка заполнения способа выбора поставщика для закупочной процедуры.
	Если ВидМероприятия = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура Тогда
		Если НЕ ЗначениеЗаполнено(СпособВыбораПоставщика) Тогда
			ТекстСообщения = НСтр("ru = 'В шаблоне мероприятий %Шаблон% требуется заполнить поле ""Способ выбора поставщика"". Запись отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Шаблон%", Строка(Ссылка));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Отказ = Истина;
		Иначе
			// Проверка пройдена успешно.
		КонецЕсли;	
	Иначе
		// Не выполняем проверку способа выбора поставщика для прочих видов мероприятий.
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	// Снятие флажков ИспользоватьПроцентВыполнения и ИспользоватьКонтрольЗатрат, т.к. данный функционал не задействован в закупках.
	Если ВидМероприятия = Перечисления.ВидыМероприятий.ЗакупочнаяПроцедура Тогда
		ИспользоватьКонтрольЗатрат = Ложь;
		ИспользоватьПроцентВыполнения = Ложь;
	Иначе
		// Не изменяем флажки.
	КонецЕсли;
	// Проверка наличия обязательных стадий закупочных процедур.
	РезультатПроверкиОбязательныхСтадий = ПроверитьНаличиеОбязательныхСтадийЗакупочнойПроцедуры();
	Если Не РезультатПроверкиОбязательныхСтадий Тогда
		Отказ = Истина;
	Иначе
		// Проверка пройдена успешно.
	КонецЕсли;	
	// Проверка наличия стадии со 100 прогресса.
	Если ИспользоватьПроцентВыполнения Тогда
		МаксПрогресс = 0;
		Для Каждого ТекСтадии Из Стадии Цикл
			Если ТекСтадии.ИтогВыполнения > МаксПрогресс Тогда
				МаксПрогресс = ТекСтадии.ИтогВыполнения;
			Иначе
				// Выполняем далее.
			КонецЕсли; 
		КонецЦикла;	
		Если МаксПрогресс <> 100 Тогда
			ТекстСообщения = НСтр("ru = 'В шаблоне мероприятий %Шаблон% требуется указать максимальную стадию с прогрессом 100. Запись отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Шаблон%", Строка(Ссылка));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Отказ = Истина;
		Иначе
			// Проверка пройдена успешно.
		КонецЕсли;
	Иначе
		// Процент выполнения не используется. Не проверяем колонку.
	КонецЕсли;
КонецПроцедуры
