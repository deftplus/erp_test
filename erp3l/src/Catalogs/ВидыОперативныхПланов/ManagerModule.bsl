#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
Функция ЕстьДокументыПоОперПлану(ВидОперПлана) экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидОперПлана) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперативныйПлан.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОперативныйПлан КАК ОперативныйПлан
	|ГДЕ
	|	ОперативныйПлан.Проведен = ИСТИНА
	|	И ОперативныйПлан.ВидОперативногоПлана = &ВидОперативногоПлана";
	Запрос.УстановитьПараметр("ВидОперативногоПлана", ВидОперПлана);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура УстановитьУсловноеОформлениеНастройкиАналитик(Форма, ВидБюджета, ДанныеВРеквизитеФормы = Ложь) экспорт
	
	Элементы = Форма.Элементы;
	
	Использование = Перечисления.ИспользованиеАналитик;
	Аналитики = Справочники.АналитикиОперативногоПланирования;
	
	ПрефиксДанных = "";
	Если ДанныеВРеквизитеФормы = Ложь Тогда
		ПрефиксДанных = "Объект.";
	КонецЕсли;
	
	// Предложение ввести значение по умолчанию
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.Равно, Использование.КлючеваяАналитика);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.ЗначениеАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",			НСтр("ru = '<Введите значение по умолчанию>'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",		ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

	// Предложение ввести значение для аналитик НеРедактируется
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.Равно, Использование.НеИспользуется);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.ЗначениеАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",			НСтр("ru = '<Введите значение>'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",		ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	// Недоступность колонки Группа для шапки, уточнения и неиспользования
	СписокДляГруппы = Новый СписокЗначений;
	СписокДляГруппы.Добавить(Использование.Строка);
	СписокДляГруппы.Добавить(Использование.Уточняется);
	
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикГруппаСтрок.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.НеВСписке, СписокДляГруппы);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	// Недоступность колонки ОбязательноеЗаполнение для аналитик статьи бюджета
	СписокАналитикСтатьиБюджета = Новый СписокЗначений;
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика1);
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика2);
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика3);
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика4);
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика5);
	СписокАналитикСтатьиБюджета.Добавить(Аналитики.Аналитика6);
	
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Аналитика", ВидСравненияКомпоновкиДанных.ВСписке, СписокАналитикСтатьиБюджета);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	// Недоступность колонки ЗначениеАналитики
	СписокАналитикСоЗначением = Новый СписокЗначений;
	СписокАналитикСоЗначением.Добавить(Использование.КлючеваяАналитика);
	СписокАналитикСоЗначением.Добавить(Использование.НеИспользуется);
	
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.НеВСписке, СписокАналитикСоЗначением);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	// Неиспользуемые выделяем серым цветом
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикНомерСтроки.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикАналитика.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикГруппаСтрок.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.Равно, Использование.НеИспользуется);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.ЗначениеАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",		ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	// В неиспользуемых, но с установленным значением по умолчанию, меняем текст на Не редактируется
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.Равно, Использование.НеИспользуется);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.ЗначениеАналитики", ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",			НСтр("ru = 'Не редактируется'"));
	
	// Период в колонке блокируем и не даем изменять
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикНомерСтроки.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикАналитика.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикГруппаСтрок.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Аналитика", ВидСравненияКомпоновкиДанных.Равно, Аналитики.Период);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	// Вид бюджета в колонке блокируем и не даем изменять
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикНомерСтроки.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикАналитика.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикГруппаСтрок.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Аналитика", ВидСравненияКомпоновкиДанных.Равно, Аналитики.ВидБюджета);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	
	// Поле Валюта запрещено менять размещение и обязательность
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикАналитика.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикИспользование.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		ПрефиксДанных + "НастройкаАналитик.Аналитика", ВидСравненияКомпоновкиДанных.Равно, Аналитики.Валюта);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",	Истина);
	
	// Колонку Аналитика запрещено менять
	Форма.Элементы.НастройкаАналитикАналитика.ТолькоПросмотр = Истина;
	Форма.Элементы.НастройкаАналитикОбязательноеЗаполнение.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура УстановитьОбязательностьПолей(ВидОперПлана) Экспорт
	
	ОбязательныеРеквизиты = МассивОбязательныхАналитикБюджета(ВидОперПлана.ВидБюджета);
	
	Для каждого Стр Из ВидОперПлана.НастройкаАналитик Цикл
	
		Если ОбязательныеРеквизиты.Найти(Стр.Аналитика) = неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//
		Стр.ОбязательноеЗаполнение = Истина;
	КонецЦикла; 
	
КонецПроцедуры

Функция МассивОбязательныхАналитикБюджета(ВидБюджета) Экспорт
	
	Аналитики = Справочники.АналитикиОперативногоПланирования;
	ВидыБюджетов = Перечисления.ПредназначенияЭлементовСтруктурыОтчета;
	
	ОбязательныеРеквизиты = Новый Массив;
	ОбязательныеРеквизиты.Добавить(Аналитики.Валюта);
	ОбязательныеРеквизиты.Добавить(Аналитики.СтатьяБюджета);
	ОбязательныеРеквизиты.Добавить(Аналитики.ЦФО);
	ОбязательныеРеквизиты.Добавить(Аналитики.Период);
	
	Если ВидБюджета = ВидыБюджетов.БюджетДвиженияРесурсов Тогда
		ОбязательныеРеквизиты.Добавить(Аналитики.Организация);
		ОбязательныеРеквизиты.Добавить(Аналитики.МестоПоставки);
		ОбязательныеРеквизиты.Добавить(Аналитики.Номенклатура);
	Иначе
		ОбязательныеРеквизиты.Добавить(Аналитики.ПриходРасход);
	КонецЕсли;
	
	Возврат ОбязательныеРеквизиты;
КонецФункции

Процедура ЗаполнитьВидОперПланаПоВидуБюджета(ВидОперПлана) Экспорт

	Аналитики = Справочники.АналитикиОперативногоПланирования;
	Использование = Перечисления.ИспользованиеАналитик;
	ВидыБюджетов = Перечисления.ПредназначенияЭлементовСтруктурыОтчета;
	ПриходРасход = Перечисления.ВидыДвиженийПриходРасход;
	
	ВидОперПлана.Предназначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидОперПлана.ВидБюджета, "Предназначение");
	ВидОперПлана.НастройкаАналитик.Очистить();
	Если ВидОперПлана.Ссылка = Справочники.ВидыОперативныхПланов.КонсолидированныйПланПотребностей Тогда
		ДобавитьАналитику(ВидОперПлана, Аналитики.Организация,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Валюта,				Использование.КлючеваяАналитика, Истина);
		ДобавитьАналитику(ВидОперПлана, Аналитики.ПриходРасход,			Использование.НеИспользуется,
			Истина,,ПриходРасход.Приход);
		ДобавитьАналитику(ВидОперПлана, Аналитики.СтатьяБюджета,		Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика1,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика2,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика3,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика4,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика5,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Аналитика6,			Использование.КлючеваяАналитика);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Номенклатура,			Использование.Строка, Истина, "1");
		ДобавитьАналитику(ВидОперПлана, Аналитики.МестоПоставки,		Использование.Строка, Истина, "1");
		ДобавитьАналитику(ВидОперПлана, Аналитики.ЦФО,					Использование.Строка,		, "2");
		ДобавитьАналитику(ВидОперПлана, Аналитики.Проект,				Использование.Строка,		, "2");
		ДобавитьАналитику(ВидОперПлана, Аналитики.Контрагент,			Использование.НеИспользуется);
		ДобавитьАналитику(ВидОперПлана, Аналитики.ДоговорКонтрагента,	Использование.НеИспользуется);
		ДобавитьАналитику(ВидОперПлана, Аналитики.Период, 				Использование.Колонка, Истина);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидБюджета", ВидОперПлана.ВидБюджета);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыОперативногоПланирования.ВидБюджета КАК ВидБюджета,
	|	ПараметрыОперативногоПланирования.Предназначение КАК Предназначение,
	|	ПараметрыОперативногоПланирования.Использовать КАК Использовать,
	|	ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования КАК ПериодичностьОперативногоПланирования
	|ИЗ
	|	РегистрСведений.ПараметрыОперативногоПланирования КАК ПараметрыОперативногоПланирования
	|ГДЕ
	|	ПараметрыОперативногоПланирования.ВидБюджета = &ВидБюджета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктураОперативногоПланирования.Аналитика КАК Аналитика,
	|	СтруктураОперативногоПланирования.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	СтруктураОперативногоПланирования.КонтрольЛимитов КАК КонтрольЛимитов,
	|	СтруктураОперативногоПланирования.Аналитика.ТипДанных КАК ТипДанных
	|ИЗ
	|	РегистрСведений.СтруктураОперативногоПланирования КАК СтруктураОперативногоПланирования
	|ГДЕ
	|	СтруктураОперативногоПланирования.ВидБюджета = &ВидБюджета";
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидОперПлана.Периодичность = Выборка.ПериодичностьОперативногоПланирования;
	КонецЦикла;
	
	//
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Параметры = ПолучитьПараметрыАналитикиДляБюджета(ВидОперПлана.ВидБюджета, Выборка.Аналитика);
		ДобавитьАналитику(ВидОперПлана, Выборка.Аналитика,	Параметры.Использование, Выборка.ОбязательноеЗаполнение, Параметры.ГруппаСтрок, Параметры.ПоУмолчанию, Выборка.КонтрольЛимитов, Выборка.ТипДанных);
	КонецЦикла;
	
	ТМП = ВидОперПлана.НастройкаАналитик.Выгрузить();
	ТМП.ЗаполнитьЗначения(0, "НомерСтроки");
	
	Очередности = ПолучитьОчередностьАналитик();
	Порядок = 50;
	Для Каждого Строка Из ТМП Цикл
		Очередность = Очередности.Найти(Строка.Аналитика);
		Если Очередность = неопределено Тогда
			Порядок = Порядок + 1;
			Строка.НомерСтроки = Порядок;
		Иначе
			Строка.НомерСтроки = Очередность+1;
		КонецЕсли;
		
		Если Строка.Аналитика = Аналитики.ВидБюджета Тогда
			Строка.ЗначениеАналитики = ВидОперПлана.ВидБюджета;
		КонецЕсли;
		
	КонецЦикла;
	
	ТМП.Сортировать("НомерСтроки");
	ВидОперПлана.НастройкаАналитик.Загрузить(ТМП);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиОбновления

Процедура ПервоначальноеЗаполнение() Экспорт
	
	// БДДС
	ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств;
	ПараметрыОП = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(ВидБюджета);
	
	ВидОперПлана = Справочники.ВидыОперативныхПланов.БюджетДДС.ПолучитьОбъект();
	ВидОперПлана.ВидБюджета = ВидБюджета;
	ВидОперПлана.Предназначение = ПланыВидовХарактеристик.ВидыБюджетов.Предназначение(ВидБюджета);
	ВидОперПлана.Периодичность = ПараметрыОП.ПериодичностьОперативногоПланирования;
	ВидОперПлана.КоличествоПериодов = 1;
	ВидОперПлана.ВидГоризонта = Перечисления.ВидыГоризонтовПланирования.СвободныйГоризонт;
	
	ЗаполнитьВидОперПланаПоВидуБюджета(ВидОперПлана);
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидОперПлана);
	
	// БДР
	ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;
	ПараметрыОП = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(ВидБюджета);
	
	ВидОперПлана = Справочники.ВидыОперативныхПланов.БюджетБДР.ПолучитьОбъект();
	ВидОперПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов;
	ВидОперПлана.Предназначение = ПланыВидовХарактеристик.ВидыБюджетов.Предназначение(ВидБюджета);
	ВидОперПлана.Периодичность = ПараметрыОП.ПериодичностьОперативногоПланирования;
	ВидОперПлана.КоличествоПериодов = 1;
	ВидОперПлана.ВидГоризонта = Перечисления.ВидыГоризонтовПланирования.СвободныйГоризонт;
	
	ЗаполнитьВидОперПланаПоВидуБюджета(ВидОперПлана);
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидОперПлана);

	// Бюджет закупок
	ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов;
	ПараметрыОП = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(ВидБюджета);
	
	ВидОперПлана = Справочники.ВидыОперативныхПланов.БюджетЗакупок.ПолучитьОбъект();
	ВидОперПлана.ВидБюджета = ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов;
	ВидОперПлана.Предназначение = ПланыВидовХарактеристик.ВидыБюджетов.Предназначение(ВидБюджета);
	ВидОперПлана.Периодичность = Перечисления.Периодичность.Месяц;
	ВидОперПлана.КоличествоПериодов = 12;
	ВидОперПлана.ВидГоризонта = Перечисления.ВидыГоризонтовПланирования.ФиксированныйГоризонт;
	ВидОперПлана.ПервыйПериод = ВстраиваниеОПКПереопределяемый.глОтносительныйПериодПоДате(НачалоГода(ТекущаяДатаСеанса()), ВидОперПлана.Периодичность, 0);
	Для НомерПериода = 2 По ВидОперПлана.КоличествоПериодов Цикл
		ВстраиваниеОПКПереопределяемый.глОтносительныйПериодПоДате(НачалоГода(ТекущаяДатаСеанса()), ВидОперПлана.Периодичность, НомерПериода - 1);
	КонецЦикла;
	
	ЗаполнитьВидОперПланаПоВидуБюджета(ВидОперПлана);
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидОперПлана);
	
КонецПроцедуры

Процедура ЗаполнитьВидБюджетаИГоризонтИзПараметровОперПланирования() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыОперативныхПланов.Ссылка КАК Ссылка,
	|	ВидыОперативныхПланов.ВидБюджета КАК ВидБюджета,
	|	ВидыОперативныхПланов.Предназначение КАК Предназначение,
	|	ВидыОперативныхПланов.Периодичность КАК Периодичность,
	|	ВидыОперативныхПланов.ВидГоризонта КАК ВидГоризонта,
	|	ВидыОперативныхПланов.КоличествоПериодов КАК КоличествоПериодов,
	|	ВидыОперативныхПланов.ПервыйПериод КАК ПервыйПериод,
	|	ВидыОперативныхПланов.ИспользоватьДляВидаОпераций КАК ИспользоватьДляВидаОпераций,
	|	ПараметрыОперативногоПланирования.УдалитьВидГоризонтаПланирования КАК ВидГоризонтаНовый,
	|	ПараметрыОперативногоПланирования.УдалитьКоличествоПериодовОперативногоПланирования КАК КоличествоПериодовНовый,
	|	ПараметрыОперативногоПланирования.УдалитьПервыйПериод КАК ПервыйПериодНовый,
	|	ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования КАК ПериодичностьНовый,
	|	ВидыБюджетов.Ссылка КАК ВидБюджетаНовый
	|ИЗ
	|	Справочник.ВидыОперативныхПланов КАК ВидыОперативныхПланов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОперативногоПланирования КАК ПараметрыОперативногоПланирования
	|		ПО ВидыОперативныхПланов.Предназначение = ПараметрыОперативногоПланирования.Предназначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыБюджетов КАК ВидыБюджетов
	|		ПО ВидыОперативныхПланов.Предназначение = ВидыБюджетов.Предназначение
	|ГДЕ
	|	ВидыОперативныхПланов.ВидГоризонта = ЗНАЧЕНИЕ(Перечисление.ВидыГоризонтовПланирования.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Спр = Выборка.Ссылка.ПолучитьОбъект();
		
		Спр.ВидБюджета =  Выборка.ВидБюджетаНовый;
		Спр.ВидГоризонта =  Выборка.ВидГоризонтаНовый;
		Спр.КоличествоПериодов = Выборка.КоличествоПериодовНовый;
		Спр.ПервыйПериод = Выборка.ПервыйПериодНовый;
		Спр.Периодичность = Выборка.ПериодичностьНовый;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Спр);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьДо6АналитикСтатьи() Экспорт
	
	// Обновить регистр сведений СтруктураОперативногоПланирования
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика1) КАК Аналитика,
	|	1 КАК Номер
	|ПОМЕСТИТЬ ВТ_ВсеАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика2),
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика3),
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика4),
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика5),
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Аналитика6),
	|	6
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОперативныхПлановНастройкаАналитик.Ссылка КАК ВидОП,
	|	ВидыОперативныхПлановНастройкаАналитик.Аналитика КАК Аналитика,
	|	ВидыОперативныхПлановНастройкаАналитик.Использование КАК Использование,
	|	ВидыОперативныхПлановНастройкаАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	ВидыОперативныхПлановНастройкаАналитик.ГруппаСтрок КАК ГруппаСтрок,
	|	ВидыОперативныхПлановНастройкаАналитик.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ВидыОперативныхПлановНастройкаАналитик.КонтрольЛимитов КАК КонтрольЛимитов,
	|	ВидыОперативныхПлановНастройкаАналитик.ТипДанных КАК ТипДанных,
	|	ВТ_ВсеАналитики.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_АналитикиОП
	|ИЗ
	|	ВТ_ВсеАналитики КАК ВТ_ВсеАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыОперативныхПланов.НастройкаАналитик КАК ВидыОперативныхПлановНастройкаАналитик
	|		ПО ВТ_ВсеАналитики.Аналитика = ВидыОперативныхПлановНастройкаАналитик.Аналитика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОперативныхПлановНастройкаАналитик.Ссылка,
	|	ВидыОперативныхПлановНастройкаАналитик.Аналитика,
	|	ВидыОперативныхПлановНастройкаАналитик.Использование,
	|	ВидыОперативныхПлановНастройкаАналитик.ЗначениеАналитики,
	|	ВидыОперативныхПлановНастройкаАналитик.ГруппаСтрок,
	|	ВидыОперативныхПлановНастройкаАналитик.ОбязательноеЗаполнение,
	|	ИСТИНА,
	|	ВидыОперативныхПлановНастройкаАналитик.ТипДанных,
	|	ВТ_ВсеАналитики.Номер
	|ИЗ
	|	ВТ_ВсеАналитики КАК ВТ_ВсеАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперативныйПлан.НастройкаАналитик КАК ВидыОперативныхПлановНастройкаАналитик
	|		ПО ВТ_ВсеАналитики.Аналитика = ВидыОперативныхПлановНастройкаАналитик.Аналитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АналитикиОП.ВидОП КАК ВидОП,
	|	МАКСИМУМ(ВТ_АналитикиОП.Номер) КАК Номер
	|ПОМЕСТИТЬ ВТ_ПоследняяИспользуемаяАналитика
	|ИЗ
	|	ВТ_АналитикиОП КАК ВТ_АналитикиОП
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_АналитикиОП.ВидОП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АналитикиОП.ВидОП КАК ВидОП,
	|	ВТ_АналитикиОП.Аналитика КАК Аналитика,
	|	ВТ_АналитикиОП.Использование КАК Использование,
	|	ВТ_АналитикиОП.ЗначениеАналитики КАК ЗначениеАналитики,
	|	ВТ_АналитикиОП.ГруппаСтрок КАК ГруппаСтрок,
	|	ВТ_АналитикиОП.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ВТ_АналитикиОП.КонтрольЛимитов КАК КонтрольЛимитов,
	|	ВТ_АналитикиОП.ТипДанных КАК ТипДанных,
	|	ВТ_АналитикиОП.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_ШаблонЗаполненияНовыхАналитик
	|ИЗ
	|	ВТ_ПоследняяИспользуемаяАналитика КАК ВТ_ПоследняяИспользуемаяАналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АналитикиОП КАК ВТ_АналитикиОП
	|		ПО ВТ_ПоследняяИспользуемаяАналитика.ВидОП = ВТ_АналитикиОП.ВидОП
	|			И ВТ_ПоследняяИспользуемаяАналитика.Номер = ВТ_АналитикиОП.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_АналитикиОП.ВидОП КАК ВидОП,
	|	ВТ_ВсеАналитики.Аналитика КАК Аналитика
	|ПОМЕСТИТЬ ВТ_ВсеВидыОПАналитики
	|ИЗ
	|	ВТ_АналитикиОП КАК ВТ_АналитикиОП,
	|	ВТ_ВсеАналитики КАК ВТ_ВсеАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеВидыОПАналитики.ВидОП КАК Ссылка,
	|	ВТ_ВсеВидыОПАналитики.Аналитика КАК Аналитика,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.Использование КАК Использование,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.ЗначениеАналитики КАК ЗначениеАналитики,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.ГруппаСтрок КАК ГруппаСтрок,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.КонтрольЛимитов КАК КонтрольЛимитов,
	|	ВТ_ШаблонЗаполненияНовыхАналитик.ТипДанных КАК ТипДанных
	|ИЗ
	|	ВТ_ВсеВидыОПАналитики КАК ВТ_ВсеВидыОПАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикиОП КАК ВТ_АналитикиОП
	|		ПО ВТ_ВсеВидыОПАналитики.ВидОП = ВТ_АналитикиОП.ВидОП
	|			И ВТ_ВсеВидыОПАналитики.Аналитика = ВТ_АналитикиОП.Аналитика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ШаблонЗаполненияНовыхАналитик КАК ВТ_ШаблонЗаполненияНовыхАналитик
	|		ПО ВТ_ВсеВидыОПАналитики.ВидОП = ВТ_ШаблонЗаполненияНовыхАналитик.ВидОП
	|ГДЕ
	|	ВТ_АналитикиОП.Аналитика ЕСТЬ NULL
	|ИТОГИ ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаСсылка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСсылка.Следующий() Цикл
		Объект = ВыборкаСсылка.Ссылка.ПолучитьОбъект();
		Выборка = ВыборкаСсылка.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Объект.НастройкаАналитик.Добавить(), Выборка);
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьАналитику(ВидОперПлана, Аналитика, Использование, ОбязательноеЗаполнение=Ложь, ГруппаСтрок = "", ЗначениеАналитики = неопределено, КонтрольЛимитов = неопределено, ТипДанных = неопределено)
	
	Строка = ВидОперПлана.НастройкаАналитик.Добавить();
	Строка.Аналитика = Аналитика;
	Строка.Использование = Использование;
	Строка.ГруппаСтрок = ГруппаСтрок;
	Строка.ОбязательноеЗаполнение = ОбязательноеЗаполнение;
	Строка.КонтрольЛимитов = КонтрольЛимитов;
	Строка.ТипДанных = ТипДанных;
	
	Если ЗначениеЗаполнено(ЗначениеАналитики) Тогда
		Строка.ЗначениеАналитики = ЗначениеАналитики;
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПолучитьОчередностьАналитик()
	
	Аналитики = Справочники.АналитикиОперативногоПланирования;
	
	Результат = Новый Массив;
	
	Результат.Добавить(Аналитики.ВидБюджета);
	Результат.Добавить(Аналитики.Период);
	Результат.Добавить(Аналитики.Валюта);
	Результат.Добавить(Аналитики.Организация);
	Результат.Добавить(Аналитики.ЦФО);
	Результат.Добавить(Аналитики.Проект);
	Результат.Добавить(Аналитики.ПриходРасход);
	Результат.Добавить(Аналитики.СтатьяБюджета);
	Результат.Добавить(Аналитики.Аналитика1);
	Результат.Добавить(Аналитики.Аналитика2);
	Результат.Добавить(Аналитики.Аналитика3);
	Результат.Добавить(Аналитики.Аналитика4);
	Результат.Добавить(Аналитики.Аналитика5);
	Результат.Добавить(Аналитики.Аналитика6);
	Результат.Добавить(Аналитики.Контрагент);
	Результат.Добавить(Аналитики.ДоговорКонтрагента);
	Результат.Добавить(Аналитики.Приоритет);
	Результат.Добавить(Аналитики.МестоПоставки);
	Результат.Добавить(Аналитики.Менеджер);
	Результат.Добавить(Аналитики.Номенклатура);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьПараметрыАналитикиДляБюджета(ВидБюджета, Аналитика)
	
	Аналитики = Справочники.АналитикиОперативногоПланирования;
	Использование = Перечисления.ИспользованиеАналитик;
	ПриходРасход = Перечисления.ВидыДвиженийПриходРасход;
	
	ВидыБюджетов = Перечисления.ПредназначенияЭлементовСтруктурыОтчета;
	
	Результат = Новый Структура("Использование, ГруппаСтрок, ПоУмолчанию", Использование.КлючеваяАналитика);
	
	Если Аналитика = Аналитики.Период Тогда
		Результат.Использование = Использование.Колонка;
	ИначеЕсли Аналитика = Аналитики.СтатьяБюджета Тогда
		Если ВидБюджета <> ВидыБюджетов.БюджетДвиженияРесурсов Тогда
			Результат.Использование = Использование.Строка;
			Результат.ГруппаСтрок = "Г1";
		КонецЕсли;
	ИначеЕсли Аналитика = Аналитики.Аналитика1 ИЛИ Аналитика = Аналитики.Аналитика2 ИЛИ Аналитика = Аналитики.Аналитика3 
		ИЛИ Аналитика = Аналитики.Аналитика4 ИЛИ Аналитика = Аналитики.Аналитика5 ИЛИ Аналитика = Аналитики.Аналитика6 Тогда
		Если ВидБюджета <> ВидыБюджетов.БюджетДвиженияРесурсов Тогда
			Результат.Использование = Использование.Строка;
			Результат.ГруппаСтрок = "Г2";
		КонецЕсли;
	ИначеЕсли Аналитика = Аналитики.ПриходРасход Тогда
		Если ВидБюджета = ВидыБюджетов.БюджетДвиженияРесурсов Тогда
			Результат.ПоУмолчанию = ПриходРасход.Приход;
		КонецЕсли;
	ИначеЕсли Аналитика = Аналитики.Номенклатура Тогда
		Если ВидБюджета = ВидыБюджетов.БюджетДвиженияРесурсов Тогда
			Результат.Использование = Использование.Строка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли
