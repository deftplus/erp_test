#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УстановитьВидыАналитикиСтатьиБюджета();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//
	ЭлементыРазрядность = Новый Массив;
	ЭлементыРазрядность.Добавить(Элементы.СуммаРазрядность);
	ЭлементыРазрядность.Добавить(Элементы.КолвоРазрядность);
	ЭлементыРазрядность.Добавить(Элементы.СуммаРазрядностьВвод);
	ЭлементыРазрядность.Добавить(Элементы.КолвоРазрядностьВвод);
	СформироватьСписокВыбораРазрядности(ЭлементыРазрядность);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		УстановитьВидыАналитикиСтатьиБюджета();
		
		//
		Единицы = Элементы.СуммаРазрядность.СписокВыбора[0];
		Объект.СуммаРазрядность = Единицы;
		Объект.СуммаПослеЗапятой = 2;
		
		Объект.СуммаРазрядностьВвод = Единицы;
		Объект.СуммаПослеЗапятойВвод = 2;
		
		Объект.КолвоРазрядность = Единицы;
		Объект.КолвоПослеЗапятой = 3;
		
		Объект.КолвоРазрядностьВвод = Единицы;
		Объект.КолвоПослеЗапятойВвод = 3;
		
	КонецЕсли;
	
	Справочники.ВидыОперативныхПланов.УстановитьУсловноеОформлениеНастройкиАналитик(ЭтаФорма, Объект.Предназначение);
	
	УстановитьУсловноеОформлениеАналитикСтатьиБюджета();

	УстановитьЗапретИзмененияФормы();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьНового", Истина);
		ПараметрыЗаписи.Вставить("ЭтоНовый", Истина);
		
	КонецЕсли;
	
	//
	Для каждого Строка Из ТекущийОбъект.НастройкаАналитик Цикл
		
		Если Строка.Аналитика = Справочники.АналитикиОперативногоПланирования.Валюта
			И Строка.Использование <> Перечисления.ИспользованиеАналитик.КлючеваяАналитика
			И Строка.Использование <> Перечисления.ИспользованиеАналитик.НеИспользуется	Тогда
			
			Строка.Использование = Перечисления.ИспользованиеАналитик.КлючеваяАналитика;
			
		КонецЕсли; 	
	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Оповестим другие открытые формы о записанных изменениях.
	ПараметрыЗаписиВидаОперПлана = Новый Структура();
	Если ПараметрыЗаписи.Свойство("ЭтоНовый") Тогда
		ПараметрыЗаписиВидаОперПлана.Вставить("ЭтоНовый", ПараметрыЗаписи.ЭтоНовый);
	КонецЕсли;
	
	ОповеститьВФорме("Запись_ВидОперПлана", ПараметрыЗаписиВидаОперПлана, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТолькоПросмотр Тогда
		СделатьДоступнымиКнопкиИзмененияИспользования();
	КонецЕсли;
	
	//
	УстановитьВидыАналитикиСтатьиБюджета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.СуммаПослеЗапятой,     "Сумма",      Объект.СуммаРазрядность,     Объект.СуммаПослеЗапятой);
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.КолвоПослеЗапятой,     "Количество", Объект.КолвоРазрядность,     Объект.КолвоПослеЗапятой);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаРазрядностьПриИзменении(Элемент)
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.СуммаПослеЗапятой, "Сумма", Объект.СуммаРазрядность, Объект.СуммаПослеЗапятой);
КонецПроцедуры

&НаКлиенте
Процедура КолвоРазрядностьПриИзменении(Элемент)
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.КолвоПослеЗапятой, "Количество", Объект.КолвоРазрядность, Объект.КолвоПослеЗапятой);
КонецПроцедуры

&НаКлиенте
Процедура СуммаРазрядностьВводПриИзменении(Элемент)
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.СуммаПослеЗапятойВвод, "Сумма", Объект.СуммаРазрядностьВвод, Объект.СуммаПослеЗапятойВвод);
КонецПроцедуры

&НаКлиенте
Процедура КолвоРазрядностьВводПриИзменении(Элемент)
	УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элементы.КолвоПослеЗапятойВвод, "Количество", Объект.КолвоРазрядностьВвод, Объект.КолвоПослеЗапятойВвод);
КонецПроцедуры

&НаКлиенте
Процедура ВидБюджетаПриИзменении(Элемент)
	ПриИзмененииВидаБюджетаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидГоризонтаПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДляВидаОперацийПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапретитьИспользованиеНастройки(Команда)
	Объект.НеИспользовать = Истина;
	Записать(Новый Структура("ИзменениеДоступностиНастройки", Истина));
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьИспользованиеНастройки(Команда)
	Объект.НеИспользовать = Ложь;
	Записать(Новый Структура("ИзменениеДоступностиНастройки", Истина));
КонецПроцедуры
	
&НаКлиенте
Процедура ЗаполнитьПериодичность(Команда)
	ПерезаполнитьПериодичностьНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокАналитик

&НаКлиенте
Процедура АналитикиПриАктивизацииСтроки(Элемент)
	
	ТД = Элемент.ТекущиеДанные;
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	Если ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика1") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	ИначеЕсли ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика2") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	ИначеЕсли ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика3") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	ИначеЕсли ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика4") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	ИначеЕсли ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика5") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	ИначеЕсли ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.Аналитика6") Тогда
		ТД.ТипДанных = ТД.ВидАналитики;
	КонецЕсли;
	
	// Ограничение типа статьи бюджетов
	ЭлементСтатья = Элементы.НастройкаАналитикЗначениеАналитики;
	Если ТД.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.СтатьяБюджета") Тогда
		Если Объект.Предназначение = ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств") Тогда
			ЭлементСтатья.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияДенежныхСредств");
		ИначеЕсли Объект.Предназначение = ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов") Тогда
			ЭлементСтатья.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходовИРасходов");
		ИначеЕсли Объект.Предназначение = ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов") Тогда
			ЭлементСтатья.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияРесурсов");
		КонецЕсли;
		ТД.ЗначениеАналитики = ЭлементСтатья.ОграничениеТипа.ПривестиЗначение(ТД.ЗначениеАналитики);
		Элементы.НастройкаАналитикЗначениеАналитики.ВыбиратьТип = Ложь;
	Иначе
		ЭлементСтатья.ОграничениеТипа = Новый ОписаниеТипов;
		ЭлементСтатья.ВыбиратьТип = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПВХПоВидуАналитики(Аналитика, Предназначение)
	Возврат Аналитика.ТипДанных;
КонецФункции

&НаКлиенте
Процедура АналитикиАналитикаПриИзменении(Элемент)
	ПВХ = ПолучитьПВХПоВидуАналитики(Элементы.НастройкаАналитик.ТекущиеДанные.Аналитика, Объект.Предназначение);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАналитикПриИзменении(Элемент)
	ТД = Элемент.текущиеДанные;
	Если ТД <> неопределено Тогда
		ВыполнитьПереносПодчиненныхАналитик(ТД.Аналитика, ТД.Использование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаАналитикЗначениеАналитикиПриИзменении(Элемент)
	Если Элемент.Родитель.ТекущиеДанные.Аналитика = ПредопределенноеЗначение("Справочник.АналитикиОперативногоПланирования.СтатьяБюджета") Тогда
		ПриИзмененииСтатьиБюджетаНаСервере(Элемент.Родитель.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьМаксимальноеКолвоЗнаковПослеЗапятой(Элемент, ИмяРесурса, Единица, ПослеЗапятой)
	
	Если ИмяРесурса = "Количество" Тогда
		Макс = 3;
	Иначе
		Макс = 2;
	КонецЕсли;
	
	Если Единица = "Единицы" Тогда
		Элемент.МаксимальноеЗначение = Макс;
	ИначеЕсли Единица = "Тысячи" Тогда
		Элемент.МаксимальноеЗначение = Макс + 3;
	ИначеЕсли Единица = "Миллионы" Тогда
		Элемент.МаксимальноеЗначение = Макс + 6;
	ИначеЕсли Единица = "Миллиарды" Тогда
		Элемент.МаксимальноеЗначение = Макс + 9;
	Иначе
		Единица = "Единицы";
		Элемент.МаксимальноеЗначение = Макс;
		ПослеЗапятой = Макс;
	КонецЕсли;
	
	Если ПослеЗапятой > Элемент.МаксимальноеЗначение Тогда
		ПослеЗапятой = Элемент.МаксимальноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокВыбораРазрядности(ЭлементыРазрядность)
	
	МассивВыбора = Новый Массив;
	МассивВыбора.Добавить(НСтр("ru ='Единицы'"));
	МассивВыбора.Добавить(НСтр("ru ='Тысячи'"));
	МассивВыбора.Добавить(НСтр("ru ='Миллионы'"));
	
	Для Каждого Элемент Из ЭлементыРазрядность Цикл
		Элемент.СписокВыбора.ЗагрузитьЗначения(МассивВыбора);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидыАналитикиСтатьиБюджета()

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Аналитика", Справочники.АналитикиОперативногоПланирования.СтатьяБюджета);
	СтруктураПоиска.Вставить("Использование", Перечисления.ИспользованиеАналитик.КлючеваяАналитика);
	
	//
	Строки = Объект.НастройкаАналитик.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() = 1 Тогда
		ЗаполнитьВидыАналитикиСтатьиБюджета(Строки[0]);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗапретИзмененияФормы()
	
	Элементы.ГруппаТолькоПросмотр.Видимость = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Если это новый, то редактирование разрешено
		Возврат;
	
	КонецЕсли; 
	
	НеобходимоЗапретитьРедактирование = Справочники.ВидыОперативныхПланов.ЕстьДокументыПоОперПлану(Объект.Ссылка);
	
	Если НеобходимоЗапретитьРедактирование Тогда
		
		Элементы.НадписьТолькоПросмотр.Заголовок = 
			НСтр("ru = 'Вид оперативного плана открыт только для чтения. Существуют проведенные документы ""Оперативный план"" с таким видом.'");
		Элементы.ГруппаТолькоПросмотр.Видимость = Истина;
		ТолькоПросмотр = Истина;
		
		СделатьДоступнымиКнопкиИзмененияИспользования();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СделатьДоступнымиКнопкиИзмененияИспользования()
	
	Элементы.КнопкаЗапретитьИспользованиеНастройки.Видимость = НЕ Объект.НеИспользовать;
	Элементы.КнопкаРазрешитьИспользованиеНастройки.Видимость = Объект.НеИспользовать;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПереносПодчиненныхАналитик(Аналитика, НовоеИспользование)
	
	Аналитики = Справочники.АналитикиОперативногоПланирования;
	Использование = Перечисления.ИспользованиеАналитик;
	
	МассивПодчиненныхАналитик = Новый Массив;
	
	УстанавливатьГруппы = НовоеИспользование = Использование.Строка
		ИЛИ НовоеИспользование = Использование.Уточняется;
	
	Если Аналитика = Аналитики.СтатьяБюджета Тогда
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика1);
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика2);
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика3);
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика4);
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика5);
		МассивПодчиненныхАналитик.Добавить(Аналитики.Аналитика6);
		
		Если УстанавливатьГруппы Тогда
			Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Аналитика));
			Если Строки.Количество() > 0 Тогда
				Строки[0].ГруппаСтрок = "Г1";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивПодчиненныхАналитик.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПодчиненнаяАналитика Из МассивПодчиненныхАналитик Цикл
		
		СтруктураПоиска = Новый Структура("Аналитика", ПодчиненнаяАналитика);
		
		Строки = Объект.НастройкаАналитик.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из Строки Цикл
			Строка.Использование = НовоеИспользование;
			Если УстанавливатьГруппы Тогда
				Строка.ГруппаСтрок = "Г2";
			КонецЕсли;
		КонецЦикла; 
		
	КонецЦикла; 
	
	// Если Аналитика не располагается в шапке, то необходимо очистить ее значение 
	Для каждого Строка Из Объект.НастройкаАналитик Цикл
		
		Если НЕ УстанавливатьГруппы И ЗначениеЗаполнено(Строка.ГруппаСтрок) Тогда
			Строка.ГруппаСтрок = "";
		КонецЕсли;
		
		Если (Строка.Использование = Использование.КлючеваяАналитика
			ИЛИ Строка.Использование = Использование.НеИспользуется) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ЗначениеАналитики) Тогда
			Строка.ЗначениеАналитики = неопределено;
		КонецЕсли;
		
		Если Строка.Аналитика = Аналитики.Аналитика1
			ИЛИ Строка.Аналитика = Аналитики.Аналитика2
			ИЛИ Строка.Аналитика = Аналитики.Аналитика3
			ИЛИ Строка.Аналитика = Аналитики.Аналитика4
			ИЛИ Строка.Аналитика = Аналитики.Аналитика5
			ИЛИ Строка.Аналитика = Аналитики.Аналитика6 Тогда
			
			Строка.ВидАналитики = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка();
			Строка.ВидАналитикиТипЗначения = Новый ОписаниеТипов(неопределено);
			Строка.ВидАналитикиНаименование = "";
			Строка.ВидАналитикиТипыВладельца = неопределено;
			
		КонецЕсли;
			
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеАналитикСтатьиБюджета()
	
	СписокАналитик = Новый СписокЗначений;
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика1);
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика2);
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика3);
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика4);
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика5);
	СписокАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Аналитика6);
	
	// Не выбраны настройки
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.НастройкаАналитикЗначениеАналитики.Имя);
	
	//
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НастройкаАналитик.Аналитика", ВидСравненияКомпоновкиДанных.ВСписке, СписокАналитик,,Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НастройкаАналитик.Использование", ВидСравненияКомпоновкиДанных.Равно, Перечисления.ИспользованиеАналитик.КлючеваяАналитика,,Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.НастройкаАналитик.ВидАналитики", ВидСравненияКомпоновкиДанных.НеЗаполнено,,,Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",                     НСтр("ru = '<Не используется>'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",            Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", 	  Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", 				  ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСтатьиБюджетаНаСервере(ИдентификаторСтроки)
	
	СтрокаСтатьиБюджета = Объект.НастройкаАналитик.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаСтатьиБюджета = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВидыАналитикиСтатьиБюджета(СтрокаСтатьиБюджета);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыАналитикиСтатьиБюджета(СтрокаСтатьиБюджета)
	
	ВидыАналитикСтатьи = АналитикиСтатейБюджетовУХ.СтруктураВидовАналитикСтатейБюджетов(СтрокаСтатьиБюджета.ЗначениеАналитики);
	
	// Аналитика 1
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика1));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики1, ВидыАналитикСтатьи.ВидАналитики1Наименование,
			ВидыАналитикСтатьи.ВидАналитики1ТипЗначения, ВидыАналитикСтатьи.ВидАналитики1ПараметрыВыбора);
	КонецЕсли;
	
	// Аналитика 2
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика2));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики2, ВидыАналитикСтатьи.ВидАналитики2Наименование,
			ВидыАналитикСтатьи.ВидАналитики2ТипЗначения, ВидыАналитикСтатьи.ВидАналитики2ПараметрыВыбора);
	КонецЕсли;
	
	// Аналитика 3
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика3));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики3, ВидыАналитикСтатьи.ВидАналитики3Наименование,
			ВидыАналитикСтатьи.ВидАналитики3ТипЗначения, ВидыАналитикСтатьи.ВидАналитики3ПараметрыВыбора);
	КонецЕсли;
	
	// Аналитика 4
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика4));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики4, ВидыАналитикСтатьи.ВидАналитики4Наименование,
			ВидыАналитикСтатьи.ВидАналитики4ТипЗначения, ВидыАналитикСтатьи.ВидАналитики4ПараметрыВыбора);
	КонецЕсли;
	
	// Аналитика 5
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика5));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики5, ВидыАналитикСтатьи.ВидАналитики5Наименование,
			ВидыАналитикСтатьи.ВидАналитики5ТипЗначения, ВидыАналитикСтатьи.ВидАналитики5ПараметрыВыбора);
	КонецЕсли;
	
	// Аналитика 6
	Строки = Объект.НастройкаАналитик.НайтиСтроки(Новый Структура("Аналитика", Справочники.АналитикиОперативногоПланирования.Аналитика6));
	Если Строки.Количество() = 1 Тогда
		УстановитьВидАналитики(Строки[0], ВидыАналитикСтатьи.ВидАналитики6, ВидыАналитикСтатьи.ВидАналитики6Наименование,
			ВидыАналитикСтатьи.ВидАналитики6ТипЗначения, ВидыАналитикСтатьи.ВидАналитики6ПараметрыВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидАналитики(Строка, ВидАналитики, ВидАналитикиНаименование, ВидАналитикиТипЗначения, ВидАналитикиТипыВладельца)
	
	Строка.ВидАналитики = ВидАналитики;
	Строка.ВидАналитикиНаименование = ВидАналитикиНаименование;
	Строка.ВидАналитикиТипЗначения = ВидАналитикиТипЗначения;
	Строка.ВидАналитикиТипыВладельца = ВидАналитикиТипыВладельца;
	
	ДанныеТекущегоПоля = Неопределено;
	Если ЗначениеЗаполнено(Строка.ВидАналитикиТипЗначения) Тогда
		ДанныеТекущегоПоля = Строка.ВидАналитикиТипЗначения.ПривестиЗначение(Строка.ЗначениеАналитики);
	КонецЕсли;
	Строка.ЗначениеАналитики = ДанныеТекущегоПоля;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	//
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	//
	Элементы.СтраницаГоризонтПланирования.Видимость = НЕ (
		Объект.ИспользоватьДляВидаОпераций = ПредопределенноеЗначение("Перечисление.ВидыОперацийОперативныйПлан.ВводЛимитов")
		ИЛИ Объект.ИспользоватьДляВидаОпераций = ПредопределенноеЗначение("Перечисление.ВидыОперацийОперативныйПлан.Резервирование"));
	
	//
	ВидимостьКоличества = Объект.ВидБюджета = ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов");
	Элементы.ГруппаКоличество.Видимость = ВидимостьКоличества;
	
	//
	ВидимостьПервогоПериода = Объект.ВидГоризонта = ПредопределенноеЗначение("Перечисление.ВидыГоризонтовПланирования.ФиксированныйГоризонт");
	Элементы.ПервыйПериод.Видимость = ВидимостьПервогоПериода;
	
	Элементы.ЗаполнитьПериодичность.Видимость = НЕ ЗначениеЗаполнено(Объект.Периодичность);
	
КонецПроцедуры

// При вызове стандартного метода Оповестить() платформы оповещение
// приходит и в текущую форму в том числе, т.е. вызывается ее ОбработкаОповещения().
// При этом собственное оповещение обрабатывать не надо, т.к. в форме и так все данные
// актуальные, можно не тратить время на их обновление.
// Но в ОбработкаОповещения() не всегда можно идентифицировать собственное оповещение,
// т.к. в ряде случае Параметр и Источник заполняются согласно формату оповещений 
// БЗКБ и по ним нельзя понять, что это оповещение самой текущей формы. 
// Поэтому перед отсылкой оповещения устанавливаем переменную РассылкаОповещенияИзТекущейФормы,
// которая проверяется в ОбработкаОповещения(), а после окончания оповещения сбрасываем ее.
//
&НаКлиенте
Процедура ОповеститьВФорме(ИмяСобытия, Параметр = Неопределено, Источник = Неопределено)

	РассылкаОповещенияИзТекущейФормы = Истина;
	Оповестить(ИмяСобытия, Параметр, Источник);
	РассылкаОповещенияИзТекущейФормы = Ложь;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаБюджетаНаСервере()
	Справочники.ВидыОперативныхПланов.ЗаполнитьВидОперПланаПоВидуБюджета(Объект);
	Объект.Предназначение = ПланыВидовХарактеристик.ВидыБюджетов.Предназначение(Объект.ВидБюджета);
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьПериодичностьНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидБюджета", Объект.ВидБюджета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыОперативногоПланирования.ВидБюджета КАК ВидБюджета,
	|	ПараметрыОперативногоПланирования.Предназначение КАК Предназначение,
	|	ПараметрыОперативногоПланирования.Использовать КАК Использовать,
	|	ПараметрыОперативногоПланирования.ПериодичностьОперативногоПланирования КАК ПериодичностьОперативногоПланирования
	|ИЗ
	|	РегистрСведений.ПараметрыОперативногоПланирования КАК ПараметрыОперативногоПланирования
	|ГДЕ
	|	ПараметрыОперативногоПланирования.ВидБюджета = &ВидБюджета";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.Периодичность = Выборка.ПериодичностьОперативногоПланирования;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
