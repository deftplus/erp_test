
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПодготовитьФормуНаСервере(ЭтаФорма);
	УстановитьДоступностьСубконто();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СпособыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьОписание();
КонецПроцедуры

&НаКлиенте
Процедура СпособыПослеУдаления(Элемент)
	ОбновитьОписание();
КонецПроцедуры

&НаКлиенте
Процедура СпособыПередНачаломИзменения(Элемент, Отказ)
	ОбновитьСубконтоСчетаСтроки(ЭтаФорма, Элементы.Способы.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СпособыСчетЗатратПриИзменении(Элемент)
	ОбновитьСубконтоСчетаСтроки(ЭтаФорма, Элементы.Способы.ТекущиеДанные);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере(Форма)
	
	Форма.КэшируемыеЗначения = Новый Структура;	
	Форма.КэшируемыеЗначения.Вставить("ИменаСубконто", 		Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.ПолучитьИменаСубконто());
	Форма.КэшируемыеЗначения.Вставить("КлючевыеСубконто", 	МСФОВНАУХ.ПолучитьКлючевыеСубконтоВНА());
	МСФОКлиентСерверУХ.УстановитьПланСчетов(Форма);
	
	ПараметрыВыбораИсточник = Новый Структура("Владелец", Форма.Объект.ПланСчетовБД);
	ПараметрыВыбораСчета = МСФОКлиентСерверУХ.ПолучитьПараметрыВыбора(ПараметрыВыбораИсточник);
	
	СвязиПараметровСубконто = Новый Соответствие();
	СвязиПараметровСубконто.Вставить("Отбор.ОтборСчетИсточник", "Элементы.Способы.ТекущиеДанные.СчетЗатрат");
	СвязиСубконто = МСФОКлиентСерверУХ.ПолучитьСвязиВыбора(СвязиПараметровСубконто);

	Для каждого ИмяСчета Из Форма.КэшируемыеЗначения.ИменаСубконто Цикл
		Форма.Элементы["Способы" + ИмяСчета.Ключ].ПараметрыВыбора = ПараметрыВыбораСчета;
		
		Для каждого ИмяНомерСубконто Из ИмяСчета.Значение Цикл			
			МСФОКлиентСерверУХ.УстановитьПараметрыВыбораСубконто(Форма, "Способы" + ИмяНомерСубконто.Значение, ИмяНомерСубконто.Ключ);
			Форма.Элементы["Способы" + ИмяНомерСубконто.Значение].СвязиПараметровВыбора = СвязиСубконто;
		КонецЦикла;		
		
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписание()

	Объект.Описание = Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.ПолучитьОписание(Объект);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСубконтоСчетаСтроки(Форма, СтрокаТаблицы)

	ТекущаяСтрока = Форма.Объект.Способы.НайтиПоИдентификатору(Форма.Элементы.Способы.ТекущаяСтрока);
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(Форма, "СчетЗатрат", ТекущаяСтрока, "Способы", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьСубконто()
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
	"Субконто1", "Субконто2", "Субконто3");
		
	Для каждого Способ Из Объект.Способы Цикл		
		МСФОКлиентСерверУХ.УстановитьДоступностьСубконто(Способ.СчетЗатрат, Способ, ПоляОбъекта);		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Элементы.Способы.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.Коэффициент = 100;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзПрофиляНСБУНаСервере()
	
	Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.ЗаполнитьПрофильМСФО(Объект);
			
	УстановитьДоступностьСубконто();	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзПрофиляНСБУ(Команда)
	ЗаполнитьИзПрофиляНСБУНаСервере();
КонецПроцедуры

#КонецОбласти

