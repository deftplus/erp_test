#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьОписание(Объект) Экспорт
	
	Описание = "";
	
	Если Объект.Способы.Количество() = 1 Тогда
		
		Описание = Описание 
			+ ДобавитьПоле("/СчетЗатрат", 	Объект.Способы[0].СчетЗатрат)
			+ ДобавитьПоле("/Субконто1", 	Объект.Способы[0].Субконто1)
			+ ДобавитьПоле("/Субконто2", 	Объект.Способы[0].Субконто2)
			+ ДобавитьПоле("/Субконто3", 	Объект.Способы[0].Субконто3)
		
	Иначе
		
		НомерСпособа = 1;		
		Для каждого СтрокаСпособ Из Объект.Способы Цикл
		
			Описание = Описание			
			+ ДобавитьПоле("/СчетЗатрат" + НомерСпособа, СтрокаСпособ.СчетЗатрат)
			+ ДобавитьПоле("/Субконто1", 	СтрокаСпособ.Субконто1)
			+ ДобавитьПоле("/Субконто2", 	СтрокаСпособ.Субконто2)
			+ ДобавитьПоле("/Субконто3", 	СтрокаСпособ.Субконто3)
			+ ДобавитьПоле("/Коэф.", 		СтрокаСпособ.Коэффициент);
		
			НомерСпособа = НомерСпособа + 1;
			
		КонецЦикла;		
		
	КонецЕсли; 

	Возврат ?(Объект.Способы.Количество() > 1,  НСтр("ru = 'Способы: '"), "") + ?(Лев(Описание, 1) = "/", Сред(Описание, 2), Описание);
	
КонецФункции

Функция ДобавитьПоле(Поле, Значение, Пропускать = Истина) 
	Возврат ?(ЗначениеЗаполнено(Значение), Строка(Поле) + ": " + Значение, "");
КонецФункции

Функция ПолучитьИменаСубконто() Экспорт 

	Результат = Новый Структура;
	
	Субконто = Новый Соответствие;
	
	Субконто.Вставить(1, "Субконто1");
	Субконто.Вставить(2, "Субконто2");
	Субконто.Вставить(3, "Субконто3");
	Субконто.Вставить("Подразделение", "Подразделение");
	Субконто.Вставить("НаправлениеДеятельности", "НаправлениеДеятельности");
	
	Результат.Вставить("СчетЗатрат", Субконто);	
	
	Возврат Результат;
	
КонецФункции

#Область ПрограммныйИнтерфейс

Функция ПолучитьСоздатьПрофильПоНСБУ(ПрофильНСБУ, ПланСчетовНСБУ = Неопределено, Отказ = Ложь) Экспорт

	Способ = Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.НайтиПоРеквизиту(
							"ПрофильРаспределенияНСБУ",
							ПрофильНСБУ);
							
	Если НЕ ЗначениеЗаполнено(Способ) Тогда
		Возврат ВстраиваниеУХ.СоздатьПрофильРаспределенияПоНСБУ(ПрофильНСБУ, ПланСчетовНСБУ, Отказ);
	Иначе
		Возврат Способ;	
	КонецЕсли;						

КонецФункции

Функция ПолучитьСоздатьПрофильПоАналитике(СчетЗатрат, Субконто1 = Неопределено, Субконто2 = Неопределено, Субконто3 = Неопределено, СоздатьЕслиНеНайден = Истина) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Способы.Ссылка КАК Профиль
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизацииМСФО.Способы КАК Способы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизацииМСФО.Способы КАК СпособыПрофиля
	|		ПО Способы.Ссылка = СпособыПрофиля.Ссылка
	|ГДЕ
	|	НЕ Способы.Ссылка.ПометкаУдаления
	|	И Способы.СчетЗатрат = &СчетЗатрат
	|	И Способы.Субконто1 = &Субконто1
	|	И Способы.Субконто2 = &Субконто2
	|	И Способы.Субконто3 = &Субконто3
	|
	|СГРУППИРОВАТЬ ПО
	|	Способы.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(СпособыПрофиля.НомерСтроки) = 1";
	
	Запрос.УстановитьПараметр("СчетЗатрат",	СчетЗатрат);
	Запрос.УстановитьПараметр("Субконто1",	Субконто1);
	Запрос.УстановитьПараметр("Субконто2", 	Субконто2);
	Запрос.УстановитьПараметр("Субконто3",	Субконто3);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Если СоздатьЕслиНеНайден Тогда
			Возврат СоздатьПрофильМСФО(СчетЗатрат, Субконто1, Субконто2, Субконто3);
		Иначе	
		    Возврат Неопределено;
		КонецЕсли;
		
	Иначе	
	    Возврат РезультатЗапроса.Выгрузить()[0].Профиль;
	КонецЕсли;
	
КонецФункции

Функция СоздатьПрофильМСФО(СчетЗатрат, Субконто1 = Неопределено, Субконто2 = Неопределено, Субконто3 = Неопределено) Экспорт

	ОбъектПрофиль = Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.СоздатьЭлемент();	

	ОбъектПрофиль.Комментарий = НСтр("ru = 'Создан автоматически'");
	ОбъектПрофиль.Наименование = "" + СчетЗатрат 
									+ ?(Субконто1 = Неопределено, "", ", " + Субконто1)
									+ ?(Субконто2 = Неопределено, "", ", " + Субконто2)
									+ ?(Субконто3 = Неопределено, "", ", " + Субконто3);
	
	Способ = ОбъектПрофиль.Способы.Добавить();
		
	Способ.СчетЗатрат = СчетЗатрат;
	Способ.Субконто1 = Субконто1;
	Способ.Субконто2 = Субконто2;
	Способ.Субконто3 = Субконто3;
	Способ.Коэффициент = 1;
		
	Попытка
		
		ОбъектПрофиль.ДополнительныеСвойства.Вставить("СозданиеАвтоматически", Истина);
		ОбъектПрофиль.ОбменДанными.Загрузка = Истина;
		ОбъектПрофиль.Записать();	
		
	Исключение
		
		Отказ = Истина;
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не удалось создать профиль распределения по счету затрат: '") + СчетЗатрат);
		Возврат Неопределено;
		
	КонецПопытки;	
	
	Возврат ОбъектПрофиль.Ссылка;	

КонецФункции

Функция ЗаполнитьПрофильМСФО(ПрофильРаспределения, ШаблонТрансляции = Неопределено) Экспорт
	
	ПрофильРаспределения.Наименование = ПрофильРаспределения.ПрофильРаспределенияНСБУ.Наименование;
	
	ПрофильРаспределения.Способы.Загрузить(ПолучитьСпособыПоИсточнику(ПрофильРаспределения, ШаблонТрансляции));

	Если ПрофильРаспределения.Способы.Количество()=1 Тогда
		СтрокаИсточник = ПрофильРаспределения.Способы.Получить(0);
	Иначе 
		СтрокаИсточник = Новый Структура("СчетЗатрат, Субконто1, Субконто2, Субконто3");//очищаем
	КонецЕсли;
		
	ПрофильРаспределения.СчетЗатрат 			= СтрокаИсточник.СчетЗатрат;
	ПрофильРаспределения.СчетЗатратСубконто1 	= СтрокаИсточник.Субконто1;
	ПрофильРаспределения.СчетЗатратСубконто2 	= СтрокаИсточник.Субконто2;
	ПрофильРаспределения.СчетЗатратСубконто3 	= СтрокаИсточник.Субконто3;
	
КонецФункции

#КонецОбласти

#Область СпособыТрансляцией

Функция ПолучитьСпособыПоИсточнику(ПрофильРаспределенияМСФО, ШаблонТрансляции, ТабСпособы = Неопределено) Экспорт

	ПараметрыТрансляции = МСФОУХ.ПолучитьЗаменыПараметров(ШаблонТрансляции, МСФОУХ.ПараметрыЗамены());
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	Если ТабСпособы = Неопределено Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_втСпособыПрофиляИсточника(НомераТаблиц));
	Иначе 
		ТекстЗапроса.Добавить(ТекстЗапроса_ТабСпособы(НомераТаблиц));
	КонецЕсли;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_БазаПрофиляИсточника(НомераТаблиц));		
	МСФОУХ.ДобавитьЗапросыТрансляции(ТекстЗапроса, НомераТаблиц, ТекстЗапроса_СчетаИсточники());	
	ТекстЗапроса.Добавить(ТекстЗапроса_СпособыПрофиляПриемника(НомераТаблиц, ПараметрыТрансляции));
	
	Запрос = Новый Запрос(СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()));
	Запрос.УстановитьПараметр("ПрофильРаспределенияНСБУ", 	ПрофильРаспределенияМСФО.ПрофильРаспределенияНСБУ);
	Запрос.УстановитьПараметр("ШаблонТрансляции", 			ШаблонТрансляции);
	Запрос.УстановитьПараметр("ТабСпособы", 				ТабСпособы);
		
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТекстЗапроса_ТабСпособы(НомераТаблиц)

	НомераТаблиц.Вставить("ТабСпособы", НомераТаблиц.Количество());
	
	Возврат  
	"ВЫБРАТЬ
	|	&ПрофильРаспределенияНСБУ КАК Ссылка,
	|	т.НомерСтроки КАК НомерСтроки,
	|	т.Счет КАК СчетИсточник,
	|	NULL КАК Подразделение,
	|	NULL КАК НаправлениеДеятельности,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	т.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ втСпособыПрофиляИсточника
	|ИЗ
	|	&ТабСпособы КАК т"; 

КонецФункции

Функция ТекстЗапроса_втСпособыПрофиляИсточника(НомераТаблиц)

	НомераТаблиц.Вставить("втСпособыПрофиляИсточника", НомераТаблиц.Количество());
	//поле СчетИсточник используется в Запросах-трансляции
	
	Возврат  
	"ВЫБРАТЬ
	|	т.Ссылка КАК Ссылка,
	|	т.НомерСтроки КАК НомерСтроки,
	|	СчетБД.Ссылка КАК СчетИсточник,
	|	т.ПодразделениеОрганизации КАК Подразделение,
	|	NULL КАК НаправлениеДеятельности,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	т.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ втСпособыПрофиляИсточника
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СчетаБД КАК СчетБД
	|		ПО т.СчетЗатрат = СчетБД.СчетСсылка
	|			И (НЕ СчетБД.ПометкаУдаления)
	|ГДЕ
	|	т.Ссылка = &ПрофильРаспределенияНСБУ"; 

КонецФункции

Функция ТекстЗапроса_БазаПрофиляИсточника(НомераТаблиц)

	НомераТаблиц.Вставить("втБазаПрофиля", НомераТаблиц.Количество());
	
	Возврат  
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(т.Коэффициент) = 0
	|			ТОГДА 1
	|		ИНАЧЕ СУММА(т.Коэффициент)
	|	КОНЕЦ КАК База
	|ПОМЕСТИТЬ втБазаПрофиля
	|ИЗ
	|	втСпособыПрофиляИсточника КАК т"; 

КонецФункции

Функция ТекстЗапроса_СчетаИсточники()

	Возврат
	"ВЫБРАТЬ
	|	т.СчетИсточник КАК СчетИсточник
	|ИЗ
	|	втСпособыПрофиляИсточника КАК т";

КонецФункции

Функция ТекстЗапроса_СпособыПрофиляПриемника(НомераТаблиц, ПараметрыЗамены)

	НомераТаблиц.Вставить("втСпособыПрофиляИсточника", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втПравилаПолей.СчетПриемник КАК СчетЗатрат,
	|	&Трансляция_Подразделение КАК Подразделение,
	|	&Трансляция_НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Трансляция_Субконто1 КАК Субконто1,
	|	&Трансляция_Субконто2 КАК Субконто2,
	|	&Трансляция_Субконто3 КАК Субконто3,
	|	ТаблицаИсточник.Коэффициент * 100 / втБазаПрофиля.База КАК Коэффициент
	|ИЗ
	|	втСпособыПрофиляИсточника КАК ТаблицаИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втБазаПрофиля КАК втБазаПрофиля
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПравилаПолей КАК втПравилаПолей
	|		ПО ТаблицаИсточник.СчетИсточник = втПравилаПолей.СчетИсточник
	|			И (&Трансляция_Отбор)";
	
	МСФОУХ.ЗаменитьПараметрыЗапроса(ТекстЗапроса, ПараметрыЗамены);
	
	Возврат ТекстЗапроса; 
	
КонецФункции

#КонецОбласти

#КонецЕсли
