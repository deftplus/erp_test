#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Если используется один план счетов, то возвращается ссылка на него.
// Если несколько, то возвращается пустая ссылка.
// 
// Возвращаемое значение:
// 	СправочникСсылка.ПланыСчетовМеждународногоУчета - 
Функция ПланСчетовПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ПланыСчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПланыСчетовМеждународногоУчета КАК ПланыСчетов
	|ГДЕ
	|	НЕ ПланыСчетов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Количество = Выборка.Количество();
	Если Количество = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.ПланыСчетовМеждународногоУчета.ПустаяСсылка();
	
КонецФункции

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	#Область УправленческаяОрганизация
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Международный";
	Элемент.Наименование = НСтр("ru = 'Международный';
								|en = 'International'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл;
	Элемент.ВалютаПредставления = Константы.ВалютаУправленческогоУчета.Получить();
	
	#КонецОбласти

КонецПроцедуры

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	БлокируемыеРеквизиты.Добавить("УчетВФункциональнойВалюте; УчетВФункциональнойВалюте");
	БлокируемыеРеквизиты.Добавить("ВалютаПредставления; ВалютаПредставления");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.ПланыСчетовМеждународногоУчета.СоздатьМеждународныйПланСчетов";
	Обработчик.Версия = "2.5.6.14";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("5090c35c-18eb-41b0-98eb-0629d7c2f6c2");
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru = 'Заполняет элемент справочника ""Международный"".';
									|en = 'Populates item in ""International"" catalog.'");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.ПланыСчетовМеждународногоУчета.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

КонецПроцедуры

Процедура СоздатьМеждународныйПланСчетов() Экспорт
	
	НачатьТранзакцию();
	
	Попытка
	
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ПланыСчетовМеждународногоУчета");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Международный.Ссылка);
		Блокировка.Заблокировать();
		
		МеждународныйПланСчетов = Международный.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(МеждународныйПланСчетов.Наименование) Тогда
			МеждународныйПланСчетов.Наименование = НСтр("ru = 'Международный';
														|en = 'International'", ОбщегоНазначения.КодОсновногоЯзыка()); // строка записывается в ИБ
			
			МеждународныйПланСчетов.УчетВФункциональнойВалюте = Константы.УчетВФункциональнойВалюте.Получить();
			МеждународныйПланСчетов.ВалютаПредставления = Константы.УдалитьВалютаПредставления.Получить();
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(МеждународныйПланСчетов);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура СоздатьМеждународныйПланСчетовПервыйЗапуск() Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ПланыСчетовМеждународногоУчета");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Международный.Ссылка);
		Блокировка.Заблокировать();
		
		МеждународныйПланСчетов = Международный.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(МеждународныйПланСчетов.Наименование) Тогда
			МеждународныйПланСчетов.Наименование = НСтр("ru = 'Международный';
														|en = 'International'", ОбщегоНазначения.КодОсновногоЯзыка()); // строка записывается в ИБ
			МеждународныйПланСчетов.УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(МеждународныйПланСчетов);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли