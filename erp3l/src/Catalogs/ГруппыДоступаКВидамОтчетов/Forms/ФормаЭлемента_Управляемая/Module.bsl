&НаКлиенте
Процедура КоманднаяПанельОтчетовПоЭтапуПроцесса(Кнопка)
	
	ЭтапПроцесса = Неопределено;
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработатьВыборЭтапаПроцесса", ЭтотОбъект);
		СтрокаПредопределенного = "Перечисление.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности";
		НазначениеПроцессПодготовкиОтчетности = ПредопределенноеЗначение(СтрокаПредопределенного);
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("НазначениеПроцесса", НазначениеПроцессПодготовкиОтчетности);
		СтрокаОткрытия = "Справочник.ЭтапыУниверсальныхПроцессов.ФормаВыбора";
		ОткрытьФорму(СтрокаОткрытия, СтруктураПараметровФормы, ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		// Для прочих продуктов не выполяем действий.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьВыборЭтапаПроцесса(Результат, ДополнительныеПараметры) Экспорт
	
	ЭтапПроцесса = Результат;
	Если ЭтапПроцесса <> Неопределено Тогда
		ОчиститьПолеИЗаполнитьТаблицуОтчетов(ЭтапПроцесса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетовПоШаблонуПроцесса(Кнопка)
	
	ШаблонПроцесса = Неопределено;
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработатьВыборШаблонаПроцесса", ЭтотОбъект);
		СтруктураПараметров = Новый Структура;
		СтруктураОтбора = Новый Структура;
		СтрокаПредопределенного = "Перечисление.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности";
		НазначениеПроцессПодготовкиОтчетности = ПредопределенноеЗначение(СтрокаПредопределенного);
		СтруктураОтбора.Вставить("НазначениеПроцесса", НазначениеПроцессПодготовкиОтчетности);
		СтруктураПараметров.Вставить("Отбор", СтруктураОтбора);
		СтрокаОткрытияФормы = "Справочник.ШаблоныУниверсальныхПроцессов.ФормаВыбора";
		ОткрытьФорму(СтрокаОткрытияФормы, СтруктураПараметров,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		// Для прочих продуктов не выполяем действий.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьВыборШаблонаПроцесса(Результат, ДополнительныеПараметры) Экспорт
	
	ШаблонПроцесса = Результат;
	
	Если ШаблонПроцесса <> Неопределено Тогда
		ОчиститьПолеИЗаполнитьТаблицуОтчетов(ШаблонПроцесса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетовПоГруппеОтчетов(Кнопка)
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ЭтоГруппа", Истина));
	ГруппаОтчетов = Неопределено;
	
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ВыборГруппыОтчетов", ЭтотОбъект);
	ОткрытьФорму("Справочник.ВидыОтчетов.ФормаВыбора", 
	ПараметрыФормы,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборГруппыОтчетов(Результат, ДополнительныеПараметры) Экспорт
	
	ГруппаОтчетов = Результат;
	
	Если ГруппаОтчетов <> Неопределено Тогда
		
		ОчиститьПолеИЗаполнитьТаблицуОтчетов(ГруппаОтчетов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждениеОчисткиПоля_Завершение(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ВидыОтчетов.Очистить();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда	
		Возврат;		// Пользователь отказался от заполнения.
	Иначе
		// Не очищаем поле.
	КонецЕсли;
	ЗаполнитьВидыОтчетов(ДопПараметры.ОбъектЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПолеИЗаполнитьТаблицуОтчетов(ОбъектЗаполненияВход)
	Если Объект.ВидыОтчетов.Количество() > 0 Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ОбъектЗаполнения", ОбъектЗаполненияВход);
		ТекстВопроса = НСтр("ru = 'Удалить существующие элементы?'");
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Оповещение = Новый ОписаниеОповещения("ПодтверждениеОчисткиПоля_Завершение", ЭтаФорма, СтруктураПараметров);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ЗаполнитьВидыОтчетов(ОбъектЗаполненияВход);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивИсключений()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ГруппыДоступаКВидамОтчетовВидыОтчетов.ВидОтчета КАК ВидОтчета
	|ИЗ
	|	Справочник.ГруппыДоступаКВидамОтчетов.ВидыОтчетов КАК ГруппыДоступаКВидамОтчетовВидыОтчетов
	|ГДЕ
	|	НЕ ГруппыДоступаКВидамОтчетовВидыОтчетов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	МассивИсключений=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидОтчета");
	
	Для Каждого Строка ИЗ Объект.ВидыОтчетов Цикл
		
		МассивИсключений.Добавить(Строка.ВидОтчета);
		
	КонецЦикла;
	
	Возврат МассивИсключений;
		
КонецФункции // ПолучитьМассивИсключений()

&НаСервере
Процедура ЗаполнитьВидыОтчетов(Параметр)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Параметр);	
	Запрос.УстановитьПараметр("МассивИсключений",ПолучитьМассивИсключений());
	
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.ВидыОтчетов") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВидыОтчетов.Ссылка КАК ВидОтчета
		|ИЗ
		|	Справочник.ВидыОтчетов КАК ВидыОтчетов
		|ГДЕ
		|	ВидыОтчетов.Ссылка В ИЕРАРХИИ(&Ссылка)
		|	И НЕ (ВидыОтчетов.Ссылка В (&МассивИсключений) ИЛИ ВидыОтчетов.ЭтоГруппа)";
	
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка."+"ЭтапыУниверсальныхПроцессов")
		ИЛИ ТипЗнч(Параметр) = Тип("СправочникСсылка."+"ШаблоныУниверсальныхПроцессов") Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		               |	ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента КАК ВидОтчета
		               |ИЗ
		               |	Справочник.ЭтапыУниверсальныхПроцессов.ФормируемыеДокументы КАК ЭтапыПроцессовФормируемыеДокументы
		               |ГДЕ
		               |	ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента ССЫЛКА Справочник.ВидыОтчетов";
		
		Если ТипЗнч(Параметр) = Тип("СправочникСсылка."+"ЭтапыУниверсальныхПроцессов") Тогда
			
			ТекстЗапроса=ТекстЗапроса+"
			|И ЭтапыПроцессовФормируемыеДокументы.Ссылка = &Ссылка";
			
		Иначе
			
			ТекстЗапроса=ТекстЗапроса+"
			|И ЭтапыПроцессовФормируемыеДокументы.Ссылка.Владелец = &Ссылка";
			
		КонецЕсли;
		
		ТекстЗапроса=ТекстЗапроса+"
			|И НЕ ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента В (&МассивИсключений)";
							
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;				   
	
	ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(),Объект.ВидыОтчетов);
	Модифицированность=Истина;
		
КонецПроцедуры
