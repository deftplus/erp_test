
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
			
	//Если это новый элемент и у него есть родитель, то наследуем реквизиты родителя по-умолчанию
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.Родитель) Тогда	
		Объект.ПериодыРегламентов.Загрузить(Объект.Родитель.ПериодыРегламентов.Выгрузить());	
		Объект.РежимПланирования 			= Объект.Родитель.РежимПланирования;
		Объект.СценарийДляАктуализации 		= Объект.Родитель.СценарийДляАктуализации;
		Объект.СценарийРаспределения 		= Объект.Родитель.СценарийРаспределения;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда	
		Объект.РежимПланирования = Перечисления.РежимыПланирования.ПланированиеНаИнтервал;
	КонецЕсли;	
					
КонецПроцедуры

&НаКлиенте
Процедура ПериодыРегламентовРегламентПриИзменении(Элемент)
	
	Элементы.ПериодыРегламентов.ТекущиеДанные.Периодичность = ПолучитьПериодичностьРегламента(Элементы.ПериодыРегламентов.ТекущиеДанные.Регламент)
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПериодичностьРегламента(Регламент)
	
	Периодичность = перечисления.Периодичность.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(Регламент)  Тогда	
		Периодичность = Регламент.Периодичность;
	КонецЕсли;	

	Возврат Периодичность;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзмененаВерсия", Объект.Ссылка, ВладелецФормы);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаВерсия" И ТипЗнч(Параметр) = Тип("СправочникСсылка.ВерсииРегламентовПодготовкиОтчетности") тогда
		
		СтрокиСПараметром = Объект.ПериодыРегламентов.НайтиСтроки(Новый Структура("Регламент", Параметр));
		
		Для Каждого ПериодРегламента Из СтрокиСПараметром Цикл
			ПериодРегламента.Периодичность = ПолучитьПериодичностьРегламента(ПериодРегламента.Регламент);
		КонецЦикла;
		
		Попытка
			Записать();
		Исключение
			
			СтрокаШаблона = Нстр("ru = 'Не удалось сохранить изменения
			|%1'");
			
			Если Не ПустаяСтрока(СтрокаШаблона) тогда				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			КонецЕсли;
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры
