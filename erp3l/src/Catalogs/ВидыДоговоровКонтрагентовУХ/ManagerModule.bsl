#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов справочника.
//  ТабличныеЧасти - Структура из КлючИЗначение - данные заполнения табличных частей.
//                                                Состав колонок соответствует набору реквизитов табличных частей.
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	СвойстваПредопределенныхЭлементовИзМакета = СвойстваПредопределенныхЭлементовИзМакета("ПараметрыВидовДоговоров");
	
	#Область Обеспечение
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Обеспечение";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Обеспечение';
																				|en = ''", КодыЯзыков); // @НСтр-2
		#Область АккредитивВыданный
		ИмяПредопределенныхДанных = "АккредитивВыданный";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.Обеспечение;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Аккредитив выданный';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //АккредитивВыданный
		
		#Область ГарантияВыданная
		ИмяПредопределенныхДанных = "ГарантияВыданная";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.Обеспечение;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Гарантия выданная';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ГарантияВыданная
		
		#Область ЗалогиИПоручительстваВходящие
		ИмяПредопределенныхДанных = "ЗалогиИПоручительстваВходящие";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.Обеспечение;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Залоги и поручительства входящие';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЗалогиИПоручительстваВходящие
		
		#Область ЗалогиИПоручительстваИсходящие
		ИмяПредопределенныхДанных = "ЗалогиИПоручительстваИсходящие";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.Обеспечение;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Залоги и поручительства исходящие';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЗалогиИПоручительстваИсходящие
		
		#Область Страхование
		ИмяПредопределенныхДанных = "Страхование";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.Обеспечение;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Страхование';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Страхование
		
	#КонецОбласти
	
	#Область ПривлечениеСредств
	
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПривлечениеСредств";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Привлечение средств';
																				|en = ''", КодыЯзыков); // @НСтр-2
		#Область ЗаемПолученный
		ИмяПредопределенныхДанных = "ЗаемПолученный";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПривлечениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Заем полученный';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЗаемПолученный
		
		#Область Кредит
		ИмяПредопределенныхДанных = "Кредит";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПривлечениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Кредит';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Кредит
		
		#Область Овердрафт
		ИмяПредопределенныхДанных = "Овердрафт";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПривлечениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Овердрафт';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Овердрафт
		
		#Область УниверсальноеПривлечение
		ИмяПредопределенныхДанных = "УниверсальноеПривлечение";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПривлечениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Универсальное привлечение';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //УниверсальноеПривлечение
		
		#Область Факторинг
		ИмяПредопределенныхДанных = "Факторинг";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПривлечениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Факторинг';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Факторинг
		
	#КонецОбласти

	#Область ПродажиИПокупки
	
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПродажиИПокупки";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Продажи и покупки';
																				|en = ''", КодыЯзыков); // @НСтр-2
		#Область Аренда
		ИмяПредопределенныхДанных = "Аренда";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Аренда';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Аренда
		
		#Область ВвозИзЕАЭС
		ИмяПредопределенныхДанных = "ВвозИзЕАЭС";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Ввоз из ЕАЭС';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВвозИзЕАЭС
		
		#Область Импорт
		ИмяПредопределенныхДанных = "Импорт";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Импорт';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Импорт
		
		#Область ЛизингПолученный
		ИмяПредопределенныхДанных = "ЛизингПолученный";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Лизинг полученный';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЛизингПолученный
		
		#Область РасчетноКассовоеОбслуживание
		ИмяПредопределенныхДанных = "РасчетноКассовоеОбслуживание";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчетно-кассовое обслуживание';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасчетноКассовоеОбслуживание
		
		#Область СДавальцем
		ИмяПредопределенныхДанных = "СДавальцем";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С давальцем';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СДавальцем
		
		#Область СКомиссионеромНаЗакупку
		ИмяПредопределенныхДанных = "СКомиссионеромНаЗакупку";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С комиссионером (агентом) на закупку';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СКомиссионеромНаЗакупку
		
		#Область СКомиссионером
		ИмяПредопределенныхДанных = "СКомиссионером";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С комиссионером (агентом) на продажу';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СКомиссионером
		
		#Область СКомитентомНаЗакупку
		ИмяПредопределенныхДанных = "СКомитентомНаЗакупку";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С комитентом (принципалом) на закупку';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СКомитентомНаЗакупку
		
		#Область СКомитентом
		ИмяПредопределенныхДанных = "СКомитентом";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С комитентом (принципалом) на продажу';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СКомитентом
		
		#Область СПереработчиком
		ИмяПредопределенныхДанных = "СПереработчиком";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С переработчиком';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СПереработчиком
		
		#Область СПоклажедателем
		ИмяПредопределенныхДанных = "СПоклажедателем";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С поклажедателем';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СПоклажедателем
		
		#Область СПокупателем
		ИмяПредопределенныхДанных = "СПокупателем";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С покупателем';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СПокупателем
		
		#Область СПоставщиком
		ИмяПредопределенныхДанных = "СПоставщиком";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С поставщиком';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СПоставщиком
		
		#Область СХранителем
		ИмяПредопределенныхДанных = "СХранителем";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПродажиИПокупки;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'С хранителем';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СХранителем
		
	#КонецОбласти

	#Область ПроизводныеФинансовыеИнструменты
	
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПроизводныеФинансовыеИнструменты";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Производные финансовые инструменты';
																				|en = ''", КодыЯзыков); // @НСтр-2

		#Область ВалютноПроцентныйСвоп
		ИмяПредопределенныхДанных = "ВалютноПроцентныйСвоп";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПроизводныеФинансовыеИнструменты;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Валютно-процентный своп';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВалютноПроцентныйСвоп
		
		#Область ВалютныйСвоп
		ИмяПредопределенныхДанных = "ВалютныйСвоп";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПроизводныеФинансовыеИнструменты;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Валютный своп';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВалютныйСвоп
		
		#Область ПоставочныйВалютныйФорвард
		ИмяПредопределенныхДанных = "ПоставочныйВалютныйФорвард";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПроизводныеФинансовыеИнструменты;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поставочный валютный форвард';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоставочныйВалютныйФорвард
		
		#Область ПроцентныйСвоп
		ИмяПредопределенныхДанных = "ПроцентныйСвоп";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПроизводныеФинансовыеИнструменты;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Процентный своп';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПроцентныйСвоп
		
		#Область РасчетныйВалютныйФорвард
		ИмяПредопределенныхДанных = "РасчетныйВалютныйФорвард";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПроизводныеФинансовыеИнструменты;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчетный валютный форвард';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасчетныйВалютныйФорвард
		
	#КонецОбласти
	
	#Область ПрочиеВидыДоговоров
	
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПрочиеВидыДоговоров";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие виды договоров';
																				|en = ''", КодыЯзыков); // @НСтр-2
	
		#Область Прочее
		ИмяПредопределенныхДанных = "Прочее";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПрочиеВидыДоговоров;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочее';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Прочее
		
		#Область РасчетыСБрокером
		ИмяПредопределенныхДанных = "РасчетыСБрокером";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.ПрочиеВидыДоговоров;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчеты с брокером';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасчетыСБрокером
		
	#КонецОбласти
	
	#Область РазмещениеСредств
	
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РазмещениеСредств";
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Размещение средств';
																				|en = ''", КодыЯзыков); // @НСтр-2
	
		#Область Депозит
		ИмяПредопределенныхДанных = "Депозит";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.РазмещениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Депозит';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Депозит
		
		#Область ЗаемВыданный
		ИмяПредопределенныхДанных = "ЗаемВыданный";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.РазмещениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Заем выданный';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЗаемВыданный
		
		#Область МинимальныйНеснижаемыйОстаток
		ИмяПредопределенныхДанных = "МинимальныйНеснижаемыйОстаток";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.РазмещениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Минимальный неснижаемый остаток';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //МинимальныйНеснижаемыйОстаток
		
		#Область УниверсальноеРазмещение
		ИмяПредопределенныхДанных = "УниверсальноеРазмещение";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыДоговоровКонтрагентовУХ.РазмещениеСредств;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Универсальное размещение';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //УниверсальноеРазмещение
		
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.НастройкиХозяйственныхОпераций - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

Функция НедоступныеВидыДоговоров() Экспорт
	
	Исключения = Новый Массив;
	
	ДоговорыКонтрагентовВстраиваниеУХ.УстановитьНедоступныеВидыДоговоров(Исключения);
	
	Возврат Исключения;
	
КонецФункции

Процедура ЗаполнитьСписокВыбораВидовДоговоров(ВерсияСоглашенияСсылка, СписокВыбора) Экспорт
	
	СписокВыбора.Очистить();
	
	ИмяВерсииСоглашения = ВерсияСоглашенияСсылка.Метаданные().Имя;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДоговоровКонтрагентовУХ.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВидыДоговоровКонтрагентовУХ.Ссылка) КАК Представление
	|ИЗ
	|	Справочник.ВидыДоговоровКонтрагентовУХ КАК ВидыДоговоровКонтрагентовУХ
	|ГДЕ
	|	ВидыДоговоровКонтрагентовУХ.ИмяДокумента = &ИмяВерсииСоглашения
	|	И НЕ ВидыДоговоровКонтрагентовУХ.Ссылка В (&Исключения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыДоговоровКонтрагентовУХ.Порядок";
	Запрос.УстановитьПараметр("ИмяВерсииСоглашения", ИмяВерсииСоглашения);
	Запрос.УстановитьПараметр("Исключения", НедоступныеВидыДоговоров());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик первого запуска.
// Заполняет предопределенные элементы справочника "ВидыДоговоровКонтрагентовУХ".
//
Процедура ЗаполнитьПредопределенныеВидыДоговоровКонтрагентовУХ(Параметры = Неопределено) Экспорт
	
	Если Параметры <> Неопределено Тогда
		Если НЕ Параметры.МонопольныйРежим Тогда
			Параметры.МонопольныйРежим = Истина;
			Возврат; // Требуется изменение
		КонецЕсли;
	КонецЕсли;	
	
	ЗаполнитьПредопределенныеЭлементыПоДанымИзКода();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикЗаполнения

Процедура ЗаполнитьПредопределенныеЭлементыПоДанымИзКода()
	Языки = ЯзыкиКонфигурации();
	МетаданныеОбъекта = Метаданные.Справочники.ВидыДоговоровКонтрагентовУХ;
	
	ЛокализуемыеРеквизитыОбъекта = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	ПредопределенныеДанные = ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизитыОбъекта);
	
	МультиязычныеСтрокиВРеквизитах = МультиязычныеСтрокиВРеквизитах(МетаданныеОбъекта);
	ПоддерживаетсяИерархия =  ПредопределенныеДанные.Колонки.Найти("ЭтоГруппа") <> Неопределено;
	
	Для Каждого ДанныеЭлемента Из ПредопределенныеДанные Цикл
		ЭлементСсылка = Справочники.ВидыДоговоровКонтрагентовУХ[ДанныеЭлемента.ИмяПредопределенныхДанных];
		ЭлементОбъект = ЭлементСсылка.ПолучитьОбъект();
		СписокРеквизитов = "Родитель,ИмяПредопределенныхДанных,Наименование";
		Если НЕ ЭлементОбъект.ЭтоГруппа Тогда
			СписокРеквизитов = СписокРеквизитов + ",ВстречныйВидДоговора,ЭтоДоходныйДоговор,ЭтоРасходныйДоговор,ВидФинансовогоИнструмента,ВидДоговора,ЭтоФинансовыйИнструмент,ИмяДокумента,Порядок,УдалитьВидДоговораУХ,ДопустимыУсловныеЕдиницы,ТипСправочникаДоговора,ВидОперацииУХПоступление,ВидОперацииУХСписание,ГруппаОперацийГрафика";
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭлементОбъект, ДанныеЭлемента, СписокРеквизитов);

		Если ЛокализуемыеРеквизитыОбъекта.Количество() > 0 Тогда
			Если МультиязычныеСтрокиВРеквизитах Тогда
				
				КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодПервогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык1"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодВторогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык2"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
			ИначеЕсли НЕ (ПоддерживаетсяИерархия И ЭлементОбъект.ЭтоГруппа) Тогда
				
				Для каждого КодЯзыка Из Языки Цикл
					Представления = ЭлементОбъект.Представления; // ТабличнаяЧасть - 
					НовоеПредставление = Представления.Добавить();
					НовоеПредставление.КодЯзыка = КодЯзыка;
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						Значение = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
						НовоеПредставление[ИмяЛокализуемогоРеквизита.Ключ] = ?(ЗначениеЗаполнено(Значение), Значение, ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ]);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		ЭлементОбъект.ОбменДанными.Загрузка = Истина;
		//ЭлементОбъект.Записать();
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЭлементОбъект);

	КонецЦикла;
	
КонецПроцедуры

// Возвращает предобределенные даные объекта
// 
// Параметры:
// 	МетаданныеОбъекта - ОбъектМетаданныхСправочник - Метаданные заполняемого справочника
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание
Функция ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизиты = Неопределено) Экспорт  //УХ
	
	КодыЯзыков = ЯзыкиКонфигурации();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъекта.ПолноеИмя());
	Если Не ЗначениеЗаполнено(ЛокализуемыеРеквизиты) Тогда
		ЛокализуемыеРеквизиты = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	КонецЕсли;
	ПредопределенныеДанные = Новый ТаблицаЗначений;
	ТабличныеЧасти = Новый Структура;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ПредопределенныеДанные.Колонки.Добавить(ТабличнаяЧасть.Имя, Новый ОписаниеТипов("ТаблицаЗначений"));
		Таблица = Новый ТаблицаЗначений;
		Для Каждого Реквизит Из ТабличнаяЧасть.СтандартныеРеквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		
		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		ТабличныеЧасти.Вставить(ТабличнаяЧасть.Имя, Таблица);
		
	КонецЦикла;
	
	Если ПредопределенныеДанные.Колонки.Найти("ИмяПредопределенныхДанных") <> Неопределено Тогда
		ПредопределенныеДанные.Индексы.Добавить("ИмяПредопределенныхДанных");
	КонецЕсли;
	
	МенеджерОбъекта.ПриНачальномЗаполненииЭлементов(КодыЯзыков, ПредопределенныеДанные, ТабличныеЧасти);
	Возврат ПредопределенныеДанные;
	
КонецФункции

Процедура ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета)

	Если СвойстваПредопределенныхЭлементовИзМакета = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	СвойстваЭлемента = СвойстваПредопределенныхЭлементовИзМакета.Получить(Элемент.Ссылка);
	
	Если СвойстваЭлемента = Неопределено тогда
		Возврат;   //Выплата зарплаты, нет в макете
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Элемент,СвойстваЭлемента);

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДоговоровКонтрагентовУХ.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВидыДоговоровКонтрагентовУХ.Ссылка) КАК Представление
	|ИЗ
	|	Справочник.ВидыДоговоровКонтрагентовУХ КАК ВидыДоговоровКонтрагентовУХ
	|ГДЕ
	|	НЕ ВидыДоговоровКонтрагентовУХ.ПометкаУдаления
	|	И &ВыборГруппИЭлементов
	|	И НЕ ВидыДоговоровКонтрагентовУХ.Ссылка В (&Исключения)";
	Запрос.УстановитьПараметр("Исключения", НедоступныеВидыДоговоров());
	
	Если Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы Тогда
		Запрос.УстановитьПараметр("ВыборГруппИЭлементов", Истина);
	ИначеЕсли Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыборГруппИЭлементов", "ВидыДоговоровКонтрагентовУХ.ЭтоГруппа");
	ИначеЕсли Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыборГруппИЭлементов", "НЕ ВидыДоговоровКонтрагентовУХ.ЭтоГруппа");
	КонецЕсли;	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Параметры.СтрокаПоиска) = Тип("Строка")
			И НЕ ПустаяСтрока(Параметры.СтрокаПоиска)
			И СтрНайти(НРег(Выборка.Представление), НРег(Параметры.СтрокаПоиска)) <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область МультиязычностьСервер

Функция ЯзыкиКонфигурации()
	              
	Языки = Новый Массив;
	Для каждого Язык Из Метаданные.Языки Цикл
		Языки.Добавить(Язык.КодЯзыка);
	КонецЦикла;

	Возврат Языки;

КонецФункции

Функция МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Экспорт
	Возврат ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено;
КонецФункции

// Параметры:
// 	ОбъектМетаданных - ОбъектМетаданныхСправочник - Описание
// 	Префикс - Строка - Описание
// Возвращаемое значение:
// 	Соответствие - Описание
Функция НаименованияЛокализуемыхРеквизитыОбъекта(ОбъектМетаданных, Префикс = "")
	
	СписокРеквизитовОбъекта = Новый Соответствие;
	Если МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Тогда
	
		ДлинаСуффиксаЯзыка = СтрДлина("Язык1");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 0
		|	*
		|ИЗ
		|	&ПолноеИмя";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПолноеИмя", ОбъектМетаданных.ПолноеИмя());
		РезультатЗапроса = Запрос.Выполнить();
		
		Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
			Если СтрЗаканчиваетсяНа(Колонка.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Колонка.Имя, "Язык2") Тогда
				СписокРеквизитовОбъекта.Вставить(Префикс + Лев(Колонка.Имя, СтрДлина(Колонка.Имя) - ДлинаСуффиксаЯзыка), Истина);
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		Реквизиты = ОбъектМетаданных.ТабличныеЧасти.Представления.Реквизиты; // КоллекцияКолонокТаблицыЗначений - 
		Для каждого Реквизит Из Реквизиты Цикл
			Если СтрСравнить(Реквизит.Имя, "КодЯзыка") = 0 Тогда
				Продолжить;
			КонецЕсли;
			СписокРеквизитовОбъекта.Вставить(Префикс + Реквизит.Имя, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокРеквизитовОбъекта;
	
КонецФункции

Процедура ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, Языки)
	
	Если ЛокализуемыеРеквизиты[Реквизит.Имя] = Истина Тогда
		ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		Для каждого Язык Из Языки Цикл
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		КонецЦикла;
	Иначе
		Если ЭтоЛокализуемыйРеквизит(Реквизит) Тогда
			ИмяБезСуффикса = ИмяБезСуффиксаЯзык(Реквизит);
			ЛокализуемыеРеквизиты.Вставить(ИмяБезСуффикса, Истина);
			Для каждого Язык Из Языки Цикл
				ПредопределенныеДанные.Колонки.Добавить(ИмяБезСуффикса + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
			КонецЦикла;
		Иначе
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ИмяБезСуффиксаЯзык(Знач Реквизит)
	
	Возврат Лев(Реквизит.Имя, СтрДлина(Реквизит.Имя) - СтрДлина("Язык1"));

КонецФункции

Функция ЭтоЛокализуемыйРеквизит(Реквизит)
	Возврат СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык2");
КонецФункции

Функция ПризнакЛокализуемогоРеквизита()
	Возврат "Локализуемый";
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СвойстваПредопределенныхЭлементовИзМакета(ИмяМакета)

	ОбъектМетаданных = Метаданные.Справочники.ВидыДоговоровКонтрагентовУХ;
	
	Попытка
		ТабДок = ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	ПараметрыВидовОпераций = ОбновлениеИнформационнойБазыУХСлужебный.ПрочитатьПоставляемыеДанныеИзМакета(ОбъектМетаданных, ТабДок);
	
	Возврат ПараметрыВидовОпераций;
	
КонецФункции // СвойстваПредопределенногоОбъектаИзМакета()

Функция СсылкаНаПредопределенныйЭлемент(ИмяПредопределенногоЭлемента)

	Возврат Справочники.ВидыДоговоровКонтрагентовУХ[ИмяПредопределенногоЭлемента];

КонецФункции // СсылкаНаПредопределенныйЭлемент()

#КонецОбласти

#КонецЕсли
