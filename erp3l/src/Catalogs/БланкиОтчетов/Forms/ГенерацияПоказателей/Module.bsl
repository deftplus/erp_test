////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//

&НаСервере
Процедура ВывестиСтрокиВРекурсии(Строки, ТаблицаСтрок, ЭлементыСтроки)
	
	ТекущиеЭлементы = ЭлементыСтроки.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		
		ТекЭлементСтроки = ТекущиеЭлементы.Добавить();
		ТекЭлементСтроки.Строка = Строка.Ссылка;
		
		Для Каждого КлючИЗначение Из СтруктураКодовИСсылокНаКолонки Цикл
			
			НайденныеСтроки = ТаблицаСтрок.НайтиСтроки(Новый Структура("Ссылка, КодКолонки", Строка.Ссылка, ОбщегоНазначенияУХ.ДополнитьДоЗаданнойДлины(КлючИЗначение.Ключ, ДлинаКодаКолонки)));
			
			ТекЭлементСтроки[КлючИЗначение.Ключ] = Истина;
			ТекЭлементСтроки[КлючИЗначение.Ключ + "_Использование"] = ?(НайденныеСтроки.Количество() = 0, 1, 0);
			
		КонецЦикла;
		
		ВывестиСтрокиВРекурсии(Строка.Строки, ТаблицаСтрок, ТекЭлементСтроки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкиВКарту()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КолонкиОтчетов.Ссылка КАК Ссылка,
	|	КолонкиОтчетов.Представление КАК Представление,
	|	КолонкиОтчетов.Код КАК Код
	|ИЗ
	|	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
	|ГДЕ
	|	КолонкиОтчетов.Владелец = &Владелец";
	Если МассивКодовКолонок.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + "
		|И КолонкиОтчетов.Код В(&МассивКодов)";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	КолонкиОтчетов.ПорядковыйНомер";
	
	Запрос.УстановитьПараметр("Владелец", ВидОтчета);
	
	Если МассивКодовКолонок.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("МассивКодов", МассивКодовКолонок);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивРеквизитов    = Новый Массив;
	ОписаниеТиповБулево = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево();
	ОписаниеТиповЧисло  = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(1, 0);
	МассивЭлементов     = Новый Массив;
	
	Структура        = Новый Структура;
	
	Пока Выборка.Следующий() Цикл
		
		КодОтчета = СокрЛП(Выборка.Код);
		
		Структура.Вставить(КодОтчета, Выборка.Ссылка);
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(КодОтчета, ОписаниеТиповБулево, "Карта", Выборка.Представление, Ложь));
		МассивРеквизитов.Добавить(Новый РеквизитФормы(КодОтчета + "_Использование", ОписаниеТиповЧисло, "Карта", Выборка.Представление, Ложь));
		Элемент = Элементы.Добавить(КодОтчета, Тип("ПолеФормы"), Элементы.Карта);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ЦветФонаЗаголовка = WebЦвета.СветлоЖелтыйЗолотистый;
		
		МассивЭлементов.Добавить(Элемент);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		
		Элемент.ПутьКДанным = "Карта." + Элемент.Имя;
		
		ЭлементОформления   = УсловноеОформление.Элементы.Добавить();
		
		НовыйЭлементОтбора  = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Карта." + Элемент.Имя + "_Использование");
		НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = 0;
		НовыйЭлементОтбора.Использование  = Истина;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		НовоеПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		НовоеПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		НовоеПолеОформления.Использование = истина;
		
		ЭлементОформления.Использование = Истина;
		
		ЭлементОформления   = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементОтбора  = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Карта." + Элемент.Имя + "_Использование");
		НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = 1;
		НовыйЭлементОтбора.Использование  = Истина;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.АкварельноСиний);
		НовоеПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		НовоеПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		НовоеПолеОформления.Использование = истина;
		
		ЭлементОформления.Использование = Истина;
		
		ЭлементОформления   = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементОтбора  = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Карта." + Элемент.Имя + "_Использование");
		НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = 2;
		НовыйЭлементОтбора.Использование  = Истина;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЖелтыйЗолотистый);
		НовоеПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		НовоеПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		НовоеПолеОформления.Использование = истина;
		
		ЭлементОформления.Использование = Истина;
		
	КонецЦикла;
	
	СтруктураКодовИСсылокНаКолонки = Новый ФиксированнаяСтруктура(Структура);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтрокиОтчетов.Ссылка КАК Ссылка,
	|	КолонкиОтчетов.Код КАК КодКолонки,
	|	СтрокиОтчетов.ПорядковыйНомер КАК ПорядковыйНомер
	|ПОМЕСТИТЬ ВременноеХранилище
	|ИЗ
	|	Справочник.СтрокиОтчетов КАК СтрокиОтчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КолонкиОтчетов КАК КолонкиОтчетов
	|			ПО ПоказателиОтчетов.Колонка = КолонкиОтчетов.Ссылка
	|		ПО (ПоказателиОтчетов.Строка = СтрокиОтчетов.Ссылка)
	|ГДЕ
	|	СтрокиОтчетов.Владелец = &Владелец";
	Если МассивКодовСтрок.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И СтрокиОтчетов.Код В(&МассивКодов)";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременноеХранилище.Ссылка,
	|	ВременноеХранилище.КодКолонки
	|ИЗ
	|	ВременноеХранилище КАК ВременноеХранилище
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВременноеХранилище.Ссылка,
	|	ВременноеХранилище.ПорядковыйНомер
	|ИЗ
	|	ВременноеХранилище КАК ВременноеХранилище
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВременноеХранилище.Ссылка ИЕРАРХИЯ,
	|	ВременноеХранилище.ПорядковыйНомер";
	
	
	Запрос.УстановитьПараметр("Владелец", ВидОтчета);
	
	Если МассивКодовСтрок.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("МассивКодов", МассивКодовСтрок);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаСтрок = РезультатЗапроса[1].Выгрузить();
	ДеревоСтрок = РезультатЗапроса[2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ВывестиСтрокиВРекурсии(ДеревоСтрок.Строки, ТаблицаСтрок, Карта);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивКодовСтрок   = Новый ФиксированныйМассив(Параметры.МассивКодовСтрок);
	МассивКодовКолонок = Новый ФиксированныйМассив(Параметры.МассивКодовКолонок);
	
	Параметры.Свойство("ВидОтчета", ВидОтчета);
	
	ДлинаКодаСтроки  = Метаданные.Справочники.СтрокиОтчетов.ДлинаКода;
	ДлинаКодаКолонки = Метаданные.Справочники.КолонкиОтчетов.ДлинаКода;
	
	ДобавитьКолонкиВКарту();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.
//


&НаКлиенте
Процедура НаследоватьНастройкиОтКолонки(Команда)
	
	УстановитьДляПоказателя(2);
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьНастройкиОтСтрок(Команда)
	
	УстановитьДляПоказателя(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Закрыть(СформироватьПоказатели());
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ПоказателиОтчетов"));
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажкиДляКолонки(Команда)
	
	УстановитьДляКолонки(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажкиДляКолонки(Команда)
	
	УстановитьДляКолонки(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажкиДляСтроки(Команда)
	
	УстановитьДляСтроки(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажкиДляСтроки(Команда)
	
	УстановитьДляСтроки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьНастройкиОтКолонкиДляКолонки(Команда)
	
	УстановитьДляКолонки(2);
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьНастройкиОтКолонкиДляСтроки(Команда)
	
	УстановитьДляСтроки(2);
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьНастройкиОтСтрокДляКолонки(Команда)
	
	УстановитьДляКолонки(1);
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьНастройкиОтСтрокДляСтроки(Команда)
	
	УстановитьДляСтроки(1);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ УСТАНОВКИ-СБРОСА ЗНАЧЕНИЙ
//

&НаКлиенте
Процедура УстановитьДляСтроки(Значение)
	
	ТД = Элементы.Карта.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Использование = ТипЗнч(Значение) = Тип("Число");
	
	Для Каждого ПодчиненныйЭлемент Из Элементы.Карта.ПодчиненныеЭлементы Цикл
		
		Если 
			ПодчиненныйЭлемент.Имя = "КартаСтрока" 
			ИЛИ СтрЧислоВхождений(ПодчиненныйЭлемент, "_Использование") > 0
			ИЛИ ТД[ПодчиненныйЭлемент.Имя + "_Использование"] = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТД[ПодчиненныйЭлемент.Имя + ?(Использование, "_Использование", "")] = Значение;
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДляКолонки(Значение)
	
	ИмяТекущегоЭлемента = Элементы.Карта.ТекущийЭлемент.Имя;
	
	Если ИмяТекущегоЭлемента = "КартаСтрока" Тогда
		Возврат;
	КонецЕсли;
	
	Использование = ТипЗнч(Значение) = Тип("Число");
	
	Для Каждого Строка Из Карта.ПолучитьЭлементы() Цикл
		Если Строка[ИмяТекущегоЭлемента + "_Использование"] <> 0 Тогда
			Строка[ИмяТекущегоЭлемента + ?(Использование, "_Использование", "")] = Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДляПоказателя(Значение)
	
	ИмяТекущегоЭлемента = Элементы.Карта.ТекущийЭлемент.Имя;
	Если ИмяТекущегоЭлемента = "КартаСтрока" Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Карта.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные[ИмяТекущегоЭлемента + "_Использование"] = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные[ИмяТекущегоЭлемента + "_Использование"] = Значение;
	
КонецПроцедуры



&НаСервере
Функция СформироватьПоказатели()
	
	Показатели = Новый Массив;
	
	ФормироватьПоказателиРекурсивно(Карта, Показатели);
	
	Возврат Показатели;
	
КонецФункции

&НаСервере
Процедура ФормироватьПоказателиРекурсивно(Строки, Показатели)
	
	ВнЭлементы = Строки.ПолучитьЭлементы();
	
	ТаблицаИзмененныхПоказателей=Новый ТаблицаЗначений;
	ТаблицаИзмененныхПоказателей.Колонки.Добавить("Ссылка");
	ТаблицаИзмененныхПоказателей.Колонки.Добавить("ОбъектДобавлен",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	ТаблицаИзмененныхПоказателей.Колонки.Добавить("ПометкаУдаления",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	
	Для Каждого Элемент Из ВнЭлементы Цикл
		
		Строка = Элемент.Строка;
		
		Для Каждого КлючИЗначение Из СтруктураКодовИСсылокНаКолонки Цикл
			
			Если Элемент[КлючИЗначение.Ключ] Тогда
				
				Использование = Элемент[КлючИЗначение.Ключ + "_Использование"];
				
				Если Использование <> 0 Тогда
					
					ОписаниеНовогоПоказателя = Новый Структура;
					
					Справочники.ВидыОтчетов.СформироватьПоказатель(ВидОтчета,Строка,КлючИЗначение.Значение,Использование, ОписаниеНовогоПоказателя,,,СтруктураКодовИСсылокНаКолонки.Количество()=1,ТаблицаИзмененныхПоказателей);
					
					Если ОписаниеНовогоПоказателя.Количество() Тогда
						Показатели.Добавить(ОписаниеНовогоПоказателя);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ФормироватьПоказателиРекурсивно(Элемент, Показатели);
		
	КонецЦикла;
		
КонецПроцедуры




