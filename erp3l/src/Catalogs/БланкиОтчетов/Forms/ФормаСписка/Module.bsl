
&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборПоВладельцу(Форма)
	ПустойВидОтчета = ПредопределенноеЗначение("Справочник.ВидыОтчетов.ПустаяСсылка");
	ВидОтчетаНаФорме = Форма.ВидОтчета;
	ЗначениеОтбора = ПустойВидОтчета;
	Если ЗначениеЗаполнено(ВидОтчетаНаФорме) Тогда
		ЭтоГруппаОтчетов = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВидОтчетаНаФорме, "ЭтоГруппа");
		//Если Не ЭтоГруппаОтчетов Тогда
		Если ЭтоГруппаОтчетов = ЛОЖЬ Тогда // Оперативное исправление ошибки
			ЗначениеОтбора = ВидОтчетаНаФорме;
		Иначе
			ЗначениеОтбора = ПустойВидОтчета;
		КонецЕсли;
	Иначе	
		ЗначениеОтбора = ПустойВидОтчета;
	КонецЕсли;
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(Форма.Список.Отбор, "Владелец", ЗначениеОтбора, ВидСравненияКомпоновкиДанных.Равно, , Истина);
КонецПроцедуры		 // ОбновитьОтборПоВладельцу()

// Устанавливает бланк отчета БланкОтчетаВход основным для его вида отчета.
// Возвращает успешность выполнения.
&НаСервере
Функция УстановитьБланкОсновным(БланкОтчетаВход)
	РезультатФункции = Истина;
	Если ЗначениеЗаполнено(БланкОтчетаВход) Тогда
		РезультатФункции = Справочники.БланкиОтчетов.УстановитьБланкОсновным(БланкОтчетаВход);
	Иначе
		ТекстСообщения = НСтр("ru = 'Выбранный бланк отчета пустой. Невозможно назначить его основным.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		РезультатФункции = Ложь;
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции

// Позиционирует на ВидОтчетаВход в списке видов отчета.
&НаСервере
Процедура ВыбратьВидОтчетаВСписке(знач ВидОтчетаВход)
	Элементы.СписокВидовОтчетов.ТекущаяСтрока = ВидОтчетаВход;
КонецПроцедуры

// Возвращает незанятое наименование по умолчанию для бланка отчета, принадлежащего
// виду отчета ВидОтчетаВход.
&НаСервереБезКонтекста
Функция СгенерироватьНаименованиеНовогоБланка(ВидОтчетаВход)
	РезультатФункции = Справочники.ВидыОтчетов.СгенерироватьНаименованиеНовогоБланкаДляВидаОтчета(ВидОтчетаВход);
	Возврат РезультатФункции;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") И ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
		
		ВидОтчета=Параметры.Отбор.Владелец;			
		ОбновитьОтборПоВладельцу(ЭтаФорма);
		Элементы.ВидОтчета.Доступность=Ложь;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ВидОтчета) Тогда
		
		Элементы.ВидОтчета.Доступность=Истина;	
		ЭлементВИБ=Справочники.ВидыОтчетов.Выбрать();
		
		Пока ЭлементВИБ.Следующий() Цикл	
			Если  НЕ(ЭлементВИБ.ЭтоГруппа ИЛИ ЭлементВИБ.ПометкаУдаления)  Тогда		
				ВидОтчета=ЭлементВИБ.Ссылка;
				ОбновитьОтборПоВладельцу(ЭтаФорма);
				Прервать;		
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
		
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора 							= Истина;
		Элементы.ПерейтиВРежимОтображенияДанных.Видимость 		= Ложь;
		Элементы.СписокУстановитьОсновнойБланкОтчета.Видимость 	= Ложь;
		Элементы.СписокГруппаСозданиеБланка.Видимость 			= Ложь;
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			ВидОтчета=Параметры.ТекущаяСтрока.Владелец;
		КонецЕсли;
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Журнал(Команда)
	
	Если Элементы.Список.ТекущиеДанные=Неопределено ИЛИ ВидОтчета=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонОтчета = Элементы.Список.ТекущиеДанные.Ссылка;
	СтруктураПараметров=Новый Структура("ВидОтчета,ШаблонОтчета",ВидОтчета,ШаблонОтчета);
	ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаСпискаУправляемая",СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	
	ОбновитьОтборПоВладельцу(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВРежимПросмотраДанных(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено 
			ИЛИ ВидОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если Элементы.Список.ТекущиеДанные.РежимБланка = 1 Тогда
		ШаблонОтчета = Элементы.Список.ТекущиеДанные.Ссылка;
		
		СтруктураПараметров = Новый Структура("ВидОтчета,Бланк,РежимыДоступаКФункциямСводнойТаблицы"
		,ВидОтчета
		,ШаблонОтчета
		,ПредопределенноеЗначение("Перечисление.РежимыДоступаКФункциямСводнойТаблицы.РаботаСДанными"));
		
		Имя = "Обработка.АналитическийБланкСводнаяТаблица.Форма.ФормаМакетаСводнаяТаблица";
		ОткрытьФорму(Имя, СтруктураПараметров);
	ИначеЕсли Элементы.Список.ТекущиеДанные.РежимБланка = 2 Тогда
		
		ШаблонОтчета = Элементы.Список.ТекущиеДанные.Ссылка;

		СтруктураПараметров = Новый Структура("Бланк",ШаблонОтчета);	   		
		Имя = "Обработка.АналитическийБланк.Форма.ФормаОтчета";
		ОткрытьФорму(Имя, СтруктураПараметров);
	
	Иначе	
		ТекстСообщения = НСтр("ru = 'Режим отображения данных доступен только для бланков сводных таблиц и многопериодных бланков'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.РежимВыбора Тогда	
		 Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			ВидОтчета=Параметры.ТекущаяСтрока.Владелец;
		КонецЕсли;
	КонецЕсли;	
	
	Если Параметры.Отбор.Свойство("Владелец") И ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда	
		ВидОтчета=Параметры.Отбор.Владелец;
		ВыбратьВидОтчетаВСписке(ВидОтчета);	
	ИначеЕсли ЗначениеЗаполнено(ВидОтчета) Тогда	
		ВыбратьВидОтчетаВСписке(ВидОтчета);
		ОбновитьОтборПоВладельцу(ЭтаФорма);
	КонецЕсли;			
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовОтчетовПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элемент.ТекущиеДанные = НЕОПРЕДЕЛЕНО Тогда
		
		ВидОтчета = Элемент.ТекущиеДанные.Ссылка;
		
		ВыбранаГруппа = Элемент.ТекущиеДанные.ЭтоГруппа;	
		Элементы.Список.Доступность = НЕ ВыбранаГруппа;
	Иначе
		ВидОтчета = ПредопределенноеЗначение("Справочник.ВидыОтчетов.ПустаяСсылка");
	КонецЕсли;
	ОбновитьОтборПоВладельцу(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновнойБланкОтчета(Команда)
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		РезультатУстановкиОсновногоБланка = УстановитьБланкОсновным(ТекДанные.Ссылка);
		Если РезультатУстановкиОсновногоБланка Тогда
			КартинкаОповещения = БиблиотекаКартинок.Информация32;
			ТекстОповещения = НСтр("ru = 'Настройка бланка'");
			ПояснениеОповещения = НСтр("ru = 'Бланк %БланкОтчета% установлен основным'");
			ПояснениеОповещения = СтрЗаменить(ПояснениеОповещения, "%БланкОтчета%", Строка(ТекДанные.Ссылка));
			ПоказатьОповещениеПользователя(ТекстОповещения, , ПояснениеОповещения, КартинкаОповещения);
		Иначе
			ТекстСообщения = НСтр("ru = 'Установка бланка %БланкОтчета% основным не удалась'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%БланкОтчета%", Строка(ТекДанные.Ссылка));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
		Элементы.Список.Обновить();
	Иначе
		// Строка не выбрана, ничего не делаем.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБланкЭкземпляраОтчета(Команда)
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		Если Не ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВидОтчета, "ЭтоГруппа") Тогда
			НовоеНаименование = СгенерироватьНаименованиеНовогоБланка(ВидОтчета);
			СтруктураПараметров = Новый Структура;
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("РежимБланка", 0);
			СтруктураПараметров.Вставить("ЗначенияЗаполнения", ПараметрыЗаполнения);
			СтруктураПараметров.Вставить("НаименованиеБланка", НовоеНаименование);
			СтруктрураОтбора = Новый Структура;
			СтруктрураОтбора.Вставить("Владелец", ВидОтчета);
			СтруктураПараметров.Вставить("Отбор", СтруктрураОтбора);
			ОткрытьФорму("Справочник.БланкиОтчетов.Форма.ФормаМакета", СтруктураПараметров, ВладелецФормы); 
		Иначе
			ТекстСообщения = НСтр("ru = 'Выбрана группа отчетов. Операция отменена.'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Требуется выбрать вид отчета. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБланкСводнойТаблицы(Команда)
	
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		Если Не ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВидОтчета, "ЭтоГруппа") Тогда
			НовоеНаименование = СгенерироватьНаименованиеНовогоБланка(ВидОтчета);
			СтруктураПараметров = Новый Структура;
			ПараметрыЗаполнения = Новый Структура;

			СтруктураПараметров.Вставить("ЗначенияЗаполнения", ПараметрыЗаполнения);
			СтруктураПараметров.Вставить("НаименованиеБланка", НовоеНаименование);
			СтруктураПараметров.Вставить("РежимыДоступаКФункциямСводнойТаблицы"
			,ПредопределенноеЗначение("Перечисление.РежимыДоступаКФункциямСводнойТаблицы.РазработкаМакета"));
			
			СтруктрураОтбора = Новый Структура;
			СтруктрураОтбора.Вставить("ВидОтчета", ВидОтчета);
			СтруктураПараметров.Вставить("Отбор", СтруктрураОтбора);
			
			ИмяФормы_  = "Обработка.АналитическийБланкСводнаяТаблица.Форма.ФормаМакетаСводнаяТаблица";
			
			ОткрытьФорму(ИмяФормы_, СтруктураПараметров, ВладелецФормы,Истина); 
		Иначе
			ТекстСообщения = НСтр("ru = 'Выбрана группа отчетов. Операция отменена.'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Требуется выбрать вид отчета. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокЭкземпляров(Команда)
	ТекДанные = Элементы.СписокВидовОтчетов.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("ВидОтчета", ТекДанные.Ссылка);
		ОткрытьФорму("Документ.НастраиваемыйОтчет.ФормаСписка", СтруктураПараметровФормы);
	Иначе
		// Вид отчета не выбран.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСводнуюТаблицуПоВидуОтчета(Команда)
	// Инициализация.
	ТекДанные = Элементы.СписокВидовОтчетов.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		// Получим бланк сводной таблицы для открытия.
		БланкОткрытия = ОбщегоНазначенияСерверУХ.ПолучитьБланкДляОткрытияСводнойТаблицы(ВидОтчета);
		Если ЗначениеЗаполнено(БланкОткрытия) Тогда
			// Бланк получен. Передадим его в сводную таблицу.
						
			СтруктураПараметров = Новый Структура("ВидОтчета,Бланк,РежимыДоступаКФункциямСводнойТаблицы"
			,ВидОтчета
			,БланкОткрытия
			,ПредопределенноеЗначение("Перечисление.РежимыДоступаКФункциямСводнойТаблицы.РаботаСДанными"));
			
			Имя = "Обработка.АналитическийБланкСводнаяТаблица.Форма.ФормаМакетаСводнаяТаблица";
			ОткрытьФорму(Имя, СтруктураПараметров);
	
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось получить бланк отчета сводной таблицы по умолчанию для вида отчета %ВидОтчета%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидОтчета%", Строка(ВидОтчета));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		// Вид отчета не выбран.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМногопериодныйБланкЭкземпляраОтчета(Команда)
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		Если Не ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВидОтчета, "ЭтоГруппа") Тогда
			НовоеНаименование = СгенерироватьНаименованиеНовогоБланка(ВидОтчета);
			СтруктураПараметров = Новый Структура;
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("РежимБланка", 2);
			ПараметрыЗаполнения.Вставить("БланкДляОтображения", Истина);

			СтруктураПараметров.Вставить("ЗначенияЗаполнения", ПараметрыЗаполнения);
			СтруктураПараметров.Вставить("НаименованиеБланка", НовоеНаименование);
		
			СтруктрураОтбора = Новый Структура;
			СтруктрураОтбора.Вставить("Владелец", ВидОтчета);
			СтруктураПараметров.Вставить("Отбор", СтруктрураОтбора);
			Если ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
				ФормаБланка = "ФормаМакетаАналитическийБланк";
			Иначе
				ФормаБланка = "ФормаМакета";
			КонецЕсли;
			ОткрытьФорму("Справочник.БланкиОтчетов.Форма." + ФормаБланка, СтруктураПараметров, ВладелецФормы); 
		Иначе
			ТекстСообщения = НСтр("ru = 'Выбрана группа отчетов. Операция отменена.'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Требуется выбрать вид отчета. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструктор(Команда)
	
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		Если Не ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВидОтчета, "ЭтоГруппа") Тогда
			ИмяФормы_ = "Обработка.НастройкаСтруктурыОтчета.Форма.ФормаКонструктора";
			ОткрытьФорму(ИмяФормы_, Новый Структура("ВидОтчета", ВидОтчета), , ВидОтчета);
		Иначе
			ТекстСообщения = НСтр("ru = 'Необходимо выбрать элемент, а не группу'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьБланки" Тогда
		  Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры
