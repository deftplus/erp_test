
&НаКлиенте
Перем ВыбранныеСтатьи;

&НаКлиенте
Процедура Вперед(Команда)
	
	ИзменитьПорядковыйНомерПерехода(+1);

КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ИзменитьПорядковыйНомерПерехода(-1);

КонецПроцедуры


&НаКлиенте
Процедура ИзменитьПорядковыйНомерПерехода(Итератор)
	
	
	
	ТекущаяСтраница = Элементы.ГруппаПереходы.ТекущаяСтраница.Имя;
	
	Если Итератор>0 Тогда
		 
		Если ТекущаяСтраница = "Шаг1" Тогда
			
			СледующаяСтраница = ВидСтроки;
			
		ИначеЕсли ТекущаяСтраница = "Шаг2_1" Тогда	
			
			СледующаяСтраница = ТекущаяСтраница;
			ПрименитьИзменения();
			
		ИначеЕсли ТекущаяСтраница = "Шаг2_2" Тогда	
			
			СледующаяСтраница = "Шаг3_1";	
				
		ИначеЕсли ТекущаяСтраница = "Шаг3_1" Тогда	
			
			СледующаяСтраница = ТекущаяСтраница;		
			ПрименитьИзменения();
			
		КонецЕсли;	
			
		
	Иначе
		
		
		Если ТекущаяСтраница = "Шаг1" Тогда
			
			СледующаяСтраница = ТекущаяСтраница;
			
		ИначеЕсли ТекущаяСтраница = "Шаг2_1" Тогда	
			
			СледующаяСтраница = "Шаг1";
			
		ИначеЕсли ТекущаяСтраница = "Шаг2_2" Тогда	
			
			СледующаяСтраница = "Шаг1";	
				
		ИначеЕсли ТекущаяСтраница = "Шаг3_1" Тогда	
			
			СледующаяСтраница = "Шаг2_2";		
			
		КонецЕсли;	

		
		
	КонецЕсли;	
	
	Элементы.ГруппаПереходы.ТекущаяСтраница = Элементы[СледующаяСтраница];

	
	УстановитьВидимостьЗакладок();
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьПорядковыйНомерПерехода(Знач Значение)
	
	
	ЭтоПереходДалее = (Значение > ПорядковыйНомерПерехода);
	
	ПорядковыйНомерПерехода = Значение;
	
	Если ПорядковыйНомерПерехода < 0 Тогда
		
		ПорядковыйНомерПерехода = 0;
		
	КонецЕсли;
	
	ПорядковыйНомерПереходаПриИзменении(ЭтоПереходДалее);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядковыйНомерПереходаПриИзменении(Знач ЭтоПереходДалее)
	
	// Обработчики событий переходов
	Если ЭтоПереходДалее Тогда
		
				
	Иначе
		
				
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ВидОтчета = Параметры.Бланк.Владелец;
	ВидСтроки = "Шаг2_1";
	НазначениеСтроки = "БДР";
			
	СтатьиБДДС.Параметры.УстановитьЗначениеПараметра("ВидОтчета",ВидОтчета);
	СтатьиБДР.Параметры.УстановитьЗначениеПараметра("ВидОтчета",ВидОтчета);

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЗакладок()

	
	Элементы.Назад.Доступность = Истина;
	Элементы.Вперед.Заголовок = Нстр("ru = 'Далее >>'");
	
	ТекущаяСтраница = Элементы.ГруппаПереходы.ТекущаяСтраница.Имя;
	 	
	Если ТекущаяСтраница = "Шаг1" Тогда	
		
		 Элементы.Назад.Доступность = Ложь;

	КонецЕсли;	
	
	Если ТекущаяСтраница = "Шаг3_1" ИЛИ ТекущаяСтраница = "Шаг2_1" Тогда	
		
		 Элементы.Вперед.Заголовок = Нстр("ru = 'Применить'");

		 Если  НазначениеСтроки = "БДДС"   Тогда	
			 
			 Элементы.ГруппаДДС.Видимость = Истина;
			 Элементы.ГруппаБДР.Видимость = Ложь;

		 ИначеЕсли	НазначениеСтроки = "БДР"   Тогда 
			 
			 Элементы.ГруппаДДС.Видимость = Ложь;
			 Элементы.ГруппаБДР.Видимость = Истина;

		 КонецЕсли;	

		 
	КонецЕСли;			
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаПереходы.ТекущаяСтраница = Элементы["Шаг1"];
    УстановитьВидимостьЗакладок();
	ВыбранныеСтатьи = Новый Массив;
	СтатьиБДДС.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);
	СтатьиБДР.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиБДДСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СтатьиБДДСВыбрано" Тогда
		СтандартнаяОбработка = Ложь;
		мИндекс = ВыбранныеСтатьи.Найти(ВыбраннаяСтрока);
		Если мИндекс=Неопределено Тогда
			ВыбранныеСтатьи.Добавить(ВыбраннаяСтрока);       
		Иначе    
			ВыбранныеСтатьи.Удалить(мИндекс);
		КонецЕсли;
	КонецЕсли;	
	
	СтатьиБДДС.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);
	
КонецПроцедуры

&НаКлиенте 
Процедура ПрименитьИзменения()
	
	Если ТекущаяСтраница = "Шаг2_1"  Тогда
		
		СоздатьСтрокуИПоказателиПоОписанию();
		
	Иначе	
		
		СоздатьСтрокуИПоказателиПоСписку(ВыбранныеСтатьи);
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура СоздатьСтрокуИПоказателиПоОписанию()
	
	  НоваяСтрока = Справочники.СтрокиОтчетов.СоздатьЭлемент();
	  НоваяСтрока.Владелец = ВидОтчета;
	  НоваяСтрока.Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.ПроизвольныеДанные;
	  НоваяСтрока.Код = КодСтроки;
	  НоваяСтрока.Наименование = НаименованиеСтроки;
	  НоваяСтрока.ГруппаРаскрытия = ГруппаРаскрытия;
	  НоваяСтрока.ВидИтога = ВидИтога;
	  НоваяСтрока.Родитель = ГруппирующаяСтрока;
	  НоваяСтрока.ПорядковыйНомер = ПолучитьВозможныйИндексСтроки(НоваяСтрока.Родитель);

	  
	  НоваяСтрока.Записать();	
	  	  
 КонецПроцедуры	

Процедура СоздатьСтрокуИПоказателиПоСписку(ВыбранныеСтатьи)		
	
	Для Каждого СтатьяБюджета Из ВыбранныеСтатьи Цикл
		
		НоваяСтрока = Справочники.СтрокиОтчетов.СоздатьЭлемент();
		НоваяСтрока.Владелец = ВидОтчета;		
		НоваяСтрока.Наименование = СтатьяБюджета.Наименование;
		//НоваяСтрока.ГруппаРаскрытия = СоздатьГруппуРаскрытия(СтатьяБюджета.ГруппаРаскрытия);
		НоваяСтрока.ВидИтога = Перечисления.ВидыИтоговПоказателя.Сумма;
		Если  НазначениеСтроки = "БДДС"   Тогда	
			
			НоваяСтрока.Предназначение 						= Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств;
			НоваяСтрока.СтатьяДвиженияДенежныхСредств 		= СтатьяБюджета.Ссылка;	 
			НоваяСтрока.Код = "БДДС_"+СтатьяБюджета.Код;

		ИначеЕсли НазначениеСтроки = "БДР" Тогда		
			
			НоваяСтрока.Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов; 	 
			НоваяСтрока.СтатьяДоходовИРасходов = СтатьяБюджета.Ссылка;
			НоваяСтрока.Код = "БДР_"+СтатьяБюджета.Код;

		ИначеЕсли НазначениеСтроки = "БР" Тогда
			
			НоваяСтрока.Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов; 	 
			НоваяСтрока.СтатьяДвиженияРесурсов = СтатьяБюджета.Ссылка;
			НоваяСтрока.Код = "БР_"+СтатьяБюджета.Код;

		КонецЕсли;	
		
		НоваяСтрока.ПриходРасход = СтатьяБюджета.ПриходРасход;
		
		НоваяСтрока.ПорядковыйНомер = ПолучитьВозможныйИндексСтроки(Справочники.СтрокиОтчетов.ПустаяСсылка());
		
		НоваяСтрока.Записать();	

		
	КонецЦикла;
	
	  	  
 КонецПроцедуры	
 
  
 &НаСервере
Функция ПолучитьВозможныйИндексСтроки(Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(СтрокиОтчетов.ПорядковыйНомер) КАК ПорядковыйНомер
	|ИЗ
	|	Справочник.СтрокиОтчетов КАК СтрокиОтчетов
	|ГДЕ
	|	СтрокиОтчетов.Владелец = &Владелец
	|	И (НЕ СтрокиОтчетов.ПометкаУдаления)
	|	И СтрокиОтчетов.Родитель = &Родитель";
				   
	Запрос.УстановитьПараметр("Владелец", ВидОтчета);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	
	ПорядковыйНомер = Запрос.Выполнить().Выгрузить()[0].ПорядковыйНомер;
	
	Если ТипЗнч(ПорядковыйНомер) = Тип("Null") Тогда
		Возврат 1;
	Иначе
		Возврат ПорядковыйНомер + 1;
	КонецЕсли;
				   
КонецФункции

&НаКлиенте
Процедура НазначениеСтрокиПриИзменении(Элемент)
	
	ВыбранныеСтатьи = Новый Массив;
	СтатьиБДДС.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);
	СтатьиБДР.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);

	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиБДРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СтатьиБДРВыбрано" Тогда
		СтандартнаяОбработка = Ложь;
		мИндекс = ВыбранныеСтатьи.Найти(ВыбраннаяСтрока);
		Если мИндекс=Неопределено Тогда
			ВыбранныеСтатьи.Добавить(ВыбраннаяСтрока);       
		Иначе    
			ВыбранныеСтатьи.Удалить(мИндекс);
		КонецЕсли;
	КонецЕсли;	

	СтатьиБДР.Параметры.УстановитьЗначениеПараметра("ВыбранныеСтатьи",ВыбранныеСтатьи);

КонецПроцедуры






