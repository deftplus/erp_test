
&НаСервере
Процедура ЗаполнитьСписокКодов()
	
	СписокКодовКолонок.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КолонкиОтчетов.Код КАК Код
	|ИЗ
	|	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
	|ГДЕ
	|	КолонкиОтчетов.Владелец = &Владелец
	|	И (НЕ КолонкиОтчетов.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Владелец", ВидОтчета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокКодовКолонок.Добавить(СокрЛП(Выборка.Код));
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидОтчета = Параметры.ВидОтчета;
	
	ДлинаКодаКолонки = Метаданные.Справочники.КолонкиОтчетов.ДлинаКода;
	
	ЗаполнитьСписокКодов();
	
	ТабличноеПолеКолонокТаблица = РеквизитФормыВЗначение("ТабличноеПолеКолонок");
	
	Если Параметры.МассивТаблицы <> Неопределено Тогда
		Для Каждого Строка Из Параметры.МассивТаблицы Цикл
			ЗаполнитьЗначенияСвойств(ТабличноеПолеКолонокТаблица.Добавить(), Строка);
		КонецЦикла; 
	КонецЕсли;
	
	Справочники.БланкиОтчетов.УстановитьУникальныеКодыДляТаблицы(ТабличноеПолеКолонокТаблица, СписокКодовКолонок, ДлинаКодаКолонки);
	
	ЗначениеВРеквизитФормы(ТабличноеПолеКолонокТаблица, "ТабличноеПолеКолонок");
	
	ТаблицаЯзыков = ОбщегоНазначенияУХ.ПолучитьЗначениеПеременной("глТаблицаЯзыков");
	
	Если ТаблицаЯзыков.Количество() = 0 Тогда
		
		Элементы.ТабличноеПолеКолонокНаименование1.Видимость = Ложь;
		Элементы.ТабличноеПолеКолонокНаименование2.Видимость = Ложь;
		
	ИначеЕсли ТаблицаЯзыков.Количество() = 1 Тогда
		
		Элементы.ТабличноеПолеКолонокНаименование1.Видимость = Истина;
		Элементы.ТабличноеПолеКолонокНаименование1.Заголовок = ТаблицаЯзыков[0].НаименованиеЯзыка;
		
		Элементы.ТабличноеПолеКолонокНаименование2.Видимость = Ложь;
	
	Иначе
		
		Элементы.ТабличноеПолеКолонокНаименование1.Видимость = Истина;
		Элементы.ТабличноеПолеКолонокНаименование1.Заголовок = ТаблицаЯзыков[0].НаименованиеЯзыка;	
		
		Элементы.ТабличноеПолеКолонокНаименование2.Видимость = Истина;
		Элементы.ТабличноеПолеКолонокНаименование2.Заголовок = ТаблицаЯзыков[1].НаименованиеЯзыка;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СтруктураОтвета = Новый Структура;
	Состояние(Нстр("ru = 'Создаются новые колонки отчета ...'"));
	СоздатьНовыеКолонки(СтруктураОтвета);
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.КолонкиОтчетов"));
	
	Состояние();
	Закрыть(СтруктураОтвета);

КонецПроцедуры

&НаСервере
Процедура СоздатьНовыеКолонки(СтруктураОтвета)
	
	Для Каждого Элемент Из ТабличноеПолеКолонок Цикл
		
		ОбъектКолонкиОтчета = Справочники.КолонкиОтчетов.СоздатьЭлемент();
		
		ОбъектКолонкиОтчета.Владелец        = ВидОтчета;
		ОбъектКолонкиОтчета.ПорядковыйНомер = Элемент.ПорядковыйНомер;
		
		Если ЗначениеЗаполнено(Справочники.КолонкиОтчетов.НайтиПоКоду(СокрЛП(Элемент.Код),,,ВидОтчета)) Тогда
			ОбъектКолонкиОтчета.Код = ОбщегоНазначенияУХ.ПолучитьВозможныйКодСправочника(СокрЛП(Элемент.Код), ДлинаКодаКолонки, "КолонкиОтчетов", ВидОтчета);
		Иначе
		    ОбъектКолонкиОтчета.Код = СокрЛП(Элемент.Код);
		КонецЕсли;
		
		ОбъектКолонкиОтчета.Код             = Элемент.Код;
		ОбъектКолонкиОтчета.Наименование    = Элемент.Наименование;
		ОбъектКолонкиОтчета.Наименование1   = Элемент.Наименование1;
		ОбъектКолонкиОтчета.Наименование2   = Элемент.Наименование2;
		
		ОбъектКолонкиОтчета.ВидКурса        = ВидКурса;
		ОбъектКолонкиОтчета.ТипЗначения     = ТипЗначения;
		
		ОбъектКолонкиОтчета.ПорядковыйНомер = Справочники.ВидыОтчетов.ПолучитьВозможныйНомерКолонки(ВидОтчета,Элемент.ПорядковыйНомер);
		
		Попытка
			ОбъектКолонкиОтчета.Записать();
		Исключение
			
			СтрокаШаблона = Нстр("ru = 'Ошибка при записи колонки - %1: '");
			
			Если ЗначениеЗаполнено(СтрокаШаблона) тогда
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, Элемент.Наименование) + ИнформацияОбОшибке().Описание);
			КонецЕсли;
			
			Продолжить;
		КонецПопытки;

		СтруктураОтвета.Вставить("R" + Формат(Элемент.ВерхЯчейки,"ЧГ=0") + "C" + Формат(Элемент.ЛевоЯчейки,"ЧГ=0"), "Колонка_" + СокрЛП(ОбъектКолонкиОтчета.Код));
	КонецЦикла;
	
КонецПроцедуры
