

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.МассивПоказателей)=Тип("Массив") Тогда
		
		Показатели.ЗагрузитьЗначения(Параметры.МассивПоказателей);
		
	КонецЕсли;
	
	ПолеАналитика = ТаблицаИзменяемыхПараметров.Добавить();
	ПолеАналитика.ПолеБД="Версия.Организация";
	ПолеАналитика.НаименованиеБД="Организация";
	РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(ПолеАналитика, "Справочник.Организации",Справочники.ТипыБазДанных.ТекущаяИБ);
	ПолеАналитика.СпособВычисленияПараметра=Перечисления.СпособыВычисленияПараметровОперандов.ОрганизацияОтчета;
	
	ПолеАналитика=ТаблицаИзменяемыхПараметров.Добавить();
	ПолеАналитика.ПолеБД="Версия.Сценарий";
	ПолеАналитика.НаименованиеБД="Сценарий";
	РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(ПолеАналитика, "Справочник.Сценарии",Справочники.ТипыБазДанных.ТекущаяИБ);
	ПолеАналитика.СпособВычисленияПараметра=Перечисления.СпособыВычисленияПараметровОперандов.СценарийОтчета;
	
	ПолеАналитика=ТаблицаИзменяемыхПараметров.Добавить();
	ПолеАналитика.ПолеБД="Версия.ПериодОтчета";
	ПолеАналитика.НаименованиеБД="Период";
	РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(ПолеАналитика, "Справочник.Периоды",Справочники.ТипыБазДанных.ТекущаяИБ);
	ПолеАналитика.СпособВычисленияПараметра=Перечисления.СпособыВычисленияПараметровОперандов.ПериодОтчета;
	
	ПолеАналитика=ТаблицаИзменяемыхПараметров.Добавить();
	ПолеАналитика.ПолеБД="Версия.Валюта";
	ПолеАналитика.Синоним=Нстр("ru = 'Валюта отчета'");
	РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(ПолеАналитика, "Справочник.Валюты",Справочники.ТипыБазДанных.ТекущаяИБ);
	ПолеАналитика.СпособВычисленияПараметра=Перечисления.СпособыВычисленияПараметровОперандов.ВалютаОтчета;	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	НоваяСтрока                  	= мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления 	= Перечисления.СпособыВычисленияПараметровОперандов.ВалютаОтчета;
	НоваяСтрока.ТипДанных        	= Тип("СправочникСсылка.Валюты");
	НоваяСтрока.НаименованиеАналитики="Валюты";
	НоваяСтрока.ТипРасчета       	= "ПоКоду";
	НоваяСтрока.ИмяИзмерения 	 	= "Версия.Валюта";
	НоваяСтрока.ИзКонтекста 	 	= Истина;
	НоваяСтрока.ИзмерениеРегистра	= Истина;
	НоваяСтрока.ТаблицаАналитики	= "Справочник.Валюты";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ОрганизацияОтчета;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Организации");
	НоваяСтрока.НаименованиеАналитики="Организации";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.Организация";
	НоваяСтрока.ИзКонтекста 	 = Истина;
	НоваяСтрока.ИзмерениеРегистра= Истина;
	НоваяСтрока.ТаблицаАналитики= "Справочник.Организации";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ПериметрОтчета;
	НоваяСтрока.НаименованиеАналитики="Организации";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.Организация";
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Организации");
	НоваяСтрока.ТипРасчета       = "ПоКонсолидирующейОрганизации";
	НоваяСтрока.ИзКонтекста		 = Истина;
	
	НоваяСтрока.ЕстьУточнение    = Истина;
	НоваяСтрока.ТипДанныхУточнение= Тип("СправочникСсылка.Организации");
	
	НоваяСтрока.ТаблицаАналитики= "Справочник.Организации";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.НеПериметрОтчета;
	НоваяСтрока.НаименованиеАналитики="Организации";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.Организация";
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Организации");
	НоваяСтрока.ТипРасчета       = "ПоКонсолидирующейОрганизации";
	НоваяСтрока.ИзКонтекста		 = Истина;
	
	НоваяСтрока.ЕстьУточнение    = Истина;
	НоваяСтрока.ТипДанныхУточнение= Тип("СправочникСсылка.Организации");
	
	НоваяСтрока.ТаблицаАналитики= "Справочник.Организации";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ПериодОтчета;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Периоды");
	НоваяСтрока.НаименованиеАналитики="Периоды";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.ПериодОтчета";
	НоваяСтрока.ИзКонтекста 	 = Истина;
	НоваяСтрока.ИзмерениеРегистра= Истина;
	НоваяСтрока.ТаблицаАналитики= "Справочник.Периоды";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.СценарийОтчета;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Сценарии");
	НоваяСтрока.НаименованиеАналитики="Сценарии";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.Сценарий";
	НоваяСтрока.ИзКонтекста 	 = Истина;
	НоваяСтрока.ИзмерениеРегистра= Истина;
	НоваяСтрока.ТаблицаАналитики= "Справочник.Сценарии";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.СценарийФакта;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Сценарии");
	НоваяСтрока.НаименованиеАналитики="Сценарии";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	НоваяСтрока.ИмяИзмерения 	 = "Версия.Сценарий";
	НоваяСтрока.ИзКонтекста 	 = Истина;
	НоваяСтрока.ИзмерениеРегистра= Истина;
	НоваяСтрока.ТаблицаАналитики = "Справочник.Сценарии";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаПериодаОтчета;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипРасчета       = "ПериодыНачало";
	НоваяСтрока.ИзКонтекста		 = Истина;
		
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаПериодаОтчета;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипРасчета       = "ПериодыКонец";
	НоваяСтрока.ИзКонтекста		 = Истина;
				
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаГода;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипРасчета       = "ГодНачало";
	НоваяСтрока.ИзКонтекста		 = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаГода;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипРасчета       = "ГодКонец";
	НоваяСтрока.ИзКонтекста		 = Истина;
		
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.Булево;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.Строка;
	НоваяСтрока.ТипДанных        = Тип("Строка");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.Число;
	НоваяСтрока.ТипДанных        = Тип("Число");	
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.Дата;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаПериодаОтчетаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипРасчета       = "ПериодыНачалоСдвиг";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаПериодаОтчетаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипРасчета       = "ПериодыКонецСдвиг";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаГодаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипРасчета       = "ГодНачалоСдвиг";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаГодаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("Дата");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипРасчета       = "ГодКонецСдвиг";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
		
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ПериодОтчетаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ИмяИзмерения 	 = "ПериодОтчета";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;	
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.АналогичныйПериодПредыдущегоГода;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ИмяИзмерения 	 = "ПериодОтчета";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.АналогичныйПериодГодаСоСдвигом;
	НоваяСтрока.ТипДанных        = Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ТипДанныхПроверка= Тип("СправочникСсылка.Периоды");
	НоваяСтрока.ИмяИзмерения 	 = "ПериодОтчета";
	НоваяСтрока.ТипРасчета       = "ПоКоду";
	
	НоваяСтрока.ЕстьУточнение    	= Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Число");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();	
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеЗначение;
	НоваяСтрока.ТипДанных        = Тип("Строка");
	НоваяСтрока.ТипРасчета       = "Функция";
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();	
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеСписокЗначений;
	НоваяСтрока.ТипДанных        = Тип("Строка");
	НоваяСтрока.ТипРасчета       = "Функция";
	
	НоваяСтрока.ЕстьУточнение    = Истина;
	НоваяСтрока.ТипДанныхУточнение	= Тип("Строка");
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.ФиксированноеЗначение;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.НеРавноФиксированномуЗначению;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.СписокФиксированныхЗначений;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.СписокПоИерархии;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.НеВСпискеФиксированныхЗначений;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;
	
	НоваяСтрока                  = мСоответствиеИзмеренийСпособовИТипов.Добавить();
	НоваяСтрока.СпособВычисления = Перечисления.СпособыВычисленияПараметровОперандов.НеВСпискеПоИерархии;
	НоваяСтрока.ТипДанных        = Тип("Булево");
	НоваяСтрока.ТипРасчета       = "Простой";
	НоваяСтрока.ЕстьУточнение    = Истина;

	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИзменяемыхПараметровПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элементы.ТаблицаИзменяемыхПараметров.ТекущиеДанные.Изменять=Истина;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИзменяемыхПараметровПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элемент.ТекущийЭлемент.Имя="СпособВычисленияПараметра" Тогда
		
		ТекСписокВыбора = Элементы.ТаблицаИзменяемыхПараметров.ПодчиненныеЭлементы.СпособВычисленияПараметра.СписокВыбора;
		ТекСписокВыбора.Очистить();
		
		Если Элементы.ТаблицаИзменяемыхПараметров.ТекущиеДанные.ТипЗначения.Количество()>0 Тогда 
			
			ДанныеОбъекта=СформироватьДанныеОбъекта();
			ДанныеОбъекта.Вставить("ИмяПараметра",	Элементы.ДеревоПараметровОтбораБД.ТекущиеДанные.ПолеБД);
			ДанныеОбъекта.Вставить("ТипДанныхПоля",	Элементы.ДеревоПараметровОтбораБД.ТекущиеДанные.ТипДанныхПоля);
			ДанныеОбъекта.Вставить("ТипЗначения",	Элементы.ДеревоПараметровОтбораБД.ТекущиеДанные.ТипЗначения);
			
			СписокСпособовВычисления=ПолучитьСписокВозможныхСпособовВычисленияПараметра(ДанныеОбъекта);
			
			Для Каждого СпособОпределения ИЗ СписокСпособовВычисления Цикл
				ТекСписокВыбора.Добавить(СпособОпределения.Значение, СпособОпределения.Представление);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьДанныеОбъекта()
	
	//ДанныеОбъекта=Новый Структура;
	//ДанныеОбъекта.Вставить("РабочийОбъектАдрес",		РабочийОбъектАдрес);
	//ДанныеОбъекта.Вставить("УникальныйИдентификатор",	ЭтаФорма.УникальныйИдентификатор);
	//ДанныеОбъекта.Вставить("ТипБД",						Объект.ТипБД);
	//ДанныеОбъекта.Вставить("ТекСоединениеВИБ",			);
	//ДанныеОбъекта.Вставить("Отказ",						ЛОЖЬ);
	//ДанныеОбъекта.Вставить("Использование77",			Использование77);
	//ДанныеОбъекта.Вставить("ВнутренниеДанные",			ВнутренниеДанные);
	//ДанныеОбъекта.Вставить("СпособПолучения",			Объект.СпособПолучения);
	//ДанныеОбъекта.Вставить("СпособИспользования",		Объект.СпособИспользования);
	
	//Возврат ДанныеОбъекта;
	
КонецФункции // СформироватьСтруктуруСтрокиВИБ()

&НаСервереБезКонтекста
Функция ПолучитьСписокВозможныхСпособовВычисленияПараметра(ДанныеОбъекта)
	
	Возврат РаботаСПолямиАналитикиУХ.ПолучитьСписокВозможныхСпособовВычисленияПараметра(ДанныеОбъекта);
		
КонецФункции // ПолучитьСписокВозможныхСпособовВычисленияПараметра()

