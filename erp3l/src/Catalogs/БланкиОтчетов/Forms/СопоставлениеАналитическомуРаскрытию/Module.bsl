
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидОтчета				= Параметры.ВидОтчета;
	МакетОтчета				= Параметры.ТабличныйДокумент;
	ШиринаКолонкиПоОбласти	= Параметры.ФорматированиеКолонок;
	ВыделеннаяОбласть		= Параметры.Область;
	
	Данные = Новый Структура;
	
	ШириныКолонок = Новый Соответствие();
	НомераКолонок = Новый Соответствие();
	АдресаКолонок = Новый Соответствие();
	
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная);
	
	НомерКолонки = 1;
	Для Каждого Колонка Из ШиринаКолонкиПоОбласти Цикл
		
		Область = ТабличныйДокумент.Область(1, Колонка.Ключ - (ВыделеннаяОбласть.Лево - 1), 1, Колонка.Ключ + Колонка.Значение - 1 - (ВыделеннаяОбласть.Лево - 1));
		Область.Обвести(Линия, Линия, Линия, Линия);
		Область.СодержитЗначение = Истина;
		Если Колонка.Значение > 1 Тогда
			Область.Объединить();
		КонецЕсли;
		Область.ЦветФона = Новый Цвет(255, 255, 192);
		
		НомераКолонок.Вставить(Область.Лево, НомерКолонки);
		ШириныКолонок.Вставить(НомерКолонки, Колонка.Значение);
		АдресаКолонок.Вставить(НомерКолонки, Область.Лево);
		
		НомерКолонки = НомерКолонки + 1;
	КонецЦикла;
	
	ТабличныйДокумент.ФиксацияСверху = 1;
	
	ТабличныйДокумент.Присоединить(МакетОтчета.ПолучитьОбласть(ВыделеннаяОбласть.Верх, ВыделеннаяОбласть.Лево, ВыделеннаяОбласть.Низ, ВыделеннаяОбласть.Право));
	
	Пока ТабличныйДокумент.Области.Количество() Цикл
		ТабличныйДокумент.Области.Получить(0).Имя = "";
	КонецЦикла;
	
	Колонки = Новый Структура;
	Колонки.Вставить("ШириныКолонок", ШириныКолонок);
	Колонки.Вставить("НомераКолонок", НомераКолонок);
	Колонки.Вставить("АдресаКолонок", АдресаКолонок);
	
	Данные.Вставить("Колонки", Колонки);
	
	Данные.Вставить("Аналитики", Новый Соответствие);
	Данные.Вставить("ВыбранныеАналитики", Новый Соответствие);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаОтчетаПриИзменении(Элемент)
	
	ОбновитьАналитики();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	НомерКолонки = Данные.Колонки.НомераКолонок[Область.Лево];
	ШиринаКолонки = Данные.Колонки.ШириныКолонок[НомерКолонки];
	
	Если Область.Верх = 1 И Область.Низ = 1 И ШиринаКолонки = Область.Право - Область.Лево + 1 Тогда
		
		Если СтрокаОтчета.Пустая() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "СтрокаОтчета";
			Сообщение.Текст = Нстр("ru = 'Не выбрана строка отчета'");
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
		СоответствиеЗначений = Новый Соответствие;
		
		Индекс = 0;
		
		ВыбраннаяАналитика = Данные.ВыбранныеАналитики.Получить(НомерКолонки);
		ТекущееЗначение = ?(ВыбраннаяАналитика = Неопределено, 1, Неопределено);
		
		Дерево = Новый Массив;
		
		Для Каждого Аналитика Из Данные.Аналитики Цикл
			
			ЗначениеАналитики = Аналитика.Значение;
			
			Индекс = Индекс + 1;
			СоответствиеЗначений.Вставить(Индекс, Новый Структура("Ключ,ИндексРеквизита", Аналитика.Ключ, Неопределено));
			
			Строки = Новый Массив;
			
			СтруктураСтроки = Новый Структура("Значение,Представление,Строки", Индекс, ЗначениеАналитики.Представление, Строки);
			Дерево.Добавить(СтруктураСтроки);
			
			Если ТекущееЗначение = Неопределено И ВыбраннаяАналитика.КодНомер = СокрП(ЗначениеАналитики.КодНомер) Тогда
				ТекущееЗначение = Индекс;
			КонецЕсли;
			
			Если НЕ ЗначениеАналитики.ЭтоАналитика Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого Реквизит Из ЗначениеАналитики.Реквизиты Цикл
				
				Если ПустаяСтрока(Реквизит.Значение) Тогда
					Продолжить;
				КонецЕсли;
				
				Индекс = Индекс + 1;
				СоответствиеЗначений.Вставить(Индекс, Новый Структура("Ключ,ИндексРеквизита", Аналитика.Ключ, ЗначениеАналитики.Реквизиты.Индекс(Реквизит)));
				
				Строки.Добавить(Новый Структура("Значение,Представление,Строки", Индекс, Реквизит.Представление, Новый Массив));
				
				Если ТекущееЗначение = Неопределено И ВыбраннаяАналитика.Ссылка = ЗначениеАналитики.Ссылка И (ВыбраннаяАналитика.КодНомер = ЗначениеАналитики.КодНомер ИЛИ ВыбраннаяАналитика.КодНомер = СокрП(ЗначениеАналитики.КодНомер) + "_" + Реквизит.Значение) Тогда
					ТекущееЗначение = Индекс;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ВыбранноеЗначение = Неопределено;
		
		ПараметрыФормы = Новый Структура("Дерево,ТекущееЗначение", Дерево, ТекущееЗначение);
		ДопПараметры = Новый Структура("НомерКолонки, Область, СоответствиеЗначений", НомерКолонки, Область, СоответствиеЗначений);
		Оповещение = Новый ОписаниеОповещения("ТабличныйДокументВыборЗавершение", ЭтотОбъект, ДопПараметры);
		ОткрытьФорму("Справочник.БланкиОтчетов.Форма.ФормаВыбораЗначенияИзДерева", 
						ПараметрыФормы, ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    НомерКолонки = ДополнительныеПараметры.НомерКолонки;
    Область = ДополнительныеПараметры.Область;
    СоответствиеЗначений = ДополнительныеПараметры.СоответствиеЗначений;
    
    
    ВыбранноеЗначение = Результат;
    Если НЕ ВыбранноеЗначение = Неопределено Тогда
        
        Аналитика = Данные.Аналитики[СоответствиеЗначений[ВыбранноеЗначение].Ключ];
        
        ОсновноеПредставление = "";
        
        ИндексРеквизита = СоответствиеЗначений[ВыбранноеЗначение].ИндексРеквизита;
        Если НЕ ИндексРеквизита = Неопределено Тогда
            Реквизит = Аналитика.Реквизиты.Получить(ИндексРеквизита);
            Текст = "[" + Аналитика.Представление + "][" + Реквизит.Представление + "]";
            КодНомер = СокрП(Аналитика.КодНомер) + "_" + Реквизит.Значение;
        Иначе
            Текст = Аналитика.Представление;
            КодНомер = СокрП(Аналитика.КодНомер);
            Если Аналитика.ЭтоАналитика Тогда
                ОсновноеПредставление = Аналитика.ОсновноеПредставление;
            КонецЕсли;
        КонецЕсли;
        
        Область.Значение = Текст;
		
		СтруктураАналитики = Новый Структура("ЭтоАналитика,Ссылка,КодНомер,Представление,ВидИтога,ОсновноеПредставление,ТипЗначения", 
											Аналитика.ЭтоАналитика, Аналитика.Ссылка, КодНомер, Текст, Аналитика.ВидИтога, ОсновноеПредставление, Аналитика.ТипЗначения);
		
        Данные.ВыбранныеАналитики.Вставить(НомерКолонки, СтруктураАналитики);
        
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьАналитики()
	
	Аналитики = Новый Соответствие;
	
	Если НЕ СтрокаОтчета.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВидОтчета", ВидОтчета);
		Запрос.УстановитьПараметр("СтрокаОтчета", СтрокаОтчета);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиОтчетов.Ссылка КАК Ссылка,
		|	СтрокиОтчетов.Код КАК Код,
		|	СтрокиОтчетов.ГруппаРаскрытия КАК ГруппаРаскрытия,
		|	СтрокиОтчетов.Наименование КАК Наименование
		|ПОМЕСТИТЬ СтрокаОтчета
		|ИЗ
		|	Справочник.СтрокиОтчетов КАК СтрокиОтчетов
		|ГДЕ
		|	СтрокиОтчетов.Ссылка = &СтрокаОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокаОтчета.Код КАК Код,
		|	СтрокаОтчета.Наименование КАК Наименование
		|ИЗ
		|	СтрокаОтчета КАК СтрокаОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыРаскрытия.ВидАналитики1 КАК ВидАналитики1,
		|	ГруппыРаскрытия.ВидАналитики2 КАК ВидАналитики2,
		|	ГруппыРаскрытия.ВидАналитики3 КАК ВидАналитики3,
		|	ГруппыРаскрытия.ВидАналитики4 КАК ВидАналитики4,
		|	ГруппыРаскрытия.ВидАналитики5 КАК ВидАналитики5,
		|	ГруппыРаскрытия.ВидАналитики6 КАК ВидАналитики6,
		|	ГруппыРаскрытия.ЧислоАналитик КАК ЧислоАналитик,
		|	ГруппыРаскрытия.ВидАналитики1.Наименование КАК ВидАналитики1Наименование,
		|	ГруппыРаскрытия.ВидАналитики2.Наименование КАК ВидАналитики2Наименование,
		|	ГруппыРаскрытия.ВидАналитики3.Наименование КАК ВидАналитики3Наименование,
		|	ГруппыРаскрытия.ВидАналитики4.Наименование КАК ВидАналитики4Наименование,
		|	ГруппыРаскрытия.ВидАналитики5.Наименование КАК ВидАналитики5Наименование,
		|	ГруппыРаскрытия.ВидАналитики6.Наименование КАК ВидАналитики6Наименование,
		|	ГруппыРаскрытия.Код КАК Код
		|ИЗ
		|	СтрокаОтчета КАК СтрокаОтчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРаскрытия КАК ГруппыРаскрытия
		|		ПО СтрокаОтчета.ГруппаРаскрытия = ГруппыРаскрытия.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоказателиОтчетов.Ссылка КАК Ссылка,
		|	ПоказателиОтчетов.Код КАК Код,
		|	ПоказателиОтчетов.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА ПоказателиОтчетов.НеФинансовый
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыИтоговПоказателя.НеРассчитывается)
		|		ИНАЧЕ ПоказателиОтчетов.ВидИтога
		|	КОНЕЦ КАК ВидИтога,
		|	ПоказателиОтчетов.ТипЗначения КАК ТипЗначения
		|ИЗ
		|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
		|ГДЕ
		|	НЕ ПоказателиОтчетов.ПометкаУдаления
		|	И ПоказателиОтчетов.Владелец = &ВидОтчета
		|	И ПоказателиОтчетов.Строка = &СтрокаОтчета";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выбрать();
		Если Выборка.Следующий() Тогда
			
			КодГруппы = СокрП(Выборка.Код);
		
			Для Номер = 1 По Выборка.ЧислоАналитик Цикл
				
				ВидАналитики = Выборка["ВидАналитики" + Номер];
				АналитикаНаименование = Выборка["ВидАналитики" + Номер + "Наименование"];
				
				Попытка // примитивные типы
					Тип = Новый(ТипЗнч(ВидАналитики));
					МД = Тип.Метаданные();
					ОсновноеПредставление = ?(МД.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеСправочника.ВВидеКода, "Код", "Наименование");
				Исключение
					ОсновноеПредставление = "";
				КонецПопытки;
				
				Аналитики.Вставить(ВидАналитики, Новый Структура("ЭтоАналитика,Ссылка,КодНомер,Представление,Реквизиты,ВидИтога,ОсновноеПредставление,ТипЗначения", Истина, ВидАналитики, Номер, АналитикаНаименование, КэшируемыеПроцедурыУХ.ВернутьСписокРеквизитов(ВидАналитики), "", ОсновноеПредставление, Неопределено));
				
			КонецЦикла;
			
		Иначе
			
			КодГруппы = "";
			
		КонецЕсли;
		
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
		Пока Выборка.Следующий() Цикл 
		
			Аналитики.Вставить(Выборка.Ссылка, Новый Структура("ЭтоАналитика,Ссылка,КодНомер,Представление,Реквизиты,ВидИтога,ТипЗначения", Ложь, Выборка.Ссылка, Выборка.Код, Выборка.Наименование, Неопределено, Выборка.ВидИтога, Выборка.ТипЗначения));
			
		КонецЦикла;
		
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество() - 3].Выбрать();
		Выборка.Следующий();
		КодСтроки = СокрП(Выборка.Код);
		НаименованиеСтроки = Выборка.Наименование;
		
	КонецЕсли;
	
	Данные.Аналитики = Аналитики;
	
	ВыбранныеАналитики = Новый Соответствие;
	Для Каждого ВыбраннаяАналитика Из Данные.ВыбранныеАналитики Цикл
		
		Если НЕ ВыбраннаяАналитика.ЭтоАналитика ИЛИ Аналитики.Получить(ВыбраннаяАналитика.Значение.Ссылка) = Неопределено Тогда
			
			ТабличныйДокумент.Область(1, Данные.Колонки.АдресаКолонок.Получить(ВыбраннаяАналитика.Ключ)).Значение = "";
			
		Иначе
			
			ВыбранныеАналитики.Вставить(ВыбраннаяАналитика.Ключ, ВыбраннаяАналитика.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Данные.ВыбранныеАналитики = ВыбранныеАналитики;
	
КонецПроцедуры

&НаКлиенте
Процедура Установить(Команда)
	
	Закрыть(СформироватьРезультатСопоставления());
	
КонецПроцедуры

&НаСервере
Функция СформироватьРезультатСопоставления()
	
	Колонки = Новый Массив;
	
	Если НЕ СтрокаОтчета.Пустая() Тогда
		
		Для Каждого ВыбраннаяАналитика Из Данные.ВыбранныеАналитики Цикл
			
			Аналитика = ВыбраннаяАналитика.Значение;
			
			Если НЕ ПустаяСтрока(Аналитика.ОсновноеПредставление) Тогда
				КодНомер = Аналитика.КодНомер + "_" + Аналитика.ОсновноеПредставление;
			Иначе
				КодНомер = Аналитика.КодНомер;
			КонецЕсли;
			
			Колонки.Добавить(Новый Структура("Адрес,ЭтоАналитика,Код,Представление,ВидИтога,ТипЗначения", Данные.Колонки.АдресаКолонок[ВыбраннаяАналитика.Ключ], Аналитика.ЭтоАналитика, КодНомер, Аналитика.Представление, Аналитика.ВидИтога, Аналитика.ТипЗначения));
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат Новый Структура("КодСтроки,НаименованиеСтроки,КодГруппы,Колонки", КодСтроки, НаименованиеСтроки, КодГруппы, Колонки);	
	
КонецФункции


&НаКлиенте
Процедура ВысотаОбластиЗаголовкаПриИзменении(Элемент)
	
	ВысотаОбластиЗаголовка = ИзменитьВысотуОбласти(, ВысотаОбластиЗаголовка, "Заголовок");
	
КонецПроцедуры

&НаКлиенте
Процедура ВысотаОбластиЗаголовкаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВысотаОбластиЗаголовка = ИзменитьВысотуОбласти(ВысотаОбластиЗаголовка, ВысотаОбластиЗаголовка + Направление, "Заголовок");
	
КонецПроцедуры

&НаКлиенте
Процедура ВысотаОбластиИтоговПриИзменении(Элемент)
	
	ВысотаОбластиИтогов = ИзменитьВысотуОбласти(, ВысотаОбластиИтогов, "Итоги");
	
КонецПроцедуры

&НаКлиенте
Процедура ВысотаОбластиИтоговРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВысотаОбластиИтогов = ИзменитьВысотуОбласти(ВысотаОбластиИтогов, ВысотаОбластиИтогов + Направление, "Итоги");
	
КонецПроцедуры

&НаКлиенте
Функция ИзменитьВысотуОбласти(ТекущаяВысота = Неопределено, НоваяВысота, ИмяОбласти)
	
	Если НоваяВысота <= 0 Тогда
		Элементы.ТабличныйДокумент.ТекущаяОбласть = Неопределено;
		Возврат 0;
	КонецЕсли;
	
	Если ТекущаяВысота = Неопределено Тогда
		Область = ТабличныйДокумент.Области.Найти(ИмяОбласти);
		Если Область = Неопределено Тогда
			Если ИмяОбласти = "Заголовок" Тогда
				Верх = 2;
				Низ = Верх - 1;
			Иначе
				Низ = ТабличныйДокумент.ВысотаТаблицы;
				Верх = Низ + 1;
			КонецЕсли;
		Иначе
			Верх = Область.Верх;
			Низ = Область.Низ;
		КонецЕсли;
		ТекущаяВысота = Низ - Верх + 1;
	ИначеЕсли ТекущаяВысота = 0 Тогда
		Если ИмяОбласти = "Заголовок" Тогда
			Верх = 2;
			Низ = Верх - 1;
		Иначе
			Низ = ТабличныйДокумент.ВысотаТаблицы;
			Верх = Низ + 1;
		КонецЕсли;
	Иначе
		Если ИмяОбласти = "Заголовок" Тогда
			Верх = 2;
			Низ = Верх + ТекущаяВысота - 1;
		Иначе
			Низ = ТабличныйДокумент.ВысотаТаблицы;
			Верх = Низ - ТекущаяВысота + 1;
		КонецЕсли;
	КонецЕсли;
	
	Если НоваяВысота > ТекущаяВысота Тогда
		
		ИспользуемаяВысота = 1;
		Для Индекс = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			Область_ = ТабличныйДокумент.Области.Получить(Индекс);
			ИспользуемаяВысота = ИспользуемаяВысота + Область_.Низ - Область_.Верх + 1;
		КонецЦикла;
		
		Если ИспользуемаяВысота = ТабличныйДокумент.ВысотаТаблицы Тогда
			Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области.Найти(ИмяОбласти);
			Возврат ТекущаяВысота;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяОбласти = "Заголовок" Тогда
		Низ = Верх + НоваяВысота - 1;
	Иначе
		Верх = Низ - НоваяВысота + 1;
	КонецЕсли;
	
	Область = ТабличныйДокумент.Области.Найти(ИмяОбласти);
	Если НЕ Область = Неопределено Тогда
		Область.Имя = "";
	КонецЕсли;
	
	Область = ТабличныйДокумент.Область(Верх, 1, Низ, ТабличныйДокумент.ШиринаТаблицы);
	Область.Имя = ИмяОбласти;
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = Область;
	
	Возврат НоваяВысота;
	
КонецФункции


