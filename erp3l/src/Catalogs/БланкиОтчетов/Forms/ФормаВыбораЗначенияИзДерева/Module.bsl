&НаСервереБезКонтекста
Функция ЗаполнитьСтрокиДерева(КоллекцияИсточник, КоллекцияПриемник, ИскатьЗначение, ВключатьПодчиненные = Истина)
	НашлиСтроку = -1;
	Для Каждого СтрокаИсточник Из КоллекцияИсточник Цикл
		СтрокаПриемник = КоллекцияПриемник.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник);
		Если ИскатьЗначение = СтрокаПриемник.Значение Тогда
			НашлиСтроку = СтрокаПриемник.ПолучитьИдентификатор();
		КонецЕсли;
		Если ВключатьПодчиненные Тогда
			Нашли = ЗаполнитьСтрокиДерева(СтрокаИсточник.Строки, СтрокаПриемник.ПолучитьЭлементы(), ИскатьЗначение, ВключатьПодчиненные);
			Если Нашли > -1 Тогда
				НашлиСтроку = Нашли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат НашлиСтроку;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипДерева = ТипЗнч(Параметры.Дерево);
	
	Строка = -1;
	Если ТипДерева = Тип("Массив") Тогда
		Строка = ЗаполнитьСтрокиДерева(Параметры.Дерево, ДеревоЗначений.ПолучитьЭлементы(), Параметры.ТекущееЗначение);
	ИначеЕсли ТипДерева = Тип("ДеревоЗначений") Тогда
		Строка = ЗаполнитьСтрокиДерева(Параметры.Дерево.Строки, ДеревоЗначений.ПолучитьЭлементы(), Параметры.ТекущееЗначение);
	ИначеЕсли ТипДерева = Тип("ТаблицаЗначений") Тогда
		Строка = ЗаполнитьСтрокиДерева(Параметры.Дерево, ДеревоЗначений.ПолучитьЭлементы(), Параметры.ТекущееЗначение, Ложь);
	КонецЕсли;
	
	Д = ДанныеФормыВЗначение(ДеревоЗначений, Тип("ДеревоЗначений"));
	Д.Строки.Сортировать("Представление");
	ЗначениеВДанныеФормы(Д, ДеревоЗначений);
	
	Если Строка > -1 Тогда
		Элементы.ДеревоЗначений.ТекущаяСтрока = Строка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(Элемент.ТекущиеДанные.Значение);
	
КонецПроцедуры
