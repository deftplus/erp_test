
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресТаблицИнтерфейса = Параметры.АдресТаблицИнтерфейса;
	
	Бланк = Параметры.Бланк;
	
	РазделениеПоПроектам = Бланк.Владелец.РазделениеПоПроектам;
	
	СоздатьДеревоНастроек();
					
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы();
    Для каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.ДеревоНастроек.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
    КонецЦикла;	

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиОповещенийФормы

&НаКлиенте
Процедура УстановкаОтбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;	
		
	ЗначениеНастройки =  СтрЗаменить(Элементы.ДеревоНастроек.ТекущийЭлемент.Имя,"Представление","ЗначениеНастройки");
	Элементы.ДеревоНастроек.ТекущиеДанные[Элементы.ДеревоНастроек.ТекущийЭлемент.Имя] = Результат.СтрокаПредставление;;
	Элементы.ДеревоНастроек.ТекущиеДанные[ЗначениеНастройки] = Результат.СтрокаЗначение;
	
	Элементы.ДеревоНастроек.ТекущиеДанные["АналитикаИзменена"] = Истина;	
	 	
КонецПроцедуры
   
&НаКлиенте
Процедура ВыборИзМенюОкончание(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяПоля 				= ДополнительныеПараметры.ИмяПоля;
	СтруткураРасшифровки 	= ДополнительныеПараметры.СтруткураРасшифровки;
	ТекущийВыбор 			= Результат;
	
	Если ТекущийВыбор = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если  ТекущийВыбор.Значение = "Все элементы" Тогда
		Элементы.ДеревоНастроек.ТекущиеДанные[ИмяПоля] = "Все элементы";
		Поле_ЗначенниеАналитики = СтрЗАменить(ИмяПоля,"Представление","ЗначениеНастройки");
		Элементы.ДеревоНастроек.ТекущиеДанные[Поле_ЗначенниеАналитики] = "";
		УстановитьЗначениеСтруктурыОтбора(СтруткураРасшифровки,ТекущийВыбор.Значение); 
		Элементы.ДеревоНастроек.ТекущиеДанные["АналитикаИзменена"] = Истина;
	ИначеЕсли  ТекущийВыбор.Значение = "Отбор" Тогда	
		Если  НЕ СтруткураРасшифровки=Неопределено  Тогда 	
			УстановкаОтбораЗавершение = Новый ОписаниеОповещения("УстановкаОтбораЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.БланкиОтчетов.Форма.ФормаОтборовАналитик", 
			СтруткураРасшифровки,ЭтаФорма,,,,УстановкаОтбораЗавершение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 	 	
		КонецЕсли;	
	ИначеЕсли  ТекущийВыбор.Значение = "Синхронизировать по функц. направлениям" Тогда		
		Элементы.ДеревоНастроек.ТекущиеДанные[ИмяПоля] = "Синхронизировать по функц. направлениям";
		Поле_ЗначенниеАналитики = СтрЗАменить(ИмяПоля,"Представление","ЗначениеНастройки");
		Элементы.ДеревоНастроек.ТекущиеДанные[Поле_ЗначенниеАналитики] = "";
		УстановитьЗначениеСтруктурыОтбора(СтруткураРасшифровки,ТекущийВыбор.Значение); 
		Элементы.ДеревоНастроек.ТекущиеДанные["АналитикаИзменена"] = Истина;			
	КонецЕсли;
		
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДобавитьНастройкуСостава(Команда)
	
	Если Элементы.ДеревоНастроек.ТекущиеДанные.ИндексКартинки<8 Тогда
		 ТекСтрокаР=Элементы.ДеревоНастроек.ТекущиеДанные
	Иначе	 
		 ТекСтрокаР=Элементы.ДеревоНастроек.ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;

	ДобавитьНастройкуСоставаСервер(ТекСтрокаР.ПолучитьИдентификатор());
	 
 КонецПроцедуры

&НаКлиенте
Процедура УдалитьЭлементНастройкиСостава(Команда)
	
	ДеревоНастроек.ПолучитьЭлементы().Удалить(Элементы.ДеревоНастроек.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройку(Команда)
	
	БуферСкопированныхЭлементов.Очистить();	
	Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
		ВыделеннаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(Стр);
		Если  ВыделеннаяСтрока.Заголовок = "Состав аналитики" Тогда
			БуферСкопированныхЭлементов.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	Элементы.ВставитьНастройку.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьНастройку(Команда)
	
	ЭтоВставкаПоСвойствам = Ложь;
	ЭтоВставкаПострокам = Ложь;
	
	Если  Элементы.ДеревоНастроек.ТекущийЭлемент.Имя = "Заголовок" Тогда //Вставляем строки целиком
		
		Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
			
			ВыделеннаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(Стр);
			Если  ВыделеннаяСтрока.Заголовок = "Состав аналитики" Тогда
				ЭтоВставкаПоСвойствам = Истина;
			Иначе	 
				ЭтоВставкаПострокам = Истина;
			КонецЕсли;	
			
		КонецЦикла;	
		
		Если ЭтоВставкаПоСвойствам И ЭтоВставкаПострокам Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Необходимо выделить однородные элементы настройки для вставки!'"));
			Возврат;
		КонецЕсли;	
		
		Если ЭтоВставкаПострокам Тогда  //Размножаем настройку добавлением к каждой строке из буфера
			
			Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
				
				СтрокаПриемник = ДеревоНастроек.НайтиПоИдентификатору(Стр);
				
				Для Каждого СтрБ Из БуферСкопированныхЭлементов Цикл
					
					
					ДобавитьНастройкуСоставаСервер(Стр,СтрБ.Значение);
					
					
				КонецЦикла;	 	 
				
			КонецЦикла;	
			
		КонецЕсли;	
		
		Если  ЭтоВставкаПоСвойствам Тогда 
			
			Если БуферСкопированныхЭлементов.Количество() = 1 Тогда
				
				Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
					
					СкопироватьНастройкуСоставаСервер(Стр,БуферСкопированныхЭлементов[0].Значение);
					
				КонецЦикла;
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	Иначе //Вставляем свойства текущей ячейки
		
		Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
			
			ВыделеннаяСтрока = ДеревоНастроек.НайтиПоИдентификатору(Стр);
			Если  ВыделеннаяСтрока.Заголовок = "Состав аналитики" Тогда
				ЭтоВставкаПоСвойствам = Истина;
			Иначе	 
				ЭтоВставкаПострокам = Истина;
			КонецЕсли;	
			
		КонецЦикла;	
		
		Если ЭтоВставкаПоСвойствам И ЭтоВставкаПострокам Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Необходимо выделить однородные элементы настройки для вставки!'"));
			Возврат;
		КонецЕсли;	
				
		Если  ЭтоВставкаПоСвойствам Тогда 
			
			Если БуферСкопированныхЭлементов.Количество() = 1 Тогда
				
				Для Каждого Стр Из Элементы.ДеревоНастроек.ВыделенныеСтроки Цикл
					
					СкопироватьНастройкуСоставаСервер(Стр,БуферСкопированныхЭлементов[0].Значение,Элементы.ДеревоНастроек.ТекущийЭлемент.Имя);
					
				КонецЦикла;
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	СохранитьЭлементыНастроек();
	
	ЭлементыДерева = ДеревоНастроек.ПолучитьЭлементы();
	
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.ДеревоНастроек.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
    КонецЦикла;	
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры
 
&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Найти(Поле.Имя,"Представление")>0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Элемент.ТекущиеДанные.ИндексКартинки<8 Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные[Поле.Имя]="Х" Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		СтруткураРасшифровки = РасшифроватьТекущееПредставление(Поле.Имя,Элементы.ДеревоНастроек.ТекущиеДанные.НомерНастройки,Элементы.ДеревоНастроек.ТекущиеДанные.Ссылка);	 
		СтруткураРасшифровки.ТекОтбор_ = Элементы.ДеревоНастроек.ТекущиеДанные[СтрЗаменить(Поле.Имя,"Представление","ЗначениеНастройки")];
		
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить("Все элементы");
		СписокДоступныхЗначений.Добавить("Отбор");
		
		Если СтруткураРасшифровки.НазначениеНастройки = ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовАналитик.Организации") Тогда
			СписокДоступныхЗначений.Добавить("Синхронизировать по функц. направлениям");
		КонецЕсли;	
		
		ПараметрыВыбора = Новый Структура("ИмяПоля,СтруткураРасшифровки",Поле.Имя,СтруткураРасшифровки);
		ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);	
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.ИндексКартинки=8 Тогда	
		 УдалитьЭлементНастройки(Элемент.ТекущиеДанные.Ссылка,Элемент.ТекущиеДанные.НомерНастройки);	
	Иначе 
		Отказ = Истина;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ДобавитьНастройкуСостава(Неопределено);
	Отказ = Истина;
		
КонецПроцедуры
 
 
#КонецОбласти


&НаСервере
Процедура СоздатьДеревоНастроек()
	
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	Запрос =  СводнаяТаблицаУХ.СоздатьТекстЗапросаНастроекСоставаАналитик(СтруктураТаблицИнтерфейса.ДоступныеАналитики,Бланк);
	ТЗданные = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ТЗДанныеЗначенийОтборов = ПолучитьЗначенияОтборов();
	
	СтркиКУдалению = Новый Массив;
	
	ИндексНастройки = 1;
	Для Каждого Стр Из СтруктураТаблицИнтерфейса.ДоступныеАналитики Цикл	
		ТЗданные.Колонки.Добавить("ЗначениеНастройки"+ИндексНастройки);
		ИндексНастройки = ИндексНастройки+1;
	КонецЦикла;	

	
	ОбойтиДЗ(ТЗданные.Строки,СтркиКУдалению,ТЗДанныеЗначенийОтборов);
		
	РеквизитыКДобавлению=Новый Массив;
	РеквизитыКУдалению=Новый Массив;
   	Для Каждого Реквизит Из ПолучитьРеквизиты("ДеревоНастроек") Цикл
		РеквизитыКУдалению.Добавить(Реквизит.Путь + "." + Реквизит.Имя);
	КонецЦикла; 

	Для Каждого Колонка ИЗ ТЗданные.Колонки Цикл	
		МассивДоступныхТипов = Новый Массив;                                                 
		РеквизитыКДобавлению.Добавить(Новый РеквизитФормы(Колонка.Имя,
		Новый ОписаниеТипов(Колонка.ТипЗначения.Типы()),
		"ДеревоНастроек",
		Колонка.Заголовок,
		Ложь));	
	КонецЦикла;
			
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	ИндКолонки =0;
	
    Элементы.ДеревоНастроек.ПутьКДаннымКартинкиСтроки = "ДеревоНастроек.ИндексКартинки";	

	ЗначениеВРеквизитФормы(ТЗданные,"ДеревоНастроек");

	Если Элементы.ДеревоНастроек.ПодчиненныеЭлементы.Количество()=0 Тогда
		Для Каждого Колонка ИЗ ТЗданные.Колонки Цикл	
			ИндКолонки = ИндКолонки+1;
			ЭтаФорма.Элементы.Добавить(Колонка.Имя,Тип("ПолеФормы"),ЭтаФорма.Элементы.ДеревоНастроек);	
			ЭтаФорма.Элементы[Колонка.Имя].ПутьКДанным		= "ДеревоНастроек."+Колонка.Имя;
			ЭтаФорма.Элементы[Колонка.Имя].Вид				= ВидПоляФормы.ПолеВвода;						
			ЭтаФорма.Элементы[Колонка.Имя].ВыбиратьТип		= Ложь;
			ЭтаФорма.Элементы[Колонка.Имя].КнопкаВыбора		= Ложь;
			ЭтаФорма.Элементы[Колонка.Имя].КнопкаОчистки	= Ложь;
			ЭтаФорма.Элементы[Колонка.Имя].ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложениеЭлемента.Право;
			
			ТекКолонка = СтруктураТаблицИнтерфейса.ДоступныеАналитики.НайтиСтроки(Новый Структура("ПредставлениеАналитики",Колонка.Имя));
			Если ТекКолонка.Количество()=1 Тогда
				ЭтаФорма.Элементы[Колонка.Имя].Заголовок = ТекКолонка[0].ИмяАналитики;
				Если ТекКолонка[0].НазначениеАналитики = Перечисления.ПредназначенияЭлементовАналитик.Организации  
					ИЛИ  ТекКолонка[0].НазначениеАналитики = Перечисления.ПредназначенияЭлементовАналитик.Проекты 
					ИЛИ  ТекКолонка[0].НазначениеАналитики = Перечисления.ПредназначенияЭлементовАналитик.Сценарии Тогда 
					ЭтаФорма.Элементы[Колонка.Имя].КартинкаШапки = БиблиотекаКартинок.Зашифрован;	
				КонецЕсли;
				
				Если ТекКолонка[0].ИмяАналитики = "Проекты" Тогда
					Если НЕ РазделениеПоПроектам Тогда
						ЭтаФорма.Элементы[Колонка.Имя].Видимость = Ложь;
					КонецЕсли;	
				КонецЕсли;
				Если ТекКолонка[0].НазначениеАналитики = Перечисления.ПредназначенияЭлементовАналитик.Валюты Тогда	
					ЭтаФорма.Элементы[Колонка.Имя].Видимость = Ложь;
				КонецЕсли;	
			КонецЕсли;
			Если ИндКолонки>СтруктураТаблицИнтерфейса.ДоступныеАналитики.Количество()+1  Тогда
				ЭтаФорма.Элементы[Колонка.Имя].Видимость = Ложь;
			КонецЕсли;
			Если ИндКолонки=1  Тогда
				ЭтаФорма.Элементы[Колонка.Имя].ТолькоПросмотр = Истина;
				ЭтаФорма.Элементы[Колонка.Имя].ЦветФона = Новый Цвет(245,245,245);
				ЭтаФорма.Элементы[Колонка.Имя].ФиксацияВТаблице=ФиксацияВТаблице.Лево;
				
			КонецЕсли;
			
						
			ЭтаФорма.Элементы[Колонка.Имя].КнопкаОткрытия = Ложь;   
		КонецЦикла;
	КонецЕсли;
		
	УсловноеОформление.Элементы.Очистить();
	//Не настроечные элементы подсветим серым
	ЭУО = УсловноеОформление.Элементы.Добавить();
	ЭУО_Оформление = ЭУО.Оформление.Элементы.Найти("ЦветФона");
	ЭУО_Оформление.Значение = Новый Цвет(245,245,245);
	ЭУО_Оформление.Использование = Истина;
	
	ЭУО_Отбор = ЭУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭУО_Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ЭУО_Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоНастроек.ИндексКартинки");
	ЭУО_Отбор.ПравоеЗначение = 8;
	ЭУО_Отбор.Использование = Истина;
	
	Для каждого ПП Из ТЗданные.Колонки Цикл
		
		ЭУО_Поле = ЭУО.Поля.Элементы.Добавить();
		ЭУО_Поле.Использование = Истина;
		ЭУО_Поле.Поле = Новый ПолеКомпоновкиДанных(ПП.Имя);
			
	КонецЦикла; 
	
	
	//Элементы настройки подсветим синим
	ЭУО = УсловноеОформление.Элементы.Добавить();
	ЭУО_Оформление = ЭУО.Оформление.Элементы.Найти("ЦветТекста");
	ЭУО_Оформление.Значение = Новый Цвет(0,0,255);
	ЭУО_Оформление.Использование = Истина;
	
	ЭУО_Отбор = ЭУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭУО_Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭУО_Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоНастроек.ИндексКартинки");
	ЭУО_Отбор.ПравоеЗначение = 8;
	ЭУО_Отбор.Использование = Истина;
	
	Для каждого ПП Из ТЗданные.Колонки Цикл
		
		ЭУО_Поле = ЭУО.Поля.Элементы.Добавить();
		ЭУО_Поле.Использование = Истина;
		ЭУО_Поле.Поле = Новый ПолеКомпоновкиДанных(ПП.Имя);
			
	КонецЦикла; 

	ЭУО = УсловноеОформление.Элементы.Добавить();
	ЭУО_Оформление = ЭУО.Оформление.Элементы.Найти("ЦветТекста");
	ЭУО_Оформление.Значение = Новый Цвет(51,102,255);
	ЭУО_Оформление.Использование = Истина;
	
	ЭУО_Отбор = ЭУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭУО_Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭУО_Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоНастроек.АналитикаИзменена");
	ЭУО_Отбор.ПравоеЗначение = Истина;
	ЭУО_Отбор.Использование = Истина;
	
	Для каждого ПП Из ТЗданные.Колонки Цикл
		
		ЭУО_Поле = ЭУО.Поля.Элементы.Добавить();
		ЭУО_Поле.Использование = Истина;
		ЭУО_Поле.Поле = Новый ПолеКомпоновкиДанных(ПП.Имя);
			
	КонецЦикла; 

	// Если поле недоступно - то подсветим серым
	Для каждого ПП Из ТЗданные.Колонки Цикл

		ЭУО = УсловноеОформление.Элементы.Добавить();
		ЭУО_Оформление = ЭУО.Оформление.Элементы.Найти("ЦветФона");
		ЭУО_Оформление.Значение = Новый Цвет(245,245,245);
		ЭУО_Оформление.Использование = Истина;
		
		ЭУО_Оформление = ЭУО.Оформление.Элементы.Найти("ГоризонтальноеПоложение");
		ЭУО_Оформление.Значение = ГоризонтальноеПоложение.Центр;
		ЭУО_Оформление.Использование = Истина;

		ЭУО_Отбор = ЭУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭУО_Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭУО_Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоНастроек."+ПП.Имя);
		ЭУО_Отбор.ПравоеЗначение = "Х";
		ЭУО_Отбор.Использование = Истина;
		
		
		ЭУО_Поле = ЭУО.Поля.Элементы.Добавить();
		ЭУО_Поле.Использование = Истина;
		ЭУО_Поле.Поле = Новый ПолеКомпоновкиДанных(ПП.Имя);
			
	КонецЦикла; 
	
   КонецПроцедуры	

&НаСервере
Процедура ОбойтиДЗ(СтрокиДЗ,СтркиКУдалению,ТЗДанныеЗначенийОтборов)
	
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	КэшАналитикПоказателей = СтруктураТаблицИнтерфейса.КэшАналитикПоказателей;
	
	Для Каждого СтрокаДерева Из СтрокиДЗ Цикл
				
		Если Строка(СтрокаДерева.Заголовок)="" Тогда
			СтрокаДерева.Заголовок=СтрокаДерева.ПредставлениеПоказателя;
			СтрокаДерева.ИндексКартинки =1;			
			Если СтрокаДерева.Заголовок = Нстр("ru = 'ОБЩИЕ ОТБОРЫ'") Тогда
				СтрокаДерева.ИндексКартинки =0;
			КонецЕсли;
			
		Иначе	
			СтрокаДерева.ИндексКартинки =8;
			СохраненныеЗначения = ТЗДанныеЗначенийОтборов.НайтиСтроки(Новый Структура("НомерНастройки,Ссылка"));			
		КонецЕсли;
		
		Если СтрокаДерева.Заголовок="<...>" Тогда
			СтркиКУдалению.Добавить(СтрокаДерева);
			СтрокиДЗ.Удалить(СтрокаДерева);	
			Продолжить;
		ИначеЕсли СтрокаДерева.Заголовок="Состав аналитики" Тогда 	
			
				
			
			Для Каждого Поле из СтруктураТаблицИнтерфейса.ДоступныеАналитики Цикл
				
				СохраненныеЗначения = ТЗДанныеЗначенийОтборов.НайтиСтроки(Новый Структура("НомерНастройки,Ссылка,Назначение",СтрокаДерева.НомерНастройки,СтрокаДерева.Ссылка,Поле.НазначениеАналитики));
				Если СохраненныеЗначения.Количество()=1 Тогда
					 СтрокаДерева[СтрЗАменить(Поле.ПредставлениеАналитики,"Представление","ЗначениеНастройки")] = СохраненныеЗначения[0].ЗначениеНастройки;
				КонецЕсли;	
				
				//Для редактируемых аналитик  - доступность настройки: ложь
				//Если Поле.Редактируется Тогда
				//	СтрокаДерева[Поле.ПредставлениеАналитики] = "Х";
				//	Продолжить;
				//КонецЕсли;	
		
				Если СтрокаДерева[Поле.ПредставлениеАналитики] = Null Тогда
					СтрокаДерева[Поле.ПредставлениеАналитики] = "Все элементы";
				КонецЕсли;
				
				Если Поле.ГлобальнаяАналитика Тогда
				Иначе	
					НужныйПоказатель = КэшАналитикПоказателей.НайтиСтроки(Новый Структура("Строка",СтрокаДерева.СтрокаОтчета));
					Если НужныйПоказатель.Количество()=0 Тогда
						СтрокаДерева[Поле.ПредставлениеАналитики] = "Х";
					Иначе	
						ЕстьАналитика = Ложь;
						Для Инд = 1 По 6 Цикл
							Если НужныйПоказатель[0]["Аналитика"+Инд] = СокрЛП(Поле.НазначениеАналитикиКод) Тогда   
								ЕстьАналитика = Истина;
								Прервать;
							КонецЕсли;	
						КонецЦикла;	
						Если Поле.КодАналитики ="ДопВалюты" Тогда
							Если ЗначениеЗаполнено(НужныйПоказатель[0]["АналитикаВалюта"]) Тогда
								 ЕстьАналитика = Истина;
							КонецЕсли;	
						КонецЕсли;	
						
						Если НЕ ЕстьАналитика Тогда
							СтрокаДерева[Поле.ПредставлениеАналитики] = "Х";
						КонецЕсли;
						
						
					КонецЕсли;	
				КонецЕсли;		
			КонецЦикла;	

		КонецЕсли;
		
		Если СтрокаДерева.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбойтиДЗ(СтрокаДерева.Строки,СтркиКУдалению,ТЗДанныеЗначенийОтборов);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкуСоставаСервер(ИдентификаторСтроки,Источник=Неопределено)
	
	ТекСтрокаР = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если НЕ Источник=Неопределено Тогда
		 ТекСтрокаИ = ДеревоНастроек.НайтиПоИдентификатору(Источник);
	КонецЕсли;
		
	СтруктураТаблицИнтерфейса =  ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	КэшАналитикПоказателей = СтруктураТаблицИнтерфейса.КэшАналитикПоказателей;
		
	ЭлСтрока=ТекСтрокаР.ПолучитьЭлементы();
	
	Новстр=ЭлСтрока.Добавить();
	Новстр.НомерНастройки=Новый УникальныйИдентификатор;
	Новстр.ИндексКартинки=8;
	Новстр.Заголовок="Состав аналитики";   	
	Новстр.Ссылка = ТекСтрокаР.Ссылка;
	Новстр.СтрокаОтчета = ТекСтрокаР.СтрокаОтчета;
    Новстр.АналитикаИзменена = Истина;
	
	Для Каждого Поле из СтруктураТаблицИнтерфейса.ДоступныеАналитики Цикл
	
		//Для редактируемых аналитик  - доступность настройки ложь
		//Если Поле.Редактируется Тогда
		//	Новстр[Поле.ПредставлениеАналитики] = "Х";
		//    Продолжить;
		//КонецЕсли;	
		
		Если Источник=Неопределено Тогда
			Новстр[Поле.ПредставлениеАналитики] = "Все элементы";
		Иначе
			
			Поле_ЗначенниеАналитики = СтрЗАменить(Поле.ПредставлениеАналитики,"Представление","ЗначениеНастройки");
			Если НЕ ТекСтрокаИ[Поле.ПредставлениеАналитики] = "Х" Тогда 
				Новстр[Поле.ПредставлениеАналитики] =  ТекСтрокаИ[Поле.ПредставлениеАналитики];
				Новстр[Поле_ЗначенниеАналитики] =  ТекСтрокаИ[Поле_ЗначенниеАналитики];
			Иначе
				Новстр[Поле.ПредставлениеАналитики] = "Все элементы";
			КонецЕсли;
			
			СтруткураРасшифровки = РасшифроватьТекущееПредставление(Поле.КодАналитики,ТекСтрокаИ.НомерНастройки,ТекСтрокаИ.Ссылка);
			
		КонецЕсли;
		
		Если НЕ Поле.ГлобальнаяАналитика Тогда
					
			НужныйПоказатель = КэшАналитикПоказателей.НайтиСтроки(Новый Структура("Строка",Новстр.СтрокаОтчета));
			Если НужныйПоказатель.Количество()=0 Тогда
				Новстр[Поле.ПредставлениеАналитики] = "Х";
			Иначе	
				ЕстьАналитика = Ложь;
				Для Инд = 1 По 6 Цикл
					Если НужныйПоказатель[0]["Аналитика"+Инд] = СокрЛП(Поле.НазначениеАналитикиКод) Тогда
						ЕстьАналитика = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;	
				Если Поле.КодАналитики ="ДопВалюты" Тогда
					Если ЗначениеЗаполнено(НужныйПоказатель[0]["АналитикаВалюта"]) Тогда
						ЕстьАналитика = Истина;
					КонецЕсли;	
				КонецЕсли;	
	
				Если НЕ ЕстьАналитика Тогда
					Новстр[Поле.ПредставлениеАналитики] = "Х";
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;		
		
		Если НЕ Источник=Неопределено И НЕ Новстр[Поле.ПредставлениеАналитики] = "Х" Тогда
			УстановитьЗначениеСтруктурыОтбора(СтруткураРасшифровки,Новстр[Поле.ПредставлениеАналитики]);
		КонецЕсли;

		
	КонецЦикла;	
	
	Если Источник = Неопределено Тогда  	
		Элементы.ДеревоНастроек.ТекущаяСтрока=Новстр.ПолучитьИдентификатор();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РасшифроватьТекущееПредставление(ИмяТекущегоЭлемента,НомерНастройки,Показатель)
	
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Тип_",ОпределитьТипТекущейКолонки(ИмяТекущегоЭлемента));
	СтруктураПараметров.Вставить("ТекНастройка",Показатель);
	СтруктураПараметров.Вставить("НомерНастройки",НомерНастройки);
	СтруктураПараметров.Вставить("ТекБланк",Бланк);
	СтруктураПараметров.Вставить("ТекПоле",ИмяТекущегоЭлемента);	
	СтруктураПараметров.Вставить("ВидНастройки", "Отбор");
    СтруктураПараметров.Вставить("ТекОтбор_","");
    СтруктураПараметров.Вставить("НазначениеНастройки",СтруктураТаблицИнтерфейса.ДоступныеАналитики.НайтиСтроки(Новый Структура("ПредставлениеАналитики",ИмяТекущегоЭлемента))[0].НазначениеАналитики);
	Если ИмяТекущегоЭлемента = НСтр("ru = 'Дополнительные валюты'") Тогда
		  СтруктураПараметров.Вставить("НазначениеНастройки",Перечисления.ПредназначенияЭлементовАналитик.АналитикаВалюта);
	КонецЕсли;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкиСоставаАналитикиБланков.ЗначениеНастройки
	               |ИЗ
	               |	РегистрСведений.НастройкиСоставаАналитикиБланков КАК НастройкиСоставаАналитикиБланков
	               |ГДЕ
	               |	НастройкиСоставаАналитикиБланков.БланкОтчета = &БланкОтчета
	               |	И НастройкиСоставаАналитикиБланков.Показатель = &Показатель
	               |	И НастройкиСоставаАналитикиБланков.Назначение = &Назначение
	               |	И НастройкиСоставаАналитикиБланков.НомерНастройки = &НомерНастройки";
	
	Запрос.УстановитьПараметр("БланкОтчета",Бланк);
	Запрос.УстановитьПараметр("Показатель",Показатель);
	Запрос.УстановитьПараметр("Назначение",СтруктураТаблицИнтерфейса.ДоступныеАналитики.НайтиСтроки(Новый Структура("ПредставлениеАналитики",ИмяТекущегоЭлемента))[0].НазначениеАналитики);
	Запрос.УстановитьПараметр("НомерНастройки",НомерНастройки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество()=1 Тогда
		  СтруктураПараметров.Вставить("ТекОтбор_",Результат[0].ЗначениеНастройки);
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Функция ОпределитьТипТекущейКолонки(ИмяТекЭлемента)
	
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	
	ТекущаяАналитика =  СтруктураТаблицИнтерфейса.ДоступныеАналитики.НайтиСтроки(Новый Структура("ПредставлениеАналитики",ИмяТекЭлемента))[0];
	
	
	Если ТекущаяАналитика.КодАналитики = "Сценарии" ИЛИ ТекущаяАналитика.КодАналитики = "Валюты" ИЛИ ТекущаяАналитика.КодАналитики = "Организации" ИЛИ  
		ТекущаяАналитика.КодАналитики = "Проекты" Тогда
		Возврат  Тип("СправочникСсылка."+ТекущаяАналитика.КодАналитики);
	КонецЕсли;	   
	
	Если ИмяТекЭлемента = НСтр("ru = 'Дополнительные валюты'") Тогда
		Возврат  Тип("СправочникСсылка.Валюты");
	КонецЕсли;	   
	
	Возврат ТекущаяАналитика.НазначениеАналитики;
	
КонецФункции

&НаСервере
Процедура УстановитьЗначениеСтруктурыОтбора(СтруткураРасшифровки,Значение)
	
	Если Значение = "Х" Тогда
		 Возврат;
	КонецЕсли;	
	
	
	НастройкиСоставаБланков = РегистрыСведений.НастройкиСоставаАналитикиБланков.СоздатьНаборЗаписей();
	НастройкиСоставаБланков.Отбор.Показатель.Установить(СтруткураРасшифровки.ТекНастройка);
	НастройкиСоставаБланков.Отбор.БланкОтчета.Установить(Бланк);	
	НастройкиСоставаБланков.Прочитать();
	
	ЕстьНастройка = НастройкиСоставаБланков.Количество() > 0;
	НастройкиТаблица  = НастройкиСоставаБланков.Выгрузить();
	НужнаяНастройка = НастройкиТаблица.НайтиСтроки(Новый Структура("НомерНастройки,Назначение",СтруткураРасшифровки.НомерНастройки,СтруткураРасшифровки.НазначениеНастройки));
	Если НужнаяНастройка.Количество()=0 Тогда
		нНастройкиСоставаБланков = НастройкиТаблица.Добавить();	
	Иначе
		нНастройкиСоставаБланков = НужнаяНастройка[0];		
	КонецЕсли;	
		
	нНастройкиСоставаБланков.Показатель = СтруткураРасшифровки.ТекНастройка;
	нНастройкиСоставаБланков.БланкОтчета = Бланк;
	нНастройкиСоставаБланков.Назначение = СтруткураРасшифровки.НазначениеНастройки;
	нНастройкиСоставаБланков.НомерНастройки = СтруткураРасшифровки.НомерНастройки;
	
	нНастройкиСоставаБланков.ПредставлениеНастройки = Значение;
	Если  Значение = "Все элементы" Тогда
		нНастройкиСоставаБланков.ЗначениеНастройки =Значение;
	Иначе
		нНастройкиСоставаБланков.ЗначениеНастройки =СтруткураРасшифровки.ТекОтбор_;
	КонецЕсли;
	
	НастройкиСоставаБланков.Загрузить(НастройкиТаблица);
	
	НастройкиСоставаБланков.Записать(Истина);	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЭлементНастройки(Показатель, НомерНастройки)
	
	УдаленныеСтроки.Добавить(Показатель,НомерНастройки);
		
КонецПроцедуры

&НаСервере
Процедура СохранитьЭлементыНастроек()
	
	//Удаленные строки
	Для Каждого уСтрока Из УдаленныеСтроки Цикл
		
		УдалитьСтрокуАналитики(уСтрока);
		
	КонецЦикла;	
	
	
	//Измененные строки
	ДеревоНастроек_ = РеквизитФормыВЗначение("ДеревоНастроек");
	ИзмененныеСтроки = ДеревоНастроек_.Строки.НайтиСтроки(Новый Структура("АналитикаИзменена",Истина),Истина);
	Для Каждого иСтрока Из ИзмененныеСтроки Цикл
		
		ОбновитьСвойстваСтроки(иСтрока);
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ДеревоНастроек_,"ДеревоНастроек");
	
КонецПроцедуры	

&НаСервере
Процедура УдалитьСтрокуАналитики(СтрокаНастройки)
	
	НастройкиСоставаБланков = РегистрыСВедений.НастройкиСоставаАналитикиБланков.СоздатьНаборЗаписей();
	НастройкиСоставаБланков.Отбор.Показатель.Установить(СтрокаНастройки.Значение);
	НастройкиСоставаБланков.Отбор.БланкОтчета.Установить(Бланк);
	НастройкиСоставаБланков.Отбор.НомерНастройки.Установить(Новый УникальныйИдентификатор(СтрокаНастройки.Представление));
	НастройкиСоставаБланков.Очистить();
	НастройкиСоставаБланков.Записать();
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьСвойстваСтроки(СтрокаНастройки)
	
	СтруктураТаблицИнтерфейса =  ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);

	Для Каждого Поле из СтруктураТаблицИнтерфейса.ДоступныеАналитики Цикл
		
		ЗначениеНастройки =  СтрЗаменить(Поле.ПредставлениеАналитики,"Представление","ЗначениеНастройки");

		Если ЗначениеЗаполнено(СтрокаНастройки[ЗначениеНастройки]) Тогда
			
			НастройкиСоставаБланков = РегистрыСВедений.НастройкиСоставаАналитикиБланков.СоздатьНаборЗаписей();
			НастройкиСоставаБланков.Отбор.Показатель.Установить(СтрокаНастройки.Ссылка);
			НастройкиСоставаБланков.Отбор.БланкОтчета.Установить(Бланк);
			НастройкиСоставаБланков.Отбор.НомерНастройки.Установить(СтрокаНастройки.НомерНастройки);
			НастройкиСоставаБланков.Прочитать();
			ЕстьНастройка = НастройкиСоставаБланков.Количество() > 0;
			НастройкиТаблица  = НастройкиСоставаБланков.Выгрузить();
			НужнаяНастройка = НастройкиТаблица.НайтиСтроки(Новый Структура("НомерНастройки,Назначение",СтрокаНастройки.НомерНастройки,Поле.НазначениеАналитики));
			
			Если НужнаяНастройка.Количество()=0 Тогда
				нНастройкиСоставаБланков = НастройкиТаблица.Добавить();	
			Иначе
				нНастройкиСоставаБланков = НужнаяНастройка[0];		
			КонецЕсли;	
			
			нНастройкиСоставаБланков.Показатель = СтрокаНастройки.Ссылка;
			нНастройкиСоставаБланков.БланкОтчета = Бланк;
			нНастройкиСоставаБланков.Назначение = Поле.НазначениеАналитики;
			нНастройкиСоставаБланков.НомерНастройки = СтрокаНастройки.НомерНастройки;
			нНастройкиСоставаБланков.ПредставлениеНастройки = СтрокаНастройки[Поле.ПредставлениеАналитики];
			нНастройкиСоставаБланков.ЗначениеНастройки = СтрокаНастройки[ЗначениеНастройки];
			
			НастройкиСоставаБланков.Загрузить(НастройкиТаблица);
			
			НастройкиСоставаБланков.Записать(Истина);	
				
		КонецЕсли;
			
	КонецЦикла;
	
	СтрокаНастройки.АналитикаИзменена = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначенияОтборов()
	
	Запрос = Новый Запрос;
	
	ВсеЭлементыТекст = "Все элементы";
	
	Запрос.Текст ="ВЫБРАТЬ
	|	&ПустойПоказатель КАК Ссылка,
	|	""ОБЩИЕ АНАЛИТИКИ"" КАК ПредставлениеПоказателя
	|ПОМЕСТИТЬ ОбщиеАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА НастройкиСоставаАналитикиБланков.ПредставлениеНастройки="""" ТОГДА """ + ВсеЭлементыТекст + """ ИНАЧЕ НастройкиСоставаАналитикиБланков.ПредставлениеНастройки   КОНЕЦ  КАК ПредставлениеНастройки,
	|	НастройкиСоставаАналитикиБланков.ЗначениеНастройки,
	|	НастройкиСоставаАналитикиБланков.НомерНастройки,
	|	НастройкиСоставаАналитикиБланков.Назначение,
	|	НастройкиСтруктурыБланка.ПредставлениеПоказателя КАК ПредставлениеПоказателяКод,
	|	НастройкиСтруктурыБланка.ПредставлениеПоказателя КАК ПредставлениеПоказателя,
	|	НастройкиСтруктурыБланка.Ссылка
	|ИЗ
	|	ОбщиеАналитики КАК НастройкиСтруктурыБланка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСоставаАналитикиБланков КАК НастройкиСоставаАналитикиБланков
	|		ПО (НастройкиСоставаАналитикиБланков.Показатель = НастройкиСтруктурыБланка.Ссылка)
	|			И (НастройкиСоставаАналитикиБланков.БланкОтчета = &БланкОтчета)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА НастройкиСоставаАналитикиБланков.ПредставлениеНастройки="""" ТОГДА """ + ВсеЭлементыТекст + """ ИНАЧЕ  НастройкиСоставаАналитикиБланков.ПредставлениеНастройки  КОНЕЦ  КАК ПредставлениеНастройки,
	|	НастройкиСоставаАналитикиБланков.ЗначениеНастройки,
	|	НастройкиСоставаАналитикиБланков.НомерНастройки,
	|	НастройкиСоставаАналитикиБланков.Назначение,
	|	НастройкиСтруктурыБланка.СтрокаОтчета.Код,
	|	НастройкиСтруктурыБланка.СтрокаОтчета.Наименование,
	|	НастройкиСтруктурыБланка.Ссылка
	|ИЗ
	|	Справочник.НастройкиСтруктурыБланка КАК НастройкиСтруктурыБланка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСоставаАналитикиБланков КАК НастройкиСоставаАналитикиБланков
	|		ПО НастройкиСтруктурыБланка.Ссылка = НастройкиСоставаАналитикиБланков.Показатель
	|			И (НастройкиСтруктурыБланка.Владелец = &БланкОтчета)
	|ГДЕ
	|	НастройкиСтруктурыБланка.Владелец = &БланкОтчета
	|	И НастройкиСтруктурыБланка.ИндексЭлемента = 2";
	
	
	
	
	Запрос.УстановитьПараметр("БланкОтчета",Бланк);			  
	Запрос.УстановитьПараметр("ПустойПоказатель",Справочники.НастройкиСтруктурыБланка.ПустаяСсылка());
	
	Возврат Запрос.Выполнить().Выгрузить();			  
	
КонецФункции	

&НаСервере
Процедура СкопироватьНастройкуСоставаСервер(ИдентификаторСтроки,Источник,Аналитика = Неопределено)
	
	СтруктураТаблицИнтерфейса =  ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	ТекСтрокаР = ДеревоНастроек.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекСтрокаИ = ДеревоНастроек.НайтиПоИдентификатору(Источник);
	ТекСтрокаР.АналитикаИзменена = Истина;
	
	Если  Аналитика = Неопределено Тогда
		
		Для Каждого Поле из СтруктураТаблицИнтерфейса.ДоступныеАналитики Цикл
			
			Поле_ЗначенниеАналитики = СтрЗАменить(Поле.ПредставлениеАналитики,"Представление","ЗначениеНастройки");
			Если НЕ ТекСтрокаИ[Поле.ПредставлениеАналитики] = "Х" Тогда 
				ТекСтрокаР[Поле.ПредставлениеАналитики] =  ТекСтрокаИ[Поле.ПредставлениеАналитики];
				ТекСтрокаР[Поле_ЗначенниеАналитики] =  ТекСтрокаИ[Поле_ЗначенниеАналитики];
			КонецЕсли;
		
		КонецЦикла;
		
	Иначе		
		
		Поле_ЗначенниеАналитики = СтрЗАменить(Аналитика,"Представление","ЗначениеНастройки");
		
		Если НЕ ТекСтрокаИ[Аналитика] = "Х" Тогда 
			ТекСтрокаР[Аналитика] =  ТекСтрокаИ[Аналитика];
			ТекСтрокаР[Поле_ЗначенниеАналитики] =  ТекСтрокаИ[Поле_ЗначенниеАналитики];
		КонецЕсли;
			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьКоВсем(Команда)
	
	Если Элементы.ДеревоНастроек.ВыделенныеСтроки.Количество() = 1 Тогда
		
		СкопироватьНастройку(Команда);
		
		ЭлементыСтрок = ДеревоНастроек.ПолучитьЭлементы();
		
		Для Каждого эСтрока Из ЭлементыСтрок Цикл
			
			СтрНастройки = эСтрока.ПолучитьЭлементы(); 
			
			Для Каждого эНастройки Из СтрНастройки Цикл
				
				Если эНастройки[Элементы.ДеревоНастроек.ТекущийЭлемент.Имя] = "Х" Тогда
					 Продолжить;
				КонецЕсли;
				
				СкопироватьНастройкуСоставаСервер(эНастройки.ПолучитьИдентификатор(),БуферСкопированныхЭлементов[0].Значение,Элементы.ДеревоНастроек.ТекущийЭлемент.Имя);
				
			КонецЦикла;
			
		КонецЦикла;

		БуферСкопированныхЭлементов.Очистить();
		
	Иначе	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Необходимо выделить один элемент настройки состава'"),,, "ДеревоНастроек");		
		
	КонецЕсли;
	
КонецПроцедуры




