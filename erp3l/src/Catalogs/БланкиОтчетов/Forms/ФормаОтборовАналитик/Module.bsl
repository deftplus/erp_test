 
&НаСервере
Перем СоотвествиеАналитикСвод;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 
	Если Параметры.ТекОтбор_="" ИЛИ  Параметры.ТекОтбор_="Не заполнять" ИЛИ Параметры.ТекОтбор_= "Все элементы" Тогда
		НужныйОтбор="";
	Иначе	  
		НужныйОтбор=ЗначениеИзСтрокиВнутр(Параметры.ТекОтбор_); 
	КонецЕсли;	  
	
	Бланк = Параметры.ТекБланк;
	ТекНастройка = Параметры.ТекНастройка;
	ТекПоле = Параметры.ТекПоле;
	НазначениеНастройки = Параметры.НазначениеНастройки;
	НомерНастройки = Параметры.НомерНастройки;
	
	СхемаКомпоновкиДанных=ПолучитьОбщийМакет("МакетНастройкиОтборов");	
	НаборДанных=СхемаКомпоновкиДанных.НаборыДанных[0];
	НужныйТип=Параметры.Тип_;
	Элементы.ОтборСКД.Видимость=Истина;
	
	НовоеПолеНабораДанных=НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных")); 
	НовоеПолеНабораДанных.Заголовок=Строка(НужныйТип);
	НовоеПолеНабораДанных.ПутьКДанным=Строка(НужныйТип);
	НовоеПолеНабораДанных.Поле=Строка(НужныйТип);
	
	Если ТипЗнч(Нужныйтип)=Тип("Тип") Тогда
		МассивТипов=Новый Массив;
		МассивТипов.Добавить(НужныйТип);
		ОписаниеТ= Новый ОписаниеТипов(МассивТипов);
	ИначеЕсли Нужныйтип = Перечисления.ПредназначенияЭлементовАналитик.АналитикаВалюта Тогда	
		ОписаниеТ= Новый ОписаниеТипов("СправочникССылка.Валюты");
	Иначе
		ОписаниеТ= Новый ОписаниеТипов(НужныйТип.ТипЗначения);
	КонецЕсли;
	
	НовоеПолеНабораДанных.ТипЗначения=ОписаниеТ;
	
	//Ограничим выбор произвольного классификатора
	Если ТипЗнч(НужныйТип) = Тип("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные") Тогда
		ПараметрВыбора = НаборДанных.Поля[0].ПараметрыРедактирования.Элементы.Найти("ПараметрыВыбора");
		ПараметрВыбора.Использование = Ложь;	
		НовыйОтбор=ПараметрВыбора.Значение.Добавить();
		НовыйОтбор.Имя = "Отбор.Владелец";
		НовыйОтбор.Значение = НужныйТип;
		ПараметрВыбора.Использование = Истина; 	
	КонецЕсли;	
	
	
	НК=СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	Если НужныйОтбор<>"" и НужныйОтбор<>Неопределено и НужныйОтбор.Элементы.Количество()<>0 Тогда
		
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НК.Отбор,НужныйОтбор);
		
	Иначе
		Нэл=НК.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Нэл.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(НовоеПолеНабораДанных.Поле);		
		Нэл.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Нэл.Использование=Истина;
	КонецЕсли;	  
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	НастройкиКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		
 КонецПроцедуры
 

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ПодготовитьСтруктуруПараметров());
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьСтруктуруПараметров()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("СтрокаПредставление",Строка(НастройкиКомпоновкиДанных.Настройки.Отбор));
	СтруктураПараметров.Вставить("СтрокаЗначение",ЗначениеВСтрокуВнутр(НастройкиКомпоновкиДанных.Настройки.Отбор));
		
	Возврат СтруктураПараметров; 
	
КонецФункции	



 






 
 



