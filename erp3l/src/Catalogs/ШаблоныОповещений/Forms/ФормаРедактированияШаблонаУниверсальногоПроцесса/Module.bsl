
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ШаблонПроцесса = Параметры.ШаблонПроцесса;
	
	ДеревоОтборов_ = РеквизитФормыВЗначение("ДеревоОтборов");
	ДеревоОтборов_=Справочники.ШаблоныУниверсальныхПроцессов.СформироватьДеревоКонтекстаПроцесса(ШаблонПроцесса,ДеревоОтборов_,Новый Структура("Реквизиты,СистемныеПоля"));
	ЗначениеВРеквизитФормы(ДеревоОтборов_,"ДеревоОтборов");	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.
//

&НаКлиенте
Процедура Применить(Команда)
	
	Если ТипШаблона = ПредопределенноеЗначение("Перечисление.ТипыШаблонов.Текстовый") Тогда
		Шаблон = ПолеШаблонаТекст.ПолучитьТекст();
	Иначе
		ПолеШаблонаHTML.ПолучитьHTML(Шаблон, Новый Структура);
	КонецЕсли;
	
	ОповеститьОВыборе(Шаблон);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	//Перем ТекстСообщения;
	//ЗапуститьПроцедуруПроверки(ТекстСообщения);
	//ПоказатьПредупреждение(,ТекстСообщения);
	
КонецПроцедуры



#Область ФункцииРаботыСДеревомКонтескта

&НаКлиенте
Процедура ДеревоОтборовПередРазворачиванием(Элемент, Строка, Отказ)
	
	ПередРазворачиваниемСтрокиДереваПолейОтборов(Элемент, Строка, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередРазворачиваниемСтрокиДереваПолейОтборов(Элемент, Строка, Отказ)
	
	СтрокаРазворота=Элемент.ДанныеСтроки(Строка);
	
	//Если СтрокаРазворота.ТипПоля <> "Параметры"  Тогда
	//	 Возврат;
	//КонецЕсли;
	
	Если СтрокаРазворота.ПолучитьЭлементы().Количество()>0 И (НЕ ПустаяСтрока(СтрокаРазворота.ПолучитьЭлементы()[0].ПолеБД)) Тогда // Уже разворачивали эту строку
		Возврат;
	КонецЕсли;
		
	СтруктураСтрока=СформироватьСтруктуруСтрокиБД(СтрокаРазворота);

	ПередРазворачиваниемСтрокиРеквизитовАналитики(СтруктураСтрока);	
	СтрокаРазворота.ПолучитьЭлементы().Очистить();
	
	Для Каждого СтрокаКДобавлению ИЗ ДеревоОтборовКэш.ПолучитьЭлементы() Цикл
		
		НоваяСтрока=СтрокаРазворота.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКДобавлению);
		
		Если СтрокаКДобавлению.ПолучитьЭлементы().Количество()>0 Тогда
			
			ДобавитьПодчиненныеСтроки(СтрокаКДобавлению.ПолучитьЭлементы(),НоваяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры // ПередРазворачиваниемСтрокиДереваПолейИсточника() 
 
&НаКлиенте
Функция СформироватьСтруктуруСтрокиБД(ДанныеСтрокиАналитики)
	
	СтрокаБД=Новый Структура;
	СтрокаБД.Вставить("СправочникБД",				ДанныеСтрокиАналитики.СправочникБД);
	СтрокаБД.Вставить("ПолеБД",						ДанныеСтрокиАналитики.ПолеБД);
	СтрокаБД.Вставить("ТипЗначения",				ДанныеСтрокиАналитики.ТипЗначения);	
	СтрокаБД.Вставить("ТипДанныхПоля",				ДанныеСтрокиАналитики.ТипДанныхПоля);
	СтрокаБД.Вставить("ТипМетаДанных",				ДанныеСтрокиАналитики.ТипМетаДанных);
	СтрокаБД.Вставить("ПолныйПуть",				    ДанныеСтрокиАналитики.ПолныйПуть);
	
	Возврат СтрокаБД;
	
КонецФункции // СформироватьСтруктуруСтрокиВИБ()

&НаКлиенте
Процедура ДобавитьПодчиненныеСтроки(Строка,ЭлементКоллекции)
	
	Для Каждого СтрокаКДобавлению ИЗ Строка Цикл
		
		НоваяСтрока=ЭлементКоллекции.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКДобавлению);
		
		Если СтрокаКДобавлению.ПолучитьЭлементы().Количество()>0 Тогда
			
			ДобавитьПодчиненныеСтроки(СтрокаКДобавлению.ПолучитьЭлементы(),НоваяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры // ДобавитьПодчиненныеСтроки 

&НаСервере
Процедура ПередРазворачиваниемСтрокиРеквизитовАналитики(СтруктураСтрока) 
	
	Если  СтруктураСтрока.ТипМетаДанных = "Справочник" Тогда
		ОбъектБД = Справочники.СправочникиБД.НайтиПоНаименованию(СтруктураСтрока.СправочникБД,,,Справочники.ТипыБазДанных.ТекущаяИБ);	
	ИначеЕсли СтруктураСтрока.ТипМетаДанных = "Документ" Тогда
		ОбъектБД = Справочники.ДокументыБД.НайтиПоНаименованию(СтруктураСтрока.СправочникБД,,,Справочники.ТипыБазДанных.ТекущаяИБ);		
	КонецЕсли;
	
	Если  ОбъектБД = Неопределено Тогда
	      Возврат;
	КонецЕсли;

	СтрокиКДобавлению = "";
	ДеревоОтборов_ = РеквизитФормыВЗначение("ДеревоОтборовКэш");
	ДеревоОтборов_.Строки.Очистить();
	
			  
	Для Каждого СтрРеквизит ИЗ ОбъектБД.Реквизиты Цикл
			
			СтрокаПоказателей                 	= ДеревоОтборов_.Строки.Добавить();
			СтрокаПоказателей.ПолеБД         	= СтрРеквизит.Имя;
			СтрокаПоказателей.НаименованиеБД 	= СтрРеквизит.Синоним;
			СтрокаПоказателей.Элемент = СтрРеквизит.Синоним;
			СтрокаПоказателей.ПолныйПуть = СтруктураСтрока.ПолныйПуть+"."+СтрРеквизит.Имя;
			СтрокаПоказателей.ИндексКартинки =10;
			
			Если СтрРеквизит.Имя="Ссылка" Тогда
				
				Если ТипЗнч(ОбъектБД)=Тип("СправочникСсылка.ДокументыБД") ИЛИ ТипЗнч(ОбъектБД)=Тип("СправочникСсылка.СправочникиБД") Тогда
					
					РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(СтрокаПоказателей,?(ТипЗнч(ОбъектБД)=Тип("СправочникСсылка.СправочникиБД"),"Справочник","Документ")+"."+ОбъектБД.Наименование,Справочники.ТипыБазДанных.ТекущаяИБ);
					
				КонецЕсли;
				
			Иначе
				
				РаботаСПолямиАналитикиУХ.ЗаполнитьПоляТиповРеквизитовБД(СтрокаПоказателей, СтрРеквизит.ТипДанных,Справочники.ТипыБазДанных.ТекущаяИБ);
				
			КонецЕсли;
			
			Если (СтрокаПоказателей.ТипМетаДанных="Справочник" ИЛИ СтрокаПоказателей.ТипМетаДанных="Документ" ИЛИ СтрокаПоказателей.ТипЗначения.Количество()>1)  Тогда 
				// Добавим строку для дальнейшего раскрытия
				
				НоваяСтрока=СтрокаПоказателей.Строки.Добавить();
				НоваяСтрока.ИндексКартинки =10;
				
			КонецЕсли;
		
		КонецЦикла;	
        ЗначениеВРеквизитФормы(ДеревоОтборов_,"ДеревоОтборовКэш");
		
КонецПроцедуры // ПередРазворачиваниемСтрокиРеквизитовАналитики()

&НаКлиенте
Процедура ДеревоОтборовНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекСтр = Элементы.ДеревоОтборов.ТекущаяСтрока;
	Если НЕ ТекСтр = Неопределено Тогда
		СтрокаОтбора = ДеревоОтборов.НайтиПоИдентификатору(ТекСтр);
		Если СтрокаОтбора.ТипПоля = "Группа" Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	Иначе
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = ("<%"+Строка(СтрокаОтбора.ПолныйПуть)+"%>");

КонецПроцедуры



#КонецОбласти




