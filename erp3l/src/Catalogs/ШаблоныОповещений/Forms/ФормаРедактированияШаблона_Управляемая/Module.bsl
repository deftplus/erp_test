
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТипШаблона", ТипШаблона);
	Если ТипШаблона = Перечисления.ТипыШаблонов.HTML ИЛИ СтрНайти(Параметры.Шаблон, "html") > 0 Тогда
		Если ЗначениеЗаполнено(Параметры.Шаблон) Тогда
			ПолеШаблонаHTML.УстановитьHTML(Параметры.Шаблон, Новый Структура);
		КонецЕсли;
		Элементы.ПанельМакетов.ТекущаяСтраница = Элементы.HTML;
	ИначеЕсли ТипШаблона = Перечисления.ТипыШаблонов.Текстовый ИЛИ ТипЗнч(Параметры.Шаблон) = Тип("Строка") Тогда
		ПолеШаблонаТекст.Очистить();
		ПолеШаблонаТекст.ДобавитьСтроку(Параметры.Шаблон);
		Элементы.ПанельМакетов.ТекущаяСтраница = Элементы.Текстовый;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЭтапПроцесса = неопределено;
	ТипОбъектаОповещения = неопределено;
	ВидОбъектаОповещения = неопределено;
	НазначениеОповещения = неопределено;
	ВидСобытияОповещения = неопределено;
	
	Параметры.Свойство("ЭтапПроцесса", ЭтапПроцесса);
	Параметры.Свойство("ТипОбъектаОповещения", ТипОбъектаОповещения);
	Параметры.Свойство("ВидОбъектаОповещения", ВидОбъектаОповещения);
	Параметры.Свойство("НазначениеОповещения", НазначениеОповещения);
	Параметры.Свойство("ВидСобытияОповещения", ВидСобытияОповещения);
	
	Если Не ЗначениеЗаполнено(ТипОбъектаОповещения) И ЗначениеЗаполнено(ЭтапПроцесса) тогда
		ТипОбъектаОповещения = ЭтапПроцесса.Владелец.ТипОбъектаСогласования;
		
		Если НЕ ЗначениеЗаполнено(ТипОбъектаОповещения) Тогда	
			ТипОбъектаОповещения = Справочники.СправочникиБД.НайтиПоНаименованию("ЭтапыУниверсальныхПроцессов", , , Справочники.ТипыБазДанных.ТекущаяИБ);	
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОбъектаОповещения) И ЗначениеЗаполнено(ЭтапПроцесса) тогда
		ВидОбъектаОповещения = ЭтапПроцесса.Владелец;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НазначениеОповещения) тогда
		НазначениеОповещения = Справочники.КатегорииСобытийОповещений.СобытияВыполненияПроцесса;
	КонецЕсли;
		
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(МодульУправленияОповещениямиУХ.ВернутьОбъектШаблона(ТипОбъектаОповещения, НазначениеОповещения));
		
	Если МетаданныеОбъекта = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МакетСКД = МодульУправленияОповещениямиУХ.ПолучитьСхемуСКДДляПодстановкиВШаблоне(ТипОбъектаОповещения, ВидОбъектаОповещения, НазначениеОповещения, ВидСобытияОповещения);
		
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(МакетСКД, УникальныйИдентификатор)));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.
//
&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядкаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекСтр = Элементы.КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядка.ТекущаяСтрока;
	Если НЕ ТекСтр = Неопределено Тогда
		СтрокаОтбора = КомпоновщикНастроек.Настройки.Порядок.ДоступныеПоляПорядка.ПолучитьОбъектПоИдентификатору(Элементы.КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядка.ТекущаяСтрока);
		Если СтрокаОтбора.Папка Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	Иначе
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = ПолучитьИмяПоляВШаблоне(Строка(СтрокаОтбора.Поле));

КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Если ТипШаблона = ПредопределенноеЗначение("Перечисление.ТипыШаблонов.Текстовый") Тогда
		Шаблон = ПолеШаблонаТекст.ПолучитьТекст();
	Иначе
		ПолеШаблонаHTML.ПолучитьHTML(Шаблон, Новый Структура);
	КонецЕсли;
	
	ОповеститьОВыборе(Шаблон);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	Перем ТекстСообщения;
	ЗапуститьПроцедуруПроверки(ТекстСообщения);
	ПоказатьПредупреждение(,ТекстСообщения);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ.
//

&НаКлиенте
Функция ПолучитьИмяПоляВШаблоне(ИмяПоля)
	
	Возврат "%%" + ИмяПоля + "%%";
	
КонецФункции


&НаСервере
Процедура ЗапуститьПроцедуруПроверки(ТекстСообщения)
	
	Перем ТекстШаблона;
	
	Если ТипШаблона = Перечисления.ТипыШаблонов.HTML Тогда
		ПолеШаблонаHTML.ПолучитьHTML(ТекстШаблона, Новый Структура);
	Иначе
		ТекстШаблона = ПолеШаблонаТекст.ПолучитьТекст();
	КонецЕсли;
	
	УправлениеШаблонамиУХ.ВыполнитьПроверкуШаблона(ТекстШаблона, КомпоновщикНастроек,  ТекстСообщения);
	
КонецПроцедуры
