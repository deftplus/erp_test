//	ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверитьВозможностьЗаписи(Отказ, Сообщать = Ложь, ЗаголовокОшибки = "") Экспорт
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Если Справочники.ШаблоныПроцессов.ЕстьОткрытыеПроцессы(Владелец,Ссылка) Тогда
		
		Если Сообщать Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке("- по шаблону """ + Владелец + """ уже существуют открытые процессы!", Отказ, ЗаголовокОшибки);
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//	ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

Процедура ПроверитьПередЗаписью(Отказ, ЗаголовокОшибки)
	
	ПроверитьВозможностьЗаписи(Отказ, Истина, ЗаголовокОшибки);
	
	Если НЕ ЭтоГруппа И ТипОрганизацийЭтапа = Перечисления.ТипыОрганизационныхЕдиниц.Обычная Тогда
		
		Для Каждого СтрокаПредшественника Из ЭтапыПредшественники Цикл
			Если НЕ СтрокаПредшественника.ЭтапПроцесса.ТипОрганизацийЭтапа = Перечисления.ТипыОрганизационныхЕдиниц.Обычная Тогда
				ОбщегоНазначенияУХ.СообщитьОбОшибке("Этапу с типом организационных единиц ""Обычная"" - Тип этапа-предшественника """ + СтрокаПредшественника.ЭтапПроцесса + """ не соответствует типу организаций этапа!", Отказ, ЗаголовокОшибки);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры 


//	ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокОшибки = "Этап процесса: """ + ЭтотОбъект + """ не может быть записан:";
	
	ПроверитьПередЗаписью(Отказ, ЗаголовокОшибки);
	
	Если НЕ Отказ Тогда
		ОбщегоНазначенияУХ.УстановитьНовыйПорядковыйНомерПриНеобходимости(ЭтотОбъект);
	КонецЕсли; 
	
	//Для Каждого Строка Из ФормируемыеДокументы Цикл
	//	Если ТипЗнч(Строка.ШаблонДокумента) = Тип("СправочникСсылка.ДокументыБД") Тогда
	//		Строка.ДокументБД = Строка.ШаблонДокумента;
	//	Иначе
	//		Строка.ДокументБД = УправлениеДокументамиБДУХ.ПолучитьВидДокументаБДПоШаблону(Строка.ШаблонДокумента);
	//	КонецЕсли;
	//КонецЦикла; 
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПорядковыйНомер = 0;
	
	Соответствие = Новый Соответствие;
	
	Для Каждого СтрокаПараметров Из ОрганизационныеЕдиницыПараметрыОтбора Цикл
		НовоеИмяПараметра = Соответствие.Получить(СтрокаПараметров.Имя);
		Если НовоеИмяПараметра = Неопределено Тогда
			НовоеИмяПараметра = Справочники.УдалитьЭтапыПроцессов.ПолучитьУникальноеИмяПараметраПоУникальномуИмениПараметра(СтрокаПараметров.Имя);
			Соответствие.Вставить(СтрокаПараметров.Имя, НовоеИмяПараметра);
		КонецЕсли;
		СтрокаПараметров.Имя = НовоеИмяПараметра;
	КонецЦикла;
	
	Для Каждого СтрокаОтбора Из ОрганизационныеЕдиницыОтбор Цикл
		Для Каждого КлючЗначение Из Соответствие Цикл
			СтрокаОтбора.ОтборТекстЗапроса = СтрЗаменить(СтрокаОтбора.ОтборТекстЗапроса, "&"+КлючЗначение.Ключ, "&"+КлючЗначение.Значение);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

