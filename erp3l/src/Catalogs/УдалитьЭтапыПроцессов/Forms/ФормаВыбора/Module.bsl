
&НаКлиенте
Процедура ПереместитьВниз(Команда)
	ПереместитьЭлементСправочника(Элементы.Список.ТекущаяСтрока, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	ПереместитьЭлементСправочника(Элементы.Список.ТекущаяСтрока, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементСправочника(ТекущийЭлемент, НаправлениеВверх)
	
	Если НЕ ЗначениеЗаполнено(ТекущийЭлемент) ИЛИ ТекущийЭлемент.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
		
	ПереместитьЭлементСправочникаНаСервере(ТекущийЭлемент, НаправлениеВверх);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереместитьЭлементСправочникаНаСервере(ТекущийЭлемент, НаправлениеВверх)
	
	ИмяРеквизитовРодителя = "Родитель";
	ИмяСправочника = ТекущийЭлемент.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец",        ТекущийЭлемент.Владелец);
	Запрос.УстановитьПараметр("ПорядковыйНомер", ТекущийЭлемент.ПорядковыйНомер);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Справочник.ПорядковыйНомер КАК ПорядковыйНомер,
	|	Справочник.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник."+ ИмяСправочника + " КАК Справочник
	|ГДЕ
	|	Не Справочник.ПометкаУдаления";
	Если Не ТекущийЭлемент.Владелец = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Справочник.Владелец = &Владелец";
	КонецЕсли;
	
	Для каждого КлючИЗначение Из Новый Структура(ИмяРеквизитовРодителя) Цикл
		Запрос.Текст = Запрос.Текст + "
		|И Справочник." + КлючИЗначение.Ключ + " = &" + КлючИЗначение.Ключ;
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, ТекущийЭлемент[КлючИЗначение.Ключ]);
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|	И Справочник.ПорядковыйНомер " + ?(НаправлениеВверх,"<",">") + " &ПорядковыйНомер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядковыйНомер" + ?(НаправлениеВверх," УБЫВ","");
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущийОбъект = ТекущийЭлемент.ПолучитьОбъект();
		Объект        = Выборка.Ссылка.ПолучитьОбъект();
		
		Объект       .ПорядковыйНомер = ТекущийЭлемент.ПорядковыйНомер;
		ТекущийОбъект.ПорядковыйНомер = Выборка       .ПорядковыйНомер;
		
		НачатьТранзакцию();
		Попытка
			ТекущийОбъект.Записать();
			Объект       .Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ОписаниеОшибки());
			ОтменитьТранзакцию();
		КонецПопытки;
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Справочник.ПорядковыйНомер КАК ПорядковыйНомер,
	|	Справочник.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник."+ ИмяСправочника + " КАК Справочник
	|ГДЕ
	|	Не Справочник.ПометкаУдаления";
	Если Не ТекущийЭлемент.Владелец = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И Справочник.Владелец = &Владелец";
	КонецЕсли;
	
	Для каждого КлючИЗначение Из Новый Структура(ИмяРеквизитовРодителя) Цикл
		Запрос.Текст = Запрос.Текст + "
		|И Справочник." + КлючИЗначение.Ключ + " = &" + КлючИЗначение.Ключ;
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядковыйНомер" + ?(НаправлениеВверх," УБЫВ","");
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Если Не Выборка.Следующий() или Выборка.Ссылка = ТекущийЭлемент Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект = ТекущийЭлемент.ПолучитьОбъект();
	ТекущийОбъект.ПорядковыйНомер = Выборка.ПорядковыйНомер + ?(НаправлениеВверх, 1, -1);
	Попытка
		ТекущийОбъект.Записать();
	Исключение
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		
		ШаблонПроцесса=Параметры.Отбор.Владелец;
		Элементы.ШаблонПроцесса.ТолькоПросмотр=Истина;
		
	Иначе
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		|	УправлениеПериодомСценария.ВерсияОрганизационнойСтруктуры.ШаблонПроцесса КАК ШаблонПроцесса
		|ИЗ
		|	Документ.УправлениеПериодомСценария КАК УправлениеПериодомСценария";
		
		ТекстОтбор="";
		
		Если ЗначениеЗаполнено(Параметры.ПериодОтчета) Тогда
			
			ТекстОтбор=ТекстОтбор+" И  УправлениеПериодомСценария.ПериодСценария=&ПериодОтчета";
			Запрос.УстановитьПараметр("ПериодОтчета",Параметры.ПериодОтчета);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Сценарий) Тогда
			
			ТекстОтбор=ТекстОтбор+" И  УправлениеПериодомСценария.Сценарий=&Сценарий";
			Запрос.УстановитьПараметр("Сценарий",Параметры.Сценарий);
			
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОтбор) Тогда
			
			Запрос.Текст=Запрос.Текст+" ГДЕ "+Сред(ТекстОтбор,3);
			
		КонецЕсли;
		
		Запрос.Текст=Запрос.Текст+"
		|
		|УПОРЯДОЧИТЬ ПО
		|	УправлениеПериодомСценария.ВерсияОрганизационнойСтруктуры.МеткаВремени УБЫВ";
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			ШаблонПроцесса=Результат.ШаблонПроцесса;
			УстановитьОтбор("Владелец",ШаблонПроцесса);
			
		КонецЕсли;
		
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Параметры.ТипОрганизацийЭтапа) Тогда
		
		УстановитьОтбор("ТипОрганизацийЭтапа",Параметры.ТипОрганизацийЭтапа);
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор(ИмяПараметра,ЗначениеПараметра)
	
	ПолеВладелец = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	
	ПолеОтбора   = Неопределено;
	Для Каждого Элемент Из Список.Отбор.Элементы Цикл
		Если Элемент.ЛевоеЗначение = ПолеВладелец Тогда
			ПолеОтбора = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолеОтбора = Неопределено Тогда
		
		ПолеОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ПолеОтбора.ЛевоеЗначение = ПолеВладелец;
		
	КонецЕсли;
	
	ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ПолеОтбора.ПравоеЗначение = ЗначениеПараметра;
	ПолеОтбора.Использование  = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПроцессаПриИзменении(Элемент)
	
	УстановитьОтбор("Владелец",ШаблонПроцесса);
	
КонецПроцедуры
