#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаписатьДанныеПроекта(Проект, ЗначенияРеквизитов, Сценарий=Неопределено) Экспорт
	
	Сценарий_ = ?(ЗначениеЗаполнено(Сценарий), Сценарий, Справочники.Сценарии.План);
	
	МенеджерЗаписи = РегистрыСведений.АтрибутыПроектов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Проект = Проект;
	МенеджерЗаписи.Сценарий = Сценарий_;
	
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Проект = Проект;
		МенеджерЗаписи.Сценарий = Сценарий_;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ЗначенияРеквизитов);
		
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

Функция АтрибутыПроекта(Проект, Сценарий=Неопределено, ИменаАтрибутов="") Экспорт
	
	Сценарий_ = ?(ЗначениеЗаполнено(Сценарий), Сценарий, Справочники.Сценарии.План);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АтрибутыПроектов.*
		|ИЗ
		|	РегистрСведений.АтрибутыПроектов КАК АтрибутыПроектов
		|ГДЕ
		|	АтрибутыПроектов.Проект = &Проект
		|	И АтрибутыПроектов.Сценарий = &Сценарий";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	ТЗАтрибутов = Запрос.Выполнить().Выгрузить();
	
	Если ПустаяСтрока(ИменаАтрибутов) Тогда
		СтрокаРеквизитов = "";
		Для Каждого Колонка_ Из ТЗАтрибутов.Колонки Цикл
			СтрокаРеквизитов = СтрокаРеквизитов + Колонка_.Имя + ",";
		КонецЦикла;
		Если НЕ ПустаяСтрока(СтрокаРеквизитов) Тогда
			СтрокаРеквизитов = Лев(СтрокаРеквизитов, СтрДлина(СтрокаРеквизитов)-1);
		КонецЕсли;
		
	Иначе
		СтрокаРеквизитов = ИменаАтрибутов;
	КонецЕсли;
	
	Атрибуты = Новый Структура(СтрокаРеквизитов);
	
	Если ТЗАтрибутов.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Атрибуты, ТЗАтрибутов[0]);
	КонецЕсли;
	
	Возврат Атрибуты;
	
КонецФункции

// Читает Стадию Этапа. Не предназначена для пакетной обработки!
//
Функция СтадияЭтапа(ЭтапПроекта) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтадииПроектов.Стадия
		|ИЗ
		|	РегистрСведений.СтадииПроектов КАК СтадииПроектов
		|ГДЕ
		|	СтадииПроектов.Этап = &Этап
		|	И НЕ СтадииПроектов.Этап.Проект";
	
	Запрос.УстановитьПараметр("Этап", ЭтапПроекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Стадия;
	КонецЕсли;
	
	Возврат Справочники.СтадииПроектов.ПустаяСсылка();
КонецФункции

// Если Этап - это проект (Этап.Проект), или Стадия не указана, то удаляем запись о стадии.
// Иначе записываем данные в регистр СтадииПроектов.
//
Процедура ЗаписатьСтадиюЭтапа(ЭтапПроекта, Стадия) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭтапПроекта) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтапПроекта.Проект ИЛИ НЕ ЗначениеЗаполнено(Стадия) Тогда
		// Удалим запись из регистра
		НаборЗаписей = РегистрыСведений.СтадииПроектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Этап.Установить(ЭтапПроекта);
		НаборЗаписей.Записать();
		
	Иначе
		МенеджерЗаписи = РегистрыСведений.СтадииПроектов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Этап = ЭтапПроекта;
		МенеджерЗаписи.Стадия = Стадия;
		МенеджерЗаписи.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли