#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РеструктурироватьПериоды(Команда)
	СтруктураПараметров = Новый Структура;
	ТекстВопроса = НСтр("ru = 'Иерархия всех имеющихся элементов справочника Периоды будет автоматически
                         | перестроена на основе их периодичности и даты начала. Например, если в справочнике
                         | на первом уровне иерархии создано три элемента: Январь 2015 года, I квартал 2015 года
                         | и 2015 год, то январь будет подчинен первому кварталу, а тот, в свою очередь,
                         | войдет в 2015 год.'");
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПодтверждениеРеструктруктуаризацииПериодов", ЭтаФорма, СтруктураПараметров);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПериод(Команда)
	
	Если ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда
		ОткрытьФорму("Справочник.Периоды.Форма.ФормаЗаполненияПериодовУправляемая", Новый Структура("ПериодРодитель", Элементы.Список.ТекущаяСтрока), ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодтверждениеРеструктруктуаризацииПериодов(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		Вн_РеструктурироватьПериоды();      
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
		ТекстОповещения = НСтр("ru = 'Реструктуризация'");
		ПояснениеОповещения = НСтр("ru = 'Реструктуризация периодов завершена'");
		ПоказатьОповещениеПользователя(ТекстОповещения, , ПояснениеОповещения, КартинкаОповещения);
		Элементы.Список.Обновить();
    Иначе       
		// Пользователь отказался.
	КонецЕсли;
КонецПроцедуры		// ПодтверждениеЗаписиЛимитаЗавершение()

&НаСервере
Процедура Вн_РеструктурироватьПериоды()
	
	Справочники.Периоды.РеструктурироватьПериоды();
	
КонецПроцедуры

#КонецОбласти
