
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

// Процедура - обработчик события объекта "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		Возврат; // отказ
	ИначеЕсли НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Возврат; // отказ
	КонецЕсли;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоГода(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
		ЭтотОбъект.Код = Лев(Наименование, 4);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.ДевятьМесяцев Тогда
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,   НачалоГода(ДатаНачала));
		НовоеНаименование = НСтр("ru = 'Девять месяцев %ДатаНачала%'");
		НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		Если ДатаНачала < ДобавитьМесяц(НачалоГода(ДатаНачала), 6) Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала, НачалоГода(ДатаНачала));
			НовоеНаименование = НСтр("ru = '1 полугодие %ДатаНачала%'");
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		Иначе 
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала, ДобавитьМесяц(НачалоГода(ДатаНачала), 6));
			НовоеНаименование = НСтр("ru = '2 полугодие %ДатаНачала%'");
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоКвартала(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоМесяца(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	ИначеЕсли Периодичность = Перечисления.Периодичность.Декада Тогда
		
		Если День(ДатаНачала) < 10 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоМесяца(ДатаНачала));
			НовоеНаименование = НСтр("ru = '1 декада. %ДатаНачала%'");
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		ИначеЕсли День(ДатаНачала) < 20 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    ОбщегоНазначенияУХ.ДобавитьДень(НачалоМесяца(ДатаНачала), 10));
			НовоеНаименование = НСтр("ru = '2 декада. %ДатаНачала%'");
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		Иначе 
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    ОбщегоНазначенияУХ.ДобавитьДень(НачалоМесяца(ДатаНачала), 20));
			НовоеНаименование = НСтр("ru = '3 декада. %ДатаНачала%'");
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		
		Если День(ДатаНачала) < 7 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    ?(День(НачалоНедели(ДатаНачала))>День(ДатаНачала),НачалоМесяца(ДатаНачала),НачалоНедели(ДатаНачала)));
			НовоеНаименование = НСтр("ru = '%НомерНедели% неделя. %ДатаНачала%'");
			Если ОбщегоНазначенияУХ.НачалоНеделиПоМесяцу(ДатаНачала)=НачалоМесяца(ДатаНачала) Тогда
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '1'"));
			Иначе
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '2'"));
			КонецЕсли;
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		ИначеЕсли День(ДатаНачала) < 14 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			НовоеНаименование = НСтр("ru = '%НомерНедели% неделя. %ДатаНачала%'");
			Если ОбщегоНазначенияУХ.НачалоНеделиПоМесяцу(ОбщегоНазначенияУХ.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-1)) <= НачалоМесяца(ДатаНачала) Тогда
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '2'"));
			Иначе
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '3'"));
			КонецЕсли;
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		ИначеЕсли День(ДатаНачала) < 21 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			НовоеНаименование = НСтр("ru = '%НомерНедели% неделя. %ДатаНачала%'");
			Если ОбщегоНазначенияУХ.НачалоНеделиПоМесяцу(ОбщегоНазначенияУХ.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-2)) <= НачалоМесяца(ДатаНачала) Тогда
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '3'"));
			Иначе
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '4'"));
			КонецЕсли;
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		ИначеЕсли День(ДатаНачала) < 28 Тогда
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			НовоеНаименование = НСтр("ru = '%НомерНедели% неделя. %ДатаНачала%'");
			Если ОбщегоНазначенияУХ.НачалоНеделиПоМесяцу(ОбщегоНазначенияУХ.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-3))<=НачалоМесяца(ДатаНачала) Тогда
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '4'"));
			Иначе
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '5'"));
			КонецЕсли;
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		Иначе
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			НовоеНаименование = НСтр("ru = '%НомерНедели% неделя. %ДатаНачала%'");
			Если ОбщегоНазначенияУХ.НачалоНеделиПоМесяцу(ОбщегоНазначенияУХ.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-4))<=НачалоМесяца(ДатаНачала) Тогда
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '5'"));
			Иначе
				НовоеНаименование = СтрЗаменить(НовоеНаименование, "%НомерНедели%", НСтр("ru = '6'"));
			КонецЕсли;
			НовоеНаименование = СтрЗаменить(НовоеНаименование, "%ДатаНачала%", Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
			ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, НовоеНаименование);
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
	
	Иначе
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		ОбщегоНазначенияУХ.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события объекта "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка ИЛИ ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Произвольный Тогда
		Заполнить(Неопределено);
	КонецЕсли; 
	                
	ШапкаОшибки = СтрШаблон(Нстр("ru = 'Период ""%1"" не может быть записан:'"), ЭтотОбъект);
	
	Если (НЕ ЗначениеЗаполнено(Периодичность)) И (НЕ Произвольный) Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = '- Периодичность не задана!'"), Отказ, ШапкаОшибки); 
	КонецЕсли;
	
	Если ДатаНачала = '00010101' Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = '- Не заполнен реквизит ""Дата начала""!'"), Отказ, ШапкаОшибки); 
	КонецЕсли;
	
	Если ДатаОкончания = '00010101' Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = '- Не заполнен реквизит ""Дата окончания""!'"), Отказ, ШапкаОшибки); 
	КонецЕсли;
	
	Попытка
		Если  Периодичность <> Перечисления.Периодичность.Год Тогда
			СтрокаГод = ПредставлениеПериода(НачалоГода(ДатаНачала), КонецГода(ДатаОкончания));
			КраткоеНаименование = СокрЛП(СтрЗаменить(Наименование,СтрокаГод,""));
		Иначе	
			КраткоеНаименование = Наименование;
		КонецЕсли;
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	Периоды.Ссылка КАК Ссылка,
	               |	РАЗНОСТЬДАТ(Периоды.ДатаНачала, Периоды.ДатаОкончания, ДЕНЬ) КАК РазностьДат
	               |ИЗ
	               |	Справочник.Периоды КАК Периоды
	               |ГДЕ
	               |	НЕ Периоды.Произвольный
	               |	И НЕ Периоды.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.ДевятьМесяцев)
	               |	И (Периоды.ДатаНачала <= &ДатаНачала
	               |				И Периоды.ДатаОкончания > &ДатаОкончания
	               |			ИЛИ Периоды.ДатаНачала < &ДатаНачала
	               |				И Периоды.ДатаОкончания >= &ДатаОкончания)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РазностьДат";
	
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда // Есть вышестоящий период
		Родитель = Результат.Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Родитель) и (ДатаНачала < Родитель.ДатаНачала или ДатаОкончания > Родитель.ДатаОкончания) Тогда
		
		СтрокаШаблона = Нстр("ru = '- интервал ""%1"" выходит за пределы интервала - родителя ""%2""!'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда
			ТекстСообщения = СтрШаблон(СтрокаШаблона, Наименование, Родитель);
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, Отказ, ШапкаОшибки);
		КонецЕсли;
		
		Отказ = Истина;
		
	КонецЕсли;
	
	// Проверим существование периода с совпадающим наименованием.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	Периоды.Ссылка КАК Ссылка,
	               |	Периоды.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.Периоды КАК Периоды
	               |ГДЕ
	               |	Периоды.Наименование = &Наименование
	               |	И Периоды.Ссылка <> &Ссылка
	               |	И НЕ Периоды.ПометкаУдаления
	               |	И Периоды.Произвольный = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'Период с наименованием %Наименование% уже существует. Запись отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", Строка(Наименование));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Отказ = Истина;
	КонецЦикла;

	Если НЕ Произвольный Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Периоды.Ссылка КАК Ссылка,
		|	Периоды.ДатаНачала КАК ДатаНачала,
		|	Периоды.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Справочник.Периоды КАК Периоды
		|ГДЕ
		|	Периоды.Ссылка <> &Ссылка
		|	И Периоды.Периодичность = &Периодичность
		|	И (Периоды.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
		|			ИЛИ Периоды.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|	И Периоды.Произвольный = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("Ссылка",        Ссылка);
		Запрос.УстановитьПараметр("Периодичность", Периодичность);
		Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаШаблона = Нстр("ru = '- интервал ""%1"" пересекается с существующим периодом ""%2""!'");
			
			Если Не ПустаяСтрока(СтрокаШаблона) тогда
				ТекстСообщения = СтрШаблон(СтрокаШаблона, Наименование, Выборка.Ссылка);
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, Отказ, ШапкаОшибки);
			КонецЕсли;
			
			Отказ = Истина;
 
		КонецЦикла;
		
	КонецЕсли;	
		
КонецПроцедуры

// Процедура - обработчик события объекта "ПриЗаписи".
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ШапкаОшибки = НСтр("ru = 'Период ""%Объект%"" не может быть записан:'");
	ШапкаОшибки = СтрЗаменить(ШапкаОшибки, "%Объект%", Строка(ЭтотОбъект));
		
    Запрос = Новый Запрос("ВЫБРАТЬ
                          |	Периоды.Ссылка КАК Ссылка
                          |ИЗ
                          |	Справочник.Периоды КАК Периоды
                          |ГДЕ
                          |	Периоды.Родитель = &Родитель
                          |	И Периоды.Произвольный <> &Произвольный");
	
    Запрос.УстановитьПараметр("Родитель", Ссылка);
	Запрос.УстановитьПараметр("Произвольный", Произвольный);
    
    Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
				
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Произвольный = Произвольный;
		
		Попытка
			Объект.Записать();
		Исключение
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ОписаниеОшибки(), Отказ, ШапкаОшибки);
			Возврат;
		КонецПопытки; 
		
	КонецЦикла;
	
КонецПроцедуры
