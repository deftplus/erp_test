
#Область ОбработкаОсновныхСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьСписокВерсий();
	
	УстановитьОформлениеФормы();
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура ОбновитьОписание(Команда)
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Укажите наименование ЭТП.'");
		Сообщение.Поле = "Наименование";
		Сообщение.Сообщить();
		Возврат;
	КонеЦЕсли;
	ОбновитьОписаниеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВерсияОбработкиПриИзменении(Элемент)
	ОтборВерсии = Новый Структура("ВерсияОбработки", Объект.ВерсияОбработки);
	мВерсии = Объект.ВерсииОбработки.НайтиСтроки(ОтборВерсии);
	Если мВерсии.Количество() = 0 Тогда
		Объект.ИмяОбработки = "";
		Возврат;
	КонецЕсли;
	
	Объект.ИмяОбработки = мВерсии[0].ИмяОбработки;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбработку(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Сохраните описание ЭТП перед тем как добавлять обработки.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ДопПараметры = Новый Структура("ЭТП", Объект.Ссылка);
	ОписаниеОповещенияОВыбореДопОбработки = Новый ОписаниеОповещения("ОбрботкаВыбораДопОбработки", ЭтаФорма, ДопПараметры);
	ТекстОбработки = НСтр("ru = 'Выбор доп. обработки интеграции с %Наименование%'");
	ТекстОбработки = СтрЗаменить(ТекстОбработки, "%Наименование%", Строка(Объект.Наименование));
	ПоказатьВводЗначения(ОписаниеОповещенияОВыбореДопОбработки, , ТекстОбработки, Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки"));
КонецПроцедуры

&НаКлиенте
Процедура ВерсииОбработкиНеИспользуетсяПриИзменении(Элемент)
	ТекДанные = Элементы.ВерсииОбработки.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонеЦЕсли;
	флУдалить = ТекДанные.НеИспользуется;
	ИскомаяВерсия = ТекДанные.ВерсияОбработки;
	ЭлементДляИзменения = Неопределено;
	
	// Удалим или добавим в список выбора текущей версии
	Для Каждого Эл_ Из Элементы.ВерсияОбработки.СписокВыбора Цикл
		Если ИскомаяВерсия = Эл_.Значение Тогда
			ЭлементДляИзменения = Эл_;
			
			Если флУдалить Тогда
				Элементы.ВерсияОбработки.СписокВыбора.Удалить(Эл_);
			КонецЕсли;
			
			Прервать;
		КонеЦЕсли;
	КонецЦикла;
	
	Если НЕ флУдалить И ЭлементДляИзменения = Неопределено Тогда
		Элементы.ВерсияОбработки.СписокВыбора.Добавить(ИскомаяВерсия);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВерсииОбработкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиенте
Процедура ОбрботкаВыбораДопОбработки(ВыбраннаяОбработка, ДопПараметры) Экспорт
	Если НЕ ЗначениеЗаполнено(ВыбраннаяОбработка) Тогда
        Возврат;
	КонецЕсли;
	
	ОбрботкаВыбораДопОбработкиНаСервере(ВыбраннаяОбработка);
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервере
Процедура ОбновитьСписокВерсий()
	Элементы.ВерсияОбработки.СписокВыбора.Очистить();
	Для Каждого СтрокаВерсии Из Объект.ВерсииОбработки Цикл
		Если СтрокаВерсии.НеИспользуется Тогда
			Продолжить;
		КонецЕсли;
		Элементы.ВерсияОбработки.СписокВыбора.Добавить(СтрокаВерсии.ВерсияОбработки);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеНаСервере()
	
	
	ОтборВерсии = Новый Структура("ВерсияОбработки", 0);
	ТЗЭТП = ИнтеграцияЦУЗсЭТПСерверУХ.ПолучитьОписанияОбработокИнтеграцииСЭТП(Объект.Наименование);
	
	МаксВерсия = Объект.ВерсияОбработки;
	Если ТЗЭТП.Количество() > 0 Тогда
		Для Каждого ОбработкаЭТП Из ТЗЭТП Цикл
			ОтборВерсии.ВерсияОбработки = ОбработкаЭТП.ВерсияОбработки;
			мВерсии = Объект.ВерсииОбработки.НайтиСтроки(ОтборВерсии);
			Если мВерсии.Количество() = 0 Тогда
				НоваяСтрока = Объект.ВерсииОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбработкаЭТП);
				НоваяСтрока.ЭтоДопОбработка = Истина;
			КонецЕсли;
			
			Если МаксВерсия < ОбработкаЭТП.ВерсияОбработки Тогда
				МаксВерсия = ОбработкаЭТП.ВерсияОбработки
			КонецЕсли;
			
			Если  ОбработкаЭТП.ВерсияОбработки Тогда
				ОписаниеЭТП = ОбработкаЭТП;
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.ВерсияОбработки < МаксВерсия Тогда
			ОтборВерсии.ВерсияОбработки = МаксВерсия;
			мВерсии = Объект.ВерсииОбработки.НайтиСтроки(ОтборВерсии);
			Если мВерсии.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(Объект, мВерсии[0]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбрботкаВыбораДопОбработкиНаСервере(ВыбраннаяОбработка)
	ТекстОшибки = ДобавитьОбработкуНаСервере(ВыбраннаяОбработка);
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	КонецЕсли;
	
	ОбновитьСписокВерсий();
КонецПроцедуры
	
&НаСервере
Функция ДобавитьОбработкуНаСервере(СсылкаНаДопОбработку)
	ОбработкаОбъект = ДополнительныеОтчетыИОбработки.ОбъектВнешнейОбработки(СсылкаНаДопОбработку);
	Попытка
		ОписаниеЭТП = ОбработкаОбъект.ОписаниеЭТП();
	Исключение
		Возврат НСтр("ru = 'Обработка не является обработкой обмена с торговой площадкой.'");
	КонецПопытки;
	
	НаименованиеЭТПОбработки = СокрЛП(ОписаниеЭТП.Наименование);
	Если НаименованиеЭТПОбработки <> СокрЛП(Объект.Наименование) Тогда
		ТекстОшибки = НСтр("ru = 'Обработка предназанчена для обмена с ЭТП ""%НаименованиеЭТПОбработки%"" и не может быть использована для ЭТП ""%НаименованиеОбъекта%""!'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НаименованиеЭТПОбработки%", Строка(НаименованиеЭТПОбработки));
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НаименованиеОбъекта%", СокрЛП(Объект.Наименование));
		Возврат ТекстОшибки;
	КонецЕсли;
	
	ВерсияОбработки = ОписаниеЭТП.ВерсияОбработки;
	ОтборВерсии = Новый Структура("ВерсияОбработки", ВерсияОбработки);
	мВерсии = Объект.ВерсииОбработки.НайтиСтроки(ОтборВерсии);
	Если мВерсии.Количество() = 0 Тогда
		НоваяСтрока = Объект.ВерсииОбработки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеЭТП);
		НоваяСтрока.ЭтоДопОбработка = Истина;
		НоваяСтрока.ДопОбработка = СсылкаНаДопОбработку;
		
	Иначе
		ТекстОшибки = НСтр("ru = 'Обработка с версией %ВерсияОбработки% уже есть в списке.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВерсияОбработки%", Строка(ВерсияОбработки));
		Возврат ТекстОшибки;
	КонецЕсли;
	
	Возврат "";
КонецФункции

&НаСервере
Процедура УстановитьОформлениеФормы() Экспорт
	флРазрешенаРаботаСВнешнимиОбработками = Константы.ИспользоватьДополнительныеОтчетыИОбработки.Получить();
	Элементы.ВерсииОбработкиДобавитьОбработку.Видимость = флРазрешенаРаботаСВнешнимиОбработками;
КонецПроцедуры


#КонецОбласти
