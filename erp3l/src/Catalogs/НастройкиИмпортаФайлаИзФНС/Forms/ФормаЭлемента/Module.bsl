
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		
		ЗначениеВРеквизитФормы(Справочники.НастройкиИмпортаФайлаИзФНС.ВернутьДеревоСтруктуры(Параметры.Ключ), "ДеревоНастройки");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущаяСтрока = Элементы.ДеревоНастройки.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ЗаписьДерева = ДеревоНастройки.НайтиПоИдентификатору(ТекущаяСтрока);
		Если ЗаписьДерева.ЯвляетсяАтрибутом Тогда
			ЗаписьДерева.ПоказательОтчета = ВыбранноеЗначение;
			Модифицированность = Истина;
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Нельзя сопоставить показатель отчету реквизиту отчета, который не является атрибутом";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьСтруктуруВТЧ(ТекущийОбъект);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.
//

&НаКлиенте
Процедура ИмпортироватьИзФайла(Команда)
	
	Перем АдресЗагрузки;
	
	#Если ВебКлиент Тогда
		
		Оповещение = Новый ОписаниеОповещения("ИмпортироватьИзФайлаЗавершение2", ЭтотОбъект, Новый Структура("АдресЗагрузки", АдресЗагрузки));
		НачатьПомещениеФайла(Оповещение, АдресЗагрузки, ,, Истина);
		
		Возврат;
		
	#Иначе
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр = "Табличный файл 1C (*.mxl)|*.mxl";
		
		ДопПараметры = Новый Структура("АдресЗагрузки, ДиалогОткрытияФайла", АдресЗагрузки, ДиалогОткрытияФайла);
		Оповещение = Новый ОписаниеОповещения("ИмпортироватьИзФайлаЗавершение1", ЭтотОбъект, ДопПараметры);
		ДиалогОткрытияФайла.Показать(Оповещение);
		
		Возврат;
		
	#КонецЕсли
	
	ИмпортироватьИзФайлаФрагмент2(АдресЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьИзФайлаЗавершение2(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    АдресЗагрузки = ДополнительныеПараметры.АдресЗагрузки;    
    ИмпортироватьИзФайлаФрагмент2(АдресЗагрузки);

КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьИзФайлаФрагмент2(АдресЗагрузки)    
    ЗаполнитьТаблицу(АдресЗагрузки);
КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьИзФайлаЗавершение1(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
    АдресЗагрузки = ДополнительныеПараметры.АдресЗагрузки;
    ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;    
    
    Если (ВыбранныеФайлы <> Неопределено) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ИмпортироватьИзФайлаЗавершение", ЭтотОбъект, Новый Структура("АдресЗагрузки", АдресЗагрузки));		
		НачатьПомещениеФайла(Оповещение, АдресЗагрузки, ДиалогОткрытияФайла.ПолноеИмяФайла,, Ложь);
		
        Возврат;
		
    Иначе
		
		Возврат;
		
    КонецЕсли;
    
    ЗаполнитьТаблицу(АдресЗагрузки);

КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьИзФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    АдресЗагрузки = ДополнительныеПараметры.АдресЗагрузки;        
    ЗаполнитьТаблицу(АдресЗагрузки);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуБланка(Команда)
	
	ФормаБланка = ПолучитьФорму("Справочник.НастройкиИмпортаФайлаИзФНС.Форма.ФормаБланка", Новый Структура("ВидОтчета", Объект.ВидОтчета), Элементы.ДеревоНастройки);
	ФормаБланка.ЗакрыватьПриВыборе = Ложь;
	ФормаБланка.ЗакрыватьПриЗакрытииВладельца = Истина;
	Если ФормаБланка.Открыта() Тогда
		ФормаБланка.Активизировать();
	Иначе
		ФормаБланка.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Модифицированность = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ НАСТРОЙКИ КРАТНОСТИ ПОЛУЧАЕМЫХ ДАННЫХ.
//

&НаКлиенте
Процедура УстановитьКратностьЕдиница(Команда)
	УстановитьКратностьВыбраннымПолям(0);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКратностьМиллион(Команда)
	УстановитьКратностьВыбраннымПолям(2);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКратностьТысяча(Команда)
	УстановитьКратностьВыбраннымПолям(1);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ЗаполнитьТаблицу(АдресЗагрузки)
	
	Если ЭтоАдресВременногоХранилища(АдресЗагрузки) Тогда
		
		ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел(Число(ТекущаяДата() - НачалоДня(ТекущаяДата())));
		ИмяСохраняемогоФайла    = Строка(ГенераторСлучайныхЧисел.СлучайноеЧисло(0, 10000)) + ".mxl";
		ПолноеИмяСохраняемогоФайла = Неопределено;
		
		ИмяКаталогаВременныхФайлов = КаталогВременныхФайлов();
		
		ПолноеИмяСохраняемогоФайла = ИмяКаталогаВременныхФайлов + ИмяСохраняемогоФайла;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресЗагрузки);
		ДвоичныеДанные.Записать(ПолноеИмяСохраняемогоФайла);
		
		ТаблДок = Новый ТабличныйДокумент;
		ТаблДок.Прочитать(ПолноеИмяСохраняемогоФайла);
		ЗначениеВРеквизитФормы(ИзвлечьСтруктуруXML(ТаблДок), "ДеревоНастройки");
			
    	УдалитьФайлы(ИмяКаталогаВременныхФайлов, ИмяСохраняемогоФайла);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИзвлечьСтруктуруXML(Макет)
	
	ДеревоСтруктуры = РеквизитФормыВЗначение("ДеревоНастройки");
	ДеревоСтруктуры.Строки.Очистить();
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	Корень = ДеревоСтруктуры.Строки.Добавить();
	Корень.КодПоля = "Файл";
	Корень.ЯвляетсяАтрибутом = Ложь;
	Корень.НаименованиеПоля  = "Корневой элемент";
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = Корень;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.КодПоля = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.ЯвляетсяАтрибутом = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст) = "А";
				НовСтр.НаименованиеПоля = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции


&НаКлиенте
Процедура УстановитьКратностьВыбраннымПолям(ИндексКратности)
	
	Если ИндексКратности = 2 Тогда
		Кратность = ПредопределенноеЗначение("Перечисление.ПорядкиОкругленияОтчетности.Окр1000000");
	ИначеЕсли ИндексКратности = 1 Тогда
		Кратность = ПредопределенноеЗначение("Перечисление.ПорядкиОкругленияОтчетности.Окр1000");
	Иначе
		Кратность = ПредопределенноеЗначение("Перечисление.ПорядкиОкругленияОтчетности.Окр1");
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.ДеревоНастройки.ВыделенныеСтроки Цикл
		СтрокаДерева = ДеревоНастройки.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Если СтрокаДерева.ЯвляетсяАтрибутом Тогда
			СтрокаДерева.Кратность = Кратность;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ВыделитьСтрочку(ТекущаяСтрока, ВыделитьТекущую = Ложь)
	
	Родитель = ТекущаяСтрока.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Родитель = ДеревоНастройки;
	КонецЕсли;
	
	ТекущиеСтроки = Родитель.ПолучитьЭлементы();
	
	Если ВыделитьТекущую Тогда
	
		Если ТекущаяСтрока.ЯвляетсяАтрибутом Тогда
			Элементы.ДеревоНастройки.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
			Возврат Истина;
		Иначе
			СтрокиТекущейСтроки = ТекущаяСтрока.ПолучитьЭлементы();
			Если СтрокиТекущейСтроки.Количество() = 0 Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Для Каждого Строка Из СтрокиТекущейСтроки Цикл
				
				Если ВыделитьСтрочку(Строка, Истина) Тогда
					Возврат Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			Возврат Ложь;
			
		КонецЕсли;
		
	Иначе
		
		Индекс = ТекущиеСтроки.Индекс(ТекущаяСтрока);
		Если Индекс >= ТекущиеСтроки.Количество() - 1 Тогда
			Если Родитель = ДеревоНастройки Тогда
				Возврат Ложь;
			КонецЕсли;
			Возврат ВыделитьСтрочку(Родитель, Ложь);
			
		Иначе
			РабочаяСтрока = ТекущиеСтроки[Индекс + 1];
			Если НЕ ВыделитьСтрочку(РабочаяСтрока, Истина) Тогда
				Если Родитель = ДеревоНастройки Тогда
					Возврат Ложь;
				Иначе
					ВыделитьСтрочку(Родитель);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СОХРАНЕНИЯ СТРУКТУРЫ ДОКУМЕНТА В ТЧ.
//

&НаСервере
Процедура СохранитьСтруктуруВТЧ(ТекущийОбъект)
	
	ТекущийОбъект.СоответствиеПоказателейИПолей.Очистить();
	ЗаписатьВеткуДереваВТЧ(ТекущийОбъект, ДеревоНастройки, 0, 0, "");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВеткуДереваВТЧ(ТекущийОбъект, Ветка, Знач ИндексВладельца, ОбщийИндекс, Путь)
	
	ТекущиеЭлементы = Ветка.ПолучитьЭлементы();
	Для Каждого Элемент Из ТекущиеЭлементы Цикл
		
		ОбщийИндекс = ОбщийИндекс + 1;
		
		НоваяСтрока                   = ТекущийОбъект.СоответствиеПоказателейИПолей.Добавить();
		НоваяСтрока.Номер             = ОбщийИндекс;
		НоваяСтрока.ВладелецПоля      = ИндексВладельца;
		НоваяСтрока.КодПоля           = Элемент.КодПоля;
		НоваяСтрока.НаименованиеПоля  = Элемент.НаименованиеПоля;
		НоваяСтрока.ЯвляетсяАтрибутом = Элемент.ЯвляетсяАтрибутом;
		НоваяСтрока.ПоказательОтчета  = Элемент.ПоказательОтчета;
		НоваяСтрока.Кратность         = Элемент.Кратность;
		
		ПутьКЭлементу = Путь + "/" + Элемент.КодПоля;
		НоваяСтрока.xPathПуть         = ПутьКЭлементу;
		
		ЗаписатьВеткуДереваВТЧ(ТекущийОбъект, Элемент, ОбщийИндекс, ОбщийИндекс, ПутьКЭлементу);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ТекущаяСтрока = Элементы.ДеревоНастройки.ДанныеСтроки(Элементы.ДеревоНастройки.ТекущаяСтрока);
		ВыбранноеЗначение.Свойство("ПоказательОтчета", ТекущаяСтрока.ПоказательОтчета);
		ВыделитьСтрочку(ТекущаяСтрока);
	Иначе
		СтандартнаяОбработка = Истина;
	КонецЕсли;
	
КонецПроцедуры

