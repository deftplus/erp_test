////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектКопирования=Параметры.ЗначениеКопирования;
	
	Если ТипЗнч(Объект.ТипОбъектаСогласования)=Тип("СправочникСсылка.СправочникиБД") Тогда
		
		ИмяСправочника="СправочникиБД";
		
	ИначеЕсли ТипЗнч(Объект.ТипОбъектаСогласования)=Тип("СправочникСсылка.ДокументыБД") Тогда
		
		ИмяСправочника="ДокументыБД";
		
	КонецЕсли;
	
		
	Если  Объект.СогласованиеЗаявкиНСИ Тогда
		
		ИмяСправочника="ЗаявкаНСИ";	
			
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяСправочника) Тогда
		
		ИмяСправочника="ДокументыБД";
		
	КонецЕсли;
	
	//Если есть этапы - условные переходы, то изменение типа объекта невозможно.
	Элементы.ГруппаОбъектСогласования.Доступность= ПроверитьДоступностьОбъектаСогласования();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьДоступностьОбъектаСогласования()
	
	   Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	   |	ЭтапыСогласования.Ссылка
	   |ИЗ
	   |	Справочник.ЭтапыСогласования КАК ЭтапыСогласования
	   |ГДЕ
	   |	ЭтапыСогласования.ТипЭтапа = &ТипЭтапа
	   |	И ЭтапыСогласования.Владелец = &Владелец";
	   
	   Запрос.УстановитьПараметр("ТипЭтапа",Перечисления.ТипыЭтаповСогласования.УсловныйПереход);
	   Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Пока Выборка.Следующий() Цикл
	   
	   	    Возврат Ложь;
	   
	   КонецЦикла;
	   
	   Возврат Истина;
		
КонецФункции	
	
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СкопироватьСвязнуюИнформациюПроцесса(ОбъектКопирования);	
	
КонецПроцедуры

// Процедура выполняет копирование связной информации процесса
//
&НаСервере
Процедура СкопироватьСвязнуюИнформациюПроцесса(Источник)
	
	СоответствиеЭтаповПроцесса   = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыСогласования.Ссылка,
	|	ЭтапыСогласования.ЭтоГруппа,
	|	ЭтапыСогласования.ДочернийМаршрут,
	|	ЭтапыСогласования.УсловияСогласования,
	|	ЭтапыСогласования.УровеньОрганизации,
	|	ЭтапыСогласования.ДлительностьСогласования,
	|	ЭтапыСогласования.ТипЭтапа,
	|	ЭтапыСогласования.АвтоматическоеОтклонениеДокумента,
	|	ЭтапыСогласования.Код,
	|	ЭтапыСогласования.Наименование,
	|	ЭтапыСогласования.ПорядковыйНомер
	|ИЗ
	|	Справочник.ЭтапыСогласования КАК ЭтапыСогласования
	|ГДЕ
	|	ЭтапыСогласования.Владелец = &Источник";
	
	Запрос.УстановитьПараметр("Источник", Источник);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоГруппа Тогда
			НовыйЭтап = Справочники.ЭтапыСогласования.СоздатьГруппу();
			ЗаполнитьЗначенияСвойств(НовыйЭтап, Выборка,"Код, Наименование");
		Иначе
			НовыйЭтап = Справочники.ЭтапыСогласования.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйЭтап, Выборка, ,"ЭтоГруппа, УсловияСогласования, ДочернийМаршрут");
		КонецЕсли;
		
		НовыйЭтап.Владелец = Объект.Ссылка;
		
		Попытка
			
			НовыйЭтап.ОбменДанными.Загрузка=Истина;
			НовыйЭтап.Записать();
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Не удалось создать этап маршрута "+Выборка.Наименование+": "+ОписаниеОшибки());
			Возврат;
			
		КонецПопытки; 
		
		СоответствиеЭтаповПроцесса.Вставить(Выборка.Ссылка, НовыйЭтап.Ссылка);
		
	КонецЦикла;
	
	Для каждого КлючИЗначение Из СоответствиеЭтаповПроцесса Цикл
		
		НовыйЭтап    = КлючИЗначение.Значение.ПолучитьОбъект();
		ЭтапИсточник = КлючИЗначение.Ключ;
		
		Если Не ЭтапИсточник.Родитель.Пустая() Тогда
			НовыйЭтап.Родитель = СоответствиеЭтаповПроцесса[ЭтапИсточник.Родитель];
		КонецЕсли;
		
		Если Не НовыйЭтап.ЭтоГруппа Тогда
			
			НовыйЭтап.Утверждающие.Загрузить(ЭтапИсточник.Утверждающие.Выгрузить());
			НовыйЭтап.ЗначенияУсловийОтборов.Загрузить(ЭтапИсточник.ЗначенияУсловийОтборов.Выгрузить());
			
			Для каждого СтрокаЭтапыПредшественники Из ЭтапИсточник.ЭтапыПредшественники Цикл
				
				Если Не СтрокаЭтапыПредшественники.Этап.Пустая() Тогда
					НовыйЭтап.ЭтапыПредшественники.Добавить().Этап = СоответствиеЭтаповПроцесса[СтрокаЭтапыПредшественники.Этап];
				КонецЕсли;
				
			КонецЦикла;
			
			УсловияСогласованияИсточник = ЭтапИсточник.УсловияСогласования.Получить();
			
			Если ЗначениеЗаполнено(УсловияСогласованияИсточник) Тогда
				УсловияСогласования = УсловияСогласованияИсточник.Скопировать();
				РекурсивныйПереносСтрок(УсловияСогласования, СоответствиеЭтаповПроцесса);
				НовыйЭтап.УсловияСогласования = Новый ХранилищеЗначения(УсловияСогласования);
			КонецЕсли;
			
		КонецЕсли;
		
		Попытка
			НовыйЭтап.Записать();
			
		Исключение
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Не удалось создать загрузить данные по этапу маршрута "+НовыйЭтап.Наименование+": "+ОписаниеОшибки());
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РекурсивныйПереносСтрок(Строки, СоответствиеЭтаповПроцесса)
	
	Для Каждого Строка Из Строки.Строки Цикл
		
		Если ТипЗнч(Строка.Значение) = Тип("СправочникСсылка.ЭтапыСогласования") Тогда
			Строка.Значение = СоответствиеЭтаповПроцесса[Строка.Значение];
		КонецЕсли;
		
		Если Строка.Строки.Количество() > 0 Тогда
			РекурсивныйПереносСтрок(Строка, СоответствиеЭтаповПроцесса);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ОбъектКопирования) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Скопировать информацию об этапах маршрута?", РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда        
        ОбъектКопирования = Неопределено;        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаСогласованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	ИмяСправочника_=?(ИмяСправочника="ЗаявкаНСИ","СправочникиБД",ИмяСправочника);
	
	ОткрытьФорму("Справочник."+ИмяСправочника_+".ФормаВыбора",Новый Структура("Отбор",Новый Структура("Владелец,Согласуется",ПредопределенноеЗначение("Справочник.ТипыБазДанных.ТекущаяИБ"),Истина)),Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ИмяСправочникаПриИзменении(Элемент)
	
	Объект.ТипОбъектаСогласования=Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	 ТекущийОбъект.СогласованиеЗаявкиНСИ=ИмяСправочника="ЗаявкаНСИ";
	 
 КонецПроцедуры


