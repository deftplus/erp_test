Перем Используется77; // Признак использования обращения к ВИБ на платформе 7.7
Перем ТекСоединениеВИБ Экспорт; // Текущее соединение с внешней информационной базой
Перем СправочникБД;
Перем ТекущаяИБ;
Перем мОписаниеТиповСтрока;
Перем мОписаниеТиповБулево;
Перем мОписаниеТиповТЗ;
Перем мОписаниеТиповСписокЗначений;
Перем ТаблицаРеквизитовКонсолидации;
Перем ТаблицаРеквизитовВИБ;
Перем ТекТаблицаСинхронизации;

Функция ЕстьРеквизитыНСИ() Экспорт
	 
	Если Владелец = Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		Если Реквизиты.Найти("НСИ_ВИБ","Имя")=Неопределено или Реквизиты.Найти("НСИ_Автор","Имя")=Неопределено или
			Реквизиты.Найти("НСИ_ДатаИзменения","Имя")=Неопределено или Реквизиты.Найти("НСИ_НеАктивный","Имя")=Неопределено или
			Реквизиты.Найти("НСИ_ТребуетСинхронизации","Имя")=Неопределено или Реквизиты.Найти("НСИ_ЭталонныйЭлемент","Имя") = Неопределено Тогда
			Возврат Ложь;
			
		Иначе	 
			
			Возврат Истина;
			
		КонецЕсли;
		
	Иначе	 
		Возврат Ложь;
		
	КонецЕсли;
		
КонецФункции
	
Функция ЕстьРеквизитЦНСИ(ИмяРеквизита) Экспорт
	 
	Если Владелец = Справочники.ТипыБазДанных.ТекущаяИБ Тогда	
		
		Если Реквизиты.Найти(ИмяРеквизита,"Имя")=Неопределено  Тогда
			
			Возврат Ложь;	
			
		Иначе	 	
			
			Возврат Истина;	
			
		КонецЕсли;	
		
	Иначе	 
		
		Возврат Ложь;	
		
	КонецЕсли;
		
КонецФункции

Процедура ЗаполнитьРеквизитыОбъекта(Кэш = Неопределено, ЕстьИзменения = Истина) Экспорт
	
	Если Не ПроверитьНаименование() Тогда		
		Возврат;		
	КонецЕсли;
	
	ТекущаяИБ = (Владелец = Справочники.ТипыБазДанных.ТекущаяИБ);
	
	Если Не ТекущаяИБ Тогда
		
		Если ТекСоединениеВИБ = Неопределено Тогда
			
			ТекСоединениеВИБ = ОбщегоНазначенияУХ.ПолучитьСоединениеСВИБПоУмолчанию(Владелец, 1);
			
			Если ТекСоединениеВИБ = Неопределено Тогда
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Метаданные.Справочники.Найти(Наименование) = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru = 'Не найден справочник %Наименование%. Возможно, требуется обновить данные по метаданным текущей ИБ.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", Строка(Наименование));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Возврат;
			
		КонецЕсли;
		
		ТекСоединениеВИБ = Обработки.РаботаСМетаданнымиУХ.Создать();
		
	КонецЕсли;
	
	РеквизитыДоОбновления = Реквизиты.Выгрузить();
		
	СтруктураОписания = ОбщегоНазначенияУХ.ПолучитьСтруктуруОписанияСправочникаБД(
		Наименование, ТекСоединениеВИБ, Использование77(), Кэш);
			
	Если СтруктураОписания.Свойство("ТекстОшибки") Тогда		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтруктураОписания.ТекстОшибки,Истина,,СтатусСообщения.Внимание);
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураОписания.ВидИерархии) Тогда
		НовыйВидИерархии = Перечисления.ВидИерархии[СтруктураОписания.ВидИерархии];
	Иначе
		НовыйВидИерархии = Перечисления.ВидИерархии.ПустаяСсылка(); 
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСерверУХ.УстановитьНовоеЗначение(ЭтотОбъект.ВидИерархии, НовыйВидИерархии, ЕстьИзменения);
	ОбщегоНазначенияУХ.ЗаполнитьИзмененныеРеквизиты(ЭтотОбъект, СтруктураОписания, "Реквизиты,Владельцы,ВидИерархии", ЕстьИзменения);
	
	// *** Реквизиты ***
	ТабНовыеРеквизиты = ЭтотОбъект.Реквизиты.ВыгрузитьКолонки();
	Для Каждого СтрРеквизит ИЗ СтруктураОписания.Реквизиты Цикл
		
		НоваяСтрока = ТабНовыеРеквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрРеквизит,, "Использование");
		
		Если ЗначениеЗаполнено(СтрРеквизит.Использование) Тогда		
			НоваяСтрока.Использование = Перечисления.ИспользованиеРеквизита[СтрРеквизит.Использование];		
		КонецЕсли;
		
		ВосстановитьДанныеРеквизитов(НоваяСтрока, РеквизитыДоОбновления);
		
	КонецЦикла;	
	ОбщегоНазначенияУХ.ЗагрузитьИзмененнуюТабЧасть(ЭтотОбъект.Реквизиты, ТабНовыеРеквизиты, ЕстьИзменения);
	
	// *** Владельцы ***
	ТабНовыеВладельцы = ЭтотОбъект.Владельцы.ВыгрузитьКолонки();
	Для Каждого СтрВладелец ИЗ СтруктураОписания.Владельцы Цикл	
		СтрокаВладелец = ТабНовыеВладельцы.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаВладелец, СтрВладелец);	
	КонецЦикла;	
	ОбщегоНазначенияУХ.ЗагрузитьИзмененнуюТабЧасть(ЭтотОбъект.Владельцы, ТабНовыеВладельцы, ЕстьИзменения);
	
	Если ЭтоНовый() Тогда
		
		ЭтотОбъект.СоздаватьПриНеудачномПоискеПриИмпорте = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) И НЕ Использование77() Тогда
		
		ОбщегоНазначенияУХ.ОбновитьОписаниеТабличнойЧастиБД(ТекСоединениеВИБ, Ссылка, 
			Новый Структура("ТипОбъектаМетаданных, ИмяОбъектаМетаданных", "Catalogs", Наименование),,
			Кэш);
		
	КонецЕсли;
			
КонецПроцедуры // ЗаполнитьРеквизитыОбъекта()

Функция ВосстановитьДанныеРеквизитов(СтрокаРеквизита, СохраненныеДанные)
	
	СохраненнаяСтрока = СохраненныеДанные.Найти(СтрокаРеквизита.Имя, "Имя");
	
	Если НЕ СохраненнаяСтрока=Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(СтрокаРеквизита,СохраненнаяСтрока,,"Синоним,ТипДанных,ОписаниеПримитивногоТипа");
		
	КонецЕсли;
		
КонецФункции // ВосстановитьДанныеРеквизитов()
	
Функция ПроверитьНаименование()
	
	ЕстьОшибки=Ложь;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Для обрабатываемого плана счетов внешней информационной базы не указано наименование.'"), ЕстьОшибки,, СтатусСообщения.Внимание);
		
	КонецЕсли;
	
	Возврат НЕ ЕстьОшибки;
			
КонецФункции // ПроверитьНаименование()

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	Иначе	
		Отказ = НЕ ПроверитьНаименование();
	КонецЕсли;
		
	Если РазделятьПоОрганизациям и РеквизитРазделенияПоОрганизациям="" Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Выбрано разделение ответственных по организациям. Необходимо указать реквизит, соответсвующий организации.'"), Истина,, СтатусСообщения.Внимание);
		Отказ = Истина;	
	КонецЕсли;		
	Если РазделятьПоПроектам и РеквизитРазделенияПоПроектам="" Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Выбрано разделение ответственных по проектам. Необходимо указать реквизит, соответсвующий проекту.'"), Истина,, СтатусСообщения.Внимание);
		Отказ = Истина;	
	КонецЕсли;		
	
	// Заполнение реквизитов для согласования.
	Если Владелец = Справочники.ТипыБазДанных.ТекущаяИБ  Тогда
		Согласуется = ПроверитьВозможностьСогласования();
		Если Не ЗначениеЗаполнено(РеквизитСостояния) Тогда
			Если Наименование = "ДоговорыКонтрагентов" Тогда
				ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияДоговоров.Черновик;
				ЗначениеРеквизитаСостоянияНаУтверждении	= Перечисления.СостоянияДоговоров.НаУтверждении;
				ЗначениеРеквизитаСостоянияОтклонен			= Перечисления.СостоянияДоговоров.Отклонен;
				ЗначениеРеквизитаСостоянияУтвержден		= Перечисления.СостоянияДоговоров.Утвержден;
				РеквизитСостоянияСтрока = "СостоянияДоговоров";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			ИначеЕсли Наименование = "Проекты" Тогда
				ЗначениеРеквизитаСостоянияЧерновик =  Перечисления.СостоянияПроектов.Черновик;
				ЗначениеРеквизитаСостоянияНаУтверждении =  Перечисления.СостоянияПроектов.НаУтверждении;
				ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияПроектов.Утвержден;
				ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияПроектов.Отклонен;	
				РеквизитСостоянияСтрока = "СостоянияПроектов";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			ИначеЕсли Наименование = "РеестрыСогласуемыхОбъектов" Тогда
				
				ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
				ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
				ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
				ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
				РеквизитСостоянияСтрока = "СостоянияСогласования";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			ИначеЕсли Наименование = "Лоты" Тогда
				
				ЗначениеРеквизитаСостоянияЧерновик =  Перечисления.СтатусыЛотов.Черновик;
				ЗначениеРеквизитаСостоянияНаУтверждении =  Перечисления.СтатусыЛотов.НаУтверждении;
				ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СтатусыЛотов.ВключенВГПЗ;
				ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СтатусыЛотов.Черновик;	
				РеквизитСостоянияСтрока = "СтатусыЛотов";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			ИначеЕсли Наименование = "АнкетыПоставщиков" Тогда
				
				ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
				ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
				ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
				ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
				РеквизитСостоянияСтрока = "СостоянияСогласования";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
				
			ИначеЕсли Наименование = "СтатьиДвиженияДенежныхСредств" 
				ИЛИ Наименование = "СтатьиДвиженияРесурсов" 
				ИЛИ Наименование = "СтатьиДоходовИРасходов" Тогда
				
				ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
				ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
				ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Отклонена;
				ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
				РеквизитСостоянияСтрока = "СостоянияСогласования";
				РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
				
			КонецЕсли;
		Иначе
			// Уже заполнено.
		КонецЕсли;
	КонецЕсли;
	// Заполнение реквизита разделение по организациям по умолчанию.
	Если НЕ ЗначениеЗаполнено(РеквизитРазделенияПоОрганизациям) Тогда
		Если Наименование = "Лоты" Тогда
			РеквизитРазделенияПоОрганизациям = "ОрганизаторЗакупки";
		Иначе
			СтруктураОтбора = Новый Структура();
			СтруктураОтбора.Вставить("Имя", "Организация");
			НайденныеСтроки = Реквизиты.НайтиСтроки(СтруктураОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				РеквизитРазделенияПоОрганизациям = "Организация";
			Иначе
				СтруктураОтбора.Вставить("Имя", "ЦФО");
				НайденныеСтроки = Реквизиты.НайтиСтроки(СтруктураОтбора);
				Если НайденныеСтроки.Количество() > 0 Тогда
					РеквизитРазделенияПоОрганизациям = "ЦФО";
				Иначе
					РеквизитРазделенияПоОрганизациям = "";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		// Уже заполнено. Не изменяем.
	КонецЕсли;
	
	/// Реквизиты контроля НСИ
	
	ЕстьРеквизитыНСИ			= ЕстьРеквизитыНСИ();	
	ЕстьРеквизитНСИ_НеАктивный	= ЕстьРеквизитЦНСИ("НСИ_НеАктивный");
	ЕстьРеквизитНСИ_ВИБ			= ЕстьРеквизитЦНСИ("НСИ_ВИБ");
		
КонецПроцедуры

Функция Использование77() Экспорт
		
	Если Используется77 = Неопределено Тогда
		Используется77 = (Владелец.ВерсияПлатформы = Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие77);	
	КонецЕсли;
	
	Возврат Используется77;
	
КонецФункции

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

Функция ПроверитьВозможностьСогласования() Экспорт
	
	Если НЕ Владелец=Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Для Каждого ОТип Из Метаданные.ОпределяемыеТипы.ОбъектыДляСогласования.Тип.Типы() Цикл
		
		Если Метаданные.Справочники.Найти(Наименование) <> Неопределено Тогда
			Если ОТип=Тип("СправочникСсылка."+Наименование) Тогда
				Возврат Истина;
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru = 'Не найден справочник %Наименование%. Возможно, требуется обновить данные по метаданным текущей ИБ.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", Строка(Наименование));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, , , СтатусСообщения.Информация);
			Возврат Ложь;
		КонецЕсли;

	КонецЦикла;
	
	Возврат Ложь;

КонецФункции	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	// Заполнение параметров согласования по умолчанию.
	РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию("СостоянияСогласования", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	ЗначениеРеквизитаСостоянияНаУтверждении	 = Перечисления.СостоянияСогласования.НаУтверждении;
	ЗначениеРеквизитаСостоянияОтклонен		 = Перечисления.СостоянияСогласования.Отклонена;
	ЗначениеРеквизитаСостоянияУтвержден		 = Перечисления.СостоянияСогласования.Утверждена;
	ЗначениеРеквизитаСостоянияЧерновик		 = Перечисления.СостоянияСогласования.Черновик;
КонецПроцедуры



