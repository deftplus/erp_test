
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Автотест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("ПолучитьДанные") Тогда
		ПараметрыГрафика = ПолучитьДанныеГрафика();
	Иначе
		ПараметрыГрафика = Параметры;
	КонецЕсли;
	
	ЕстьОбеспечительныйПлатеж = ПараметрыГрафика.СлужебныеПараметрыФормы.РеквизитыДоговора.ЕстьОбеспечительныйПлатеж;
	ЕстьВыкупПредметовАренды = ПараметрыГрафика.СлужебныеПараметрыФормы.РеквизитыДоговора.ЕстьВыкупПредметовАренды;
	ПроцентнаяСтавка = ПараметрыГрафика.ПроцентнаяСтавка;
	ПриведеннаяСтоимость = ПараметрыГрафика.ПриведеннаяСтоимость;
	СуммаВыкупаПредметовАренды = ПараметрыГрафика.СуммаВыкупаПредметовАренды;
	СуммаНДСВыкупаПредметовАренды = ПараметрыГрафика.СуммаНДСВыкупаПредметовАренды;
	ВалютаДокументаПредставление = ПараметрыГрафика.ВалютаДокументаПредставление;
	ГрафикНачисленияПроцентовВведенВручную = ПараметрыГрафика.ГрафикНачисленияПроцентовВведенВручную;
	СтавкаНДС = ПараметрыГрафика.СтавкаНДС;
	ДатаНачалаАренды = ПараметрыГрафика.ДатаНачалаАренды;
	
	Если ПараметрыГрафика.Свойство("ТолькоПросмотр") 
		И ПараметрыГрафика.ТолькоПросмотр Тогда
		ТолькоПросмотр = Истина;
		Элементы.ПеренестиВДокумент.Доступность = Ложь;
	КонецЕсли;

	ГрафикиДоговора = ПолучитьИзВременногоХранилища(ПараметрыГрафика.ГрафикиДоговора);

	ГрафикОплатУслуг.Загрузить(ГрафикиДоговора.ГрафикОплатУслуг);
	ГрафикНачисленияУслуг.Загрузить(ГрафикиДоговора.ГрафикНачисленияУслуг);
	ГрафикНачисленияПроцентов.Загрузить(ГрафикиДоговора.ГрафикНачисленияПроцентов);

	Если Параметры.ИмяГрафика = "ГрафикНачисленияУслуг" Тогда
		Элементы.СтраницыГрафики.ТекущаяСтраница = Элементы.СтраницаГрафикНачислений;
	ИначеЕсли Параметры.ИмяГрафика = "ГрафикНачисленияПроцентов" Тогда
		Элементы.СтраницыГрафики.ТекущаяСтраница = Элементы.СтраницаГрафикПроцентов;
	Иначе
		Элементы.СтраницыГрафики.ТекущаяСтраница = Элементы.СтраницаГрафикОплат;
	КонецЕсли;

	Если НЕ ПараметрыГрафика.СлужебныеПараметрыФормы.ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
		Элементы.ГрафикНачисленияПроцентов.Видимость = Ложь;
		Элементы.ГрафикНачисленияПроцентовВведенВручную.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ЕстьОбеспечительныйПлатеж Тогда
		
		Элементы.ГрафикОплатУслугОбеспечительныйПлатеж.Видимость = Ложь;
		Элементы.ГрафикОплатУслугОбеспечительныйПлатежНДС.Видимость = Ложь;
		Элементы.ГрафикНачисленияУслугОбеспечительныйПлатеж.Видимость = Ложь;
		Элементы.ГрафикНачисленияУслугОбеспечительныйПлатежНДС.Видимость = Ложь;
		
		Элементы.Оплата_ОбеспечительныйПлатеж_Итого.Видимость = Ложь;
		Элементы.Оплата_ОбеспечительныйПлатеж_ИтогоВалюта.Видимость = Ложь;
		Элементы.Начисление_ОбеспечительныйПлатеж_Итого.Видимость = Ложь;
		Элементы.Начисление_ОбеспечительныйПлатеж_ИтогоВалюта.Видимость = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЕстьВыкупПредметовАренды Тогда
		
		Элементы.ГрафикОплатУслугВыкупнаяСтоимость.Видимость = Ложь;
		Элементы.ГрафикОплатУслугВыкупнаяСтоимостьНДС.Видимость = Ложь;
		
		Элементы.Оплата_ВыкупнаяСтоимость_Итого.Видимость = Ложь;
		Элементы.Оплата_ВыкупнаяСтоимость_ИтогоВалюта.Видимость = Ложь;
		Элементы.Начисление_ВыкупнаяСтоимость_Итого.Видимость = Ложь;
		Элементы.Начисление_ВыкупнаяСтоимость_ИтогоВалюта.Видимость = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЕстьОбеспечительныйПлатеж И НЕ ЕстьВыкупПредметовАренды Тогда
		Элементы.ГрафикОплатУслугУслугаПоАренде.АвтоОтметкаНезаполненного = Истина;
		Элементы.ГрафикНачисленияУслугУслугаПоАренде.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;

	Если УчетНДСУП.НезначащаяСтавка(СтавкаНДС)
		ИЛИ НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
		
		Элементы.ГрафикОплатУслугУслугаПоАрендеНДС.Видимость = Ложь;
		Элементы.ГрафикОплатУслугОбеспечительныйПлатежНДС.Видимость = Ложь;
		Элементы.ГрафикОплатУслугВыкупнаяСтоимостьНДС.Видимость = Ложь;
		
		Элементы.ГрафикНачисленияУслугУслугаПоАрендеНДС.Видимость = Ложь;
		Элементы.ГрафикНачисленияУслугОбеспечительныйПлатежНДС.Видимость = Ложь;
		
		Элементы.Оплата_НДС_Итого.Видимость = Ложь;
		Элементы.Оплата_НДС_ИтогоВалюта.Видимость = Ложь;
		Элементы.Начисление_НДС_Итого.Видимость = Ложь;
		Элементы.Начисление_НДС_ИтогоВалюта.Видимость = Ложь;
		
	КонецЕсли;
	
	// Скрытие группы колонок и измение заголовка
	Если НЕ Элементы.ГрафикОплатУслугУслугаПоАрендеНДС.Видимость Тогда
		Элементы.ГрафикОплатУслугГруппаУслугаПоАренде.ОтображатьВШапке = Ложь;
		Элементы.ГрафикОплатУслугУслугаПоАренде.Заголовок = НСтр("ru = 'Сумма услуги по аренде';
																|en = 'Lease service amount'");
	КонецЕсли;
	
	Если НЕ Элементы.ГрафикОплатУслугОбеспечительныйПлатежНДС.Видимость Тогда
		Элементы.ГрафикОплатУслугГруппаОбеспечительныйПлатеж.ОтображатьВШапке = Ложь;
		Элементы.ГрафикОплатУслугОбеспечительныйПлатеж.Заголовок = НСтр("ru = 'Сумма обеспечительного платежа';
																		|en = 'Security deposit amount'");
	КонецЕсли;
	
	Если НЕ Элементы.ГрафикОплатУслугВыкупнаяСтоимостьНДС.Видимость Тогда
		Элементы.ГрафикОплатУслугГруппаВыкупнаяСтоимость.ОтображатьВШапке = Ложь;
		Элементы.ГрафикОплатУслугВыкупнаяСтоимость.Заголовок = НСтр("ru = 'Сумма выкупной стоимости';
																	|en = 'Redemption cost amount'");
	КонецЕсли;
	
	Если НЕ Элементы.ГрафикНачисленияУслугУслугаПоАрендеНДС.Видимость Тогда
		Элементы.ГрафикНачисленияУслугГруппаУслугаПоАренде.ОтображатьВШапке = Ложь;
		Элементы.ГрафикНачисленияУслугУслугаПоАренде.Заголовок = НСтр("ru = 'Сумма услуги по аренде в части арендного платежа';
																		|en = 'Lease service amount in part of lease payment'");
	КонецЕсли;
	
	Если НЕ Элементы.ГрафикНачисленияУслугОбеспечительныйПлатежНДС.Видимость Тогда
		Элементы.ГрафикНачисленияУслугГруппаОбеспечительныйПлатеж.ОтображатьВШапке = Ложь;
		Элементы.ГрафикНачисленияУслугОбеспечительныйПлатеж.Заголовок = НСтр("ru = 'Сумма услуги по аренде в части арендного платежа';
																			|en = 'Lease service amount in part of lease payment'");
	КонецЕсли;
	
	Если НЕ ЕстьОбеспечительныйПлатеж Тогда
		Элементы.ГрафикНачисленияУслугГруппаУслугаПоАренде.Заголовок = НСтр("ru = 'Услуга по аренде';
																			|en = 'Lease service'");
	КонецЕсли;
	
	Заголовок = СтрШаблон(НСтр("ru = 'График оплат и начислений по договору ""%1""';
								|en = 'Schedule of payments and accruals under contract ""%1""'"), Строка(Параметры.Договор));
	
	ОбновитьПодвалГрафикаОплатУслуг(ЭтотОбъект);
	ОбновитьПодвалГрафикаНачисленияУслуг(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);

	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьПодтверждениеЗакрытияФормыЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы,, ТекстПредупреждения);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ВнеоборотныеАктивыСлужебный.ПроверитьГрафик(
		ГрафикОплатУслуг, 
		"ГрафикОплатУслуг", 
		"УслугаПоАренде,ОбеспечительныйПлатеж,ВыкупнаяСтоимость", 
		Отказ);
		
	ВнеоборотныеАктивыСлужебный.ПроверитьГрафик(
		ГрафикНачисленияУслуг, 
		"ГрафикНачисленияУслуг", 
		"УслугаПоАренде,ОбеспечительныйПлатеж,ВыкупнаяСтоимость", 
		Отказ);

	ВнеоборотныеАктивыСлужебный.ПроверитьГрафик(
		ГрафикНачисленияПроцентов, 
		"ГрафикНачисленияПроцентов", 
		"Проценты", 
		Отказ);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГрафикНачисленияПроцентовВведенВручнуюПриИзменении(Элемент)

	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтотОбъект, Элемент.Имя);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикОплатУслуг

&НаКлиенте
Процедура ГрафикОплатУслугПриИзменении(Элемент)
	
	ОбновитьПодвалГрафикаОплатУслуг(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплатУслугУслугаПоАрендеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикОплатУслуг.ТекущиеДанные;
	ТекущиеДанные.УслугаПоАрендеНДС = РассчитатьСуммуНДС(ТекущиеДанные.УслугаПоАренде);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплатУслугОбеспечительныйПлатежПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикОплатУслуг.ТекущиеДанные;
	ТекущиеДанные.ОбеспечительныйПлатежНДС = РассчитатьСуммуНДС(ТекущиеДанные.ОбеспечительныйПлатеж);

КонецПроцедуры

&НаКлиенте
Процедура ГрафикОплатУслугВыкупнаяСтоимостьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикОплатУслуг.ТекущиеДанные;
	ТекущиеДанные.ВыкупнаяСтоимостьНДС = РассчитатьСуммуНДС(ТекущиеДанные.ВыкупнаяСтоимость);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикНачисленияУслуг

&НаКлиенте
Процедура ГрафикНачисленияУслугПриИзменении(Элемент)
	
	ОбновитьПодвалГрафикаНачисленияУслуг(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ГрафикНачисленияУслугУслугаПоАрендеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикНачисленияУслуг.ТекущиеДанные;
	ТекущиеДанные.УслугаПоАрендеНДС = РассчитатьСуммуНДС(ТекущиеДанные.УслугаПоАренде);

КонецПроцедуры

&НаКлиенте
Процедура ГрафикНачисленияУслугОбеспечительныйПлатежПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикНачисленияУслуг.ТекущиеДанные;
	ТекущиеДанные.ОбеспечительныйПлатежНДС = РассчитатьСуммуНДС(ТекущиеДанные.ОбеспечительныйПлатеж);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ЗавершитьРедактирование();

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафик_ГрафикОплат(Команда)
	
	ЗагрузитьГрафик("ГрафикОплатУслуг");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафик_ГрафикНачислений(Команда)
	
	ЗагрузитьГрафик("ГрафикНачисленияУслуг");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафик_ГрафикПроцентов(Команда)
	
	ЗагрузитьГрафик("ГрафикНачисленияПроцентов");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	#Область УслугаПоАренде
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Оплата_УслугаПоАренде_Итого.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Начисление_УслугаПоАренде_Итого.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Оплата_УслугаПоАренде_Итого");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Начисление_УслугаПоАренде_Итого");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	#КонецОбласти
	
	#Область ОбеспечительныйПлатеж
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Оплата_ОбеспечительныйПлатеж_Итого.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Начисление_ОбеспечительныйПлатеж_Итого.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Оплата_ОбеспечительныйПлатеж_Итого");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Начисление_ОбеспечительныйПлатеж_Итого");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	#КонецОбласти
	
	#Область ВыкупнаяСтоимость
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Оплата_ВыкупнаяСтоимость_Итого.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Начисление_ВыкупнаяСтоимость_Итого.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Оплата_ВыкупнаяСтоимость_Итого");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("СуммаВыкупаПредметовАренды");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	#КонецОбласти

	#Область НДС
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Оплата_НДС_Итого.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Начисление_НДС_Итого.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Оплата_НДС_Итого");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Начисление_НДС_Итого");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	#КонецОбласти
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафик(ИмяГрафика)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяГрафика", ИмяГрафика);
	ПараметрыФормы.Вставить("УникальныйИдентификаторВладельца", УникальныйИдентификатор);
	ПараметрыФормы.Вставить("ЕстьОбеспечительныйПлатеж", ЕстьОбеспечительныйПлатеж);
	ПараметрыФормы.Вставить("ЕстьВыкупПредметовАренды", ИмяГрафика = "ГрафикОплатУслуг" И ЕстьВыкупПредметовАренды);
	
	ОткрытьФорму("Справочник.ДоговорыАренды.Форма.ЗагрузкаГрафикаОплатИНачислений",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ЗагрузитьГрафикЗавершение", ЭтотОбъект, ИмяГрафика),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафикЗавершение(РезультатЗакрытия, ИмяГрафика) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Строка") 
		И ЭтоАдресВременногоХранилища(РезультатЗакрытия) Тогда
			
		ЗагрузитьГрафикЗавершениеНаСервере(РезультатЗакрытия, ИмяГрафика);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГрафикЗавершениеНаСервере(Знач АдресРезультата, Знач ИмяГрафика)
	
	ТаблицаГрафика = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ИмяГрафика = "ГрафикОплатУслуг" Тогда
		ТаблицаПриемник = ГрафикОплатУслуг;
	ИначеЕсли ИмяГрафика = "ГрафикНачисленияУслуг" Тогда
		ТаблицаПриемник = ГрафикНачисленияУслуг;
	ИначеЕсли ИмяГрафика = "ГрафикНачисленияПроцентов" Тогда
		ТаблицаПриемник = ГрафикНачисленияПроцентов;
	КонецЕсли;

	ТаблицаПриемник.Загрузить(ТаблицаГрафика);
	ТаблицаПриемник.Сортировать("Дата");
	
	ВнеоборотныеАктивы.ЗаполнитьСуммыНДСВГрафиках(ГрафикОплатУслуг, ГрафикНачисленияУслуг, СтавкаНДС);
	
	Если ИмяГрафика = "ГрафикОплатУслуг" Тогда
		ОбновитьПодвалГрафикаОплатУслуг(ЭтотОбъект);
	ИначеЕсли ИмяГрафика = "ГрафикНачисленияУслуг" Тогда
		ОбновитьПодвалГрафикаНачисленияУслуг(ЭтотОбъект);
	КонецЕсли;

	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодтверждениеЗакрытияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗавершитьРедактирование();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	ОчиститьСообщения();

	Если НЕ ПроверитьЗаполнение() Тогда
		ТекстВопроса = НСтр("ru = 'Не заполнены обязательные поля.
                             |Можно завершить редактирование или продолжить редактирование.';
                             |en = 'Some of the required fields are not filled in.
                             |You can choose to finish editing or continue.'");
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Завершить редактирование';
															|en = 'Finish editing'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Продолжить редактирование';
															|en = 'Continue editing'"));
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьРедактированиеЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Да);
	Иначе
		ЗавершитьРедактированиеЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактированиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Модифицированность = Ложь;

	Закрыть(ПоместиьГрафикиВХранилище());
	
КонецПроцедуры

&НаСервере
Функция ПоместиьГрафикиВХранилище()
	
	ГрафикНачисленияУслуг.Сортировать("Дата");
	ГрафикОплатУслуг.Сортировать("Дата");
	ГрафикНачисленияПроцентов.Сортировать("Дата");

	ГрафикиДоговора = Новый Структура;
	ГрафикиДоговора.Вставить("ГрафикНачисленияПроцентовВведенВручную", ГрафикНачисленияПроцентовВведенВручную);
	ГрафикиДоговора.Вставить("ГрафикНачисленияУслуг", ГрафикНачисленияУслуг.Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикОплатУслуг", ГрафикОплатУслуг.Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикНачисленияПроцентов", ГрафикНачисленияПроцентов.Выгрузить());
	
	СуммаПроцентов = 0;
	Для Каждого СтрокаПроценты Из ГрафикНачисленияПроцентов Цикл
		СуммаПроцентов = СуммаПроцентов + СтрокаПроценты.Проценты;
	КонецЦикла;
	ГрафикиДоговора.Вставить("СуммаПроцентов", СуммаПроцентов);
	
	Возврат ПоместитьВоВременноеХранилище(ГрафикиДоговора, УникальныйИдентификатор);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвалГрафикаОплатУслуг(Форма)
	
	ПараметрыГрафика = ВнеоборотныеАктивыКлиентСервер.ПараметрыГрафикаОплатУслуг(
		Форма.ГрафикОплатУслуг, Форма.ДатаНачалаАренды);
	
	Форма.Элементы.ДекорацияГрафикОплатУслугПодвал.Заголовок = 
		СтрШаблон(НСтр("ru = 'Периодичность: %1';
						|en = 'Frequency: %1'"), ПараметрыГрафика.Периодичность);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвалГрафикаНачисленияУслуг(Форма)
	
	ПараметрыГрафика = ВнеоборотныеАктивыКлиентСервер.ПараметрыГрафикаНачисленияУслуг(
		Форма.ГрафикНачисленияУслуг, Форма.СуммаНДСВыкупаПредметовАренды);
	
	Форма.Элементы.ДекорацияГрафикНачисленияУслуг.Заголовок = 
		СтрШаблон(НСтр("ru = 'Периодичность: %1';
						|en = 'Frequency: %1'"), ПараметрыГрафика.Периодичность);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Форма.Начисление_ОбеспечительныйПлатеж_Итого = Форма.ГрафикНачисленияУслуг.Итог("ОбеспечительныйПлатеж");
	Форма.Начисление_УслугаПоАренде_Итого = Форма.ГрафикНачисленияУслуг.Итог("УслугаПоАренде");
	
	Форма.Начисление_НДС_Итого =
		+ Форма.СуммаНДСВыкупаПредметовАренды 
		+ Форма.ГрафикНачисленияУслуг.Итог("УслугаПоАрендеНДС")
		+ Форма.ГрафикНачисленияУслуг.Итог("ОбеспечительныйПлатежНДС");
	
	Форма.Оплата_ВыкупнаяСтоимость_Итого = Форма.ГрафикОплатУслуг.Итог("ВыкупнаяСтоимость");
	Форма.Оплата_ОбеспечительныйПлатеж_Итого = Форма.ГрафикОплатУслуг.Итог("ОбеспечительныйПлатеж");
	Форма.Оплата_УслугаПоАренде_Итого = Форма.ГрафикОплатУслуг.Итог("УслугаПоАренде");
	
	Форма.Оплата_НДС_Итого = 
		Форма.ГрафикОплатУслуг.Итог("УслугаПоАрендеНДС")
		+ Форма.ГрафикОплатУслуг.Итог("ОбеспечительныйПлатежНДС")
		+ Форма.ГрафикОплатУслуг.Итог("ВыкупнаяСтоимостьНДС");
	
	Форма.Оплата_КоличествоСтрок = Форма.ГрафикОплатУслуг.Количество();
	Форма.Начисление_КоличествоСтрок = Форма.ГрафикНачисленияУслуг.Количество();
	Форма.Проценты_КоличествоСтрок = Форма.ГрафикНачисленияПроцентов.Количество();

	Начисление_Итого = 
		Форма.СуммаВыкупаПредметовАренды
		+ Форма.Начисление_ОбеспечительныйПлатеж_Итого
		+ Форма.Начисление_УслугаПоАренде_Итого;
		
	Оплата_Итого = 
		Форма.Оплата_ВыкупнаяСтоимость_Итого
		+ Форма.Оплата_ОбеспечительныйПлатеж_Итого
		+ Форма.Оплата_УслугаПоАренде_Итого;
	
	Форма.Начисление_Итого = ?(Начисление_Итого <> 0, Строка(Начисление_Итого) + " (" + Форма.ВалютаДокументаПредставление + ")", "");
	Форма.Оплата_Итого = ?(Оплата_Итого <> 0, Строка(Оплата_Итого) + " (" + Форма.ВалютаДокументаПредставление + ")", "");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеГрафика()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УсловияДоговоровАренды.АктуальныеУсловияДоговора КАК АктуальныеУсловияДоговора,
	|	УсловияДоговоровАренды.СтавкаНДС КАК СтавкаНДС,
	|	УсловияДоговоровАренды.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную
	|ПОМЕСТИТЬ втУсловияДоговоровАренды
	|ИЗ
	|	РегистрСведений.УсловияДоговоровАренды.СрезПоследних(, Договор = &Договор) КАК УсловияДоговоровАренды
	|ИНДЕКСИРОВАТЬ ПО
	|	АктуальныеУсловияДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УсловияДоговоровАренды.СтавкаНДС КАК СтавкаНДС,
	|	УсловияДоговоровАренды.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную
	|ИЗ
	|	втУсловияДоговоровАренды КАК УсловияДоговоровАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеГрафика.Дата КАК Дата,
	|	ДанныеГрафика.УслугаПоАренде КАК УслугаПоАренде,
	|	ДанныеГрафика.УслугаПоАрендеНДС КАК УслугаПоАрендеНДС,
	|	ДанныеГрафика.ОбеспечительныйПлатеж КАК ОбеспечительныйПлатеж,
	|	ДанныеГрафика.ОбеспечительныйПлатежНДС КАК ОбеспечительныйПлатежНДС,
	|	ДанныеГрафика.ВыкупнаяСтоимость КАК ВыкупнаяСтоимость,
	|	ДанныеГрафика.ВыкупнаяСтоимостьНДС КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	РегистрСведений.ГрафикНачисленияУслугПоАренде КАК ДанныеГрафика
	|ГДЕ
	|	ДанныеГрафика.АктуальныеУсловияДоговора В (ВЫБРАТЬ Т.АктуальныеУсловияДоговора ИЗ втУсловияДоговоровАренды КАК Т)
	|	И ДанныеГрафика.Договор = &Договор
	|	И ДанныеГрафика.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеГрафика.Дата КАК Дата,
	|	ДанныеГрафика.УслугаПоАренде КАК УслугаПоАренде,
	|	ДанныеГрафика.УслугаПоАрендеНДС КАК УслугаПоАрендеНДС,
	|	ДанныеГрафика.ОбеспечительныйПлатеж КАК ОбеспечительныйПлатеж,
	|	ДанныеГрафика.ОбеспечительныйПлатежНДС КАК ОбеспечительныйПлатежНДС,
	|	ДанныеГрафика.ВыкупнаяСтоимость + ДанныеГрафика.ВыкупнаяСтоимостьАванс КАК ВыкупнаяСтоимость,
	|	ДанныеГрафика.ВыкупнаяСтоимостьНДС КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	РегистрСведений.ГрафикОплатУслугПоАренде КАК ДанныеГрафика
	|ГДЕ
	|	ДанныеГрафика.АктуальныеУсловияДоговора В (ВЫБРАТЬ Т.АктуальныеУсловияДоговора ИЗ втУсловияДоговоровАренды КАК Т)
	|	И ДанныеГрафика.Договор = &Договор
	|	И ДанныеГрафика.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеГрафика.Дата КАК Дата,
	|	ДанныеГрафика.Проценты КАК Проценты
	|ИЗ
	|	РегистрСведений.ГрафикНачисленияПроцентовПоАренде КАК ДанныеГрафика
	|ГДЕ
	|	ДанныеГрафика.АктуальныеУсловияДоговора В (ВЫБРАТЬ Т.АктуальныеУсловияДоговора ИЗ втУсловияДоговоровАренды КАК Т)
	|	И ДанныеГрафика.Договор = &Договор
	|	И ДанныеГрафика.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Договор", Параметры.Договор);
	
	Результат = Запрос.ВыполнитьПакет();
	
	СписокРеквизитов = "Организация,ВалютаВзаиморасчетов,ТипДоговора,Балансодержатель,ДатаНачалаДействия,
	|ВалютаВзаиморасчетов,СпособОпределенияСтоимостиАктивов,
	|ЕстьОбеспечительныйПлатеж,ЕстьВыкупПредметовАренды";
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Договор, СписокРеквизитов);
	
	СлужебныеПараметрыФормы = Новый Структура;
	СлужебныеПараметрыФормы.Вставить("РеквизитыДоговора", РеквизитыДоговора);
	СлужебныеПараметрыФормы.Вставить(
		"ИспользуетсяУчетАрендыПоФСБУ25_2018",
		ВнеоборотныеАктивы.ИспользуетсяУчетАрендыПоФСБУ25_2018(РеквизитыДоговора.Организация));
	
	ПараметрыГрафика = Новый Структура;
	
	ПараметрыГрафика.Вставить("ТолькоПросмотр", Истина);
	ПараметрыГрафика.Вставить("СлужебныеПараметрыФормы", СлужебныеПараметрыФормы);
	ПараметрыГрафика.Вставить("ВалютаДокументаПредставление", Строка(РеквизитыДоговора.ВалютаВзаиморасчетов));
	ПараметрыГрафика.Вставить("ПроцентнаяСтавка", 0);
	ПараметрыГрафика.Вставить("ПриведеннаяСтоимость", 0);
	ПараметрыГрафика.Вставить("ДатаНачалаАренды", '000101010000');	
	
	Выборка = Результат[Результат.ВГраница() - 3].Выбрать();
	Если Выборка.Следующий() Тогда
		ПараметрыГрафика.Вставить("СтавкаНДС", Выборка.СтавкаНДС);
		ПараметрыГрафика.Вставить("ГрафикНачисленияПроцентовВведенВручную", Выборка.ГрафикНачисленияПроцентовВведенВручную);
	Иначе
		ПараметрыГрафика.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
		ПараметрыГрафика.Вставить("ГрафикНачисленияПроцентовВведенВручную", Ложь);
	КонецЕсли;
	
	ГрафикиДоговора = Новый Структура;
	ГрафикиДоговора.Вставить("ГрафикНачисленияУслуг", Результат[Результат.ВГраница() - 2].Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикОплатУслуг", Результат[Результат.ВГраница() - 1].Выгрузить());
	ГрафикиДоговора.Вставить("ГрафикНачисленияПроцентов", Результат[Результат.ВГраница()].Выгрузить());
	ПараметрыГрафика.Вставить("ГрафикиДоговора", ПоместитьВоВременноеХранилище(ГрафикиДоговора, УникальныйИдентификатор));
	
	ПараметрыГрафика.Вставить("СуммаВыкупаПредметовАренды", ГрафикиДоговора.ГрафикНачисленияУслуг.Итог("ВыкупнаяСтоимость"));
	ПараметрыГрафика.Вставить("СуммаНДСВыкупаПредметовАренды", ГрафикиДоговора.ГрафикНачисленияУслуг.Итог("ВыкупнаяСтоимостьНДС"));

	Возврат ПараметрыГрафика;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(Знач Форма, Знач ИзмененныеРеквизиты = "")
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Элементы = Форма.Элементы;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикНачисленияПроцентовВведенВручную")
		ИЛИ ОбновитьВсе Тогда
		
		РедактированиеГрафикаДоступно = 
			Форма.ГрафикНачисленияПроцентовВведенВручную
			И НЕ Форма.ТолькоПросмотр;
		
		Элементы.ГрафикНачисленияПроцентов.ИзменятьСоставСтрок = РедактированиеГрафикаДоступно;
		Элементы.ГрафикНачисленияПроцентовДобавить.Доступность = РедактированиеГрафикаДоступно;
		Элементы.ГрафикНачисленияПроцентовЗагрузитьГрафик_ГрафикПроцентов.Доступность = РедактированиеГрафикаДоступно;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция РассчитатьСуммуНДС(СуммаСНДС)
	
	ТекПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(СтавкаНДС);
	Возврат УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СуммаСНДС, ТекПроцентНДС, Истина);
	
КонецФункции

#КонецОбласти

