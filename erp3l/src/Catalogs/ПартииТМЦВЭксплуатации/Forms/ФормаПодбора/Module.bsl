
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++ НЕ УТ
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПараметрыФормы();
	УстановитьСвойстваДинамическогоСписка();
	УстановитьОтборы(ЭтотОбъект);
	
	НастроитьЗависимыеЭлементыФормыНаСервере();

	//-- НЕ УТ
	
	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборНазначенныйРесурсПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьПараметрыСписка();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьОтборы(ЭтотОбъект);
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьОтборы(ЭтотОбъект);
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборФизическоеЛицоПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьОтборы(ЭтотОбъект);
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДатаПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьПараметрыСписка();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИнвентарныйУчетПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьПараметрыСписка();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.

КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодНачалаЭксплуатацииПриИзменении(Элемент)
	
	//++ НЕ УТ
	УстановитьПараметрыСписка();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//++ НЕ УТ
	ЗавершитьВыбор();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	//++ НЕ УТ
	ЗавершитьВыбор();
	//-- НЕ УТ

	Возврат; // в УТ пустой обработчик.
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ТМЦВЭксплуатацииСервер.УстановитьУсловноеОформлениеИнвентарногоНомера(
		ЭтотОбъект,
		"СписокИнвентарныйНомер",
		"Список.ИнвентарныйУчет",
		"Список.Партия");
	
	ТМЦВЭксплуатацииСервер.УстановитьУсловноеОформлениеФизЛица(
		ЭтотОбъект,
		"СписокФизическоеЛицо",
		"Список.УчетПоФизЛицам",
		"Список.Партия");
		
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере()

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности") Тогда
		Элементы.СписокНаправлениеДеятельности.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Элементы.СписокХарактеристика.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры")
		ИЛИ НЕ ТМЦВЭксплуатацииПовтИсп.ВозможенУчетСерийВЭксплуатации() Тогда
		Элементы.СписокСерия.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПараметрыФормы()
	
	Параметры.Свойство("Дата", ОтборДата);
	Параметры.Свойство("Организация", ОтборОрганизация);
	Параметры.Свойство("Подразделение", ОтборПодразделение);
	Параметры.Свойство("Номенклатура", ОтборНоменклатура);
	Параметры.Свойство("Характеристика", ОтборХарактеристика);
	Параметры.Свойство("Серия", ОтборСерия);
	Параметры.Свойство("СтатусУказанияСерий", ОтборСтатусУказанияСерий);
	Параметры.Свойство("ФизическоеЛицо", ОтборФизическоеЛицо);
	Параметры.Свойство("ТекущийРегистратор", ТекущийРегистратор);
	Параметры.Свойство("ИнвентарныйНомер", ОтборИнвентарныйНомер);
	Параметры.Свойство("СпособПогашенияСтоимостиБУ", ОтборСпособПогашенияСтоимостиБУ);

	Если Параметры.Свойство("ИнвентарныйУчет") Тогда
		ОтборИнвентарныйУчет = ?(Параметры.ИнвентарныйУчет, 2, 1);
	ИначеЕсли Параметры.Свойство("ИнвентарныйНомер")
		И ЗначениеЗаполнено(Параметры.ИнвентарныйНомер) Тогда
		ОтборИнвентарныйУчет = 2;
	Иначе
		ОтборИнвентарныйУчет = 0;	
	КонецЕсли;
	
	ПодборПоДаннымСтроки = 
		Параметры.Свойство("Номенклатура")
		ИЛИ Параметры.Свойство("Характеристика")
		ИЛИ Параметры.Свойство("Серия");
		
	ИспользоватьОтборПоИнвентарномуНомеру = Параметры.Свойство("ИнвентарныйНомер");
	
	Элементы.ОтборИнвентарныйУчет.ТолькоПросмотр = 
		Параметры.Свойство("ИнвентарныйУчет")
		ИЛИ Параметры.Свойство("ИнвентарныйНомер")
			И ЗначениеЗаполнено(Параметры.ИнвентарныйНомер);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваДинамическогоСписка()
	
	ОписаниеЗапроса = ТМЦВЭксплуатацииСервер.ОписаниеЗапросаДляВыбораПартииТМЦ(ПараметрыПодбора());

	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = ОписаниеЗапроса.ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	УстановитьПараметрыСписка();

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписка(ОписаниеЗапроса = Неопределено)
	
	Если ОписаниеЗапроса = Неопределено Тогда
		ОписаниеЗапроса = ТМЦВЭксплуатацииСервер.ОписаниеЗапросаДляВыбораПартииТМЦ(ПараметрыПодбора());
	КонецЕсли;

	Для Каждого ОписаниеПараметра Из ОписаниеЗапроса.ПараметрыЗапроса Цикл
		Список.Параметры.УстановитьЗначениеПараметра(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыПодбора()
	
	ПараметрыПодбора = ТМЦВЭксплуатацииКлиентСервер.ПараметрыПодбораТМЦВЭксплуатации();
	ПараметрыПодбора.Дата = ОтборДата;
	ПараметрыПодбора.НазначенныйРесурс = ОтборНазначенныйРесурс;
	ПараметрыПодбора.Организация = ОтборОрганизация;
	ПараметрыПодбора.Подразделение = ОтборПодразделение;
	ПараметрыПодбора.ДатаНачалаЭксплуатацииС = ОтборПериодНачалаЭксплуатации.ДатаНачала;
	ПараметрыПодбора.ДатаНачалаЭксплуатацииПо = ОтборПериодНачалаЭксплуатации.ДатаОкончания;
	ПараметрыПодбора.ИнвентарныйУчет = ОтборИнвентарныйУчет;
	ПараметрыПодбора.ДляДинамическогоСписка = Истина;
	
	Если ЗначениеЗаполнено(ТекущийРегистратор) Тогда
		ПараметрыПодбора.ТекущийРегистратор = ТекущийРегистратор;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборСпособПогашенияСтоимостиБУ) Тогда
		ПараметрыПодбора.СпособПогашенияСтоимостиБУ = ОтборСпособПогашенияСтоимостиБУ;
	КонецЕсли;
	
	Если ПодборПоДаннымСтроки Тогда
		ПараметрыПодбора.Номенклатура = ОтборНоменклатура;
		ПараметрыПодбора.Характеристика = ОтборХарактеристика;
		ПараметрыПодбора.Серия = ОтборСерия;
		ПараметрыПодбора.СтатусУказанияСерий = ОтборСтатусУказанияСерий;
		ПараметрыПодбора.ФизическоеЛицо = ОтборФизическоеЛицо;
	КонецЕсли;
	
	Если ИспользоватьОтборПоИнвентарномуНомеру Тогда
		ПараметрыПодбора.ИнвентарныйНомер = ОтборИнвентарныйНомер;
	КонецЕсли;

	Возврат ПараметрыПодбора;
		
КонецФункции

&НаКлиенте
Процедура ЗавершитьВыбор()
	
	Если ЗакрыватьПриВыборе Тогда
		
		КоллекцияСтрок = Новый Массив;
		
		ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
		
		Если ТекущаяСтрока <> Неопределено Тогда
			КоллекцияСтрок.Добавить(ТекущаяСтрока);
		КонецЕсли;
		
	Иначе
		КоллекцияСтрок = Элементы.Список.ВыделенныеСтроки;
	КонецЕсли;
	
	МассивРезультат = Новый Массив;
	Для Каждого ИдентификаторСтроки Из КоллекцияСтрок Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		
		ВыбранноеЗначение = ТМЦВЭксплуатацииКлиентСервер.НовоеЗначениеВыбора();
		
		ЗаполнитьЗначенияСвойств(ВыбранноеЗначение, ДанныеСтроки);
		ВыбранноеЗначение.КоличествоУпаковок = ДанныеСтроки.Количество;
		
		МассивРезультат.Добавить(ВыбранноеЗначение);
	
	КонецЦикла;
	
	Если МассивРезультат.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать ТМЦ в эксплуатации';
									|en = 'Select inventory in operation'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ЗакрыватьПриВыборе Тогда
		ОповеститьОВыборе(МассивРезультат[0]);
	Иначе
		ОповеститьОВыборе(МассивРезультат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборы(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список, "Организация", Форма.ОтборОрганизация,,, ЗначениеЗаполнено(Форма.ОтборОрганизация));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список, "Подразделение", Форма.ОтборПодразделение,,, ЗначениеЗаполнено(Форма.ОтборПодразделение));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список, "ФизическоеЛицо", Форма.ОтборФизическоеЛицо,,, ЗначениеЗаполнено(Форма.ОтборФизическоеЛицо));
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ
