#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов справочника.
//  ТабличныеЧасти - Структура из КлючИЗначение - данные заполнения табличных частей.
//                                                Состав колонок соответствует набору реквизитов табличных частей.
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	СвойстваПредопределенныхЭлементовИзМакета = СвойстваПредопределенныхЭлементовИзМакета("ПараметрыВидовОперацийУХ");

	
	#Область БДДС_Приход
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	ИмяПредопределенныхДанных = "БДДС_Приход";
	Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
	Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
	ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'БДДС, Приход';
																				|en = ''", КодыЯзыков); // @НСтр-2
		#Область ВзносНаличнымиИзКассы
		ИмяПредопределенныхДанных = "ВзносНаличнымиИзКассы";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Взнос наличными из кассы';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВзносНаличнымиИзКассы
		
		#Область ВозвратДепозита
		ИмяПредопределенныхДанных = "ВозвратДепозита";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат депозита';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратДепозита
		
		#Область ВозвратДенежныхСредствОтДругойОрганизации
		ИмяПредопределенныхДанных = "ВозвратДенежныхСредствОтДругойОрганизации";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат ДС от другой организации';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратДенежныхСредствОтДругойОрганизации

		#Область ВозвратЗаймаКонтрагентом
		ИмяПредопределенныхДанных = "ВозвратЗаймаКонтрагентом";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат займа контрагентом';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратЗаймаКонтрагентом

		#Область ВозвратЗаймаРаботником
		ИмяПредопределенныхДанных = "ВозвратЗаймаРаботником";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат займа работником';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратЗаймаРаботником
		
		#Область ВозвратНеперечисленныхДС
		ИмяПредопределенныхДанных = "ВозвратНеперечисленныхДС";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат неперечисленной зарплаты на лицевые счета';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратНеперечисленныхДС
		
		#Область ВозвратОтПодотчетногоЛица
		ИмяПредопределенныхДанных = "ВозвратОтПодотчетногоЛица";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат от подотчетного лица';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратОтПодотчетногоЛица
		
		#Область ВозвратОтПоставщика
		ИмяПредопределенныхДанных = "ВозвратОтПоставщика";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат от поставщика';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратОтПоставщика

		#Область ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту
		ИмяПредопределенныхДанных = "ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат по зарплатному проекту';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту

		#Область ПоступлениеИнкассированныхСредств
		ИмяПредопределенныхДанных = "ПоступлениеИнкассированныхСредств";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Инкассация в банк';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеИнкассированныхСредств
		
		#Область ИнкассацияДенежныхСредствИзБанка
		ИмяПредопределенныхДанных = "ИнкассацияДенежныхСредствИзБанка";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Инкассация из банка';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ИнкассацияДенежныхСредствИзБанка

		#Область ОплатаОтПокупателя
		ИмяПредопределенныхДанных = "ОплатаОтПокупателя";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата от покупателя';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ОплатаОтПокупателя
		
		#Область ОплатаОтФакторинговойКомпании
		ИмяПредопределенныхДанных = "ОплатаОтФакторинговойКомпании";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата от факторинговой компании';              
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ОплатаОтФакторинговойКомпании

		#Область ПереводСДругогоСчета
		ИмяПредопределенныхДанных = "ПереводСДругогоСчета";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перевод с другого счета';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПереводСДругогоСчета

		#Область ПолучениеЗаймаОтКонтрагента
		ИмяПредопределенныхДанных = "ПолучениеЗаймаОтКонтрагента";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Получение займа от контрагента';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПолучениеЗаймаОтКонтрагента

		#Область ПолучениеКредитаВБанке
		ИмяПредопределенныхДанных = "ПолучениеКредитаВБанке";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Получение кредита в банке';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПолучениеКредитаВБанке

		#Область ПолучениеНаличныхВБанке
		ИмяПредопределенныхДанных = "ПолучениеНаличныхВБанке";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Получение наличных в банке';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПолучениеНаличныхВБанке
		
		#Область ВнутреннееПоступлениеДенежныхСредств
		ИмяПредопределенныхДанных = "ВнутреннееПоступлениеДенежныхСредств";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление денежных средств между организацией и филиалом';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВнутреннееПоступлениеДенежныхСредств
		
		#Область ПоступлениеДенежныхСредствИзКассыККМ
		
		ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзКассыККМ";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление ДС из кассы ККМ';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеДенежныхСредствИзКассыККМ
		
		#Область ПоступлениеДенежныхСредствИзДругойОрганизации
		ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзДругойОрганизации";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление ДС от другой организации';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеДенежныхСредствИзДругойОрганизации
		
		#Область ПоступлениеДенежныхСредствИзДругойКассы
		ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзДругойКассы";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление из другой кассы';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеДенежныхСредствИзДругойКассы
		
		#Область ПоступлениеЛичныхСредствПредпринимателя
		ИмяПредопределенныхДанных = "ПоступлениеЛичныхСредствПредпринимателя";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление личных средств предпринимателя';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеЛичныхСредствПредпринимателя
		
		#Область ПоступлениеОтПродажиВалюты
		ИмяПредопределенныхДанных = "ПоступлениеОтПродажиВалюты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление от продажи валюты';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеОтПродажиВалюты
		
		#Область ПоступлениеПоПлатежнымКартам
		ИмяПредопределенныхДанных = "ПоступлениеПоПлатежнымКартам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление по платежным картам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеПоПлатежнымКартам
		
		#Область ПоступлениеПриобретеннойВалюты
		ИмяПредопределенныхДанных = "ПоступлениеПриобретеннойВалюты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступление приобретенной валюты';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступлениеПриобретеннойВалюты
		
		#Область ПоступленияПоДепозитам
		ИмяПредопределенныхДанных = "ПоступленияПоДепозитам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступления по депозитам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступленияПоДепозитам

		#Область ПоступленияПоКредитамИЗаймам
		ИмяПредопределенныхДанных = "ПоступленияПоКредитамИЗаймам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступления по кредитам и займам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступленияПоКредитамИЗаймам
		
		#Область ПоступленияПоЦеннымБумагам
		ИмяПредопределенныхДанных = "ПоступленияПоЦеннымБумагам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Поступления по ценным бумагам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПоступленияПоЦеннымБумагам
		
		#Область ПрочееПоступление
		ИмяПредопределенныхДанных = "ПрочееПоступление";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочее поступление';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочееПоступление
		
		#Область ПрочиеПоступленияОтКонтрагентов
		ИмяПредопределенныхДанных = "ПрочиеПоступленияОтКонтрагентов";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие поступления от контрагентов';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочиеПоступленияОтКонтрагентов
		
		#Область РозничнаяВыручка
		ИмяПредопределенныхДанных = "РозничнаяВыручка";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Приход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Розничная выручка';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РозничнаяВыручка
	
	#КонецОбласти
	
	#Область БДДС_Расход
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	ИмяПредопределенныхДанных = "БДДС_Расход";
	Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
	Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
	ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);

	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'БДДС, Расход';
																				|en = ''", КодыЯзыков); // @НСтр-2
	
		#Область ВзносНаличнымиВБанк
		ИмяПредопределенныхДанных = "ВзносНаличнымиВБанк";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Взнос наличными в банк';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВзносНаличнымиВБанк
		
		#Область ВозвратДенежныхСредствВДругуюОрганизацию
		ИмяПредопределенныхДанных = "ВозвратДенежныхСредствВДругуюОрганизацию";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат ДС другой организации';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратДенежныхСредствВДругуюОрганизацию
		
		#Область ВозвратЗаймаКонтрагенту
		ИмяПредопределенныхДанных = "ВозвратЗаймаКонтрагенту";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат займа контрагенту';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратЗаймаКонтрагенту
		
		#Область ВозвратПокупателю
		ИмяПредопределенныхДанных = "ВозвратПокупателю";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат покупателю';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратПокупателю
		
		#Область ВозвратРозничномуПокупателю
		ИмяПредопределенныхДанных = "ВозвратРозничномуПокупателю";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Возврат розничному покупателю';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВозвратРозничномуПокупателю
		
		#Область ВыдачаДенежныхСредствВДругуюКассу
		ИмяПредопределенныхДанных = "ВыдачаДенежныхСредствВДругуюКассу";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выдача в другую кассу';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВыдачаДенежныхСредствВДругуюКассу
		
		#Область ВыдачаДенежныхСредствВКассуККМ
		ИмяПредопределенныхДанных = "ВыдачаДенежныхСредствВКассуККМ";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выдача ДС в кассу ККМ';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВыдачаДенежныхСредствВКассуККМ
		
		#Область ВыдачаЗаймаКонтрагенту
		ИмяПредопределенныхДанных = "ВыдачаЗаймаКонтрагенту";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выдача займа контрагенту';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВыдачаЗаймаКонтрагенту
		
		#Область ВыдачаЗаймаРаботнику
		ИмяПредопределенныхДанных = "ВыдачаЗаймаРаботнику";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выдача займа работнику';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВыдачаЗаймаРаботнику
		
		#Область ВыплатаЗарплаты
		ИмяПредопределенныхДанных = "ВыплатаЗарплаты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выплата зарплаты';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВыплатаЗарплаты
		
		#Область Инкассация
		ИмяПредопределенныхДанных = "Инкассация";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Инкассация в банк';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //Инкассация
		
		#Область СнятиеНаличныхВКассу
		ИмяПредопределенныхДанных = "СнятиеНаличныхВКассу";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Инкассация из банка';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //СнятиеНаличныхВКассу
		
		#Область КомиссияБанка
		ИмяПредопределенныхДанных = "КомиссияБанка";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Комиссия банка';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //КомиссияБанка
		
		#Область ЛичныеСредстваПредпринимателя
		ИмяПредопределенныхДанных = "ЛичныеСредстваПредпринимателя";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Личные средства предпринимателя';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ЛичныеСредстваПредпринимателя
		
		#Область ОплатаАрендодателю
		ИмяПредопределенныхДанных = "ОплатаАрендодателю";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата арендодателю';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ОплатаАрендодателю
		
		#Область ОплатаДенежныхСредствВДругуюОрганизацию
		ИмяПредопределенныхДанных = "ОплатаДенежныхСредствВДругуюОрганизацию";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата ДС в другую организацию';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ОплатаДенежныхСредствВДругуюОрганизацию
		
		#Область ОплатаПоставщику
		ИмяПредопределенныхДанных = "ОплатаПоставщику";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата поставщику';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ОплатаПоставщику
		
		#Область ПереводНаДругойСчетОрганизации
		ИмяПредопределенныхДанных = "ПереводНаДругойСчетОрганизации";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перевод на другой счет';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПереводНаДругойСчетОрганизации
		
		#Область ВнутренняяПередачаДенежныхСредств
		ИмяПредопределенныхДанных = "ВнутренняяПередачаДенежныхСредств";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Передача ДС между организацией и филиалами';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ВнутренняяПередачаДенежныхСредств
		
		#Область ПеречислениеДепонированнойЗаработнойПлаты
		ИмяПредопределенныхДанных = "ПеречислениеДепонированнойЗаработнойПлаты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление депонированной заработной платы';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеДепонированнойЗаработнойПлаты
		
		#Область ПеречислениеДивидендов
		ИмяПредопределенныхДанных = "ПеречислениеДивидендов";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление дивидендов';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеДивидендов
		
		#Область ПеречислениеЗаработнойПлатыПоВедомостям
		ИмяПредопределенныхДанных = "ПеречислениеЗаработнойПлатыПоВедомостям";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление заработной платы по ведомостям';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеЗаработнойПлатыПоВедомостям
		
		#Область ПеречислениеЗаработнойПлатыРаботнику
		ИмяПредопределенныхДанных = "ПеречислениеЗаработнойПлатыРаботнику";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление заработной платы работнику';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеЗаработнойПлатыРаботнику
		
		#Область ПеречислениеПодотчетномуЛицу
		ИмяПредопределенныхДанных = "ПеречислениеПодотчетномуЛицу";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление подотчетному лицу';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеПодотчетномуЛицу
		
		#Область ПеречислениеСотрудникуПоДоговоруПодряда
		ИмяПредопределенныхДанных = "ПеречислениеСотрудникуПоДоговоруПодряда";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление сотруднику по договору подряда';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеСотрудникуПоДоговоруПодряда
		
		#Область ПеречислениеТаможне
		ИмяПредопределенныхДанных = "ПеречислениеТаможне";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Перечисление таможне';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПеречислениеТаможне
		
		#Область ПлатежПоКредитуИлиЗайму
		ИмяПредопределенныхДанных = "ПлатежПоКредитуИлиЗайму";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Платеж по кредиту или займу';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПлатежПоКредитуИлиЗайму
		
		#Область ПлатежиПоЦеннымБумагам
		ИмяПредопределенныхДанных = "ПлатежиПоЦеннымБумагам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Платежи по ценным бумагам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПлатежиПоЦеннымБумагам
		
		#Область ПриобретениеВалюты
		ИмяПредопределенныхДанных = "ПриобретениеВалюты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Приобретение валюты';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПриобретениеВалюты
		
		#Область ПродажаВалюты
		ИмяПредопределенныхДанных = "ПродажаВалюты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Продажа валюты';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПродажаВалюты
		
		#Область ПрочееСписание
		ИмяПредопределенныхДанных = "ПрочееСписание";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочее списание';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочееСписание
		
		#Область ПрочиеПлатежиКонтрагенту
		ИмяПредопределенныхДанных = "ПрочиеПлатежиКонтрагенту";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие платежи контрагенту';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочиеПлатежиКонтрагенту
		
		#Область РазмещениеСредствНаДепозите
		ИмяПредопределенныхДанных = "РазмещениеСредствНаДепозите";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Размещение средств на депозите';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РазмещениеСредствНаДепозите
		
		#Область УплатаНалога
		ИмяПредопределенныхДанных = "УплатаНалога";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Уплата налога';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //УплатаНалога
		
		#Область УплатаНалогаЗаТретьихЛиц
		ИмяПредопределенныхДанных = "УплатаНалогаЗаТретьихЛиц";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДДС_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Уплата налога за третьих лиц';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //УплатаНалогаЗаТретьихЛиц
				
	#КонецОбласти
	
	#Область БДР_Доход
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	ИмяПредопределенныхДанных = "БДР_Доход";
	Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
	Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
	ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'БДР, Доход';
																				|en = ''", КодыЯзыков); // @НСтр-2
		#Область ДоходыОтКонтрагентов
		ИмяПредопределенныхДанных = "ДоходыОтКонтрагентов";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы от контрагентов';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыОтКонтрагентов
		
		#Область ДоходыОтПодотчетныхЛиц
		ИмяПредопределенныхДанных = "ДоходыОтПодотчетныхЛиц";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы от подотчетных лиц';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыОтПодотчетныхЛиц
		
		#Область ДоходыПоДепозитам
		ИмяПредопределенныхДанных = "ДоходыПоДепозитам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы по депозитам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыПоДепозитам
		
		#Область ДоходыПоКредитамИЗаймамКонтрагенты
		ИмяПредопределенныхДанных = "ДоходыПоКредитамИЗаймамКонтрагенты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы по кредитам и займам (контрагенты)';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыПоКредитамИЗаймамКонтрагенты
		
		#Область ДоходыПоКредитамИЗаймамСотрудники
		ИмяПредопределенныхДанных = "ДоходыПоКредитамИЗаймамСотрудники";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы по кредитам и займам (сотрудники)';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыПоКредитамИЗаймамСотрудники
		
		#Область ДоходыПоЦеннымБумагам
		ИмяПредопределенныхДанных = "ДоходыПоЦеннымБумагам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы по ценным бумагам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ДоходыПоЦеннымБумагам
		
		#Область ПрочиеДоходы
		ИмяПредопределенныхДанных = "ПрочиеДоходы";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Доход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие доходы';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочиеДоходы
		
	#КонецОбласти	
	
	#Область БДР_Расход
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	ИмяПредопределенныхДанных = "БДР_Расход";
	Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
	Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
	ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'БДР, Расход';
																				|en = ''", КодыЯзыков); // @НСтр-2
		
		#Область ПрочиеРасходы
		ИмяПредопределенныхДанных = "ПрочиеРасходы";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие расходы';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //ПрочиеРасходы
		
		#Область РасходыПоЗаработнойПлате
		ИмяПредопределенныхДанных = "РасходыПоЗаработнойПлате";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по заработной плате';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасходыПоЗаработнойПлате
		
		#Область РасходыПоКредитамИЗаймамКонтрагенты
		ИмяПредопределенныхДанных = "РасходыПоКредитамИЗаймамКонтрагенты";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по кредитам и займам (контрагенты)';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасходыПоКредитамИЗаймамКонтрагенты
		
		#Область РасходыПоКредитамИЗаймамСотрудники
		ИмяПредопределенныхДанных = "РасходыПоКредитамИЗаймамСотрудники";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по кредитам и займам (сотрудники)';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасходыПоКредитамИЗаймамСотрудники
		
		#Область РасходыПоНалогамИСборам
		ИмяПредопределенныхДанных = "РасходыПоНалогамИСборам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по налогам и сборам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасходыПоНалогамИСборам
		
		#Область РасходыПоЦеннымБумагам
		ИмяПредопределенныхДанных = "РасходыПоЦеннымБумагам";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы по ценным бумагам';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасходыПоЦеннымБумагам
		
		#Область РасчетыСКонтрагентами
		ИмяПредопределенныхДанных = "РасчетыСКонтрагентами";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчеты с контрагентами';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасчетыСКонтрагентами
		
		#Область РасчетыСПодотчетнымиЛицами
		ИмяПредопределенныхДанных = "РасчетыСПодотчетнымиЛицами";
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		Элемент.Родитель = Справочники.ВидыОперацийУХ.БДР_Расход;
		МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчеты с подотчетными лицами';
																						|en = ''", КодыЯзыков); // @НСтр-2
		Элемент.Ссылка = СсылкаНаПредопределенныйЭлемент(ИмяПредопределенныхДанных) ;
		ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета);
		#КонецОбласти //РасчетыСПодотчетнымиЛицами
		
	#КонецОбласти
	
КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.НастройкиХозяйственныхОпераций - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти
	
#Область ОбновлениеИнформационнойБазы

// Обработчик первого запуска.
// Заполняет предопределенные элементы справочника "ВидыОперацийУХ".
//
Процедура ЗаполнитьПредопределенныеВидыОперацийУХ(Параметры = Неопределено) Экспорт
	
	Если Параметры <> Неопределено Тогда
		Если НЕ Параметры.МонопольныйРежим Тогда
			Параметры.МонопольныйРежим = Истина;
			Возврат; // Требуется изменение
		КонецЕсли;
	КонецЕсли;	
	
	ЗаполнитьПредопределенныеЭлементыПоДанымИзКода();
	
КонецПроцедуры

#КонецОбласти                 

#Область ОбработчикЗаполнения

Процедура ЗаполнитьПредопределенныеЭлементыПоДанымИзКода()
	Языки = ЯзыкиКонфигурации();
	МетаданныеОбъекта = Метаданные.Справочники.ВидыОперацийУХ;
	
	ЛокализуемыеРеквизитыОбъекта = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	ПредопределенныеДанные = ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизитыОбъекта);
	
	МультиязычныеСтрокиВРеквизитах = МультиязычныеСтрокиВРеквизитах(МетаданныеОбъекта);
	ПоддерживаетсяИерархия =  ПредопределенныеДанные.Колонки.Найти("ЭтоГруппа") <> Неопределено;
	
	ТабличныеЧасти = Новый Массив;
	ТабличныеЧасти.Добавить("ДопустимыеВидыДоговоров");
	Для Каждого ДанныеЭлемента Из ПредопределенныеДанные Цикл
		ЭлементСсылка = Справочники.ВидыОперацийУХ[ДанныеЭлемента.ИмяПредопределенныхДанных];
		ЭлементОбъект = ЭлементСсылка.ПолучитьОбъект();
		СписокРеквизитов = "Родитель,ИмяПредопределенныхДанных,Наименование,Код";
		Если НЕ ЭлементОбъект.ЭтоГруппа Тогда
			СписокРеквизитов = СписокРеквизитов + ",ВидБюджета,Предназначение,ТипОперацииБюджетирование,ПриходРасход,ДопустимБезналичныйРасчет,ВидОперацииДДСБезналичныйРасчет,ДопустимНаличныйРасчет,ВидОперацииДДСНаличныйРасчет,ЭтоПеремещениеСобственныхСредств,ВстречныйВидОперацииПереводСобственныхСредств,ВстречныйВидОперацииВГО,ИспользуетсяВЗаявках,ЭтоРасчетыСКонтрагентом,ЭтоРасчетыСФизическимЛицом,ИспользоватьСуммуСтавкуНДС,ЭтоРасчетыПоЦеннымБумагам,ЭтоКонвертацияВалюты,ОсновнойВидДоговора,ЭтоРасчетыПоНалогамИСборам,ЭтоРасчетыБезДоговора,Использовать,ЭтоОсновнойВидОперацииДляХозяйственнойОперации";
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭлементОбъект, ДанныеЭлемента, СписокРеквизитов);
		Если НЕ ЭлементОбъект.ЭтоГруппа Тогда
			Для Каждого ИмяТЧ Из ТабличныеЧасти Цикл
				ЭлементОбъект[ИмяТЧ].Загрузить(ДанныеЭлемента[ИмяТЧ]);
			КонецЦикла;
		КонецЕсли;
		Если ЛокализуемыеРеквизитыОбъекта.Количество() > 0 Тогда
			Если МультиязычныеСтрокиВРеквизитах Тогда
				
				КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодПервогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык1"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодВторогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык2"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
			ИначеЕсли НЕ (ПоддерживаетсяИерархия И ЭлементОбъект.ЭтоГруппа) Тогда
				
				Для каждого КодЯзыка Из Языки Цикл
					Представления = ЭлементОбъект.Представления; // ТабличнаяЧасть - 
					НовоеПредставление = Представления.Добавить();
					НовоеПредставление.КодЯзыка = КодЯзыка;
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						Значение = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
						НовоеПредставление[ИмяЛокализуемогоРеквизита.Ключ] = ?(ЗначениеЗаполнено(Значение), Значение, ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ]);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		ЭлементОбъект.ОбменДанными.Загрузка = Истина;
		//ЭлементОбъект.Записать();
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЭлементОбъект);

	КонецЦикла;
	
КонецПроцедуры

// Возвращает предобределенные даные объекта
// 
// Параметры:
// 	МетаданныеОбъекта - ОбъектМетаданныхСправочник - Метаданные заполняемого справочника
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание
Функция ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизиты = Неопределено) Экспорт  //УХ
	
	КодыЯзыков = ЯзыкиКонфигурации();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъекта.ПолноеИмя());
	Если Не ЗначениеЗаполнено(ЛокализуемыеРеквизиты) Тогда
		ЛокализуемыеРеквизиты = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	КонецЕсли;
	ПредопределенныеДанные = Новый ТаблицаЗначений;
	ТабличныеЧасти = Новый Структура;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ПредопределенныеДанные.Колонки.Добавить(ТабличнаяЧасть.Имя, Новый ОписаниеТипов("ТаблицаЗначений"));
		Таблица = Новый ТаблицаЗначений;
		Для Каждого Реквизит Из ТабличнаяЧасть.СтандартныеРеквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		
		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		ТабличныеЧасти.Вставить(ТабличнаяЧасть.Имя, Таблица);
		
	КонецЦикла;
	
	Если ПредопределенныеДанные.Колонки.Найти("ИмяПредопределенныхДанных") <> Неопределено Тогда
		ПредопределенныеДанные.Индексы.Добавить("ИмяПредопределенныхДанных");
	КонецЕсли;
	
	МенеджерОбъекта.ПриНачальномЗаполненииЭлементов(КодыЯзыков, ПредопределенныеДанные, ТабличныеЧасти);
	Возврат ПредопределенныеДанные;
	
КонецФункции

Процедура ЗаполнитьСвойстваПредопределенногоЭлементаИзМакета(Элемент,СвойстваПредопределенныхЭлементовИзМакета)

	Если СвойстваПредопределенныхЭлементовИзМакета = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	СвойстваЭлемента = СвойстваПредопределенныхЭлементовИзМакета.Получить(Элемент.Ссылка);
	
	Если СвойстваЭлемента = Неопределено тогда
		Возврат;   //Выплата зарплаты, нет в макете
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Элемент,СвойстваЭлемента);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область МультиязычностьСервер

Функция ЯзыкиКонфигурации()
	              
	Языки = Новый Массив;
	Для каждого Язык Из Метаданные.Языки Цикл
		Языки.Добавить(Язык.КодЯзыка);
	КонецЦикла;

	Возврат Языки;

КонецФункции

Функция МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Экспорт
	Возврат ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено;
КонецФункции

// Параметры:
// 	ОбъектМетаданных - ОбъектМетаданныхСправочник - Описание
// 	Префикс - Строка - Описание
// Возвращаемое значение:
// 	Соответствие - Описание
Функция НаименованияЛокализуемыхРеквизитыОбъекта(ОбъектМетаданных, Префикс = "")
	
	СписокРеквизитовОбъекта = Новый Соответствие;
	Если МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Тогда
	
		ДлинаСуффиксаЯзыка = СтрДлина("Язык1");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 0
		|	*
		|ИЗ
		|	&ПолноеИмя";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПолноеИмя", ОбъектМетаданных.ПолноеИмя());
		РезультатЗапроса = Запрос.Выполнить();
		
		Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
			Если СтрЗаканчиваетсяНа(Колонка.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Колонка.Имя, "Язык2") Тогда
				СписокРеквизитовОбъекта.Вставить(Префикс + Лев(Колонка.Имя, СтрДлина(Колонка.Имя) - ДлинаСуффиксаЯзыка), Истина);
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		Реквизиты = ОбъектМетаданных.ТабличныеЧасти.Представления.Реквизиты; // КоллекцияКолонокТаблицыЗначений - 
		Для каждого Реквизит Из Реквизиты Цикл
			Если СтрСравнить(Реквизит.Имя, "КодЯзыка") = 0 Тогда
				Продолжить;
			КонецЕсли;
			СписокРеквизитовОбъекта.Вставить(Префикс + Реквизит.Имя, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокРеквизитовОбъекта;
	
КонецФункции

Процедура ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, Языки)
	
	Если ЛокализуемыеРеквизиты[Реквизит.Имя] = Истина Тогда
		ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		Для каждого Язык Из Языки Цикл
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		КонецЦикла;
	Иначе
		Если ЭтоЛокализуемыйРеквизит(Реквизит) Тогда
			ИмяБезСуффикса = ИмяБезСуффиксаЯзык(Реквизит);
			ЛокализуемыеРеквизиты.Вставить(ИмяБезСуффикса, Истина);
			Для каждого Язык Из Языки Цикл
				ПредопределенныеДанные.Колонки.Добавить(ИмяБезСуффикса + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
			КонецЦикла;
		Иначе
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ИмяБезСуффиксаЯзык(Знач Реквизит)
	
	Возврат Лев(Реквизит.Имя, СтрДлина(Реквизит.Имя) - СтрДлина("Язык1"));

КонецФункции

Функция ЭтоЛокализуемыйРеквизит(Реквизит)
	Возврат СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык2");
КонецФункции

Функция ПризнакЛокализуемогоРеквизита()
	Возврат "Локализуемый";
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СвойстваПредопределенныхЭлементовИзМакета(ИмяМакета)

	ОбъектМетаданных = Метаданные.Справочники.ВидыОперацийУХ;
	
	Попытка
		ТабДок = ПолучитьМакет(ИмяМакета);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	ПараметрыВидовОпераций = ОбновлениеИнформационнойБазыУХСлужебный.ПрочитатьПоставляемыеДанныеИзМакета(ОбъектМетаданных, ТабДок);
	
	Для Каждого КлючИЗначение Из ПараметрыВидовОпераций Цикл
		
		ДанныеОбъекта = КлючИЗначение.Значение;
		
		Если НЕ ДанныеОбъекта.Свойство("ВидОперацииДДСНаличныйРасчет")
			Или НЕ ДанныеОбъекта.Свойство("ВидОперацииДДСБезналичныйРасчет") Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ДанныеОбъекта.Вставить("ДопустимНаличныйРасчет", ЗначениеЗаполнено(ДанныеОбъекта.ВидОперацииДДСНаличныйРасчет));
		ДанныеОбъекта.Вставить("ДопустимБезналичныйРасчет", ЗначениеЗаполнено(ДанныеОбъекта.ВидОперацииДДСБезналичныйРасчет));
		
		ВидыБюджетов = ПланыВидовХарактеристик.ВидыБюджетов;
		Если ДанныеОбъекта.ИспользуетсяВЗаявках = Истина Тогда
			// Для БДДС используется в заявках вычисляется по реквизитам ДопустимНал и ДопустимБезнал
			ДанныеОбъекта.ИспользуетсяВЗаявках = ДанныеОбъекта.ВидБюджета = ВидыБюджетов.БюджетДоходовИРасходов 
				ИЛИ (ДанныеОбъекта.ВидБюджета = ВидыБюджетов.БюджетДвиженияДенежныхСредств 
					И (ДанныеОбъекта.ДопустимНаличныйРасчет ИЛИ ДанныеОбъекта.ДопустимБезналичныйРасчет));
		КонецЕсли;
		
		
	КонецЦикла;
	
	ВидыОперацийУХПереопределяемый.ПриЗаполненииПоставляемыхВидовОперацийУХ(ПараметрыВидовОпераций);
	
	Возврат ПараметрыВидовОпераций;
	
КонецФункции // СвойстваПредопределенногоОбъектаИзМакета()

Функция СсылкаНаПредопределенныйЭлемент(ИмяПредопределенногоЭлемента)

	Возврат Справочники.ВидыОперацийУХ[ИмяПредопределенногоЭлемента];

КонецФункции // СсылкаНаПредопределенныйЭлемент()

Функция ВидОперацииУХПоХозяйственнойОперации(ХозяйственнаяОперация) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		Возврат Справочники.ВидыОперацийУХ.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыОперацийУХ.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыОперацийУХ.ЭтоОсновнойВидОперацииДляХозяйственнойОперации
	|			ТОГДА 1000
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Вес
	|ИЗ
	|	Справочник.ВидыОперацийУХ КАК ВидыОперацийУХ
	|ГДЕ
	|	ВидыОперацийУХ.ВидОперацииДДСБезналичныйРасчет = &ХозяйственнаяОперация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вес УБЫВ"
	);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ВидыОперацийУХ.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти


#КонецЕсли
