
Функция ПолучитьДлительность(ШаблонПроцесса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроцессов.Ссылка КАК Этап,
	|	ЭтапыПроцессов.ЭтапыПредшественники.(
	|		ЭтапПроцесса
	|	),
	|	ЭтапыПроцессов.ДлительностьДней КАК ДлительностьЭтапа
	|ИЗ
	|	Справочник.УдалитьЭтапыПроцессов КАК ЭтапыПроцессов
	|ГДЕ
	|	ЭтапыПроцессов.Владелец = &ШаблонПроцесса
	|	И (НЕ ЭтапыПроцессов.ЭтоГруппа)";
	Запрос.УстановитьПараметр("ШаблонПроцесса", ШаблонПроцесса);
	Этапы = Запрос.Выполнить().Выгрузить();
	Этапы.Колонки.Добавить("ОбщаяДлительность");
	МаксДлительность = 0;
	Обрабатывали       = Истина;
	ЕстьНеОбработанные = Истина;
	Пока Обрабатывали и ЕстьНеОбработанные Цикл
		
		Обрабатывали       = Ложь;
		ЕстьНеОбработанные = Ложь;
		
		Для каждого СтрокаЭтапа Из Этапы Цикл
			
			Если Не СтрокаЭтапа.ОбщаяДлительность = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не СтрокаЭтапа.ЭтапыПредшественники.Количество() Тогда
				Обрабатывали = Истина;
				СтрокаЭтапа.ОбщаяДлительность = СтрокаЭтапа.ДлительностьЭтапа;
				МаксДлительность = Макс(МаксДлительность, СтрокаЭтапа.ОбщаяДлительность);
			Иначе
				
				ДлительностьПредшественников = -1;
				
				Для каждого ЭтапПредшественник Из СтрокаЭтапа.ЭтапыПредшественники Цикл
					СтрокаПредшественника = Этапы.Найти(ЭтапПредшественник.ЭтапПроцесса, "Этап");
					Если СтрокаПредшественника = Неопределено или СтрокаПредшественника.ОбщаяДлительность = Неопределено Тогда
						ДлительностьПредшественников = -1;
						Прервать;
					Иначе
						ДлительностьПредшественников = Макс(ДлительностьПредшественников, СтрокаПредшественника.ОбщаяДлительность);
					КонецЕсли;
					
				КонецЦикла;
				
				Если ДлительностьПредшественников = -1 Тогда
					ЕстьНеОбработанные = Истина;
				Иначе
					Обрабатывали       = Истина;
					СтрокаЭтапа.ОбщаяДлительность = ДлительностьПредшественников + СтрокаЭтапа.ДлительностьЭтапа;
					МаксДлительность = Макс(МаксДлительность, СтрокаЭтапа.ОбщаяДлительность);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ЕстьНеОбработанные Тогда
		Возврат Неопределено;
	Иначе
		Возврат МаксДлительность;
	КонецЕсли;
	
КонецФункции 

Функция ЕстьОткрытыеПроцессы(ШаблонПроцесса,ЭтапПроцесса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ШаблонПроцесса", ШаблонПроцесса);
	Запрос.УстановитьПараметр("ЭтапПроцесса", ЭтапПроцесса);
    Запрос.УстановитьПараметр("СостояниеЭтапаОткрыт", Перечисления.СостоянияЭтаповПроцессов.Запланирован);	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.СостоянияВыполненияПроцессов КАК СостоянияВыполненияПроцессов
	|ГДЕ
	|	СостоянияВыполненияПроцессов.ЭтапПроцесса.Владелец = &ШаблонПроцесса
	|	И СостоянияВыполненияПроцессов.ЭтапПроцесса = &ЭтапПроцесса
	|	И СостоянияВыполненияПроцессов.СостояниеЭтапа <> &СостояниеЭтапаОткрыт";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

