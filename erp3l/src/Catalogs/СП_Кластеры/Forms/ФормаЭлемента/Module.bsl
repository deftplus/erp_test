
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуСоответствияПараметров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыКонфигурации

&НаКлиенте
Процедура ПараметрыСоединенияКлючПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ПараметрыКонфигурации.ТекущиеДанные;
	ТекущиеДанные.Значение = Неопределено;
	Ключ = ТекущиеДанные.Ключ;
	Если ТипЗнч(Ключ) = Тип("Строка") Тогда
		СтруктураОтбора = Новый Структура("ПараметрИмя", Ключ);
		СтрокиСоответствия = ТаблицаСоответствияПараметров.НайтиСтроки(СтруктураОтбора);
		Если ЗначениеЗаполнено(СтрокиСоответствия) Тогда
			ТекущиеДанные.Ключ = СтрокиСоответствия[0].ПараметрСсылка;
		КонецЕсли;
	КонецЕсли;
	
	ПолеВводаЗначения = Элемент.Родитель.ПодчиненныеЭлементы.ПараметрыКонфигурацииЗначение;
	УстановитьТипПараметраКонфигурации(ПолеВводаЗначения, ТекущиеДанные.Ключ);

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыКонфигурацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ПолеВводаЗначения = Элемент.ПодчиненныеЭлементы.ПараметрыКонфигурацииЗначение; 
	УстановитьТипПараметраКонфигурации(ПолеВводаЗначения, Элемент.ТекущиеДанные.Ключ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьСоединение(Команда)
	
	Если Модифицированность Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Сначала необходимо записать сделанные изменения'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Тема = "exchange_rs";
	ДлинаСтроки = 100;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводТемыЗавершение", ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, Тема, "Введите тему для проверки подключения", ДлинаСтроки, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПоУмолчанию(Команда)
	
	Если ЗначениеЗаполнено(Объект.ПараметрыКонфигурации) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПараметрыПоУмолчаниюЗавершение", ЭтотОбъект);
		ТекстВопроса = "Текущие параметры будут очищены. Продолжить?";
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ПараметрыПоУмолчаниюНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВводТемыЗавершение(Тема, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Тема) Тогда
		
		Попытка
			ПроверитьСоединениеНаСервере(Тема);
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Соединение успешно установлено'");
			Сообщение.Сообщить();
			
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			Сообщение.Сообщить();
			
		КонецПопытки;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСоединениеНаСервере(Знач Тема)
	
	Брокеры = Объект.Брокеры.Выгрузить();
	ПараметрыКонфигурации = Справочники.СП_Кластеры.ПараметрыКонфигурацииВПримитивномВиде(Объект.ПараметрыКонфигурации);
	
	Если Объект.ЧерезRestAPI Тогда
		КлиентКафка = Обработки.СП_КлиентКафкаRestAPI.НовыйОбъект(Брокеры, ПараметрыКонфигурации, Объект.Таймаут);
	Иначе
		КлиентКафка = Обработки.СП_КлиентКафка.НовыйОбъект(Брокеры, ПараметрыКонфигурации, Объект.Таймаут);
	КонецЕсли;
	КлиентКафка.ПроверитьСоединение(Тема);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТипПараметраКонфигурации(ПолеВвода, ПараметрКонфигурации)
	
	Если ЗначениеЗаполнено(ПараметрКонфигурации) 
		И ТипЗнч(ПараметрКонфигурации) = Тип("ПланВидовХарактеристикСсылка.СП_ПараметрыКонфигурации") Тогда
			
		ОписаниеТипов = ОписаниеТиповПараметраКонфигурации(ПараметрКонфигурации);
		
	Иначе
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив);
	КонецЕсли;
	
	ПолеВвода.ОграничениеТипа = ОписаниеТипов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПоУмолчаниюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ПараметрыКонфигурации.Очистить();
		ПараметрыПоУмолчаниюНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПараметрыПоУмолчаниюНаСервере()
	
	ТаблицаПараметров = ПланыВидовХарактеристик.СП_ПараметрыКонфигурации.ПолучитьТаблицуПараметровПоУмолчанию(Объект.ЧерезRestAPI);
	Объект.ПараметрыКонфигурации.Загрузить(ТаблицаПараметров);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеТиповПараметраКонфигурации(ПараметрКонфигурации)
	
	Возврат ПараметрКонфигурации.ТипЗначения;
		
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуСоответствияПараметров()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Параметры.Наименование КАК ПараметрИмя,
	|	Параметры.Ссылка КАК ПараметрСсылка
	|ИЗ
	|	ПланВидовХарактеристик.СП_ПараметрыКонфигурации КАК Параметры
	|ГДЕ
	|	НЕ Параметры.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТаблицаСоответствияПараметров.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
