#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ПутьКСпискуОпераций = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "СписокОпераций");
		Если ЭтоАдресВременногоХранилища(ПутьКСпискуОпераций) Тогда
			
			СохраненныеОперации = ПолучитьИзВременногоХранилища(ПутьКСпискуОпераций);
			Для Каждого ТекСтр Из СохраненныеОперации Цикл
				
				НоваяСтрока = СписокОпераций.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтр);
				НоваяСтрока.УточнениеОперации = Новый ХранилищеЗначения(ТекСтр.УточнениеОперации);
			КонецЦикла;
			
		КонецЕсли;
		
		ПутьКПлановымКурсам = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "ПлановыеКурсы");
		Если ЭтоАдресВременногоХранилища(ПутьКПлановымКурсам) Тогда
			ПлановыеКурсы.Загрузить(ПолучитьИзВременногоХранилища(ПутьКПлановымКурсам));
		КонецЕсли;
		
		ПутьКМатрицеВесов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "МатрицаВесовЛиквидности");
		Если ЭтоАдресВременногоХранилища(ПутьКМатрицеВесов)  Тогда
			МатрицаВесовЛиквидности.Загрузить(ПолучитьИзВременногоХранилища(ПутьКМатрицеВесов));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		Справочники.СохраненныеВерсииПлатежногоКалендаря.УстановитьНаименованиеАвтоматически(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		
		НаборЗаписейИсходный = РегистрыСведений.ПредставлениеПлатежногоКалендаря.СоздатьНаборЗаписей();
		НаборЗаписейИсходный.Отбор.ВерсияПлатежногоКалендаря.Установить(Справочники.СохраненныеВерсииПлатежногоКалендаря.ПустаяСсылка());
		НаборЗаписейИсходный.Отбор.Пользователь.Установить(Ответственный);
		НаборЗаписейИсходный.Прочитать();
		
		НаборЗаписейРезультат = РегистрыСведений.ПредставлениеПлатежногоКалендаря.СоздатьНаборЗаписей();
		НаборЗаписейРезультат.Отбор.ВерсияПлатежногоКалендаря.Установить(Ссылка);
		НаборЗаписейРезультат.Отбор.Пользователь.Установить(Ответственный);
		Для Каждого ТекЗапись Из НаборЗаписейИсходный Цикл
			НоваяЗапись = НаборЗаписейРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекЗапись);
			НоваяЗапись.ВерсияПлатежногоКалендаря = Ссылка;
		КонецЦикла;
		
		НаборЗаписейРезультат.Записать();
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#КонецЕсли


