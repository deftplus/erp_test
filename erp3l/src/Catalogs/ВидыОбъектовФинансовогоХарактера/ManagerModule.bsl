#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьВидЛизинга(ПараметрыФИ) Экспорт 

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА т.ВидОбъектаФинансовогоХарактера.Лизинг
	|			ТОГДА ВЫБОР
	|					КОГДА т.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
	|						ТОГДА ИСТИНА
	|					КОГДА т.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Обязательство)
	|						ТОГДА ЛОЖЬ	
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЛизинга
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыФИ);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].ВидЛизинга;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКомпоновщик() Экспорт

	

КонецФункции

Функция ПолучитьОписание(ВидФИ) Экспорт
	
	ИменаРеквизитов = "СпособУчета, АктивОбязательство, ВидСтавкиРасчетаПроцентов, СпособУчетаПереоценки, Лизинг, Задолженность";
	РеквизитыВидаФИ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидФИ, ИменаРеквизитов);
	
	ЭтоАС = (РеквизитыВидаФИ.СпособУчета = ПредопределенноеЗначение("Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости"));
	
	Возврат СтрШаблон(
						"%1; %2; %3; %4",
						ПолучитьТипФИ(РеквизитыВидаФИ.Лизинг),
						РеквизитыВидаФИ.АктивОбязательство,
				        РеквизитыВидаФИ.СпособУчета,
						?(ЭтоАС, РеквизитыВидаФИ.ВидСтавкиРасчетаПроцентов, РеквизитыВидаФИ.СпособУчетаПереоценки)
					);	

КонецФункции

Функция ПолучитьПредставлениеЗадолженности(ЭтоАктив = Истина) Экспорт
	Возврат ?(ЭтоАктив, НСтр("ru = 'Дебиторская задолженность'"), НСтр("ru = 'Кредиторская задолженность'"));
КонецФункции

Функция ПолучитьТипФИ(ЭтоЛизинг = Истина) Экспорт
	Возврат ?(ЭтоЛизинг = Истина, НСтр("ru = 'Аренда (IFRS 16)'"), НСтр("ru = 'Финансовый инструмент (IFRS 9)'"));
КонецФункции

Функция ПолучитьПредставлениеЭтоАктив(ЭтоАктив = Истина) Экспорт
	Возврат ?(ЭтоАктив, НСтр("ru = 'Выданный'"), НСтр("ru = 'Полученный'"));
КонецФункции

Функция ПолучитьЗначенияРеквизитов(ВидОбъектаФинансовогоХарактера) Экспорт
	
	РеквизитыСтрокой = 
	"АктивОбязательство,
	|ВидСтавкиРасчетаПроцентов,
	|ПрименятьПоправкуПоСправедливойСтоимости,
	|ПризнаниеПроцентовМСФО,
	|ПереводВКраткосрочную,
	|РеклассДляОтчетности,
	|РаскрытиеСправедливойСтоимости,
	|Лизинг,
	|Задолженность,
	|СпособУчета,
	|ПроизводныйФИ,
	|СпособУчетаПереоценки,
	|ПорядокУчетаДисконта";
	
	РеквизитыВидаОбъекта = ОбщегоНазначенияУХ.ПолучитьЗначенияРеквизитов(ВидОбъектаФинансовогоХарактера, РеквизитыСтрокой);
		
	ЗначенияРеквизитов = Новый Структура;	
	ЗначенияРеквизитов.Вставить("УчетПоСправедливойСтоимости", РеквизитыВидаОбъекта.СпособУчета = Перечисления.СпособыУчетаФинансовыхИнструментов.ПоСправедливойСтоимости);	
	
	Для каждого РеквизитВидаОбъекта Из РеквизитыВидаОбъекта Цикл
		
		ЗначениеРеквизита = ?(РеквизитВидаОбъекта.Значение=Неопределено, Ложь, РеквизитВидаОбъекта.Значение);
		ЗначенияРеквизитов.Вставить(РеквизитВидаОбъекта.Ключ, ЗначениеРеквизита);
		
	КонецЦикла;
	
	ЗначенияРеквизитов.Вставить("ДоступнаСтавкаДисконтирования", 
		РеквизитыВидаОбъекта.ВидСтавкиРасчетаПроцентов = Перечисления.ВидыСтавокОбъектовФинансовогоХарактера.РыночнаяСтавка);
	
	Если РеквизитыВидаОбъекта.АктивОбязательство = Перечисления.АктивОбязательствоОбъектовФинансовогоХарактера.Актив Тогда
		
		ЗначенияРеквизитов.Вставить("ДоступенАктив", 			Истина);
		ЗначенияРеквизитов.Вставить("ДоступноОбязательство", 	Ложь);
		
	ИначеЕсли РеквизитыВидаОбъекта.АктивОбязательство = Перечисления.АктивОбязательствоОбъектовФинансовогоХарактера.Обязательство Тогда
	
		ЗначенияРеквизитов.Вставить("ДоступенАктив", 			Ложь);
		ЗначенияРеквизитов.Вставить("ДоступноОбязательство", 	Истина);
		
	Иначе
		
		ЗначенияРеквизитов.Вставить("ДоступенАктив", 			Истина);
		ЗначенияРеквизитов.Вставить("ДоступноОбязательство", 	Истина);
		
	КонецЕсли;
	
	ДоступноРаскрытиеСпрС = ЗначенияРеквизитов.РаскрытиеСправедливойСтоимости = Перечисления.ВидыРаскрытияСправедливойСтоимостиФИ.ПоГрафику
							Или ЗначенияРеквизитов.РаскрытиеСправедливойСтоимости = Перечисления.ВидыРаскрытияСправедливойСтоимостиФИ.ПоКотировке;
							
	ЗначенияРеквизитов.Вставить("ДоступноРаскрытиеСпрС", ДоступноРаскрытиеСпрС);
	
	ЗначенияРеквизитов.Вставить("ОписаниеВидаФИ", Справочники.ВидыОбъектовФинансовогоХарактера.ПолучитьОписание(ВидОбъектаФинансовогоХарактера));
	
	Возврат ЗначенияРеквизитов; 

КонецФункции

#КонецОбласти

#Область ОбновлениеПредопреленных

Процедура ОбновитьПредопределенные() Экспорт

	ТабДок = Справочники.ВидыОбъектовФинансовогоХарактера.ПолучитьМакет("ЗаполнениеПредопределенных_ru");
	
	ЭтоУХ = ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом();
	
	Для НомерСтроки = 2 По ТабДок.ВысотаТаблицы Цикл
		
		ИмяПредопределенного = ТабДок.Область(НомерСтроки, 1).Текст;
		ПредопределенныйЭлемент = Справочники.ВидыОбъектовФинансовогоХарактера[ИмяПредопределенного];
		
		Объект = ПредопределенныйЭлемент.ПолучитьОбъект();
		
		Объект.СпособУчета 									= СпособУчетаИзТекста(ТабДок.Область(НомерСтроки, 2).Текст);
		Объект.АктивОбязательство 							= АктивОбязательствоИзТекста(ТабДок.Область(НомерСтроки, 3).Текст);
		Объект.ВидСтавкиРасчетаПроцентов					= ВидСтавкиИзТекста(ТабДок.Область(НомерСтроки, 4).Текст);
		Объект.ПрименятьПоправкуПоСправедливойСтоимости		= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 5).Текст);
		Объект.ПризнаниеПроцентовМСФО						= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 6).Текст);
		//Объект.РасчетПроцентовОтЧПС							= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 7).Текст);
		Объект.ПереводВКраткосрочную						= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 8).Текст);
		Объект.РеклассДляОтчетности							= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 9).Текст);
		Объект.ИспользоватьСрокиЗадолженности				= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 10).Текст);
		//Объект.РаскрыватьСправедливуюСтоимость				= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 11).Текст);
		Объект.РаскрытиеСправедливойСтоимости				= РаскрытиеСправедливойСтоимости(ТабДок.Область(НомерСтроки, 11).Текст);
		Объект.Лизинг										= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 12).Текст);
		Объект.ПроизводныйФИ								= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 13).Текст);
		Объект.СпособУчетаПереоценки						= СпособУчетаПереоценки(ТабДок.Область(НомерСтроки, 14).Текст);
		Объект.Задолженность								= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 15).Текст) И ЭтоУХ;
		Объект.ВозвратПоГрафику								= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 16).Текст);
		Объект.ПорядокУчетаДисконта							= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 17).Текст);
		Объект.ГрафикиРасчетовСоответствуютНСБУ				= ЗначениеИзТекста(ТабДок.Область(НомерСтроки, 18).Текст);
		
		Объект.Записать();			
		
	КонецЦикла;

КонецПроцедуры

Функция ЗначениеИзТекста(ТекстОбласти)
	Возврат ?(ТекстОбласти = "Истина", Истина, ?(ТекстОбласти = "Ложь", Ложь, Неопределено));
КонецФункции

Функция СпособУчетаИзТекста(ТекстОбласти)

	Если ТекстОбласти = "ПоСправедливойСтоимости" Тогда
		Возврат Перечисления.СпособыУчетаФинансовыхИнструментов.ПоСправедливойСтоимости;
	Иначе
		Возврат Перечисления.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости;	
	КонецЕсли;

КонецФункции

Функция ВидСтавкиИзТекста(ТекстОбласти)
	
	Если ТекстОбласти = "Эффективная" Тогда
		Возврат Перечисления.ВидыСтавокОбъектовФинансовогоХарактера.ЭффективнаяСтавка;
	ИначеЕсли ТекстОбласти = "ПоДоговору" Тогда
		Возврат Перечисления.ВидыСтавокОбъектовФинансовогоХарактера.СтавкаПоДоговору;
	ИначеЕсли ТекстОбласти = "РыночнаяСтавка" Тогда
		Возврат Перечисления.ВидыСтавокОбъектовФинансовогоХарактера.РыночнаяСтавка;	
	КонецЕсли;
		
КонецФункции

Функция АктивОбязательствоИзТекста(ТекстОбласти)
	
	Если ТекстОбласти = "Актив" Тогда
		Возврат Перечисления.АктивОбязательствоОбъектовФинансовогоХарактера.Актив;
	ИначеЕсли ТекстОбласти = "Обязательство" Тогда
		Возврат Перечисления.АктивОбязательствоОбъектовФинансовогоХарактера.Обязательство;
	ИначеЕсли ТекстОбласти = "ОпределяетсяПоОстаткам" Тогда
		Возврат Перечисления.АктивОбязательствоОбъектовФинансовогоХарактера.ПустаяСсылка();
	КонецЕсли;
		
КонецФункции

Функция СпособУчетаПереоценки(ТекстОбласти)
	
	Если ТекстОбласти = "ЧерезПрочийСовокупныйДоход" Тогда
		Возврат Перечисления.СпособыУчетаПереоценкиФИ.ЧерезПрочийСовокупныйДоход;
	Иначе
		Возврат Перечисления.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток;
	КонецЕсли; 
		
КонецФункции

Функция РаскрытиеСправедливойСтоимости(ТекстОбласти)

	Если ТекстОбласти = "ПоГрафику" Тогда
		Возврат Перечисления.ВидыРаскрытияСправедливойСтоимостиФИ.ПоГрафику;
	ИначеЕсли ТекстОбласти = "ПоКотировке" Тогда
		Возврат Перечисления.ВидыРаскрытияСправедливойСтоимостиФИ.ПоКотировке;
	Иначе 
		Возврат Перечисления.ВидыРаскрытияСправедливойСтоимостиФИ.НеРаскрывать;
	КонецЕсли; 

КонецФункции

#КонецОбласти

#КонецЕсли
