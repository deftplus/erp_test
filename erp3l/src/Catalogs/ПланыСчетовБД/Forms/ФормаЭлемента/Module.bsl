
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьОтборПоВладельцу();
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
		
	УстановитьВидимость();
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(ПланСчетов.Отбор,			"Владелец",		Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(ВидыДвижений.Отбор,			"ПланСчетовБД",	Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		
		Справочники.ПланыСчетовБД.СкопироватьПодчиненныеСчета(ТекущийОбъект.Ссылка,ЗначениеКопирования,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОбновитьПоДаннымВИБ(Команда)
	
	ОбновитьПоДаннымВИБСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСчетаИтоговТР(Команда)
	ЗаполнитьСчетаИтоговТРНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПризнакиУчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОтбора = Новый Структура("ПризнакиУчета", Объект[Элемент.Имя]);
	ОткрытьФорму("Справочник.ПланыСчетовБД.Форма.ФормаВыбораПризнаковУчета", ПараметрыОтбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПризнакиУчетаСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОтбора = Новый Структура("ПризнакиУчета", Объект[Элемент.Имя]);
	ОткрытьФорму("Справочник.ПланыСчетовБД.Форма.ФормаВыбораПризнаковУчета", ПараметрыОтбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланСчетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПроверитьЗаписать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДвиженийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПроверитьЗаписать();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаИтоговПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПроверитьЗаписать();
	
КонецПроцедуры

#КонецОбласти

#Область БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПоДаннымВИБСервер()
	
	ТекОбъект=РеквизитФормыВЗначение("Объект");
	ТекОбъект.ЗаполнитьРеквизитыОбъекта();
	ЗначениеВРеквизитФормы(ТекОбъект,"Объект");
	Записать();
	
	ОбновитьОтборПоВладельцу();
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры // ОбновитьПоДанныммВИБ() 

&НаСервере
Процедура ОбновитьОтборПоВладельцу()
		
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(ПланСчетов.Отбор,			"Владелец",		Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(ВидыДвижений.Отбор,			"ПланСчетовБД",	Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина);
				
КонецПроцедуры // ОбновитьОтборПоВладельцу()

&НаСервере
Процедура УстановитьВидимость()
	
	Если Объект.Владелец=Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		ЭтоОбъектМетаданных=(НЕ Метаданные.ПланыСчетов.Найти(Объект.ПланСчетовМетаданные)=Неопределено);
		
		Если Объект.ПланСчетовМСФО Тогда
			
			Элементы.ОбновитьПоДаннымВИБ.Видимость	= Ложь;
			Элементы.ПланСчетовСчетСсылка.Видимость	= Ложь;
			
		Иначе
			
			Элементы.ОбновитьПоДаннымВИБ.Заголовок= НСтр("ru = 'Обновить по данным текущей ИБ'");
			Элементы.ОбновитьПоДаннымВИБ.Видимость	= ЭтоОбъектМетаданных;
			Элементы.ПланСчетовСчетСсылка.Видимость	= ЭтоОбъектМетаданных;
			
		КонецЕсли;
		
		Элементы.ПланСчетовМСФО.Видимость=(НЕ ЭтоОбъектМетаданных) ИЛИ Объект.ПланСчетовМСФО;
		
		Если Элементы.ПланСчетовМСФО.Видимость 
			И ЗначениеЗаполнено(Объект.Ссылка)
			И Объект.ПланСчетовМСФО Тогда
			
			Элементы.ПланСчетовМСФО.Доступность = ПроверитьНаличиеСчетов(Объект.Ссылка);
					
		КонецЕсли;
		
		Элементы.ГруппаНастройкиТрансляции.Видимость=Истина;
		
		Элементы.ГруппаНаследуемыеПараметры.ТолькоПросмотр=(ЭтоОбъектМетаданных ИЛИ Объект.ПланСчетовМСФО);
		Элементы.ГруппаРеквизитыМСФО.ТолькоПросмотр=(ЭтоОбъектМетаданных ИЛИ Объект.ПланСчетовМСФО);
				
	Иначе
		
		Элементы.ОбновитьПоДаннымВИБ.Заголовок = НСтр("ru = 'Обновить по данным внешней ИБ'");
		Элементы.ПланСчетовСчетСсылка.Видимость=Ложь;
		Элементы.ГруппаНастройкиТрансляции.Видимость=Ложь;
		Элементы.ПланСчетовМСФО.Видимость=Ложь;
		
	КонецЕсли;
	
	Элементы.Владелец.Видимость=ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом();
	
	Если Объект.Владелец.ВерсияПлатформы=Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие77 Тогда
		
		Элементы.ВидыСубконтоОписание.Видимость=Ложь;
		
	Иначе
		
		Элементы.ВидыСубконтоОписание.ТолькоПросмотр=ЗначениеЗаполнено(Объект.ПланСчетовМетаданные);
		
	КонецЕсли;
	
	Если Объект.ПланСчетовМСФО Тогда
		
		Элементы.ПланСчетов.ИзменятьСоставСтрок=Истина;
		Элементы.ПланСчетов.ИзменятьПорядокСтрок=Истина;
		
	Иначе
		
		Элементы.ПланСчетов.ИзменятьСоставСтрок=НЕ ЗначениеЗаполнено(Объект.ПланСчетовМетаданные);
		Элементы.ПланСчетов.ИзменятьПорядокСтрок=НЕ ЗначениеЗаполнено(Объект.ПланСчетовМетаданные);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимость()

&НаСервереБезКонтекста
Функция ПроверитьНаличиеСчетов(ПланСчетовБД)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетаБД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Владелец = &Владелец
	|	И НЕ СчетаБД.СчетСсылка = НЕОПРЕДЕЛЕНО
	|	И НЕ СчетаБД.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Владелец",ПланСчетовБД);
	
	Результат=Запрос.Выполнить().Выбрать();
	Возврат НЕ Результат.Следующий();
	
КонецФункции // ПроверитьНаличиеСчетов() 

&НаСервереБезКонтекста
Процедура УстановитьИспользованиеПоУмолчанию(ВидОтчета)
	
	СправочникОбъект=ВидОтчета.ПолучитьОбъект();
	СправочникОбъект.ИспользоватьПоУмолчанию=Истина;
	
	Попытка
		СправочникОбъект.Записать();
	Исключение
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Не удалось установить пометку использования по умолчанию для вида отчета
		|'")+СправочникОбъект.Наименование+": "+ОписаниеОшибки(),,,СтатусСообщения.Внимание);
	КонецПопытки;		
	
КонецПроцедуры // УстановитьИспользованиеПоУмолчанию() 

&НаКлиенте
Процедура ПроверитьЗаписать()
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Записать();
		
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаписать() 

&НаСервере
Процедура ВидыСубконтоОписаниеПриИзмененииНаСервере()
	
	Объект.ВидыСубконто=Объект.ВидыСубконтоОписание.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоОписаниеПриИзменении(Элемент)
	
	ВидыСубконтоОписаниеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетаИтоговТРНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетаБД.Ссылка КАК СчетИтога
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Владелец В(&ПланСчетовБД)
	|	И СчетаБД.СчетСсылка.Родитель = ЗНАЧЕНИЕ(ПланСчетов.МСФО.ПустаяСсылка)
	|	И НЕ СчетаБД.СчетСсылка.Забалансовый");
	
	Запрос.УстановитьПараметр("ПланСчетовБД", Объект.Ссылка);
	Объект.СчетаИтогов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитуПоПлануСчетовМД() 
	
	ТекСоединениеВИБ=Обработки.РаботаСМетаданнымиУХ.Создать();
				
	СтруктураОписания = РаботаСОбъектамиМетаданныхУХ.ПолучитьСтруктуруОписанияПланаСчетовБД(
		"МСФО","МСФО", ТекСоединениеВИБ, Ложь, Неопределено);
	
	Объект.ВидыСубконто=СтруктураОписания.ВидыСубконто;
	Объект.ВидыСубконтоОписание=Справочники.ПланыВидовХарактеристикБД.НайтиПоНаименованию(Объект.ВидыСубконто,Истина,,Справочники.ТипыБазДанных.ТекущаяИБ);
	Объект.ДлинаКода=СтруктураОписания.ДлинаКода;
	Объект.ПризнакиУчета=СтруктураОписания.ПризнакиУчета;
	Объект.ПризнакиУчетаСубконто=СтруктураОписания.ПризнакиУчетаСубконто;
	Объект.МаксимальноеКоличествоСубконто=СтруктураОписания.МаксимальноеКоличествоСубконто;
	
	Объект.Владелец=Справочники.ТипыБазДанных.ТекущаяИБ;
	Объект.МетаданныеТекущейИБ=Истина;
	
	УстановитьВидимость();
	
КонецПроцедуры // ЗаполнитьРеквизитуПоПлануСчетовМД() 

&НаКлиенте
Процедура ПланСчетовМСФОПриИзменении(Элемент)
	
	Если Объект.ПланСчетовМСФО Тогда
		
		ЗаполнитьРеквизитуПоПлануСчетовМД();
		
	КонецЕсли; 
	
	УстановитьВидимость();
			
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ЗаписанСчетМСФО" И Параметр=Объект.Ссылка Тогда
		
		Элементы.ПланСчетов.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПланСчетов(Команда)
	
	КомпоновщикСКД = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	ЗначениеПараметра = КомпоновщикСКД.Настройки.ПараметрыДанных.Элементы.Добавить();
	ЗначениеПараметра.Параметр 		= Новый ПараметрКомпоновкиДанных("ПланСчетовБД");
	ЗначениеПараметра.Значение 		= Объект.Ссылка;
	ЗначениеПараметра.Использование = Истина;
	ЗначениеПараметра.ИдентификаторПользовательскойНастройки = "ПланСчетовБД";
	
	ПараметрыФормы = Новый Структура("ПользовательскиеНастройки, СформироватьПриОткрытии", КомпоновщикСКД.ПользовательскиеНастройки, Истина);
	ОткрытьФорму("Отчет.ПроверкаПланаСчетов.Форма", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти
