#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
// Проверяет, что:
// 1. ПользовательИБИмя заполнен.
// 2. Не существует пользвателя ИБ с именем ПользовательИБИмя.
// 3. Если существует, то он привязан к ВнешнийПользователь.
//
// Возвращает:
//	Истина - имя пользователя ПользовательИБИмя некорректно, оно используется другим пользователем.
//	Ложь - имя пользователя ПользовательИБИмя корректно, его можно использовать для ВнешнийПользователь.
//
Функция ПроверитьКорректностьИмениПользователяИБ(ВнешнийПользователь, ПользовательИБИмя) Экспорт
	флИмяПустое = ПустаяСтрока(ПользовательИБИмя);
	Если НЕ флИмяПустое И Пользователи.ПользовательИБЗанят(ПользовательИБИмя) Тогда
		// Проверяем, что пользователь ИБ найденный по имени, равен пользователю, на которого ссылается ВнешнийПользователь
		
		Если ЗначениеЗаполнено(ВнешнийПользователь) И ПустаяСтрока(ВнешнийПользователь.ИдентификаторПользователяИБ) Тогда
			Возврат Истина;
		КонецЕсли;
		
		ПользовательИБ = Неопределено; // пользователь ИБ на которго ссылается ВнешнийПользователь
		ОписаниеОшибки_ = "";
		УстановитьПривилегированныйРежим(Истина);
		СвойстваПользователя = Пользователи.СвойстваПользователяИБ(ВнешнийПользователь.ИдентификаторПользователяИБ);
		Если СвойстваПользователя = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
		
				
		// Некорректно, когда у другого пользователя ИБ использовано ПользовательИБИмя
		Возврат НЕ (ПользовательИБИмя = СвойстваПользователя.Имя);
	КонецЕсли;
	
	Возврат флИмяПустое;
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеПользователи КАК СпрВнешПользователи 
	|    ПО СпрВнешПользователи.ОбъектАвторизации = ЭтотСписок.Ссылка 
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|    ЗначениеРазрешено(СпрВнешПользователи.Ссылка)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецЕсли
