#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ОбновитьРегламентноеЗадание();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьРегламентноеЗадание()
	
	Перем Задание; // Регламентное задание.
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	КонецЕсли;
	
	Если Задание = Неопределено Тогда
		Если ТипЗадания = Перечисления.СП_ТипыСообщений.Исходящее Тогда
			МетаданноеРегламентного = Метаданные.РегламентныеЗадания.СП_ОтправкаИсходящихСообщений;
		Иначе
			МетаданноеРегламентного = Метаданные.РегламентныеЗадания.СП_ПолучениеВходящихСообщений;
		КонецЕсли;
		
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданноеРегламентного);
		ИдентификаторЗадания = Задание.УникальныйИдентификатор;
	КонецЕсли;
	
	Задание.Наименование = Наименование;
	Задание.Расписание = РасписаниеЗадания.Получить();
	Задание.Использование = Не ПометкаУдаления;
	Задание.Ключ = Наименование;
	
	Задание.Параметры.Очистить();
	Задание.Параметры.Добавить(Кластер);
	
	Попытка
		Задание.Записать();
		
	Исключение
		ШаблонСообщения = "Не удалось записать регламентное задание: %1
			|По причине: %2";
		
		ВызватьИсключение СтрШаблон(ШаблонСообщения, Наименование, ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
