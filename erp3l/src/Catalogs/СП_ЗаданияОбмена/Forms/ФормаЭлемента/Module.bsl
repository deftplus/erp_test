
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Расписание = ТекущийОбъект.РасписаниеЗадания.Получить();
	Если Расписание = Неопределено Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;

	УстановитьРасписаниеЗадания(Расписание);
	Элементы.НастроитьРасписание.Заголовок = Строка(Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Расписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ТекущийОбъект.РасписаниеЗадания = Новый ХранилищеЗначения(Расписание);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	#Если Не МобильныйКлиент Тогда
	
	ТекущееРасписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ТекущееРасписание);

	ОбработчикУстановкиРасписания = Новый ОписаниеОповещения("ОбработчикУстановкиРасписания", ЭтаФорма);
	ДиалогРасписания.Показать(ОбработчикУстановкиРасписания);
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Перед выполнением обмена необходимо записать изменения.'");
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ТипЗадания) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""Тип задания"" обязательно для заполнения.'");
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Кластер) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Поле ""Кластер"" обязательно для заполнения.'");
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбменНаСервере();
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Выполнение обмена завершено.'");
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьРасписание(Адрес)

	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		Расписание = ПолучитьИзВременногоХранилища(Адрес);
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;

	Возврат Расписание;

КонецФункции

&НаКлиенте
Процедура ОбработчикУстановкиРасписания(Расписание, ПараметрыОповещения) Экспорт

	Если Расписание <> Неопределено Тогда
		УстановитьРасписаниеЗадания(Расписание);
		Элементы.НастроитьРасписание.Заголовок = Строка(Расписание);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьРасписаниеЗадания(Расписание)

	Если ЭтоАдресВременногоХранилища(АдресРасписанияЗадания) Тогда
		ПоместитьВоВременноеХранилище(Расписание, АдресРасписанияЗадания);
		
	Иначе
		АдресРасписанияЗадания = ПоместитьВоВременноеХранилище(Расписание, УникальныйИдентификатор);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	Если Объект.ТипЗадания = Перечисления.СП_ТипыСообщений.Исходящее Тогда
		СП_РаботаССообщениями.ВыполнитьОбработкуИсходящихСообщений(Объект.ФорматJSON);
		СП_РаботаССообщениями.ВыполнитьОтправкуИсходящихСообщений(Объект.Кластер);
		
	Иначе
		СП_РаботаССообщениями.ВыполнитьПолучениеВходящихСообщений(Объект.Кластер);
		СП_РаботаССообщениями.ВыполнитьОбработкуВходящихСообщений(Объект.ФорматJSON);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
