// Управляет видимостью элементов на форме.
&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	// Отображение групп элементов для Видов расширенной адресации.
	ВидАдресации = Форма.Объект.ВидРасширеннойАдресацииСогласования;
	Если ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.ПользовательИзРеквизита") Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаПользовательИзРеквизита;
	ИначеЕсли ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.РольПоРеквизиту") Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаРольПоРеквизиту;
	ИначеЕсли ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.РольПоФиксированномуОбъекту") Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаРольПоФиксированномуОбъекту;
	ИначеЕсли ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.ИнициаторПроцесса") Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаИнициаторПроцесса;
	ИначеЕсли ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.ПроизвольныйКод") Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаПроизвольныКод;
	ИначеЕсли ВидАдресации = ПредопределенноеЗначение("Перечисление.ВидыРасширеннойАдресацииСогласования.ПустаяСсылка") Тогда	
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаПользовательИзРеквизита;	// По умолчанию отображаем в режиме ПользовательИзРеквизита.
	Иначе
		ТекстСообщения = НСтр("ru = 'Неизвестный вид расширенной адресации согласования: ""%ВидАдресации%""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидАдресации%", Строка(ВидАдресации));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
	// Доступность Уровня руководителя.
	АдресоватьРуководителю = Форма.Объект.АдресацияРуководителю;
	Форма.Элементы.УровеньРуководителяПользовательИзРеквизита.Видимость	 = АдресоватьРуководителю;
	Форма.Элементы.УровеньРуководителяИнициаторПроцесса.Видимость		 = АдресоватьРуководителю;
КонецПроцедуры		// УправлениеВидимостью()

// Возвращаает новое автоматически сгенерированное наименование для справочника 
// расширенной адресации согласования по структуре данных СтруктураДанныхВход.
&НаСервереБезКонтекста
Функция СгенерироватьНаименованиеСервер(СтруктураПараметровВход)
	РезультатФункции = "";
	РезультатФункции = Справочники.РасширеннаяАдресацияСогласования.СгенерироватьНовоеНаименование(СтруктураПараметровВход);
	Возврат РезультатФункции;
КонецФункции		 // СгенерироватьНаименованиеСервер()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВидРасширеннойАдресацииСогласованияПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура АдресацияРуководителюПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура АдресацияРуководителюИнициаторПроцессаПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыборРеквизитаОбъектаПоРоли_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
    Если ВыбранноеЗначение <> Неопределено Тогда
		Объект.РеквизитОбъектаРолевойАдресации = ВыбранноеЗначение;
	Иначе
		ТекстСообщения = НСтр("ru = 'Значение не выбрано'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитОбъектаРолевойАдресацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидОбъекта", Объект.Владелец);
	ОписаниеОЗакрытии = Новый ОписаниеОповещения("ВыборРеквизитаОбъектаПоРоли_Завершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.РасширеннаяАдресацияСогласования.Форма.ФормаВыбораРеквизитаОбъекта", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыборРеквизитаПользователя_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
    Если ВыбранноеЗначение <> Неопределено Тогда
		Объект.РеквизитПользователя = ВыбранноеЗначение;
	Иначе
		ТекстСообщения = НСтр("ru = 'Значение не выбрано'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПользователяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидОбъекта", Объект.Владелец);
	ОписаниеОЗакрытии = Новый ОписаниеОповещения("ВыборРеквизитаПользователя_Завершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.РасширеннаяАдресацияСогласования.Форма.ФормаВыбораРеквизитаОбъекта", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждениеОчисткиНаименование_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Владелец",							 Объект.Владелец);
		СтруктураПараметров.Вставить("ВидРасширеннойАдресацииСогласования",	 Объект.ВидРасширеннойАдресацииСогласования);
		СтруктураПараметров.Вставить("РеквизитПользователя",				 Объект.РеквизитПользователя);
		СтруктураПараметров.Вставить("АдресацияРуководителю",				 Объект.АдресацияРуководителю);
		СтруктураПараметров.Вставить("УровеньРуководителя",					 Объект.УровеньРуководителя);
		СтруктураПараметров.Вставить("РольАдресации",						 Объект.РольАдресации);
		СтруктураПараметров.Вставить("РеквизитОбъектаРолевойАдресации",		 Объект.РеквизитОбъектаРолевойАдресации);
		СтруктураПараметров.Вставить("ФиксированныйОбъектАдресации",		 Объект.ФиксированныйОбъектАдресации);
		НовоеНаименование = СгенерироватьНаименованиеСервер(СтруктураПараметров);
		Объект.Наименование = НовоеНаименование;
	Иначе
		// Пользователь отказался.
	КонецЕсли;
КонецПроцедуры		// ПодтверждениеОчисткиНаименование_Завершение()

&НаКлиенте
Процедура СгенерироватьНаименование(Команда)
	Если ЗначениеЗаполнено(Объект.Наименование) Тогда
		СтруктураПараметров = Новый Структура;
		ТекстВопроса = НСтр("ru = 'Введённое наименование будет очищено. Продолжить выполнение?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПодтверждениеОчисткиНаименование_Завершение", ЭтаФорма, СтруктураПараметров);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Владелец",							 Объект.Владелец);
		СтруктураПараметров.Вставить("ВидРасширеннойАдресацииСогласования",	 Объект.ВидРасширеннойАдресацииСогласования);
		СтруктураПараметров.Вставить("РеквизитПользователя",				 Объект.РеквизитПользователя);
		СтруктураПараметров.Вставить("АдресацияРуководителю",				 Объект.АдресацияРуководителю);
		СтруктураПараметров.Вставить("УровеньРуководителя",					 Объект.УровеньРуководителя);
		СтруктураПараметров.Вставить("РольАдресации",						 Объект.РольАдресации);
		СтруктураПараметров.Вставить("РеквизитОбъектаРолевойАдресации",		 Объект.РеквизитОбъектаРолевойАдресации);
		СтруктураПараметров.Вставить("ФиксированныйОбъектАдресации",		 Объект.ФиксированныйОбъектАдресации);
		НовоеНаименование = СгенерироватьНаименованиеСервер(СтруктураПараметров);
		Объект.Наименование = НовоеНаименование;
	КонецЕсли;
КонецПроцедуры
