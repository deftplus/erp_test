&НаСервере
Процедура ДобавитьОписаниеПоляСКД(ИмяПоля,СинонимПоля,ТипДанных,МакетСкд, ТипОбъектаОповещения = Неопределено)
		
	НовоеПоле = МакетСкд.НаборыДанных[0].Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));	
	НовоеПоле.Поле = ИмяПоля;
	НовоеПоле.Заголовок = СинонимПоля;
	НовоеПоле.ПутьКДанным = ИмяПоля;
	
	МассивТипов = Новый Массив;
	МассивПриведенныхТипов = Новый Массив();
	
	Если (ТипОбъектаОповещения <> Неопределено) И (СокрЛП(ИмяПоля) = "Ссылка") Тогда
		// Ссылка представлен в виде уникального идетификатора. Подменим её тип на тип элемента.
		ТипСсылки = ОбщегоНазначенияСерверУХ.ВернутьТипПоСсылкеБД(ТипОбъектаОповещения);
		МассивПриведенныхТипов.Добавить(ТипСсылки);
		НовоеПоле.ТипЗначения = Новый ОписаниеТипов(МассивПриведенныхТипов);
	Иначе	
		МассивТипов=СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТипДанных, ";");
		Для Каждого Эл Из МассивТипов Цикл
			НазваниеТипа = СтрЗаменить(Эл,".","Ссылка.");
			Попытка
				ПриведенныйТип = Тип(НазваниеТипа);
				МассивПриведенныхТипов.Добавить(ПриведенныйТип);
			Исключение
				ТекстОшибки = НСтр("ru = 'Не удалось добавить тип %НазваниеТипа%. Возможно, требуется обновить метаданные по 
				|данным текущей информационной базы в разделе Интеграция и упрвление НСИ - 
				|Типы ИБ - Текущая информационная база - Загрузить структуру данных'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НазваниеТипа%", НазваниеТипа);
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки);
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	НовоеПоле.ТипЗначения = Новый ОписаниеТипов(МассивПриведенныхТипов);		
КонецПроцедуры

// Добавляет в схему скд МакетСкд ревизитов объекта ТипОбъектаОповещенияВход его 
// стандартные реквизиты.
&НаСервере
Процедура ДобавитьСтандартныеРеквизитыВСхему(ТипОбъектаОповещенияВход, МакетСкд)
	Если ТипЗнч(ТипОбъектаОповещенияВход) = Тип("СправочникСсылка.СправочникиБД") Тогда
		// Поиск текущего справочника в метаданных.
		НайденныйСправочник = Неопределено;
		Для Каждого ТекСправочники Из Метаданные.Справочники Цикл
			Если ТипОбъектаОповещенияВход.Наименование = ТекСправочники.Имя Тогда
				НайденныйСправочник = ТекСправочники;
			Иначе
				// Выполняем поиск далее.
			КонецЕсли;	
		КонецЦикла;	
		// Поиск типов владельца.
		МассивТиповВладельца = Новый Массив;
		Для Каждого ТекВладельцы Из НайденныйСправочник.Владельцы Цикл
			//ИмяБазовогоТипа = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(НайденныйСправочник);
			Если ОбщегоНазначения.ЭтоСправочник(НайденныйСправочник) Тогда
				МассивТиповВладельца.Добавить("Справочник." + ТекВладельцы.Имя);
			ИначеЕсли ОбщегоНазначения.ЭтоПланВидовХарактеристик(НайденныйСправочник) Тогда
				МассивТиповВладельца.Добавить("ПланВидовХарактеристик." + ТекВладельцы.Имя);	
			Иначе
				// Пропускаем.
			КонецЕсли;
		КонецЦикла;	
		// Добавление поля владельца по найденным типам.
		Если МассивТиповВладельца.Количество() > 0 Тогда
			СтрокаТипВладельца = СтрСоединить(МассивТиповВладельца, ";");
			ДобавитьОписаниеПоляСКД("Владелец", "Владелец", СтрокаТипВладельца, МакетСкд);
		Иначе
			// Нет владельцев.
		КонецЕсли;
		// Добавление поля родителя.
		СправочникПодчиненЭлементам = (Строка(НайденныйСправочник.ИспользованиеПодчинения) = "Элементам");
		СправочникПодчиненГруппамИЭлементам = (Строка(НайденныйСправочник.ИспользованиеПодчинения) = "ГруппамИЭлементам");
		Если СправочникПодчиненЭлементам ИЛИ СправочникПодчиненГруппамИЭлементам Тогда
			СтрокаТипРодителя = "Справочник." + НайденныйСправочник.Имя;
			ДобавитьОписаниеПоляСКД("Родитель", "Родитель", СтрокаТипРодителя, МакетСкд);
		Иначе
			// Нет владельцев.
		КонецЕсли;
	Иначе
		// Для прочих вариантов не добавляем.
	КонецЕсли;
КонецПроцедуры		// ДобавитьСтандартныеРеквизитыВСхему()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидОбъекта = Параметры.ВидОбъекта;
	Если ЗначениеЗаполнено(ВидОбъекта) Тогда
		МакетСкд = ПолучитьОбщийМакет("МакетНастройкиОтборов");	
		МакетСкд.НаборыДанных[0].Поля.Очистить();
		Для Каждого СтрПоле Из ВидОбъекта.Реквизиты Цикл
			ДобавитьОписаниеПоляСКД(СтрПоле.Имя, СтрПоле.Синоним, СтрПоле.ТипДанных, МакетСкд);
		КонецЦикла;	
		ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(МакетСКД, УникальныйИдентификатор));
		КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);	
	Иначе
		ТекстСообщения = НСтр("ru = 'Не указан вид объекта'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения()
	ТекДанные = Элементы.КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядка.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		СтрокаОтбора = "";
		ТекСтр = Элементы.КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядка.ТекущаяСтрока;
		Если НЕ ТекСтр = Неопределено Тогда
			ТекущаяСтрокаПорядка = Элементы.КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядка.ТекущаяСтрока;
			ДоступныеПоляПорядка = КомпоновщикНастроек.Настройки.Порядок.ДоступныеПоляПорядка;
			СтрокаОтбора = ДоступныеПоляПорядка.ПолучитьОбъектПоИдентификатору(ТекущаяСтрокаПорядка);
			Если НЕ СтрокаОтбора.Папка Тогда
				ОповеститьОВыборе(СтрокаОтбора.Поле);
			Иначе	
				ТекстСообщения = НСтр("ru = 'Выбран группирующий элемент. Операция отменена.'");
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru = 'Реквизит не выбран. Операция отменена.'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Реквизит не выбран. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ПрименитьИзменения();
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПорядокДоступныеПоляПорядкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПрименитьИзменения();
КонецПроцедуры
