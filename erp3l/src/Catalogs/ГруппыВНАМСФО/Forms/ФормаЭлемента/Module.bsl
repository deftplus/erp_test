
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере(ЭтаФорма);
	КонецЕсли;
	
	Если Не Объект.НачислятьАмортизацию Тогда
		Объект.ПараметрыУчетаНЗС = ПредопределенноеЗначение("Справочник.ГруппыВНАМСФО.ПустаяСсылка");	
	КонецЕсли;
	
	ЭтаФорма.ВводВЭкплуатациюВМоментПоступления = Объект.ПараметрыУчетаНЗС.Пустая();	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПодготовитьФормуНаСервере(ЭтаФорма)
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЭтаФорма.ВводВЭкплуатациюВМоментПоступления И Объект.ПараметрыУчетаНЗС.Пустая() Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено поле <Параметры учета до ввода в эксплуатацию>'");
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПараметрыКлассаВНА", ЭтаФорма.КэшируемыеЗначения.ПараметрыКлассовВНА);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Не ВводВЭкплуатациюВМоментПоступления И Объект.ПараметрыУчетаНЗС.Пустая() Тогда
		ПроверяемыеРеквизиты.Добавить("ПараметрыУчетаНЗС");	
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ЗаполнитьНаименование(Команда)
	Объект.Наименование = МСФОКлиентСерверУХ.ПолучитьАвтоНаименованиеПараметрыУчетаВНА(Объект);
КонецПроцедуры

&НаКлиенте
Процедура КлассВНАПриИзменении(Элемент)
	
	Объект.НачислятьАмортизацию = (Объект.КлассВНА = ПредопределенноеЗначение("Перечисление.КлассыВНА.ОсновноеСредство") 
							Или Объект.КлассВНА = ПредопределенноеЗначение("Перечисление.КлассыВНА.НематериальныйАктив") );
							
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура МодельУчетаВНАПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаПервоначальнойСтоимостиПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(ЭтаФорма, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СчетНакопленнойАмортизацииПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(ЭтаФорма, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура НачислятьАмортизациюПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура ВводВЭкплуатациюПриПоступленииПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма); 
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПодготовитьФормуНаСервере(Форма)
	
	Форма.КэшируемыеЗначения = Новый Структура;	
	Форма.КэшируемыеЗначения.Вставить("ИменаСубконто", 			Справочники.ГруппыВНАМСФО.ПолучитьИменаСубконто());
	Форма.КэшируемыеЗначения.Вставить("КлючевыеСубконто", 		МСФОВНАУХ.ПолучитьКлючевыеСубконтоВНА());
	Форма.КэшируемыеЗначения.Вставить("МоделиУчетаВНАМСФО", 	МСФОВызовСервераУХ.ПолучитьСтруктуруСоЗначениямиПеречисления("МоделиУчетаВНАМСФО"));
	Форма.КэшируемыеЗначения.Вставить("ПараметрыКлассовВНА", 	Перечисления.КлассыВНА.ПолучитьПараметры());
	
	МСФОКлиентСерверУХ.УстановитьПланСчетов(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	МоделиУчетаВНАМСФО = Форма.КэшируемыеЗначения.МоделиУчетаВНАМСФО;
	
	ПараметрыКлассаВНА = Форма.КэшируемыеЗначения.ПараметрыКлассовВНА.Получить(Объект.КлассВНА);
	Если ПараметрыКлассаВНА = Неопределено Тогда
		ПараметрыКлассаВНА = Форма.КэшируемыеЗначения.ПараметрыКлассовВНА.Получить(ПредопределенноеЗначение("Перечисление.КлассыВНА.НезавершенноеСтроительство"));
	КонецЕсли;
	
	Элементы.НачислятьАмортизацию.Доступность = ПараметрыКлассаВНА.НачислятьАмортизацию;
	Если Не ПараметрыКлассаВНА.НачислятьАмортизацию Тогда
		Объект.НачислятьАмортизацию = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаСчетНакопленнойАмортизации.Видимость = Объект.НачислятьАмортизацию;
	Элементы.ПараметрыАмортизации.Видимость = Объект.НачислятьАмортизацию;
	
	Если Не Объект.НачислятьАмортизацию И Не Объект.СчетНакопленнойАмортизации.Пустая() Тогда
		
		Объект.СчетНакопленнойАмортизации = Неопределено;
		Объект.СчетНакопленнойАмортизацииСубконто1 = Неопределено;
		Объект.СчетНакопленнойАмортизацииСубконто2 = Неопределено;
		Объект.СчетНакопленнойАмортизацииСубконто3 = Неопределено;
		
	КонецЕсли;
	
	Элементы.ПараметрыВыбытия.Видимость = ПараметрыКлассаВНА.ПараметрыВыбытия;
	Если Не ПараметрыКлассаВНА.ПараметрыВыбытия Тогда
		Объект.ПараметрыВыбытия = ПредопределенноеЗначение("Справочник.ПараметрыВыбытияВНАМСФО.ПустаяСсылка");	
	КонецЕсли;
	
	Если ПараметрыКлассаВНА.МодельУчетаВНА = "" Тогда
		
		Элементы.МодельУчетаВНА.Доступность = Истина;
		Элементы.МодельУчетаВНА.Видимость = Истина;
		
	ИначеЕсли ПараметрыКлассаВНА.МодельУчетаВНА = "НеИспользовать" Тогда
		
		Элементы.МодельУчетаВНА.Видимость = Ложь;
		Объект.МодельУчетаВНА = Неопределено;
		
	Иначе
		
		МоделиУчетаВНАМСФО.Свойство(ПараметрыКлассаВНА.МодельУчетаВНА, Объект.МодельУчетаВНА);
		Элементы.МодельУчетаВНА.Видимость = Истина;
		Элементы.МодельУчетаВНА.Доступность = Ложь;
		
	КонецЕсли;
	
	//Элементы.ПараметрыОбесценения.Видимость = ПараметрыКлассаВНА.ПараметрыОбесценения И (Объект.МодельУчетаВНА = МоделиУчетаВНАМСФО.УчетПоФактическимЗатратам);
	Элементы.ПараметрыПереоценки.Видимость = ПараметрыКлассаВНА.ПараметрыПереоценки И (Объект.МодельУчетаВНА = МоделиУчетаВНАМСФО.УчетПоПереоцененнойСтоимости);
	
	Форма.Заголовок = Объект.Наименование + "(" + ?(Объект.КлассВНА.Пустая(), НСтр("ru = 'Внеоборотный актив'"), Объект.КлассВНА) + ")";
	
	КлассНЗС = ПредопределенноеЗначение("Перечисление.КлассыВНА.НезавершенноеСтроительство");
	Элементы.ВводВЭкплуатациюВМоментПоступления.Видимость = (Форма.Объект.КлассВНА <> КлассНЗС);
	Элементы.ПараметрыУчетаНЗС.Видимость = Объект.НачислятьАмортизацию И Не Форма.ВводВЭкплуатациюВМоментПоступления;
	Если Не Элементы.ПараметрыУчетаНЗС.Видимость Тогда
		Объект.ПараметрыУчетаНЗС = Неопределено;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПланСчетовПриИзменении(Элемент)

	МСФОКлиентСерверУХ.УстановитьПланСчетов(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
