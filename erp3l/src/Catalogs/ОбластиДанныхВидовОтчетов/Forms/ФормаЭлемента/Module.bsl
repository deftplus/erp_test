
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	 //Новый ракурс создается только в том случае, если нет ракурса, содержащего все строки 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ОбластиДанныхВидовОтчетов.Ссылка
	                |ИЗ
	                |	Справочник.ОбластиДанныхВидовОтчетов КАК ОбластиДанныхВидовОтчетов
	                |ГДЕ
	                |	ОбластиДанныхВидовОтчетов.ВключатьВсеПоказателиВидаОтчета = ИСТИНА
	                |	И ОбластиДанныхВидовОтчетов.ПометкаУдаления = ЛОЖЬ
	                |	И ОбластиДанныхВидовОтчетов.Владелец = &Владелец
	                |	И НЕ ОбластиДанныхВидовОтчетов.Ссылка = &Ссылка";
	 
	 Запрос.УстановитьПараметр("Владелец",Объект.Владелец);
	 Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл	 
		 ВызватьИсключение(Нстр("ru = ' Создание нового ракурса запрещено: существует ракурс, содержащий все строки отчетов '"));
		 Отказ = Истина;  
	 КонецЦикла;
	 	
	ДокументБД = Справочники.ДокументыБД.НайтиПоНаименованию("РакурсДанных",,,Справочники.ТипыБазДанных.ТекущаяИБ);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		РабочийОбъект = РеквизитФормыВзначение("Объект");	
		РабочийОбъект.ПолучитьВыбранныеПоказатели(Строки);
							
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();

	СоставСтрок = ?(Объект.ВключатьВсеПоказателиВидаОтчета,"ВсеСтроки","ВыбранныеСтроки");
	
	Элементы.РазделятьПоПроектам.Видимость = Объект.Владелец.РазделениеПоПроектам;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НастройкиСоставаОбластейВидовОтчетов = РегистрыСведений.НастройкиСоставаОбластейВидовОтчетов.СоздатьНаборЗаписей();
	НастройкиСоставаОбластейВидовОтчетов.Отбор.КлючОбласти.Установить(Объект.Ссылка);
	
	Для Каждого Стр Из Строки Цикл		
		мНастройкиСоставаОбластейВидовОтчетов = НастройкиСоставаОбластейВидовОтчетов.Добавить();	
		мНастройкиСоставаОбластейВидовОтчетов.КлючОбласти = Объект.Ссылка;
		мНастройкиСоставаОбластейВидовОтчетов.СтрокаОтчета = Стр.Значение;
		мНастройкиСоставаОбластейВидовОтчетов.ОрганизационнаяЕдиница = Объект.Организация;
		мНастройкиСоставаОбластейВидовОтчетов.Проект = Объект.Проект;		
	КонецЦикла;
	
	НастройкиСоставаОбластейВидовОтчетов.Записать(Истина);
		
	 //Если есть бланки, связанные с ракурсом, обновим структуру 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	БланкиОтчетов.Ссылка
	 |ИЗ
	 |	Справочник.БланкиОтчетов КАК БланкиОтчетов
	 |ГДЕ
	 |	БланкиОтчетов.ПометкаУдаления = Ложь
	 |	И БланкиОтчетов.Ракурс = &Ракурс";
	 
	 Запрос.УстановитьПараметр("Ракурс",Объект.Ссылка);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл 
	 	  СводнаяТаблицаУХ.ЗаполнитьСтрокиПоРакурсу(Объект.Ссылка,Выборка.Ссылка); 
	 КонецЦикла;

	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	
	Если  ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.ВключатьВсеПоказателиВидаОтчета <> Объект.Ссылка.ВключатьВсеПоказателиВидаОтчета 
			ИЛИ Объект.РазделятьПоОрганизациям <> Объект.Ссылка.РазделятьПоОрганизациям 
			ИЛИ Объект.РазделятьПоПроектам <> Объект.Ссылка.РазделятьПоПроектам ИЛИ
			ИзмененСоставСтрок Тогда
			Если  ПроверитьНаличиеСогласуемыхДанных() Тогда
				
				СтрокаШаблона = НСтр("ru = 'По ракурсу %1 существуют данные показателей отчетов, находящиеся в статусе отличном от статуса ""черновик"". Изменение настроек ракурса запрещено.'");
				
				Если Не ПустаяСтрока(СтрокаШаблона) тогда				
					ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, Объект.Наименование));
				КонецЕсли;
				
				Отказ = Истина;		
				
			КонецЕсли;			
		КонецЕсли;		
	КонецЕсли;
	
	Если Объект.ВключатьВсеПоказателиВидаОтчета Тогда	
		Возврат;	
	КонецЕсли;	
	
	
	Если НЕ Объект.ЭтоГруппа Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	НастройкиСоставаОбластейВидовОтчетов.КлючОбласти
		|ИЗ
		|	РегистрСведений.НастройкиСоставаОбластейВидовОтчетов КАК НастройкиСоставаОбластейВидовОтчетов
		|ГДЕ
		|	НастройкиСоставаОбластейВидовОтчетов.КлючОбласти <> &КлючОбласти
		|	И НастройкиСоставаОбластейВидовОтчетов.СтрокаОтчета В(&СтрокаОтчета)";
		
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			
			Запрос.Текст =  Запрос.Текст+"
			|	И ВЫБОР
			|			КОГДА НастройкиСоставаОбластейВидовОтчетов.ОрганизационнаяЕдиница = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ НастройкиСоставаОбластейВидовОтчетов.ОрганизационнаяЕдиница = &ОрганизационнаяЕдиница
			|		КОНЕЦ ";
			Запрос.УстановитьПараметр("ОрганизационнаяЕдиница",Объект.Организация);
			
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			
			Запрос.Текст =  Запрос.Текст+"
			|	И ВЫБОР
			|			КОГДА НастройкиСоставаОбластейВидовОтчетов.Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ НастройкиСоставаОбластейВидовОтчетов.Проект = &Проект
			|		КОНЕЦ ";
			
			Запрос.УстановитьПараметр("Проект",Объект.Проект);
			
		КонецЕсли;
			
		Запрос.УстановитьПараметр("КлючОбласти",Объект.Ссылка);	
		Запрос.УстановитьПараметр("СтрокаОтчета",Строки.ВыгрузитьЗначения());
			
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаШаблона = НСтр("ru = 'Ошибка сохранения элемента: %1. Данные элемента пересекаются с данными области %2'");
			
			Если Не ПустаяСтрока(СтрокаШаблона) тогда				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, Объект.Наименование, Выборка.КлючОбласти));
			КонецЕсли;
			
			Отказ = Истина;
			
		КонецЦикла;
			
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещенийФормы

&НаКлиенте
Процедура ВыборСтрокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена   Тогда
		 Возврат;
	КонецЕсли;	

	Строки.ЗагрузитьЗначения(Результат);	
	УстановитьВидимостьЭлементов();
	ЭтаФорма.Модифицированность = Истина;
	ИзмененСоставСтрок = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НастройкаПолномочий(Команда)
	
	Если ЭтаФорма.Модифицированность Тогда	
		ЭтаФорма.Записать();	
	КонецЕсли;	
		
	ОткрытьФорму("Обработка.СводнаяТаблица.Форма.ФормаУправленияМатрицейПолномочий", Новый Структура("ВерсияОрганизационнойСтруктуры,ОбъектБД,ШаблонДокументаБД", Неопределено,ДокументБД,Объект.Ссылка));

КонецПроцедуры

&НаКлиенте
Процедура СоставСтрокПриИзменении(Элемент)
	
	Если СоставСтрок = "ВсеСтроки" Тогда
		Объект.ВключатьВсеПоказателиВидаОтчета = Истина;			
	Иначе		
		Объект.ВключатьВсеПоказателиВидаОтчета = Ложь;	
	КонецЕсли;	
	
	ЭтаФорма.Модифицированность = Истина;
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключатьВсеПоказателиВидаОтчетаПриИзменении(Элемент)
	
	Элементы.Строки.Доступность = НЕ Объект.ВключатьВсеПоказателиВидаОтчета;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	
	Параметры_ = Новый Структура;	
	Параметры_.Вставить("ВидОтчета",Объект.Владелец);
	Параметры_.Вставить("МножественныйВыбор",Истина);
	Параметры_.Вставить("СписокСтрок",Строки);
	Параметры_.Вставить("Ракурс",Объект.Ссылка);

	Оповещение = Новый ОписаниеОповещения("ВыборСтрокЗавершение",ЭтаФорма);
	ОткрытьФорму("Справочник.СтрокиОтчетов.Форма.ФормаПодбораСтрокРакурса",Параметры_,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаписатьОбъект()
	
	РабочийОбъект = РеквизитФормыВЗначение("Объект");	
	РабочийОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
		
	Элементы.Строки.Видимость = НЕ Объект.ВключатьВсеПоказателиВидаОтчета;	
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Объект.ВключатьВсеПоказателиВидаОтчета Тогда
		ПроверяемыеРеквизиты.Добавить("Строки");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеСогласуемыхДанных() 
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ЗначенияСтатусовПоказателейСинтетика.ОбластьДанных
	                |ИЗ
	                |	РегистрСведений.ЗначенияСтатусовПоказателейСинтетика КАК ЗначенияСтатусовПоказателейСинтетика
	                |ГДЕ
	                |	ЗначенияСтатусовПоказателейСинтетика.ОбластьДанных = &ОбластьДанных
	                |	И ЗначенияСтатусовПоказателейСинтетика.ИндексСостояния <> 0";
					 
	Запрос.УстановитьПараметр("ОбластьДанных",Объект.Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		
		Возврат Истина;
		
	КонецЦикла;

	Возврат Ложь;
	
КонецФункции	
	



