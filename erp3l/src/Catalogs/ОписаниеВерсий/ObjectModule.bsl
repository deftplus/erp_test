
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем БезусловноеУдаление Экспорт;

Процедура ПередУдалением(Отказ)
	
	Перем СостояниеСогласования;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ БезусловноеУдаление Тогда
		
		Если Не ДополнительныеСвойства.Свойство("СостояниеСогласования", СостояниеСогласования) Тогда
			СостояниеСогласования = РасширениеПроцессыИСогласованиеУХ.ВернутьТекущееСостояние(ЭкземплярОтчета);
		КонецЕсли;
		
		Отказ = НЕ ЭкземплярОтчета.ПометкаУдаления 
			И (СостояниеСогласования = Перечисления.СостоянияОтчетов.Подготовлен 
				ИЛИ СостояниеСогласования = Перечисления.СостоянияОтчетов.Утвержден);
				
		Если Отказ Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Нельзя удалить версии для экземпляра отчета " + ЭкземплярОтчета + ", содержащего утвержденные данные");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если БезусловноеУдаление Тогда
		УдалитьПодчиненныеДокументы(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПодчиненныеДокументы(Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВерсииЗначенийПоказателей.Ссылка
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|ГДЕ
	|	ВерсииЗначенийПоказателей.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекОБъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОБъект.БезусловноеУдаление = БезусловноеУдаление;
		
		Если БезусловноеУдаление Тогда
			
			ТекОбъект.ОбменДанными.Загрузка=Истина;
			
		КонецЕсли;
		
		Попытка
			
			ТекОБъект.Удалить();
			
		Исключение
			
			Отказ = Истина;
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Отказ = Ложь;
	
КонецПроцедуры

БезусловноеУдаление=Ложь;

#КонецЕсли