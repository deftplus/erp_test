
&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ВидОперацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииНаСервере()
	
	МакетЗагрузки = Справочники.НастройкиПериодическихОпераций.ПолучитьМакет("Макет");
	ТаблицаОпераций.Очистить();
	ТаблицаКолонок.Очистить();
	
	ОбластьДатаСумма = МакетЗагрузки.ПолучитьОбласть("ДатаСумма");
	
	ТаблицаОпераций.Присоединить(ОбластьДатаСумма);
	ТаблицаОпераций.ФиксацияСверху = 1;
	
	НоваяСтрока=ТаблицаКолонок.Добавить();
	НоваяСтрока.НомерКолонки		= 1;
	НоваяСтрока.ИмяРеквизита		= "ДатаОперации";
	НоваяСтрока.ТипЗначенияСтрока	= "Дата";
	НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата);
	
	НоваяСтрока=ТаблицаКолонок.Добавить();
	НоваяСтрока.НомерКолонки		= 2;
	НоваяСтрока.ИмяРеквизита		= "СуммаОперации";
	НоваяСтрока.ТипЗначенияСтрока	= "Число";
	НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,2);
	
		
	ПараметрыОперации	= Новый Структура("ТипОперацииФИ");
	СтатьяБюджета		= ПараметрыОперации.СтатьяБюджета;
	
	Если ПараметрыОперации.ТипОперацииФИ=Перечисления.ТипыОперацийГрафикаФинансовыхИнструментов.Комиссии
		ИЛИ ПараметрыОперации.ТипОперацииФИ=Перечисления.ТипыОперацийГрафикаФинансовыхИнструментов.Проценты
		ИЛИ ПараметрыОперации.ТипОперацииФИ=Перечисления.ТипыОперацийГрафикаФинансовыхИнструментов.Штрафы Тогда
		
		ОбластьПараметрыРасчета=МакетЗагрузки.ПолучитьОбласть("ПараметрыРасчета");
		ТаблицаОпераций.Присоединить(ОбластьПараметрыРасчета);
		
		НоваяСтрока=ТаблицаКолонок.Добавить();
		НоваяСтрока.НомерКолонки		= 3;
		НоваяСтрока.ИмяРеквизита		= "ДатаНачала";
		НоваяСтрока.ТипЗначенияСтрока	= "Дата";
		НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата);
		
		НоваяСтрока=ТаблицаКолонок.Добавить();
		НоваяСтрока.НомерКолонки		= 4;
		НоваяСтрока.ИмяРеквизита		= "ДатаОкончания";
		НоваяСтрока.ТипЗначенияСтрока	= "Дата";
		НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата);
		
		НоваяСтрока=ТаблицаКолонок.Добавить();
		НоваяСтрока.НомерКолонки		= 5;
		НоваяСтрока.ИмяРеквизита		= "Продолжительность";
		НоваяСтрока.ТипЗначенияСтрока	= "Число";
		НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5);
		
		НоваяСтрока=ТаблицаКолонок.Добавить();
		НоваяСтрока.НомерКолонки		= 6;
		НоваяСтрока.ИмяРеквизита		= "Ставка";
		НоваяСтрока.ТипЗначенияСтрока	= "Число";
		НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(10,5);
		
		НоваяСтрока=ТаблицаКолонок.Добавить();
		НоваяСтрока.НомерКолонки		= 7;
		НоваяСтрока.ИмяРеквизита		= "БазаДляРасчета";
		НоваяСтрока.ТипЗначенияСтрока	= "Число";
		НоваяСтрока.ТипЗначения			= ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,2);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Валюта					= Параметры.Валюта;
	ВидОперации				= Параметры.ВидОперации;
	СпособРасчетаПроцентов	= Параметры.СпособРасчетаПроцентов;
	Если Параметры.Свойство("СчетОрганизации") Тогда
		СчетОрганизации			= Параметры.СчетОрганизации;
	КонецЕсли;
	Если Параметры.Свойство("СчетКонтрагента") Тогда
		СчетКонтрагента			= Параметры.СчетКонтрагента;
	КонецЕсли;
	ВидОперацииПриИзмененииНаСервере();
	
	ЗакрытьПослеЗагрузки		= Истина;
	ОчищатьПредыдущиеЗначения	= Истина;
				
КонецПроцедуры

&НаСервере
Функция ЗагрузитьОперацииНаСервере()
	
	ТекстОшибки="";
	
	ДанныеЗагрузки=Новый Структура;
	ДанныеЗагрузки.Вставить("ВидОперации",					ВидОперации);
	ДанныеЗагрузки.Вставить("СтатьяБюджета",				СтатьяБюджета);
	ДанныеЗагрузки.Вставить("Валюта",						Валюта);
	ДанныеЗагрузки.Вставить("СпособРасчета", 				СпособРасчетаПроцентов);
	ДанныеЗагрузки.Вставить("СчетОрганизации", 				СчетОрганизации);
	ДанныеЗагрузки.Вставить("СчетКонтрагента", 				СчетКонтрагента);
	ДанныеЗагрузки.Вставить("ОчищатьПредыдущиеЗначения", 	ОчищатьПредыдущиеЗначения);
	
	ТаблицаГрафика=Новый ТаблицаЗначений;
	
	Для Каждого СтрокаРеквизит ИЗ ТаблицаКолонок Цикл
		
		ТаблицаГрафика.Колонки.Добавить(СтрокаРеквизит.ИмяРеквизита,СтрокаРеквизит.ТипЗначения);
		
	КонецЦикла;
	
	Для ИндексСтроки=2 ПО ТаблицаОпераций.ВысотаТаблицы Цикл
		
		НоваяСтрока=ТаблицаГрафика.Добавить();
		
		Для Каждого СтрокаРеквизит ИЗ ТаблицаКолонок Цикл
			
			ТекстЗначения=СокрЛП(ТаблицаОпераций.Область(ИндексСтроки,СтрокаРеквизит.НомерКолонки).Текст);
			
			Если СтрокаРеквизит.НомерКолонки=1 И ПустаяСтрока(ТекстЗначения) Тогда
				
				ТаблицаГрафика.Удалить(НоваяСтрока);
				Прервать;
				
			КонецЕсли;
			
			ЗагруженноеЗначение=ОбщегоНазначенияУХ.ВыполнитьПреобразованиеТипов(ТекстЗначения,"Строка",СтрокаРеквизит.ТипЗначенияСтрока);
			
			Если ЗагруженноеЗначение=Неопределено Тогда
				
				ТекстОшибки = ТекстОшибки + Символы.ПС +
					СтрШаблон(Нстр("ru = 'Строка: %2, колонка: %3, текст: %4'"),
						ИндексСтроки, СтрокаРеквизит.НомерКолонки, ТекстЗначения);
				
			Иначе
				
				НоваяСтрока[СтрокаРеквизит.ИмяРеквизита] = ЗагруженноеЗначение;
				
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
	
	РезультатЗагрузки=Новый Структура;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		
		РезультатЗагрузки.Вставить("ТекстОшибки",НСтр("ru = 'Не удалось распознать значения в ячейках: '")+ТекстОшибки);
		
	Иначе
		
		ДанныеЗагрузки.		Вставить("ТаблицаГрафика",ТаблицаГрафика);
		РезультатЗагрузки.	Вставить("АдресЗагруженныхДанных",ПоместитьВоВременноеХранилище(ДанныеЗагрузки,Параметры.ИдентификаторРодителя));
		
	КонецЕсли;
	
	Возврат РезультатЗагрузки;
			
КонецФункции

&НаКлиенте
Процедура ЗагрузитьОперации(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		
		Сообщить(НСтр("ru = 'Необходимо указать вид операции.'"),СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		
		Сообщить(НСтр("ru = 'Необходимо указать валюту.'"),СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;

	РезультатЗагрузки=ЗагрузитьОперацииНаСервере();
	
	Если РезультатЗагрузки.Свойство("ТекстОшибки") Тогда
		
		Сообщить(НСтр("ru = 'Ошибки при загрузке данных:'") + " " + РезультатЗагрузки.ТекстОшибки);
		
	Иначе
		
		Оповестить("ЗагруженГрафикОпераций",РезультатЗагрузки.АдресЗагруженныхДанных);
		
		Если ЗакрытьПослеЗагрузки Тогда
			
			Закрыть();
			
		КонецЕсли;
		
	КонецЕсли;
			
КонецПроцедуры
