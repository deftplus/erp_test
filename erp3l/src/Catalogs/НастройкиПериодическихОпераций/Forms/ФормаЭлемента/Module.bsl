
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ЗаполнитьПоДоговоруКонтрагента();
	КонецЕсли;
	
	УстановитьВидимость();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.НастройкаОснование.Видимость=ЗначениеЗаполнено(Объект.НастройкаОснование);	
	
	Элементы.ДатаОкончания.Доступность=НЕ Объект.Бессрочный;
	
	Элементы.СуммаЛимита.Видимость=НЕ Объект.ТипПериодическихПлатежей=Перечисления.ВидыФинансовыхИнструментов.РасчетыСКонтрагентами;	
	
	
КонецПроцедуры // УстановитьВидимость() 

&НаКлиенте
Процедура БессрочныйПриИзменении(Элемент)
	
	Если Объект.Бессрочный Тогда
		
		Объект.ДатаОкончания="";
		
	КонецЕсли;
	
	УстановитьВидимость();
			
КонецПроцедуры

&НаКлиенте
Процедура ГрафикиОперацийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элементы.ГрафикиОпераций.ТекущиеДанные.СчетОрганизации	= СчетОрганизации;
	Элементы.ГрафикиОпераций.ТекущиеДанные.СчетКонтрагента	= СчетКонтрагента;
	Элементы.ГрафикиОпераций.ТекущиеДанные.Валюта			= Объект.Валюта;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодическиеОперацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элементы.ПериодическиеОперации.ТекущиеДанные.СчетОрганизации	= СчетОрганизации;
	Элементы.ПериодическиеОперации.ТекущиеДанные.СчетКонтрагента	= СчетКонтрагента;
	Элементы.ПериодическиеОперации.ТекущиеДанные.Валюта				= Объект.Валюта;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГрафик(Команда)
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Валюта",Объект.Валюта);
	СтруктураПараметров.Вставить("СпособРасчетаПроцентов",	Объект.СпособРасчетаПроцентов);
	СтруктураПараметров.Вставить("СчетОрганизации",			СчетОрганизации);
	СтруктураПараметров.Вставить("СчетКонтрагента",			СчетКонтрагента);
	СтруктураПараметров.Вставить("ИдентификаторРодителя",ЭтаФорма.УникальныйИдентификатор);
	
	ОткрытьФорму("Справочник.НастройкиПериодическихОпераций.Форма.ФормаЗагрузкаГрафиковОпераций",СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРезультатЗагрузкиГрафика(АдресЗагруженныхДанных)
	
	ДанныеЗагрузки=ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("ВидОперации",	ДанныеЗагрузки.ВидОперации);
	СтруктураПоиска.Вставить("Валюта",		ДанныеЗагрузки.Валюта);
	
	Если ЗначениеЗаполнено(ДанныеЗагрузки.СпособРасчета) Тогда
		
		СтруктураПоиска.Вставить("СпособРасчета",ДанныеЗагрузки.СпособРасчета);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗагрузки.СчетОрганизации) Тогда
		
		СтруктураПоиска.Вставить("СчетОрганизации",ДанныеЗагрузки.СчетОрганизации);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗагрузки.СчетКонтрагента) Тогда
		
		СтруктураПоиска.Вставить("СчетКонтрагента",ДанныеЗагрузки.СчетКонтрагента);
		
	КонецЕсли;
	
	Если ДанныеЗагрузки.ОчищатьПредыдущиеЗначения Тогда
		
		СтрокиКУдалению=Объект.ГрафикиОпераций.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого Строка Из СтрокиКУдалению Цикл
			
			Объект.ГрафикиОпераций.Удалить(Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПоиска.Вставить("СтатьяБюджета",ДанныеЗагрузки.СтатьяБюджета);
	
	Для Каждого Строка ИЗ ДанныеЗагрузки.ТаблицаГрафика Цикл
		
		НоваяСтрока=Объект.ГрафикиОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураПоиска);
		
	КонецЦикла;
	
	Объект.ГрафикиОпераций.Сортировать("ДатаОперации Возр");
	
КонецПроцедуры // ПолучитьРезультатЗагрузкиГрафика() 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ЗагруженГрафикОпераций" Тогда
		
		ПолучитьРезультатЗагрузкиГрафика(Параметр);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПериодическиеОперацииДатаНачалаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаОкончания)
		ИЛИ Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаОкончания<Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаНачала
		ИЛИ Элементы.ПериодическиеОперации.ТекущиеДанные.ИспользованиеЗначения=ПредопределенноеЗначение("Перечисление.СпособыИспользованияЗначенияПериодическойОперации.РазоваяОперация") Тогда
		
		Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаОкончания=Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаНачала;
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГрафик(Команда)
	
	РассчитатьГрафикНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикНаСервере()
	
	НастройкаОбъект=РеквизитФормыВЗначение("Объект");
	Объект.ГрафикиОпераций.Очистить();
	
	ТаблицаГрафика=Справочники.НастройкиПериодическихОпераций.ПолучитьТаблицуГрафикаОпераций(НастройкаОбъект);
	
	Для Каждого Строка ИЗ ТаблицаГрафика Цикл
		
		НоваяСтрока=Объект.ГрафикиОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
	КонецЦикла;
	
КонецПроцедуры // РассчитатьГрафикНаСервере()

&НаКлиенте
Процедура ПериодическиеОперацииСпособРасчетаГрафикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Элементы.ПериодическиеОперации.ТекущиеДанные.ИспользованиеЗначения=ПредопределенноеЗначение("Перечисление.СпособыИспользованияЗначенияПериодическойОперации.ПериодическаяОперация") Тогда
		
		ОткрытьФорму("Справочник.СпособыРасчетаГрафиковПериодическихОпераций.ФормаВыбора",,Элемент);
		
	ИначеЕсли Элементы.ПериодическиеОперации.ТекущиеДанные.ИспользованиеЗначения=ПредопределенноеЗначение("Перечисление.СпособыИспользованияЗначенияПериодическойОперации.БазаДляРасчетаПериодическихОпераций") Тогда
		
		ОткрытьФорму("Справочник.СпособыРасчетаСуммПериодическихОпераций.ФормаВыбора",,Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодическиеОперацииИспользованиеЗначенияПриИзменении(Элемент)
	
	Элементы.ПериодическиеОперации.ТекущиеДанные.СпособРасчета="";
	
	Если Элементы.ПериодическиеОперации.ТекущиеДанные.ИспользованиеЗначения=ПредопределенноеЗначение("Перечисление.СпособыИспользованияЗначенияПериодическойОперации.РазоваяОперация") Тогда
		
		Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаОкончания=Элементы.ПериодическиеОперации.ТекущиеДанные.ДатаНачала;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДоговоруКонтрагента()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДоговорКонтрагента,"БанковскийСчет,БанковскийСчетКонтрагента");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ЗначенияРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ЗаполнитьПоДоговоруКонтрагента();

КонецПроцедуры
