&НаКлиенте
Процедура ВидимостьДоступностьПриОткрытии()
	
	Если НЕ ВладелецФормы = Неопределено И ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") И ВладелецФормы.ИмяФормы = "Справочник.ПравилаПроверки.Форма.ФормаЭлемента" Тогда
		
		Элементы.Владелец.Видимость = Ложь;
		
	КонецЕсли;
	
	ВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьДоступность()
	
	ДоступностьКонтрольноеСоотношение = Булево(ПроизвольнаяПроцедура) = Ложь;
	Если НЕ (Элементы.КонтрольноеСоотношениеДоступность.ТекущаяСтраница = Элементы.КонтрольноеСоотношениеДоступностьИстина) = ДоступностьКонтрольноеСоотношение Тогда
		Если ДоступностьКонтрольноеСоотношение Тогда
			Элементы.КонтрольноеСоотношениеДоступность.ТекущаяСтраница = Элементы.КонтрольноеСоотношениеДоступностьИстина;
		Иначе
			Элементы.КонтрольноеСоотношениеДоступность.ТекущаяСтраница = Элементы.КонтрольноеСоотношениеДоступностьЛожь;
		КонецЕсли;
	КонецЕсли;
	
	ДоступностьПроизвольнаяПроцедураРедактировать = Булево(ПроизвольнаяПроцедура) = Истина;
	Если НЕ Элементы.ПроизвольнаяПроцедураРедактировать.Доступность = ДоступностьПроизвольнаяПроцедураРедактировать Тогда
		Элементы.ПроизвольнаяПроцедураРедактировать.Доступность = ДоступностьПроизвольнаяПроцедураРедактировать;
	КонецЕсли;
	
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() И НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		
		ПроизвольнаяПроцедура = Число(Объект.ПроизвольнаяПроцедура);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НазначениеРасчетов", Объект.Владелец);
		Запрос.УстановитьПараметр("ПотребительРасчета", Объект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроцедурыРасчетов.Процедура
		|ИЗ
		|	РегистрСведений.ПроцедурыРасчетов КАК ПроцедурыРасчетов
		|ГДЕ
		|	ПроцедурыРасчетов.НазначениеРасчетов = &НазначениеРасчетов
		|	И ПроцедурыРасчетов.ПотребительРасчета = &ПотребительРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеквизитыИсточниковДанныхДляФормул.ИсточникДанных,
		|	РеквизитыИсточниковДанныхДляФормул.КодИсточника
		|ИЗ
		|	РегистрСведений.РеквизитыИсточниковДанныхДляФормул КАК РеквизитыИсточниковДанныхДляФормул
		|ГДЕ
		|	РеквизитыИсточниковДанныхДляФормул.ПотребительРасчета = &ПотребительРасчета
		|	И РеквизитыИсточниковДанныхДляФормул.НазначениеРасчетов = &НазначениеРасчетов";
		
		НачатьТранзакцию();
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ЗафиксироватьТранзакцию();
		
		Если НЕ РезультатЗапроса[0].Пустой() Тогда
			
			Выборка = РезультатЗапроса[0].Выбрать();
			Выборка.Следующий();
			
			Текст = Выборка.Процедура;
			
			Если НЕ ПустаяСтрока(Текст) Тогда
					
				Если ПроизвольнаяПроцедура = 0 Тогда
				
					ЛевоеЗначение = Неопределено;
					ВидСравненияЗначение = Неопределено;
					ПравоеЗначение = Неопределено;
					
					Операнды = РезультатЗапроса[1].Выгрузить();
					
					Если Лев(Текст, 1) = "[" Тогда
						
						ПраваяСкобка = СтрНайти(Текст, "]");
						Код = Сред(Текст, 2, ПраваяСкобка - 2);
						
						СтрокаОперанда = Операнды.Найти(Код, "КодИсточника");
						Если НЕ СтрокаОперанда = Неопределено Тогда
							ЛевоеЗначение = СтрокаОперанда.ИсточникДанных;
						КонецЕсли;
						
						Текст = Сред(Текст, ПраваяСкобка + 1);
						
					Иначе
						
						Индекс = 1;
						Пока СтрНайти("=<>", Сред(Текст, Индекс, 1)) = 0 Цикл
							Индекс = Индекс + 1;
						КонецЦикла;
						
						ЛевоеВыражение = Лев(Текст, Индекс - 1);
						ЛевыйТипЗначения = ОбработкаФормулПовтИспУХ.ПодобратьТипЗначения(ЛевоеВыражение);
						ЛевоеЗначение = ЛевыйТипЗначения.ПривестиЗначение(ЛевоеВыражение);
						
						Текст = Сред(Текст, Индекс);
						
					КонецЕсли;
					
					Индекс = 1;
					Пока СтрНайти("=<>", Сред(Текст, Индекс, 1)) > 0 Цикл
						Индекс = Индекс + 1;
					КонецЦикла;
					
					ВидСравненияТекст = Лев(Текст, Индекс - 1);
					Текст = Сред(Текст, Индекс);
					
					ВидыСравнения = Перечисления.ВидыСравнения;
					Если ВидСравненияТекст = ">" Тогда
						ВидСравненияЗначение = ВидыСравнения.Больше;
					ИначеЕсли ВидСравненияТекст = "<" Тогда
						ВидСравненияЗначение = ВидыСравнения.Меньше; 
					ИначеЕсли ВидСравненияТекст = "<=" Тогда
						ВидСравненияЗначение =  ВидыСравнения.НеБольше;
					ИначеЕсли ВидСравненияТекст = ">=" Тогда
						ВидСравненияЗначение = ВидыСравнения.НеМеньше;
					ИначеЕсли ВидСравненияТекст = "<>" Тогда
						ВидСравненияЗначение = ВидыСравнения.НеРавно;
					ИначеЕсли ВидСравненияТекст = "=" Тогда
						ВидСравненияЗначение = ВидыСравнения.Равно;
					КонецЕсли;
					
					Если Лев(Текст, 1) = "[" Тогда
						
						ПраваяСкобка = СтрНайти(Текст, "]");
						Код = Сред(Текст, 2, ПраваяСкобка - 2);
						
						СтрокаОперанда = Операнды.Найти(Код, "КодИсточника");
						Если НЕ СтрокаОперанда = Неопределено Тогда
							ПравоеЗначение = СтрокаОперанда.ИсточникДанных;
						КонецЕсли;
						
					Иначе
						
						ПравоеВыражение = Текст;
						ПравыйТипЗначения = ОбработкаФормулПовтИспУХ.ПодобратьТипЗначения(ПравоеВыражение);
						ПравоеЗначение = ПравыйТипЗначения.ПривестиЗначение(ПравоеВыражение);
						
					КонецЕсли;
					
					Если НЕ ЛевоеЗначение = Неопределено И НЕ ВидСравненияЗначение = Неопределено И НЕ ПравоеЗначение = Неопределено Тогда
						
						КонтрольноеСоотношениеЛевоеЗначение = ЛевоеЗначение;
						КонтрольноеСоотношениеПравоеЗначение = ПравоеЗначение;
						КонтрольноеСоотношениеВидСравнения = ВидСравненияЗначение;
						
					КонецЕсли;
					
				Иначе
					
					ПроизвольнаяПроцедураТекст = Текст;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЭтаФорма.ТолькоПросмотр=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидимостьДоступностьПриОткрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = ЭтаФорма Тогда
		
		Если ИмяСобытия = "ОбщаяФорма.ФормаНастройкиФормулРасчета" Тогда
			
			ПроизвольнаяПроцедураТекст = Параметр.ТекстПроцедуры;
			ПроизвольнаяПроцедураПроизвольныйКод = Параметр.ПроизвольныйКод;
			
			Модифицированность = Истина;
		ИначеЕсли ИмяСобытия = "ИзмененаПроцедураРасчета" Тогда
			
			ПроизвольнаяПроцедураТекст = Параметр.ТекстПроцедуры;
			ПроизвольнаяПроцедураПроизвольныйКод = Истина;
			
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПроизвольнаяПроцедура = Булево(ПроизвольнаяПроцедура);
	
	Если ТекущийОбъект.ПроизвольнаяПроцедура Тогда
		ТекстПроцедуры = ПроизвольнаяПроцедураТекст;
	Иначе
		
		Если ТипЗнч(КонтрольноеСоотношениеЛевоеЗначение) = Тип("СправочникСсылка.ИсточникиДанныхДляРасчетов") Тогда
			Если ЗначениеЗаполнено(КонтрольноеСоотношениеЛевоеЗначение) Тогда
				ЛевоеЗначение = "[" + СокрЛП(КонтрольноеСоотношениеЛевоеЗначение.Код) + "]";
			Иначе
				ЛевоеЗначение = Неопределено;
			КонецЕсли;
		Иначе
			ЛевоеЗначение = Формат(КонтрольноеСоотношениеЛевоеЗначение, "ЧН=; ЧГ=; ДФ='dd.MM.yyyy HH:mm:ss'; БЛ=Ложь; БИ=Истина");
		КонецЕсли;
		
		Если ТипЗнч(КонтрольноеСоотношениеПравоеЗначение) = Тип("СправочникСсылка.ИсточникиДанныхДляРасчетов") Тогда
			Если ЗначениеЗаполнено(КонтрольноеСоотношениеПравоеЗначение) Тогда
				ПравоеЗначение = "[" + СокрЛП(КонтрольноеСоотношениеПравоеЗначение.Код) + "]";
			Иначе
				ПравоеЗначение = Неопределено;
			КонецЕсли;
		Иначе
			ПравоеЗначение = Формат(КонтрольноеСоотношениеПравоеЗначение, "ЧН=; ЧГ=; ДФ='dd.MM.yyyy HH:mm:ss'; БЛ=Ложь; БИ=Истина");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтрольноеСоотношениеВидСравнения) Тогда
			ВидыСравнения = Перечисления.ВидыСравнения;
			Если КонтрольноеСоотношениеВидСравнения = ВидыСравнения.Больше Тогда
				ВидСравненияТекст = ">";
			ИначеЕсли КонтрольноеСоотношениеВидСравнения = ВидыСравнения.Меньше Тогда
				ВидСравненияТекст = "<"; 
			ИначеЕсли КонтрольноеСоотношениеВидСравнения = ВидыСравнения.НеБольше Тогда
				ВидСравненияТекст = "<=";
			ИначеЕсли КонтрольноеСоотношениеВидСравнения = ВидыСравнения.НеМеньше Тогда
				ВидСравненияТекст = ">=";
			ИначеЕсли КонтрольноеСоотношениеВидСравнения = ВидыСравнения.НеРавно Тогда
				ВидСравненияТекст = "<>";
			ИначеЕсли КонтрольноеСоотношениеВидСравнения = ВидыСравнения.Равно Тогда
				ВидСравненияТекст = "=";
			КонецЕсли;
		Иначе
			ВидСравненияТекст = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛевоеЗначение) И ЗначениеЗаполнено(ВидСравненияТекст) И ЗначениеЗаполнено(ПравоеЗначение) Тогда
			ТекстПроцедуры = ЛевоеЗначение + ВидСравненияТекст + ПравоеЗначение;
		Иначе
			ТекстПроцедуры = "";
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("ТекстПроцедуры", ТекстПроцедуры);
	
	Если НЕ ТекущийОбъект.ПроизвольнаяПроцедура И ПустаяСтрока(ТекущийОбъект.Наименование) Тогда
		ТекущийОбъект.Наименование = ТекстПроцедуры;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("НазначениеРасчетов", ТекущийОбъект.Владелец);
	Структура.Вставить("ПотребительРасчета", ТекущийОбъект.Ссылка);
	Структура.Вставить("ТекстПроцедуры", ПараметрыЗаписи.ТекстПроцедуры);
	Структура.Вставить("ПроизвольныйКод", ПроизвольнаяПроцедураПроизвольныйКод);
	Структура.Вставить("ПроцедураВычисления", ПараметрыЗаписи.ТекстПроцедуры);
	Структура.Вставить("СпособОбработки", Перечисления.СпособыОбработкиПоказателейОтчетов.Заполнение);
	
	УправлениеОтчетамиУХ.ОтметитьИспользованиеОперандов(ТекущийОбъект.Владелец, ТекущийОбъект.Ссылка,, ПредопределенноеЗначение("Перечисление.СпособыИспользованияОперандов.ДляКонтрольныхСоотношений"), ПараметрыЗаписи.ТекстПроцедуры);
	УправлениеОтчетамиУХ.ЗаписатьПроцедуруРасчета(Структура);
	УправлениеОтчетамиУХ.ОчиститьЗаписиРегистраПараметрическихНастроек(ТекущийОбъект.Владелец);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура УровеньКритичностиОчистка(Элемент, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольнаяПроцедураЛожьПриИзменении(Элемент)
	
	ВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольнаяПроцедураИстинаПриИзменении(Элемент)
	
	ВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеЛевоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	КонтрольноеСоотношениеЛевоеПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеЛевоеЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеВидСравненияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	КонтрольноеСоотношениеЛевоеПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеПравоеЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизвольнаяПроцедураРедактировать(Команда)
		
	Если Объект.Ссылка.Пустая() Тогда
		
		Сообщить("Перед вводом произвольной процедуры элемент необходимо записать!");
		Возврат;
		
	КонецЕсли;
	
	Структура = Новый Структура;
	
	Структура.Вставить("НазначениеРасчетов", Объект.Владелец);
	Структура.Вставить("ПотребительРасчета", Объект.Ссылка);
	Структура.Вставить("СпособИспользования", ПредопределенноеЗначение("Перечисление.СпособыИспользованияОперандов.ДляКонтрольныхСоотношений"));
	
	Структура.Вставить("ТекстПроцедуры", ПроизвольнаяПроцедураТекст);
	Структура.Вставить("ПроизвольныйКод", ПроизвольнаяПроцедураПроизвольныйКод);
	
	ОткрытьФорму("ОбщаяФорма.ФормаНастройкиФормулРасчета", Структура, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольноеСоотношениеЛевоеПравоеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		СтандартнаяОбработка = Ложь;
		Сообщить("Перед вводом контрольного соотношения элемент необходимо записать!");
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

