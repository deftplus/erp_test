

Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПоОбъектуБД=1 Тогда
		
		РеквизитыШапкиДляСинхронизацииТЧ.Очистить();			
		ДобавитьПолеСинхронизации("Ссылка","ИсходныйОбъектСсылка");
				
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиДанныхДляРасчетовПравилаВычисленияПараметровЗапроса.СпособВычисленияПараметра КАК СпособОпределения,
	|	""ПравилаВычисления"" КАК ИмяТЧ
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов.ПравилаВычисленияПараметровЗапроса КАК ИсточникиДанныхДляРасчетовПравилаВычисленияПараметровЗапроса
	|ГДЕ
	|	ИсточникиДанныхДляРасчетовПравилаВычисленияПараметровЗапроса.Ссылка.НазначениеРасчетов = &НазначениеРасчетов
	|	И ИсточникиДанныхДляРасчетовПравилаВычисленияПараметровЗапроса.СпособВычисленияПараметра В (ЗНАЧЕНИЕ(Перечисление.СпособыВычисленияПараметровОперандов.ОрганизацияОтчета), ЗНАЧЕНИЕ(Перечисление.СпособыВычисленияПараметровОперандов.СценарийОтчета), ЗНАЧЕНИЕ(Перечисление.СпособыВычисленияПараметровОперандов.ВалютаОтчета))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Поле,
	|	""ПравилаЗаполнения""
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса КАК ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса
	|ГДЕ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.НазначениеРасчетов = &НазначениеРасчетов
	|	И ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияПолейИсточника.КонтекстОбъектаЗагрузки)";
	
	Запрос.УстановитьПараметр("НазначениеРасчетов",Ссылка);
	Результат=Запрос.Выполнить().Выбрать();
	
	ИспользуемыеРеквизитыКонтекстаЗагрузки.Очистить();
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.ИмяТЧ="ПравилаВычисления" Тогда
			
			Если Результат.СпособОпределения=Перечисления.СпособыВычисленияПараметровОперандов.ОрганизацияОтчета Тогда
				
				ДобавитьРеквизитКонтекста("Организация");
				
			ИначеЕсли Результат.СпособОпределения=Перечисления.СпособыВычисленияПараметровОперандов.СценарийОтчета Тогда
				
				ДобавитьРеквизитКонтекста("Сценарий");
				
			ИначеЕсли Результат.СпособОпределения=Перечисления.СпособыВычисленияПараметровОперандов.ВалютаОтчета Тогда
				
				ДобавитьРеквизитКонтекста("ОсновнаяВалюта");
				
			КонецЕсли;
			
		Иначе
			
			ДобавитьРеквизитКонтекста(Результат.СпособОпределения);
	
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.РеквизитОбъекта КАК ИмяРеквизита,
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.НастройкаСоответствия,
	|	ВЫБОР
	|		КОГДА ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.ПотребительРасчета ССЫЛКА Справочник.ТабличныеЧастиБД
	|			ТОГДА ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.ПотребительРасчета.Имя
	|		КОГДА ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.ПотребительРасчета ССЫЛКА Справочник.ПоказателиОбъектовБД
	|			ТОГДА ЕСТЬNULL(ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.ПотребительРасчета.ТабличнаяЧастьБД.Имя, ""Шапка"")
	|		ИНАЧЕ ""Шапка""
	|	КОНЕЦ КАК РасположениеРеквизита
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса КАК ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса
	|ГДЕ
	|	ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.Ссылка.НазначениеРасчетов = &НазначениеРасчетов
	|	И НЕ ИсточникиДанныхДляРасчетовПравилаИспользованияПолейЗапроса.НастройкаСоответствия = ЗНАЧЕНИЕ(Справочник.СоответствиеВнешнимИБ.ПустаяСсылка)";
	
	Результат=Запрос.Выполнить().Выбрать();
	НастройкиСоответствияРеквизитов.Очистить();
	
	Пока Результат.Следующий() Цикл
		
		ДобавитьНастройкуСоответствияРеквизита(Результат.РасположениеРеквизита,Результат.ИмяРеквизита,Результат.НастройкаСоответствия);
		
	КонецЦикла;
		  				
КонецПроцедуры

Процедура ДобавитьРеквизитКонтекста(ИмяРеквизита)
	
	Если ИспользуемыеРеквизитыКонтекстаЗагрузки.Найти(ИмяРеквизита,"ИмяРеквизита")=Неопределено Тогда
		
		НоваяСтрока=ИспользуемыеРеквизитыКонтекстаЗагрузки.Добавить();
		НоваяСтрока.ИмяРеквизита=ИмяРеквизита;
		
	КонецЕсли;
			
КонецПроцедуры // ДобавитьРеквизитКонтекста()

Процедура ДобавитьНастройкуСоответствияРеквизита(РасположениеРеквизита,ИмяРеквизита,НастройкаСоответствия)
	
	СтруктураПоиска=Новый Структура("РасположениеРеквизита,ИмяРеквизита",РасположениеРеквизита,ИмяРеквизита);
	
	Если НастройкиСоответствияРеквизитов.НайтиСтроки(СтруктураПоиска).Количество()=0 Тогда
		
		НоваяСтрока=НастройкиСоответствияРеквизитов.Добавить();
		НоваяСтрока.РасположениеРеквизита	= РасположениеРеквизита;
		НоваяСтрока.ИмяРеквизита			= ИмяРеквизита;
		НоваяСтрока.НастройкаСоответствия	= НастройкаСоответствия;
		
	КонецЕсли;
			
КонецПроцедуры // ДобавитьРеквизитКонтекста()
		
		
Процедура ДобавитьПолеСинхронизации(ИмяРеквизита,ИмяПоля)
	
	СтрРеквизит=ИсходныйОбъектБД.Реквизиты.Найти(ИмяРеквизита,"Имя");
	
	Если НЕ СтрРеквизит=Неопределено Тогда
		
		НоваяСтрока=РеквизитыШапкиДляСинхронизацииТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрРеквизит);
		НоваяСтрока.Имя=ИмяПоля;
		
	КонецЕсли;
		
КонецПроцедуры // ДобавитьПолеСинхронизации()		
		
		

