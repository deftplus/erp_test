#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОбновитьГруппу(ОбъектГруппа, ОбновитьВидОтчета = Истина) Экспорт

	Если ОбъектГруппа.Предопределенный Тогда
		ОбновитьПредопределеннуюГруппуАналитик(ОбъектГруппа, ОбновитьВидОтчета);
	КонецЕсли;
	
	Если ОбъектГруппа.ВидОтчетаИсточник.Пустая() Тогда
	    ОбъектГруппа.ВидОтчетаИсточник = Справочники.ВидыОтчетов.ПолучитьВидОтчетаОСВ(Справочники.ПланыСчетовБД.ПолучитьПланСчетовБД("МСФО"));
	КонецЕсли;
	
	Если ОбъектГруппа.ГруппаАналитикИсточник.Пустая() Тогда
		ОбъектГруппа.ГруппаАналитикИсточник = Справочники.ГруппыРаскрытия.ПустаяСсылка();
	КонецЕсли;
		
КонецПроцедуры

Функция ГруппаЗаполнена(ФиксированнаяГруппа, ВыдаватьСообщенияОбОшибках = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""Не заполнена группа раскрытия в фиксированной группе аналитик"" КАК СодержаниеОшибки,
	|	ФиксированныеГруппыАналитик.Ссылка КАК УточнениеОшибки
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик КАК ФиксированныеГруппыАналитик
	|ГДЕ
	|	ФиксированныеГруппыАналитик.Ссылка = &ФиксированнаяГруппа
	|	И (ФиксированныеГруппыАналитик.ВидОтчетаИсточник = ЗНАЧЕНИЕ(Справочник.ВидыОтчетов.ПустаяСсылка)
	|			ИЛИ ФиксированныеГруппыАналитик.ГруппаАналитикИсточник = ЗНАЧЕНИЕ(Справочник.ГруппыРаскрытия.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""В фиксированной группе аналитик не заполнен источник обязательной аналитики"",
	|	ВЫРАЗИТЬ(ФиксированныеГруппыАналитик.ИмяПриемника КАК СТРОКА(100))
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеАналитики КАК ФиксированныеГруппыАналитик
	|ГДЕ
	|	ФиксированныеГруппыАналитик.Ссылка = &ФиксированнаяГруппа
	|	И ФиксированныеГруппыАналитик.ПриемникОбязателен
	|	И (ФиксированныеГруппыАналитик.ТипПриемника = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
	|			ИЛИ (ВЫРАЗИТЬ(ФиксированныеГруппыАналитик.ПутьИсточника КАК СТРОКА(300))) = """")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""В фиксированной группе аналитик не заполнен источник обязательного показателя"",
	|	ВЫРАЗИТЬ(ФиксированныеГруппыАналитик.ИмяПриемника КАК СТРОКА(100))
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеПоказатели КАК ФиксированныеГруппыАналитик
	|ГДЕ
	|	ФиксированныеГруппыАналитик.Ссылка = &ФиксированнаяГруппа
	|	И ФиксированныеГруппыАналитик.ПриемникОбязателен
	|	И ФиксированныеГруппыАналитик.ПоказательОтчетаИсточник = ЗНАЧЕНИЕ(Справочник.ПоказателиОтчетов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Не заполнена таблица аналитик для фиксированной группы аналитик"",
	|	&ФиксированнаяГруппа
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеАналитики КАК ФиксированныеГруппыАналитик
	|ГДЕ
	|	ФиксированныеГруппыАналитик.Ссылка = &ФиксированнаяГруппа
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ФиксированныеГруппыАналитик.Ссылка) = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Не заполнена таблица показателей для фиксированной группы аналитик"",
	|	&ФиксированнаяГруппа
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеПоказатели КАК ФиксированныеГруппыАналитик
	|ГДЕ
	|	ФиксированныеГруппыАналитик.Ссылка = &ФиксированнаяГруппа
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ФиксированныеГруппыАналитик.Ссылка) = 0";
	
	Запрос.УстановитьПараметр("ФиксированнаяГруппа", ФиксированнаяГруппа);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если ВыдаватьСообщенияОбОшибках = Ложь Тогда
	
		Возврат РезультатЗапроса.Пустой();
		
	Иначе
		
		Если РезультатЗапроса.Пустой() Тогда
			Возврат Истина;
		Иначе
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОбщегоНазначенияУХ.СообщитьОбОшибке(Выборка.СодержаниеОшибки + ": " + Выборка.УточнениеОшибки, , , СтатусСообщения.Информация);
			КонецЦикла;
			
			Возврат Ложь;
						
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПредопределенных

Процедура ОбновитьПредопределеннуюГруппуАналитик(ОбъектГруппа, ОбновитьВидОтчета = Истина) Экспорт

	Макет = ПолучитьМакет("Макет_ru");
	ОбластьМакета = Макет.Области.Найти(ОбъектГруппа.ИмяПредопределенныхДанных);
	
	Если ОбластьМакета = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Не найден макет заполнения предопределенного элемента:'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения + ОбъектГруппа.ИмяПредопределенныхДанных);
		Возврат;
	КонецЕсли;
	
	Для НомерСтроки = ОбластьМакета.Верх По ОбластьМакета.Низ Цикл
		
		Если ПолучитьБулево(Макет.Область(НомерСтроки,2).Текст) = Истина Тогда
			
			// Аналитика
			СтрокаТЧ = ПолучитьСтрокуТЧ(ОбъектГруппа.ФиксированныеАналитики, Макет.Область(НомерСтроки,1).Текст);
			СтрокаТЧ.ТипПриемника = ПолучитьТипПриемника(Макет.Область(НомерСтроки, 3).Текст);
			СтрокаТЧ.ПриемникОбязателен = ПолучитьБулево(Макет.Область(НомерСтроки,4).Текст);
			
		Иначе
			
			// Показатель
			СтрокаТЧ = ПолучитьСтрокуТЧ(ОбъектГруппа.ФиксированныеПоказатели, Макет.Область(НомерСтроки,1).Текст);
			СтрокаТЧ.ТипПриемника = ОбщегоНазначенияУХ.ПолучитьЗначениеПеречисленияПоИмени("ТипыЗначенийПоказателейОтчетов", Макет.Область(НомерСтроки,3).Текст);
			СтрокаТЧ.ПриемникОбязателен = ПолучитьБулево(Макет.Область(НомерСтроки,4).Текст);
			
		КонецЕсли; 	
		
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьСоотвествиеАналитик(ГруппаАналитикИсточник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ГруппыРаскрытия.ВидАналитики1,
	|	ГруппыРаскрытия.ВидАналитики2,
	|	ГруппыРаскрытия.ВидАналитики3,
	|	ГруппыРаскрытия.ВидАналитики4,
	|	ГруппыРаскрытия.ВидАналитики5,
	|	ГруппыРаскрытия.ВидАналитики6
	|ИЗ
	|	Справочник.ГруппыРаскрытия КАК ГруппыРаскрытия
	|ГДЕ
	|	ГруппыРаскрытия.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ГруппаАналитикИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	АналитикиРаскрытия = Новый Соответствие;
	
	Для НомерАналитики = 1 По 6 Цикл
		АналитикиРаскрытия.Вставить(НомерАналитики, Выборка["ВидАналитики"+НомерАналитики]);
	КонецЦикла;

	Возврат АналитикиРаскрытия;
	
КонецФункции

Функция ПолучитьБулево(ТекстЯчейки)
	Возврат ?(ТекстЯчейки = "Истина", Истина, Ложь);
КонецФункции

Функция ПолучитьТипПриемника(ТекстЯчейки)

	Если СтрНайти("ЧислоСтрокаДатаБулево", ТекстЯчейки) > 0 Тогда
		
		Попытка
			Возврат Перечисления.ТипыЗначенийПоказателейОтчетов[ТекстЯчейки];		
		Исключение		
		КонецПопытки;
		
	КонецЕсли;
	
	Попытка
		РезультатЗначение = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные[ТекстЯчейки];
	Исключение
		РезультатЗначение = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка();
	КонецПопытки;
	
	Возврат РезультатЗначение;

КонецФункции

Функция ПолучитьСтрокуТЧ(ТЧ, ИмяПриемника)

	СтрокаТЧ = ТЧ.Найти(ИмяПриемника, "ИмяПриемника");
	Если СтрокаТЧ = Неопределено Тогда
		СтрокаТЧ = ТЧ.Добавить();
		СтрокаТЧ.ИмяПриемника = ИмяПриемника;
	КонецЕсли;

	Возврат СтрокаТЧ;
	
КонецФункции

#КонецОбласти

Функция ПолучитьПараметрыЗаполнения(ФиксированнаяГруппаАналитик) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.Ссылка КАК ГруппаАналитик,
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.Ссылка.ВидОтчетаИсточник.Код КАК КодВидаОтчета,
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.ИмяПриемника КАК ИмяПриемника,
	|	ВЫРАЗИТЬ(ФиксированныеГруппыАналитикФиксированныеАналитики.ПутьИсточника КАК СТРОКА(300)) КАК Источник,
	|	ИСТИНА КАК Аналитика,
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.КлючОтбора,
	|	NULL КАК Поле1,
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.ТипПриемника
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеАналитики КАК ФиксированныеГруппыАналитикФиксированныеАналитики
	|ГДЕ
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.Ссылка В(&Ссылка)
	|	И (ВЫРАЗИТЬ(ФиксированныеГруппыАналитикФиксированныеАналитики.ПутьИсточника КАК СТРОКА(300))) <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.Ссылка,
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.Ссылка.ВидОтчетаИсточник.Код,
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.ИмяПриемника,
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.ПоказательОтчетаИсточник,
	|	ЛОЖЬ,
	|	NULL,
	|	0,
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.ТипПриемника
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеПоказатели КАК ФиксированныеГруппыАналитикФиксированныеПоказатели
	|ГДЕ
	|	ФиксированныеГруппыАналитикФиксированныеПоказатели.Ссылка В(&Ссылка)
	|	И ФиксированныеГруппыАналитикФиксированныеПоказатели.ПоказательОтчетаИсточник <> ЗНАЧЕНИЕ(Справочник.ПоказателиОтчетов.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Ссылка", ФиксированнаяГруппаАналитик);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ПолучитьГруппыПриемника(ТипПриемник) Экспорт

	ФиксированныеГруппы = Новый Массив;
	
	Если ТипПриемник = Тип("ДокументСсылка.РезервыПоЗапасам") Тогда
		
		ФиксированныеГруппы.Добавить(РезервыМПЗ_НачислениеРезерваМСФО);
		ФиксированныеГруппы.Добавить(РезервыМПЗ_ДвижениеРезервовНСБУ);		
		
	ИначеЕсли ТипПриемник = Тип("ДокументСсылка.РезервыПоДЗИАвансамВыданным") Тогда
		
		ФиксированныеГруппы.Добавить(РезервыДЗ_НачислениеРезерваМСФО);
		ФиксированныеГруппы.Добавить(РезервыДЗ_ДвижениеРезервовНСБУ);
		ФиксированныеГруппы.Добавить(РезервыДЗ_КорректировкиРезервовМСФО);
				
	ИначеЕсли ТипПриемник = Тип("ДокументСсылка.ПереоценкаФинансовыхИнструментов") Тогда
		
		ФиксированныеГруппы.Добавить(ПереоценкаФИ_БалансоваяСтоимостьДоговоры);
		ФиксированныеГруппы.Добавить(ПереоценкаФИ_БалансоваяСтоимостьЦБ);
						
	КонецЕсли;
	
	Возврат ФиксированныеГруппы; 

КонецФункции

Функция ПолучитьРасшифровкуПоПриемнику(Приемник) Экспорт

	ФиксированныеГруппы = ПолучитьГруппыПриемника(ТипЗнч(Приемник));
	
	Расшифровки = Новый Массив;
	КэшРасшифровок = Новый Соответствие;
	
	ТабОтчеты = ПолучитьЭкземплярыПоГруппам(ФиксированныеГруппы, Приемник.Сценарий, Приемник.Организация, Приемник.ПериодОтчета); 
	
	Для каждого ФиксированнаяГруппа Из ФиксированныеГруппы Цикл
	
		СтрокаТаб = ТабОтчеты.Найти(ФиксированнаяГруппа.ВидОтчетаИсточник, "ВидОтчета");
		Если СтрокаТаб = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПоказателей = КэшРасшифровок.Получить(СтрокаТаб.Отчет);
				
		Если МассивПоказателей = Неопределено Тогда		
			МассивПоказателей = Новый Массив;		
		КонецЕсли;		
		
		Для каждого СтрокаПоказатель Из ФиксированнаяГруппа.ФиксированныеПоказатели Цикл
			МассивПоказателей.Добавить(СокрЛП(СтрокаПоказатель.ПоказательОтчетаИсточник.Код));	
		КонецЦикла;		
		
		КэшРасшифровок.Вставить(СтрокаТаб.Отчет, МассивПоказателей);
		
	КонецЦикла;
	
	Для каждого ЭлементКэша Из КэшРасшифровок Цикл		
		Расшифровки.Добавить(Новый Структура("Ключ,МассивПоказателей", ЭлементКэша.Ключ, Новый ФиксированныйМассив(ЭлементКэша.Значение)));	
	КонецЦикла;
	
	Возврат Расшифровки;

КонецФункции

Функция ПолучитьЭкземплярыПоГруппам(ФиксированныеГруппы, Сценарий, Организация, ПериодОтчета)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка КАК Отчет,
	|	НастраиваемыйОтчет.ВидОтчета КАК ВидОтчета
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|ГДЕ
	|	НастраиваемыйОтчет.Организация = &Организация
	|	И НастраиваемыйОтчет.ПериодОтчета = &ПериодОтчета
	|	И НастраиваемыйОтчет.Сценарий = &Сценарий
	|	И НастраиваемыйОтчет.ВидОтчета В
	|			(ВЫБРАТЬ
	|				т.ВидОтчетаИсточник
	|			ИЗ
	|				Справочник.ФиксированныеГруппыАналитик КАК т
	|			ГДЕ
	|				т.Ссылка В (&ФиксированныеГруппы))");
	
	Запрос.УстановитьПараметр("ФиксированныеГруппы",	ФиксированныеГруппы);
	Запрос.УстановитьПараметр("Сценарий", 				Сценарий);
	Запрос.УстановитьПараметр("Организация", 			Организация);
	Запрос.УстановитьПараметр("ПериодОтчета", 			ПериодОтчета);
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

Функция ПолучитьОписаниеТаблицы(ФиксированныеГруппы) Экспорт

	КолонкиТаблицы = Новый СписокЗначений;
	ИменаКолонок = Новый Структура;
	Для каждого ТекСтрока Из ФиксированныеГруппы.ФиксированныеАналитики Цикл
		
		ТипКолонки = Тип("Строка");
		Если ТипЗнч(ТекСтрока.ТипПриемника) = Тип("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные") Тогда
			ТипКолонки = ТекСтрока.ТипПриемника.ТипЗначения;
		ИначеЕсли ТипЗнч(ТекСтрока.ТипПриемника) = Тип("ПеречислениеСсылка.ТипыЗначенийПоказателейОтчетов") Тогда	
			
			Если ТекСтрока.ТипПриемника = Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда
				ТипКолонки = ОбщегоНазначения.ОписаниеТипаЧисло(18, 2);
			ИначеЕсли ТекСтрока.ТипПриемника = Перечисления.ТипыЗначенийПоказателейОтчетов.Дата Тогда
				ТипКолонки = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя);
			ИначеЕсли ТекСтрока.ТипПриемника = Перечисления.ТипыЗначенийПоказателейОтчетов.Булево Тогда
				ТипКолонки = Новый ОписаниеТипов("Булево");
			Иначе 
				ТипКолонки = ОбщегоНазначения.ОписаниеТипаСтрока(0);
			КонецЕсли;
			
		КонецЕсли;
		КолонкиТаблицы.Добавить(ТипКолонки, ТекСтрока.ИмяПриемника);
		ИменаКолонок.Вставить(ТекСтрока.ИмяПриемника);
	КонецЦикла;
	
	Для каждого ТекСтрока Из ФиксированныеГруппы.ФиксированныеПоказатели Цикл
		
		Если ИменаКолонок.Свойство(ТекСтрока.ИмяПриемника) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипКолонки = Тип("Строка");
		Если ТипЗнч(ТекСтрока.ТипПриемника) = Тип("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные") Тогда
			ТипКолонки = ТекСтрока.ТипПриемника.ТипЗначения;
		ИначеЕсли ТипЗнч(ТекСтрока.ТипПриемника) = Тип("ПеречислениеСсылка.ТипыЗначенийПоказателейОтчетов") Тогда	
			ТипКолонки = ОбщегоНазначения.ОписаниеТипаСтрока(0);
		КонецЕсли;
		КолонкиТаблицы.Добавить(ТипКолонки, ТекСтрока.ИмяПриемника);
		
		ИменаКолонок.Вставить(ТекСтрока.ИмяПриемника);
		
	КонецЦикла;
	
	Возврат КолонкиТаблицы;	

КонецФункции

#КонецЕсли

