#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаОбъекта" И ВидФормы <> "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВидФинансовогоИнструмента = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		ВидФинансовогоИнструмента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидФинансовогоИнструмента");
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидФинансовогоИнструмента) И Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ВидФинансовогоИнструмента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования, "ВидФинансовогоИнструмента");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидФинансовогоИнструмента) И Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("ВидФинансовогоИнструмента") Тогда
		ВидФинансовогоИнструмента = Параметры.Отбор.ВидФинансовогоИнструмента;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидФинансовогоИнструмента) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидФинансовогоИнструмента") Тогда
				ВидФинансовогоИнструмента = Параметры.ЗначенияЗаполнения.ВидФинансовогоИнструмента;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если ВидФинансовогоИнструмента = Неопределено Тогда
			
			ВыбраннаяФорма = "ФормаВыбораВидаФинансовогоИнструмента";
			
		Иначе
			
			ВыбраннаяФорма = ПолучитьСоответствиеВидовФинансовыхИнструментовФормамЭлементов()[ВидФинансовогоИнструмента];
			
		КонецЕсли;
		
		Если ВыбраннаяФорма = Неопределено Тогда
			ВыбраннаяФорма = "ФормаЭлемента";
		КонецЕсли;
		
	ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
		ВыбраннаяФорма = ПолучитьСоответствиеВидовФинансовыхИнструментовФормамВыбора()[ВидФинансовогоИнструмента];
		Если ВыбраннаяФорма = Неопределено Тогда
			ВыбраннаяФорма = "ФормаВыбора";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСоответствиеВидовФинансовыхИнструментовФормамЭлементов() Экспорт
	
	ФормыЦенныхБумаг = Новый Соответствие;
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Акция, "ФормаЭлемента");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Вексель, "ФормаВекселя");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Облигация, "ФормаЭлемента");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.ПрочиеЦенныеБумаги, "ФормаЭлемента");
	
	Возврат ФормыЦенныхБумаг;
	
КонецФункции

Функция ПолучитьСоответствиеВидовФинансовыхИнструментовФормамВыбора() Экспорт
	
	ФормыЦенныхБумаг = Новый Соответствие;
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Акция, "ФормаВыбора");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Вексель, "ФормаВыбораВекселя");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.Облигация, "ФормаВыбора");
	ФормыЦенныхБумаг.Вставить(Перечисления.ВидыФинансовыхИнструментов.ПрочиеЦенныеБумаги, "ФормаВыбора");
	
	Возврат ФормыЦенныхБумаг;
	
КонецФункции

// Заполняет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВстраиваниеУХ.ДобавитьКомандуОбработчик(КомандыОтчетов, "ДокументыПоЦеннойБумаге", НСтр("ru = 'Документы по ценной бумаге'"));	
	ВстраиваниеУХ.ДобавитьКомандуОбработчик(КомандыОтчетов, "КарточкаФинансовогоИнструмента", НСтр("ru = 'Карточка ценной бумаги (Хозрасчетный)'"));
	ФинансовыеИнструментыУХ.ДобавитьКомандуОтчет(КомандыОтчетов, "Отчет.ГрафикиЦенныхБумаг", НСтр("ru = 'График ценной бумаги'"));
	ФинансовыеИнструментыУХ.ДобавитьКомандуОтчет(КомандыОтчетов, "Отчет.ВедомостьПоПартиямЦенныхБумаг", НСтр("ru = 'Ведомость по партиям ценной бумаги'"));
	
	//МСФО
	ФинансовыеИнструментыУХ.ДобавитьКомандуОтчет(КомандыОтчетов, "Отчет.ГрафикиФИ", НСтр("ru = 'График ценной бумаги (МСФО)'"));
	ФинансовыеИнструментыУХ.ДобавитьКомандуОтчет(КомандыОтчетов, "Отчет.РаспределениеНачисленийПоФинансовымИнструментамНаОбъекты", НСтр("ru = 'Распределение начислений по финансовым инструментам на объекты (МСФО)'"));
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Представление = НСтр("ru = 'Приобретение ценной бумаги'");
	ФинансовыеИнструментыУХ.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, "ПриобретениеЦеннойБумаги", Представление);
	
	Представление = НСтр("ru = 'Оплата ценной бумаги'");
	ФинансовыеИнструментыУХ.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, "ОплатаЦеннойБумаги", Представление);
	
	Представление = НСтр("ru = 'Продажа ценной бумаги'");
	ФинансовыеИнструментыУХ.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, "ПродажаЦеннойБумаги", Представление);
	
	Представление = НСтр("ru = 'Выпуск собственной ценной бумаги организацией-эмитентом'");
	ФинансовыеИнструментыУХ.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, "ВыпускЦеннойБаги", Представление);
	
	Представление = НСтр("ru = 'Выкуп собственной ценной бумаги организацией-эмитентом'");
	ФинансовыеИнструментыУХ.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, "ВыкупЦеннойБаги", Представление);
	
КонецПроцедуры

#КонецЕсли
