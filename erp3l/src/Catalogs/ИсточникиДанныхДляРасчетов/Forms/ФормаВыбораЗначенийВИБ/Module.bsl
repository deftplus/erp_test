
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НаименованиеСправочника	= Параметры.НаименованиеСправочника;
	НеЗакрыватьПриВыборе	= Параметры.НеЗакрыватьПриВыборе;
	ТипМетаДанных			= Параметры.ТипМетаДанных;
	СправочникБД			= Параметры.СправочникБД;

	ЗакрыватьПриВыборе=НЕ НеЗакрыватьПриВыборе;
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Использование77",			Параметры.Использование77);
	СтруктураПараметров.Вставить("КодНеИспользуется",		Параметры.КодНеИспользуется);
	СтруктураПараметров.Вставить("Наименование",			Параметры.Наименование);
	СтруктураПараметров.Вставить("НаименованиеСправочника",	Параметры.НаименованиеСправочника);
	СтруктураПараметров.Вставить("ТипБД",					Параметры.ТипБД);
	СтруктураПараметров.Вставить("ТипМетаДанных",			Параметры.ТипМетаДанных);
	СтруктураПараметров.Вставить("СправочникБД",			Параметры.СправочникБД);
	СтруктураПараметров.Вставить("ВнешняяИнформационнаяБаза",Параметры.ВнешняяИнформационнаяБаза);
	
	Если ПустаяСтрока(Параметры.АдресДереваОбъектов) Тогда
		
		Использование77=Параметры.Использование77;
		ИспользуемаяИБ=Параметры.ТипБД.ВИБПоУмолчанию;				
		СправочникБД=Параметры.СправочникБД;
		
		Если ТипМетаДанных = "Справочник" ИЛИ ТипМетаДанных="Документ" ИЛИ ТипМетаДанных="ПланВидовХарактеристик" ИЛИ ТипМетаДанных="ПланСчетов" Тогда
			
			ДанныеСправочника = РасширениеИнтеграцииУХ.ЗаполнитьДеревоЗначенийДляСправочникаВИБ(СтруктураПараметров);
			
		ИначеЕсли ТипМетаДанных = "Перечисление" Тогда
			
			ДанныеСправочника = РасширениеИнтеграцииУХ.ЗаполнитьДеревоЗначенийДляПеречисленияВИБ(СтруктураПараметров);
			
		КонецЕсли;
		
		ДеревоЗначений=ДанныеСправочника.ДеревоЗначений;
		КодНеИспользуется=ДанныеСправочника.КодНеИспользуется;
		
	Иначе
		
		ДеревоЗначений=ПолучитьИзВременногоХранилища(Параметры.АдресДереваОбъектов);
		КодНеИспользуется=Параметры.КодНеИспользуется;
		
	КонецЕсли;
	
	Код=Параметры.Код;
	Наименование=Параметры.Наименование;
	
	Элементы.ТабличноеПолеЗначенияВИБКод.Видимость=(Не ЗначениеЗаполнено(Параметры.ВнешняяИнформационнаяБаза));
	
	Заголовок=ТипМетаДанных+": "+СправочникБД;
	
	ЗначениеВРеквизитФормы(ДеревоЗначений,"ТабличноеПолеЗначенияВИБ");
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлемент(Команда)
	
	ДанныеДляВыбора=Элементы.ТабличноеПолеЗначенияВИБ.ТекущиеДанные;
	
	Если НЕ ДанныеДляВыбора=Неопределено Тогда
		
		ПолученноеЗначение = Новый СписокЗначений;	
		ПолученноеЗначение.Добавить(ДанныеДляВыбора.Код, ДанныеДляВыбора.Наименование, Истина);
						
		Если НеЗакрыватьПриВыборе Тогда
			
			Оповестить("ВыбранЭлементВИБ",ПолученноеЗначение);
			
		Иначе
			
			Закрыть(ПолученноеЗначение);
			
		КонецЕсли;
			
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ТабличноеПолеЗначенияВИБВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеДляВыбора=Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	ПолученноеЗначение = Новый СписокЗначений;
	ПолученноеЗначение.Добавить(ДанныеДляВыбора.Код, ДанныеДляВыбора.Наименование, Истина);

	Если НеЗакрыватьПриВыборе Тогда
		
		Оповестить("ВыбранЭлементВИБ",ПолученноеЗначение);
		
	Иначе
		
		Закрыть(ПолученноеЗначение);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивНайденных=Новый Массив;
	
	Если ЗначениеЗаполнено(Код) Тогда
		
		Если СтрНайти(Код,"{#@UUID@#}")>0 Тогда 
			
			МассивНайденных=УниверсальныеМеханизмыКлиентУХ.ДеревоФормыНайтиСтроки(ТабличноеПолеЗначенияВИБ,Новый Структура("Код",Код));
			
		ИначеЕсли ЗначениеЗаполнено(Наименование) Тогда
			
			МассивНайденных=УниверсальныеМеханизмыКлиентУХ.ДеревоФормыНайтиСтроки(ТабличноеПолеЗначенияВИБ,Новый Структура("Код,Наименование",Код,Наименование));
			
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(Наименование) Тогда
		
		МассивНайденных=УниверсальныеМеханизмыКлиентУХ.ДеревоФормыНайтиСтроки(ТабличноеПолеЗначенияВИБ,Новый Структура("Наименование",Наименование));
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Если МассивНайденных.Количество()>0 Тогда
		
		Элементы.ТабличноеПолеЗначенияВИБ.ТекущаяСтрока=МассивНайденных[0].ПолучитьИдентификатор();
		
	КонецЕсли;
			
КонецПроцедуры


