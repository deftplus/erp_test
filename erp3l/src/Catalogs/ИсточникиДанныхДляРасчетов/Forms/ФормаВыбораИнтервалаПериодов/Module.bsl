
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ГраницыИнтервала.Количество()=2 Тогда
		
		ГраницаНач=Параметры.ГраницыИнтервала[0].Значение;
		
		Если ТипЗнч(ГраницаНач)=Тип("Соответствие") Тогда
			
			Для Каждого Граница ИЗ ГраницаНач Цикл
				СпособВычисленияНачалаИнтервала=Граница.Ключ;
				УточнениеСпособаОпределенияНач=Граница.Значение;
			КонецЦикла;
			
		Иначе
			СпособВычисленияНачалаИнтервала=ГраницаНач;
		КонецЕсли;
		
		ГраницаКон=Параметры.ГраницыИнтервала[1].Значение;
		
		Если ТипЗнч(ГраницаКон)=Тип("Соответствие") Тогда
			
			Для Каждого Граница ИЗ ГраницаКон Цикл
				СпособВычисленияОкончанияИнтервала=Граница.Ключ;
				УточнениеСпособаОпределенияКон=Граница.Значение;
			КонецЦикла;
			
		Иначе
			
			СпособВычисленияОкончанияИнтервала=ГраницаКон;
			
		КонецЕсли;
		
	Иначе
		
		СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаПериодаОтчета;
		СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаПериодаОтчета;
		
	КонецЕсли;
	
	ТипСтрока=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(0);
	ТипЧисло=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5);
	ТипДата=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя);
	
	УстановитьПараметрыНач();
	УстановитьПараметрыКон();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыНач()
	
	Если (Не ЗначениеЗаполнено(СпособВычисленияНачалаИнтервала))
		ИЛИ СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаГода 
		ИЛИ СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаПериодаОтчета
		ИЛИ СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.НеИспользуется Тогда
		
		Элементы.УточнениеСпособаОпределенияНач.Доступность=Ложь;
		УточнениеСпособаОпределенияНач="";
		ЕстьУточнениеНачалаПериода=Ложь;
		
	Иначе
		
		Элементы.УточнениеСпособаОпределенияНач.Доступность=Истина;
		ЕстьУточнениеНачалаПериода=Истина;
		
		Если СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаПериодаОтчетаСоСдвигом
			ИЛИ СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаНачалаГодаСоСдвигом Тогда
			
			Элементы.УточнениеСпособаОпределенияНач.ОграничениеТипа=ТипЧисло;
			
		ИначеЕсли СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.Дата Тогда
			
			Элементы.УточнениеСпособаОпределенияНач.ОграничениеТипа=ТипДата;
			
		ИначеЕсли СпособВычисленияНачалаИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеЗначение Тогда
			
			Элементы.УточнениеСпособаОпределенияНач.ОграничениеТипа=ТипСтрока;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры // УстановитьОграничениеТипаНач()

&НаСервере
Процедура УстановитьПараметрыКон()
	
	Если (Не ЗначениеЗаполнено(СпособВычисленияОкончанияИнтервала))
		ИЛИ СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаГода 
		ИЛИ СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаПериодаОтчета
		ИЛИ СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.НеИспользуется Тогда
		
		Элементы.УточнениеСпособаОпределенияКон.Доступность=Ложь;
		УточнениеСпособаОпределенияКон="";
		ЕстьУточнениеОкончанияПериода=Ложь;
		
	Иначе
		
		Элементы.УточнениеСпособаОпределенияКон.Доступность=Истина;
		ЕстьУточнениеОкончанияПериода=Истина;
		
		Если СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаПериодаОтчетаСоСдвигом
			ИЛИ СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ДатаКонцаГодаСоСдвигом Тогда
			
			Элементы.УточнениеСпособаОпределенияКон.ОграничениеТипа=ТипЧисло;
			
		ИначеЕсли СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.Дата Тогда
			
			Элементы.УточнениеСпособаОпределенияКон.ОграничениеТипа=ТипДата;
			
		ИначеЕсли СпособВычисленияОкончанияИнтервала=Перечисления.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеЗначение Тогда
			
			Элементы.УточнениеСпособаОпределенияКон.ОграничениеТипа=ТипСтрока;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры // УстановитьОграничениеТипаНач()

&НаКлиенте
Процедура СпособВычисленияНачалаИнтервалаПриИзменении(Элемент)
	
	УстановитьПараметрыНач();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВычисленияОкончанияИнтервалаПриИзменении(Элемент)
	
	УстановитьПараметрыКон();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ГраницыПериода=Новый СписокЗначений;
	
	Если НЕ ЕстьУточнениеОкончанияПериода Тогда
		
		Если Не ЗначениеЗаполнено(СпособВычисленияНачалаИнтервала) Тогда
			СпособВычисленияНачалаИнтервала=ПредопределенноеЗначение("Перечисление.СпособыВычисленияПараметровОперандов.НеИспользуется");
		КонецЕсли;
		
		ГраницыПериода.Добавить(СпособВычисленияНачалаИнтервала);
		
	Иначе
		
		ГраницаНач=Новый Соответствие;
		ГраницаНач.Вставить(СпособВычисленияНачалаИнтервала,УточнениеСпособаОпределенияНач);
		
		ГраницыПериода.Добавить(ГраницаНач);
		
	КонецЕсли;
	
	Если Не ЕстьУточнениеОкончанияПериода Тогда
		
		Если Не ЗначениеЗаполнено(СпособВычисленияОкончанияИнтервала) Тогда
			СпособВычисленияОкончанияИнтервала=ПредопределенноеЗначение("Перечисление.СпособыВычисленияПараметровОперандов.НеИспользуется");
		КонецЕсли;
		
		ГраницыПериода.Добавить(СпособВычисленияОкончанияИнтервала);
		
	Иначе
		
		ГраницаКон=Новый Соответствие;
		ГраницаКон.Вставить(СпособВычисленияОкончанияИнтервала,УточнениеСпособаОпределенияКон);
		
		ГраницыПериода.Добавить(ГраницаКон);
		
	КонецЕсли;
		
	Оповестить("ИзмененИнтервалОтбораПериода",ГраницыПериода);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпособаОпределенияНачНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если СпособВычисленияНачалаИнтервала = ПредопределенноеЗначение("Перечисление.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеЗначение") Тогда
		
		СтандартнаяОбработка=Ложь;
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("ТекстПроцедуры",Строка(УточнениеСпособаОпределенияНач));
		СтруктураПараметров.Вставить("ВычисляемыйПоказатель",Истина);
		СтруктураПараметров.Вставить("ИмяПроцедуры","РасчетЗначенияПараметра");
		
		ОткрытьФорму("ОбщаяФорма.ФормаРедактированияПроцедур", СтруктураПараметров, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнениеСпособаОпределенияКонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если СпособВычисленияОкончанияИнтервала = ПредопределенноеЗначение("Перечисление.СпособыВычисленияПараметровОперандов.ФункцияНаВстроенномЯзыкеЗначение") Тогда
		
		СтандартнаяОбработка=Ложь;
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("ТекстПроцедуры",Строка(УточнениеСпособаОпределенияКон));
		СтруктураПараметров.Вставить("ВычисляемыйПоказатель",Истина);
		СтруктураПараметров.Вставить("ИмяПроцедуры","РасчетЗначенияПараметра");
		
		ОткрытьФорму("ОбщаяФорма.ФормаРедактированияПроцедур", СтруктураПараметров, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ИзмененаРасчетЗначенияПараметра" И ТипЗнч(Параметр)=Тип("Структура") Тогда
		
		Если ТекущийЭлемент.Имя="УточнениеСпособаОпределенияНач" Тогда
			
			УточнениеСпособаОпределенияНач = Параметр.ТекстПроцедуры;
			
		ИначеЕсли ТекущийЭлемент.Имя="УточнениеСпособаОпределенияКон" Тогда
			
			УточнениеСпособаОпределенияКон = Параметр.ТекстПроцедуры;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры


