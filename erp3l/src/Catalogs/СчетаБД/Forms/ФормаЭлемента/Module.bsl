#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ТекущаяИБ = (Объект.Владелец.Владелец = Справочники.ТипыБазДанных.ТекущаяИБ);
	
	Элементы.ВидыСубконтоВидСубконто.Видимость=Не ТекущаяИБ;
	Элементы.ВидыСубконтоВидСубконтоСсылка.Видимость=ТекущаяИБ;
	
	МаксКоличествоСубконто=Объект.Владелец.МаксимальноеКоличествоСубконто;
	
	Если ТекущаяИБ Тогда
		
		ПланСчетовВладелец=Объект.Владелец.Наименование;
		
		Элементы.СчетСсылка.Видимость = (НЕ Метаданные.ПланыСчетов.Найти(ПланСчетовВладелец)=Неопределено);
		
		Если Элементы.СчетСсылка.Видимость Тогда
			
			Элементы.СчетСсылка.ОграничениеТипа=Новый ОписаниеТипов("ПланСчетовСсылка."+ПланСчетовВладелец);
			
		КонецЕсли;
		
		ВидыСубконтоВладелец=Объект.Владелец.ВидыСубконто;
		
		Если ЗначениеЗаполнено(ВидыСубконтоВладелец) Тогда
			
			Элементы.ВидыСубконтоВидСубконтоСсылка.ОграничениеТипа=Новый ОписаниеТипов("ПланВидовХарактеристикСсылка."+ВидыСубконтоВладелец);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Владелец) Тогда
			
			ПланСчетовИсточник=Объект.Владелец.ПланСчетовИсточник;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Родитель) Тогда
		
		ОбъектРодитель=ТекущийОбъект.Родитель.ПолучитьОбъект();
		ОбъектРодитель.ГруппирующийСчет=Истина;
		ОбъектРодитель.Записать();
		
	КонецЕсли;
	
	ОбновитьТР = Не (ТекущийОбъект.ДополнительныеСвойства.Свойство("НеОбновлятьТР") И (ТекущийОбъект.ДополнительныеСвойства.НеОбновлятьТР = Истина));
			
	УправлениеОтчетамиУХ.ОбновитьСтруктуруОСВПриИзмененииСчета(ТекущийОбъект.Владелец,ТекущийОбъект.Ссылка,ОбновитьТР);
	Справочники.СоответствияСчетовДляТрансляции.ОбновитьАналитикуСоответствия(ТекущийОбъект.Ссылка);
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РазделПриИзменении(Элемент)
	
	УстановитьВидимость();	
		
КонецПроцедуры

&НаКлиенте
Процедура ВалютныйПриИзменении(Элемент)	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элементы.ВидыСубконто.ТекущиеДанные.Номер=Объект.ВидыСубконто.Количество();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоПриИзменении(Элемент)
		
	Индекс=0;
	
	Для Каждого Строка ИЗ Объект.ВидыСубконто Цикл
		
		Индекс=Индекс+1;
		Строка.Номер=Индекс;
		
	КонецЦикла;			
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ=(Объект.ВидыСубконто.Количество()=МаксКоличествоСубконто);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетСсылкаПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакиУчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыОтбора = Новый Структура("ПризнакиУчета,ПланСчетов", Объект[Элемент.Имя],Объект.Владелец);
	ОткрытьФорму("Справочник.ПланыСчетовБД.Форма.ФормаВыбораПризнаковУчета", ПараметрыОтбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоПризнакиУчетаСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.ВидыСубконто.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтрокаПризнаковУчета = ТекДанные.ПризнакиУчетаСубконто;
	ПараметрыОтбора = Новый Структура("ПризнакиУчета,ПланСчетов,ДляСубконто", СтрокаПризнаковУчета,Объект.Владелец,Истина);
	ОткрытьФорму("Справочник.ПланыСчетовБД.Форма.ФормаВыбораПризнаковУчета", ПараметрыОтбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидыСубконтоВидСубконтоСсылкаПриИзменении(Элемент)
	ТекДанные = Элементы.ВидыСубконто.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВидСубконтоСсылка_ = ТекДанные.ВидСубконтоСсылка;
	Если ЗначениеЗаполнено(ВидСубконтоСсылка_) Тогда
		ТекДанные.ВидСубконто = Строка(ВидСубконтоСсылка_);
		ТекДанные.ТипДанных = ТипДанныхСубконтоНаСервере(ВидСубконтоСсылка_);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимость()
	
	ЯвляетсяСчетомУчетаМСФО = (Объект.Вид <> ВидСчета.АктивноПассивный) И (Объект.Забалансовый = Ложь);
	ЭтоСчетМД = ЗначениеЗаполнено(Объект.СчетСсылка);
				
	Элементы.ГруппаКазначейство.Видимость = (Объект.РазделПланаСчетов = Справочники.РазделыПланаСчетов.ДенежныеСредства ИЛИ Объект.РазделПланаСчетов = Справочники.РазделыПланаСчетов.Взаиморасчеты);	
	
	Элементы.СчетаУчетаКурсовыхРазниц.Видимость 	= ЯвляетсяСчетомУчетаМСФО И Объект.Валютный;
	Элементы.СпособРасчетаКурсовыхРазниц.Видимость 	= ЯвляетсяСчетомУчетаМСФО И Не Объект.Валютный;
	Элементы.СчетИсточник.Видимость					= (Не Объект.ГруппирующийСчет);
	Элементы.ПризнакиУчета.Видимость 				= ТекущаяИБ;
	Элементы.ГруппирующийСчет.Видимость				= (НЕ Объект.Владелец.Реквизиты.Найти("ЗапретитьИспользоватьВПроводках")=Неопределено);
		
	Если ЭтоСчетМД Тогда
		
		ЭтоМСФО = Объект.Владелец.ЕстьРегистрБухгалтерии;
		
		Элементы.Код.ТолькоПросмотр 				= Истина;
		Элементы.Наименование.ТолькоПросмотр 		= Истина;
		Элементы.Вид.ТолькоПросмотр 				= Истина;
		Элементы.РазделПланаСчетов.ТолькоПросмотр	= ЭтоМСФО;
		Элементы.Родитель.ТолькоПросмотр 			= Истина;
		Элементы.СчетИсточник.ТолькоПросмотр 		= Истина;
		Элементы.Забалансовый.ТолькоПросмотр 		= Истина;
		Элементы.Валютный.ТолькоПросмотр 			= Истина;
		
		Элементы.ПересчитыватьВалютнуюСумму.ТолькоПросмотр	= ЭтоМСФО;
		Элементы.ВидОтложенногоНалога.ТолькоПросмотр 		= ЭтоМСФО;
		
		Элементы.ВидыСубконтоНомер.ТолькоПросмотр 			= Истина;
		Элементы.ВидыСубконтоВидСубконто.ТолькоПросмотр 	= Истина;
		Элементы.ВидыСубконтоТолькоОбороты.ТолькоПросмотр	= Истина;
		Элементы.ВидыСубконтоТолькоСальдо.ТолькоПросмотр 	= ЭтоМСФО;
		
		Элементы.ВидыСубконто.ИзменятьСоставСтрок 	= Ложь;
		Элементы.ВидыСубконто.ИзменятьПорядокСтрок 	= Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТипДанныхСубконтоНаСервере(ВидСубконтоСсылка)
	ОбъектМетаданных = ОбщегоНазначенияУХ.ПолучитьСправочникПоВидуСубконто(ВидСубконтоСсылка);
	Возврат ОбъектМетаданных.ПолноеИмя();
КонецФункции

&НаКлиенте
Процедура ГруппирующийСчетПриИзменении(Элемент)
	
	Элементы.СчетИсточник.Видимость	= (Не Объект.ГруппирующийСчет);
	
КонецПроцедуры

#КонецОбласти
