
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	//Отбора по плану счетов
	//в формах необходимо ограничить "ИсторияВыбораПриВводе" - для исключения выбора счетов другого плана счетов 
	Если Параметры.Свойство("Владелец") И Параметры.Владелец <> Неопределено Тогда
		Параметры.Отбор.Вставить("Владелец", Параметры.Владелец);
	КонецЕсли;
	
КонецПроцедуры

// Получить вид субконто указанного счета по номеру.
//
// Параметры:
//  Счет			 - 	 - 
//  НомерСубконто	 - 	 - 
// 
// Возвращаемое значение:
//   - ПланыВидовХарактеристикСсылка.
//	 - Если субконто с таким номер нет, то возвращает Неопределено.
//
Функция ВидСубконтоСчета(Счет, НомерСубконто) Экспорт
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Строка_ = Счет.ВидыСубконто.Найти(НомерСубконто, "Номер");
	Если Строка_ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Строка_.ВидСубконтоСсылка;
КонецФункции

Функция КатегорияСчетаРСБУ(КодСчета) Экспорт
	
	Код2 = Лев(СокрЛ(КодСчета), 2);
	Код1 = Лев(Код2, 1);
	
	Если Код1 = "6" Тогда
		
		Если Код2 = "68" Или Код2 = "69" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Налоги");
		Иначе 
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Взаиморасчеты");
		КонецЕсли;
		
	ИначеЕсли Код1 = "7" Тогда
		
		Если Код2 = "70" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ОплатаТруда");
		ИначеЕсли Код2 = "77" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ПрочиеАктивыОбязательства");
		Иначе 
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Взаиморасчеты");
		КонецЕсли;

	ИначеЕсли Код1 = "9" Тогда
		
		Если Код2 = "91" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ВнереализационныеДоходыИРасходы");
		ИначеЕсли СтрНачинаетсяС(КодСчета, "90.01") Или Код2 = "98" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Выручка");
		ИначеЕсли Код2 = "99" Или СтрНачинаетсяС(КодСчета, "90.09") Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Закрытие");
		Иначе 
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Себестоимость");			
		КонецЕсли;
		
	ИначеЕсли Код1 = "0" Тогда
		
		Если Код2 = "01" Или Код2 = "02" Или Код2 = "03" Или Код2 = "04" Или Код2 = "05" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ВнеоборотныеАктивы");
		ИначеЕсли Код2 = "07" Или Код2 = "08" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.НезавершенноеСтроительство");
		ИначеЕсли Код2 = "00" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ЗабалансовыеСчета");
		ИначеЕсли Код2 = "09" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ПрочиеАктивыОбязательства");
		КонецЕсли;
		
	ИначеЕсли Код1 = "1" Тогда
		
		Если Код2 = "19" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Налоги");
		Иначе
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Запасы");
		КонецЕсли;
		
	ИначеЕсли Код1 = "2" Тогда
		
		Если Код2 = "21" Тогда
		    Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Запасы");
		Иначе	
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.НезавершенныеОперации");
		КонецЕсли;
		
	ИначеЕсли Код1 = "3" Тогда
		Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.НезавершенныеОперации");
	ИначеЕсли Код1 = "4" Тогда
		Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Запасы");
	ИначеЕсли Код1 = "5" Тогда
		
		Если Код2 = "58" Или Код2 = "59" Тогда
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Взаиморасчеты");	
		Иначе 
			Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ДенежныеСредства");
		КонецЕсли;
		
	ИначеЕсли Код1 = "8" Тогда
		Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.Капитал");
	КонецЕсли;

	Возврат ПредопределенноеЗначение("Справочник.РазделыПланаСчетов.ПрочиеАктивыОбязательства");
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы="ФормаОбъекта" Тогда
		
		Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
			
			Если Параметры.Ключ.Владелец.ПланСчетовМСФО Тогда
				
				СтандартнаяОбработка=Ложь;
				Параметры.Вставить("Ключ",Параметры.Ключ.СчетСсылка);
				ВыбраннаяФорма="ПланСчетов.МСФО.ФормаОбъекта";
				
			КонецЕсли;
		
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения")
			И Параметры.ЗначенияЗаполнения.Свойство("Владелец") 
			И Параметры.ЗначенияЗаполнения.Владелец.ПланСчетовМСФО Тогда
			
			СтандартнаяОбработка=Ложь;
			
			Параметры.Вставить("ПланСчетовБД",Параметры.ЗначенияЗаполнения.Владелец);
			ВыбраннаяФорма="ПланСчетов.МСФО.ФормаОбъекта";
			
		ИначеЕсли Параметры.Свойство("ЗначениеКопирования")
			И Параметры.ЗначениеКопирования.Владелец.ПланСчетовМСФО Тогда
			
			СтандартнаяОбработка=Ложь;
			Параметры.Вставить("ЗначениеКопирования",Параметры.ЗначениеКопирования.СчетСсылка);
			ВыбраннаяФорма="ПланСчетов.МСФО.ФормаОбъекта";
			
		КонецЕсли;
				
	КонецЕсли;
	
	//Если Параметры.Свойство("УчетнаяПолитика") Тогда
	//	
	//	Если ЗначениеЗаполнено(Параметры.УчетнаяПолитика) Тогда
	//		ПланСчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.УчетнаяПолитика, "ПланСчетов");
	//	Иначе        
	//		ПланСчетов = Справочники.ПланыСчетовБД.ПолучитьПланСчетовБД("МСФО");//по умолчанию
	//	КонецЕсли;
	//	
	//	Параметры.Вставить("Владелец", ПланСчетов);
	//	Параметры.Вставить("ПланСчетов_ТолькоПросмотр", Истина);
	//	
	//КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
