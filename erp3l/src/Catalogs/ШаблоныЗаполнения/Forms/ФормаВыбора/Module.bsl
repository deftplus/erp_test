// Обновляет отображение поля Имя родителя на форме.
&НаСервере
Процедура ОбновитьОтображениеИмениРодителя()
	Элементы.ИмяРодителяПредставление.Заголовок = Строка(НазначениеФильтр);
	ИмяРодителяПредставление = УправлениеШаблонамиЗаполненияУХ.ПолучитьПредставлениеМетаданногоРодителя(ИмяРодителяФильтр, НазначениеФильтр); 
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностью()
	Если (НазначениеФильтр = Перечисления.НазначенияШаблонов.Справочник) И (ИмяРодителяФильтр = "НастройкиПроцессаВыбора") Тогда
		Элементы.АналитикаОтбора.Видимость = Ложь;
		Элементы.АналитикаОтбораФильтр.Видимость = Ложь;
	Иначе
		// Оставляем видимость элементов.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоФильтрам()
	Список.Отбор.Элементы.Очистить();
	// Фильтр по Назначению.
	Если НЕ(НазначениеФильтр.Пустая()) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Назначение");
    	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    	ЭлементОтбора.Использование = Истина;
    	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    	ЭлементОтбора.ПравоеЗначение = НазначениеФильтр;
	КонецЕсли;	
	// Фильтр по Имени родителя.
	Если НЕ(СокрЛП(ИмяРодителяФильтр) = "") Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИмяРодителя");
    	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
    	ЭлементОтбора.Использование = Истина;
    	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    	ЭлементОтбора.ПравоеЗначение = ИмяРодителяФильтр;
	КонецЕсли;		
	// Фильтр по Аналитике отбора.
	Если ЗначениеЗаполнено(АналитикаОтбораФильтр) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АналитикаОтбора");
    	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    	ЭлементОтбора.Использование = Истина;
    	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    	ЭлементОтбора.ПравоеЗначение = АналитикаОтбораФильтр;
	КонецЕсли;	
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура НазначениеФильтрПриИзменении(Элемент)
	ОтобратьПоФильтрам();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НазначениеФильтр = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Назначение", Перечисления.НазначенияШаблонов.ПустаяСсылка());
	ИмяРодителяФильтр = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ИмяОбъекта", "");
	АналитикаОтбораФильтр = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "АналитикаОтбора", Неопределено);
	ИсходнаяАналитикаОтбора = АналитикаОтбораФильтр;
	Если АналитикаОтбораФильтр <> Неопределено Тогда
		МетаданныеАналитикиОтбора = АналитикаОтбораФильтр.Метаданные();
		Элементы.АналитикаОтбораФильтр.Заголовок = МетаданныеАналитикиОтбора.ПредставлениеОбъекта;
		Элементы.АналитикаОтбора.Заголовок = МетаданныеАналитикиОтбора.ПредставлениеОбъекта;
	Иначе
		// Не указан отбор напрямую. Не ограничиваем выбор.
	КонецЕсли;
	УправлениеДоступностью();
	ОбновитьОтображениеИмениРодителя();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтобратьПоФильтрам();
КонецПроцедуры

&НаКлиенте
Процедура ИмяРодителяФильтрПриИзменении(Элемент)
	ОтобратьПоФильтрам();
КонецПроцедуры

&НаКлиенте
Процедура АналитикаОтбораФильтрПриИзменении(Элемент)
	ОтобратьПоФильтрам();
КонецПроцедуры

&НаКлиенте
Процедура АналитикаОтбораФильтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ИсходнаяАналитикаОтбора <> Неопределено Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(ИсходнаяАналитикаОтбора));
		Элемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	Иначе
		// Исходная аналитика не задана. Не изменяем тип.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантЗаполненияШаблонаФильтрПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ВариантЗаполненияШаблонаФильтр) Тогда
		ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(Список.Отбор, "ВариантЗаполненияШаблона", ВариантЗаполненияШаблонаФильтр, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(Список.Отбор, "ВариантЗаполненияШаблона", ВариантЗаполненияШаблонаФильтр, ВидСравненияКомпоновкиДанных.Равно, , Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблон(Команда)
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ПоказатьЗначение(, ТекДанные.Ссылка);
	Иначе
		// Строка не выбрана. Ничего не делаем.
	КонецЕсли;
КонецПроцедуры
