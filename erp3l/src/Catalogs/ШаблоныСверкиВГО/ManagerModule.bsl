#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
// Проверяем возможность редактировать шаблона сверки.
// На этот шаблон не должно быть ссылок в 
// справочниках "ВерсииРегламентаПодготовкиОтчетности"
// или "ЭтапыПроцессов"
//
Функция МожноРедактироватьОбъект(ОбъектШаблон) Экспорт
	
	Возврат Истина;
КонецФункции

// Для указанного шаблона сверки получить значение счета и правил его заполнения.
// Параметры:
//  ШаблонСверки - СправочникСсылка.ШаблоныСверкиВГО - шаблон сверки,
//					для которого необходимо получить счет.
//  ТипСчета	 - ПеречислениеСсылка.ТипыТехническихСчетовДляСверкиЭлиминации - тип счета.
// 
// Возвращаемое значение:
//	 - Структура:
//   	- Счет - СправочникСсылка.СчетаБД - если счет найден. ПустаяСсылка() - если счет не найден.
//		- СпособЗаполненияСубконто1..3 - ПеречислениеСсылка.СпособыЗаполненияЗначенийСубконтоСчета - способ заполнения.
//		- ЗначениеЗаполненияСубконто1..3 - Любая ссылка - Значение если способ заполнения == "Фиксированное значение", Иначе - Неопределено.
//
Функция ПолучитьОписаниеТехническогоСчетаУрегулирования(ШаблонСверки, ТипСчета) Экспорт
	ПравилоЗаполненияСчета = Новый Структура;
	ПравилоЗаполненияСчета.Вставить("Счет", Справочники.СчетаБД.ПустаяСсылка());
	Для НомерСубконто = 1 По 3 Цикл
		ПравилоЗаполненияСчета.Вставить("СпособЗаполненияСубконто" + НомерСубконто,
			Перечисления.СпособыЗаполненияЗначенийСубконтоСчета.ПустаяСсылка());
		ПравилоЗаполненияСчета.Вставить("ЗначениеЗаполненияСубконто" + НомерСубконто,
			Неопределено);
	КонецЦикла;
	
	Строка_ = ШаблонСверки.ТехническиеСчета.Найти(ТипСчета, "ТипСчета");
	Если Строка_ = Неопределено Тогда
		Возврат Справочники.СчетаБД.ПустаяСсылка();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПравилоЗаполненияСчета, Строка_);
		
	Возврат ПравилоЗаполненияСчета;
КонецФункции

// Возвращает два флага, используются разделы сверки для элиминации по проводкам,
//  используются разделы сверки для элиминации по показателям.
//
// Параметры:
//  ШаблонСверки - СправочникСсылка.ШаблоныСверкиВГО - шаблон для которого 
//					нужно получить данные.
// 
// Возвращаемое значение:
//   - Структура:
//		- Проводки - Булево - используется элиминация проводок;
//		- Показатели - Булево - используется элиминация показателей.
//
Функция ПроверитьСпособЭлиминацииПроводокПоказателей(ШаблонСверки) Экспорт
	
	Результат = Новый Структура("Проводки, Показатели", Ложь, Ложь);
	
	Если ЗначениеЗаполнено(ШаблонСверки) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕстьNULL(МАКСИМУМ(РазделыСверкиВГО.СпособЭлиминации = ЗНАЧЕНИЕ(Перечисление.СпособыЭлиминации.ЭлиминацияПоказателейОтчетов)), ЛОЖЬ) КАК Показатели,
		|	ЕстьNULL(МАКСИМУМ(РазделыСверкиВГО.СпособЭлиминации <> ЗНАЧЕНИЕ(Перечисление.СпособыЭлиминации.ЭлиминацияПоказателейОтчетов)), ЛОЖЬ) КАК Проводки
		|ИЗ
		|	Справочник.РазделыСверкиВГО КАК РазделыСверкиВГО
		|ГДЕ
		|	НЕ РазделыСверкиВГО.ПометкаУдаления
		|	И РазделыСверкиВГО.Владелец = &ШаблонСверки
		|	И РазделыСверкиВГО.СпособЭлиминации <> ЗНАЧЕНИЕ(Перечисление.СпособыЭлиминации.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("ШаблонСверки", ШаблонСверки);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Результат, ВыборкаДетальныеЗаписи);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции


#КонецЕсли