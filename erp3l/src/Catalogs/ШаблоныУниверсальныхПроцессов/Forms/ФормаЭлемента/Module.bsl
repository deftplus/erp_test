#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	                    
	ОбъектКопирования = Параметры.ЗначениеКопирования;
	Если ЗначениеЗАполнено(Объект.Ссылка) Тогда
		
		ПрочитатьПараметрыПроцесса();
		
	КонецЕсли;
	//Заблокируем ключевые реквизиты, если они были получены из вне.
	СтруктураЗаполнения = Параметры.ЗначенияЗаполнения;
	ТекНазначениеПроцесса = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураЗаполнения, "НазначениеПроцесса", Перечисления.НазначенияУниверсальныхПроцессов.ПустаяСсылка());
	Если ЗначениеЗаполнено(ТекНазначениеПроцесса) Тогда
		Элементы.НазначениеПроцесса.Доступность = Ложь;
	Иначе
		// Значение назначения процесса не передано - можно редактировать.
	КонецЕсли;
	ТекТипОбъектаСогласования = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураЗаполнения, "ТипОбъектаСогласования", Справочники.ДокументыБД.ПустаяСсылка());
	Если ЗначениеЗаполнено(ТекТипОбъектаСогласования) Тогда
		Элементы.ИмяСправочника.Доступность = Ложь;
		Элементы.ТипОбъектаСогласования.Доступность = Ложь;
	Иначе
		// Значение типа объекта не передано - можно редактировать.
	КонецЕсли;
	
	УстановитьКонтекстМаршрута();
	Если Объект.ПометкаУдаления Тогда
		
		 ЭтаФорма.Доступность = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждениеКопированиеЭтапаЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ОбъектКопирования = Неопределено;
	Иначе       
		// Оставляем значение.
	КонецЕсли;
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ОбъектКопирования) Тогда
		
		ТекстВопроса = НСтр("ru = 'Скопировать информацию об этапах процесса?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПодтверждениеКопированиеЭтапаЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);

	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности Тогда
		ТекущийОбъект.ТипОбъектаСогласования = Справочники.ДокументыБД.НайтиПоНаименованию("УправлениеПериодомСценария", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	КонецЕсли;		 
	ЗаписатьПараметрыПроцесса(ТекущийОбъект);	
	// Сохраним информацию о первой записи шаблона.
	ЭтоНовыйШаблон = (Не ЗначениеЗаполнено(Объект.Ссылка));
	ПараметрыЗаписи.Вставить("ЭтоНовый", ЭтоНовыйШаблон);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ОбъектКопирования) Тогда
		Справочники.ШаблоныУниверсальныхПроцессов.СкопироватьСвязаннуюИнформациюПроцесса(ОбъектКопирования, ТекущийОбъект.Ссылка);
		ОбъектКопирования = Справочники.ШаблоныУниверсальныхПроцессов.ПустаяСсылка();
	Иначе
		// Не требуется копирование.
	КонецЕсли;
	ПрочитатьПараметрыПроцесса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьОтчет", , Объект.Ссылка);
	// Для нового шаблона процесса откроем форму редактирования его диаграммы.
	ЭтоНовыйШаблон = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаписи, "ЭтоНовый", Ложь);	
	Если ЭтоНовыйШаблон Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ШаблонПроцесса", Объект.Ссылка);						
		ОткрытьФорму("Отчет.СетеваяДиаграммаШаблонаУниверсальногоПроцесса.Форма.Форма", ПараметрыФормы);
	Иначе
		// Для существующих шаблонов не открываем форму редактирования диаграммы шаблона.
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура  ПрочитатьПараметрыПроцесса()
	
	ПараметрыПроцесса.Очистить();
	Для Каждого Стр из Объект.ПараметрыПроцесса Цикл
		НП =  ПараметрыПроцесса.Добавить();
		ЗаполнитьЗначенияСвойств(НП,Стр);
		
		Если Стр.ЭтоПростойТип Тогда
			НП.ТипПараметра = Новый ОписаниеТипов(Стр.ТипЗначенияПараметраСтрока);
		Иначе		
			Попытка
			НП.ТипПараметра = Новый ОписаниеТипов(ОпределитьТипМетаданных((Стр.ТипЗначенияПараметраСсылка.Наименование)));
			Исключение
			КонецПопытки;	
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура  ЗаписатьПараметрыПроцесса(ТекущийОбъект)
		
	ТекущийОбъект.ПараметрыПроцесса.Очистить();
	Для Каждого Стр из ПараметрыПроцесса Цикл
		НП = ТекущийОбъект.ПараметрыПроцесса.Добавить();
		ЗаполнитьЗначенияСвойств(НП,Стр);
		НП.ТипЗначенияПараметраСтрока = (Стр.ТипПараметра);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекстМаршрута()
	
	ЕстьЗапущенныеПроцессы =  ПроверитьДоступностьОбъектаСогласования();
	
	Если ЕстьЗапущенныеПроцессы Тогда
		Элементы.НазначениеПроцесса.Доступность = Ложь;
	Иначе
		// Процессы не запущены. Оставляем, как есть.
	КонецЕсли;

	Элементы.ПараметрыПроцесса.Доступность 	=  НЕ ЕстьЗапущенныеПроцессы;
	
	Если Объект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.МаршрутСогласования Тогда
		
		Если ТипЗнч(Объект.ТипОбъектаСогласования)=Тип("СправочникСсылка.СправочникиБД") Тогда
			
			ИмяСправочника="СправочникиБД";
			
		ИначеЕсли ТипЗнч(Объект.ТипОбъектаСогласования)=Тип("СправочникСсылка.ДокументыБД") Тогда
			
			ИмяСправочника="ДокументыБД";
			
		КонецЕсли;
		
		Если ПустаяСтрока(ИмяСправочника) Тогда
			
			ИмяСправочника="ДокументыБД";
			
		КонецЕсли;
		
		Элементы.ГруппаОбъектСогласования.Доступность= НЕ ЕстьЗапущенныеПроцессы;
		
	ИначеЕсли Объект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности Тогда	
		
		Элементы.ГруппаПроцессПодготовкиОтчетности.Доступность= НЕ ЕстьЗапущенныеПроцессы;

		
	ИначеЕсли Объект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.ПроизвольныйПроцесс Тогда	
		
		Элементы.ГруппаОбъектСогласования.Видимость = Ложь;	
		Элементы.ГруппаПроцессПодготовкиОтчетности.Видимость = Ложь;	

	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Функция ПроверитьДоступностьОбъектаСогласования()
	
	   Запрос = Новый Запрос;
	   Запрос.Текст = "ВЫБРАТЬ
	                  |	ЭкземплярПроцесса.Ссылка
	                  |ИЗ
	                  |	Документ.ЭкземплярПроцесса КАК ЭкземплярПроцесса
	                  |ГДЕ
	                  |	ЭкземплярПроцесса.ШаблонПроцесса = &ШаблонПроцесса
	                  |	И ЭкземплярПроцесса.ПометкаУдаления = Ложь";
	   

	   Запрос.УстановитьПараметр("ШаблонПроцесса",Объект.Ссылка);
	   
	   Результат = Запрос.Выполнить();
	   Выборка = Результат.Выбрать();
	   
	   Пока Выборка.Следующий() Цикл
	   
	   	    Возврат Истина;
	   
	   КонецЦикла;
	   
	   Возврат Ложь;
		
КонецФункции	
	
&НаКлиенте
Процедура ТипОбъектаСогласованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяСправочника_ = ?(ИмяСправочника = "ЗаявкаНСИ", "СправочникиБД", ИмяСправочника);
	Если ЗначениеЗаполнено(ИмяСправочника_) Тогда	
		ТекИБ = ПредопределенноеЗначение("Справочник.ТипыБазДанных.ТекущаяИБ");
		СтруктураПараметровФормы = Новый Структура;
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Владелец", ТекИБ);
		Если ИмяСправочника = "ЗаявкаНСИ" Тогда
			СтруктураОтбора.Вставить("Контролируемый", Истина);
		Иначе 
			СтруктураОтбора.Вставить("Согласуется", Истина);
		КонецЕсли;
		СтруктураПараметровФормы.Вставить("Отбор", СтруктураОтбора);
		ПутьОткрытияФормы = "Справочник." + ИмяСправочника_ + ".ФормаВыбора";
		ОткрытьФорму(ПутьОткрытияФормы, СтруктураПараметровФормы, Элемент);	
	Иначе	
		// Имя справочника не задано. Ничего не делаем.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяСправочникаПриИзменении(Элемент)
	
	Объект.ТипОбъектаСогласования=Неопределено;
	
КонецПроцедуры

&НаКлиенте
 Процедура НазначениеПроцессаПриИзменении(Элемент)
	 
	 ОчиститьКлючевыеПараметры();
	 УстановитьВидимостьЭлементов();	

КонецПроцедуры

&НаКлиенте
 Процедура ПараметрыПроцессаПриИзменении(Элемент)
	
	 Если Элемент.ТекущийЭлемент.Имя = "ПараметрыПроцессаИмяПараметра" Тогда
		 ТекДанные = Элементы.ПараметрыПроцесса.ТекущиеДанные;
		 Если ТекДанные <> Неопределено Тогда
			 Если  ТекДанные.КодПараметра = "" Тогда
				 ТекДанные.КодПараметра = СтрЗаменить(ТекДанные.ИмяПараметра," ","");
			 КонецЕсли;
		 Иначе
			 // Строка не выбрана.		  
		 КонецЕсли;
	 КонецЕсли;
	  	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцессаТипПарамтераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 
	 СтандартнаяОбработка = Ложь;	 
	 Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораТипа", ЭтаФорма);
	 ОткрытьФорму("ОбщаяФорма.ФормаВыбораТипаМетаданных", 
	 ,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 

 КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораТипа(Результат, ДополнительныеПараметры) Экспорт    
	Если НЕ Результат = Неопределено Тогда
		ТекДанные = Элементы.ПараметрыПроцесса.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			ТекДанные.ЭтоПростойТип = Результат.ЭтоПростойТип;
			Если Результат.ЭтоПростойТип Тогда
				ТекДанные.ТипПараметра = Новый ОписаниеТипов(Результат.Представление);
				ТекДанные.ТипЗначенияПараметраСтрока = Результат.Представление;
			Иначе	
				ТекДанные.ТипЗначенияПараметраСсылка =  Результат.ЗначениеССылка;	
				ТекДанные.ТипПараметра = Новый ОписаниеТипов(ОпределитьТипМетаданных((Результат.Наименование)));
			КонецЕсли; 
		Иначе
			// Строка не выбрана.		
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьТипМетаданных(ИмяОбъекта)
	
	Если НЕ Метаданные.НайтиПоПолномуИмени("Справочник."+ИмяОбъекта) = Неопределено Тогда
		Возврат "СправочникСсылка."+ИмяОбъекта;
	ИначеЕсли НЕ Метаданные.НайтиПоПолномуИмени("Документ."+ИмяОбъекта) = Неопределено Тогда
		Возврат "ДокументСсылка."+ИмяОбъекта;
	КонецЕсли;
	  
КонецФункции	

&НаКлиенте
Процедура ИспользоватьОповещенияПриИзменении(Элемент)
	
	Элементы.ОповещенияПроцесса.Видимость =  Объект.ИспользоватьОповещения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцессаПередУдалением(Элемент, Отказ)
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.Предопределенный Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
	Иначе
		// Строка не выбрана.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцессаПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ПараметрыПроцесса.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыПроцессаЗначениеПоУмолчанию.ОграничениеТипа = ТекущаяСтрока.ТипПараметра;

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКНастройкеОповещений(Команда)
	
	ПараметрыФормы = Новый Структура("Отбор",Новый Структура("ВидОбъектаОповещения",  Объект.Ссылка));
	
	ОткрытьФорму("РегистрСведений.НастройкиОповещений.Форма.ФормаСписка", 
	ПараметрыФормы,,,,,,); 

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	// Видимость элементов формы в зависимости от режима процесса.
	ЭтоМаршрутСогласования = (Объект.НазначениеПроцесса = ПредопределенноеЗначение("Перечисление.НазначенияУниверсальныхПроцессов.МаршрутСогласования"));
	ЭтоПроцессПодготовкиОтчетности = (Объект.НазначениеПроцесса = ПредопределенноеЗначение("Перечисление.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности"));
	Элементы.ГруппаОбъектСогласования.Видимость							 = ЭтоМаршрутСогласования;
	Элементы.ЗапретитьОтзывСогласованияПриОтветеСогласующего.Видимость	 = ЭтоМаршрутСогласования;
	Элементы.ПриОтклоненииЭтапаВыполнятьПроцессДоКонца.Видимость		 = ЭтоМаршрутСогласования;
	Элементы.ГруппаПроцессПодготовкиОтчетности.Видимость				 = ЭтоПроцессПодготовкиОтчетности;
КонецПроцедуры	

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.МаршрутСогласования Тогда
				
		ПроверяемыеРеквизиты.Добавить("ИмяСправочника");
		ПроверяемыеРеквизиты.Добавить("Объект.ТипОбъектаСогласования");
				
	ИначеЕсли Объект.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.МаршрутСогласования Тогда
		
		ПроверяемыеРеквизиты.Добавить("Объект.СвязанныйРегламент");
		
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьКлючевыеПараметры()
		
	ПараметрыПроцесса.Очистить();
	Объект.ПараметрыПроцесса.Очистить();
	
КонецПроцедуры