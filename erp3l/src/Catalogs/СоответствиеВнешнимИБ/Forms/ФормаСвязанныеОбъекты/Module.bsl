
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОписаниеОбъектаВИБ=Параметры.ОписаниеОбъектаВИБ;
	ОписаниеОбъектаТек=Параметры.ОписаниеОбъектаТек;
	НастройкаСоответствияРодитель=Параметры.НастройкаСоответствияРодитель;
	ТипБД=ОписаниеОбъектаВИБ.Владелец;
	
	ЗначениеВРеквизитФормы(ПолучитьИзВременногоХранилища(Параметры.АдресТекТаблицыСоответствия),"ТаблицаСоответствия");
	
	ПолучитьСписокВыбораТипаОбъектов(Элементы.ТаблицаСоответствияТипОбъектаВИБ.СписокВыбора,ТипБД,ОписаниеОбъектаВИБ);
	ПолучитьСписокВыбораТипаОбъектов(Элементы.ТаблицаСоответствияТипОбъектаТек.СписокВыбора,Справочники.ТипыБазДанных.ТекущаяИБ,ОписаниеОбъектаТек);
	
КонецПроцедуры

Функция ПолучитьСписокВыбораТипаОбъектов(СписокВыбора,ТипБД,ОписаниеОбъекта)
		
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТабличныеЧастиБД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТабличныеЧастиБД КАК ТабличныеЧастиБД
	|ГДЕ
	|	ТабличныеЧастиБД.Владелец = &СправочникБД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрыСведенийИСвязанныеСправочникиБД.РегистрСведенийБД КАК РегистрСведенийБД
	|ИЗ
	|	РегистрСведений.РегистрыСведенийИСвязанныеСправочникиБД КАК РегистрыСведенийИСвязанныеСправочникиБД
	|ГДЕ
	|	РегистрыСведенийИСвязанныеСправочникиБД.СправочникБД = &СправочникБД
	|	И РегистрыСведенийИСвязанныеСправочникиБД.ТипБД = &ТипБД
	|	И РегистрыСведенийИСвязанныеСправочникиБД.Измерение";
	
	Запрос.УстановитьПараметр("СправочникБД",ОписаниеОбъекта);
	Запрос.УстановитьПараметр("ТипБД",ТипБД);
	
	Результат=Запрос.ВыполнитьПакет();
	
	РезультатТЧ=Результат[0].Выбрать();
	
	Если РезультатТЧ.Следующий() Тогда
			
		СписокВыбора.Добавить("ТабличнаяЧасть",Нстр("ru = 'Табличная часть'"));
		
	КонецЕсли;
	
	РезультатРегистры=Результат[1].Выбрать();
	
	Если РезультатРегистры.Следующий() Тогда
			
		СписокВыбора.Добавить("РегистрСведений",Нстр("ru = 'Связанный регистр сведений'"));
		
	КонецЕсли;
	
	Возврат СписокВыбора;	
	
КонецФункции // ПолучитьСписокВыбораТипаОбъектов() 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.ТаблицаСоответствияТипОбъектаВИБ.СписокВыбора.Количество()=0 Тогда
		
		ПоказатьПредупреждение(,Нстр("ru = 'У объекта внешней ИБ отсутствуют табличные части и связанные регистры.'"));
		Отказ=Истина;
		
	ИначеЕсли Элементы.ТаблицаСоответствияТипОбъектаВИБ.СписокВыбора.Количество()=1 Тогда
		
		Элементы.ТаблицаСоответствияТипОбъектаВИБ.Доступность=Ложь;
		
	КонецЕсли;
	
	Если Элементы.ТаблицаСоответствияТипОбъектаТек.СписокВыбора.Количество()=0 Тогда
		
		ПоказатьПредупреждение(,Нстр("ru = 'У объекта текущей ИБ отсутствуют табличные части и связанные регистры.'"));
		Отказ=Истина;
		
	ИначеЕсли Элементы.ТаблицаСоответствияТипОбъектаТек.СписокВыбора.Количество()=1 Тогда
		
		Элементы.ТаблицаСоответствияТипОбъектаТек.Доступность=Ложь;
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияОписаниеОбъектаВИБНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Не ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаВИБ) Тогда
		
		ПоказатьПредупреждение(,Нстр("ru = 'Не указан тип объекта внешней информационной базы.'"));
		Возврат;
		
	КонецЕсли;
	
	Если Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаВИБ="ТабличнаяЧасть" Тогда
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("РежимВыбора",Истина);
		СтруктураПараметров.Вставить("Отбор",Новый Структура("Владелец",ОписаниеОбъектаВИБ));
		
		ОткрытьФорму("Справочник.ТабличныеЧастиБД.ФормаВыбора",СтруктураПараметров,Элемент);
		
	Иначе
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("РежимВыбора",Истина);
		СтруктураПараметров.Вставить("СправочникБД",ОписаниеОбъектаВИБ);
		СтруктураПараметров.Вставить("ТипБД",ТипБД);
		
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораСвязанногоРегистраСведений",СтруктураПараметров,Элемент);
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Если Элементы.ТаблицаСоответствияТипОбъектаВИБ.СписокВыбора.Количество()=1 Тогда
			
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаВИБ=Элементы.ТаблицаСоответствияТипОбъектаВИБ.СписокВыбора[0].Значение;
			
		КонецЕсли;
		
		Если Элементы.ТаблицаСоответствияТипОбъектаТек.СписокВыбора.Количество()=1 Тогда
			
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаТек=Элементы.ТаблицаСоответствияТипОбъектаТек.СписокВыбора[0].Значение;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияОписаниеОбъектаТекНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Не ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаТек) Тогда
		
		ПоказатьПредупреждение(,Нстр("ru = 'Не указан тип объекта текущей информационной базы.'"));
		Возврат;
		
	КонецЕсли;
	
	Если Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаТек="ТабличнаяЧасть" Тогда
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("РежимВыбора",Истина);
		СтруктураПараметров.Вставить("Отбор",Новый Структура("Владелец",ОписаниеОбъектаТек));
		
		ОткрытьФорму("Справочник.ТабличныеЧастиБД.ФормаВыбора",СтруктураПараметров,Элемент);
		
	Иначе
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("РежимВыбора",Истина);
		СтруктураПараметров.Вставить("СправочникБД",ОписаниеОбъектаТек);
		СтруктураПараметров.Вставить("ТипБД",ПредопределенноеЗначение("Справочник.ТипыБазДанных.ТекущаяИБ"));
		
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораСвязанногоРегистраСведений",СтруктураПараметров,Элемент);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияОписаниеОбъектаВИБПриИзменении(Элемент)
	
	ПроверитьУстановитьНастройкуСоответствия();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияОписаниеОбъектаТекПриИзменении(Элемент)
	
	ПроверитьУстановитьНастройкуСоответствия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьУстановитьНастройкуСоответствия()
	
	Если ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ)
		И ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек) Тогда
		
		Элементы.ТаблицаСоответствия.ТекущиеДанные.НастройкаСоответствия=ПолучитьНастройкуСоответствия(Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ,
				Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек,
				НастройкаСоответствияРодитель);
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьУстановитьНастройкуСоответствия()

&НаСервереБезКонтекста
Функция ПолучитьНастройкуСоответствия(ОписаниеОбъектаВИБ,
							ОписаниеОбъектаТек,
							НастройкаСоответствияРодитель,
							ИзмерениеРегистраВИБ="",
							ИзмерениерегистраТек="");
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|ГДЕ
	|	СоответствиеВнешнимИБ.ОписаниеОбъектаТек = &ОписаниеОбъектаТек
	|	И СоответствиеВнешнимИБ.НастройкаСоответствияРодитель = &НастройкаСоответствияРодитель
	|	И СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ = &ОписаниеОбъектаВИБ";
	
	Если НЕ ПустаяСтрока(ИзмерениеРегистраВИБ) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И СоответствиеВнешнимИБ.ИзмерениеРегистраВИБ = &ИзмерениеРегистраВИБ";	
		Запрос.УстановитьПараметр("ИзмерениеРегистраВИБ",ИзмерениеРегистраВИБ);
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИзмерениеРегистраТек) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И СоответствиеВнешнимИБ.ИзмерениеРегистраТек = &ИзмерениеРегистраТек";	
		Запрос.УстановитьПараметр("ИзмерениеРегистраТек",ИзмерениеРегистраТек);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОписаниеОбъектаВИБ",ОписаниеОбъектаВИБ);
	Запрос.УстановитьПараметр("ОписаниеОбъектаТек",ОписаниеОбъектаТек);
	Запрос.УстановитьПараметр("НастройкаСоответствияРодитель",НастройкаСоответствияРодитель);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		Возврат Результат.Ссылка;
		
	Иначе
		
		Возврат Справочники.СоответствиеВнешнимИБ.ПустаяСсылка();
		
	КонецЕсли;	
	
КонецФункции // ПолучитьНастройкуСоответствия()

&НаКлиенте
Процедура ТаблицаСоответствияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя="ТаблицаСоответствияНастройкаСоответствия" Тогда
		
		СтандартнаяОбработка=Ложь;
		
		Если ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.НастройкаСоответствия) Тогда
			
			ПоказатьЗначение(,Элементы.ТаблицаСоответствия.ТекущиеДанные.НастройкаСоответствия);
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ) Тогда
			
			ПоказатьПредупреждение(,Нстр("ru = 'Не указан объект внешней ИБ.'"));
			Возврат;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек) Тогда
			
			ПоказатьПредупреждение(,Нстр("ru = 'Не указан объект текущей ИБ.'"));
			Возврат;
			
		Иначе
						
			ТекНастройкаСоответствия=Новый Структура;
			ТекНастройкаСоответствия.Вставить("ТипОбъектаВИБ",			Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаВИБ);
			ТекНастройкаСоответствия.Вставить("ТипОбъектаКонсолидации",	Элементы.ТаблицаСоответствия.ТекущиеДанные.ТипОбъектаТек);
			ТекНастройкаСоответствия.Вставить("ОписаниеОбъектаВИБ",		Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ);
			ТекНастройкаСоответствия.Вставить("ОписаниеОбъектаТек",		Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек);
			ТекНастройкаСоответствия.Вставить("ИзмерениеРегистраВИБ",	Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраВИБ);
			ТекНастройкаСоответствия.Вставить("ИзмерениеРегистраТек",	Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраТек);

			ТекНастройкаСоответствия.Вставить("НастройкаСоответствияРодитель",НастройкаСоответствияРодитель);
			ТекНастройкаСоответствия.Вставить("Владелец",ТипБД);
			
			СтруктураПараметров=Новый Структура;
			СтруктураПараметров.Вставить("ТекНастройкаСоответствия",ТекНастройкаСоответствия);
			СтруктураПараметров.Вставить("РабочаяСтрока",Элементы.ТаблицаСоответствия.ТекущиеДанные);

			ОписаниеОповещения=Новый ОписаниеОповещения("СозданиеНастройкиСоответствияВИБЗавершение",ЭтотОбъект,СтруктураПараметров);
			ОткрытьФорму("Справочник.СоответствиеВнешнимИБ.ФормаОбъекта",Новый Структура("ЗначенияЗаполнения",ТекНастройкаСоответствия),ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);			
			
			Возврат;
				
		КонецЕсли;
		
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура СозданиеНастройкиСоответствияВИБЗавершение(РезультатОткрытия,ДополнительныеПараметры) Экспорт
	
	ТекНастройкаСоответствия= ДополнительныеПараметры.ТекНастройкаСоответствия;
	РабочаяСтрока			= ДополнительныеПараметры.РабочаяСтрока;	
	
	НоваяНастройкаСоответствия=ПолучитьНастройкуСоответствия(РабочаяСтрока.ОписаниеОбъектаВИБ,
				РабочаяСтрока.ОписаниеОбъектаТек,
				НастройкаСоответствияРодитель);

			
	РабочаяСтрока.НастройкаСоответствия=НоваяНастройкаСоответствия;
			
КонецПроцедуры // СозданиеНастройкиСоответствияВИБЗавершение()

&НаСервере
Функция ПолучитьСтруктуруОтвета()
	
	Возврат Новый Структура("НастройкаСоответствияРодитель,АдресТаблицыСоответствия",НастройкаСоответствияРодитель,ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("ТаблицаСоответствия"),Параметры.ИдентификаторРодителя));
	
КонецФункции // ПолучитьСтруктуруОтвета() 

&НаКлиенте
Процедура Ок(Команда)
	
	Оповестить("ИзмененаНастройкаСоответствияТЧ",ПолучитьСтруктуруОтвета(),ЭтаФорма);
	Закрыть();
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияТипОбъектаВИБПриИзменении(Элемент)
	
	Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ="";
	Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраВИБ="";
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияТипОбъектаТекПриИзменении(Элемент)
	
	Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек="";
	Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраТек="";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ВыбраныДанныеСвязанногоРегистраСведений" Тогда
		
		Если Параметр.Свойство("ИзмерениеРегистраТек") Тогда
			
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаТек=Параметр.РегистрСведенийБД;
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраТек=Параметр.ИзмерениеРегистраТек;
			
		Иначе
			
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ОписаниеОбъектаВИБ=Параметр.РегистрСведенийБД;
			Элементы.ТаблицаСоответствия.ТекущиеДанные.ИзмерениеРегистраВИБ=Параметр.ИзмерениеРегистраВИБ;
			
		КонецЕсли;
		
	КонецЕсли;
				
КонецПроцедуры
