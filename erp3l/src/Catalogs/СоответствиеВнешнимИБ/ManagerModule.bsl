#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьПоляПоРеквизитам(мТаблицаВозможныхПолей,Использование77,ОбъектМетаданных,Иерархический=Ложь)
	
	Для Каждого Реквизит ИЗ ОбъектМетаданных.Реквизиты Цикл
		
		Если СтрНайти(Реквизит.Имя,"НСИ_")>0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, Реквизит.Имя, Реквизит.Синоним, Ложь);
		
		СписокТипов=Новый СписокЗначений;
		
		НеограниченнаяДлина=(Реквизит.Тип.КвалификаторыСтроки.Длина=0);
		
		Для Каждого Тип ИЗ Реквизит.Тип.Типы() Цикл
			
			СписокТипов.Добавить(Тип,,НеограниченнаяДлина);
			
			Если ОбщегоНазначенияУХ.ПримитивныйТип(Тип) Тогда
				
				НоваяСтрока.ПримитивныйТип=Истина;
				
			Иначе
				
				НоваяСтрока.ПримитивныйТип=Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НоваяСтрока.ПримитивныйТип Тогда
			
			НоваяСтрока.ОписаниеПримитивногоТипаПриемник=ОбщегоНазначенияУХ.ПолучитьСтрокуПримитивныхТипов(Реквизит.Тип);
			
		КонецЕсли;
			
		Если Использование77 И (Не НоваяСтрока.ПримитивныйТип) Тогда
			
			мТаблицаВозможныхПолей.Удалить(НоваяСтрока);
			
		Иначе
			
			НоваяСтрока.ТипДанныхПоля=СписокТипов;
			
			Если СписокТипов.Количество()=1 И НЕ НоваяСтрока.ПримитивныйТип Тогда
				
				ТекДанныеОбъекта=Метаданные.НайтиПоТипу(СписокТипов[0].Значение);
				
				Если НЕ ТекДанныеОбъекта=Неопределено Тогда
					
					ТаблицаАналитики=РаботаСОбъектамиМетаданныхВнешнийУХ.ПолучитьРабочееПредставлениеТипа(ТекДанныеОбъекта.ПолноеИмя());
					ДанныеСинхронизации=ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(ТаблицаАналитики,".");
					
					НоваяСтрока.ТипОбъектаКонсолидации=ДанныеСинхронизации[0];
					НоваяСтрока.ИмяОбъектаМетаданных=ДанныеСинхронизации[1];
					НоваяСтрока.ТаблицаАналитики=ТаблицаАналитики;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Иерархический Тогда
				
				Если Реквизит.Использование=Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента Тогда
					НоваяСтрока.Использование=Перечисления.ИспользованиеРеквизита.ДляЭлемента;
				ИначеЕсли Реквизит.Использование=Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы Тогда
					НоваяСтрока.Использование=Перечисления.ИспользованиеРеквизита.ДляГруппы;
				ИначеЕсли Реквизит.Использование=Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппыИЭлемента Тогда
					НоваяСтрока.Использование=Перечисления.ИспользованиеРеквизита.ДляГруппыИЭлемента;
				КонецЕсли;
				
			Иначе
				
				НоваяСтрока.Использование=Перечисления.ИспользованиеРеквизита.ДляЭлемента;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	мТаблицаВозможныхПолей.Сортировать("ПримитивныйТип Убыв, Поле Возр");
	
КонецПроцедуры // ЗаполнитьПоляПоРеквизитам()

Функция ЗаполнитьСписокПолей(ТипОбъектаКонсолидации,ИмяОбъектаМетаданных,Использование77=Ложь,ТипОбъектаВИБ="") Экспорт
	
	мТаблицаВозможныхПолей=Новый ТаблицаЗначений;
	мТаблицаВозможныхПолей.Колонки.Добавить("Поле");
	мТаблицаВозможныхПолей.Колонки.Добавить("Синоним");
	мТаблицаВозможныхПолей.Колонки.Добавить("ТипДанныхПоля",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСписокЗначений());
	мТаблицаВозможныхПолей.Колонки.Добавить("ПримитивныйТип",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево()); 
	мТаблицаВозможныхПолей.Колонки.Добавить("ТипОбъектаКонсолидации",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(50));
	мТаблицаВозможныхПолей.Колонки.Добавить("ОписаниеПримитивногоТипаПриемник",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(50));
	мТаблицаВозможныхПолей.Колонки.Добавить("ТаблицаАналитики",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));

	мТаблицаВозможныхПолей.Колонки.Добавить("Использование",    ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("ПеречислениеСсылка.ИспользованиеРеквизита"));
	
	Массив = Новый Массив; 
	Массив.Добавить(Тип("Строка"));
	Массив.Добавить(Тип("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные"));
	КвалификаторСтроки = Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная);
	мТаблицаВозможныхПолей.Колонки.Добавить("ИмяОбъектаМетаданных",Новый ОписаниеТипов(Массив, , КвалификаторСтроки));
		
	Если НЕ ЗначениеЗаполнено(ИмяОбъектаМетаданных) Тогда
		Возврат мТаблицаВозможныхПолей;
	КонецЕсли;
	
	Если ТипОбъектаКонсолидации = "ВидСубконто" Тогда
		ОбъектМетаданных = ОбщегоНазначенияУХ.ПолучитьСправочникПоВидуСубконто(ИмяОбъектаМетаданных);
		ТипСтрокой = СтроковыеФункцииКлиентСерверУХ.РазложитьСтрокуВМассивПодстрок(ОбъектМетаданных.ПолноеИмя(), ".")[0];
	Иначе
		ТипСтрокой = ТипОбъектаКонсолидации;
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ТипСтрокой + "." + ИмяОбъектаМетаданных);
	КонецЕсли;
	
	СтандартныеРеквизиты = ОбъектМетаданных.СтандартныеРеквизиты;
	
	Если ТипСтрокой = "Справочник" Тогда
		
		Если ОбъектМетаданных.ДлинаНаименования > 0 Тогда
			ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Наименование", СтандартныеРеквизиты["Наименование"].Синоним, Истина, Перечисления.ИспользованиеРеквизита.ДляГруппыИЭлемента,"Строка("+ОбъектМетаданных.ДлинаНаименования+")");
		КонецЕсли;
		
		Если ОбъектМетаданных.ДлинаКода > 0 Тогда
						
			ТипКода = ?(ОбъектМетаданных.ТипКода = Метаданные.СвойстваОбъектов.ТипКодаСправочника.Строка, "Строка", "Число");
			ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Код", СтандартныеРеквизиты["Код"].Синоним, Истина, Перечисления.ИспользованиеРеквизита.ДляГруппыИЭлемента,ТипКода+"("+ОбъектМетаданных.ДлинаКода+")");
			
		КонецЕсли;
		
		Если ТипОбъектаКонсолидации = "ВидСубконто" Тогда
			ЗаполнитьПоляПоРеквизитам(мТаблицаВозможныхПолей, Использование77, ОбъектМетаданных);
		Иначе
			ЗаполнитьПоляПоРеквизитам(мТаблицаВозможныхПолей, Использование77, ОбъектМетаДанных, ОбъектМетаданных.Иерархический);
		КонецЕсли;
		
		Если ОбъектМетаданных.Владельцы.Количество() > 0 И НЕ (Использование77 ИЛИ ОбъектМетаданных.Имя = "ПроизвольныйКлассификаторУХ") Тогда
			
			НоваяСтрока = ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Владелец", "Владелец", Ложь);
			
			СписокТипов=Новый СписокЗначений;
			
			Для Каждого ТекВладелец ИЗ ОбъектМетаданных.Владельцы Цикл
				
				СписокТипов.Добавить(ОбщегоНазначенияУХ.ПреобразоватьТипИзСтроки(ТекВладелец.ПолноеИмя(),Истина,Ложь));
					
			КонецЦикла;
			
			НоваяСтрока.ТипДанныхПоля=СписокТипов;
			
			Если СписокТипов.Количество()=1  Тогда
				
				ТаблицаАналитики=Метаданные.НайтиПоТипу(СписокТипов[0].Значение).ПолноеИмя();
				ДанныеСинхронизации=ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(ТаблицаАналитики,".");
				
				НоваяСтрока.ТипОбъектаКонсолидации=ДанныеСинхронизации[0];
				НоваяСтрока.ИмяОбъектаМетаданных=ДанныеСинхронизации[1];
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТипСтрокой = "Документ" Тогда 
		
		ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Номер", СтандартныеРеквизиты["Номер"].Синоним, Истина);
		ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Дата", СтандартныеРеквизиты["Дата"].Синоним, Истина);
		
		ЗаполнитьПоляПоРеквизитам(мТаблицаВозможныхПолей, Использование77, ОбъектМетаДанных);
		
	ИначеЕсли ТипСтрокой = "Перечисление" Тогда
		
		Если ТипОбъектаВИБ="Перечисление" Тогда
			
			Для Каждого СтрРеквизит ИЗ ОбъектМетаданных.ЗначенияПеречисления Цикл
				
				ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, СтрРеквизит.Имя, СтрРеквизит.Синоним, Истина);
				
			КонецЦикла;
			
		Иначе
			
			ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Наименование", "Наименование", Истина);
			
		КонецЕсли;
		
	ИначеЕсли ТипСтрокой = "ПланСчетов" Тогда
		
		ДобавитьСтрокуВТаблицу(мТаблицаВозможныхПолей, "Код", "Код", Истина,,"Строка("+ОбъектМетаданных.ДлинаКода+")");
		
	КонецЕсли; 
		
	Возврат мТаблицаВозможныхПолей;
	
КонецФункции // ЗаполнитьСписокПолей()

Функция ДобавитьСтрокуВТаблицу(Таблица, Имя, Синоним, Примитивный, ИспользованиеРеквизита = Неопределено,ОписаниеПримитивногоТипа="")
	
	Строка = Таблица.Добавить();
	
	Строка.Поле 			= Имя;
	Строка.Синоним			= ?(ПустаяСтрока(Синоним), Имя, Синоним);
	Строка.ПримитивныйТип	= Примитивный;
	Строка.ОписаниеПримитивногоТипаПриемник=ОписаниеПримитивногоТипа;
	
	Если НЕ ИспользованиеРеквизита = Неопределено Тогда
		Строка.Использование = ИспользованиеРеквизита;
	КонецЕсли;
	
	Возврат Строка;
	
КонецФункции

Процедура УстановитьПризнакНеактуальностиСоответствиеСправочник(ОписаниеОбъекта,МассивИзмененных)
	
	ТипБД=ОписаниеОбъекта.Владелец;
	
	Запрос=Новый Запрос;
	
	Если ТипБД=Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеВнешнимИБСоответствиеРеквизитов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СоответствиеВнешнимИБ.СоответствиеРеквизитов КАК СоответствиеВнешнимИБСоответствиеРеквизитов
		|ГДЕ
		|	СоответствиеВнешнимИБСоответствиеРеквизитов.РеквизитОбъектаКонсолидации В(&МассивИзмененных)
		|	И СоответствиеВнешнимИБСоответствиеРеквизитов.Ссылка.ОписаниеОбъектаТек = &ОписаниеОбъекта";
		
	Иначе
		
		Запрос.Текст= "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеВнешнимИБСоответствиеРеквизитов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СоответствиеВнешнимИБ.СоответствиеРеквизитов КАК СоответствиеВнешнимИБСоответствиеРеквизитов
		|ГДЕ
		|	СоответствиеВнешнимИБСоответствиеРеквизитов.РеквизитОбъектаВнешнейИБ В(&МассивИзмененных)
		|	И СоответствиеВнешнимИБСоответствиеРеквизитов.Ссылка.ОписаниеОбъектаВИБ = &ОписаниеОбъекта";
		
	КонецЕсли;
		
КонецПроцедуры // УстановитьПризнакНеактуальностиСоответствиеСправочник() 

#Область УпрощенныеСоответствия

Процедура СформироватьСоответствияПоСубконто(ТипВИБ) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапроса_НесозданныеОдинаковоеИмя());
	Запрос.УстановитьПараметр("ТипВИБ", ТипВИБ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ВидСубконтоПриемник = Выборка.ВидСубконто;
		Если ТипЗнч(Выборка.ВидСубконто) <> Тип("ПланВидовХарактеристикСсылка.ВидыСубконтоКорпоративные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось найти вид корпоративного субконто для <%1>. 
									|Будет использован <Произвольный классификатор>'");
			Сообщить(СтрШаблон(ТекстСообщения, Выборка.ВидСубконто));
			
			ВидСубконтоПриемник = ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоКорпоративные.КлассыДебиторов");
			
		КонецЕсли;
		
		Объект = ПодготовитьСоответствие(Выборка.ОбъектВИБ, ВидСубконтоПриемник);//сопоставление как ПВХ		
		ЗаполнитьСоответствияПростымСпособом(Объект);		
		ЗаписатьСоответствие(Объект, СтрШаблон("%1 -> %2", Выборка.ОбъектВИБ, Выборка.ВидСубконто));
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьСоответствияПростымСпособом(Объект)

	Если Объект.мТаблицаСоответствия.Строки.Количество() <> 2 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ИмяОбъектаМетаданных) = Тип("Строка") Тогда
		ПолноеИмяПриемника = СтрШаблон("%1.%2", Объект.ТипОбъектаКонсолидации, Объект.ИмяОбъектаМетаданных);
	Иначе 
		ПолноеИмяПриемника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИмяОбъектаМетаданных, "ПредставлениеТипа");
	КонецЕсли;
	ИмяКонтрагент = ВстраиваниеУХКлиентСервер.ИмяРеквизитаКонтрагент();

	Сопоставить(Объект, "Организация");//например ДоговорыКонтрагентов	
	Если СтрНайти(ПолноеИмяПриемника, "Договор") > 0 Тогда
		
		Сопоставить(Объект, ИмяКонтрагент);//владелец=контрагент 
		Сопоставить(Объект, "Дата");//
		Сопоставить(Объект, "Номер");//номер уникален в пределах года и контрагента
		
		Возврат;
		
	КонецЕсли;
		
	Сопоставить(Объект, "Владелец");//например БанковскиеСчета
	ЕстьИНН = Сопоставить(Объект, "ИНН");//например Организации, Контрагенты
	Если ЕстьИНН Тогда
		Возврат;//Код и наименование не нужны
	КонецЕсли;
	
	мдПриемник = Новый Структура("ОсновноеПредставление,ДлинаКода");
	ЗаполнитьЗначенияСвойств(мдПриемник, Метаданные.НайтиПоПолномуИмени(ПолноеИмяПриемника));
	
	Если ЗначениеЗаполнено(мдПриемник.ДлинаКода)
		И мдПриемник.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеСправочника.ВВидеКода
		Или мдПриемник.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеСчета.ВВидеКода
		Или мдПриемник.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаХарактеристики.ВВидеКода
		Или мдПриемник.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаРасчета.ВВидеКода
		Или мдПриемник.ОсновноеПредставление = Метаданные.СвойстваОбъектов.ОсновноеПредставлениеПланаОбмена.ВВидеКода
		Тогда
		Сопоставить(Объект, "Код");//счетаБД 
	Иначе			
		Сопоставить(Объект, "Наименование");//для большинства
	КонецЕсли;
	
КонецПроцедуры

Функция Сопоставить(Объект, ИмяПриемник, Ключевой = Истина)
	
	Приемник = Объект.мТаблицаСоответствия.Строки.Найти(ИмяПриемник, "АналитикаКонсолидации", Истина);
	Если Приемник = Неопределено Тогда
		Возврат Ложь;//нет реквизита в приемнике
	КонецЕсли;
	
	Источник = Объект.мТабличноеПолеИзмеренийБД.Строки.Найти(ИмяПриемник, "АналитикаБД", Истина);
	Если (Источник = Неопределено) Или (Приемник.ПримитивныйТип <> Источник.ПримитивныйТип) Тогда		
		Если ИмяПриемник = "Наименование" Тогда//наименования в источнике нет, тогда "код=>наименование"
			
			Источник = Объект.мТабличноеПолеИзмеренийБД.Строки.Найти("Код", "АналитикаБД", Истина);
			Если (Источник = Неопределено) Или (Приемник.ПримитивныйТип <> Источник.ПримитивныйТип) Тогда
				Возврат Ложь;//в источнике нет ни кода ни наименования
			КонецЕсли;
			
		Иначе 
			Возврат Ложь;	
		КонецЕсли;		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Приемник, Источник, , "Строки, Родитель, ПримитивныйТип");//НастройкаСоответствия не должна обновляться
	Источник.ИспользуетсяВСопоставлении = Истина;
	
	Приемник.ПсевдонимБД 					= Источник.НаименованиеБД;
	Приемник.СпособЗаполнения 				= Перечисления.СпособыЗаполненияПолейИсточника.ПолеИсходнойТаблицы;
	Приемник.Ключевой 						= Ключевой;
	Приемник.Сопоставлено					= Истина;
	Приемник.НеИспользоватьДляСинхронизации	= Ложь;
	
	Если Приемник.ПримитивныйТип Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не Приемник.НастройкаСоответствия.Пустая() Тогда
		Возврат Истина;//заполнена ранее
	КонецЕсли;
	
	Приемник.НастройкаСоответствия = УправлениеОтчетамиУХ.ПолучитьНастройкуСоответствияРеквизитов(
		Объект.Владелец, Приемник.СправочникКонсолидации, Источник.СправочникБД, Источник.ТипМетаДанных, , Ложь);
		
	Если Не Приемник.НастройкаСоответствия.Пустая() Тогда
		Возврат Истина;//нашли существующее сопоставление
	КонецЕсли;
	
	ИсточникБД = ОбщегоНазначенияУХ.ПолучитьОписаниеОбъектаБД(Неопределено, Источник.ТипМетаДанных, Источник.СправочникБД, Объект.Владелец);
	Если Не ЗначениеЗаполнено(ИсточникБД) Тогда
		Возврат Ложь;// не найден объект БД
	КонецЕсли;
	
	Реквизиты = Новый Структура("ТипОбъектаКонсолидации", Приемник.ТипМетаДанных);
	Реквизит = ПодготовитьСоответствие(ИсточникБД, Приемник.СправочникБД, Реквизиты);//сопоставление как МД
	ЗаполнитьСоответствияПростымСпособом(Реквизит);
	ЗаписатьСоответствие(Реквизит, СтрШаблон("%1 -> %2", ИсточникБД, Приемник.ВидСубконто));
	
КонецФункции

Функция ПодготовитьСоответствие(ОписаниеОбъектаВИБ, ИмяОбъектаМетаданных, Реквизиты = Неопределено, СоответствиеВнешнимИБ = Неопределено)

	Если СоответствиеВнешнимИБ = Неопределено Тогда
		Объект = Справочники.СоответствиеВнешнимИБ.СоздатьЭлемент();
	Иначе
		Объект = СоответствиеВнешнимИБ.ПолучитьОбъект();	
	КонецЕсли;
	
	Объект.ИмяОбъектаМетаданных		= ИмяОбъектаМетаданных;
	Объект.ОписаниеОбъектаВИБ		= ОписаниеОбъектаВИБ;
	Объект.Владелец 				= ОписаниеОбъектаВИБ.Владелец;
	Объект.ТипОбъектаВИБ			= ВидОбъектаБД(ОписаниеОбъектаВИБ);
	Объект.ТипОбъектаКонсолидации	= "ВидСубконто";
	
	Если ЗначениеЗаполнено(Реквизиты) Тогда
		ЗаполнитьЗначенияСвойств(Объект, Реквизиты);
	КонецЕсли;
	
	ЗаполнятьПримитивные = (Объект.ТипОбъектаВИБ = "Перечисление" И Объект.ТипОбъектаКонсолидации = "Перечисление") 
								ИЛИ (Объект.ТипОбъектаВИБ="ПланСчетов" И Объект.ТипОбъектаКонсолидации = "ПланСчетов");
	
	Объект.ЗаполнитьРеквизитыОбъектаВИБ();	
	Объект.ЗаполнитьСписокПолей();
	Объект.ИнициализироватьТаблицуСоответствия();
	
	Объект.мТаблицаСоответствия			= Объект.СформироватьТаблицуСоответствияБД(ЗаполнятьПримитивные);
	Объект.мТабличноеПолеИзмеренийБД	= Объект.ЗаполнитьДеревоПоОбъектуВИБ();	
	
	Возврат Объект;
	
КонецФункции

Процедура ЗаписатьСоответствие(Объект, Наименование)

	Если ЗначениеЗаполнено(Объект.мТаблицаСоответствия) Тогда
	    Объект.СохранитьНастройкиОперанда();
	КонецЕсли;
	
	Попытка
		
		Объект.Записать();
		
	Исключение
		
		ТекстСообщения = НСтр("ru = 'Ошибка создания настройки соответствия <%1>:  %2'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Наименование, ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, , , СтатусСообщения.Информация);
		
	КонецПопытки;

КонецПроцедуры

Функция ВидОбъектаБД(СсылкаБД)

	Если ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.СправочникиБД") Тогда
		Возврат "Справочник";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.ПеречисленияБД") Тогда
		Возврат "Перечисление";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.ДокументыБД") Тогда
		Возврат "Документ";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.СчетаБД") Тогда
		Возврат "ПланСчетов";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.ПланыВидовХарактеристикБД") Тогда
		Возврат "ПланВидовХарактеристик";
		
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.РегистрыСведенийБД") Тогда
		Возврат "РегистрСведений";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.РегистрыНакопленияБД") Тогда
		Возврат "РегистрНакопления";
	ИначеЕсли ТипЗнч(СсылкаБД) = Тип("СправочникСсылка.РегистрыБухгалтерииБД") Тогда
		Возврат "РегистрБухгалтерии";
	Иначе 
		Возврат "Справочник";
	КонецЕсли;

КонецФункции

Функция ТекстЗапроса_НесозданныеОдинаковоеИмя()

	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК СсылкаПВХ,
	|	т.Ссылка КАК ВидСубконто,
	|	т.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(т.ПредставлениеТипа КАК СТРОКА(500)) КАК ТипСтрокой
	|ПОМЕСТИТЬ ТекущиеПВХ
	|ИЗ
	|	ПланВидовХарактеристик.ВидыСубконтоКорпоративные КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	пвх.Ссылка,
	|	МАКСИМУМ(т.Ссылка),
	|	МАКСИМУМ(пвх.Наименование),
	|	МАКСИМУМ(ВЫРАЗИТЬ(ВидыСубконтоСчета.ТипДанных КАК СТРОКА(500)))
	|ИЗ
	|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК пвх
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидыСубконтоСчета
	|		ПО пвх.Ссылка = ВидыСубконтоСчета.ВидСубконтоСсылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыСубконтоКорпоративные КАК т
	|		ПО ((ВЫРАЗИТЬ(ВидыСубконтоСчета.ТипДанных КАК СТРОКА(500))) = (ВЫРАЗИТЬ(т.ПредставлениеТипа КАК СТРОКА(500))))
	|
	|СГРУППИРОВАТЬ ПО
	|	пвх.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыВИБ.ПредставлениеТипа КАК ПредставлениеТипа,
	|	МАКСИМУМ(ТипыВИБ.ТекущийПВХ) КАК ТекущийПВХ,
	|	МАКСИМУМ(ТипыВИБ.ВидСубконтоНаименование) КАК ВидСубконтоНаименование,
	|	МИНИМУМ(ТипыВИБ.НомерСтрокиВИБ) КАК НомерСтрокиВИБ,
	|	МАКСИМУМ(ТипыВИБ.СчетБД) КАК СчетБД
	|ПОМЕСТИТЬ втТребуемыеТипы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫРАЗИТЬ(ВидыСубконто.ТипДанных КАК СТРОКА(500)) КАК ПредставлениеТипа,
	|		ТекущиеПВХ.ВидСубконто КАК ТекущийПВХ,
	|		ВидыСубконто.ВидСубконто КАК ВидСубконтоНаименование,
	|		ВидыСубконто.НомерСтроки КАК НомерСтрокиВИБ,
	|		ВидыСубконто.Ссылка КАК СчетБД
	|	ИЗ
	|		Справочник.СчетаБД.ВидыСубконто КАК ВидыСубконто
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеПВХ КАК ТекущиеПВХ
	|			ПО ВидыСубконто.ВидСубконто = ТекущиеПВХ.Наименование
	|	ГДЕ
	|		ВидыСубконто.Ссылка.Владелец В
	|				(ВЫБРАТЬ
	|					т.Ссылка
	|				ИЗ
	|					Справочник.ПланыСчетовБД КАК т
	|				ГДЕ
	|					т.Владелец = &ТипВИБ)
	|		И (ВЫРАЗИТЬ(ВидыСубконто.ТипДанных КАК СТРОКА(500))) <> """"
	|		И НЕ ВидыСубконто.ТипДанных ПОДОБНО ""%Документ.%""
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫРАЗИТЬ(ВидыСубконто.ТипДанных КАК СТРОКА(500)),
	|		ТекущиеПВХ.ВидСубконто,
	|		ВЫРАЗИТЬ(ВидыСубконто.Синоним КАК СТРОКА(500)),
	|		0,
	|		ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|	ИЗ
	|		Справочник.РегистрыБухгалтерииБД.Измерения КАК ВидыСубконто
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеПВХ КАК ТекущиеПВХ
	|			ПО (ВидыСубконто.ТипДанных ПОДОБНО ТекущиеПВХ.ТипСтрокой)
	|	ГДЕ
	|		ВидыСубконто.Ссылка.Владелец В
	|				(ВЫБРАТЬ
	|					т.Ссылка
	|				ИЗ
	|					Справочник.ПланыСчетовБД КАК т
	|				ГДЕ
	|					т.Владелец = &ТипВИБ)
	|		И (ВЫРАЗИТЬ(ВидыСубконто.ТипДанных КАК СТРОКА(500))) <> """") КАК ТипыВИБ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТипыВИБ.ПредставлениеТипа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(втТребуемыеТипы.ПредставлениеТипа) КАК ПредставлениеТипа,
	|	втТребуемыеТипы.СчетБД КАК СчетБД,
	|	втТребуемыеТипы.НомерСтрокиВИБ КАК НомерСтроки,
	|	ЕСТЬNULL(ТекущиеПВХ.ВидСубконто, ВидыРСБУ.ВидСубконто) КАК ВидСубконто
	|ПОМЕСТИТЬ втВидыСубконто
	|ИЗ
	|	втТребуемыеТипы КАК втТребуемыеТипы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыРСБУ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеПВХ КАК ТекущиеПВХ
	|			ПО ВидыРСБУ.ВидСубконто = ТекущиеПВХ.СсылкаПВХ
	|		ПО втТребуемыеТипы.СчетБД.Код = ВидыРСБУ.Ссылка.Код
	|			И втТребуемыеТипы.НомерСтрокиВИБ = ВидыРСБУ.НомерСтроки
	|			И (НЕ ВидыРСБУ.Ссылка В
	|					(ВЫБРАТЬ
	|						т.ТекущийПВХ
	|					ИЗ
	|						втТребуемыеТипы КАК т))
	|ГДЕ
	|	втТребуемыеТипы.ТекущийПВХ ЕСТЬ NULL
	|	И НЕ ВидыРСБУ.НомерСтроки ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	втТребуемыеТипы.СчетБД,
	|	ЕСТЬNULL(ТекущиеПВХ.ВидСубконто, ВидыРСБУ.ВидСубконто),
	|	втТребуемыеТипы.НомерСтрокиВИБ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТребуемыеТипы.ПредставлениеТипа,
	|	втТребуемыеТипы.СчетБД,
	|	втТребуемыеТипы.НомерСтрокиВИБ,
	|	втТребуемыеТипы.ТекущийПВХ
	|ИЗ
	|	втТребуемыеТипы КАК втТребуемыеТипы
	|ГДЕ
	|	НЕ втТребуемыеТипы.ТекущийПВХ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	мд.Ссылка КАК ОбъектВИБ,
	|	мд.Наименование КАК ИмяМД,
	|	МИНИМУМ(втВидыСубконто.ПредставлениеТипа) КАК ПредставлениеТипа,
	|	МИНИМУМ(втВидыСубконто.ВидСубконто) КАК ВидСубконто
	|ИЗ
	|	Справочник.СправочникиБД КАК мд
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВидыСубконто КАК втВидыСубконто
	|		ПО (втВидыСубконто.ПредставлениеТипа ПОДОБНО ""%Справочник."" + мд.Наименование + ""%"")
	|ГДЕ
	|	мд.Владелец = &ТипВИБ
	|	И НЕ мд.Ссылка В
	|				(ВЫБРАТЬ
	|					Соотв.ОписаниеОбъектаВИБ
	|				ИЗ
	|					Справочник.СоответствиеВнешнимИБ КАК Соотв
	|				ГДЕ
	|					Соотв.ОписаниеОбъектаВИБ = мд.Ссылка
	|					И Соотв.Владелец = &ТипВИБ)
	|
	|СГРУППИРОВАТЬ ПО
	|	мд.Ссылка,
	|	мд.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	мд.Ссылка,
	|	мд.Наименование,
	|	втВидыСубконто.ПредставлениеТипа,
	|	втВидыСубконто.ВидСубконто
	|ИЗ
	|	Справочник.ПеречисленияБД КАК мд
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВидыСубконто КАК втВидыСубконто
	|		ПО (втВидыСубконто.ПредставлениеТипа ПОДОБНО ""%Перечисление."" + мд.Наименование + ""%"")
	|ГДЕ
	|	мд.Владелец = &ТипВИБ
	|	И НЕ мд.Ссылка В
	|				(ВЫБРАТЬ
	|					Соотв.ОписаниеОбъектаВИБ
	|				ИЗ
	|					Справочник.СоответствиеВнешнимИБ КАК Соотв
	|				ГДЕ
	|					Соотв.ОписаниеОбъектаВИБ = мд.Ссылка
	|					И Соотв.Владелец = &ТипВИБ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	мд.Ссылка,
	|	мд.Наименование,
	|	втВидыСубконто.ПредставлениеТипа,
	|	втВидыСубконто.ВидСубконто
	|ИЗ
	|	Справочник.ПланыВидовХарактеристикБД КАК мд
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВидыСубконто КАК втВидыСубконто
	|		ПО (втВидыСубконто.ПредставлениеТипа ПОДОБНО ""%ПланВидовХарактеристик."" + мд.Наименование + ""%"")
	|ГДЕ
	|	мд.Владелец = &ТипВИБ
	|	И НЕ мд.Ссылка В
	|				(ВЫБРАТЬ
	|					Соотв.ОписаниеОбъектаВИБ
	|				ИЗ
	|					Справочник.СоответствиеВнешнимИБ КАК Соотв
	|				ГДЕ
	|					Соотв.ОписаниеОбъектаВИБ = мд.Ссылка
	|					И Соотв.Владелец = &ТипВИБ)";
	
КонецФункции

#КонецОбласти

#КонецЕсли
