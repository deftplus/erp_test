
&НаСервере
Процедура ЗаполнитьПериоды()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ХранимыеФайлыОрганизацийПрисоединенныеФайлы.ДатаСоздания КАК Период
	|ИЗ
	|	Справочник.ХранимыеФайлыОрганизацийПрисоединенныеФайлы КАК ХранимыеФайлыОрганизацийПрисоединенныеФайлы
	|ГДЕ
	|	ХранимыеФайлыОрганизацийПрисоединенныеФайлы.ВладелецФайла = &ХранимыйФайл
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ХранимыйФайл", ХранимыйФайл);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ТипЗначения = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя);
	ПериодыВерсий.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		СписокВыбора.Добавить(Выборка.Период);
		НоваяСтрока = ПериодыВерсий.Добавить();
		НоваяСтрока.ВерсияХранимогоФайла = Выборка.Период;
		
	КонецЦикла;
	
	Если СписокВыбора.Количество() > 0 Тогда
		ВерсияХранимогоФайла=СписокВыбора[СписокВыбора.Количество()-1].Значение;
	КонецЕсли;
	
	Элементы.ВерсияХранимогоФайла.СписокВыбора.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ХранимыйФайл,Период)
	
	ДанныеФайла = ХранимыеФайлыУХ.ПолучитьВерсиюФайла(ХранимыйФайл, Период);
	
	Возврат ?(ЗначениеЗаполнено(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла),ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла),Неопределено);
			
КонецФункции // ПолучитьДанныеФайла() 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ХранимыйФайл         	= Параметры.ХранимыйФайл;
	ВерсияХранимогоФайла 	= Параметры.ВерсияХранимогоФайла;
	СтруктураОтбора      	= Параметры.СтруктураОтбора;
	
	РасширениеФайла			= ХранимыйФайл.РасширениеФайла;
	
	ЗаполнитьПериоды();
	ОбработатьВыборФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокИменЛистов()
	
	СписокЛистов.Очистить();
	ДанныеФайла=ПолучитьДанныеФайла(ХранимыйФайл,ВерсияХранимогоФайла);
	
	Если ДанныеФайла=Неопределено Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Файл ""%1"" не получен из информационной базы.'"), 
			ХранимыйФайл),,, СтатусСообщения.Важное);
		
		Возврат;
		
	КонецЕсли;
	
	ИмяФайла = ОбщегоНазначенияКлиентСерверУХ.ПолучитьИмяВременногоФайлаУниверсально(РасширениеФайла);
					
	// Запись на диск последней версии файла из хранилища.
	
	Попытка
		
		ДанныеФайла.Записать(ИмяФайла);
		
	Исключение
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Файл ""%1"" не получен из информационной базы: %2- %3'"), 
			ХранимыйФайл, Символы.ПС, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())),,, СтатусСообщения.Важное);
		
		Возврат;
		
	КонецПопытки;

	СписокЛистов=РаботаСДиалогамиУХ.ВернутьСписокЛистов(ИмяФайла);
		
КонецПроцедуры

&НаКлиенте
Процедура ХранимыйФайлПриИзменении(Элемент)
	
	ЗаполнитьПериоды();
	ОбработатьВыборФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если ИспользуетсяФайлЕксел Тогда
		
		Если Элементы.СписокЛистов.ТекущаяСтрока = Неопределено Тогда
			Если СписокЛистов.Количество() = 1 Тогда
				ТекущаяСтрока = СписокЛистов[0];
			Иначе
				ПоказатьПредупреждение(, Нстр("ru = 'Выберите лист отчета для импорта'"));
				Возврат;
			КонецЕсли;
		Иначе
			ТекущаяСтрока = СписокЛистов.НайтиПоИдентификатору(Элементы.СписокЛистов.ТекущаяСтрока);
		КонецЕсли;
		
		ИмяЛиста      = ТекущаяСтрока.Значение;
		НуженПароль   = ТекущаяСтрока.Пометка;
		
	Иначе
		ИмяЛиста      = Неопределено;
		НуженПароль   = Ложь;
	КонецЕсли;
	Закрыть(Новый ФиксированнаяСтруктура("ХранимыйФайл, ВерсияХранимогоФайла, НуженПароль, ИмяЛиста, Пароль", ХранимыйФайл, ВерсияХранимогоФайла, НуженПароль, ИмяЛиста, Пароль));
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыйФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ХранимыеФайлыОрганизаций.ФормаВыбора"
					, Новый Структура("Отбор", СтруктураОтбора), Элемент);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборФайла()
	
	ИспользуетсяФайлЕксел = СтрНайти(ВРЕГ(ХранимыйФайл.РасширениеФайла),"XLS")>0;
	Элементы.НастройкиИмпорта.Видимость = ИспользуетсяФайлЕксел;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияХранимогоФайлаПриИзменении(Элемент)
	
	Если ИспользуетсяФайлЕксел Тогда
		
		ЗаполнитьСписокИменЛистов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСписокИменЛистов();
	
КонецПроцедуры
