#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка = Справочники.СхемаДоступностиРеквизитов.ПустаяСсылка() Тогда	
		 Если Параметры.ЗначенияЗаполнения.Свойство("СогласуемыйОбъект") Тогда
			  Объект.СогласуемыйОбъект = Параметры.ЗначенияЗаполнения.СогласуемыйОбъект;
		 КонецЕсли;	 	
	КонецЕсли;	
	ЗаполнитьСписокФормОбъекта();
	      
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого нФорма Из ФормыТекущегоОбъекта Цикл
		нЭлемент = Элементы.ИмяФормы.СписокВыбора.Добавить(нФорма.Значение,нФорма.Представление);		
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	МассивУдаляемыхСтрок = Объект.ЭлементыФормы.НайтиСтроки(Новый Структура("ИмяФормы",Элементы.ИмяФормы.ВыделенныйТекст));
	Для Каждого уСтрока из МассивУдаляемыхСтрок Цикл
		Объект.ЭлементыФормы.Удалить(уСтрока);
	КонецЦикла;		
	Строки = ДеревоФормы.ПолучитьЭлементы();
	Если Строки.Количество() > 0 Тогда
		СохранитьВеткуДерева(Строки[0]);
	Иначе
		// Нет данных для сохранения.
		ТекстСообщения = НСтр("ru = 'Не выбраны данные для сохранения. Отменено.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтруктураФормы(Элемент)
	ТекВыделенныйТекст = Элемент.ВыделенныйТекст;
	ОтобразитьДеревоРеквизитов(ПутьКФорме + ТекВыделенныйТекст, ТекВыделенныйТекст);
КонецПроцедуры

&НаКлиенте
Процедура ФормыТекущегоОбъектаПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.ФормыТекущегоОбъекта.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		// Сохраним промежуточные данные.
		Строки = ДеревоФормы.ПолучитьЭлементы();
		Если Строки.Количество() > 0 Тогда
			СохранитьВеткуДерева(Строки[0]);
		Иначе
			//Нет данных для сохранения.
		КонецЕсли;
		// Запишем новые данные.
		ОтобразитьДеревоРеквизитов(ТекДанные.Значение, ТекДанные.Представление);
	Иначе
		// Строка не выбрана. Ничего не делаем.
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПодготовитьДерево(Ветка)
	
	Листья = СоставФормы.НайтиСтроки(новый Структура("Родитель", Ветка.Имя));
	СписокСтрок = Ветка.ПолучитьЭлементы();
	Для каждого Лист из Листья цикл
		НовыйЛист = СписокСтрок.Добавить();
		НовыйЛист.Имя = Лист.Имя;
		НовыйЛист.Доступность = Лист.Доступность;
		НовыйЛист.Картинка = Лист.Картинка;
		ПодготовитьДерево(НовыйЛист)
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВеткуДерева(Ветка)
	
	Если Ветка.Имя <> "УправляемаяФорма" тогда
		
		МассивУдаляемыхСтрок = Объект.ЭлементыФормы.НайтиСтроки(Новый Структура("Путь, ИмяФормы", Ветка.Имя, СокращенноеИмяФормы));
		Для Каждого уСтрока из МассивУдаляемыхСтрок Цикл
			Объект.ЭлементыФормы.Удалить(уСтрока);
		КонецЦикла;
				
		НоваяНастройка = Объект.ЭлементыФормы.Добавить();
		НоваяНастройка.Путь = Ветка.Имя;
		НоваяНастройка.ИмяФормы = СокращенноеИмяФормы;
		
		Если Ветка.Доступность = НСтр("ru = 'По умолчанию'") тогда
			НоваяНастройка.ОставитьНастройкиПоУмолчаниюДоступность = Истина;
			НоваяНастройка.Доступность = Ложь;
		Иначе
			НоваяНастройка.ОставитьНастройкиПоУмолчаниюДоступность = Ложь;
			НоваяНастройка.Доступность = (Ветка.Доступность = НСтр("ru = 'Есть'"));
		КонецЕсли;
	КонецЕсли;
	
	Листы = Ветка.ПолучитьЭлементы();
	Для каждого Лист из Листы цикл
		СохранитьВеткуДерева(Лист);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	
	ИмяОсновнойФормыОбъекта = ПолучитьИмяОсновнойФормыОбъекта();
	СтруктураФормы(ИмяОсновнойФормыОбъекта);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяОсновнойФормыОбъекта()
	
	//Если Объект.Владелец.Владелец.НазначениеПроцесса = Перечисления.НазначенияУниверсальныхПроцессов.МаршрутСогласования Тогда
		Если ТипЗнч(Объект.СогласуемыйОбъект) = Тип("СправочникСсылка.СправочникиБД") Тогда
			
			СогласуемыйОбъект = Объект.СогласуемыйОбъект;
			ФормаИмя =  Метаданные.Справочники[СогласуемыйОбъект.Наименование].ОсновнаяФормаОбъекта.Имя;
			ПолныйПутьКФорме = "Справочник."+СогласуемыйОбъект.Наименование+".Форма."+ФормаИмя;
			Возврат ПолныйПутьКФорме;
			
		Иначе	
			
			СогласуемыйОбъект = Объект.СогласуемыйОбъект;
			ФормаИмя =  Метаданные.Документы[СогласуемыйОбъект.Наименование].ОсновнаяФормаОбъекта.Имя;
			ПолныйПутьКФорме = "Документ."+СогласуемыйОбъект.Наименование+".Форма."+ФормаИмя;
			Возврат ПолныйПутьКФорме;

		КонецЕсли;
		
	//КонецЕсли;	
	      
КонецФункции

// Разворачивает дерево формы.
&НаКлиенте
Процедура РазвернутьДерево()
     ДеревоФормыЭлементы = ДеревоФормы.ПолучитьЭлементы();
	 Для Каждого ТекДеревоФормыЭлементы Из ДеревоФормыЭлементы Цикл
		ТекИдентификатор = ТекДеревоФормыЭлементы.ПолучитьИдентификатор();
        Элементы.ДеревоФормы.Развернуть(ТекИдентификатор);
    КонецЦикла;
 КонецПроцедуры		// РазвернутьДерево()

// Заполняет список форм согласуемого объекта согласно массиву изменённых форм 
// МассивФормВход по метаданным НаборМетаданныхВход для типа объекта метаданных, 
// определённых в ПрефиксМетаданныхВход.
&НаСервере
Процедура ЗаполнитьСписокФормПоТипуМетаданного(НаборМетаданныхВход, ПрефиксМетаданныхВход, МассивФормВход)
	// Убедимся в наличии такого объекта в базе данных.
	НаименованиеСогласуемогоОбъекта = Объект.СогласуемыйОбъект.Наименование;
	ОбъектНайден = Ложь;
	Если ПрефиксМетаданныхВход = "Документ" Тогда
		ОбъектНайден = (Метаданные.Документы.Найти(НаименованиеСогласуемогоОбъекта) <> Неопределено);
	ИначеЕсли ПрефиксМетаданныхВход = "Справочник" Тогда
		ОбъектНайден = (Метаданные.Справочники.Найти(НаименованиеСогласуемогоОбъекта) <> Неопределено);
	Иначе
		ОбъектНайден = Ложь;
	КонецЕсли;
	Если ОбъектНайден Тогда
		// Получим списки существующих и доступных форм.
		ПутьКФорме = ПрефиксМетаданныхВход + "." + НаименованиеСогласуемогоОбъекта + ".Форма.";
		ОбъектЗначение = РеквизитФормыВЗначение("Объект");
		МассивДоступныхФорм = ОбъектЗначение.ПолучитьМассивДоступныхФорм();
		// Обойдём все доступные формы из метаданных, добавим их и отметим изменённые.
		Для Каждого ФормаОбъекта Из НаборМетаданныхВход.Формы Цикл
			Если Строка(ФормаОбъекта.ТипФормы) = "Управляемая" Тогда
				УказаныДоступныеФормы = (МассивДоступныхФорм.Количество() > 0);
				ФормаВМассивеДоступных = (МассивДоступныхФорм.Найти(ФормаОбъекта.Имя) <> Неопределено);
				Если (НЕ УказаныДоступныеФормы) ИЛИ (ФормаВМассивеДоступных) Тогда
					ТекИмяФормыОбъекта = ФормаОбъекта.Имя;
					нФорма = ФормыТекущегоОбъекта.Добавить();
					нФорма.Значение = ПрефиксМетаданныхВход + "." + НаименованиеСогласуемогоОбъекта + ".Форма." + ТекИмяФормыОбъекта;
					нФорма.Представление =  ТекИмяФормыОбъекта;
					ЕстьИзмененияФормы = (МассивФормВход.Найти(ТекИмяФормыОбъекта) <> Неопределено);
					нФорма.Пометка = ЕстьИзмененияФормы;
				Иначе
					// Формы нет в списке доступных. Пропускаем.
				КонецЕсли;
			Иначе
				// Обычная форма.
			КонецЕсли;	
		КонецЦикла;
	Иначе
		ТекстСообщения = НСтр("ru = 'Объект метаданных %ИмяДокумента% не найден'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяДокумента%", Строка(НаименованиеСогласуемогоОбъекта));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры		// ЗаполнитьСписокФормПоТипуМетаданного()

&НаСервере
Процедура ЗаполнитьСписокФормОбъекта()
	// Инициализация.
	ТекОбъектСогласования = Объект.СогласуемыйОбъект;
	Если ТекОбъектСогласования <> Неопределено Тогда
		ТекНаименование = ТекОбъектСогласования.Наименование;
		Если СокрЛП(ТекНаименование) = "" Тогда
			Возврат;
		КонецЕсли;	  
		// Получение массива изменённых форм.
		ВыгрузкаЭлементыФормы = Объект.ЭлементыФормы.Выгрузить();
		МассивФорм = ВыгрузкаЭлементыФормы.ВыгрузитьКолонку("ИмяФормы");
		МассивФорм = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивФорм);
		МассивФорм = ОбщегоНазначенияКлиентСерверУХ.СортироватьМассив(МассивФорм);
        // Заполнение списка.
		ФормыТекущегоОбъекта.Очистить(); 
		Если ТипЗнч(ТекОбъектСогласования) = Тип("СправочникСсылка.СправочникиБД") Тогда
			// Согласуется справочник.
			ТекМетаданные = Метаданные.Справочники[ТекНаименование];
			ЗаполнитьСписокФормПоТипуМетаданного(ТекМетаданные, "Справочник", МассивФорм);
		ИначеЕсли ТипЗнч(ТекОбъектСогласования) = Тип("СправочникСсылка.ДокументыБД") Тогда
			// Согласуется документ.
			ТекМетаданные = Метаданные.Документы[ТекНаименование];
			ЗаполнитьСписокФормПоТипуМетаданного(ТекМетаданные, "Документ", МассивФорм);
		Иначе
			// Неизвестный вариант.
			ТекстСообщения = НСтр("ru = 'Неизвестный вариант согласуемого объекта: %СогласуемыйОбъект%. Заполнение списка форм отменено.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СогласуемыйОбъект%", Строка(ТекОбъектСогласования));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СогласуемыйОбъектПриИзменении(Элемент)
	
	ЗаполнитьСписокФормОбъекта();
	Элементы.ИмяФормы.СписокВыбора.Очистить();
	Для Каждого нФорма Из ФормыТекущегоОбъекта Цикл
		нЭлемент = Элементы.ИмяФормы.СписокВыбора.Добавить(нФорма.Значение,нФорма.Представление);		
	КонецЦикла;	
	
КонецПроцедуры

// Отображает дерево реквизитов формы, заданной именем ИмяФормыВход и представлением ПредставлениеФормыВход.
&НаКлиенте
Процедура ОтобразитьДеревоРеквизитов(ИмяФормыВход, ПредставлениеФормыВход)
	Попытка
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПодавлятьСообщенияПриСозданииФормы", Истина);
		Форма = ПолучитьФорму(ИмяФормыВход, ПараметрыФормы);
		СоставФормы.Очистить();
		СокращенноеИмяФормы = ПредставлениеФормыВход;
		
		Для каждого Элемент из Форма.Элементы цикл
			
			ТекстТипа = Строка(ТипЗнч(Элемент));
			Если ТекстТипа = НСтр("ru = 'Декорация формы'") тогда
				Продолжить;
			КонецЕсли;	 
			
			НоваяСтрока = СоставФормы.Добавить();
			НоваяСтрока.Имя = Элемент.Имя;
			
			Если ТекстТипа = НСтр("ru = 'Группа формы'") тогда
				Если Строка(Элемент.Вид) = НСтр("ru = 'Контекстное меню'") или  Строка(Элемент.Вид) = НСтр("ru = 'Командная панель'") тогда
					НоваяСтрока.Тип = 6;
					НоваяСтрока.Картинка = 3;
				Иначе
					НоваяСтрока.Тип = 1;
					НоваяСтрока.Картинка = 0;
				КонецЕсли;
			ИначеЕсли ТекстТипа = НСтр("ru = 'Кнопка формы'") тогда
				НоваяСтрока.Тип = 2;
				НоваяСтрока.Картинка = 4;
				
			ИначеЕсли ТекстТипа = НСтр("ru = 'Поле формы'") тогда
				НоваяСтрока.Тип = 3;
				НоваяСтрока.Картинка = 1;
			ИначеЕсли ТекстТипа = НСтр("ru = 'Декорация формы'") тогда
				НоваяСтрока.Тип = 4;
			ИначеЕсли ТекстТипа = НСтр("ru = 'Таблица формы'") тогда
				НоваяСтрока.Тип = 5;
			Иначе
				НоваяСтрока.Тип = 0;
			КонецЕсли;
			
			Если ТипЗнч(Элемент.Родитель) = Тип("УправляемаяФорма") тогда
				НоваяСтрока.Родитель = "УправляемаяФорма";
			Иначе
				НоваяСтрока.Родитель = Элемент.Родитель.Имя;
			КонецЕсли;
			
			СохраненнаяНастройка = Объект.ЭлементыФормы.НайтиСтроки(новый Структура("Путь", НоваяСтрока.Имя));
			Если СохраненнаяНастройка.Количество() > 0 тогда
				
				Если СохраненнаяНастройка[0].ОставитьНастройкиПоУмолчаниюДоступность тогда
					НоваяСтрока.Доступность = НСтр("ru = 'По умолчанию'");
				Иначе
					Если СохраненнаяНастройка[0].Доступность тогда
						НоваяСтрока.Доступность = НСтр("ru = 'Есть'");
					Иначе
						НоваяСтрока.Доступность = НСтр("ru = 'Нет'");
					КонецЕсли;
				КонецЕсли;
			Иначе
				НоваяСтрока.Доступность = НСтр("ru = 'По умолчанию'");
			КонецЕсли;
			
		КонецЦикла;
		
		СписокСтрок = ДеревоФормы.ПолучитьЭлементы();
		СписокСтрок.Очистить();
		Корень = СписокСтрок.Добавить();
		Корень.Имя = "УправляемаяФорма";
		Корень.Картинка = 2;
		
		ПодготовитьДерево(Корень);
		РазвернутьДерево();
	Исключение
		ТекстСообщения = НСтр("ru = 'Возникли ошибки при формировании структуры формы: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецПопытки;
КонецПроцедуры		// ОтобразитьДеревоРеквизитов()	

