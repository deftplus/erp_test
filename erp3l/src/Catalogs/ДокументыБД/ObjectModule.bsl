Перем Используется77; // Признак использования обращения к ВИБ на платформе 7.7
Перем ТекСоединениеВИБ Экспорт; // Текущее соединение с внешней информационной базой
Перем ДокументБД;
Перем ТекущаяИБ;
Перем мОписаниеТиповСтрока;
Перем мОписаниеТиповБулево;
Перем мОписаниеТиповТЗ;
Перем мОписаниеТиповСписокЗначений;

Перем ТаблицаРеквизитовКонсолидации;
Перем ТаблицаРеквизитовВИБ;
Перем ТекТаблицаСинхронизации;


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьРеквизитыОбъекта(Кэш = Неопределено, ЕстьИзменения = Истина) Экспорт
	
	Если Не ПроверитьНаименование() Тогда	
		Возврат;	
	КонецЕсли;
	
	ТекущаяИБ = (Владелец = Справочники.ТипыБазДанных.ТекущаяИБ);

	Если НЕ ТекущаяИБ Тогда
		
		Если ТекСоединениеВИБ = Неопределено Тогда
			
			ТекСоединениеВИБ = ОбщегоНазначенияУХ.ПолучитьСоединениеСВИБПоУмолчанию(Владелец, 1);
			
			Если ТекСоединениеВИБ = Неопределено Тогда
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ТекСоединениеВИБ = Обработки.РаботаСМетаданнымиУХ.Создать();
			
	КонецЕсли;

	РеквизитыДоОбновления = Реквизиты.Выгрузить();
	
	СтруктураОписания = ОбщегоНазначенияУХ.ПолучитьСтруктуруОписанияДокументаБД(Наименование, ТекСоединениеВИБ, 
		Использование77(), Кэш);
	
	Если СтруктураОписания.Свойство("ТекстОшибки") Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтруктураОписания.ТекстОшибки,Истина,,СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;
	
	ОбщегоНазначенияУХ.ЗаполнитьИзмененныеРеквизиты(ЭтотОбъект, СтруктураОписания, "Реквизиты", ЕстьИзменения);
	
	ТабНовыеРеквизиты = ЭтотОбъект.Реквизиты.ВыгрузитьКолонки();
	Для Каждого СтрРеквизит ИЗ СтруктураОписания.Реквизиты Цикл
		
		НоваяСтрока = ТабНовыеРеквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрРеквизит);
		ВосстановитьДанныеРеквизитов(НоваяСтрока, РеквизитыДоОбновления);
	КонецЦикла;	
	
	ОбщегоНазначенияУХ.ЗагрузитьИзмененнуюТабЧасть(ЭтотОбъект.Реквизиты, ТабНовыеРеквизиты, ЕстьИзменения);
			
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		ОбщегоНазначенияУХ.ОбновитьОписаниеТабличнойЧастиБД(ТекСоединениеВИБ, Ссылка, 
			Новый Структура("ТипОбъектаМетаданных,ИмяОбъектаМетаданных","Documents",Наименование),
			Использование77(),
			Кэш);
		
	КонецЕсли;
		
КонецПроцедуры // ЗаполнитьРеквизитыОбъекта()

Функция ВосстановитьДанныеРеквизитов(СтрокаРеквизита,СохраненныеДанные)
	
	СохраненнаяСтрока=СохраненныеДанные.Найти(СтрокаРеквизита.Имя,"Имя");
	
	Если НЕ СохраненнаяСтрока=Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(СтрокаРеквизита,СохраненнаяСтрока,,"Синоним,ТипДанных,ОписаниеПримитивногоТипа");
		
	КонецЕсли;
		
КонецФункции // ВосстановитьДанныеРеквизитов() 
	
Функция ПроверитьНаименование(Отказ = Ложь)
	
	Если ЗначениеЗаполнено(Наименование) Тогда
		Возврат Истина;
	Иначе
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Для обрабатываемого плана счетов внешней информационной базы не указано наименование.'"),Отказ,,СтатусСообщения.Внимание);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипДокументаБД.Пустая() Тогда
		ТипДокументаБД = ПредопределенноеЗначение("Перечисление.ТипыДокументовБД.ПрочийДокумент");
	КонецЕсли;
	
	Если РазделятьПоОрганизациям и РеквизитРазделенияПоОрганизациям="" Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Выбрано разделение ответственных по организациям. Необходимо указать реквизит, соответствующий организации.'"), Отказ,, СтатусСообщения.Внимание);
	КонецЕсли;		
	Если РазделятьПоПроектам и РеквизитРазделенияПоПроектам="" Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(НСтр("ru = 'Выбрано разделение ответственных по проектам. Необходимо указать реквизит, соответствующий проекту.'"), Отказ,, СтатусСообщения.Внимание);
	КонецЕсли;	
		
	ПроверитьНаименование(Отказ);
	
	Если ЗначениеЗаполнено(ШаблонДокументаБД) Тогда
		Если НЕ Синоним = Наименование Тогда
			Синоним = Наименование;
		КонецЕсли;
	КонецЕсли;
			
	Если РеквизитШаблонаДокумета="Сценарий" или РеквизитШаблонаДокумета="ПериодОтчета" Или РеквизитШаблонаДокумета="Организация" Тогда
		
		СтрокаШаблона = НСтр("ru = 'Реквизит %1 не может быть использован в качестве шаблона!'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, РеквизитШаблонаДокумета), Отказ,, СтатусСообщения.Внимание);
		КонецЕсли;
		
		Отказ = Истина;
				
	КонецЕсли;	
	
	Если Владелец = Справочники.ТипыБазДанных.ТекущаяИБ  Тогда
		
		Согласуется = ПроверитьВозможностьСогласования();
		
		Если Наименование = "ЗаявкаНаИзменениеНСИ"  Тогда
			РеквизитШаблонаДокумета = "СправочникБД";
			ИспользоватьШаблоны = Истина;
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
		ИначеЕсли Наименование = "НастраиваемыйОтчет" Тогда	
			ИспользуетсяВПроцессе = Истина;
	        ИспользуетсяВНастройкахРеглмента = Истина;
			РеквизитШаблонаДокумета = "ВидОтчета";
			ИспользоватьШаблоны = Истина;			
			ЕстьПравилоРасчета = Истина;
			ЕстьПравилоПроверки = Истина;
			ЕстьБланк = Истина;
			ЕстьСпособФормирования = Истина;
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияОтчетов.Подготовлен;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияОтчетов.Утвержден;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияОтчетов.Возвращен;
			ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияОтчетов.Выполняется;	
			РеквизитСостоянияСтрока = "СостоянияОтчетов";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
		ИначеЕсли Наименование = "ТрансформационнаяКорректировка" Тогда	
			ИспользуетсяВПроцессе = Истина;
			ИспользуетсяВНастройкахРеглмента = Истина;
            РеквизитШаблонаДокумета = "ШаблонКорректировки";
			ИспользоватьШаблоны = Истина;
            ЕстьПравилоРасчета = Истина;
			ЕстьПравилоПроверки = Истина;
            ЕстьСпособФормирования = Истина;
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияОтчетов.Подготовлен;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияОтчетов.Утвержден;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияОтчетов.Возвращен;
			ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияОтчетов.Выполняется;
			РеквизитСостоянияСтрока = "СостоянияОтчетов";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
		ИначеЕсли Наименование = "КорректировкаЗначенийПоказателей" Тогда	
			ИспользуетсяВПроцессе = Истина;
			ИспользуетсяВНастройкахРеглмента = Истина;
            РеквизитШаблонаДокумета = "ШаблонКорректировки";
			ИспользоватьШаблоны = Истина;
            ЕстьПравилоРасчета = Истина;
			ЕстьПравилоПроверки = Истина;
            ЕстьСпособФормирования = Истина;
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияОтчетов.Подготовлен;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияОтчетов.Утвержден;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияОтчетов.Возвращен;
			ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияОтчетов.Выполняется;
			РеквизитСостоянияСтрока = "СостоянияОтчетов";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);	
		ИначеЕсли Наименование = "Трансляция" Тогда	
			ИспользуетсяВПроцессе = Истина;
			ИспользуетсяВНастройкахРеглмента = Истина;
			РеквизитШаблонаДокумета = "ШаблонКорректировки";
			ИспользоватьШаблоны = Истина;
            ЕстьПравилоРасчета = Истина;
			ЕстьСпособФормирования = Истина;
            ЕстьШаблонТрансляции = Истина;
			//СостоянияОтчетов
					
		ИначеЕсли ЭтоЗаявка() Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "ОперативныйПлан" Тогда
						
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
	
		ИначеЕсли Наименование = "РеестрПлатежей" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
            РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);

		ИначеЕсли Наименование = "РакурсДанных" Тогда	
			
			РеквизитШаблонаДокумета = "Область";
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияОтчетов.Подготовлен;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияОтчетов.Утвержден;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияОтчетов.Возвращен;
			ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияОтчетов.Выполняется;	
			ИспользуетсяВПроцессе = Ложь;
			ИспользуетсяВНастройкахРеглмента = Истина;
			РеквизитСостоянияСтрока = "СостоянияОтчетов";	
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
            РеквизитРазделенияПоОрганизациям = "Организация";
			РеквизитРазделенияПоПроектам = "Проект";
			
		ИначеЕсли Наименование = "АккредитацияПоставщика" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "КвалификацияПоставщика" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "ЛишениеАккредитации" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "ОтзывАккредитации" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "УстановкаОбщихТребованийКПоставщикам" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
	
		ИначеЕсли Наименование = "УстановкаТребованийКвалификацииКНоменклатуреПоставщиков" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);

		ИначеЕсли Наименование = "ПредложениеПоставщика" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "ПоступлениеИнвестиций" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
			
		ИначеЕсли Наименование = "ВыбытиеИнвестиций" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
				
		ИначеЕсли Наименование = "СтрокаПланаЗакупок" Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Утвержден;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Возвращен;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Черновик;
			РеквизитСостоянияСтрока = "СтатусыВыгружаемыхОбъектовЕИС";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);
				
		ИначеЕсли Наименование = "ВерсияСоглашенияАккредитив"
			ИЛИ Наименование = "ВерсияСоглашенияБанковскаяГарантия"
			ИЛИ Наименование = "ВерсияСоглашенияВалютноПроцентныйСвоп"
			ИЛИ Наименование = "ВерсияСоглашенияВалютныйСвоп"
			ИЛИ Наименование = "ВерсияСоглашенияВалютныйФорвард"
			ИЛИ Наименование = "ВерсияСоглашенияДепозит"
			ИЛИ Наименование = "ВерсияСоглашенияКоммерческийДоговор"
			ИЛИ Наименование = "ВерсияСоглашенияКредит"
			ИЛИ Наименование = "ГрафикРасчетовСПокупателемПоставщиком"
			ИЛИ Наименование = "ЗаключениеДоговораАренды"
			ИЛИ Наименование = "ИзменениеУсловийДоговораАренды"
			
			Тогда
			
			ЗначениеРеквизитаСостоянияНаУтверждении = Перечисления.СостоянияСогласования.НаУтверждении;
			ЗначениеРеквизитаСостоянияУтвержден = Перечисления.СостоянияСогласования.Утверждена;
            ЗначениеРеквизитаСостоянияОтклонен = Перечисления.СостоянияСогласования.Возвращена;
            ЗначениеРеквизитаСостоянияЧерновик = Перечисления.СостоянияСогласования.Черновик;
			РеквизитСостоянияСтрока = "СостоянияСогласования";
			РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию(РеквизитСостоянияСтрока,,,Справочники.ТипыБазДанных.ТекущаяИБ);

		КонецЕсли;
		
		
		
	КонецЕсли;
		
	// Заполнение реквизита разделение по организациям по умолчанию.
	Если НЕ ЗначениеЗаполнено(РеквизитРазделенияПоОрганизациям) Тогда
		Если ЭтоЗаявка() Тогда
			РеквизитРазделенияПоОрганизациям = "Организация";
		ИначеЕсли Наименование = "НастраиваемыйОтчет" Тогда
			РеквизитРазделенияПоОрганизациям = "Организация";
		Иначе
			СтруктураОтбора = Новый Структура();
			СтруктураОтбора.Вставить("Имя", "Организация");
			НайденныеСтроки = Реквизиты.НайтиСтроки(СтруктураОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				РеквизитРазделенияПоОрганизациям = "Организация";
			Иначе
				СтруктураОтбора.Вставить("Имя", "ЦФО");
				НайденныеСтроки = Реквизиты.НайтиСтроки(СтруктураОтбора);
				Если НайденныеСтроки.Количество() > 0 Тогда
					РеквизитРазделенияПоОрганизациям = "ЦФО";
				Иначе
					РеквизитРазделенияПоОрганизациям = "";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		// Уже заполнено. Не изменяем.
	КонецЕсли;

		
	
КонецПроцедуры

Функция Использование77() Экспорт
		
	Если Используется77 = Неопределено Тогда
		Используется77 = (Владелец.ВерсияПлатформы = Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие77);	
	КонецЕсли;
	
	Возврат Используется77;
	
КонецФункции

Функция ПроверитьВозможностьСогласования() Экспорт
	
	Если НЕ Владелец =Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Для Каждого ОТип Из Метаданные.ОпределяемыеТипы.ОбъектыДляСогласования.Тип.Типы() Цикл
		Если Метаданные.Документы.Найти(Наименование) <> Неопределено Тогда
			Если ОТип=Тип("ДокументСсылка."+Наименование) Тогда
				Возврат Истина;
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru = 'Не найден документ %Наименование%. Возможно, требуется обновить данные по метаданным текущей ИБ.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", Строка(Наименование));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, , , СтатусСообщения.Информация);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции	

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

Функция ЭтоЗаявка()
	
	Возврат Наименование = "ЗаявкаНаРасходованиеДенежныхСредств" Или Наименование = "ОжидаемоеПоступлениеДенежныхСредств"
		Или Наименование = "ЗаявкаНаРасход" Или Наименование = "ПланируемыйДоход";
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	// Заполнение параметров согласования по умолчанию.
	РеквизитСостояния = Справочники.ПеречисленияБД.НайтиПоНаименованию("СостоянияСогласования", , , Справочники.ТипыБазДанных.ТекущаяИБ);
	ЗначениеРеквизитаСостоянияНаУтверждении	 = Перечисления.СостоянияСогласования.НаУтверждении;
	ЗначениеРеквизитаСостоянияОтклонен		 = Перечисления.СостоянияСогласования.Отклонена;
	ЗначениеРеквизитаСостоянияУтвержден		 = Перечисления.СостоянияСогласования.Утверждена;
	ЗначениеРеквизитаСостоянияЧерновик		 = Перечисления.СостоянияСогласования.Черновик;
КонецПроцедуры

#КонецЕсли