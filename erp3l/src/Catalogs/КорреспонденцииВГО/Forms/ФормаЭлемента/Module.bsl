&НаКлиенте
Процедура ИзменитьКоды()
	Перем КодКорреспонденции;
	
	Если ЗначениеЗаполнено(Объект.СчетДт) Тогда
		КодКорреспонденции = "Дт" + СтрЗаменить(Объект.СчетДт,".","_");
	Иначе
		КодКорреспонденции = "";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.СчетКт) Тогда
		КодКорреспонденции = КодКорреспонденции + "Кт" + СтрЗаменить(Объект.СчетКт,".","_");
	КонецЕсли;
	Объект.Код = КодКорреспонденции;
	
КонецПроцедуры // ИзменитьКоды()

&НаКлиенте
Процедура ЗаполнитьТаблицуВидовСубконто(ТаблицаСубконто, УпакованныеДанныеЗаполнения)
	ТаблицаСубконто.Очистить();
	Для Каждого СтруктураСДанными Из УпакованныеДанныеЗаполнения Цикл
		НоваяСтрока = ТаблицаСубконто.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСДанными);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицыСубконто(Знач ПараметрыСчетов)
	СтруктураСТаблицами = ПолучитьУпакованныеТаблицыВидовСубконто(ПараметрыСчетов);
	
	Если ПараметрыСчетов.Свойство("СчетДт") Тогда
		ЗаполнитьТаблицуВидовСубконто(СубконтоСчетаДтОсновнойКорреспонденции, СтруктураСТаблицами.ОснДт);
	КонецЕсли; 
	Если ПараметрыСчетов.Свойство("СчетКт") Тогда
		ЗаполнитьТаблицуВидовСубконто(СубконтоСчетаКтОсновнойКорреспонденции, СтруктураСТаблицами.ОснКт);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУпакованныеТаблицыВидовСубконто(Знач ПараметрыСчетов)
	СтруктураСТаблицами = Новый Структура();
	Корреспонденция = "";
	Если ПараметрыСчетов.Свойство("СчетДт", Корреспонденция) Тогда
		СтруктураСТаблицами.Вставить("ОснДт",
			ПолучитьУпакованнуюТаблицуВидовСубконто(Корреспонденция, ПараметрыСчетов.ИспользуемСубконтоСчетДт));
	КонецЕсли; 
	Если ПараметрыСчетов.Свойство("СчетКт", Корреспонденция) Тогда
		СтруктураСТаблицами.Вставить("ОснКт",
			ПолучитьУпакованнуюТаблицуВидовСубконто(Корреспонденция, ПараметрыСчетов.ИспользуемСубконтоСчетКт));
	КонецЕсли;
		
	Возврат СтруктураСТаблицами;		
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьУпакованнуюТаблицуВидовСубконто(Знач Счет, Знач КодИспользуемыхСубконто)
	Перем МассивСтрок, ТаблицаВидовСубконто;
	МассивСтрок = Новый Массив;
	ИменаПолей = "Номер,ВидСубконто,Использовать";
	ТаблицаВидовСубконто = ПолучитьТаблицуВидовСубконто(Счет, КодИспользуемыхСубконто);
	Для Каждого СтрокаТаблицы Из ТаблицаВидовСубконто Цикл
		СтруктураСДанными = Новый Структура(ИменаПолей);
		ЗаполнитьЗначенияСвойств(СтруктураСДанными, СтрокаТаблицы);
		МассивСтрок.Добавить(СтруктураСДанными);
	КонецЦикла;
	Возврат МассивСтрок;
КонецФункции

&НаКлиенте
Процедура СчетДтПриИзменении(Элемент)
	Если флПрограмноеИзменение = Истина Тогда
		Возврат;
	КонецЕсли;
	ИзменитьКоды();
	ЗаполнитьТаблицуВидовСубконто(СубконтоСчетаДтОсновнойКорреспонденции,
		ПолучитьУпакованнуюТаблицуВидовСубконто(Объект.СчетДт, Объект.ИспользуемСубконтоСчетДт));
КонецПроцедуры

&НаКлиенте
Процедура СчетКтПриИзменении(Элемент)
	Если флПрограмноеИзменение = Истина Тогда
		Возврат;
	КонецЕсли;
	ИзменитьКоды();
	ЗаполнитьТаблицуВидовСубконто(СубконтоСчетаКтОсновнойКорреспонденции,
		ПолучитьУпакованнуюТаблицуВидовСубконто(Объект.СчетКт, Объект.ИспользуемСубконтоСчетКт));
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ИспользуемСубконтоСчетДт = Справочники.КорреспонденцииВГО.РассчитатьКодСубконто(СубконтоСчетаДтОсновнойКорреспонденции);
	ТекущийОбъект.ИспользуемСубконтоСчетКт = Справочники.КорреспонденцииВГО.РассчитатьКодСубконто(СубконтоСчетаКтОсновнойКорреспонденции);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицуВидовСубконто(Знач Счет, Знач КодИспользуемыхСубконто)
	Перем ТаблицаСубконто;
	
	ТаблицаСубконто = Новый ТаблицаЗначений;
	ТаблицаСубконто.Колонки.Добавить("Номер", Новый ОписаниеТипов("Число"));
	ТаблицаСубконто.Колонки.Добавить("ВидСубконто", Новый ОписаниеТипов("Строка"));
	ТаблицаСубконто.Колонки.Добавить("Использовать", Новый ОписаниеТипов("Булево"));
	
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		Возврат ТаблицаСубконто;
	КонецЕсли;
	
	ТЧВидыСубконто = Счет.ВидыСубконто;
	Для Каждого СтрВидСубконто Из ТЧВидыСубконто Цикл
		НоваяСтрока = ТаблицаСубконто.Добавить();
		НоваяСтрока.Номер = СтрВидСубконто.Номер;
		НоваяСтрока.ВидСубконто = СтрВидСубконто.ВидСубконто;
		НоваяСтрока.Использовать = Справочники.КорреспонденцииВГО.ИспользуемСубконто(СтрВидСубконто.Номер, КодИспользуемыхСубконто);
	КонецЦикла;
	
	Возврат ТаблицаСубконто;
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// загрузим таблицы субконто
	СубконтоСчетаДтОсновнойКорреспонденции.Загрузить(
		ПолучитьТаблицуВидовСубконто(
			Объект.СчетДт,
			Объект.ИспользуемСубконтоСчетДт)
		);
		
	СубконтоСчетаКтОсновнойКорреспонденции.Загрузить(
		ПолучитьТаблицуВидовСубконто(
			Объект.СчетКт,
			Объект.ИспользуемСубконтоСчетКт)
		);
		
КонецПроцедуры

&НаКлиенте
Процедура КодОсновнойКорреспонденцииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Перем мКодыСчетов;
	Если флРазрешитьРедактироватьКодыКорреспонденций Тогда
		Возврат;
	КонецЕсли;
	ТекЗначение = Объект.КодОсновнойКорреспонденции;
	Если ТекЗначение = Текст Тогда
		Возврат;
	КонецЕсли;
	
	мКодыСчетов = СверкаВГОВызовСервераУХ.НайтиСчетаНаСервере(Текст, Объект.Владелец);
	Если мКодыСчетов.ОснДт = Неопределено
		И мКодыСчетов.ОснКт = Неопределено
		Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	флПрограмноеИзменение = Истина;
	Если мКодыСчетов.ОснДт <> Неопределено Тогда
		Объект.СчетДт = мКодыСчетов.ОснДт;		
	КонецЕсли;
	Если мКодыСчетов.ОснДт <> Неопределено Тогда
		Объект.СчетКт = мКодыСчетов.ОснКт;		
	КонецЕсли;
	ИзменитьКоды();
	флПрограмноеИзменение = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	Если Объект.Владелец = ПредопределенноеЗначение("Справочник.ПланыСчетовБД.ПустаяСсылка") Тогда
		Элементы.Код.ТолькоПросмотр = Истина;
		Элементы.СчетДт.ТолькоПросмотр = Истина;	
		Элементы.СчетКт.ТолькоПросмотр = Истина;
	Иначе
		Элементы.Код.ТолькоПросмотр = Ложь;
		Элементы.СчетДт.ТолькоПросмотр = Ложь;	
		Элементы.СчетКт.ТолькоПросмотр = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВладелецПриИзменении(Элементы.Владелец);
	флПрограмноеИзменение = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура КодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Перем мКодыСчетов;
	Если флРазрешитьРедактироватьКодыКорреспонденций Тогда
		Возврат;
	КонецЕсли;
	ТекЗначение = Объект.Код;
	Если ТекЗначение = Текст Тогда
		Возврат;
	КонецЕсли;
	
	мКодыСчетов = СверкаВГОВызовСервераУХ.НайтиСчетаНаСервере(Текст, Объект.Владелец);
	Если мКодыСчетов.СчетДт = Неопределено
		И мКодыСчетов.СчетКт = Неопределено
		И мКодыСчетов.ИмяДт = Неопределено
		И мКодыСчетов.ИмяКт = Неопределено
		Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	флПрограмноеИзменение = Истина;
	ПараметрыСчетов = Новый Структура();
	Если мКодыСчетов.СчетДт <> Неопределено Тогда
		Объект.СчетДт = мКодыСчетов.СчетДт;
		ПараметрыСчетов.Вставить("СчетДт", Объект.СчетДт);
		ПараметрыСчетов.Вставить("ИспользуемСубконтоСчетДт", Объект.ИспользуемСубконтоСчетДт);
	КонецЕсли;
	Если мКодыСчетов.СчетКт <> Неопределено Тогда
		Объект.СчетКт = мКодыСчетов.СчетКт;
		ПараметрыСчетов.Вставить("СчетКт", Объект.СчетКт);
		ПараметрыСчетов.Вставить("ИспользуемСубконтоСчетКт", Объект.ИспользуемСубконтоСчетКт);
	КонецЕсли;
	ИзменитьКоды();
	ЗаполнитьТаблицыСубконто(ПараметрыСчетов);
	флПрограмноеИзменение = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура КорреспонденцияСчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Отбор_ = Новый Структура("Владелец", Объект.Владелец);
	Параметры_ = Новый Структура("Отбор,ВыборГруппИЭлементов", Отбор_, ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	
	ОткрытьФорму("Справочник.СчетаБД.ФормаВыбора", Параметры_, Элемент);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.флРазрешитьРедактироватьКодыКорреспонденций.Видимость = Пользователи.ЭтоПолноправныйПользователь();
КонецПроцедуры

