#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьПоУмолчанию(ЗаменятьУстановленные = Истина, ОбновитьВидыСчетовФИ = Истина) Экспорт
	
	Если ОбновитьВидыСчетовФИ Тогда
		Справочники.ВидыСчетовФИ.ОбновлениеПредопределенных();	
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВидыСчетовФИВидыФИ.Ссылка КАК ВидСчетаФИ,
	|	ВидыСчетовФИВидыФИ.ВидФИ КАК ВидФИ,
	|	ВидыСчетовФИВидыФИ.Актив КАК Актив,
	|	ВидыСчетовФИВидыФИ.Счет КАК Счет
	|ПОМЕСТИТЬ втВидыФИ
	|ИЗ
	|	Справочник.ВидыСчетовФИ.ВидыФИ КАК ВидыСчетовФИВидыФИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПараметрыУчетаФИРСБУ.Ссылка) КАК ПараметрыУчетаФИ,
	|	ПараметрыУчетаФИРСБУ.ВидФИ КАК ВидФИ,
	|	ПараметрыУчетаФИРСБУ.Актив КАК Актив
	|ПОМЕСТИТЬ втСозданныеПараметры
	|ИЗ
	|	Справочник.ПараметрыУчетаФИРСБУ КАК ПараметрыУчетаФИРСБУ
	|ГДЕ
	|	(ПараметрыУчетаФИРСБУ.ВидФИ, ПараметрыУчетаФИРСБУ.Актив) В
	|			(ВЫБРАТЬ
	|				втВидыФИ.ВидФИ,
	|				втВидыФИ.Актив
	|			ИЗ
	|				втВидыФИ КАК втВидыФИ)
	|	И ПараметрыУчетаФИРСБУ.Ссылка.ФИ = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыУчетаФИРСБУ.ВидФИ,
	|	ПараметрыУчетаФИРСБУ.Актив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВидыФИ.ВидФИ КАК ВидФИ,
	|	втВидыФИ.Актив КАК Актив,
	|	втВидыФИ.ВидСчетаФИ КАК ВидСчетаФИ,
	|	СчетаУчета.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	втВидыФИ.Счет КАК Счет
	|ИЗ
	|	втВидыФИ КАК втВидыФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСозданныеПараметры КАК СчетаУчета
	|		ПО втВидыФИ.ВидФИ = СчетаУчета.ВидФИ
	|			И втВидыФИ.Актив = СчетаУчета.Актив
	|ИТОГИ
	|	МАКСИМУМ(ПараметрыУчетаФИ)
	|ПО
	|	ВидФИ,
	|	Актив");
	
	ВыборкаВидФИ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВидФИ.Следующий() Цикл
		ВыборкаПараметрыУчетаФИ = ВыборкаВидФИ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПараметрыУчетаФИ.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаПараметрыУчетаФИ.ПараметрыУчетаФИ) Тогда
				Объект = ВыборкаПараметрыУчетаФИ.ПараметрыУчетаФИ.ПолучитьОбъект();
				
				КэшСтарых = Объект.СчетаУчета.Выгрузить();
				КэшСтарых.Индексы.Добавить("ВидСчетаФИ");
				Объект.СчетаУчета.Очистить();
				
			Иначе 
				Объект = Справочники.ПараметрыУчетаФИРСБУ.СоздатьЭлемент();
				Объект.УстановитьНовыйКод();
				ЗаполнитьЗначенияСвойств(Объект, ВыборкаПараметрыУчетаФИ);
				
				КэшСтарых = Объект.СчетаУчета.Выгрузить();
				
			КонецЕсли;
						
			ВыборкаВидСчета = ВыборкаПараметрыУчетаФИ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);			
			ЕстьИзменения = КэшСтарых.Количество() <> ВыборкаВидСчета.Количество();
			Пока ВыборкаВидСчета.Следующий() Цикл
				
				СтрокаТаб = Объект.СчетаУчета.Добавить();
				
				СтрокаСтарая = КэшСтарых.Найти(ВыборкаВидСчета.ВидСчетаФИ, "ВидСчетаФИ");
				Если СтрокаСтарая = Неопределено Тогда
					СтрокаТаб.ВидСчетаФИ = ВыборкаВидСчета.ВидСчетаФИ;
				Иначе
					ЗаполнитьЗначенияСвойств(СтрокаТаб, СтрокаСтарая);					
				КонецЕсли;
				
				Если СтрокаТаб.Счет = ВыборкаВидСчета.Счет Тогда
					Продолжить;// счет не был изменен
				КонецЕсли;
				
				ЕстьИзменения = Истина;
				СтрокаТаб.Счет = ВыборкаВидСчета.Счет;
				Для каждого СтрокаВид Из ВыборкаВидСчета.Счет.ВидыСубконто Цикл
					
					ИмяКолонки = "Субконто" + СтрокаВид.НомерСтроки;
					
					СтрокаТаб[ИмяКолонки] = СтрокаВид.ВидСубконто.ТипЗначения.ПривестиЗначение(СтрокаТаб[ИмяКолонки]);
					
				КонецЦикла;
								
			КонецЦикла;
			
			Если ЕстьИзменения Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			КонецЕсли;			
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиИзРегистра() Экспорт

	

КонецПроцедуры

#КонецЕсли
