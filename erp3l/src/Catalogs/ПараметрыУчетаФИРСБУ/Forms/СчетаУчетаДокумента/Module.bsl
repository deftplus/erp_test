
&НаКлиенте
Процедура СчетаУчетаСчетПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КэшируемыеЗначения = Новый Структура;
	КэшируемыеЗначения.Вставить("ИменаСубконто", 	ПолучитьИменаСубконто());
	КэшируемыеЗначения.Вставить("Организация", 		Параметры.Организация);
	КэшируемыеЗначения.Вставить("КлючевыеСубконто", Параметры.КлючевыеСубконто);
	
	ФинансовыеИнструментыФормы.ЗаполнитьСчетаУчета(ЭтаФорма, Параметры.СчетаУчета);
			
	Для каждого ТекущаяСтрока Из СчетаУчета Цикл
		МСФОКлиентСерверУХ.УстановитьДоступностьСубконто(ТекущаяСтрока.Счет, ТекущаяСтрока, КэшируемыеЗначения.ИменаСубконто);
		МСФОКлиентСерверУХ.ОбновитьСубконтоСчета(ЭтаФорма, "Счет", ТекущаяСтрока, "СчетаУчета", Ложь);
	КонецЦикла;
	
	МСФОКлиентСерверУХ.УсловноеОформлениеКлючевыхСубконто(ЭтаФорма, "СчетаУчета");
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Соответствие;
	
	Для каждого ТекСтрока Из СчетаУчета Цикл
		
		СчетСубконто = Новый Структура("Счет,Субконто1,Субконто2,Субконто3");
		ЗаполнитьЗначенияСвойств(СчетСубконто, ТекСтрока);
		Результат.Вставить(ТекСтрока.ВидСчетаФИ, СчетСубконто);
		
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьСчетаУчета()
	Возврат ПоместитьВоВременноеХранилище(СчетаУчета.Выгрузить(), ЭтаФорма);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИменаСубконто() Экспорт 

	Результат = Новый Структура;
	
	Субконто = Новый Соответствие;
	
	Субконто.Вставить(1, "Субконто1");
	Субконто.Вставить(2, "Субконто2");
	Субконто.Вставить(3, "Субконто3");
	
	Результат.Вставить("Счет", Субконто);	
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
		
	Для Сч = 1 По 3 Цикл
		
		// Доступность субконто
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СпособыСубконто" + Сч);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Способы.Субконто" + Сч + "Доступность", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
		
		// Обозначение пустых субконто
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СпособыСубконто" + Сч);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Способы.Субконто" + Сч + "Доступность", ВидСравненияКомпоновкиДанных.Равно, Истина);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Способы.Субконто" + Сч, ВидСравненияКомпоновкиДанных.НеЗаполнено);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НеЗаполненноеСубконто);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<...>'"));
		
	КонецЦикла;
	
КонецПроцедуры