
&НаСервере
Процедура ОбновитьТаблицуРесурсов()
	
	Объект.СоответствиеРесурсов.Очистить();
	ЗаполнитьСписокРесурсовПриемник();
	
	Для Каждого СтрРесурс ИЗ Объект.РегистрБухгалтерииИсточник.Ресурсы Цикл
		
		НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
		НоваяСтрока.РесурсИсточник=СтрРесурс.Имя;
		
		СтрокаПриемник=Объект.РегистрБухгалтерииПриемник.Ресурсы.Найти(СтрРесурс.ПризнакУчета,"ПризнакУчета");
		
		Если (Не СтрокаПриемник=Неопределено) И Объект.СоответствиеРесурсов.НайтиСтроки(Новый Структура("РесурсПриемник",СтрокаПриемник.Имя)).Количество()=0 Тогда
				
			НоваяСтрока.РесурсПриемник=СтрокаПриемник.Имя;
			
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры // ОбновитьТаблицуРесурсов()

&НаСервере
Процедура ОбновитьТаблицуРесурсовФинансовыхРегистров()
	
	Объект.СоответствиеРесурсов.Очистить();
	ЗаполнитьСписокРесурсовПриемник();
	
	НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
	НоваяСтрока.РесурсИсточник="СуммаРегл";
	НоваяСтрока.РесурсПриемник="СуммаВВалютеУчета";
	
	НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
	НоваяСтрока.РесурсИсточник="СуммаУпр";
	НоваяСтрока.РесурсПриемник="СуммаВВалютеОтчетности";
	
	НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
	НоваяСтрока.РесурсИсточник="ВалютнаяСумма";
	НоваяСтрока.РесурсПриемник="СуммаВВалюте";
	
	НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
	НоваяСтрока.РесурсИсточник="Количество";
	НоваяСтрока.РесурсПриемник="Количество";
	
КонецПроцедуры // ОбновитьТаблицуРесурсовФинансовыхРегистров() 

&НаСервере
Процедура ОбновитьТаблицуРесурсовБюджетов()
	
	ЗаполнитьСписокРесурсовПриемник();	
		
	Для Каждого СтрРесурс ИЗ Объект.РегистрБухгалтерииИсточник.Ресурсы Цикл
		
		Если СтрРесурс.Балансовый
			ИЛИ СтрРесурс.ПризнакУчета="Количественный" Тогда
			
			НоваяСтрока=Объект.СоответствиеРесурсов.Добавить();
			НоваяСтрока.РесурсИсточник=СтрРесурс.Имя;
			
		КонецЕсли;
		
	КонецЦикла;
					
КонецПроцедуры // ОбновитьТаблицуРесурсов()

&НаСервере
Процедура ПриИзмененииРегистра()
	
	Если ЗаполненыРеквизитыТрансляцииПроводок() Тогда
		
		ОбновитьТаблицуРесурсов();
		Элементы.ГруппаСоответствиеРесурсов.Видимость=Истина;
		Элементы.НастройкаЗаполненияИзмеренийПоУмолчанию.Видимость=Истина;
		ПолучитьНастройкиЗаполненияИзмеренийПоУмолчанию();
		
	ИначеЕсли Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ФинансовыеРегистрыВРегистрБухгалтерии 
		И ЗначениеЗаполнено(Объект.РегистрБухгалтерииПриемник) Тогда
		
		ОбновитьТаблицуРесурсовФинансовыхРегистров();
		Элементы.ГруппаСоответствиеРесурсов.Видимость=Истина;
		Элементы.НастройкаЗаполненияИзмеренийПоУмолчанию.Видимость=Ложь;
		
	ИначеЕсли РегистрыБухгалтерииВПоказателиБюджетов() Тогда
		
		Элементы.ГруппаСоответствиеРесурсов.Видимость=Истина;
		Элементы.НастройкаЗаполненияИзмеренийПоУмолчанию.Видимость=Ложь;
		
	Иначе
		
		Элементы.ГруппаСоответствиеРесурсов.Видимость=Ложь;
		Элементы.НастройкаЗаполненияИзмеренийПоУмолчанию.Видимость=Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ПриИзмененииРегистраПриемник()

&НаСервере
Функция ЗаполненыРеквизитыТрансляцииПроводок()
	
	Возврат Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии
		И ЗначениеЗаполнено(Объект.РегистрБухгалтерииИсточник)
		И ЗначениеЗаполнено(Объект.РегистрБухгалтерииПриемник)
		
КонецФункции // УстановитьВидимостьДополнительныхНастроек()

&НаСервере
Функция ЕстьСоответствиеРесурсов()

	Возврат (Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии
			ИЛИ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ФинансовыеРегистрыВРегистрБухгалтерии)
			ИЛИ (РегистрыБухгалтерииВПоказателиБюджетов());
	
КонецФункции // ЕстьСоответствиеРесурсов() 	

&НаСервере
Процедура ПолучитьНастройкиЗаполненияИзмеренийПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Записать();
		
	КонецЕсли;
	
	Объект.НастройкаЗаполненияИзмеренийПоУмолчанию=Справочники.ИсточникиДанныхДляРасчетов.ПолучитьИсточникДляЗаполненияИзмерений(Объект.Ссылка,Объект.РегистрБухгалтерииИсточник,Объект.РегистрБухгалтерииПриемник);
		
КонецПроцедуры // ПолучитьНастройкиЗаполненияИзмеренийПоУмолчанию()  
 
&НаСервере
Процедура ПриИзмененииПланаСчетов(Приемник=Ложь)
	
	ОбъектКопирования=Неопределено;
	
	Если Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели Тогда
		
		Возврат;
		
	ИначеЕсли Приемник И Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели Тогда
		
		УстановитьПараметрыВыбора();
		Возврат;
		
	КонецЕсли;
				
	Если Приемник Тогда
		
		МассивРегистров=УправлениеОтчетамиУХ.ПолучитьМассивРегистровБухгалтерии(Объект.ПланСчетовПриемник);
		
		Если МассивРегистров.Количество()>0 Тогда 
			
			Объект.РегистрБухгалтерииПриемник=МассивРегистров[0];
			ПриИзмененииРегистра();
			
		Иначе
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Отсутствует описание регистра бухгалтерии для выбранного плана счетов:%1'"), 
			Объект.ПланСчетовПриемник.Наименование),,,СтатусСообщения.Внимание);
			Возврат;
			
		КонецЕсли; 
		
	Иначе
		
		МассивРегистров=УправлениеОтчетамиУХ.ПолучитьМассивРегистровБухгалтерии(Объект.ПланСчетовИсточник);
		
		Если МассивРегистров.Количество()>0 Тогда 
			
			Объект.РегистрБухгалтерииИсточник=МассивРегистров[0];
			ПриИзмененииРегистра();
			
		Иначе
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Отсутствует описание регистра бухгалтерии для выбранного плана счетов:%1'"), 
			Объект.ПланСчетовИсточник.Наименование),,,СтатусСообщения.Внимание);
			Возврат;
			
		КонецЕсли; 
		
		Если Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели Тогда
			
			
			
		Иначе
			
			ОбщегоНазначенияСерверУХ.ОбновитьСписокРесурсовРегистра(Объект.РегистрБухгалтерииИсточник,Объект.РесурсРегистраИсточник,Элементы.РесурсРегистраИсточник);
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры // ПриИзмененииПланаСчетов()
 	
&НаКлиенте
Процедура СопоставлениеСчетов_Завершение(Результат, Параметры) Экспорт
	// Обработка выбора пользователя.
	РазрешатьОткрытие = Истина;
    Если Результат = КодВозвратаДиалога.Да Тогда
		Попытка
			Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'При записи шаблона трансляции %Ссылка% возникли ошибки: %ОписаниеОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Строка(Объект.Ссылка));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			РазрешатьОткрытие = Ложь;
		КонецПопытки;
    ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    Иначе       
		ТекстСообщения = НСтр("ru = 'Выбран неизвестный вариант: %ВыбранноеЗначение%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВыбранноеЗначение%", Строка(Результат));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
	// Открытие формы сопоставления счетов.
	Если (РазрешатьОткрытие) И (ЗначениеЗаполнено(Объект.Ссылка)) Тогда
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("ШаблонТрансляции", Объект.Ссылка);
		ОткрытьФорму("Обработка.УстановкаСоответствияСчетов.Форма");
	Иначе
		ТекстСообщения = НСтр("ru = 'Операция сопоставления отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеСчетов(Команда)
	
	Если Параметры.Ключ.Пустая() ИЛИ Модифицированность Тогда
		
		СтруктураПараметров = Новый Структура;
		ТекстВопроса = НСтр("ru = 'Шаблон трансляции еще не записан. Записать?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("СопоставлениеСчетов_Завершение", ЭтаФорма, СтруктураПараметров);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		Возврат;

	КонецЕсли;
	
	ФормаТрансляцияРегистров="Обработка.УстановкаСоответствияРегистров.Форма";
	НаправлениеТрансляцияРегистров="Перечисление.НаправленияТрансляцииДанных.ФинансовыеРегистрыВРегистрБухгалтерии";
	
	Если Объект.НаправлениеТрансляции=ПредопределенноеЗначение(НаправлениеТрансляцияРегистров) Тогда
		
		ОткрытьФорму(ФормаТрансляцияРегистров, Новый Структура("ШаблонТрансляции", Объект.Ссылка));
		
	Иначе
		
		ОткрытьФорму("Обработка.УстановкаСоответствияСчетов.Форма", Новый Структура("ШаблонТрансляции", Объект.Ссылка));
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПланСчетовИсточникПриИзменении(Элемент)
	
	ПриИзмененииПланаСчетов(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланСчетовПриемникПриИзменении(Элемент)
	
	ПриИзмененииПланаСчетов(Истина);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокРесурсовПриемник()
	
	Элементы.РесурсПриемник.СписокВыбора.Очистить();
	
	Если РегистрыБухгалтерииВПоказателиБюджетов() Тогда 
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	КолонкиОтчетов.Наименование КАК Наименование
		|ИЗ
		|	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
		|ГДЕ
		|	КолонкиОтчетов.Владелец = &Владелец
		|	И НЕ КолонкиОтчетов.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Владелец",Объект.ВидОтчетаОСВПриемник);
		Результат=Запрос.Выполнить().Выбрать();
		
		Пока Результат.Следующий() Цикл
			
			Элементы.РесурсПриемник.СписокВыбора.Добавить(Результат.Наименование);
			
		КонецЦикла;
			
	ИначеЕсли ЗначениеЗаполнено(Объект.РегистрБухгалтерииПриемник) Тогда
		
		Для Каждого СтрРесурс ИЗ Объект.РегистрБухгалтерииПриемник.Ресурсы Цикл
			
			Элементы.РесурсПриемник.СписокВыбора.Добавить(СтрРесурс.Имя,СтрРесурс.Синоним);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьСписокРесурсовПриемник() 


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокРесурсовПриемник();
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		
		ОбъектКопирования=Параметры.ЗначениеКопирования;
		
	КонецЕсли;  
	
	Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели);
	Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели);
	Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии);
	
	Если ИдентификацияПродуктаУХКлиентСервер.ВерсияУправлениеХолдингом()="3.2" Тогда 
		
		Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДДС);
		Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДР);
		Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиРесурсы);
		
	КонецЕсли;
			
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоЕХ() Тогда
		
		Элементы.НаправлениеТрансляции.СписокВыбора.Добавить(Перечисления.НаправленияТрансляцииДанных.ФинансовыеРегистрыВРегистрБухгалтерии);

	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии;
		
	КонецЕсли; 
	
	Элементы.ДекорацияРегистры.Заголовок=Нстр("ru = 'Объекты учета'");
		
	УстановитьВидимость();
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ОбъектКопирования) Тогда
		
		УправлениеОтчетамиУХ.ПеренестиНастройкиСоответствияСчетов(ОбъектКопирования,Объект.Ссылка);
		ОбъектКопирования=Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ВидОтчетаОСВИсточник.Видимость=(Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели);
	Элементы.ВидОтчетаОСВПриемник.Видимость=Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели 
											ИЛИ РегистрыБухгалтерииВПоказателиБюджетов();
	
	Элементы.ПланСчетовПриемник.Видимость=(НЕ РегистрыБухгалтерииВПоказателиБюджетов()); 											
											
	Элементы.НастройкаЗаполненияИзмеренийПоУмолчанию.Видимость	= ЗаполненыРеквизитыТрансляцииПроводок(); 
	Элементы.ГруппаСоответствиеРесурсов.Видимость=ЕстьСоответствиеРесурсов();
	Элементы.НаправлениеТрансляции.Видимость		= ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом();
	Элементы.РесурсРегистраИсточник.Видимость		= Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели;

	Элементы.ПланСчетовИсточник.Видимость=(НЕ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ФинансовыеРегистрыВРегистрБухгалтерии);
	Элементы.ДекорацияРегистры.Видимость=НЕ Элементы.ПланСчетовИсточник.Видимость;
	
	УстановитьПараметрыВыбора();
	
КонецПроцедуры // УстановитьВидимость() 

&НаСервере
Процедура УстановитьПараметрыВыбора()
	
	НовыйМассив = Новый Массив();
	
	Если Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели
		ИЛИ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели Тогда
		
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.ПланСчетов", Объект.ПланСчетовПриемник));
		Элементы.ВидОтчетаОСВПриемник.Заголовок=Нстр("ru = 'Вид отчета (ОСВ)'");
			
	ИначеЕсли Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДДС Тогда
		
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Предназначение", Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств));
		Элементы.ВидОтчетаОСВПриемник.Заголовок=Нстр("ru = 'Вид отчета (БДДС)'");
		
	ИначеЕсли Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДР Тогда
		
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Предназначение", Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов));
		Элементы.ВидОтчетаОСВПриемник.Заголовок=Нстр("ru = 'Вид отчета (БДР)'");
		
	ИначеЕсли Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиРесурсы Тогда
		
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Предназначение", Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов));
		Элементы.ВидОтчетаОСВПриемник.Заголовок=Нстр("ru = 'Вид отчета (ресурсы)'");
		
	КонецЕсли;
	
	Элементы.ВидОтчетаОСВПриемник.ПараметрыВыбора=Новый ФиксированныйМассив(НовыйМассив);
	
КонецПроцедуры // УстановитьСвязиПараметровВыбора() 

&НаСервере
Функция РегистрыБухгалтерииВПоказателиБюджетов()
	
	Возврат Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДДС
			ИЛИ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиБДР
			ИЛИ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказателиРесурсы;			
	
КонецФункции // ТрансляцияВПоказателиОтчетов() 

&НаСервере
Функция ТрансляцияВПоказателиОтчетов()
	
	Возврат Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели
		ИЛИ Объект.НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели
		ИЛИ РегистрыБухгалтерииВПоказателиБюджетов();
	
КонецФункции // ТрансляцияВПоказателиОтчетов() 
	
	


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.НаправлениеТрансляции=ПредопределенноеЗначение("Перечисление.НаправленияТрансляцииДанных.ПоказателиВПоказатели") Тогда	
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидОтчетаОСВПриемник) Тогда
			
			ПоказатьПредупреждение(,Нстр("ru = 'Приемник: не указана оборотно - сальдовая ведомость.'"));
			Отказ=Истина;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидОтчетаОСВИсточник) Тогда
			
			ПоказатьПредупреждение(,Нстр("ru = 'Источник: не указана оборотно - сальдовая ведомость.'"));
			Отказ=Истина;
			
		КонецЕсли;
	
	ИначеЕсли Объект.НаправлениеТрансляции=ПредопределенноеЗначение("Перечисление.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели") Тогда 
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидОтчетаОСВПриемник) Тогда
			
			ПоказатьПредупреждение(,Нстр("ru = 'Приемник: не указана оборотно - сальдовая ведомость.'"));
			Отказ=Истина;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеТрансляцииПриИзменении(Элемент)
	
	Объект.ВидОтчетаОСВПриемник="";
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ВидОтчетаОСВПриемникПриИзмененииНаСервере()

	Если РегистрыБухгалтерииВПоказателиБюджетов() Тогда
		
		ОбновитьТаблицуРесурсовБюджетов();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВидОтчетаОСВПриемникПриИзменении(Элемент)
	ВидОтчетаОСВПриемникПриИзмененииНаСервере();
КонецПроцедуры
