
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка ИЛИ ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьПравилоОбработки(НаправлениеТрансляции,Отказ);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СчетаБД.Ссылка
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Владелец = &Владелец
	|	И СчетаБД.ДляИсключенийПриТрансляции";
	
	Запрос.УстановитьПараметр("Владелец",ПланСчетовПриемник);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если НЕ Результат.Следующий() Тогда
		
		СчетОбъект=Справочники.СчетаБД.СоздатьЭлемент();
		СчетОбъект.Код="Exception";
		СчетОбъект.Владелец=ПланСчетовПриемник;
		СчетОбъект.Забалансовый=Истина;
		СчетОбъект.Наименование="Exception";
		СчетОбъект.НеВключатьВОСВ=Истина;
		СчетОбъект.ДляИсключенийПриТрансляции=Истина;
		
		СчетОбъект.Записать();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПроверитьПравилоОбработки(НаправлениеТрансляции,Отказ)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПравилаОбработки.Ссылка
	|ИЗ
	|	Справочник.ПравилаОбработки КАК ПравилаОбработки
	|ГДЕ
	|	ПравилаОбработки.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец",Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();;
	
	Если Результат.Следующий() Тогда
		
		ПравилоОбъект=Результат.Ссылка.ПолучитьОбъект();
				
	Иначе
		
		ПравилоОбъект=Справочники.ПравилаОбработки.СоздатьЭлемент();
		ПравилоОбъект.Владелец=Ссылка;
		ПравилоОбъект.Наименование=Наименование+": "+НаправлениеТрансляции;
							
	КонецЕсли;
	
	ПравилоОбъект.НаправлениеТрансляции=НаправлениеТрансляции;
	ПравилоОбъект.ПланСчетовПоУмолчанию = ПланСчетовИсточник;
	ПравилоОбъект.РегистрБухгалтерииПоУмолчанию=РегистрБухгалтерииИсточник;
	ПравилоОбъект.ТипБД=ПланСчетовИсточник.Владелец;
	ПравилоОбъект.РесурсРегистраПоУмолчанию=РесурсРегистраИсточник;
	
	Если НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели Тогда
		
		ПравилоОбъект.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнутренниеДанныеПоказательОтчета;
		ПравилоОбъект.ВидОтчетаОСВ=ВидОтчетаОСВИсточник;
		
	ИначеЕсли ПравилоОбъект.ТипБД=Справочники.ТипыБазДанных.ТекущаяИБ Тогда
		
		ПравилоОбъект.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии;
		
	ИначеЕсли ПравилоОбъект.ТипБД.ВерсияПлатформы=Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие77 Тогда
		
		ПравилоОбъект.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнешниеДанныеОстаткиИОборотыИзПланаСчетов;
		
	Иначе
		
		ПравилоОбъект.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии;
		
	КонецЕсли;
	
	Попытка
		ПравилоОбъект.Записать();
	Исключение
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не удалось обновить правило трансляции %1: %2'"), 
			ПравилоОбъект.Наименование, ОписаниеОшибки()),Отказ,,СтатусСообщения.Внимание);
	КонецПопытки;
				
КонецПроцедуры // ПроверитьПравилоОбработки()

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка ИЛИ ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НаправлениеТрансляции) Тогда
		
		НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли