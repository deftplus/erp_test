
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ЗначениеКопирования Экспорт;

#Область ОбработчикиСобытийОбъекта

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	СтрокиПроверки = ОрганизационныеЕдиницы.НайтиСтроки(Новый Структура("ОсновнаяВалюта", Справочники.Валюты.ПустаяСсылка()));
	
	Для каждого СтрокаТаб Из СтрокиПроверки Цикл
		
		ТекстСообщения = "";
		
		Если СтрокаТаб.ОрганизационнаяЕдиницаРодитель.Пустая() Тогда
			СтрокаШаблона = НСтр("ru = 'Для организации <%1> не заполнена валюта представления отчетности'");
			
			Если ЗначениеЗаполнено(СтрокаШаблона) тогда
				ТекстСообщения = СтрШаблон(СтрокаШаблона, СтрокаТаб.ОрганизационнаяЕдиница);
			КонецЕсли;	
		Иначе
			СтрокаШаблона = НСтр("ru = 'Для организации <%1> в группе <%2> не заполнена валюта представления отчетности'");
			
			Если ЗначениеЗаполнено(СтрокаШаблона) тогда
				ТекстСообщения = СтрШаблон(СтрокаШаблона, СтрокаТаб.ОрганизационнаяЕдиница, СтрокаТаб.ОрганизационнаяЕдиницаРодитель);
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстСообщения) тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЭтоГруппа И ИспользоватьВГО  И Не ЗначениеЗаполнено(ШаблонСверкиВГО) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнен шаблон сверки ВГО'");
		
		Если ЗначениеЗаполнено(ТекстСообщения) тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаШаблона = НСтр("ru = 'Версия регламента подготовки отчетности: ""%1"" не может быть записана:'");
	
	Если ЗначениеЗаполнено(СтрокаШаблона) тогда
		ЗаголовокОшибки = СтрШаблон(СтрокаШаблона, ЭтотОбъект);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		ЗначениеКопирования = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства, "ЗначениеКопирования", Неопределено);
	Иначе
		// Значение копирования уже установлено. Не требуется извлечение из дополнтельных свойств.
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		Если СкопироватьСвязнуюИнформацию(ЗначениеКопирования, Отказ) Тогда
			ЗначениеКопирования = Неопределено;
		КонецЕсли;
	КонецЕсли;
		
	РасширениеБизнесЛогикиУХ.ОбновитьОрганизацииЭтаповПоРегламенту(Ссылка);

	РегистрыСведений.ВалютыОтчетности.СформироватьЗаписиВалютыОтчетности(Ссылка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	МеткаВремени = "";
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования);	
КонецПроцедуры

#КонецОбласти

Функция СкопироватьСвязнуюИнформацию(Источник, Отказ = Ложь, ЗаголовокОшибки = "") Экспорт
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат Ложь;
	КонецЕсли;
		
	// настройка обработки отчетов
	НаборЗаписей = РегистрыСведений.НастройкаОбработкиОтчетов.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ПериодОтчета.Установить(Справочники.Периоды.ПустаяСсылка());
	НаборЗаписей.Отбор.Сценарий.Установить(Справочники.Сценарии.ПустаяСсылка());
	
	НаборЗаписей.Отбор.ВерсияОрганизационнойСтруктуры.Установить(Источник);
	НаборЗаписей.Прочитать();
	
	НаборЗаписей.Отбор.ВерсияОрганизационнойСтруктуры.Установить(Ссылка);
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.ВерсияОрганизационнойСтруктуры = Ссылка;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// регистр матрицы полномочий
	НаборЗаписей = РегистрыСведений.РегистрМатрицыПолномочий.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ВерсияРегламентаПодготовкиОтчетности.Установить(Источник);
	НаборЗаписей.Прочитать();
	
	НаборЗаписей.Отбор.ВерсияРегламентаПодготовкиОтчетности.Установить(Ссылка);
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.ВерсияРегламентаПодготовкиОтчетности = Ссылка;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	// Копирование шаблона процесса.
	СвязанныйШаблонПроцесса = Справочники.ВерсииРегламентовПодготовкиОтчетности.ПустаяСсылка();
	МодульУправленияПроцессамиУХ.ОпределитьСвязанныйШаблон(Источник, СвязанныйШаблонПроцесса);
	ЕстьШаблон = Ложь;
	МодульУправленияПроцессамиУХ.ШаблонЗаполнен(Ссылка, ЕстьШаблон);
	Если (НЕ ЕстьШаблон) И (ЗначениеЗаполнено(СвязанныйШаблонПроцесса)) Тогда
		НовыйШаблонОбъект = СвязанныйШаблонПроцесса.Скопировать();
		НовыйШаблонОбъект.СвязанныйРегламент = Ссылка;
		НовыйШаблонОбъект.Записать();
	Иначе
		// Шаблон не установлен. Не копируем.
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

#КонецЕсли

