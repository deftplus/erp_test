
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ.
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Объект", Объект);
	
	СКД = Объект.СхемаКомпоновкиДанныхХранилище.Получить();
	
	Если ТипЗнч(СКД) = Тип("СхемаКомпоновкиДанных") Тогда
		ОбщийКомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор)));
		ОбщийКомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
		СформироватьКолонкиПоСоставуПанели();
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = НСтр("ru = 'Не задана структура панели отчетов'");
		СообщениеПользователю.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ.
//

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(ИзменитьНастройкиОтбора());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

// Возвращает новый уникальный идентификатор, в котором символы - заменены на на _
&НаСервере
Функция СгенерироватьСтроковыйИдентификатор()
	НовыйИдентификатор = Новый УникальныйИдентификатор;
	РезультатФункции = Строка(НовыйИдентификатор);
	РезультатФункции = СтрЗаменить(РезультатФункции, "-", "_");
	Возврат РезультатФункции;
КонецФункции

// Процедура добавляет реквизиты таблицы
&НаСервере
Процедура СформироватьКолонкиПоСоставуПанели()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПанелиОтчетовСостав.УниверсальныйОтчет КАК УниверсальныйОтчет,
	|	ПанелиОтчетовСостав.УниверсальныйОтчет.Код КАК Код,
	|	ПанелиОтчетовСостав.Отбор КАК Отбор,
	|	ПанелиОтчетовСостав.Параметры КАК Параметры,
	|	ПанелиОтчетовСостав.НомерСтроки,
	|	ПанелиОтчетовСостав.Описание КАК ПредставлениеОтчета
	|ИЗ
	|	Справочник.ПанелиОтчетов.Состав КАК ПанелиОтчетовСостав
	|ГДЕ
	|	ПанелиОтчетовСостав.Ссылка = &Ссылка
	|	И ПанелиОтчетовСостав.УниверсальныйОтчет ССЫЛКА Справочник.ПроизвольныеОтчеты";

	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивРеквизитов    = Новый Массив;
	ОписаниеТиповБулево = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево();
	МассивЭлементов     = Новый Массив;
	МассивПолей         = Новый Массив;
	МассивКодов         = Новый Массив;
	
	СоответствиеОтборовПоРеквизитам = Новый Соответствие;
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("Отбор");
	ТаблицаНастроек.Колонки.Добавить("ЯвляетсяПараметром", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	ТаблицаНастроек.Колонки.Добавить("Отчет");
	ТаблицаНастроек.Колонки.Добавить("Использование");
	
	Пока Выборка.Следующий() Цикл
		
		КодОтчета = "Р_" + СгенерироватьСтроковыйИдентификатор();		
		НоваяСтрокаКолонок             = КолонкиОтчета.Добавить();
		НоваяСтрокаКолонок.ИмяКолонки  = КодОтчета;
		НоваяСтрокаКолонок.НомерСтроки = Выборка.НомерСтроки;
		НайденныйЭлемент = Элементы.Найти(КодОтчета);
		Если НайденныйЭлемент <> Неопределено Тогда
			Элемент = НайденныйЭлемент;
		Иначе	
			МассивРеквизитов.Добавить(Новый РеквизитФормы(КодОтчета, ОписаниеТиповБулево, "ТаблицаНастроекОтбора", Выборка.ПредставлениеОтчета, Ложь));
			МассивРеквизитов.Добавить(Новый РеквизитФормы(КодОтчета + "_Использование", ОписаниеТиповБулево, "ТаблицаНастроекОтбора", Выборка.ПредставлениеОтчета, Ложь));
			Элемент = Элементы.Добавить(КодОтчета, Тип("ПолеФормы"), Элементы.ТаблицаНастроекОтбораГруппаАналитическиеОтчеты);
		КонецЕсли;
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		Элемент.УстановитьДействие("ПриИзменении", "ОбработатьИзменение");
		
		МассивКодов.Добавить(КодОтчета);
		
		Отборы = Выборка.ОТбор.Получить();
		
		Если Отборы <> Неопределено Тогда
			Для Каждого ЭлементОтбора Из Отборы Цикл
				
				НоваяСтрока = ТаблицаНастроек.Добавить();
				НоваяСтрока.Отчет         = КодОтчета;
				НоваяСтрока.Отбор         = ЭлементОтбора.Ключ;
				НоваяСтрока.Использование = ЭлементОтбора.Значение;
				НоваяСтрока.ЯвляетсяПараметром = Ложь;
				
			КонецЦикла;
		КонецЕсли;
		
		Вн_Параметры = Выборка.Параметры.Получить();
		Если Вн_Параметры <> Неопределено Тогда
			
			Для Каждого ЭлементПараметр Из Вн_Параметры Цикл
				
				НоваяСтрока = ТаблицаНастроек.Добавить();
				НоваяСтрока.Отчет         = КодОтчета;
				НоваяСтрока.Отбор         = ЭлементПараметр.Ключ;
				НоваяСтрока.Использование = ЭлементПараметр.Значение;
				НоваяСтрока.ЯвляетсяПараметром = Истина;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ТаблицаНастроек.Индексы.Добавить("Отбор");
		
		МассивЭлементов.Добавить(Элемент);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		
		Элемент.ПутьКДанным = "ТаблицаНастроекОтбора." + Элемент.Имя;
		
		ЭлементОформления   = УсловноеОформление.Элементы.Добавить();
		
		НовыйЭлементОтбора  = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаНастроекОтбора." + Элемент.Имя + "_Использование");
		НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		НовыйЭлементОтбора.ПравоеЗначение = Ложь;
		НовыйЭлементОтбора.Использование  = Истина;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
		НовоеПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		НовоеПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		НовоеПолеОформления.Использование = истина;
		
		ЭлементОформления.Использование = Истина;
		
	КонецЦикла;
	
	МассивОтборов    = Новый Массив;
	
	Для Каждого Элемент Из ОбщийКомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		МассивОтборов.Добавить(Элемент.ЛевоеЗначение);
		
	КонецЦикла;
	
	
	СтрокиПараметры = ТаблицаНастроекОтбора.ПолучитьЭлементы().Добавить();
	СтрокиПараметры.Отбор = "Параметры";
	СтрокиПараметры.СлужебнаяСтрока = Истина;
	
	ЭлементыСтрокиПараметры = СтрокиПараметры.ПолучитьЭлементы();
	
	Для Каждого Элемент Из ОбщийКомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		
		НоваяСтрока = ЭлементыСтрокиПараметры.Добавить();
		НоваяСтрока.Отбор = Строка(Элемент.Параметр);
		НоваяСтрока.ИспользоватьВОбщемОтборе = Элемент.Использование;
		
		Для Каждого КодОтчета Из МассивКодов Цикл
			НоваяСтрока[КодОтчета + "_Использование"] = Ложь;
		КонецЦикла;
		
		НайденныеСтроки = ТаблицаНастроек.НайтиСтроки(Новый Структура("Отбор, ЯвляетсяПараметром", Строка(Элемент.Параметр), Истина));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока[НайденнаяСтрока.Отчет] = НайденнаяСтрока.Использование;
			НоваяСтрока[НайденнаяСтрока.Отчет + "_Использование"] = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СтрокиОтборы = ТаблицаНастроекОтбора.ПолучитьЭлементы().Добавить();
	СтрокиОтборы.Отбор = "Отборы";
	СтрокиОтборы.СлужебнаяСтрока = Истина;
	
	ЭлементыСтрокиОтборы = СтрокиОтборы.ПолучитьЭлементы();
	
	Для Каждого Элемент Из ОбщийКомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы Цикл
		
		Если Элемент.Папка Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ЭлементыСтрокиОтборы.Добавить();
		НоваяСтрока.Отбор = Элемент.Поле;
		НоваяСтрока.ИспользоватьВОбщемОтборе = МассивОтборов.Найти(Элемент.Поле) <> Неопределено;
		
		Для Каждого КодОтчета Из МассивКодов Цикл
			НоваяСтрока[КодОтчета + "_Использование"] = Ложь;
		КонецЦикла;
		
		НайденныеСтроки = ТаблицаНастроек.НайтиСтроки(Новый Структура("Отбор, ЯвляетсяПараметром", Элемент.Поле, Ложь));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока[НайденнаяСтрока.Отчет] = НайденнаяСтрока.Использование;
			НоваяСтрока[НайденнаяСтрока.Отчет + "_Использование"] = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменение(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНастроекОтбора.ТекущиеДанные;
	
	СостояниеОбщегоОтбора = Ложь;
	Для Каждого ЭлементСтроки Из КолонкиОтчета Цикл
		
		Если ТекущиеДанные[ЭлементСтроки.ИмяКолонки] Тогда
			СостояниеОбщегоОтбора = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекущиеДанные.ИспользоватьВОбщемОтборе = СостояниеОбщегоОтбора;
	
КонецПроцедуры

&НаСервере
Функция ИзменитьНастройкиОтбора()
	
	ТекущиеРеквизиты = ПолучитьРеквизиты("ТаблицаНастроекОтбора");
	КоличествоРеквизитов = ТекущиеРеквизиты.Количество();
	ТекРеквизит      = 3; // Первые реквизиты - ИспользоватьВОсновномОтборе, Отбор и ОсновнойПараметр.
	
	ТаблицаКолонок = РеквизитФормыВЗначение("КолонкиОтчета");
	ТаблицаНастроекОтбора_Таблица = РеквизитФормыВЗначение("ТаблицаНастроекОтбора");
	
	НайденныеСтроки = ТаблицаНастроекОтбора_Таблица.Строки.НайтиСтроки(Новый Структура("ИспользоватьВОбщемОтборе", Истина), Истина);
	
	ОбщийКомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	МассивПараметров = Новый Массив;
	Для Каждого ОбщийОтбор Из НайденныеСтроки Цикл
		Если ЗначениеЗаполнено(ОбщийОтбор.Родитель) Тогда
			Если ОбщийОтбор.Родитель.Отбор = "Параметры" Тогда
				МассивПараметров.Добавить(Новый ПараметрКомпоновкиДанных(ОбщийОтбор.Отбор));
			Иначе
				НовыйОтбор               = ОбщийКомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				НовыйОтбор.ЛевоеЗначение = ОбщийОтбор.Отбор;
				НовыйОтбор.Использование = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ПараметрДанных Из ОбщийКомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		
		ПараметрДанных.Использование = МассивПараметров.Найти(ПараметрДанных.Параметр) <> Неопределено;
		
	КонецЦикла;
	
	ТаблицаОтвета = Новый ТаблицаЗначений;
	ТаблицаОтвета.Колонки.Добавить("НомерСтроки");
	ТаблицаОтвета.Колонки.Добавить("СоответствиеОтборов");
	ТаблицаОтвета.Колонки.Добавить("СоответствиеПараметров");
	
	Пока ТекРеквизит < КоличествоРеквизитов Цикл
		
		ИмяКолонки = ТекущиеРеквизиты[ТекРеквизит].Имя;
		НайденныеСтроки = ТаблицаНастроекОтбора_Таблица.Строки.НайтиСтроки(Новый Структура(ИмяКолонки + "_Использование", Истина), Истина);
		
		СоответствиеОтборов    = Новый Соответствие;
		СоответствиеПараметров = Новый Соответствие;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока.Родитель.Отбор = "Параметры" Тогда
				СоответствиеПараметров.Вставить(НайденнаяСтрока.Отбор, НайденнаяСтрока[ИмяКолонки]);
			Иначе
				СоответствиеОтборов.Вставить(НайденнаяСтрока.Отбор, НайденнаяСтрока[ИмяКолонки]);
			КонецЕсли;
		КонецЦикла;
		
		НомерСтроки = ТаблицаКолонок.Найти(ИмяКолонки, "ИмяКолонки");
		
		НоваяСтрока = ТаблицаОтвета.Добавить();
		НоваяСтрока.НомерСтроки = НомерСтроки.НомерСтроки;
		НоваяСтрока.СоответствиеОтборов = СоответствиеОтборов;
		НоваяСтрока.СоответствиеПараметров = СоответствиеПараметров;
		
		ТекРеквизит = ТекРеквизит + 2;
		
	КонецЦикла;
	
	Возврат Новый Структура("АдресНастроек, АдресСоответствийОтборов", ПоместитьВоВременноеХранилище(ОбщийКомпоновщикНастроек.Настройки), ПоместитьВоВременноеХранилище(ТаблицаОтвета));
	
	
КонецФункции



