&НаСервере
Функция ПолучитьПараметрыЗадач(СписокЗадач)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ОтложеннаяОбработкаЭтаповПроцессов.Период,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ВидДействия,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ДокументПроцесса,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ЭтапПроцесса,
		|	ОтложеннаяОбработкаЭтаповПроцессов.Ответственный,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ТипКлючевогоОбъекта,
		|	ОтложеннаяОбработкаЭтаповПроцессов.Выполнено,
		|	ОтложеннаяОбработкаЭтаповПроцессов.Задача,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ВремяСобытия,
		|	ОтложеннаяОбработкаЭтаповПроцессов.КлючевойОбъект,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ВремяНачалаЗадания,
		|	ОтложеннаяОбработкаЭтаповПроцессов.ВремяЗавершенияЗадания
		|ИЗ
		|	РегистрСведений.ОтложеннаяОбработкаЭтаповПроцессов КАК ОтложеннаяОбработкаЭтаповПроцессов
		|ГДЕ
		|	ОтложеннаяОбработкаЭтаповПроцессов.Задача В(&Задача)";
	Запрос.УстановитьПараметр("Задача", СписокЗадач);
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	Возврат Выгрузка;
КонецФункции

// Серверная обертка команды ВыполнитьЗадачи. Возвращает успешность выполнения операции.
&НаСервере
Функция ВыполнитьЗадачи_Сервер(КомментарийВход = "")
	РезультатФункции = Истина;
	ЕстьОшибки = Ложь;
	НачатьТранзакцию();
	Попытка
		Для Каждого ТекСписокЗадач Из СписокЗадач Цикл
			РезультатВыполнения = МодульРегламентныхЗаданийУХ.ВыполнитьИОбработатьЗадачу(ТекСписокЗадач.Значение, КомментарийВход);
			Если НЕ РезультатВыполнения Тогда
				ЕстьОшибки = Истина;
			Иначе
				// Задача выполнена успешно.
			КонецЕсли;
		КонецЦикла;
	Исключение
		ТекстСообщения = НСтр("ru = 'Во время выполнения задач возникли ошибки: %ОписаниеОшибки%. Операция отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		ЕстьОшибки = Истина;
	КонецПопытки;
	Если НЕ ЕстьОшибки Тогда
		ЗафиксироватьТранзакцию();
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
	РезультатФункции = НЕ ЕстьОшибки;
	Возврат РезультатФункции;
КонецФункции		// ВыполнитьЗадачи_Сервер()

// Управляет доступностью элементов формы.
&НаСервере
Процедура УправлениеДоступностью()
	ТекПользователь = ОбщегоНазначенияУХ.ПолучитьЗначениеПеременной("глТекущийПользователь");
	РазрешеноЗавершатьЗадачи = Справочники.Задачи.РазрешеноЗавершатьЗадачи(СписокЗадач, ТекПользователь);
	Элементы.ВыполнитьЗадачи.Доступность = РазрешеноЗавершатьЗадачи;
	Элементы.Комментарий.Доступность = РазрешеноЗавершатьЗадачи;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗадачи(Команда)
	Если ВыполнитьЗадачи_Сервер(Комментарий) Тогда
		Оповестить("ОбновитьМоиЗадачиИОповещения");
		Оповестить("СостояниеЗаявкиПриИзменении");
		ЭтаФорма.Закрыть();
	Иначе
		УправлениеДоступностью();			// Не удалось завершить задачи. Убедимся, что эта операция всё ещё доступна.
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("СписокЗадач") Тогда
		СписокЗадач = Параметры.СписокЗадач;
	Иначе
		СписокЗадач = Новый СписокЗначений;
	КонецЕсли;
	УправлениеДоступностью();
КонецПроцедуры
