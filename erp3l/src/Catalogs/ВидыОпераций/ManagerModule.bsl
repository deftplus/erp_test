#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьВидыОперацииПовтора() Экспорт

	ОперацииПовтора = Новый Массив;
	
	ОперацииПовтора.Добавить(Справочники.ВидыОпераций.ПовторКорректировокПредыдущихПериодов);
	ОперацииПовтора.Добавить(Справочники.ВидыОпераций.ПовторКорректировокДействиеПовтора);
	ОперацииПовтора.Добавить(Справочники.ВидыОпераций.СторноКорректировокОтчетности);	
	ОперацииПовтора.Добавить(Справочники.ВидыОпераций.ПовторРеклассаСчетовВНА);
	ОперацииПовтора.Добавить(Справочники.ВидыОпераций.ПовторПроводокПоКонсолидационнымПоправкам);
	
	Возврат ОперацииПовтора;
	
КонецФункции

Функция ЯвляетсяОперациейПовтора(ВидОперации) Экспорт

	Возврат ПолучитьВидыОперацииПовтора().Найти(ВидОперации) <> Неопределено;

КонецФункции

#Область ВНА

Функция ПолучитьВидыСобытийВНАПоДокументам() Экспорт

	СобытияДокументов = Новый Структура;
		
	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.ПринятиеКУчетуВНА);
	СобытияДокументов.Вставить("ПоступлениеВНАМСФО", СобытияВНА);
	
	СобытияДокументов.Вставить("ВводВНАВЭксплуатациюМСФО", ПолучитьСобытия_ВводВНАВЭксплуатациюМСФО());
	СобытияДокументов.Вставить("МодернизацияВНАМСФО", ПолучитьСобытия_МодернизацияВНАМСФО());
	
	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.ИзменениеПараметровАмортизации);
	СобытияДокументов.Вставить("ИзменениеПараметровВНАМСФО", СобытияВНА);

	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.СторноАмортизацииНСБУ);
	СобытияДокументов.Вставить("ПризнаниеРасходовПоАмортизацииНСБУ", СобытияВНА);	
	
	СобытияДокументов.Вставить("ВыбытиеВНАМСФО", ПолучитьСобытия_ВыбытиеВНАМСФО());
	
	СобытияДокументов.Вставить("ПереоценкаВНАМСФО", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыОпераций.ПереоценкаВНА));
	
	Возврат СобытияДокументов;

КонецФункции

Функция ПолучитьСобытия_ВводВНАВЭксплуатациюМСФО() Экспорт
	 	
	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.ВводВЭксплуатацию);
	
	Возврат СобытияВНА;
	
КонецФункции

Функция ПолучитьСобытия_МодернизацияВНАМСФО() Экспорт

	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.МодернизацияВНА);
	
	Возврат СобытияВНА;

КонецФункции

Функция ПолучитьСобытия_ВыбытиеВНАМСФО() Экспорт

	СобытияВНА = Новый Массив;
	СобытияВНА.Добавить(Справочники.ВидыОпераций.ПередачаВНА);
	СобытияВНА.Добавить(Справочники.ВидыОпераций.ВыбытиеВНА);
	СобытияВНА.Добавить(Справочники.ВидыОпераций.СписаниеВНА);

	Возврат СобытияВНА;

КонецФункции

#КонецОбласти

#Область Обновление

Процедура ОбновитьВНА() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводСобытийВНАМСФОВНА.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводСобытийВНАМСФО.ВНА КАК ВводСобытийВНАМСФОВНА
	|ГДЕ
	|	ВводСобытийВНАМСФОВНА.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводСобытийВНАМСФОВНА.Ссылка
	|ИЗ
	|	Документ.ВводСведенийВНАМСФО.ВНА КАК ВводСобытийВНАМСФОВНА
	|ГДЕ
	|	ВводСобытийВНАМСФОВНА.ВидОперацииВыбытия = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводСобытийВНАМСФОВНА.Ссылка
	|ИЗ
	|	Документ.ВыбытиеВНАМСФО.ВНА КАК ВводСобытийВНАМСФОВНА
	|ГДЕ
	|	ВводСобытийВНАМСФОВНА.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)");
	
	Правила = Новый Структура;
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого СтрокаТаб Из ДокументОбъект.ВНА Цикл
			
			Если (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВводСобытийВНАМСФО"))
				И СтрокаТаб.ВидОперации.Пустая() Тогда
				
				СтрокаТаб.ВидОперации = ПолучитьВидОперации(СтрокаТаб.Удалить_ВидСобытия, Справочники.ВидыОпераций.ВводВЭксплуатацию);
				
			ИначеЕсли (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВводСведенийВНАМСФО"))
				И СтрокаТаб.ВидОперацииВыбытия.Пустая() Тогда
				
				СтрокаТаб.ВидОперацииВыбытия = ПолучитьВидОперации(СтрокаТаб.Удалить_СобытиеВыбытия, Справочники.ВидыОпераций.ВыбытиеВНА);
				
			ИначеЕсли (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВыбытиеВНАМСФО"))
				И СтрокаТаб.ВидОперации.Пустая() Тогда
				
				СтрокаТаб.ВидОперации = ПолучитьВидОперации(СтрокаТаб.Удалить_ВидСобытияВНА, Справочники.ВидыОпераций.ВыбытиеВНА);
				
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		
	КонецЦикла;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.Регистратор КАК Ссылка,
	|	ИСТИНА КАК РасчетныеДанныеВНА
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеВНА КАК т
	|ГДЕ
	|	т.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.Регистратор,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.СтоимостьВНАМСФО КАК т
	|ГДЕ
	|	т.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)");
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.РасчетныеДанныеВНА Тогда
			нз = РегистрыНакопления.РасчетныеДанныеВНА.СоздатьНаборЗаписей();
		Иначе	
			нз = РегистрыНакопления.СтоимостьВНАМСФО.СоздатьНаборЗаписей();	
		КонецЕсли;
		
		нз.Отбор.Регистратор.Установить(Выборка.Ссылка);
		нз.Прочитать();
		
		Для каждого Запись Из нз Цикл
			Если Запись.ВидОперации.Пустая() Тогда
				Запись.ВидОперации = ПолучитьВидОперации(Запись.Удалить_ВидОперации, Справочники.ВидыОпераций.ПринятиеКУчетуВНА);
			КонецЕсли;		
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(нз);
			
	КонецЦикла; 
		
КонецПроцедуры

Функция ПолучитьВидОперации(ВидСобытия, ВидОперацииПоУмолчанию = Неопределено)

	Если ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ВводВЭксплуатацию") 
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ПринятиеКУчетуСВводомВЭксплуатацию") Тогда
		
		Возврат Справочники.ВидыОпераций.ВводВЭксплуатацию;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ПринятиеКУчету") Тогда
		
		Возврат Справочники.ВидыОпераций.ПринятиеКУчетуВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Выбытие") Тогда 
		
		Возврат Справочники.ВидыОпераций.ВыбытиеВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Передача")	
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ПодготовкаКПередаче") Тогда 
		
		Возврат Справочники.ВидыОпераций.ПередачаВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Списание")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ЧастичнаяЛиквидация") Тогда
		
		Возврат Справочники.ВидыОпераций.СписаниеВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Дооборудование") 
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Достройка") 
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.КапитальныйРемонт")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Модернизация")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Реконструкция")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.СреднийРемонт")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ТекущийРемонт")
		Или ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ТекущийРемонт")
		Тогда
		
		Возврат Справочники.ВидыОпераций.МодернизацияВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.ИзменениеПараметровАмортизации") Тогда
		
		Возврат Справочники.ВидыОпераций.ИзменениеПараметровАмортизации;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.НачислениеАмортизации") Тогда
		
		Возврат Справочники.ВидыОпераций.НачислениеАмортизации;
	
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.НачальныеОстатки") Тогда
		
		Возврат Справочники.ВидыОпераций.НачальныеОстаткиВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Обесценение") Тогда
		
		Возврат Справочники.ВидыОпераций.ОбесценениеВНА;
		
	ИначеЕсли ВидСобытия = ПредопределенноеЗначение("Перечисление.УдалитьВидыСобытийВНА.Переоценка") Тогда
		
		Возврат Справочники.ВидыОпераций.ПереоценкаВНА;
		
	Иначе 
		
		Возврат ВидОперацииПоУмолчанию;
		
	КонецЕсли;

КонецФункции

#КонецОбласти

#КонецЕсли
