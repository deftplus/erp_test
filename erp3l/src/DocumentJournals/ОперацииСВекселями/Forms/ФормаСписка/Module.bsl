
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВыпускПростыхВекселей(Команда)
	СоздатьДокумент("ПоступлениеВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыпускПереводныхВекселей(Команда)
	СоздатьДокумент("ПоступлениеВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАкцептПереводныхВекселей(Команда)
	СоздатьДокумент("ПоступлениеВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПогашениеВекселя(Команда)
	СоздатьДокумент("ВыбытиеВекселей", ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПриобретениеВекселей(Команда)
	СоздатьДокумент("ПоступлениеВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПредъявлениеКАкцептуПереводныхВекселей(Команда)
	СоздатьДокумент("АкцептПротестПереводногоВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.ПредъявлениеВекселяКАкцепту"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьУведомлениеОПротесте(Команда)
	СоздатьДокумент("АкцептПротестПереводногоВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОПротестеПоВекселю"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьУведомлениеОбАкцепте(Команда)
	СоздатьДокумент("АкцептПротестПереводногоВекселя", ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОбАкцептеВекселя"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПредъявлениеВекселяКПогашению(Команда)
	СоздатьДокумент("ВыбытиеВекселей", ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПредъявлениеВекселяКПогашению"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПродажаВекселя(Команда)
	СоздатьДокумент("ВыбытиеВекселей", ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПродажаВекселя"));
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьДокумент(ИмяДокумента, ВидОперации = Неопределено)
	
	ЗначенияЗаполнения = Новый Структура;
	Если ВидОперации <> Неопределено Тогда
		ЗначенияЗаполнения.Вставить("ВидОперации", ВидОперации);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ." + ИмяДокумента + ".ФормаОбъекта", ПараметрыФормы,ЭтаФорма)
	
КонецПроцедуры

#КонецОбласти


