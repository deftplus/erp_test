
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("РежимИспользования",РежимИспользования);
	Параметры.Свойство("ПравилоОбработки", ПравилоОбработки);
	Параметры.Свойство("НастраиваемыйОтчет", НастраиваемыйОтчет);
	Параметры.Свойство("АдресТрассировкиРасчета", АдресТрассировкиРасчета);
	Параметры.Свойство("Показатель", Показатель);
	Параметры.Свойство("СформироватьОтчет", СформироватьОтчет);

КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если СформироватьОтчет Тогда
		Настройки.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РежимИспользования = 0 Тогда
		РежимИспользования = 1;
	КонецЕсли;
	УправлениеВидимостью();
	
	Если СформироватьОтчет Тогда
		Сформировать(Неопределено);
	КонецЕсли;		
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимИспользованияПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если РежимИспользования = 1 Тогда
		Если Не ЗначениеЗаполнено(ПравилоОбработки) Тогда
			ТекстСообщения = НСтр("ru = 'Не выбрано правило обработки'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Возврат;
		КонецЕсли;
		ПостроитьСтруктуруПоПравилуОбработки();
	Иначе
		Если Не ЗначениеЗаполнено(НастраиваемыйОтчет) Тогда
			ТекстСообщения = НСтр("ru = 'Не выбран документ расчета'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Возврат;
		КонецЕсли;
		ПоказатьТрассировкуРасчета();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьСтруктуруПоПравилуОбработки()
	
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	ТабличныйДокумент = РабочийОбъект.ПостроитьСтруктуруПоПравилуОбработки(ПравилоОбработки, Показатель);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьТрассировкуРасчета()
	
	Если НЕ ЗначениеЗаполнено(АдресТрассировкиРасчета) Тогда
	
		ЭкземплярОтчетаОбъект 	= НастраиваемыйОтчет.ПолучитьОбъект(); 	
		ОбъектРасчета 			= ЭкземплярОтчетаОбъект.ПодготовитьСтруктуруПеременныхДляРасчета();
		ОбработкаРасчета 		= Обработки.РасчетИЗаписьПоказателей.Создать();
		ОбработкаРасчета.РежимТрассировки = Истина;
		
		ПротоколируемыеСобытияУХ.Начать(ЭкземплярОтчетаОбъект);
		
		Если ОбработкаРасчета.ЗаполнитьДанныеПоПериодам(ОбъектРасчета, Ложь) Тогда			
			АдресТрассировкиРасчета = ОбработкаРасчета.АдресТрассировкиРасчета;
		КонецЕсли;

		ЭкземплярОтчетаОбъект.ТаблицаСобытийЗагрузки = ПротоколируемыеСобытияУХ.Завершить("ЗаполнитьДанныеПоПериодам",,,,Ложь,,,ОбъектРасчета);

		// Покажем протокол, если необходимо
		Если ЭкземплярОтчетаОбъект.ЕстьОшибкиЗагрузки() Тогда		
			Результат = Ложь;
			АдресТаблицыСобытий = ПоместитьВоВременноеХранилище(ЭкземплярОтчетаОбъект.ТаблицаСобытийЗагрузки); 
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресТрассировкиРасчета) Тогда
		РабочийОбъект = РеквизитФормыВЗначение("Объект");
		ТабличныйДокумент = РабочийОбъект.ПоказатьТрассировкуРасчета(АдресТрассировкиРасчета, НастраиваемыйОтчет, Показатель);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеВидимостью()
	
	Если РежимИспользования = 1 Тогда
		Элементы.ГруппаМодельРасчета.Видимость = Истина;
		Элементы.ГруппаТрассировкаРасчета.Видимость = Ложь;
	ИначеЕсли РежимИспользования = 2 Тогда
		Элементы.ГруппаМодельРасчета.Видимость = Ложь;
		Элементы.ГруппаТрассировкаРасчета.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		Расшифровка.Вставить("СформироватьОтчет", Истина);		
		ОткрытьФорму("Обработка.ВыводСтруктурыРасчетаПоказателей.Форма", Расшифровка, ЭтаФорма);

	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти










