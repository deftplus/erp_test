#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьСтавкиМосПрайм(НачалоПериодаЗагрузки = Неопределено, ОкончаниеПериодаЗагрузки = Неопределено, ИспользуемыеСтавки = Неопределено) Экспорт
	
	ТаблицаСтавок = РегистрыСведений.ЗначенияКотировокФИ.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Если ИспользуемыеСтавки = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыКотировокФинансовыхИнструментов.Ссылка КАК ВидСтавки,
		|	ВидыКотировокФинансовыхИнструментов.ИдентификаторДляЗагрузки КАК КодСтавки
		|ИЗ
		|	Справочник.ВидыКотировокФинансовыхИнструментов КАК ВидыКотировокФинансовыхИнструментов
		|ГДЕ
		|	ВидыКотировокФинансовыхИнструментов.Ссылка В(&ИндикаторыМоспрайм)";
		
		Запрос.УстановитьПараметр("ИндикаторыМоспрайм", ПереченьСтавокМосПрайм());
		ИспользуемыеСтавки = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Если НачалоПериодаЗагрузки = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗначенияКотировокФИСрезПоследних.Период) КАК Период
		|ИЗ
		|	РегистрСведений.ЗначенияКотировокФИ.СрезПоследних(
		|			,
		|			ВидКотировки В
		|				(&ИндикаторыМоспрайм)) КАК ЗначенияКотировокФИСрезПоследних";
		
		Запрос.УстановитьПараметр("ИндикаторыМоспрайм", ИспользуемыеСтавки.ВыгрузитьКолонку("ВидСтавки"));
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			НачалоПериодаЗагрузки = Выборка.Период;
		Иначе
			НачалоПериодаЗагрузки = ДобавитьМесяц(ТекущаяДатаСеанса(), -12);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОкончаниеПериодаЗагрузки = Неопределено Тогда
		ОкончаниеПериодаЗагрузки = ТекущаяДатаСеанса() + 86400;
	КонецЕсли;
	
	// Инициализация.
	Прокси = WSСсылки.WSИнформацияПоРынкуЦенныхБумагЦБ.СоздатьWSПрокси("http://web.cbr.ru/", "SecInfo", 	"SecInfoSoap12" );
	Сериализатор = Новый СериализаторXDTO(Прокси.ФабрикаXDTO);
	
	ТипWSПараметра 		= Прокси.ФабрикаXDTO.Пакеты.Получить("http://web.cbr.ru/").Получить("MosPrimeXML"); 
	WSПараметр			= Прокси.ФабрикаXDTO.Создать(ТипWSПараметра);
	WSПараметр.DateFrom	= НачалоПериодаЗагрузки;	
	WSПараметр.DateTo	= ОкончаниеПериодаЗагрузки;
	СписокMosPrime		= Прокси.MosPrimeXML(WSПараметр);
	
	Если СписокMosPrime.MosPrimeXMLResult.Свойства().Получить("MosPrime") = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для выбранного периода нет данных для загрузки'"));
		Возврат;
	КонецЕсли;	
	
	Если  СписокMosPrime.MosPrimeXMLResult.MosPrime.Свойства().Получить("MP") = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для выбранного периода нет данных для загрузки'"));
		Возврат;
	КонецЕсли;
	
	ПолученныеДанные = СписокMosPrime.MosPrimeXMLResult.MosPrime.MP;
	
	Если ТипЗнч(ПолученныеДанные) = Тип("ОбъектXDTO") Тогда
		ДобавитьСтавкиМосПраймЗаДень(ПолученныеДанные, ТаблицаСтавок, Сериализатор, ИспользуемыеСтавки);
	ИначеЕсли ТипЗнч(ПолученныеДанные) = Тип("СписокXDTO") Тогда
		Для Каждого ТекОбъект Из ПолученныеДанные Цикл
			ДобавитьСтавкиМосПраймЗаДень(ТекОбъект, ТаблицаСтавок, Сериализатор, ИспользуемыеСтавки);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ТекСтрокаТаблицы Из ТаблицаСтавок Цикл
		
		МенеджерЗаписи = РегистрыСведений.ЗначенияКотировокФИ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ТекСтрокаТаблицы);
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСтавкиМосПраймЗаДень(СтрокаОтвета, ТаблицаСтавок, Сериализатор, ИспользуемыеСтавки)
	
	ДатаСтавки = Сериализатор.XMLЗначение(Тип("Дата"), СтрокаОтвета.MP_Date);
	
	Для Каждого ТекСтавка Из ИспользуемыеСтавки Цикл
		
		Попытка
			ЗначениеСтавки = Сериализатор.XMLЗначение(Тип("Число"), СтрокаОтвета[ТекСтавка.КодСтавки]);
		Исключение
			ШаблонТекстаОшибки = НСтр("ru = 'Не удалось получить значение ставки %1'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ШаблонТекстаОшибки, ТекСтавка.ВидСтавки));
			Продолжить;
		КонецПопытки;
		
		НоваяЗапись = ТаблицаСтавок.Добавить();
		НоваяЗапись.Период = ДатаСтавки;
		НоваяЗапись.ВидКотировки = ТекСтавка.ВидСтавки;
		НоваяЗапись.Значение = ЗначениеСтавки
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПереченьСтавокМосПрайм() Экспорт 
	
	РезультатФункции = Новый Массив;
	
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrimeON);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime1W);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime2W);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime1M);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime2M);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime3M);
	РезультатФункции.Добавить(Справочники.ВидыКотировокФинансовыхИнструментов.MosPrime6M);
	
	Возврат РезультатФункции;
	
КонецФункции

#КонецОбласти

	
#КонецЕсли