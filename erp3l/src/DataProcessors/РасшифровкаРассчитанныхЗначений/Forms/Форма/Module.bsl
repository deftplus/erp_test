
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.АдресХранилищаПеременныхДляРасчета) Тогда
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	ОбъектРасчета=ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаПеременныхДляРасчета);
	
	ОбъектРасчета.Свойство("ПериодОтчета",ПериодРасшифровки);
	
	Если ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура") Тогда
		
		СтруктураОтбора=Новый ФиксированнаяСтруктура(Параметры.СтруктураОтбора);
		
	КонецЕсли;
	
	Если ОбъектРасчета.Свойство("ИмяОбъекта") Тогда
		
		ЗаполнитьТаблицуДокументовРасшифровки(ОбъектРасчета);
		
	Иначе
		
		ВывестиТабличныйДокументРасшифровки(ОбъектРасчета,Отказ);
		
	КонецЕсли;
				
	АдресХранилищаПеременныхДляРасчета=ПоместитьВоВременноеХранилище(ОбъектРасчета,ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДокументовРасшифровки(ОбъектРасчета)
	
	НоваяСтрока=ДокументыРасшифровки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ОбъектРасчета);
	
	МассивПок=Новый Массив;
	МассивПок.Добавить(СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектРасчета.ПоказательОтчета,"Код")));
	
	МассивПоказателей=Новый ФиксированныйМассив(МассивПок);
	
КонецПроцедуры // ЗаполнитьТаблицуДокументовРасшифровки() 

&НаСервере
Процедура ВывестиТабличныйДокументРасшифровки(ОбъектРасчета,Отказ)
	
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");	
	
	СтруктураРасшифровка=ОбработкаОбъект.ОбработатьРасшифровкуАналитикПоказателяПоПравилуОбработки(ОбъектРасчета,Параметры.ПоказательОтчета, Параметры.СтруктураОтбора);
	
	Если НЕ ПустаяСтрока(СтруктураРасшифровка.ТекстОшибки) Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтруктураРасшифровка.ТекстОшибки,,,СтатусСообщения.Информация);
		Отказ=Истина;
		Возврат;
		
	КонецЕсли;
			
	МассивРасшифровок=Новый ФиксированныйМассив(СтруктураРасшифровка.МассивРасшифровок);
	
	ТекстОшибки=СтруктураРасшифровка.ТекстОшибки;
	
	Если СтруктураРасшифровка.Свойство("КодыНаименованияОперандов") Тогда
		
		Для Каждого Строка ИЗ СтруктураРасшифровка.КодыНаименованияОперандов Цикл
			
			НоваяСтрока=КодыНаименованияОперандов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Элементы.ОтображатьНаименования.Видимость=(КодыНаименованияОперандов.Количество()>0);
	
	Если Параметры.ВсегдаПоказыватьБланкРасшифровки ИЛИ (НЕ МассивРасшифровок.Количество()=1) Тогда
		
	ПолеТабличногоДокумента.Вывести(СтруктураРасшифровка.ТабДокумент);
		
	КонецЕсли;
	
КонецПроцедуры // ВывестиТабличныйДокументРасшифровки() 

&НаКлиенте
Процедура ОбработатьДанныеРасшифровки(Расшифровка)
	
	Если Расшифровка.Свойство("Отчет") 
		ИЛИ (Расшифровка.Свойство("Показатель") и Расшифровка.Свойство("Регистратор")) Тогда
		
		СтруктураВызова=ВернутьСтруктуруВызоваОкнаОтчетаРасшифровки(Расшифровка);
		СтруктураВызова.Вставить("СтруктураОтбора",СтруктураОтбора);
		СтруктураВызова.Вставить("ПериодРасшифровки",ПериодРасшифровки);
		
		Если СтруктураВызова.РежимМногопериодныхУОП И ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
			
			ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма" + ".ФормаАналитическойТаблицы", СтруктураВызова);
			
		Иначе
			
			ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаДокументаУправляемая", СтруктураВызова);
			
		КонецЕсли;
		
	ИначеЕсли Расшифровка.Свойство("Операнд") Тогда
		
		ТаблДок = Неопределено;
		ИспользуемаяИБ = Неопределено;
		
		ДанныеРасшифровки=РасшифроватьОперанд(Расшифровка.Операнд, ИспользуемаяИБ,?(ВладелецФормы=Неопределено,"",ВладелецФормы.ИмяФормы));
		
		Если ТипЗнч(ДанныеРасшифровки)=Тип("ТабличныйДокумент") Тогда
			
			ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаРасшифровкиВИБ_Управляемая", Новый Структура("Результат, ИспользуемаяИБ", ДанныеРасшифровки, ИспользуемаяИБ));
			
		ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Структура") Тогда
			
			Если ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии")
				ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии") Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоРегиструБухгалтерииБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрНакопления")
				ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрНакопления")Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоРегиструНакопленияБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеПроизвольныйЗапрос") Тогда
				
				Имя = "Отчет.ОтчетПоПроизвольномуЗапросуВИБ.Форма.ФормаОтчета";
				ОткрытьФорму(Имя, ДанныеРасшифровки, , Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеПроизвольныйЗапрос") Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоПроизвольномуЗапросуТек.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("ФиксированныйМассив") Тогда
			
			ВладелецФормы.ВыделитьОбластиПоказателей(ДанныеРасшифровки);
			ВладелецФормы.Активизировать();
			
		Иначе
			ОткрытьДокументыРасшифровки();
		КонецЕсли;	
		
	ИначеЕсли Расшифровка.Свойство("ОперандРаскрытия") Тогда
		
		ТаблДок = Неопределено;
		ИспользуемаяИБ = Неопределено;
		ДанныеРасшифровки=РасшифроватьОперанд(Расшифровка.ОперандРаскрытия, ИспользуемаяИБ);
		
		Если ТипЗнч(ДанныеРасшифровки)=Тип("ТабличныйДокумент") Тогда
			
			ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаРасшифровкиВИБ_Управляемая", Новый Структура("Результат, ИспользуемаяИБ", ДанныеРасшифровки, ИспользуемаяИБ));
			
		ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Структура") Тогда
			
			Если ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии")
				ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии") Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоРегиструБухгалтерииБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрНакопления")
				ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрНакопления")Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоРегиструНакопленияБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеПроизвольныйЗапрос") Тогда
				
				Имя = "Отчет.ОтчетПоПроизвольномуЗапросуВИБ.Форма.ФормаОтчета";
				ОткрытьФорму(Имя, ДанныеРасшифровки, , Новый УникальныйИдентификатор);
				
			ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеПроизвольныйЗапрос") Тогда
				
				ОткрытьФорму("Отчет.ОтчетПоПроизвольномуЗапросуТек.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
				
			КонецЕсли;
			
		Иначе
			ОткрытьДокументыРасшифровки();
		КонецЕсли;
		
	ИначеЕсли ИспользуетсяДляРасшифровкиАналитики Тогда
		Оповестить("РасшифроватьОперанд", Расшифровка, ЭтаФорма.ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры // ОбработатьДанныеРасшифровки() 

&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка=Ложь;
		ДокументыРасшифровки.Очистить();
		
		ОбработатьДанныеРасшифровки(Расшифровка);
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСтруктуруВызоваОкнаОтчетаРасшифровки(Расшифровка)
	
	МассивРасшифровки = Новый Массив;
	МассивРасшифровки.Добавить(Расшифровка.Показатель.Код);
	
	РежимМногопериодныхУОП=Документы.НастраиваемыйОтчет.РежимМногопериодныхУОП(Расшифровка.Регистратор);
	
	МассивПоказателейСсылка = Новый Массив;
	МассивПоказателейСсылка.Добавить(Расшифровка.Показатель);
	МассивПоказателейСсылка = Новый ФиксированныйМассив(МассивПоказателейСсылка);

	
	Возврат Новый Структура("Ключ, МассивПоказателей,РежимМногопериодныхУОП,МассивПоказателейСсылка"
							, Расшифровка.Регистратор
							, Новый ФиксированныйМассив(МассивРасшифровки)
							,РежимМногопериодныхУОП
							,МассивПоказателейСсылка);
	
КонецФункции

						
&НаСервере
Функция ПолучитьДанныеОперанда(Операнд)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетов.Ссылка,
	|	ИсточникиДанныхДляРасчетов.СпособПолучения,
	|	ИсточникиДанныхДляРасчетов.ПоказательТекущегоОтчета,
	|	ИсточникиДанныхДляРасчетов.ПоказательОтбор.Код КАК ПоказательОтборКод,
	|	ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса.(
	|		Ссылка,
	|		НомерСтроки,
	|		Поле,
	|		Синоним,
	|		АналитикаОперанда,
	|		КодАналитики,
	|		НастройкаСоответствия,
	|		РеквизитАналитики,
	|		ТаблицаАналитики,
	|		ТаблицаАналитикиВИБ,
	|		НеИспользоватьДляСинхронизации,
	|		СпособЗаполнения,
	|		ФиксированноеЗначение,
	|		РеквизитОбъекта
	|	) КАК ПравилаИспользованияПолейЗапроса
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК ИсточникиДанныхДляРасчетов
	|ГДЕ
	|	ИсточникиДанныхДляРасчетов.Ссылка = &Операнд";
	
	Запрос.УстановитьПараметр("Операнд",Операнд);
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
					 	
КонецФункции

&НаСервере
Функция РасшифроватьОперанд(Операнд, ИспользуемаяИБ,ИмяВладельца="")
	
	ОбъектРасчета=ПолучитьИзВременногоХранилища(АдресХранилищаПеременныхДляРасчета);
	СтрОперанд= ПолучитьДанныеОперанда(Операнд);
	
	Если СтрОперанд.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнутренниеДанныеПоказательОтчета Тогда
		
		МассивСервер=Новый Массив;
		МассивСервер.Добавить(СокрЛП(СтрОперанд.ПоказательОтборКод));
		
		МассивПоказателей=Новый ФиксированныйМассив(МассивСервер);
		
		ПоказательРасшифровкаСсылка = СтрОперанд.Ссылка.ПоказательОтбор;
		
		Если СтрОперанд.ПоказательТекущегоОтчета 
			И ИмяВладельца="Документ.НастраиваемыйОтчет.Форма.ФормаДокументаУправляемая" Тогда
						
			Возврат МассивПоказателей;
			
		Иначе	
			
			ТабЗапросы=УправлениеОтчетамиУХ.ПолучитьДанныеОперандовДляРасчета(,,,,Операнд).мТабПоказателиЗапросы;
			
			Если ТабЗапросы.Количество()=0 Тогда
				ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не удалось определить данные операнда для расчета.'"),,,СтатусСообщения.Внимание);
				Возврат Неопределено;
			КонецЕсли;
				
			ДанныеОтчетов=УправлениеОтчетамиУХ.ПолучитьТаблицуОтчетовРасшифровки(ОбъектРасчета,ТабЗапросы[0],СтруктураОтбора);
			
			ТабСписокОтчетов=ДанныеОтчетов.ТабСписокОтчетов;
				
			Для Каждого СтрОтчет ИЗ ТабСписокОтчетов Цикл
				
				НоваяСтрока=ДокументыРасшифровки.Добавить();
				
				Если ЗначениеЗаполнено(СтрОтчет.Регистратор) Тогда
					
					НоваяСтрока.ИмяОбъекта=СтрОтчет.Регистратор.Метаданные().Имя;
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрОтчет);
				НоваяСтрока.Ссылка=СтрОтчет.Регистратор;
				
			КонецЦикла;	
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.СтруктураОтбора) Тогда
			
			СтруктураАналитики=Новый Структура;
			
			Для Каждого КлючИЗначение ИЗ Параметры.СтруктураОтбора Цикл
				
				СтрокаИсточник=СтрОперанд.ПравилаИспользованияПолейЗапроса.Найти(КлючИЗначение.Ключ,"КодАналитики");
				
				Если НЕ (СтрокаИсточник=Неопределено ИЛИ СтрНайти(СтрокаИсточник.Поле,"Аналитика")=0) Тогда
					
					ПутьКАналитике=ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(СтрокаИсточник.Поле,".");
					
					СтруктураАналитики.Вставить(ПутьКАналитике[0],КлючИЗначение.Значение);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		КонтекстОтчета = ОбъектРасчета;
		Результат = УправлениеОтчетамиУХ.РасшифроватьДанныеОперанда(СтрОперанд.Ссылка, ОбъектРасчета,Параметры.СтруктураОтбора,ОбъектРасчета);
		Если ТипЗнч(КонтекстОтчета) = Тип("Структура") Тогда
			КонтекстОтчета.Свойство("ИспользуемаяИБ", ИспользуемаяИБ);
		КонецЕсли;
		
		Возврат Результат;
		
	КонецЕсли;
			
КонецФункции // РасшифроватьОперанд()

&НаСервереБезКонтекста
Функция МногопериодныйЭкземпляр(Ссылка)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	НастраиваемыйОтчет.УправлениеПериодом.ВерсияОрганизационнойСтруктуры.РежимМногопериодныхУОП КАК РежимМногопериодныхУОП
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|ГДЕ
	|	НастраиваемыйОтчет.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Результат.Следующий();
	
	Возврат Результат.РежимМногопериодныхУОП; 	
	
КонецФункции // МногопериодныйЭкземпляр()

&НаКлиенте
Процедура ОткрытьДокументыРасшифровки(ИскатьОбъекты=Истина)
	
	Если ДокументыРасшифровки.Количество()>0 Тогда
		
		Для Каждого СтрДокумент ИЗ ДокументыРасшифровки Цикл
			
			СтруктураПараметров=Новый Структура;
			
			Если ЗначениеЗаполнено(СтрДокумент.Ссылка) Тогда
				
				ИмяФормыОбъекта="Документ."+СтрДокумент.ИмяОбъекта+".ФормаОбъекта";
				
				МассивПоказателейСсылка = Новый Массив;
				МассивПоказателейСсылка.Добавить(ПоказательРасшифровкаСсылка);
				МассивПоказателейСсылка = Новый ФиксированныйМассив(МассивПоказателейСсылка);
				
				СтруктураПараметров.Вставить("Ключ",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("ДокументКлюч",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("МассивПоказателей",МассивПоказателей);
				СтруктураПараметров.Вставить("МассивПоказателейСсылка",МассивПоказателейСсылка);
				СтруктураПараметров.Вставить("мТекущаяВалюта",Параметры.мТекущаяВалюта);
				СтруктураПараметров.Вставить("СтруктураОтбора",СтруктураАналитики);
				СтруктураПараметров.Вставить("ПериодРасшифровки",СтрДокумент.ПериодОтчета);
								
				Если СтрДокумент.ИмяОбъекта="НастраиваемыйОтчет"
					И МассивПоказателей.Количество()=1
					И ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура")
					И (Не МногопериодныйЭкземпляр(СтрДокумент.Ссылка)) Тогда
					
					Форма=ПолучитьФорму(ИмяФормыОбъекта,СтруктураПараметров);
					Форма.Открыть();
					Форма.ОткрытьФормуРаскрытияПоАналитике(МассивПоказателей[0],,СтруктураАналитики);
					
				Иначе
										
					Если (НЕ ВладелецФормы=Неопределено) Тогда
						
						Если ВладелецФормы.ИмяФормы = "Обработка.АналитическийБланк.Форма.ФормаРаскрытияПоказателей" И ВладелецФормы.Ссылка = СтрДокумент.Ссылка Тогда
							ВладелецФормы.ВыделитьОбластиПоказателей(СтруктураПараметров,СтруктураПараметров.ПериодРасшифровки,СтруктураПараметров.СтруктураОтбора);
							ВладелецФормы.Активизировать();
							
						ИначеЕсли НЕ ВладелецФормы.ИмяФормы = "Обработка.АналитическийБланк.Форма.ФормаРаскрытияПоказателей" 
							И ВладелецФормы.Объект.Свойство("Ссылка") 
							И ВладелецФормы.Объект.Ссылка = СтрДокумент.Ссылка Тогда		
							ВладелецФормы.ВыделитьОбластиПоказателей(СтруктураПараметров,СтруктураПараметров.ПериодРасшифровки,СтруктураПараметров.СтруктураОтбора);
							ВладелецФормы.Активизировать();
						Иначе	
							ОткрытьФорму(ИмяФормыОбъекта,СтруктураПараметров);

						КонецЕсли;
					Иначе	
						ОткрытьФорму(ИмяФормыОбъекта,СтруктураПараметров);
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				Если НЕ ИскатьОбъекты Тогда
					
					Возврат;
					
				КонецЕсли;
				
				ДокументСсылка=ПолучитьЭкземплярОтчета(СтрДокумент.Организация,СтрДокумент.ПериодОтчета,
				СтрДокумент.Сценарий,СтрДокумент.ВидОтчета,,Истина,Истина,,?(ЗначениеЗаполнено(СтрДокумент.Проект),СтрДокумент.Проект,Неопределено));
				
				Если ЗначениеЗаполнено(ДокументСсылка) Тогда
					
					МассивПоказателейСсылка = Новый Массив;
					МассивПоказателейСсылка.Добавить(ПоказательРасшифровкаСсылка);
					МассивПоказателейСсылка = Новый ФиксированныйМассив(МассивПоказателейСсылка);
						
					СтруктураПараметров.Вставить("Ключ",ДокументСсылка);
					СтруктураПараметров.Вставить("ДокументКлюч",ДокументСсылка);
					СтруктураПараметров.Вставить("МассивПоказателей",МассивПоказателей);
					СтруктураПараметров.Вставить("МассивПоказателейСсылка",МассивПоказателейСсылка);
					СтруктураПараметров.Вставить("мТекущаяВалюта",Параметры.мТекущаяВалюта);
					СтруктураПараметров.Вставить("СтруктураОтбора",СтруктураАналитики);
					СтруктураПараметров.Вставить("ПериодРасшифровки",СтрДокумент.ПериодОтчета);
					
					Если ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура")
						И (Не МногопериодныйЭкземпляр(ДокументСсылка)) Тогда
						
						Форма=ПолучитьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);
						Форма.Открыть();
						Форма.ОткрытьФормуРаскрытияПоАналитике(МассивПоказателей[0],,СтруктураАналитики);
						
					Иначе
						
						Если (НЕ ВладелецФормы=Неопределено) Тогда
							
							Если ВладелецФормы.ИмяФормы = "Обработка.АналитическийБланк.Форма.ФормаРаскрытияПоказателей" И ВладелецФормы.Ссылка = ДокументСсылка Тогда
								ВладелецФормы.ВыделитьОбластиПоказателей(СтруктураПараметров,СтруктураПараметров.ПериодРасшифровки,СтруктураПараметров.СтруктураОтбора);
								ВладелецФормы.Активизировать();
								
							ИначеЕсли НЕ ВладелецФормы.ИмяФормы = "Обработка.АналитическийБланк.Форма.ФормаРаскрытияПоказателей" 
								И ВладелецФормы.Объект.Свойство("Ссылка")
								И ВладелецФормы.Объект.Ссылка = ДокументСсылка Тогда		
								ВладелецФормы.ВыделитьОбластиПоказателей(СтруктураПараметров,СтруктураПараметров.ПериодРасшифровки,СтруктураПараметров.СтруктураОтбора);
								ВладелецФормы.Активизировать();
							Иначе	
								ОткрытьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);
							КонецЕсли;
						Иначе
							
							ОткрытьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);            
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОткрытьДокументыРасшифровки()

&НаСервереБезКонтекста
Функция ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
	ОсновнаяВалюта=Неопределено,ПроверятьНаличие=Истина,СоздаватьНовые=Истина,Комментарий="",Проект=Неопределено)
	
	Возврат Документы.НастраиваемыйОтчет.ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
			ОсновнаяВалюта,ПроверятьНаличие,СоздаватьНовые,Комментарий,Проект);
		
КонецФункции // ПолучитьЭкземплярОтчета() 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
			
	Если ДокументыРасшифровки.Количество()>0 Тогда
		
		ОткрытьДокументыРасшифровки(Ложь);
		Закрыть();
		
	ИначеЕсли МассивРасшифровок.Количество()=1 И (НЕ Параметры.ВсегдаПоказыватьБланкРасшифровки) Тогда
		
		Если ТипЗнч(МассивРасшифровок[0]) = Тип("Структура") Тогда	
			
			ОбработатьДанныеРасшифровки(МассивРасшифровок[0]);
			
		КонецЕсли;
		
		Закрыть();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьНаименованияПриИзменении(Элемент)
	
	ОбластьФормулы=ПолеТабличногоДокумента.Область("ТекстПроцедуры");
	
	ТекущийТекст=ОбластьФормулы.Текст;
	ОбластьПоиска=ПолеТабличногоДокумента.Область(1,2,ПолеТабличногоДокумента.ВысотаТаблицы,ПолеТабличногоДокумента.ШиринаТаблицы);
	
	Для Каждого Строка ИЗ КодыНаименованияОперандов Цикл
		
		Если ОтображатьНаименования=1 Тогда
			
			ТекущийТекст=СтрЗаменить(ТекущийТекст,Строка.КодУпрощеннойФормулы,"["+Строка.Наименование+"]");
			
			ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.КодУпрощеннойФормулы,,ОбластьПоиска,,Истина);
			
			Пока ТекОбласть<>Неопределено Цикл	

				Если НЕ ТекОбласть.СодержитЗначение Тогда
					
					ТекОбласть.Текст=Строка.Наименование;
					
				КонецЕсли;
				
				ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.КодУпрощеннойФормулы,ТекОбласть,ОбластьПоиска,,Истина);		
				
			КонецЦикла;
			
		Иначе
			
			ТекущийТекст=СтрЗаменить(ТекущийТекст,"["+Строка.Наименование+"]",Строка.КодУпрощеннойФормулы);
			
			ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.Наименование,,ОбластьПоиска,,Истина);
			
			Пока ТекОбласть<>Неопределено Цикл	

				Если НЕ ТекОбласть.СодержитЗначение Тогда
					
					ТекОбласть.Текст=Строка.КодУпрощеннойФормулы;
					
				КонецЕсли;
				
				ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.Наименование,ТекОбласть,ОбластьПоиска,,Истина);		
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбластьФормулы.Текст=ТекущийТекст;
	
КонецПроцедуры

