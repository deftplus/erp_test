
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//РежимИерархии = ЗначениеЗаполнено(Параметры.Бланк);
	СписокСтрок = Параметры.СписокСтрок;
	
	Если ТипЗнч(Параметры.Владелец) = Тип("СправочникСсылка.БланкиОтчетов") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ИСТИНА КАК Пометка,
		               |	КолонкиОтчетов.Колонка КАК Ссылка,
		               |	КолонкиОтчетов.Колонка.Код КАК КодКолонки,
		               |	КолонкиОтчетов.Колонка.Наименование КАК НаименованиеКолонки,
		               |	КолонкиОтчетов.Ссылка КАК Ссылка1
		               |ПОМЕСТИТЬ ВыбранныеКолонки
		               |ИЗ
		               |	Справочник.НастройкиСтруктурыБланка.КолонкиОтчетов КАК КолонкиОтчетов
		               |ГДЕ
		               |	КолонкиОтчетов.Колонка В(&Ссылка)
		               |	И КолонкиОтчетов.Ссылка.Владелец = &Владелец
		               |	И КолонкиОтчетов.Ссылка.ВидОтклонения = ""ТекущееЗначение""
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкиСтруктурыБланка.Ссылка,
		               |	НастройкиСтруктурыБланка.Колонка КАК КолонкаСсылка,
		               |	НастройкиСтруктурыБланка.Колонка.Код КАК КодКолонки,
		               |	НастройкиСтруктурыБланка.Колонка.Наименование КАК НаименованиеКолонки
		               |ПОМЕСТИТЬ ВсеКолонки
		               |ИЗ
		               |	Справочник.НастройкиСтруктурыБланка.КолонкиОтчетов КАК НастройкиСтруктурыБланка
		               |ГДЕ
		               |	НастройкиСтруктурыБланка.Ссылка.ИндексЭлемента = 10
		               |	И НастройкиСтруктурыБланка.Ссылка.Владелец = &Владелец
		               |	И НастройкиСтруктурыБланка.Ссылка.ВидОтклонения = ""ТекущееЗначение""
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ВыбранныеКолонки.Ссылка ЕСТЬ NULL
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ИСТИНА
		               |	КОНЕЦ КАК Пометка,
		               |	ВсеКолонки.КодКолонки КАК КодКолонки,
		               |	ВсеКолонки.НаименованиеКолонки КАК НаименованиеКолонки,
		               |	ВсеКолонки.КолонкаСсылка КАК Ссылка,
		               |	ВсеКолонки.Ссылка КАК Ссылка1
		               |ПОМЕСТИТЬ запросФинал
		               |ИЗ
		               |	ВсеКолонки КАК ВсеКолонки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеКолонки КАК ВыбранныеКолонки
		               |		ПО ВсеКолонки.КолонкаСсылка = ВыбранныеКолонки.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	запросФинал.Пометка КАК Пометка,
		               |	запросФинал.КодКолонки КАК КодКолонки,
		               |	запросФинал.НаименованиеКолонки КАК НаименованиеКолонки,
		               |	запросФинал.Ссылка КАК ССылка,
		               |	запросФинал.Ссылка1 КАК Ссылка1
		               |ИЗ
		               |	запросФинал КАК запросФинал
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	КодКолонки";
		
					   
					 
		Запрос.УстановитьПараметр("Ссылка",СписокСтрок);
		Запрос.УстановитьПараметр("Владелец",Параметры.Владелец);

		
		
	Иначе	
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ИСТИНА КАК Пометка,
		               |	КолонкиОтчетов.Ссылка КАК Ссылка
		               |ПОМЕСТИТЬ ВыбранныеКолонки
		               |ИЗ
		               |	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
		               |ГДЕ
		               |	КолонкиОтчетов.Ссылка В(&Ссылка)
		               |	И КолонкиОтчетов.Владелец = &Владелец
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КолонкиОтчетов.Ссылка,
		               |	КолонкиОтчетов.Код КАК КодКолонки,
		               |	КолонкиОтчетов.Наименование КАК НаименованиеКолонки
		               |ПОМЕСТИТЬ ВсеКолонки
		               |ИЗ
		               |	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
		               |ГДЕ
		               |	КолонкиОтчетов.Владелец = &Владелец
		               |	И КолонкиОтчетов.ПометкаУдаления = ЛОЖЬ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ВыбранныеКолонки.Ссылка ЕСТЬ NULL
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ИСТИНА
		               |	КОНЕЦ КАК Пометка,
		               |	ВсеКолонки.КодКолонки КАК КодКолонки,
		               |	ВсеКолонки.НаименованиеКолонки КАК НаименованиеКолонки,
		               |	ВсеКолонки.Ссылка КАК Ссылка
		               |ИЗ
		               |	ВсеКолонки КАК ВсеКолонки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВыбранныеКолонки КАК ВыбранныеКолонки
		               |		ПО ВсеКолонки.Ссылка = ВыбранныеКолонки.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	КодКолонки";

					   
			
		Запрос.УстановитьПараметр("Ссылка",СписокСтрок);
		Запрос.УстановитьПараметр("Владелец",Параметры.Владелец);
		
		
	КонецЕсли;	
	
	ДеревоСтрок_ = Запрос.Выполнить().Выгрузить();
		
	СтркиКУдалению = Новый Массив;	 	
	МассивРеквизитов = Новый Массив;
	Для Каждого Кол Из ДеревоСтрок_.Колонки Цикл
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Кол.ТипЗначения.Типы()[0]);
		
		КолонкаИмя = Кол.Имя;
		МассивРеквизитов.Добавить(Новый РеквизитФормы(КолонкаИмя,
		Новый ОписаниеТипов(МассивТипов),
		"ДеревоСтрок",
		КолонкаИмя,
		Ложь));	
		
	КонецЦикла; 
	ИзменитьРеквизиты(МассивРеквизитов);
		
	ЗначениеВРеквизитФормы(ДеревоСтрок_,"ДеревоСтрок");	
	
	Для Каждого Кол Из ДеревоСтрок_.Колонки Цикл
		КолонкаИмя = Кол.Имя;
		
		Если КолонкаИмя = "Пометка" Тогда
			ЭтаФорма.Элементы.Добавить(КолонкаИмя,Тип("ПолеФормы"),ЭтаФорма.Элементы.ДеревоСтрок);	
			ЭтаФорма.Элементы[КолонкаИмя].ПутьКДанным		= "ДеревоСтрок."+КолонкаИмя;
			ЭтаФорма.Элементы[КолонкаИмя].Вид				= ВидПоляФормы.ПолеФлажка;						
			ЭтаФорма.Элементы[КолонкаИмя].ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложениеЭлемента.Право;
            ЭтаФорма.Элементы[КолонкаИмя].ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			//ЭтаФорма.Элементы[КолонкаИмя].Ширина = 3;

		ИначеЕсли КолонкаИмя = "КодКолонки" ИЛИ КолонкаИмя = "НаименованиеКолонки" Тогда
			ЭтаФорма.Элементы.Добавить(КолонкаИмя,Тип("ПолеФормы"),ЭтаФорма.Элементы.ДеревоСтрок);	
			ЭтаФорма.Элементы[КолонкаИмя].ПутьКДанным		= "ДеревоСтрок."+КолонкаИмя;
			ЭтаФорма.Элементы[КолонкаИмя].Вид				= ВидПоляФормы.ПолеВвода;						
			ЭтаФорма.Элементы[КолонкаИмя].ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложениеЭлемента.Право;
			
		Иначе
			Продолжить;
		КонецЕсли;	
				
		
		
	КонецЦикла; 
	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ОбойтиДеревоРекурсивно(СтрокиДЗ,СтркиКУдалению)
	
	Для Каждого СтрокаДерева Из СтрокиДЗ Цикл
		
		Если СокрЛП(СтрокаДерева.КодКолонки)="" Тогда
			СтрокаДерева.КодКолонки = Нстр("ru = 'ВЫБРАННЫЕ КОЛОНКИ'");
			ОбойтиДеревоРекурсивно(СтрокаДерева.Строки,СтркиКУдалению);
		КонецЕсли;
		
		Если НЕ СтрокаДерева.Родитель = Неопределено Тогда
			Если СтрокаДерева.Родитель.КодКолонки=СтрокаДерева.КодКолонки Тогда
				СтркиКУдалению.Добавить(СтрокаДерева);
				СтрокиДЗ.Удалить(СтрокаДерева);
				Продолжить;			
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДерева.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбойтиДеревоРекурсивно(СтрокаДерева.Строки,СтркиКУдалению);
		
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтруктураПараметров = ПолучитьВыбранныеСтроки();
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры
	
Функция  ПолучитьВыбранныеСтроки()
	
	ДеревоСтрок_ = РеквизитФормыВЗначение("ДеревоСтрок");
	СтруктураПараметров = Новый Структура;
	МассивВыбранных = Новый Массив;
	ПолучитьМассивВыбранных(ДеревоСтрок_,МассивВыбранных);
	СтруктураПараметров.Вставить("ВыбранныеСтроки",МассивВыбранных);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Процедура ПолучитьМассивВыбранных(СтрокиДЗ,МассивВыбранных)
	
	Для Каждого СтрокаДерева Из СтрокиДЗ Цикл
		
		Если СтрокаДерева.Пометка И НЕ СокрЛП(СтрокаДерева.КодКолонки) = Нстр("ru = 'ВЫБРАННЫЕ СТРОКИ'") Тогда
			 МассивВыбранных.Добавить(СтрокаДерева.ССылка);
		КонецЕсли;
						
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоСтрокПриИзменении(Элемент)
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтрокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Элемент.Имя = "Пометка" Тогда
		 СтандартнаяОбработка = Ложь;
	КонецЕсли;	
		
КонецПроцедуры




