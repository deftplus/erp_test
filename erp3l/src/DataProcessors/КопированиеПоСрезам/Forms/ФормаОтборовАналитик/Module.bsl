 
&НаСервере
Перем СоотвествиеАналитикСвод;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 
	Если Параметры.ТекОтбор_="" ИЛИ  Параметры.ТекОтбор_="Не заполнять" ИЛИ Параметры.ТекОтбор_= "Все элементы" Тогда
		НужныйОтбор="";
	Иначе	  
		НужныйОтбор=ЗначениеИзСтрокиВнутр(Параметры.ТекОтбор_); 
	КонецЕсли;	  
	
	ТекПоле = Параметры.ТекНастройка;
	
	СхемаКомпоновкиДанных=ПолучитьОбщийМакет("МакетНастройкиОтборов");	
	НаборДанных=СхемаКомпоновкиДанных.НаборыДанных[0];
	НужныйТип=Параметры.Тип_;
	Элементы.ОтборСКД.Видимость=Истина;
	
	НовоеПолеНабораДанных=НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных")); 
	НовоеПолеНабораДанных.Заголовок=Строка(ТекПоле);
	НовоеПолеНабораДанных.ПутьКДанным=Строка(НужныйТип);
	НовоеПолеНабораДанных.Поле=Строка(НужныйТип);
	
	Если ТипЗнч(Нужныйтип)=Тип("Тип") Тогда
		МассивТипов=Новый Массив;
		МассивТипов.Добавить(НужныйТип);
		ОписаниеТ= Новый ОписаниеТипов(МассивТипов);
	Иначе
		ОписаниеТ= Новый ОписаниеТипов(НужныйТип);
	КонецЕсли;
	
	НовоеПолеНабораДанных.ТипЗначения=ОписаниеТ;
	
	НК=СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	Если НужныйОтбор<>"" и НужныйОтбор<>Неопределено и НужныйОтбор.Отбор.Элементы.Количество()<>0 Тогда
		
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НК.Отбор,НужныйОтбор.Отбор);
		
	Иначе
		Нэл=НК.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Нэл.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(НовоеПолеНабораДанных.Поле);		
		Нэл.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
		Нэл.Использование=Истина;
	КонецЕсли;	  
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	НастройкиКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	НастройкиКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		
 КонецПроцедуры
 
&НаСервере
Функция ПодготовитьСтруктуруПарамтеров()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначениеНастройки",ЗначениеВСтрокуВнутр(НастройкиКомпоновкиДанных.Настройки));
	СтруктураПараметров.Вставить("ТекАналитика",ТекПоле);
	ПредставлениеНастройки = ?(Строка(НастройкиКомпоновкиДанных.Настройки.Отбор)="",Нстр("ru = 'Без отбора'"),Строка(НастройкиКомпоновкиДанных.Настройки.Отбор));
    СтруктураПараметров.Вставить("ПредставлениеОтбора",ПредставлениеНастройки);

	
	
	ТЗРезультат = Новый ТаблицаЗначений;
	
	ИсходныйНабор = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
    СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(ТекПоле);
	
	ТекстЗапроса = СформироватьТекстЗапросаПоАналитике(СписокЗначений[0],ИсходныйНабор.НаборыДанных[0].Поля[0]); 
	ТекстЗапроса = СтрЗАменить(ТекстЗапроса,"КАК "+СписокЗначений[0].Значение,"КАК Ссылка");
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетОтборовСКД");
	СхемаКомпоновкиДанных.НаборыДанных[0].Запрос=ТекстЗапроса;
	
	НовыйИсточник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
		
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();

	НовыеНастройки = СхемаКомпоновкиДанных.ВариантыНастроек[0].Настройки;	
	Для Каждого Отбор Из НастройкиКомпоновкиДанных.Настройки.Отбор.Элементы Цикл  //Только для отборов Аналитик!!!								
		Если Отбор.Использование Тогда			
			
			СтрокаОтбор =  СхемаКомпоновкиДанных.ВариантыНастроек[0].Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			СтрокаОтбор.ЛевоеЗначение =Новый ПолеКомпоновкиДанных("Ссылка"); 
			СтрокаОтбор.Использование = Отбор.Использование;
			СтрокаОтбор.ВидСравнения = Отбор.ВидСравнения;
			СтрокаОтбор.ПравоеЗначение = Отбор.ПравоеЗначение;
			
		КонецЕсли;			
	КонецЦикла;	

	НастройкиКомпоновкиДанных.ЗагрузитьНастройки(НовыеНастройки);
	НастройкиКомпоновкиДанных.Инициализировать(НовыйИсточник);
    
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НовыеНастройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений ();
	ПроцессорВывода.УстановитьОбъект(ТЗРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 

	СтруктураПараметров.Вставить("СписокВыбранныхЗначений",ТЗРезультат.ВыгрузитьКолонку("Ссылка"));
	
	
		
	Возврат СтруктураПараметров;	
	
КонецФункции

Функция СформироватьТекстЗапросаПоАналитике(Пл,Поле,АналитикаРедактируется=Ложь) 
	
	ТипОбъекта = Поле.ТипЗначения.типы()[0];
	ОбъектСслыка=Новый(ТипОбъекта); 
	МетаданныеОбъекта=ОбъектСслыка.Метаданные();

	ИмяТаблицы = "Справочник."+МетаданныеОбъекта.Имя;
	
	ТекстЗАпроса=
	"ВЫБРАТЬ
	|	ТекущийСправочник.Ссылка КАК "+Пл;
	ТекстЗАпроса=ТекстЗАпроса+" ИЗ ";
	ТекстЗАпроса=ТекстЗАпроса+ИмяТаблицы;
    ТекстЗАпроса=ТекстЗАпроса+" КАК ТекущийСправочник";
	
	Если МетаданныеОбъекта.Имя = "Периоды" Тогда
		  ТекстЗАпроса=ТекстЗАпроса+" Упорядочить ПО ТекущийСправочник.ДатаНачала";
	КонецЕсли;
	
	Если  АналитикаРедактируется Тогда
		
		ТекстЗАпроса=
		"ВЫБРАТЬ
		|	""<...>"" КАК "+Пл;		
	КонецЕсли;	
	
	Возврат ТекстЗАпроса;

КонецФункции


&НаКлиенте
Процедура Применить(Команда)
	Закрыть(ПодготовитьСтруктуруПарамтеров());
КонецПроцедуры

 






 
 



