

&НаКлиенте
Процедура ЗаписатьСписок(Команда)
	
	МассивСчетов=Новый Массив;
	
	Для Каждого СтрокаСчет ИЗ ТаблицаСчетов Цикл
		
		СтруктураСчет=Новый Структура;
		СтруктураСчет.Вставить("СчетИсточник",				СтрокаСчет.СчетИсточник);
		СтруктураСчет.Вставить("СчетПриемник",				Параметры.СчетПриемник);
		СтруктураСчет.Вставить("ИспользованиеДт",			СтрокаСчет.ИспользованиеДт);
		СтруктураСчет.Вставить("ИспользованиеКт",			СтрокаСчет.ИспользованиеКт);
		СтруктураСчет.Вставить("ТранслироватьСальдо",		СтрокаСчет.ТранслироватьСальдо);
		СтруктураСчет.Вставить("ТранслироватьОбороты",		СтрокаСчет.ТранслироватьОбороты);
		СтруктураСчет.Вставить("ПрименениеПоКорреспонденции",СтрокаСчет.ПрименениеПоКорреспонденции);
		СтруктураСчет.Вставить("КоррСчетИсточник",			СтрокаСчет.КоррСчетИсточник);
		СтруктураСчет.Вставить("Ссылка",					СтрокаСчет.Ссылка);
		
		МассивСчетов.Добавить(СтруктураСчет);
		
	КонецЦикла;
	
	Оповестить("ИзмененСписокСчетов",МассивСчетов);
	
	Закрыть();
		
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПланСчетовБД=Параметры.ПланСчетовБД;
		
	Для Каждого Счет ИЗ Параметры.ТаблицаСчетов Цикл
		
		НоваяСтрока=ТаблицаСчетов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Счет);	
		НоваяСтрока.НастройкаСохранена=ЗначениеЗаполнено(НоваяСтрока.Ссылка);
		
	КонецЦикла;
	
	НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели;
	УстановитьВидимостьКолонок();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКолонок()
	
	Если НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.ПоказателиВПоказатели Тогда
		
		Элементы.ИспользованиеДт.Видимость		= Ложь;
		Элементы.ИспользованиеКт.Видимость 		= Ложь;
		Элементы.КоррСчетИсточник.Видимость		= Ложь;
		Элементы.ТранслироватьОбороты.Видимость	= Истина;
		Элементы.ТранслироватьСальдо.Видимость	= Истина;
		
	ИначеЕсли НаправлениеТрансляции=Перечисления.НаправленияТрансляцииДанных.РегистрБухгалтерииВПоказатели Тогда
		
		Элементы.ИспользованиеДт.Видимость		= Истина;
		Элементы.ИспользованиеКт.Видимость		= Истина;
		Элементы.КоррСчетИсточник.Видимость		= Истина;
		Элементы.ТранслироватьОбороты.Видимость	= Истина;
		Элементы.ТранслироватьСальдо.Видимость	= Истина;
		
	Иначе
		
		Элементы.ИспользованиеДт.Видимость		= Истина;
		Элементы.ИспользованиеКт.Видимость		= Истина;
		Элементы.КоррСчетИсточник.Видимость		= Истина;
		Элементы.ТранслироватьОбороты.Видимость	= Ложь;
		Элементы.ТранслироватьСальдо.Видимость	= Ложь;
		
	КонецЕсли;
		
КонецПроцедуры // УстановитьВидимостьКолонок()


&НаКлиенте
Процедура ОчиститьСписок(Команда)
	
	ТаблицаСчетов.Очистить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьСоответствие(СтруктураДанных)
	
	Справочники.СоответствияСчетовДляТрансляции.ИзменитьОбъектПоПараметрам(СтруктураДанных);
		
КонецПроцедуры // СоздатьСоответствие() 

&НаКлиенте
Процедура ПроверитьЗаполнениеСчетов(Знач Оповещение)
	
	Если Элементы.ТаблицаСчетов.ТекущиеДанные=Неопределено Тогда
		
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элементы.ТаблицаСчетов.ТекущиеДанные.СчетИсточник) Тогда
		
		Сообщить("Не указан счет - источник.",СтатусСообщения.Внимание);
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
		
	КонецЕсли;
	
	Если Элементы.ТаблицаСчетов.ТекущиеДанные.ПрименениеПоКорреспонденции И НЕ ЗначениеЗаполнено(Элементы.ТаблицаСчетов.ТекущиеДанные.КоррСчетИсточник) Тогда
		
		Сообщить("Не указан корреспондирующий счет.",СтатусСообщения.Внимание);
		ВыполнитьОбработкуОповещения(Оповещение, Ложь);
		Возврат;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Элементы.ТаблицаСчетов.ТекущиеДанные.Ссылка) Тогда
		
		Ответ = Неопределено;
		
		ДопПараметры = Новый Структура("Оповещение", Оповещение);
		Оповещение = Новый ОписаниеОповещения("ПроверитьЗаполнениеСчетовЗавершение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение, "Соответствие еще не записано. Записать?", РежимДиалогаВопрос.ДаНет);
		
		Возврат;
		
	КонецЕсли;
			
	ВыполнитьОбработкуОповещения(Оповещение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеСчетовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Оповещение = ДополнительныеПараметры.Оповещение;    
    
    Ответ = РезультатВопроса;		
    Если Ответ = КодВозвратаДиалога.Да Тогда
        
        СтруктураСоответствие=Новый Структура;
        СтруктураСоответствие.Вставить("СчетИсточник",					Элементы.ТаблицаСчетов.ТекущиеДанные.СчетИсточник);
        СтруктураСоответствие.Вставить("СчетПриемник",					Параметры.СчетПриемник);
        СтруктураСоответствие.Вставить("Владелец",						Параметры.ШаблонТрансляции);
        СтруктураСоответствие.Вставить("Ссылка",						);
        
        СоздатьСоответствие(СтруктураСоответствие);
        
        Если НЕ ЗначениеЗаполнено(СтруктураСоответствие.Ссылка) Тогда
            
            Отказ=Истина;
            ВыполнитьОбработкуОповещения(Оповещение, Ложь);
            Возврат;
            
        Иначе
            
            Элементы.ТаблицаСчетов.ТекущиеДанные.Ссылка=СтруктураСоответствие.Ссылка;
            ЗаписатьТекущиеНастройкиТрансляции();
            ВыполнитьОбработкуОповещения(Оповещение, Истина);
            Возврат;
            
        КонецЕсли;
        
    Иначе
        
        Отказ=Истина;
        ВыполнитьОбработкуОповещения(Оповещение, Ложь);
        Возврат;
        
    КонецЕсли;    
    
    ВыполнитьОбработкуОповещения(Оповещение, Истина);

КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиТрансляции(ДанныеСоответствия)
	
		
	СтруктураРесурсов=Новый Структура;
	СтруктураРесурсов.Вставить("ИспользованиеДт",				ДанныеСоответствия.ИспользованиеДт);
	СтруктураРесурсов.Вставить("ИспользованиеКт",				ДанныеСоответствия.ИспользованиеКт);
	СтруктураРесурсов.Вставить("ТранслироватьСальдо",			ДанныеСоответствия.ТранслироватьСальдо);
	СтруктураРесурсов.Вставить("ТранслироватьОбороты",			ДанныеСоответствия.ТранслироватьОбороты);
	СтруктураРесурсов.Вставить("ПрименениеПоКорреспонденции",	ДанныеСоответствия.ПрименениеПоКорреспонденции);
	СтруктураРесурсов.Вставить("КоррСчетИсточник",				ДанныеСоответствия.КоррСчетИсточник);
	СтруктураРесурсов.Вставить("Ссылка",						ДанныеСоответствия.Ссылка);
	СтруктураРесурсов.Вставить("НаправлениеТрансляции",         НаправлениеТрансляции);
	
	Возврат СтруктураРесурсов;
	
КонецФункции // ПолучитьСтруктуруРесурсов()

&НаСервере
Процедура ЗаписатьТекущиеНастройкиТрансляции()
	
	ДанныеСоответствия=ТаблицаСчетов.НайтиПоИдентификатору(Элементы.ТаблицаСчетов.ТекущаяСтрока);
	СтруктураПараметров=ПолучитьНастройкиТрансляции(ДанныеСоответствия);			
	УправлениеОтчетамиУХ.ЗаписатьНастройкиПравилТрансляции(Параметры.ШаблонТрансляции,СтруктураПараметров.Ссылка,СтруктураПараметров);
	
	ДанныеСоответствия.НастройкаСохранена=Истина;
	
КонецПроцедуры // ЗаписатьТекущиеНастройкиСоответствия() 
 
&НаКлиенте
Процедура НастройкаДт(Дебет)
	
		
КонецПроцедуры


&НаКлиенте
Процедура КоррСчетИсточникПриИзменении(Элемент)
			
	Если ЗначениеЗаполнено(Элементы.ТаблицаСчетов.ТекущиеДанные.КоррСчетИсточник) Тогда
		
		Элементы.ТаблицаСчетов.ТекущиеДанные.ПрименениеПоКорреспонденции=Истина;
		Элементы.ТаблицаСчетов.ТекущиеДанные.ТранслироватьСальдо=Ложь;
		
	Иначе
		
		Элементы.ТаблицаСчетов.ТекущиеДанные.ПрименениеПоКорреспонденции=Ложь;
		
	КонецЕсли;		
	
КонецПроцедуры


&НаКлиенте
Процедура НаправлениеТрансляцииПриИзменении(Элемент)
	
	УстановитьВидимостьКолонок();
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаСчетовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элементы.ТаблицаСчетов.ТекущиеДанные.НастройкаСохранена=Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура ДополнительнаяНастройка(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДополнительнаяНастройкаЗавершение", ЭтотОбъект);
	ПроверитьЗаполнениеСчетов(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяНастройкаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если НЕ Результат Тогда
        
        Возврат;
        
    КонецЕсли;
    
    Если НЕ Элементы.ТаблицаСчетов.ТекущиеДанные.НастройкаСохранена Тогда;
        ЗаписатьТекущиеНастройкиТрансляции();
    КонецЕсли;
    
    СтруктураПараметров=Новый Структура;
    СтруктураПараметров.Вставить("СоответствиеСчетов",		Элементы.ТаблицаСчетов.ТекущиеДанные.Ссылка);
    СтруктураПараметров.Вставить("ШаблонТрансляции",		Параметры.ШаблонТрансляции);
    СтруктураПараметров.Вставить("НаправлениеТрансляции",	НаправлениеТрансляции);
    
    ОткрытьФорму("Обработка.УстановкаСоответствияСчетов.Форма.ФормаРедактированияИсточников", СтруктураПараметров);
    
КонецПроцедуры


