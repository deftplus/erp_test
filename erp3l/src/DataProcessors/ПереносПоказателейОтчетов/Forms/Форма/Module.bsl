
&НаСервере
Процедура ПоказательИсточникПриИзмененииНаСервере()
	
	ОбновитьПравилаИсточники();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПравилаИсточники()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроцедурыРасчетов.НазначениеРасчетов КАК ПравилоОбработки
	|ИЗ
	|	РегистрСведений.ПроцедурыРасчетов КАК ПроцедурыРасчетов
	|ГДЕ
	|	ПроцедурыРасчетов.ПотребительРасчета = &ПотребительРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.Ссылка КАК ПравилоПроверки
	|ИЗ
	|	Справочник.ПравилаПроверки.КонтролируемыеПоказателиОтчетов КАК ПравилаПроверкиКонтролируемыеПоказателиОтчетов
	|ГДЕ
	|	ПравилаПроверкиКонтролируемыеПоказателиОтчетов.ПоказательОтчета = &ПотребительРасчета";
	
	Запрос.УстановитьПараметр("ПотребительРасчета",объект.ПоказательИсточник);
	
	Результат=Запрос.ВыполнитьПакет();
	
	Объект.ПравилаОбработки.Очистить();
	Объект.ПравилаПроверки.Очистить();
	
	ЗапросПравилаОбработки=Результат[0].Выбрать();
	
	Пока ЗапросПравилаОбработки.Следующий() Цикл
		
		НоваяСтрока=Объект.ПравилаОбработки.Добавить();
		НоваяСтрока.ПравилоИсточник=ЗапросПравилаОбработки.ПравилоОбработки;
		
	КонецЦикла;
	
	ЗапросПравилаПроверки=Результат[1].Выбрать();
	
	Пока ЗапросПравилаПроверки.Следующий() Цикл
		
		НоваяСтрока=Объект.ПравилаПроверки.Добавить();
		НоваяСтрока.ПравилоИсточник=ЗапросПравилаПроверки.ПравилоПроверки;
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьПравилаИсточники()

&НаКлиенте
Процедура ПоказательИсточникПриИзменении(Элемент)
	
	ПоказательИсточникПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьСоответствиеТипаИБ(ПравилоИсточник,ПравилоПриемник)
	
	ТипИБИсточник=ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоИсточник,"ТипБД");
	
	ТекстОшибки="";
	
	Если ЗначениеЗаполнено(ТипИБИсточник) И (НЕ ТипИБИсточник=Справочники.ТипыБазДанных.ТекущаяИБ) Тогда
		
		ТипИБПриемник=ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПравилоПриемник,"ТипБД");

		Если НЕ ТипИБИсточник=ТипИБПриемник Тогда
			
			ТекстОшибки="Не совпадают типы информационных баз, используемых в источнике и приемнике.
			|Источник: "+ТипИБИсточник+",
			|приемник: "+ТипИБПриемник;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстОшибки;
				
КонецФункции // ПравилаОбработкиПравилоПриемникПриИзмененииНаСервере()

&НаКлиенте
Процедура ПравилаОбработкиПравилоПриемникПриИзменении(Элемент)
	
	ТекстОшибки=ПроверитьСоответствиеТипаИБ(Элементы.ПравилаОбработки.ТекущиеДанные.ПравилоИсточник,Элементы.ПравилаОбработки.ТекущиеДанные.ПравилоПриемник);
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		
		Сообщить(ТекстОшибки,СтатусСообщения.Внимание);
		Элементы.ПравилаОбработки.ТекущиеДанные.ПравилоПриемник="";
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыйЭлементПриемника(ЭлементИсточника)
	
	Если Не ЗначениеЗаполнено(ЭлементИсточника) Тогда
		
		Возврат КэшируемыеПроцедурыУХ.ПолучитьПустуюСсылкуПоТаблицеАналитики(ЭлементИсточника.Метаданные().ПолноеИмя());
		
	КонецЕсли;
	
	ЭлементПриемника=ЭлементИсточника.Скопировать();
	ЭлементПриемника.Владелец=Объект.ВидОтчетаПриемник;
	ЭлементПриемника.Код=ОбщегоНазначенияУХ.ПолучитьВозможныйКодСправочника(ЭлементПриемника.Код,ЭлементИсточника.Метаданные().ДлинаКода,ЭлементИсточника.Метаданные().Имя,Объект.ВидОтчетаПриемник);
	
	Если ТипЗнч(ЭлементИсточника)=Тип("СправочникСсылка.СтрокиОтчетов") Тогда
		
		ЭлементПриемника.ГруппаРаскрытия=ПолучитьНовыйЭлементПриемника(ЭлементИсточника.ГруппаРаскрытия);
		ЭлементПриемника.Родитель=Справочники.СтрокиОтчетов.ПустаяСсылка();
		ЭлементПриемника.ПорядковыйНомер=Справочники.ВидыОтчетов.ПолучитьВозможныйИндексСтроки(Объект.ВидОтчетаПриемник,ЭлементПриемника.ПорядковыйНомер);
		
	ИначеЕсли ТипЗнч(ЭлементИсточника)=Тип("СправочникСсылка.КолонкиОтчетов") Тогда
		
		ЭлементПриемника.ПорядковыйНомер=Справочники.ВидыОтчетов.ПолучитьВозможныйНомерКолонки(Объект.ВидОтчетаПриемник,ЭлементПриемника.ПорядковыйНомер);
		
	КонецЕсли;
	
	ЭлементПриемника.Записать();
	
	Возврат ЭлементПриемника.Ссылка;
	
КонецФункции // ПолучитьНовыйЭлементПриемника() 

&НаСервере
Процедура СоздатьНовыйПоказатель(Копирование=Ложь)
	
	Если (ЗначениеЗаполнено(Объект.СтрокаПриемник) И ЗначениеЗаполнено(Объект.СтрокаПриемник.ГруппаРаскрытия)) 
		И (НЕ Справочники.ГруппыРаскрытия.ПроверитьИдентичностьВидовАналитик(Объект.ПоказательИсточник.ГруппаРаскрытия,Объект.СтрокаПриемник.ГруппаРаскрытия))
		Тогда
		
		Сообщить("Не совпадают аналитики показателя - источника и строки - приемника.");
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПоказательИсточник.ГруппаРаскрытия) Тогда
		
		ЧислоАналитикГруппыРаскрытия=Объект.ПоказательИсточник.ГруппаРаскрытия.ЧислоАналитик;
		Валютная=Объект.ПоказательИсточник.ГруппаРаскрытия.Валютная;
		
	КонецЕсли;
	
	АналитикВидаОтчетаИсточник=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(Объект.ВидОтчетаИсточник);
	АналитикВидаОтчетаПриемник=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(Объект.ВидОтчетаПриемник);
	
	Если АналитикВидаОтчетаИсточник>0 ИЛИ АналитикВидаОтчетаПриемник>0 
		И (НЕ Справочники.ВидыОтчетов.ПроверитьИдентичностьВидовАналитик(Объект.ВидОтчетаПриемник,Объект.ВидОтчетаИсточник)) Тогда
		
		Сообщить("Не совпадают аналитики вида отчета - источника и вида отчета - приемника.");
		Возврат;
		
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Если Копирование Тогда
		
		ПоказательОбъект=Объект.ПоказательИсточник.Скопировать();
		
	Иначе
		
		ПоказательОбъект=Объект.ПоказательИсточник.ПолучитьОбъект();
		
	КонецЕсли;
	
	ПоказательОбъект.Владелец=Объект.ВидОтчетаПриемник;
	
	Если ЗначениеЗаполнено(Объект.СтрокаПриемник) Тогда
		
		ПоказательОбъект.Строка=Объект.СтрокаПриемник;
		ЗаполнитьРеквизитыПоСтроке(ПоказательОбъект,ПоказательОбъект.Строка);
		
	Иначе
		
		Попытка
			
			ПоказательОбъект.Строка=ПолучитьНовыйЭлементПриемника(ПоказательОбъект.Строка);
			ЗаполнитьРеквизитыПоСтроке(ПоказательОбъект,ПоказательОбъект.Строка);
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
			
			ОтменитьТранзакцию();
			Возврат;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КолонкаПриемник) Тогда
		
		ПоказательОбъект.Колонка=Объект.КолонкаПриемник;
		
	Иначе
		
		Попытка
			
			ПоказательОбъект.Колонка=ПолучитьНовыйЭлементПриемника(ПоказательОбъект.Колонка);
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
			ОтменитьТранзакцию();
			Возврат;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПоказательОбъект.ГруппаРаскрытия) И ПоказательОбъект.ГруппаРаскрытия.Владелец=Объект.ВидОтчетаИсточник Тогда
		
		ПоказательОбъект.ГруппаРаскрытия=ПолучитьНовыйЭлементПриемника(ПоказательОбъект.ГруппаРаскрытия);
		
	КонецЕсли;
			
	Попытка
		
		ПоказательОбъект.Записать();
		НовыйПоказатель=ПоказательОбъект.Ссылка;
				
	Исключение
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
		ОтменитьТранзакцию();
		Возврат;
		
	КонецПопытки;
	
	Отказ=Ложь;
	
	Если НЕ Копирование Тогда
		
		ОбновитьИсточникиДанныхПоказательОтбор(Отказ);
		
		Если Отказ Тогда
			
			ОтменитьТранзакцию();
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ Объект.ПравилаОбработки Цикл
		
		Если ЗначениеЗаполнено(Строка.ПравилоПриемник) Тогда
						
			ПеренестиПроцедуруРасчета(Строка.ПравилоИсточник,Строка.ПравилоПриемник,Копирование,Отказ);
			
			Если Отказ Тогда
				
				ОтменитьТранзакцию();
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строка ИЗ Объект.ПравилаПроверки Цикл
		
		Если ЗначениеЗаполнено(Строка.ПравилоПриемник) Тогда
			
			ПеренестиКонтрольныеСоотношения(Строка.ПравилоИсточник,Строка.ПравилоПриемник,Копирование,Отказ);
			
			Если Отказ Тогда
				
				ОтменитьТранзакцию();
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Копирование Тогда
		
		ПеренестиЗначенияПоказателя(Отказ);
		
		Если Отказ Тогда
			
			ОтменитьТранзакцию();
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;		
	
	ЗафиксироватьТранзакцию();
	
	Для Каждого Строка ИЗ Объект.ПравилаОбработки Цикл
		
		Если ЗначениеЗаполнено(Строка.ПравилоПриемник) Тогда
			
			УправлениеОтчетамиУХ.СформироватьДанныеРегистраПараметрическихНастроек(Строка.ПравилоПриемник);
			
			Если НЕ Копирование Тогда
				
				УправлениеОтчетамиУХ.СформироватьДанныеРегистраПараметрическихНастроек(Строка.ПравилоИсточник);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Элементы.НовыйПоказатель.Видимость=Истина;
	
	Если НЕ Копирование Тогда
		оРеструктуризацияБланковВО = Обработки.РестуктуризацияБланковВО.Создать();
		оРеструктуризацияБланковВО.ИзмененныеПоказатели.Добавить();
		оРеструктуризацияБланковВО.ИзмененныеПоказатели[0].ПоказательОтчета = Объект.ПоказательИсточник;
		оРеструктуризацияБланковВО.ОбработатьПереносПоказателяВО();
		Объект.ПоказательИсточник="";
	КонецЕсли;
						
КонецПроцедуры

&НаСервере
Процедура ОбновитьИсточникиДанныхПоказательОтбор(Отказ)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетов.Ссылка КАК Ссылка,
	|	ИсточникиДанныхДляРасчетов.НазначениеРасчетов КАК НазначениеРасчетов
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК ИсточникиДанныхДляРасчетов
	|ГДЕ
	|	ИсточникиДанныхДляРасчетов.ПоказательОтбор = &ПоказательОтбор";
	
	Запрос.УстановитьПараметр("ПоказательОтбор",Объект.ПоказательИсточник);
	
	МассивПравил=Новый Массив;
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ИсточникОбъект=Результат.Ссылка.ПолучитьОбъект();
		
		Попытка
			
			ИсточникОбъект.Записать();
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при переносе показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
			Отказ=Истина;
			Возврат;
			
		КонецПопытки;
		
		Если МассивПравил.Найти(Результат.НазначениеРасчетов)=Неопределено Тогда
			
			МассивПравил.Добавить(Результат.НазначениеРасчетов);
			
		КонецЕсли;

	КонецЦикла;	
	
	Для Каждого Правило ИЗ МассивПравил Цикл
		
		УправлениеОтчетамиУХ.СформироватьДанныеРегистраПараметрическихНастроек(Правило);
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьИсточникиДанныхПоказательОтбор() 

&НаСервере
Процедура ПеренестиПроцедуруРасчета(ПравилоИсточник,ПравилоПриемник,Копирование,Отказ)
	
	////////////////////////////////////////////////////////////////
	// Переносим / копируем источники данных
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК ИсточникиДанныхДляРасчетов
	|ГДЕ
	|	ИсточникиДанныхДляРасчетов.НазначениеРасчетов = &НазначениеРасчетов
	|	И ИсточникиДанныхДляРасчетов.ПотребительРасчета = &ПотребительРасчета";
	
	Запрос.УстановитьПараметр("НазначениеРасчетов",ПравилоИсточник);
	Запрос.УстановитьПараметр("ПотребительРасчета",Объект.ПоказательИсточник);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	СоответствиеКодов=Новый Соответствие;
	
	Пока Результат.Следующий() Цикл
		
		Если Копирование Тогда
			
			ИсточникОбъект=Результат.Ссылка.Скопировать();
			
		Иначе
			
			ИсточникОбъект=Результат.Ссылка.ПолучитьОбъект();
			
		КонецЕсли;
		
		ИсточникОбъект.НазначениеРасчетов=ПравилоПриемник;
		ИсточникОбъект.ПотребительРасчета=НовыйПоказатель;
		
		КодУпрощеннойФормулыСтар=ИсточникОбъект.КодУпрощеннойФормулы;
		
		Попытка
			
			ИсточникОбъект.Записать();
			СоответствиеКодов.Вставить(КодУпрощеннойФормулыСтар,ИсточникОбъект.КодУпрощеннойФормулы);
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
			Отказ=Истина;
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
	////////////////////////////////////////////////////////////////
	// Переносим / копируем процедуру расчетов
	
	НаборЗаписейИсточник=РегистрыСведений.ПроцедурыРасчетов.СоздатьНаборЗаписей();
	НаборЗаписейИсточник.Отбор.НазначениеРасчетов.Установить(ПравилоИсточник);
	НаборЗаписейИсточник.Отбор.ПотребительРасчета.Установить(Объект.ПоказательИсточник);
	
	НаборЗаписейИсточник.Прочитать();
	
	Если НаборЗаписейИсточник.Количество()=1 Тогда
		
		НаборЗаписейПриемник=РегистрыСведений.ПроцедурыРасчетов.СоздатьНаборЗаписей();
		НаборЗаписейПриемник.Отбор.НазначениеРасчетов.Установить(ПравилоПриемник);
		НаборЗаписейПриемник.Отбор.ПотребительРасчета.Установить(НовыйПоказатель);

		НоваяСтрока=НаборЗаписейПриемник.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,НаборЗаписейИсточник[0]);
		НоваяСтрока.НазначениеРасчетов=ПравилоПриемник;
		НоваяСтрока.ПотребительРасчета=НовыйПоказатель;
		
		НаборЗаписейПриемник.Записать();
		
		Если НЕ Копирование Тогда
			
			НаборЗаписейИсточник.Очистить();
			НаборЗаписейИсточник.Записать();
						
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПеренестиПроцедуруРасчета()

&НаСервере
Процедура ПеренестиЗначенияПоказателя(Отказ)
	
	Если НовыйПоказатель.ТипЗначения=Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда
		
		ПеренестиЗначенияЧисловогоПоказателя(Отказ);
		
	Иначе
		
		ПеренестиЗначенияНеЧисловогоПоказателя(Отказ);
		
	КонецЕсли;
	
КонецПроцедуры // ПеренестиЗначенияПоказателя() 

&НаСервере
Процедура ПеренестиЗначенияЧисловогоПоказателя(Отказ)
		
	ИмяТаблицыСинтетики=?(АналитикВидаОтчетаИсточник=0,"ЗначенияПоказателейОтчетовСинтетика","ЗначенияПоказателейОтчетов"+АналитикВидаОтчетаИсточник);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Валюта КАК Валюта,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Организация КАК Организация,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ПериодОтчета КАК ПериодОтчета,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Сценарий КАК Сценарий,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Проект КАК Проект,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика1 КАК Аналитика1,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика2 КАК Аналитика2,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика3 КАК Аналитика3,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика4 КАК Аналитика4,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика5 КАК Аналитика5,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика6 КАК Аналитика6,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ЗаписьВДополнительнойВалюте КАК ЗаписьВДополнительнойВалюте,
	|	СУММА(ЗначенияПоказателейОтчетовСинтетика.Значение) КАК Значение,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ОсновнаяВерсия КАК ОсновнаяВерсия,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Активность КАК Активность
	|ИЗ
	|	РегистрСведений."+ИмяТаблицыСинтетики+" КАК ЗначенияПоказателейОтчетовСинтетика
	|ГДЕ
	|	ЗначенияПоказателейОтчетовСинтетика.Показатель = &Показатель
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Валюта,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Организация,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ПериодОтчета,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Сценарий,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Проект,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика1,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика2,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика3,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика4,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика5,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Аналитика6,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ЗаписьВДополнительнойВалюте,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.ОсновнаяВерсия,
	|	ЗначенияПоказателейОтчетовСинтетика.Версия.Активность";
	
	Запрос.УстановитьПараметр("Показатель",Объект.ПоказательИсточник);
	
	ТабВерсии=Запрос.Выполнить().Выгрузить();
	Табверсии.Колонки.Добавить("НоваяВерсия",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.ВерсииЗначенийПоказателей"));
	
	Для Каждого СтрВерсия ИЗ Табверсии Цикл
		
		СтрВерсия.НоваяВерсия=ПолучитьНовуюВерсию(СтрВерсия,Отказ);
		
		Если НЕ ЗначениеЗаполнено(СтрВерсия.НоваяВерсия) Тогда
			
			Отказ=Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписатьЗначенияПоказателейВРегистр(ИмяТаблицыСинтетики,Табверсии,Истина);
	
	Если ЧислоАналитикГруппыРаскрытия>0 ИЛИ Валютная Тогда
		
		ИмяТаблицыАналитики=?(ЧислоАналитикГруппыРаскрытия=0,"ЗначенияПоказателейОтчетовВалютные","ЗначенияПоказателейОтчетов"+ЧислоАналитикГруппыРаскрытия);
		
		ЗапросРаскрытие=Новый Запрос;
		ЗапросРаскрытие.Текст="ВЫБРАТЬ
		|	ТабВерсии.Валюта КАК Валюта,
		|	ТабВерсии.Организация КАК Организация,
		|	ТабВерсии.ПериодОтчета КАК ПериодОтчета,
		|	ТабВерсии.Сценарий КАК Сценарий,
		|	ТабВерсии.Проект КАК Проект,
		|	ТабВерсии.Аналитика1 КАК Аналитика1,
		|	ТабВерсии.Аналитика2 КАК Аналитика2,
		|	ТабВерсии.Аналитика3 КАК Аналитика3,
		|	ТабВерсии.Аналитика4 КАК Аналитика4,
		|	ТабВерсии.Аналитика5 КАК Аналитика5,
		|	ТабВерсии.Аналитика6 КАК Аналитика6,
		|	ТабВерсии.НоваяВерсия КАК НоваяВерсия
		|ПОМЕСТИТЬ ТабВерсии
		|ИЗ
		|	&ТабВерсии КАК ТабВерсии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначениеПоказателейРаскрытие.Версия.Валюта КАК Валюта,
		|	ЗначениеПоказателейРаскрытие.Версия.Организация КАК Организация,
		|	ЗначениеПоказателейРаскрытие.Версия.ПериодОтчета КАК ПериодОтчета,
		|	ЗначениеПоказателейРаскрытие.Версия.Сценарий КАК Сценарий,
		|	ЗначениеПоказателейРаскрытие.Версия.Проект КАК Проект,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика1 КАК ВерсияАналитика1,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика2 КАК ВерсияАналитика2,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика3 КАК ВерсияАналитика3,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика4 КАК ВерсияАналитика4,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика5 КАК ВерсияАналитика5,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика6 КАК ВерсияАналитика6,
		|	ЗначениеПоказателейРаскрытие.АналитикаВалюта КАК АналитикаВалюта,";
		
		Для Индекс=1 По ЧислоАналитикГруппыРаскрытия Цикл
			
			ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+"
			|	ЗначениеПоказателейРаскрытие.Аналитика"+Индекс+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+"
		|	СУММА(ЗначениеПоказателейРаскрытие.Значение) КАК Значение,
		|	СУММА(ЗначениеПоказателейРаскрытие.ЗначениеВалюта) КАК ЗначениеВалюта
		|ПОМЕСТИТЬ ЗапросРаскрытие
		|ИЗ
		|	РегистрСведений."+ИмяТаблицыАналитики+" КАК ЗначениеПоказателейРаскрытие
		|ГДЕ
		|	ЗначениеПоказателейРаскрытие.Показатель = &Показатель
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначениеПоказателейРаскрытие.Версия.Валюта,
		|	ЗначениеПоказателейРаскрытие.Версия.ПериодОтчета,
		|	ЗначениеПоказателейРаскрытие.Версия.Организация,
		|	ЗначениеПоказателейРаскрытие.Версия.Сценарий,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика2,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика1,
		|	ЗначениеПоказателейРаскрытие.Версия.Проект,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика3,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика5,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика4,
		|	ЗначениеПоказателейРаскрытие.Версия.Аналитика6,
		|	ЗначениеПоказателейРаскрытие.АналитикаВалюта";
			
		Для Индекс=1 По ЧислоАналитикГруппыРаскрытия Цикл
			
			ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+",
			|	ЗначениеПоказателейРаскрытие.Аналитика"+Индекс;
			
		КонецЦикла;
		
		ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабВерсии.НоваяВерсия КАК НоваяВерсия,
		|	ЗапросРаскрытие.АналитикаВалюта КАК АналитикаВалюта,";
		
		Для Индекс=1 По ЧислоАналитикГруппыРаскрытия Цикл
			
			ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+"
			|	ЗапросРаскрытие.Аналитика"+Индекс+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ЗапросРаскрытие.Текст=ЗапросРаскрытие.Текст+"
		|	ЗапросРаскрытие.Значение КАК Значение,
		|	ЗапросРаскрытие.ЗначениеВалюта КАК ЗначениеВалюта
		|ИЗ
		|	ЗапросРаскрытие КАК ЗапросРаскрытие
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабВерсии КАК ТабВерсии
		|		ПО ЗапросРаскрытие.Валюта = ТабВерсии.Валюта
		|			И ЗапросРаскрытие.Организация = ТабВерсии.Организация
		|			И ЗапросРаскрытие.ПериодОтчета = ТабВерсии.ПериодОтчета
		|			И ЗапросРаскрытие.Сценарий = ТабВерсии.Сценарий
		|			И ЗапросРаскрытие.Проект = ТабВерсии.Проект
		|			И ЗапросРаскрытие.ВерсияАналитика1 = ТабВерсии.Аналитика1
		|			И ЗапросРаскрытие.ВерсияАналитика2 = ТабВерсии.Аналитика2
		|			И ЗапросРаскрытие.ВерсияАналитика3 = ТабВерсии.Аналитика3
		|			И ЗапросРаскрытие.ВерсияАналитика4 = ТабВерсии.Аналитика4
		|			И ЗапросРаскрытие.ВерсияАналитика5 = ТабВерсии.Аналитика5
		|			И ЗапросРаскрытие.ВерсияАналитика6 = ТабВерсии.Аналитика6";
		
		ЗапросРаскрытие.УстановитьПараметр("Показатель",Объект.ПоказательИсточник);
		ЗапросРаскрытие.УстановитьПараметр("ТабВерсии",ТабВерсии);
		
		ТаблицаАналитики=ЗапросРаскрытие.Выполнить().Выгрузить();
		
		ЗаписатьЗначенияПоказателейВРегистр(ИмяТаблицыАналитики,ТаблицаАналитики,Ложь);
			
	КонецЕсли;
			
КонецПроцедуры // ПеренестиЗначенияЧисловогоПоказателя()

&НаСервере
Процедура ЗаписатьЗначенияПоказателейВРегистр(ИмяТаблицы,ТаблицаПоказателей,ИтоговоеЗначение=Ложь)
	
	// Очищаем старые значения показателей
		
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияПоказателейОтчетов.Версия КАК Версия
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов КАК ЗначенияПоказателейОтчетов
	|ГДЕ
	|	ЗначенияПоказателейОтчетов.Показатель = &Показатель";
	
	Запрос.УстановитьПараметр("Показатель",Объект.ПоказательИсточник);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НаборЗаписей=РегистрыСведений[ИмяТаблицы].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Версия.Установить(Результат.Версия);
		НаборЗаписей.Отбор.Показатель.Установить(Объект.ПоказательИсточник);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
	// Записываем новые значения

	ТабВерсии=ТаблицаПоказателей.Скопировать(,"НоваяВерсия");
	ТабВерсии.Свернуть("НоваяВерсия");
	
	Для Каждого СтрВерсия ИЗ Табверсии Цикл
		
		НаборЗаписей=РегистрыСведений[ИмяТаблицы].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Версия.Установить(СтрВерсия.НоваяВерсия);
		НаборЗаписей.Отбор.Показатель.Установить(НовыйПоказатель);
		
		ТекТаблицаЗаписей=ТаблицаПоказателей.НайтиСтроки(Новый Структура("НоваяВерсия",СтрВерсия.НоваяВерсия));
		
		Для Каждого Строка ИЗ ТекТаблицаЗаписей Цикл
			
			НоваяСтрока=НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			НоваяСтрока.Версия=СтрВерсия.НоваяВерсия;
			НоваяСтрока.Показатель=НовыйПоказатель;
			
			Если НЕ ИмяТаблицы="ЗначенияПоказателейОтчетовСинтетика" Тогда
				
				Если ТаблицаПоказателей.Колонки.Найти("ИтоговоеЗначение")=Неопределено Тогда 
					
					НоваяСтрока.ИтоговоеЗначение=ИтоговоеЗначение;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
				
КонецПроцедуры // ЗаписатьЗначенияПоказателейВРегистр() 

&НаСервере
Функция ПолучитьНовуюВерсию(ВерсияСтар,Отказ)
	
	ОписаниеВерсии=ПолучитьНовоеОписаниеВерсии(ВерсияСтар);
		
	Если НЕ Объект.ВидОтчетаПриемник.СохранятьИсториюИзменений Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ВерсииЗначенийПоказателей.Ссылка,
		|	ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
		|ИЗ
		|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
		|ГДЕ
		|	НЕ ВерсииЗначенийПоказателей.ПометкаУдаления
		|	И НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
		|	И ВерсииЗначенийПоказателей.Владелец = &Владелец
		|	И НЕ ВерсииЗначенийПоказателей.ПометкаУдаления
		|	И ВерсииЗначенийПоказателей.Организация = &Организация
		|	И ВерсииЗначенийПоказателей.ВидОтчета = &ВидОтчета
		|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
		|	И ВерсииЗначенийПоказателей.Сценарий = &Сценарий
		|	И ВерсииЗначенийПоказателей.ОсновнаяВерсия = &ОсновнаяВерсия
		|	И ВерсииЗначенийПоказателей.Валюта = &Валюта
		|	И ВерсииЗначенийПоказателей.Проект = &Проект";
		
		Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			Запрос.Текст=Запрос.Текст+"		
			|	И ВерсииЗначенийПоказателей.Аналитика"+Индекс+" = &Аналитика"+Индекс;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Владелец",		ОписаниеВерсии);
		Запрос.УстановитьПараметр("Валюта",			ВерсияСтар.Валюта);
		Запрос.УстановитьПараметр("ОсновнаяВерсия",	ВерсияСтар.ОсновнаяВерсия);
		Запрос.УстановитьПараметр("Организация",	ВерсияСтар.Организация);
		Запрос.УстановитьПараметр("ВидОтчета",		Объект.ВидОтчетаПриемник);
		Запрос.УстановитьПараметр("ПериодОтчета",	ВерсияСтар.ПериодОтчета);
		Запрос.УстановитьПараметр("Сценарий",		ВерсияСтар.Сценарий);
		Запрос.УстановитьПараметр("Проект",			ВерсияСтар.Проект);
		
		Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
				
			Запрос.УстановитьПараметр("Аналитика"+Индекс,ВерсияСтар["Аналитика"+Индекс]);
							
		КонецЦикла;		
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			Если НЕ Результат.ЗаписьВДополнительнойВалюте=ВерсияСтар.ЗаписьВДополнительнойВалюте Тогда
				
				СправочникОбъект=Результат.Ссылка.ПолучитьОбъект();
				СправочникОбъект.ЗаписьВДополнительнойВалюте=ВерсияСтар.ЗаписьВДополнительнойВалюте;
				СправочникОбъект.ОбменДанными.Загрузка=Истина;
				СправочникОбъект.Записать();
				
				Возврат СправочникОбъект.Ссылка;
				
				СправочникОбъект=0;
				
			Иначе
				
				Возврат Результат.Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Версия = Справочники.ВерсииЗначенийПоказателей.СоздатьЭлемент();
	
	Попытка
		
		Версия.Организация     	= ВерсияСтар.Организация;
		Версия.ВидОтчета       	= Объект.ВидОтчетаПриемник;
		Версия.Валюта          	= ВерсияСтар.Валюта;
		Версия.Владелец        	= ОписаниеВерсии;
		Версия.ПериодОтчета    	= ВерсияСтар.ПериодОтчета;
		Версия.Сценарий        	= ВерсияСтар.Сценарий;
		Версия.Проект        	= ВерсияСтар.Проект;
		
		Версия.Активность      	= ВерсияСтар.Активность;
		Версия.ВидОперации		= Справочники.ВидыОпераций.УчетныеОперации;
		Версия.ОсновнаяВерсия	= Истина ;
		Версия.ЗаписьВДополнительнойВалюте = ВерсияСтар.ЗаписьВДополнительнойВалюте;
		
		Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			Версия["Аналитика"+Индекс]=ВерсияСтар["Аналитика"+Индекс];
			
		КонецЦикла; 
		
		Версия.Записать();
		
	Исключение
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при создании версии показателей: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), Отказ,,СтатусСообщения.Важное);
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат Версия.Ссылка;
	
КонецФункции // 

&НаСервере
Функция ПолучитьНовоеОписаниеВерсии(ОписаниеВерсииСтар)
	
	Если НЕ Объект.ВидОтчетаПриемник.СохранятьИсториюИзменений Тогда		
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ОписаниеВерсий.Ссылка
		|ИЗ
		|	Справочник.ОписаниеВерсий КАК ОписаниеВерсий
		|ГДЕ
		|	НЕ ОписаниеВерсий.ПометкаУдаления
		|	И НЕ ОписаниеВерсий.ЧерноваяВерсия
		|	И ОписаниеВерсий.ОсновноеОписаниеВерсии
		|	И ОписаниеВерсий.Организация = &Организация
		|	И ОписаниеВерсий.ВидОтчета = &ВидОтчета
		|	И ОписаниеВерсий.ПериодОтчета = &ПериодОтчета
		|	И ОписаниеВерсий.Сценарий = &Сценарий
		|	И ОписаниеВерсий.Проект = &Проект";
		
		Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			Запрос.Текст=Запрос.Текст+"		
			|	И ОписаниеВерсий.Аналитика"+Индекс+" = &Аналитика"+Индекс;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Организация",	ОписаниеВерсииСтар.Организация);
		Запрос.УстановитьПараметр("ВидОтчета",		Объект.ВидОтчетаПриемник);
		Запрос.УстановитьПараметр("ПериодОтчета",	ОписаниеВерсииСтар.ПериодОтчета);
		Запрос.УстановитьПараметр("Сценарий",		ОписаниеВерсииСтар.Сценарий);
		Запрос.УстановитьПараметр("Проект",			ОписаниеВерсииСтар.Проект);
						
		Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			Запрос.УстановитьПараметр("Аналитика"+Индекс,ОписаниеВерсииСтар["Аналитика"+Индекс]);
					
		КонецЦикла;
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			Возврат Результат.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
		
	ОписаниеВерсии = Справочники.ОписаниеВерсий.СоздатьЭлемент();
	ОписаниеВерсии.Организация     			= 	ОписаниеВерсииСтар.Организация;
	ОписаниеВерсии.ВидОтчета       			=	Объект.ВидОтчетаПриемник;
	ОписаниеВерсии.ПериодОтчета    			= 	ОписаниеВерсииСтар.ПериодОтчета;
	ОписаниеВерсии.Сценарий        			= 	ОписаниеВерсииСтар.Сценарий;
	ОписаниеВерсии.Проект        			= 	ОписаниеВерсииСтар.Проект;
	
	ОписаниеВерсии.ОсновноеОписаниеВерсии	= 	НЕ Объект.ВидОтчетаПриемник.СохранятьИсториюИзменений;
	ОписаниеВерсии.Автор 					= 	Пользователи.ТекущийПользователь();
		
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ОписаниеВерсии["Аналитика"+Индекс]=ОписаниеВерсииСтар["Аналитика"+Индекс];
		
	КонецЦикла; 
	
	ОписаниеВерсии.Дата        = ТекущаяДата();
	ОписаниеВерсии.Записать();
	
	Возврат ОписаниеВерсии.Ссылка;
	
КонецФункции // ПолучитьНовоеОписаниеВерсии()

Процедура ПеренестиЗначенияНеЧисловогоПоказателя(Отказ)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Валюта КАК Валюта,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Организация КАК Организация,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ПериодОтчета,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Сценарий КАК Сценарий,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Активность КАК Активность,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Проект КАК Проект,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика1 КАК Аналитика1,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика2 КАК Аналитика2,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика3 КАК Аналитика3,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика4 КАК Аналитика4,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика5 КАК Аналитика5,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика6 КАК Аналитика6,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ОсновнаяВерсия КАК ОсновнаяВерсия,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ЗаписьВДополнительнойВалюте КАК ЗаписьВДополнительнойВалюте,
	|	МАКСИМУМ(ЗначенияПоказателейОтчетовНечисловые.Версия.Код) КАК Код
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	|ГДЕ
	|	ЗначенияПоказателейОтчетовНечисловые.Показатель = &Показатель
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ЗаписьВДополнительнойВалюте,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Сценарий,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Активность,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Проект,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика2,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика1,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика4,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика5,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика6,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ОсновнаяВерсия,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика3,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Организация,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Валюта";
	
	Запрос.УстановитьПараметр("Показатель",Объект.ПоказательИсточник);
	
	ТабВерсии=Запрос.Выполнить().Выгрузить();
	Табверсии.Колонки.Добавить("НоваяВерсия",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.ВерсииЗначенийПоказателей"));
	
	Для Каждого СтрВерсия ИЗ Табверсии Цикл
		
		СтрВерсия.НоваяВерсия=ПолучитьНовуюВерсию(СтрВерсия,Отказ);
		
		Если НЕ ЗначениеЗаполнено(СтрВерсия.НоваяВерсия) Тогда
			
			Отказ=Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗапросДанные=Новый Запрос;
	ЗапросДанные.Текст="ВЫБРАТЬ
	|	ТабВерсии.Валюта КАК Валюта,
	|	ТабВерсии.Организация КАК Организация,
	|	ТабВерсии.ПериодОтчета КАК ПериодОтчета,
	|	ТабВерсии.Сценарий КАК Сценарий,
	|	ТабВерсии.Проект КАК Проект,
	|	ТабВерсии.Аналитика1 КАК Аналитика1,
	|	ТабВерсии.Аналитика2 КАК Аналитика2,
	|	ТабВерсии.Аналитика3 КАК Аналитика3,
	|	ТабВерсии.Аналитика4 КАК Аналитика4,
	|	ТабВерсии.Аналитика5 КАК Аналитика5,
	|	ТабВерсии.Аналитика6 КАК Аналитика6,
	|	ТабВерсии.Код КАК Код,
	|	ТабВерсии.НоваяВерсия КАК НоваяВерсия
	|ПОМЕСТИТЬ ТабВерсии
	|ИЗ
	|	&ТабВерсии КАК ТабВерсии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Валюта КАК ВерсияВалюта,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Организация КАК ВерсияОрганизация,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Сценарий КАК ВерсияСценарий,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Проект КАК ВерсияПроект,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика1 КАК ВерсияАналитика1,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика2 КАК ВерсияАналитика2,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика3 КАК ВерсияАналитика3,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика4 КАК ВерсияАналитика4,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика5 КАК ВерсияАналитика5,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Аналитика6 КАК ВерсияАналитика6,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Аналитика1,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК Аналитика2,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК Аналитика3,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК Аналитика4,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика5 КАК Аналитика5,
	|	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Аналитика6,
	|	ЗначенияПоказателейОтчетовНечисловые.АналитикаВалюта КАК АналитикаВалюта,
	|	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
	|	ЗначенияПоказателейОтчетовНечисловые.Версия.Код КАК ВерсияКод,
	|	ЗначенияПоказателейОтчетовНечисловые.ИтоговоеЗначение КАК ИтоговоеЗначение
	|ПОМЕСТИТЬ ТабДанные
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	|ГДЕ
	|	ЗначенияПоказателейОтчетовНечисловые.Показатель = &Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДанные.Аналитика1 КАК Аналитика1,
	|	ТабДанные.Аналитика2 КАК Аналитика2,
	|	ТабДанные.Аналитика3 КАК Аналитика3,
	|	ТабДанные.Аналитика4 КАК Аналитика4,
	|	ТабДанные.Аналитика5 КАК Аналитика5,
	|	ТабДанные.Аналитика6 КАК Аналитика6,
	|	ТабДанные.АналитикаВалюта КАК АналитикаВалюта,
	|	ТабДанные.Значение КАК Значение,
	|	ТабДанные.ИтоговоеЗначение КАК ИтоговоеЗначение,
	|	ТабВерсии.НоваяВерсия КАК НоваяВерсия
	|ИЗ
	|	ТабДанные КАК ТабДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабВерсии КАК ТабВерсии
	|		ПО ТабДанные.ВерсияВалюта = ТабВерсии.Валюта
	|			И ТабДанные.ВерсияОрганизация = ТабВерсии.Организация
	|			И ТабДанные.ВерсияПериодОтчета = ТабВерсии.ПериодОтчета
	|			И ТабДанные.ВерсияСценарий = ТабВерсии.Сценарий
	|			И ТабДанные.ВерсияПроект = ТабВерсии.Проект
	|			И ТабДанные.ВерсияАналитика1 = ТабВерсии.Аналитика1
	|			И ТабДанные.ВерсияАналитика2 = ТабВерсии.Аналитика2
	|			И ТабДанные.ВерсияАналитика3 = ТабВерсии.Аналитика3
	|			И ТабДанные.ВерсияАналитика4 = ТабВерсии.Аналитика4
	|			И ТабДанные.ВерсияАналитика5 = ТабВерсии.Аналитика5
	|			И ТабДанные.ВерсияАналитика6 = ТабВерсии.Аналитика6
	|			И ТабДанные.ВерсияКод = ТабВерсии.Код";
	
	ЗапросДанные.УстановитьПараметр("Показатель",Объект.ПоказательИсточник);
	ЗапросДанные.УстановитьПараметр("ТабВерсии",ТабВерсии);
	
	ТаблицаДанных=Запрос.Выполнить().Выгрузить();
	
	ЗаписатьЗначенияПоказателейВРегистр("ЗначенияПоказателейОтчетовНечисловые",ТаблицаДанных,Ложь);
	
КонецПроцедуры // ПеренестиЗначенияНеЧисловогоПоказателя()

&НаСервере
Процедура ПеренестиКонтрольныеСоотношения(ПравилоИсточник,ПравилоПриемник,Копирование,Отказ)
	
	ПравилоОбъектИсточник=ПравилоИсточник.ПолучитьОбъект();
	ПравилоОбъектПриемник=ПравилоПриемник.ПолучитьОбъект();
	
	МассивСоотношений=ПравилоОбъектИсточник.КонтролируемыеПоказателиОтчетов.НайтиСтроки(Новый Структура("ПоказательОтчета",Объект.ПоказательИсточник));
	
	Для Каждого Соотношение ИЗ МассивСоотношений Цикл
		
		НоваяСтрока=ПравилоОбъектПриемник.КонтролируемыеПоказателиОтчетов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Соотношение);
		НоваяСтрока.ПоказательОтчета=НовыйПоказатель;
		
	КонецЦикла;
	
	Попытка
		
		ПравилоОбъектПриемник.Записать();
		
	Исключение
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
		Отказ=Истина;
		Возврат;
		
	КонецПопытки;
	
	Если Не Копирование Тогда
		
		Для Каждого Соотношение ИЗ МассивСоотношений Цикл
			
			ПравилоОбъектИсточник.КонтролируемыеПоказателиОтчетов.Удалить(Соотношение);
			
		КонецЦикла;
		
		Попытка
			
			ПравилоОбъектИсточник.Записать();
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке("Ошибка при "+?(Копирование,"копировании","переносе")+" показателя: "+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Важное);
			Отказ=Истина;
			Возврат;
			
		КонецПопытки;
		
	КонецЕсли;
		
КонецПроцедуры // ПеренестиКонтрольныеСоотношения() 

&НаСервере	
Процедура ЗаполнитьРеквизитыПоСтроке(ТекОбъект,Строка)
	
	МассивРеквизитов=Новый Массив;
	МассивРеквизитов.Добавить("ГруппаРаскрытия");
	МассивРеквизитов.Добавить("ВидПоказателя");
	МассивРеквизитов.Добавить("Предназначение");
	МассивРеквизитов.Добавить("ПриходРасход");
	МассивРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивРеквизитов.Добавить("СтатьяДоходовИРасходов");
	МассивРеквизитов.Добавить("СтатьяДвиженияРесурсов");
	МассивРеквизитов.Добавить("ОценкаПоложительногоОтклонения");
	МассивРеквизитов.Добавить("СчетБД");
	МассивРеквизитов.Добавить("РазделениеПоПроектам");
	
	РеквизитыСтроки=ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка,МассивРеквизитов);
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ГруппаРаскрытия) Тогда
		
		ТекОбъект.ГруппаРаскрытия=РеквизитыСтроки.ГруппаРаскрытия;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ВидПоказателя) Тогда
		
		ТекОбъект.ВидПоказателя=РеквизитыСтроки.ВидПоказателя;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.Предназначение) Тогда
		
		ТекОбъект.Предназначение=РеквизитыСтроки.Предназначение;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ПриходРасход) Тогда
		
		ТекОбъект.ПриходРасход=РеквизитыСтроки.ПриходРасход;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.СтатьяДвиженияДенежныхСредств) Тогда
		
		ТекОбъект.СтатьяДвиженияДенежныхСредств=РеквизитыСтроки.СтатьяДвиженияДенежныхСредств;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.СтатьяДоходовИРасходов) Тогда
		
		ТекОбъект.СтатьяДоходовИРасходов=РеквизитыСтроки.СтатьяДоходовИРасходов;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.СтатьяДвиженияРесурсов) Тогда
		
		ТекОбъект.СтатьяДвиженияРесурсов=РеквизитыСтроки.СтатьяДвиженияРесурсов;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.ОценкаПоложительногоОтклонения) Тогда
		
		ТекОбъект.ОценкаПоложительногоОтклонения=РеквизитыСтроки.ОценкаПоложительногоОтклонения;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыСтроки.СчетБД) Тогда
		
		ТекОбъект.СчетБД=РеквизитыСтроки.СчетБД;
		
	КонецЕсли;
	
	ТекОбъект.РазделениеПоПроектам=РеквизитыСтроки.РазделениеПоПроектам;
		
КонецПроцедуры // ЗаполнитьРеквизитыПоСтроке()
	

&НаКлиенте
Процедура ВыполнитьПеренос(Команда)
	
	СоздатьНовыйПоказатель();
	
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	
	СоздатьНовыйПоказатель(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.НовыйПоказатель.Видимость=Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОбработкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя="ПравилаОбработкиПравилоИсточник" Тогда
		
		ПоказатьЗначение(,Элементы.ПравилаОбработки.ТекущиеДанные.ПравилоИсточник);
		
	КонецЕсли;
	
КонецПроцедуры
