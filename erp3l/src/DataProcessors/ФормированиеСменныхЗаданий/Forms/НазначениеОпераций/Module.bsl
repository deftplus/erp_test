
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.КлючиОпераций) <> Тип("Массив")
		ИЛИ Параметры.КлючиОпераций.ВГраница() = -1 Тогда
		
		ВызватьИсключение НСтр("ru = 'Не переданы операции для назначения';
								|en = 'Operations to assign are not transferred'");
		
	КонецЕсли;
	
	КлючиОпераций = Параметры.КлючиОпераций;
	Подразделение = Параметры.Подразделение;
	
	ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(Подразделение);
	ИспользоватьФизЛиц = ПараметрыПодразделения.ИспользоватьПерсональныеНаряды;
	ИспользоватьУчастки = ПараметрыПодразделения.ИспользоватьУчастки;
	ДанныеОперации = Неопределено;
	
	Если НЕ Параметры.СменноеЗадание.Пустая() И ИспользоватьУчастки Тогда
		Участок = ЗначениеРеквизитаОбъекта(Параметры.СменноеЗадание, "Участок");
	КонецЕсли;
	
	ГрупповоеНазначение = КлючиОпераций.Количество() > 1;
	
	Если ГрупповоеНазначение Тогда
		
		Заголовок = СтрШаблон(НСтр("ru = 'Назначение операций (%1 шт)';
									|en = 'Operation assignment (%1 pcs)'"), КлючиОпераций.Количество());
		
		ОдинИсполнитель = Истина;
		ОдинВидРЦ       = Истина;
		ОдинРЦ          = Истина;
		
		Для Индекс = 1 По КлючиОпераций.ВГраница() Цикл
			
			ОдинИсполнитель = ОдинИсполнитель И КлючиОпераций[0].Исполнитель = КлючиОпераций[Индекс].Исполнитель;
			ОдинВидРЦ       = ОдинВидРЦ И КлючиОпераций[0].ВидРабочегоЦентра = КлючиОпераций[Индекс].ВидРабочегоЦентра;
			ОдинРЦ          = ОдинРЦ И КлючиОпераций[0].РабочийЦентр = КлючиОпераций[Индекс].РабочийЦентр;
			
		КонецЦикла;
		
		Если ОдинИсполнитель И НЕ КлючиОпераций[0].Исполнитель.Пустая() Тогда
			НазначитьИсполнителя = Истина;
			Исполнитель = КлючиОпераций[0].Исполнитель;
		КонецЕсли;
		
		Если ОдинВидРЦ И НЕ КлючиОпераций[0].ВидРабочегоЦентра.Пустая() Тогда
			НазначитьВидРабочегоЦентра = Истина;
			ВидРабочегоЦентра = КлючиОпераций[0].ВидРабочегоЦентра;
		КонецЕсли;
		
		Если ОдинРЦ
			И НЕ КлючиОпераций[0].РабочийЦентр.Пустая()
			И (Участок.Пустая() ИЛИ ЗначениеРеквизитаОбъекта(КлючиОпераций[0].РабочийЦентр, "Участок") = Участок) Тогда
			НазначитьРабочийЦентр = Истина;
			РабочийЦентр = КлючиОпераций[0].РабочийЦентр;
		КонецЕсли;
		
	Иначе
		
		Заголовок = НСтр("ru = 'Назначение операции';
						|en = 'Operation assignment'");
		
		ДанныеОперации = ДанныеОперацииПоКлючу(КлючиОпераций[0], ИспользоватьФизЛиц);
		
		Если ДанныеОперации <> Неопределено Тогда
			
			ИсключаяСвойства = "";
			Если НЕ Участок.Пустая()
				И ЗначениеРеквизитаОбъекта(ДанныеОперации.РабочийЦентр, "Участок") <> Участок Тогда
				ИсключаяСвойства = "РабочийЦентр";
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеОперации,, ИсключаяСвойства);
			
			ЭтапПредставление = Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(Этап);
			
			ВремяВыполнения = ОперативныйУчетПроизводстваКлиентСервер.РассчитатьВремяОперацииОтКоличества(
				Количество,
				КоличествоШтучное,
				ВремяШтучное,
				ВремяПЗ,
				ПараллельнаяЗагрузка);
				
			РеквизитыМаршрута = Справочники.ТехнологическиеОперации.РеквизитыМаршрутаОперации(ДанныеОперации.ОперацияВладелец);
			Маршрут = РеквизитыМаршрута.Маршрут;
			Элементы.Маршрут.Гиперссылка = РеквизитыМаршрута.МаршрутДоступен;
			
		КонецЕсли;
		
		НазначитьИсполнителя       = Истина;
		НазначитьВидРабочегоЦентра = Истина;
		НазначитьРабочийЦентр      = Истина;
		
		НазначитьЧасть = Параметры.НазначитьЧасть;
		
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
	Если НЕ Параметры.СменноеЗадание.Пустая() Тогда
		СменноеЗадание = Параметры.СменноеЗадание;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Исполнитель) Тогда
		Исполнитель = Параметры.Исполнитель;
	ИначеЕсли Исполнитель = Неопределено Тогда
		Исполнитель = ?(ИспользоватьФизЛиц,
			Справочники.ФизическиеЛица.ПустаяСсылка(),
			Справочники.Бригады.ПустаяСсылка());
	КонецЕсли;
	
	Если НЕ Параметры.РабочийЦентр.Пустая()
		И (Участок.Пустая() ИЛИ ЗначениеРеквизитаОбъекта(Параметры.РабочийЦентр, "Участок") = Участок) Тогда
		РабочийЦентр = Параметры.РабочийЦентр;
	КонецЕсли;
	
	Если НЕ Параметры.ВидРабочегоЦентра.Пустая() Тогда
		ВидРабочегоЦентра = Параметры.ВидРабочегоЦентра;
	КонецЕсли;
	
	АдресКлючиОпераций = ПоместитьВоВременноеХранилище(КлючиОпераций, УникальныйИдентификатор);
	
	Если Параметры.ВыборИсполнителя Тогда
		ТекущийЭлемент = Элементы.Исполнитель;
	ИначеЕсли Параметры.ВыборРЦ Тогда
		ТекущийЭлемент = Элементы.РабочийЦентр;
	ИначеЕсли Параметры.ВыборВидаРЦ Тогда
		ТекущийЭлемент = Элементы.ВидРабочегоЦентра;
	ИначеЕсли Параметры.ВводКоличества Тогда
		ТекущийЭлемент = Элементы.Количество;
	Иначе
		ТекущийЭлемент = Элементы.СменноеЗадание;
	КонецЕсли;
	
	Связи = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		Новый СвязьПараметраВыбора("Отбор.ВидРабочегоЦентра", "ВидРабочегоЦентра"));
	Если ИспользоватьУчастки Тогда
		Связи.Добавить(Новый СвязьПараметраВыбора("Отбор.Участок", "Участок"));
	КонецЕсли;
	Элементы.РабочийЦентр.СвязиПараметровВыбора = Новый ФиксированныйМассив(Связи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ГрупповоеНазначение Тогда
		
		Индекс = ПроверяемыеРеквизиты.Найти("Количество");
		Если Индекс <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(Индекс);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ НазначитьИсполнителя
		И НЕ НазначитьВидРабочегоЦентра
		И НЕ НазначитьРабочийЦентр Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указан объект назначения';
				|en = 'Destination object is not specified'"),,,,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СменноеЗаданиеПриИзменении(Элемент)
	
	Если ИспользоватьУчастки Тогда
		
		РабочийЦентр = Неопределено;
		
		Если НЕ СменноеЗадание.Пустая() Тогда
			
			Участок = ЗначениеРеквизитаОбъекта(СменноеЗадание, "Участок");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИсполнительНачалоВыбораЗавершение", ЭтотОбъект);
	
	ПроизводствоКлиент.ОткрытьФормуВыбораИсполнителя(
		,
		Подразделение,
		Исполнитель,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		Исполнитель = Результат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ИсполнительПолучениеДанныхВыбора(ДанныеВыбора, Текст, Подразделение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ИсполнительПолучениеДанныхВыбора(ДанныеВыбора, Текст, Подразделение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ВремяВыполнения = ОперативныйУчетПроизводстваКлиентСервер.РассчитатьВремяОперацииОтКоличества(
		Количество,
		КоличествоШтучное,
		ВремяШтучное,
		ВремяПЗ,
		ПараллельнаяЗагрузка);
		
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Количество");
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяВыполненияПриИзменении(Элемент)
	
	Количество = ОперативныйУчетПроизводстваКлиентСервер.РассчитатьКоличествоОперацииОтВремени(
		ВремяВыполнения,
		ВремяШтучное,
		ВремяПЗ,
		КоличествоШтучное);
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Количество");
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьИсполнителяПриИзменении(Элемент)
	
	Элементы.Исполнитель.Доступность = НазначитьИсполнителя;
	
	Если НЕ НазначитьИсполнителя Тогда
		Исполнитель = ?(ИспользоватьФизЛиц,
			ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"),
			ПредопределенноеЗначение("Справочник.Бригады.ПустаяСсылка"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьВидРабочегоЦентраПриИзменении(Элемент)
	
	Элементы.ВидРабочегоЦентра.Доступность = НазначитьВидРабочегоЦентра;
	
	Если НЕ НазначитьВидРабочегоЦентра Тогда
		
		ВидРабочегоЦентра = Неопределено;
		
		Если НазначитьРабочийЦентр Тогда
			
			НазначитьРабочийЦентр = Ложь;
			Элементы.РабочийЦентр.Доступность = Ложь;
			РабочийЦентр = Неопределено;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьРабочийЦентрПриИзменении(Элемент)
	
	Элементы.РабочийЦентр.Доступность = НазначитьРабочийЦентр;
	
	Если НЕ НазначитьРабочийЦентр Тогда
		РабочийЦентр = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, Этап);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРабочегоЦентраПриИзменении(Элемент)
	
	Если НЕ ГрупповоеНазначение
		И НЕ ВидРабочегоЦентра.Пустая() Тогда
		
		ПараллельнаяЗагрузка = ПараллельнаяЗагрузка(ВидРабочегоЦентра);
		
		ВремяВыполнения = ОперативныйУчетПроизводстваКлиентСервер.РассчитатьВремяОперацииОтКоличества(
			Количество,
			КоличествоШтучное,
			ВремяШтучное,
			ВремяПЗ,
			ПараллельнаяЗагрузка);
			
		НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ПараллельнаяЗагрузка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(НазначитьНаСервере());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы() 
	
	Элементы.НазначитьИсполнителя.Видимость       = ГрупповоеНазначение;
	Элементы.НазначитьВидРабочегоЦентра.Видимость = ГрупповоеНазначение;
	Элементы.НазначитьРабочийЦентр.Видимость      = ГрупповоеНазначение;
	
	ПоказыватьЗаголовок = ?(ГрупповоеНазначение,
		ПоложениеЗаголовкаЭлементаФормы.Нет, ПоложениеЗаголовкаЭлементаФормы.Авто);
	Элементы.Исполнитель.ПоложениеЗаголовка       = ПоказыватьЗаголовок;
	Элементы.ВидРабочегоЦентра.ПоложениеЗаголовка = ПоказыватьЗаголовок;
	Элементы.РабочийЦентр.ПоложениеЗаголовка      = ПоказыватьЗаголовок;
	
	Элементы.Исполнитель.ПодсказкаВвода       = ?(ГрупповоеНазначение, НСтр("ru = 'Исполнитель';
																			|en = 'Assignee'"), "");
	Элементы.ВидРабочегоЦентра.ПодсказкаВвода = ?(ГрупповоеНазначение, НСтр("ru = 'Вид рабочего центра';
																			|en = 'Work center type'"), "");
	Элементы.РабочийЦентр.ПодсказкаВвода      = ?(ГрупповоеНазначение, НСтр("ru = 'Рабочий центр';
																			|en = 'Work center'"), "");
	
	Элементы.Исполнитель.Доступность       = НазначитьИсполнителя;
	Элементы.ВидРабочегоЦентра.Доступность = НазначитьВидРабочегоЦентра;
	Элементы.РабочийЦентр.Доступность      = НазначитьРабочийЦентр;
	
	Элементы.Количество.Видимость                    = НЕ ГрупповоеНазначение;
	Элементы.ЕдиницаИзмеренияПредставление.Видимость = НЕ ГрупповоеНазначение;
	Элементы.ВремяВыполнения.Видимость               = НЕ ГрупповоеНазначение;
	Элементы.ВремяВыполненияЕдИзм.Видимость          = НЕ ГрупповоеНазначение;
	Элементы.Операция.Видимость                      = НЕ ГрупповоеНазначение;
	Элементы.Маршрут.Видимость                       = НЕ ГрупповоеНазначение;
	Элементы.ЭтапПредставление.Видимость             = НЕ ГрупповоеНазначение;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")

	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	// Настройка элемента Количество
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("Количество") Тогда
		
		Форма.ЕдиницаИзмеренияПредставление = УправлениеПроизводствомКлиентСервер.ПредставлениеЕдиницыИзмеренияОперации(
			Форма.ЕдиницаИзмерения,
			Форма.Количество);
		
	КонецЕсли;
		
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("ПараллельнаяЗагрузка") Тогда
		
		Форма.Элементы.ВремяВыполнения.ТолькоПросмотр = Форма.ПараллельнаяЗагрузка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеОперацииПоКлючу(КлючОперации, ИспользоватьФизЛиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Операции.СменноеЗадание                         КАК СменноеЗадание,
		|	Операции.Этап                                   КАК Этап,
		|	ВЫБОР
		|		КОГДА Операции.Исполнитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|				И НЕ &ИспользоватьФизЛиц
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Бригады.ПустаяСсылка)
		|		ИНАЧЕ Операции.Исполнитель
		|	КОНЕЦ                                           КАК Исполнитель,
		|	Операции.РабочийЦентр                           КАК РабочийЦентр,
		|	Операции.ВидРабочегоЦентра                      КАК ВидРабочегоЦентра,
		|	Операции.ВидРабочегоЦентра.ПараллельнаяЗагрузка КАК ПараллельнаяЗагрузка,
		|	Операции.Операция                               КАК Операция,
		|	Операции.Количество                             КАК Количество,
		|	Операции.ВремяЕдИзм                             КАК ВремяВыполненияЕдИзм,
		|	Операции.ВремяШтучное                           КАК ВремяШтучное,
		|	Операции.ВремяПЗ                                КАК ВремяПЗ,
		|	Операции.Операция.Количество                    КАК КоличествоШтучное,
		|	Операции.Операция.Владелец                      КАК ОперацияВладелец,
		|	Операции.Операция.ЕдиницаИзмерения              КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.ОперацииКСозданиюСменныхЗаданий КАК Операции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
		|		ПО Операции.Операция = ТехнологическиеОперации.Ссылка
		|ГДЕ
		|	Операции.Подразделение = &Подразделение
		|	И Операции.Этап = &Этап
		|	И Операции.Операция = &Операция
		|	И Операции.ИдентификаторОперации = &ИдентификаторОперации
		|	И Операции.СменноеЗадание = &СменноеЗадание
		|	И Операции.Исполнитель = &Исполнитель
		|	И Операции.РабочийЦентр = &РабочийЦентр
		|	И Операции.ВидРабочегоЦентра = &ВидРабочегоЦентра
		|	И Операции.НазначатьНеРанее = &НазначатьНеРанее");
	
	Запрос.УстановитьПараметр("Подразделение", КлючОперации.Подразделение);
	Запрос.УстановитьПараметр("Этап", КлючОперации.Этап);
	Запрос.УстановитьПараметр("Операция", КлючОперации.Операция);
	Запрос.УстановитьПараметр("ИдентификаторОперации", КлючОперации.ИдентификаторОперации);
	Запрос.УстановитьПараметр("СменноеЗадание", КлючОперации.СменноеЗадание);
	Запрос.УстановитьПараметр("Исполнитель", КлючОперации.Исполнитель);
	Запрос.УстановитьПараметр("РабочийЦентр", КлючОперации.РабочийЦентр);
	Запрос.УстановитьПараметр("ВидРабочегоЦентра", КлючОперации.ВидРабочегоЦентра);
	Запрос.УстановитьПараметр("НазначатьНеРанее", КлючОперации.НазначатьНеРанее);
	Запрос.УстановитьПараметр("ИспользоватьФизЛиц", ИспользоватьФизЛиц);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция НазначитьНаСервере()
	
	КлючиОпераций = ПолучитьИзВременногоХранилища(АдресКлючиОпераций);
	
	ПараметрыНазначения = РегистрыСведений.ОперацииКСозданиюСменныхЗаданий.ПараметрыНазначенияОпераций();
	
	ПараметрыНазначения.Измерения.СменноеЗадание = СменноеЗадание;
	Если НазначитьИсполнителя Тогда
		ПараметрыНазначения.Измерения.Исполнитель = Исполнитель;
	КонецЕсли;
	Если НазначитьРабочийЦентр Тогда
		ПараметрыНазначения.Измерения.РабочийЦентр = РабочийЦентр;
	КонецЕсли;
	Если НазначитьВидРабочегоЦентра Тогда
		ПараметрыНазначения.Измерения.ВидРабочегоЦентра = ВидРабочегоЦентра;
	КонецЕсли;
	
	Если НЕ ГрупповоеНазначение Тогда
		ПараметрыНазначения.Количество = Количество;
		ПараметрыНазначения.НазначитьЧасть = НазначитьЧасть;
	КонецЕсли;
	
	РегистрыСведений.ОперацииКСозданиюСменныхЗаданий.НазначитьОперации(
		КлючиОпераций,
		ПараметрыНазначения);
	
	Результат = Новый Структура;
	Результат.Вставить("СменноеЗадание", СменноеЗадание);
	Результат.Вставить("Исполнитель", Исполнитель);
	Результат.Вставить("РабочийЦентр", РабочийЦентр);
	Результат.Вставить("ВидРабочегоЦентра", ВидРабочегоЦентра);
	Результат.Вставить("КлючиОпераций", КлючиОпераций);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИсполнительПолучениеДанныхВыбора(ДанныеВыбора, Текст, Подразделение)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Подразделение", Подразделение);
	ПараметрыЗаполнения.Вставить("Организация", Неопределено);
	
	ПроизводствоСервер.ЗаполнитьДанныеВыбораПриВводеИсполнителя(ДанныеВыбора, Текст, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПараллельнаяЗагрузка(ВидРабочегоЦентра)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРабочегоЦентра, "ПараллельнаяЗагрузка");
	
КонецФункции

#КонецОбласти
