
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	УстановитьПараметрыСпискаДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	УстановитьПараметрыСпискаДокументов();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	УстановитьПараметрыСпискаДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьПараметрыСпискаДокументов();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокДокументов, "Контрагент", Контрагент, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Контрагент));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Поле = Элементы.СписокДокументовРегистратор Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивОпераций",
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Элементы.СписокДокументов.ТекущиеДанные));
		ОткрытьФорму(
			"Обработка.ЖурналДокументовПрослеживаемости.Форма.РедактированиеОперации",
			Новый Структура("ДанныеОперации", Элементы.СписокДокументов.ТекущиеДанные), ЭтотОбъект,,,,
			Новый ОписаниеОповещения("РедактированиеОперацииЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПериод(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьПериодЗавершение", ЭтотОбъект);
	
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(
		ЭтотОбъект, Новый Структура("ДатаНачала, ДатаОкончания", "НачалоПериода", "КонецПериода"), Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрыСпискаДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКодОперации(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИмяКоманды", Команда.Имя);
	ПараметрыОповещения.Вставить("МассивОпераций", Элементы.СписокДокументов.ВыделенныеСтроки);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
		"РедактированиеОперацииЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Справочник.КодыОперацийПрослеживаемости.ФормаВыбора",, ЭтотОбъект,,,,
		ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидДокумента(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИмяКоманды", Команда.Имя);
	ПараметрыОповещения.Вставить("МассивОпераций", Элементы.СписокДокументов.ВыделенныеСтроки);
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
		"РедактированиеОперацииЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Справочник.ТипыДокументов.ФормаВыбора",, ЭтотОбъект,,,,
		ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРучныеКорректировки(Команда)
	ОтменитьРучныеКорректировкиНаСервере();
	Элементы.СписокДокументов.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОтменитьРучныеКорректировкиНаСервере()
	МассивДокументов = Новый Массив;
	Для Каждого СтрокаТаблицы Из Элементы.СписокДокументов.ВыделенныеСтроки Цикл
		МассивДокументов.Добавить(СтрокаТаблицы.Регистратор);
	КонецЦикла;
	ПрослеживаемостьУП.ОтменитьРучныеКорректировкиОпераций(МассивДокументов);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетКнигаПокупок(Команда)
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Организация);
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
	
	ОткрытьФорму("Отчет.КнигаПокупок.ФормаОбъекта",
		Новый Структура("ПараметрыЗаполненияФормы", ПараметрыОтчета));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетКнигаПродаж(Команда)
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Организация);
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
	
	ОткрытьФорму("Отчет.КнигаПродаж.ФормаОбъекта",
		Новый Структура("ПараметрыЗаполненияФормы", ПараметрыОтчета));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетЖурналУчетаСчетовФактур(Команда)
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Организация);
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
	
	ОткрытьФорму("Отчет.ЖурналУчетаСчетовФактур.ФормаОбъекта",
		Новый Структура("ПараметрыЗаполненияФормы", ПараметрыОтчета));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетДекларацияПоНДС(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Если НЕ ЗначениеЗаполнено(НачалоПериода) ИЛИ НЕ ЗначениеЗаполнено(КонецПериода) Тогда
		ТекущаяДата = ОбщегоНазначенияКлиент.ДатаСеанса();
		ПараметрыОткрытия.Вставить("НачалоПериода", НачалоГода(ТекущаяДата));
		ПараметрыОткрытия.Вставить("КонецПериода", КонецГода(ТекущаяДата));
	ИначеЕсли НачалоКвартала(НачалоПериода) = НачалоКвартала(КонецПериода) Тогда
		ПараметрыОткрытия.Вставить("НачалоПериода", НачалоКвартала(НачалоПериода));
		ПараметрыОткрытия.Вставить("КонецПериода", КонецКвартала(КонецПериода));
	Иначе
		ПараметрыОткрытия.Вставить("НачалоПериода", НачалоГода(НачалоПериода));
		ПараметрыОткрытия.Вставить("КонецПериода", КонецГода(КонецПериода));
	КонецЕсли;
	ПараметрыОткрытия.Вставить("ПериодОтчета", ПредставлениеПериода(ПараметрыОткрытия.НачалоПериода, ПараметрыОткрытия.КонецПериода, "ФП=Истина"));
	
	ПараметрыОткрытия.Вставить("Раздел",    ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Отчеты"));
	ПараметрыОткрытия.Вставить("ВидОтчета", НСтр("ru = 'Декларация по НДС';
												|en = 'VAT declaration'"));
	ПараметрыОткрытия.Вставить("Организация", Организация);
	
	Форма = ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыОткрытия, , "1С-Отчетность");
	Форма.Организация = ПараметрыОткрытия.Организация;
	Форма.ПериодОтчета = ПараметрыОткрытия.ПериодОтчета;
	Форма.ВидОтчета = ПараметрыОткрытия.ВидОтчета;
	Форма.НачалоПериода = НачалоКвартала(НачалоПериода);
	Форма.КонецПериода = КонецКвартала(КонецПериода);
	
	ОтборДинамическогоСписка = Форма.Отчеты.КомпоновщикНастроек.Настройки.Отбор;
	ОтборДинамическогоСписка.Элементы.Очистить();
	
	ОтборВидОтчета        = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборОрганизация      = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаНачала       = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаОкончания1   = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборДатаОкончания2   = ОтборДинамическогоСписка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборВидОтчета.ЛевоеЗначение      = Новый ПолеКомпоновкиДанных("НаименованиеОтчета");
	ОтборОрганизация.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Организация");
	ОтборДатаНачала.ЛевоеЗначение     = Новый ПолеКомпоновкиДанных("ДатаНачала");
	ОтборДатаОкончания1.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОкончания");
	ОтборДатаОкончания2.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОкончания");
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОткрытия.Организация) Тогда
		ОтборОрганизация.Использование = Ложь;
	Иначе
		ОтборОрганизация.Использование  = Истина;
		ОтборОрганизация.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборОрганизация.ПравоеЗначение = ПараметрыОткрытия.Организация;
	КонецЕсли;
	
	ОтборВидОтчета.Использование  = Истина;
	ОтборВидОтчета.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборВидОтчета.ПравоеЗначение = ПараметрыОткрытия.ВидОтчета;
	
	ОтборДатаНачала.Использование      = Истина;
	ОтборДатаНачала.ВидСравнения       = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборДатаНачала.ПравоеЗначение     = НачалоГода(ПараметрыОткрытия.НачалоПериода);
	
	ОтборДатаОкончания1.Использование  = Истина;
	ОтборДатаОкончания1.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;
	ОтборДатаОкончания1.ПравоеЗначение = ПараметрыОткрытия.НачалоПериода;
	
	ОтборДатаОкончания2.Использование  = Истина;
	ОтборДатаОкончания2.ВидСравнения   = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборДатаОкончания2.ПравоеЗначение = ПараметрыОткрытия.КонецПериода;
	
	ОтборДинамическогоСписка.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "СписокДокументов.Дата");
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокДокументовОрганизация.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСпискаДокументов()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "НачалоПериода", НачалоПериода);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "КонецПериода", КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеОперацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ИмяКоманды") Тогда
		Если ДополнительныеПараметры.ИмяКоманды = "ИзменитьКодОперации" Тогда
			ЗначенияРеквизитов = Новый Структура("КодОперации", Результат);
		ИначеЕсли ДополнительныеПараметры.ИмяКоманды = "ИзменитьВидДокумента" Тогда
			ЗначенияРеквизитов = Новый Структура("ТипДокументаВПрослеживаемости", Результат);
		КонецЕсли;
	Иначе
		ЗначенияРеквизитов = Результат;
	КонецЕсли;
	
	РедактированиеОперацииНаСервере(ДополнительныеПараметры.МассивОпераций, ЗначенияРеквизитов);
	
	Элементы.СписокДокументов.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура РедактированиеОперацииНаСервере(ПрослеживаемыеОперации, ЗначенияРеквизитов)
	
	ТаблицаДокументов = Новый ТаблицаЗначений;
	ТаблицаДокументов.Колонки.Добавить("Регистратор");
	
	Для Каждого Операция Из ПрослеживаемыеОперации Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДокументов.Добавить(), Операция);
	КонецЦикла;
	
	ТаблицаДокументов.Свернуть("Регистратор");
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОперацииСПрослеживаемымиТоварами.НаборЗаписей");
		ЭлементБлокировки.ИсточникДанных = ТаблицаДокументов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Для Каждого Операция Из ПрослеживаемыеОперации Цикл
			
			НаборЗаписей = РегистрыСведений.ОперацииСПрослеживаемымиТоварами.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Операция.Регистратор);
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл
				Если Запись.Организация = Операция.Организация
					И Запись.ТипЗапасов = Операция.ТипЗапасов Тогда
					
					ЗаполнитьЗначенияСвойств(Запись, ЗначенияРеквизитов);
					Запись.РучноеРедактирование = Истина;
					
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти