
&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаРеестра = Параметры.ДатаРеестра;
	Если Не ЗначениеЗаполнено(ДатаРеестра) Тогда
	    ДатаРеестра = ТекущаяДата();	
	КонецЕсли;
	
	Сценарий = Константы.СценарийОтчетностиКИК.Получить();	
	ПериодСценария = ОбщегоНазначенияУХ.глОтносительныйПериодПоДате(НачалоГода(ДатаРеестра), Перечисления.Периодичность.Год, 0);
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СоздатьРегламент(Команда)
	СоздатьРегламентНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОсвобожденияКИК(Команда)
	
	ПараметрыСвод = ПолучитьПараметрыСводнойТаблицы();
	Если Не ЗначениеЗаполнено(ПараметрыСвод.Бланк) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось найти бланк сводной таблицы для вида отчета <сводный аналитический регистр>'"));
		Возврат;		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.СводнаяТаблица.Форма", ПараметрыСвод);
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаОтчетов(Команда)
	
	ПараметрыФормы = Новый Структура("ДокументУправленияПериодомСценария, ОтображатьВВидеДиаграммы", УправлениеПериодом, Ложь);
  	ОткрытьФорму("Обработка.МатрицаУправленияУниверсальнымПроцессом.Форма.ФормаУправляемая", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФСД(Команда)	
	ПараметрыФормы = Новый Структура("Сценарий, ПериодОтчета", Сценарий, ПериодСценария);
	ОткрытьФорму("Обработка.ИмпортОбъектовИзExcel.Форма", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗагрузку(Команда)
	Форма = ПолучитьФорму("Обработка.ВыгрузкаЗагрузкаМетодическихМоделей.Форма");
	Форма.ТекущийЭлемент = Форма.Элементы.ГруппаЗагрузка;
	Форма.РежимВыгрузки = Ложь;
	Форма.Открыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПериодСценарияПриИзменении(Элемент)
	УправлениеФормойНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаСервере
Функция ПолучитьПараметрыСводнойТаблицы()
	
	ПараметрыСвода = ПолучитьСводКИК();
	
	РеквизитыПериода = ОбщегоНазначенияУХ.ПолучитьЗначенияРеквизитов(ПериодСценария, "ДатаНачала,ДатаОкончания");	
	
	СтруктураАналитик = Новый Структура;
	СтруктураАналитик.Вставить("Сценарии", Сценарий);
	СтруктураАналитик.Вставить("Организации", Регламент.ОрганизационныеЕдиницы.ВыгрузитьКолонку("ОрганизационнаяЕдиница"));
	
	ПараметрыФормы = Новый Структура;	
	
	ПараметрыФормы.Вставить("Бланк",							ПараметрыСвода.БланкОтчета);
	ПараметрыФормы.Вставить("ПериодПланированияОтборНачало",	РеквизитыПериода.ДатаНачала);
	ПараметрыФормы.Вставить("ПериодПланированияОтборОкончание",	РеквизитыПериода.ДатаОкончания);	
	ПараметрыФормы.Вставить("АналитикиОтбораИсточник",			ПоместитьВоВременноеХранилище(СтруктураАналитик, Новый УникальныйИдентификатор()));
	
	Возврат ПараметрыФормы;

КонецФункции

&НаСервере
Процедура СоздатьРегламентНаСервере()
	
	УправлениеПериодом = УправлениеРабочимиПроцессамиУХ.ПолучитьДокументУправленияПериодомСценария(Сценарий, ПериодСценария);
	ГруппаВидовОтчетовКИК = РасчетыПоКорпоративнымНалогам.ПолучитьГруппуВидовОтчетаКИК();
	
	Запрос = Новый Запрос;
	Запрос.Текст = РасчетыПоКорпоративнымНалогам.ПолучитьТекстЗапросаСтатусов(Ложь);
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаРеестра);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	Отбор = Новый Структура("ЭтоКИК", Истина);	
	Регламент = Справочники.ВерсииРегламентовПодготовкиОтчетности.ПолучитьСоздатьРегламентКИК(
					Сценарий, 
					ДатаРеестра,
					Запрос.Выполнить().Выгрузить().Скопировать(Отбор), 
					ГруппаВидовОтчетовКИК,
					УправлениеПериодом.ВерсияОрганизационнойСтруктуры
				);
	
	РеквизитФормыВЗначение("Объект").ОбновитьНастройкиМатрицы(Регламент);
	
	Если Не ЗначениеЗаполнено(УправлениеПериодом) Тогда	
		УправлениеПериодом = Документы.УправлениеПериодомСценария.СоздатьУправлениеПериодом(Сценарий, ПериодСценария, Регламент, Ложь, Истина);	
	КонецЕсли;
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиДоходовИРасходовКИК.Ссылка
	|ИЗ
	|	Справочник.СтатьиДоходовИРасходовКИК КАК СтатьиДоходовИРасходовКИК
	|ГДЕ
	|	СтатьиДоходовИРасходовКИК.Предопределенный = ЛОЖЬ
	|	И СтатьиДоходовИРасходовКИК.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Элементы.ГруппаОшибкаМодели.Видимость = Истина;
	КонецЕсли;
	
	УправлениеПериодом = УправлениеРабочимиПроцессамиУХ.ПолучитьДокументУправленияПериодомСценария(Сценарий, ПериодСценария);
	Если ЗначениеЗаполнено(УправлениеПериодом) Тогда
	    Регламент = УправлениеПериодом.ВерсияОрганизационнойСтруктуры;
	Иначе	
		Регламент = Справочники.ВерсииРегламентовПодготовкиОтчетности.ПолучитьАктуальныйРегламент(Сценарий, ДатаРеестра);
	КонецЕсли;
	
	ЕстьРегламент = Не Регламент.Пустая();
	ЕстьУправлениеПериодом = Не УправлениеПериодом.Пустая();
		
	Элементы.ГруппаОшибка3.Видимость = Не ЕстьРегламент Или Не ЕстьУправлениеПериодом;
	Элементы.СоздатьРегламент.Заголовок = СтрШаблон("%1 регламент, %2 управление периодом", 
				?(ЕстьРегламент, "Обновить", "Создать"), ?(ЕстьУправлениеПериодом, "обновить ", "создать"));
	
	Элементы.Регламент.Видимость = ЕстьРегламент;
	Элементы.УправлениеПериодом.Видимость = ЕстьУправлениеПериодом;
	
	ЭтаФорма.Заголовок = СтрШаблон("Модель отчетности иностранных компаний (период <%1>, сценарий <%2>)", ПериодСценария, Сценарий);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидОтчетаКИК(КодВидаОтчета)
	Возврат Справочники.ВидыОтчетов.НайтиПоКоду(КодВидаОтчета);
КонецФункции

&НаСервере
Функция ПолучитьСводКИК()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкаОбработкиОтчетов.ЗначениеЭлементаНастройкиОтчета
	|ИЗ
	|	РегистрСведений.НастройкаОбработкиОтчетов КАК НастройкаОбработкиОтчетов
	|ГДЕ
	|	НастройкаОбработкиОтчетов.ЭлементНастройкиОтчета = ЗНАЧЕНИЕ(Перечисление.ЭлементыНастройкиОтчета.БланкСводнойТаблицы)
	|	И НастройкаОбработкиОтчетов.ШаблонДокументаБД = &ШаблонДокументаБД");
	
	ВидОтчетаСвод = ПолучитьВидОтчетаКИК(РасчетыПоКорпоративнымНалогам.ПолучитьКодСводныйРегистр());
	Запрос.УстановитьПараметр("ШаблонДокументаБД", ВидОтчетаСвод);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Структура("ВидОтчета, БланкОтчета", ВидОтчетаСвод, Неопределено);
	КонецЕсли; 
	
	Возврат Новый Структура("ВидОтчета, БланкОтчета", ВидОтчетаСвод, РезультатЗапроса.Выгрузить().Получить(0).Получить(0));
	
КонецФункции

#КонецОбласти

