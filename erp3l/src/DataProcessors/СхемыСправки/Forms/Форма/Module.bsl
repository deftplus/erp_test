// Возвращает список значений, содержащий имена предопределённых графических 
// схем, заданных в обработке.
&НаСервере
Функция ПолучитьСписокМакетов()
	РезультатФункции = Новый СписокЗначений;
	ТекОбъект = РеквизитФормыВЗначение("Объект"); 
	КоллекцияМакетов = ТекОбъект.Метаданные().Макеты;
	Для Каждого ТекКоллекцияМакетов Из КоллекцияМакетов Цикл
		ИмяМакета = ТекКоллекцияМакетов.Имя;
		Макет = ТекОбъект.ПолучитьМакет(ИмяМакета);  
		Если ТипЗнч(Макет) = Тип("ГрафическаяСхема") Тогда
			РезультатФункции.Добавить(ИмяМакета);
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	Возврат РезультатФункции;
КонецФункции

// Переносит таблицу гуидов из макета ГуидыМетаданных в таблицу на форме.
&НаСервере
Процедура СчитатьТаблицуГуидов()
	ТаблицаГуидов.Очистить();
	ТекОбъект = РеквизитФормыВЗначение("Объект"); 
	Макет = ТекОбъект.ПолучитьМакет("ГуидыМетаданных");  
	Для ТекСтрока = 1 По Макет.ВысотаТаблицы Цикл
		НоваяСтрока = ТаблицаГуидов.Добавить();
		ТекОбласть = Макет.Область(ТекСтрока, 1, ТекСтрока, 1);
		НоваяСтрока.ТипОбъектаГуида = ТекОбласть.Текст;
		ТекОбласть = Макет.Область(ТекСтрока, 2, ТекСтрока, 2);
		НоваяСтрока.ИмяОбъектаГуида = ТекОбласть.Текст;
		ТекОбласть = Макет.Область(ТекСтрока, 3, ТекСтрока, 3);
		НовыйГуид = ТекОбласть.Текст;
		НовыйГуид = СтрЗаменить(НовыйГуид, "../id", "");
		НовыйГуид = СтрЗаменить(НовыйГуид, "/038b5c85-fb1c-4082-9c4c-e69f8928bf3a", "");
		НоваяСтрока.Гуид = НовыйГуид;
	КонецЦикла;
КонецПроцедуры

// Возвращает предопределённую графическую схему по её имени ИмяМакетаВход
&НаСервере
Функция ПолучитьГрафСхему(ИмяМакетаВход)
	РезультатФункции = Новый ГрафическаяСхема;
	Попытка 
		ТекОбъект = РеквизитФормыВЗначение("Объект"); 
		РезультатФункции = ТекОбъект.ПолучитьМакет(ИмяМакетаВход);  
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось получить графичкескую схему %ИмяСхемы% по причине: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяСхемы%", Строка(ИмяМакетаВход));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецПопытки;
	Возврат РезультатФункции;
КонецФункции

// Масштабирует значение координаты ЗначениеВход графической схемы
// с целью её корректного отображения на картинке.
&НаКлиентеНаСервереБезКонтекста
Функция МасштабироватьКоординату(ЗначениеВход)
	РезультатФункции = ЗначениеВход;
	Коэффициент = 1.227;
	РезультатФункции = РезультатФункции * Коэффициент;
	РезультатФункции = РезультатФункции / 10;
	РезультатФункции = Окр(РезультатФункции);
	РезультатФункции = РезультатФункции * 10;
	Возврат РезультатФункции;
КонецФункции

// По строке подсказки ПодсказкаВход получает структуру,
// содержащую имя и тип расшифровываемого объекта.
&НаКлиенте
Функция РазложитьПодсказку(ПодсказкаВход)
	РезультатФункции = Новый Структура;
	РезультатФункции.Вставить("ТипОбъекта", "");
	РезультатФункции.Вставить("ИмяОбъекта", "");
	Если ЗначениеЗаполнено(ПодсказкаВход) Тогда
		ПозицияРазделителя = СтрНайти(ПодсказкаВход, ".");
		Если ПозицияРазделителя <> 0 Тогда
			ТипОбъекта = Лев(ПодсказкаВход, ПозицияРазделителя - 1);
			ИмяОбъекта = Прав(ПодсказкаВход, СтрДлина(ПодсказкаВход) - ПозицияРазделителя);
			Если ЗначениеЗаполнено(ТипОбъекта) И ЗначениеЗаполнено(ИмяОбъекта) Тогда
				РезультатФункции.Вставить("ТипОбъекта", ТипОбъекта);
				РезультатФункции.Вставить("ИмяОбъекта", ИмяОбъекта);
			Иначе
				// Нет имени или типа объекта. Вернём пустую структуру.
			КонецЕсли;
		Иначе
			// Не удалось разделить метаданные в подсказке. Вернём пустую структуру.
		КонецЕсли;
	Иначе
		// Пустая подсказка. Вернём пустую структуру.
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции

// По строке подсказки ПодсказкаВход возвращает гуид метаданного
// для вставки в качестве ссылки в карте ссылок.
&НаКлиенте
Функция ВернутьГуидПоПодсказке(ПодсказкаВход)
	РезультатФункции = ""; 
	СтруктураОбъекта = РазложитьПодсказку(ПодсказкаВход);
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ТипОбъектаГуида", СтруктураОбъекта.ТипОбъекта);
	СтруктураПоиска.Вставить("ИмяОбъектаГуида", СтруктураОбъекта.ИмяОбъекта);
	НайденныеСтроки = ТаблицаГуидов.НайтиСтроки(СтруктураПоиска);
	Для Каждого ТекНайденыеСтроки Из НайденныеСтроки Цикл
		РезультатФункции = ТекНайденыеСтроки.Гуид;
	КонецЦикла;
	Возврат РезультатФункции;	
КонецФункции

&НаКлиенте
Процедура МакетыПослеВыбора(ЗначениеВыбора, ДопПараметры) Экспорт
	Если ЗначениеВыбора <> Неопределено Тогда
		Если ЗначениеЗаполнено(ЗначениеВыбора.Значение) Тогда
			ГрафСхема = ПолучитьГрафСхему(ЗначениеВыбора.Значение);
			ГрафСхема.РежимОтрисовкиСетки = РежимОтрисовкиСеткиГрафическойСхемы.НеРисовать;
			ГрафСхема.ПолеСверху	 = 0;
			ГрафСхема.ПолеСлева		 = 0;
			ГрафСхема.ПолеСнизу		 = 0;
			ГрафСхема.ПолеСправа	 = 0;
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось получить макет'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		// Пользователь ничего не выбрал.
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСхему(Команда)   
	СписокМакетов = ПолучитьСписокМакетов();
	Оповещение = Новый ОписаниеОповещения("МакетыПослеВыбора", ЭтотОбъект);
    ПоказатьВыборИзСписка(Оповещение, СписокМакетов, Элементы.ГрафСхема);
КонецПроцедуры

&НаКлиенте
Процедура Конвертировать(Команда)
	КодСправки = "";
	КодСправки = КодСправки + "<IMG src=""---"" border=0 usemap=""#map"">" + Символы.ПС;
	КодСправки = КодСправки + "<MAP name=""map"">" + Символы.ПС;
	Для Каждого ТекЭлементыГрафическойСхемы Из ГрафСхема.ЭлементыГрафическойСхемы Цикл
		Если ТипЗнч(ТекЭлементыГрафическойСхемы) = Тип("ЭлементГрафическойСхемыДействие") ИЛИ ТипЗнч(ТекЭлементыГрафическойСхемы) = Тип("ЭлементГрафическойСхемыДекорация")ИЛИ ТипЗнч(ТекЭлементыГрафическойСхемы) = Тип("ЭлементГрафическойСхемыВложенныйБизнесПроцесс") Тогда
			ПодсказкаЭлемента = СокрЛП(ТекЭлементыГрафическойСхемы.Подсказка);
			ГуидСсылки = ВернутьГуидПоПодсказке(ПодсказкаЭлемента);
			Если ЗначениеЗаполнено(ГуидСсылки) Тогда
				СтруктураОбъекта = РазложитьПодсказку(ПодсказкаЭлемента);
				ИмяОбъекта = СтруктураОбъекта.ИмяОбъекта;
				КодСправки = КодСправки + "<AREA href=""../id";
				КодСправки = КодСправки + ГуидСсылки;
				КодСправки = КодСправки + "/038b5c85-fb1c-4082-9c4c-e69f8928bf3a"" shape=rect alt=""Открыть справку ";
				КодСправки = КодСправки + ОбщегоНазначенияКлиентСерверУХ.НаименованиеПоКоду(ИмяОбъекта);
				КодСправки = КодСправки + """ coords=""";
				КодСправки = КодСправки + Формат(МасштабироватьКоординату(ТекЭлементыГрафическойСхемы.Лево), "ЧН=0; ЧГ=0");
				КодСправки = КодСправки + ",";
				КодСправки = КодСправки + Формат(МасштабироватьКоординату(ТекЭлементыГрафическойСхемы.Верх), "ЧН=0; ЧГ=0");
				КодСправки = КодСправки + ",";
				КодСправки = КодСправки + Формат(МасштабироватьКоординату(ТекЭлементыГрафическойСхемы.Лево + ТекЭлементыГрафическойСхемы.Ширина), "ЧН=0; ЧГ=0");
				КодСправки = КодСправки + ",";
				КодСправки = КодСправки + Формат(МасштабироватьКоординату(ТекЭлементыГрафическойСхемы.Верх + ТекЭлементыГрафическойСхемы.Высота), "ЧН=0; ЧГ=0");
				КодСправки = КодСправки + """>" + Символы.ПС;
			Иначе
				// Не добавляем активную область.
			КонецЕсли;
		Иначе
			// Пропускаем элемент.
		КонецЕсли;
	КонецЦикла;
	КодСправки = КодСправки + "</MAP>";
	КартинкаВыгрузка = ГрафСхема.ПолучитьКартинку(100, 100, ФорматКартинки.PNG);
	КартинкаСхемы = ПоместитьВоВременноеХранилище(КартинкаВыгрузка);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СчитатьТаблицуГуидов();
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если ВыбранноеЗначение.Количество() > 0 Тогда
			ПервыйЭлемент = ВыбранноеЗначение[0];
			ГрафСхема.Прочитать(ПервыйЭлемент);
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось считать файл'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось считать файл'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСхему(Команда)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Графическая схема (*.grs)|*.grs|Все файлы (*.*)|*.*";
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтаФорма);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
КонецПроцедуры
