
&НаКлиенте
Процедура ИспользуемаяИБПриИзменении(Элемент)
	
	ИспользуемаяИБПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИспользуемаяИБПриИзмененииНаСервере()
	
	ТипБД=Объект.ИспользуемаяИБ.ТипБД;
	
	Элементы.СформироватьДокументыОтраженияФакта.Видимость=(ТипБД=Справочники.ТипыБазДанных.ТекущаяИБ);
	
	ОбновитьСписокВозможныхДокументовБД();
	ОчиститьИсходныеТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ИспользуемаяИБ) Тогда
		
		Объект.ИспользуемаяИБ=Справочники.ВнешниеИнформационныеБазы.ТекущаяИБ;
		ТипБД=Справочники.ТипыБазДанных.ТекущаяИБ;
		
	Иначе
		
		ТипБД=Объект.ИспользуемаяИБ.ТипБД;
		
	КонецЕсли;
	
	ОбновитьСписокВозможныхДокументовБД();
	ОбновитьСписокРеквизитовФакт();
	
	ТипыРеквизитовОбъекта = ОбщегоНазначенияУХ.ТипыРеквизитовОбъекта(Метаданные.Обработки.ЗаполнениеДокументовОтраженияФактаПоБюджетам);
	ДокументОтражениеФактическихДанных=Справочники.ДокументыБД.НайтиПоНаименованию("ОтражениеФактическихДанныхБюджетирования",Истина,,Справочники.ТипыБазДанных.ТекущаяИБ);

	Элементы.КнопкаРеквизитыШапки.Видимость=Ложь;
	
	УстановитьУсловноеОформление();	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокРеквизитовФакт()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ДокументыБДРеквизиты.Имя
	|ИЗ
	|	Справочник.ДокументыБД.Реквизиты КАК ДокументыБДРеквизиты
	|ГДЕ
	|	ДокументыБДРеквизиты.Ссылка.Владелец = &Владелец
	|	И ДокументыБДРеквизиты.Ссылка.Наименование = &Наименование
	|	И ДокументыБДРеквизиты.Отображать";
	
	Запрос.УстановитьПараметр("Владелец",Справочники.ТипыБазДанных.ТекущаяИБ);
	Запрос.УстановитьПараметр("Наименование","ОтражениеФактическихДанныхБюджетирования");
	
	СписокРеквизитовФакт.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Имя"));	
	
КонецПроцедуры // ОбновитьСписокРеквизитовФакт() 

&НаСервере
Процедура ОбновитьСписокРеквизитовШапки()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ДокументыБДРеквизиты.Имя,
	|	ДокументыБДРеквизиты.ОписаниеПримитивногоТипа
	|ИЗ
	|	Справочник.ДокументыБД.Реквизиты КАК ДокументыБДРеквизиты
	|ГДЕ
	|	ДокументыБДРеквизиты.Отображать
	|	И ДокументыБДРеквизиты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.ДокументБД);
	
	СписокРеквизитовШапки.Очистить();
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		СписокРеквизитовШапки.Добавить(Результат.Имя,,ЗначениеЗаполнено(Результат.ОписаниеПримитивногоТипа));
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьСписокРеквизитовШапки()

// Процедура - Обновить список возможных документов БД
//
&НаСервере
Процедура ОбновитьСписокВозможныхДокументовБД()
	// Добавим в список настроенные вручную объекты.
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиЗаполненияОбъектовБД.ИсходныйОбъектБД
	|ИЗ
	|	РегистрСведений.НастройкиЗаполненияОбъектовБД КАК НастройкиЗаполненияОбъектовБД
	|ГДЕ
	|	НастройкиЗаполненияОбъектовБД.ИспользуемаяИБ = &ИспользуемаяИБ
	|	И НастройкиЗаполненияОбъектовБД.ОбъектБД = &ОбъектБД";
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И (НастройкиЗаполненияОбъектовБД.Организация=&Организация ИЛИ НастройкиЗаполненияОбъектовБД.Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))";
		
		Запрос.УстановитьПараметр("Организация",Объект.Организация);
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"	
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиЗаполненияОбъектовБД.ИсходныйОбъектБД.Наименование";
	
	Запрос.УстановитьПараметр("ИспользуемаяИБ",Объект.ИспользуемаяИБ);
	Запрос.УстановитьПараметр("ОбъектБД",Справочники.ДокументыБД.НайтиПоНаименованию("ОтражениеФактическихДанныхБюджетирования",Истина,,Справочники.ТипыБазДанных.ТекущаяИБ));
			
	Результат=Запрос.Выполнить().Выбрать();
	
	Элементы.ДокументБД.СписокВыбора.Очистить();
	ВыгрузкаОбъектов = Новый Массив;
	Пока Результат.Следующий() Цикл
		
		ВыгрузкаОбъектов.Добавить(Результат.ИсходныйОбъектБД);
		
	КонецЦикла;
	// Добавим в список предопределённые объекты.
	СписокПредопределенныхОбъектов = ДенежныеСредстваВстраиваниеУХ.ОбъектыСПредопределеннымиПравиламиГенерации(Ложь);
	Для Каждого ТекПолноеИмяПредопределенногоОбъекта Из СписокПредопределенныхОбъектов Цикл
		// Преобразуем строковое представление объекта в элемент справочников объектов БД.
		НайденныйОбъект = ОбщегоНазначенияСерверУХ.ВернутьСсылкуБДПоПолномуИмени(ТекПолноеИмяПредопределенногоОбъекта);
		// Добавим преобразованные объекты в список.
		Если ЗначениеЗаполнено(НайденныйОбъект) Тогда
			ВыгрузкаОбъектов.Добавить(НайденныйОбъект);
		Иначе
			// Значение не найдено. Пропускаем.
		КонецЕсли;
	КонецЦикла;	
	// Постобработка полученных значений и загрузка в список выбора.
	ВыгрузкаОбъектов = ОбщегоНазначенияКлиентСерверУХ.УдалитьПустыеЭлементыМассива(ВыгрузкаОбъектов);
	ВыгрузкаОбъектов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ВыгрузкаОбъектов);
	ВыгрузкаОбъектов = ОбщегоНазначенияКлиентСерверУХ.СортироватьМассив(ВыгрузкаОбъектов);
	Элементы.ДокументБД.СписокВыбора.ЗагрузитьЗначения(ВыгрузкаОбъектов);
КонецПроцедуры // ОбновитьСписокВозможныхДокументовБД()

&НаСервере
Процедура ОбновитьТаблицуНаСервере()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ОбработанныеОбъектыБД.СеансОбменаДанными.Организация КАК Организация,
	|	ОбработанныеОбъектыБД.ИсходныйОбъектСсылка,
	|	ОбработанныеОбъектыБД.ОбработанныйОбъектСсылка,
	|	ОбработанныеОбъектыБД.ОбработкаЗавершена,
	|	ОбработанныеОбъектыБД.ИсходныйОбъектДата,
	|	ОбработанныеОбъектыБД.ИсходныйОбъектНомер
	|ИЗ
	|	РегистрСведений.ОбработанныеОбъектыБД КАК ОбработанныеОбъектыБД
	|ГДЕ
	|	ОбработанныеОбъектыБД.СеансОбменаДанными.ИспользуемаяИБ = &ИспользуемаяИБ
	|	И ОбработанныеОбъектыБД.ОбработанныйОбъектСсылка ССЫЛКА Документ.ОтражениеФактическихДанныхБюджетирования
	|	И ОбработанныеОбъектыБД.СеансОбменаДанными.ПравилоЗаполнения.ИсходныйОбъектБД = &ДокументБД";
	
	Запрос.УстановитьПараметр("ИспользуемаяИБ",Объект.ИспользуемаяИБ);
	Запрос.УстановитьПараметр("ДокументБД",Объект.ДокументБД);
	
	Если ЗначениеЗаполнено(Объект.ДатаНач) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И ОбработанныеОбъектыБД.ИсходныйОбъектДата>=&ДатаНач";
		Запрос.УстановитьПараметр("ДатаНач",Объект.ДатаНач);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаКон) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И ОбработанныеОбъектыБД.ИсходныйОбъектДата<=&ДатаКон";
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(Объект.ДатаКон));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|И (ОбработанныеОбъектыБД.СеансОбменаДанными.Организация=&Организация ИЛИ ОбработанныеОбъектыБД.СеансОбменаДанными.Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))";
		
		Запрос.УстановитьПараметр("Организация",Объект.Организация);
		
	КонецЕсли;

	Результат=Запрос.Выполнить().Выбрать();	
	
	ОчиститьИсходныеТаблицы();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ТаблицаДокументовКОбработке.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Результат);
		
	КонецЦикла;
	
	ЗаполнитьТаблицыБюджетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	ОбновитьТаблицуНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляПроведения(ДокументБД,Организация=Неопределено,Сценарий=Неопределено)
	
	МассивПараметров=Обработки.ГенерацияОбъектовБД.ПолучитьПараметрыДляЗаполненияОбъектовБДПоИсходному(ДокументБД,Организация,Сценарий,Справочники.ТипыБазДанных.ТекущаяИБ,"ОтражениеФактическихДанныхБюджетирования");	
	Возврат ?(МассивПараметров.Количество()=0,Неопределено,МассивПараметров[0]);	
	
КонецФункции // ПолучитьДанныеДляПроведения()

&НаСервере
Процедура СформироватьДокументыОтраженияФактаНаСервере()
		
	ДанныеДляПроведения=ПолучитьДанныеДляПроведения(Объект.ДокументБД);
	
	Для Каждого Строка ИЗ ТаблицаДокументовКОбработке Цикл
		
		Если НЕ ЗначениеЗаполнено(Строка.ОбработанныйОбъектСсылка) Тогда
			
			ДанныеДляПроведения=ПолучитьДанныеДляПроведения(Объект.ДокументБД,Строка.Организация);
			
			Если ДанныеДляПроведения=Неопределено Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтруктураЗаписи=Новый Структура;
			СтруктураЗаписи.Вставить("ИспользуемаяИБ",			ДанныеДляПроведения.ИспользуемаяИБ);
			СтруктураЗаписи.Вставить("ПравилоЗаполнения",		ДанныеДляПроведения.ПравилоЗаполнения);
			СтруктураЗаписи.Вставить("ОбъектБД",				Объект.ДокументБД);
			СтруктураЗаписи.Вставить("ИсходныйОбъектСсылка",	Строка.ИсходныйОбъектСсылка);
			СтруктураЗаписи.Вставить("Организация",				Строка.Организация);
			СтруктураЗаписи.Вставить("Сценарий",				Справочники.Сценарии.Факт);
			СтруктураЗаписи.Вставить("ИсходныйОбъектДата",		Строка.ИсходныйОбъектСсылка.Дата);
			СтруктураЗаписи.Вставить("ПроводитьДокументы",		ДанныеДляПроведения.ПроводитьДокументы);
			СтруктураЗаписи.Вставить("ОбработанныйОбъектСсылка",);

			ОбработкаОбъект=Обработки.ГенерацияОбъектовБД.Создать();
			ЗаполнитьЗначенияСвойств(ОбработкаОбъект,СтруктураЗаписи);
			ОбработкаОбъект.ОбработатьОбъектыБД();
			СтруктураЗаписи.Вставить("ОбработкаЗавершена",ОбработкаОбъект.ОбработкаЗавершена);
			
			Если (НЕ ОбработкаОбъект.ДокументОбъект=Неопределено) И ЗначениеЗаполнено(ОбработкаОбъект.ДокументОбъект.Ссылка) Тогда
				
				СтруктураЗаписи.Вставить("ОбработанныйОбъектСсылка",ОбработкаОбъект.ДокументОбъект.Ссылка);
								
			КонецЕсли;	
						
			Строка.ОбработанныйОбъектСсылка	= СтруктураЗаписи.ОбработанныйОбъектСсылка;
			Строка.ОбработкаЗавершена		= СтруктураЗаписи.ОбработкаЗавершена;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьТаблицыБюджетов();
				
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыБюджетов()
	
	ТаблицыКЗаполнению = Новый Массив;
	ТаблицыКЗаполнению.Добавить(ТабБюджетДвиженияДенежныхСредств);
	ТаблицыКЗаполнению.Добавить(ТабБюджетДоходовИРасходов);
	ТаблицыКЗаполнению.Добавить(ТабБюджетДвиженияРесурсов);
	
	Запрос=Новый Запрос();
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Ссылка КАК ОбработанныйОбъектСсылка,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика3,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика4,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика5,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Аналитика6,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Сумма,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств.ВидАналитики1 КАК ВидАналитики1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств.ВидАналитики2 КАК ВидАналитики2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств.ВидАналитики3 КАК ВидАналитики3
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияДенежныхСредств КАК ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияДенежныхСредств.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Ссылка КАК ОбработанныйОбъектСсылка,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.СтатьяДоходовИРасходов,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика3,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика4,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика5,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Аналитика6,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Сумма,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.СтатьяДоходовИРасходов.ВидАналитики1 КАК ВидАналитики1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.СтатьяДоходовИРасходов.ВидАналитики2 КАК ВидАналитики2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.СтатьяДоходовИРасходов.ВидАналитики3 КАК ВидАналитики3
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДоходовИРасходов КАК ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДоходовИРасходов.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Ссылка КАК ОбработанныйОбъектСсылка,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.СтатьяДвиженияРесурсов,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика3,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика4,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика5,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Аналитика6,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Сумма,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Количество,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.СтатьяДвиженияРесурсов.ВидАналитики1 КАК ВидАналитики1,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.СтатьяДвиженияРесурсов.ВидАналитики2 КАК ВидАналитики2,
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.СтатьяДвиженияРесурсов.ВидАналитики3 КАК ВидАналитики3
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияРесурсов КАК ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетированияБюджетДвиженияРесурсов.Ссылка В(&МассивДокументов)
	|";
	
	Запрос.УстановитьПараметр("МассивДокументов",РеквизитФормыВЗначение("ТаблицаДокументовКОбработке").ВыгрузитьКолонку("ОбработанныйОбъектСсылка"));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Для Сч = 0 По ТаблицыКЗаполнению.Количество() - 1 Цикл
		ТаблицыКЗаполнению[Сч].Загрузить(РезультатыЗапроса[Сч].Выгрузить());
	КонецЦикла;
			
КонецПроцедуры // ЗаполнитьТаблицуРеквизитовОтраженияФакта() 

&НаСервере
Процедура ЗаполнитьТаблицыРеквизитов()
	
	ТаблицаДокументовКОбработкеТекущаяСтрока=Элементы.ТаблицаДокументовКОбработке.ТекущаяСтрока;
	
	ДанныеСтроки=ТаблицаДокументовКОбработке.НайтиПоИдентификатору(ТаблицаДокументовКОбработкеТекущаяСтрока);
	
	Если ДанныеСтроки.ИсходныйОбъектСсылка=Неопределено 
		ИЛИ СписокРеквизитовШапки.Количество()=0
		ИЛИ СписокРеквизитовФакт.Количество()=0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если РеквизитыИсходногоОбъекта.НайтиСтроки(Новый Структура("ИсходныйОбъектСсылка",ДанныеСтроки.ИсходныйОбъектСсылка)).Количество()=0 Тогда
		
		Если Объект.ИспользуемаяИБ=Справочники.ВнешниеИнформационныеБазы.ТекущаяИБ Тогда
			
			ДокументОбъект=ДанныеСтроки.ИсходныйОбъектСсылка.ПолучитьОбъект();
			
			Для Каждого СтрРеквизит ИЗ СписокРеквизитовШапки Цикл
				
				НоваяСтрока=РеквизитыИсходногоОбъекта.Добавить();
				НоваяСтрока.Имя=СтрРеквизит.Значение;
				НоваяСтрока.Значение=ДокументОбъект[СтрРеквизит.Значение];
				НоваяСтрока.ИсходныйОбъектСсылка=ДанныеСтроки.ИсходныйОбъектСсылка;
				
			КонецЦикла;
			
		Иначе
			
			ТекСоединениеВИБ = УправлениеСоединениямиВИБУХ.ПолучитьСоединение(Объект.ИспользуемаяИБ, 1);
			
			Если ТекСоединениеВИБ=Неопределено Тогда
				Возврат ;
			КонецЕсли;
			
			Попытка
				
				ОбъектСсылкаВИБ=РасширениеИнтеграцииУХ.ПолучитьСсылкуПОСтрокеUUID(ТекСоединениеВИБ,"Документ",Объект.ДокументБД.Наименование,ДанныеСтроки.ИсходныйОбъектСсылка);
				
				Если ОбъектСсылкаВИБ=Неопределено Тогда
					
					Возврат;
					
				КонецЕсли;
				
				ТекстВыборки="";
				
				Для Каждого СтрРеквизит ИЗ СписокРеквизитовШапки Цикл
					
					Если НЕ СтрРеквизит.Пометка Тогда
						
						ТекстВыборки=ТекстВыборки+",Представление("+СтрРеквизит.Значение+") КАК "+СтрРеквизит.Значение;
						
					Иначе
						
						ТекстВыборки=ТекстВыборки+","+СтрРеквизит.Значение+" КАК "+СтрРеквизит.Значение;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Запрос=ТекСоединениеВИБ.NewObject("Запрос");
				Запрос.Текст="ВЫБРАТЬ "+Сред(ТекстВыборки,2)+"
				|ИЗ Документ."+Объект.ДокументБД.Наименование+" КАК "+Объект.ДокументБД.Наименование+"
				|ГДЕ "+Объект.ДокументБД.Наименование+".Ссылка=&Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка",ОбъектСсылкаВИБ);
				
				Результат=Запрос.Выполнить().Выбрать();
				
				Если Результат.Следующий() Тогда
					
					Для Каждого СтрРеквизит ИЗ СписокРеквизитовШапки Цикл
						
						НоваяСтрока=РеквизитыИсходногоОбъекта.Добавить();
						НоваяСтрока.Имя=СтрРеквизит.Значение;
						НоваяСтрока.Значение=Результат[СтрРеквизит.Значение];
						НоваяСтрока.ИсходныйОбъектСсылка=ДанныеСтроки.ИсходныйОбъектСсылка;
						
					КонецЦикла;
					
				КонецЕсли;
				
			Исключение
				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),,,СтатусСообщения.Внимание);
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ОбработанныйОбъектСсылка) И РеквизитыОтраженияФакта.НайтиСтроки(Новый Структура("ОбработанныйОбъектСсылка",ДанныеСтроки.ОбработанныйОбъектСсылка)).Количество()=0 Тогда
		
		ДокументОбъект=ДанныеСтроки.ОбработанныйОбъектСсылка.ПолучитьОбъект();
		
		Для Каждого СтрРеквизит ИЗ СписокРеквизитовФакт Цикл
			
			НоваяСтрока=РеквизитыОтраженияФакта.Добавить();
			НоваяСтрока.Имя=СтрРеквизит.Значение;
			НоваяСтрока.Значение=ДокументОбъект[СтрРеквизит.Значение];
			НоваяСтрока.ОбработанныйОбъектСсылка=ДанныеСтроки.ОбработанныйОбъектСсылка;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТаблицыРеквизитов()

&НаКлиенте
Процедура СформироватьДокументыОтраженияФакта(Команда)
	
	СформироватьДокументыОтраженияФактаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовКОбработкеПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаДокументовКОбработке.ТекущаяСтрока=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ЗаполнитьТаблицыРеквизитовКлиент", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицыРеквизитовКлиент()
	
	Если ТаблицаДокументовКОбработкеТекущаяСтрока = Элементы.ТаблицаДокументовКОбработке.ТекущаяСтрока Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьТаблицыРеквизитов();
	
	Элементы.РеквизитыИсходногоОбъекта.ОтборСтрок	= Новый ФиксированнаяСтруктура("ИсходныйОбъектСсылка",Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ИсходныйОбъектСсылка);
	Элементы.РеквизитыОтраженияФакта.ОтборСтрок		= Новый ФиксированнаяСтруктура("ОбработанныйОбъектСсылка",Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка);
	
	Элементы.ТабБюджетДвиженияДенежныхСредств	.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбработанныйОбъектСсылка",Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка);
	Элементы.ТабБюджетДоходовИРасходов			.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбработанныйОбъектСсылка",Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка);
	Элементы.ТабБюджетДвиженияРесурсов			.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбработанныйОбъектСсылка",Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка);	
	
КонецПроцедуры // ЗаполнитьТаблицыРеквизитовКлиент()

&НаКлиенте
Процедура ДокументБДПриИзменении(Элемент)
	
	ДокументБДПриИзмененииНаСервере();	
	
	Если СписокРеквизитовШапки.Количество()>0 Тогда
		
		Элементы.ПанельРедактирование.Доступность=Истина;
		Элементы.КнопкаРеквизитыШапки.Видимость=Ложь;
		
	Иначе
		
		Элементы.ПанельРедактирование.Доступность=Ложь;
		Элементы.КнопкаРеквизитыШапки.Видимость=Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДокументБДПриИзмененииНаСервере()
	
	ТекстОшибкиДокументаИБ="";
	
	ОбновитьСписокРеквизитовШапки();	
	ОчиститьИсходныеТаблицы();
		
	ДанныеДляПроведения=ПолучитьДанныеДляПроведения(Объект.ДокументБД,);
	
	Если ДанныеДляПроведения=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПравилоЗаполнения=ДанныеДляПроведения.ПравилоЗаполнения;
	
	Для Каждого Строка ИЗ ДанныеДляПроведения.ПравилоЗаполнения.ИсточникиДляЗаполненияТЧ Цикл
		
		Если Не Строка.Используется Тогда
			
			Продолжить;
			
		ИначеЕсли Строка.ТабличнаяЧасть.Имя="БюджетДвиженияДенежныхСредств" Тогда
			
			БДДС=Истина;
			
		ИначеЕсли Строка.ТабличнаяЧасть.Имя="БюджетДоходовИРасходов" Тогда
			
			БДР=Истина;
			
		ИначеЕсли Строка.ТабличнаяЧасть.Имя="БюджетДвиженияРесурсов" Тогда
			
			Ресурсы=Истина;
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьИсходныеТаблицы()
	
	ТаблицаДокументовКОбработке.Очистить();
	РеквизитыИсходногоОбъекта.Очистить();
	РеквизитыОтраженияФакта.Очистить();
	ТабБюджетДвиженияДенежныхСредств.Очистить();
	ТабБюджетДвиженияРесурсов.Очистить();
	ТабБюджетДоходовИРасходов.Очистить();
		
КонецПроцедуры // ОчиститьИсходныеТаблицы() 

&НаКлиенте
Процедура ТабБюджетДвиженияДенежныхСредствСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	ОбработатьИзменениеСтатьи(ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДоходовИРасходовСтатьяДоходовИРасходовПриИзменении(Элемент)
	
	ОбработатьИзменениеСтатьи(ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияРесурсовСтатьяДвиженияРесурсовПриИзменении(Элемент)
	
	ОбработатьИзменениеСтатьи(ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов"));
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМассивАналитикСтатьи(Ссылка,ИмяСправочника)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтатьяБюджета.ВидАналитики1 КАК ВидАналитики1,
	|	СтатьяБюджета.ВидАналитики2 КАК ВидАналитики2,
	|	СтатьяБюджета.ВидАналитики3 КАК ВидАналитики3
	|ИЗ
	|	Справочник."+ИмяСправочника+" КАК СтатьяБюджета
	|ГДЕ
	|	СтатьяБюджета.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	МассивАналитик=Новый Массив;
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		Для Индекс=1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
			
			МассивАналитик.Добавить(Новый Структура("Имя,ВидАналитики","Аналитика"+Индекс,Результат["ВидАналитики"+Индекс]));
			
		КонецЦикла;
		
	Иначе
		
		Для Индекс=1 По АналитикиСтатейБюджетовУХКлиентСервер.КоличествоАналитикСтатьи() Цикл
			
			МассивАналитик.Добавить(Новый Структура("Имя,ВидАналитики","Аналитика"+Индекс,ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка()));
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивАналитик;
				
КонецФункции // ПолучитьМассивАналитикСтатьи()


&НаСервере
Процедура УстановитьСвязиПараметровВыбора(ИдентификаторСтроки,ВидБюджета)
	
	ОперативноеПланированиеФормыУХ.УстановитьСвязиПараметровВыбора(ЭтаФорма, ИдентификаторСтроки, ВидБюджета, "Аналитика%1",ТекущийЭлемент.Имя+"Аналитика%1");
	
КонецПроцедуры //

&НаКлиенте
Процедура ОбработатьИзменениеСтатьи(ВидБюджета)
	
	ОбработатьИзменениеСтатьиНаСервере(ВидБюджета, ТекущийЭлемент.ТекущаяСтрока);
	
КонецПроцедуры // ОбработатьИзменениеСтатьи()

&НаКлиенте
Процедура РеквизитыОтраженияФактаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элементы.РеквизитыОтраженияФакта.ТекущиеДанные.РеквизитИзменен=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияДенежныхСредствПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ Элементы.ТабБюджетДвиженияДенежныхСредств.ТекущиеДанные=Неопределено Тогда
		
		Элементы.ТабБюджетДвиженияДенежныхСредств.ТекущиеДанные.РеквизитИзменен=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДоходовИРасходовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элементы.ТабБюджетДоходовИРасходов.ТекущиеДанные.РеквизитИзменен=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияРесурсовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элементы.ТабБюджетДвиженияРесурсов.ТекущиеДанные.РеквизитИзменен=Истина;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзмененияНаСервере()
	
	СоответствиеОбъектов=Новый Соответствие;
	
	//////////////////////////////////////////////
	// Проверяем изменение реквизитов шапки
	
	МассивИзмененных=РеквизитыОтраженияФакта.НайтиСтроки(Новый Структура("РеквизитИзменен",Истина));
	
	Для Каждого СтрРеквизит ИЗ МассивИзмененных Цикл
		
		ДокументОбъект=СоответствиеОбъектов[СтрРеквизит.ОбработанныйОбъектСсылка];
		
		Если ДокументОбъект=Неопределено Тогда
			
			ДокументОбъект=СтрРеквизит.ОбработанныйОбъектСсылка.ПолучитьОбъект();
			СоответствиеОбъектов.Вставить(СтрРеквизит.ОбработанныйОбъектСсылка,ДокументОбъект);
			
		КонецЕсли;
			
		ДокументОбъект[СтрРеквизит.Имя]=СтрРеквизит.Значение;
		СтрРеквизит.РеквизитИзменен=Ложь;
		
	КонецЦикла;
	
	//////////////////////////////////////////////
	// Проверяем изменение таблиц бюджетов
	
	МассивИзмененных=ТабБюджетДвиженияДенежныхСредств.НайтиСтроки(Новый Структура("РеквизитИзменен",Истина));
	
	Для Каждого СтрРеквизит ИЗ МассивИзмененных Цикл
		
		ДокументОбъект=СоответствиеОбъектов[СтрРеквизит.ОбработанныйОбъектСсылка];
		
		Если ДокументОбъект=Неопределено Тогда
			
			ДокументОбъект=СтрРеквизит.ОбработанныйОбъектСсылка.ПолучитьОбъект();
			ДокументОбъект.БюджетДвиженияДенежныхСредств.Очистить();
			СоответствиеОбъектов.Вставить(СтрРеквизит.ОбработанныйОбъектСсылка,ДокументОбъект);
			
		КонецЕсли;
			
		НоваяСтрока=ДокументОбъект.БюджетДвиженияДенежныхСредств.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрРеквизит);
		
		СтрРеквизит.РеквизитИзменен=Ложь;
		
	КонецЦикла;
	
	МассивИзмененных=ТабБюджетДоходовИРасходов.НайтиСтроки(Новый Структура("РеквизитИзменен",Истина));
	
	Для Каждого СтрРеквизит ИЗ МассивИзмененных Цикл
		
		ДокументОбъект=СоответствиеОбъектов[СтрРеквизит.ОбработанныйОбъектСсылка];
		
		Если ДокументОбъект=Неопределено Тогда
			
			ДокументОбъект=СтрРеквизит.ОбработанныйОбъектСсылка.ПолучитьОбъект();
			ДокументОбъект.БюджетДоходовИРасходов.Очистить();
			СоответствиеОбъектов.Вставить(СтрРеквизит.ОбработанныйОбъектСсылка,ДокументОбъект);
			
		КонецЕсли;
			
		НоваяСтрока=ДокументОбъект.БюджетДоходовИРасходов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрРеквизит);
		
		СтрРеквизит.РеквизитИзменен=Ложь;
		
	КонецЦикла;
	
	МассивИзмененных=ТабБюджетДвиженияРесурсов.НайтиСтроки(Новый Структура("РеквизитИзменен",Истина));
	
	Для Каждого СтрРеквизит ИЗ МассивИзмененных Цикл
		
		ДокументОбъект=СоответствиеОбъектов[СтрРеквизит.ОбработанныйОбъектСсылка];
		
		Если ДокументОбъект=Неопределено Тогда
			
			ДокументОбъект=СтрРеквизит.ОбработанныйОбъектСсылка.ПолучитьОбъект();
			ДокументОбъект.БюджетДвиженияРесурсов.Очистить();
			СоответствиеОбъектов.Вставить(СтрРеквизит.ОбработанныйОбъектСсылка,ДокументОбъект);
			
		КонецЕсли;
			
		НоваяСтрока=ДокументОбъект.БюджетДвиженияРесурсов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрРеквизит);
		
		СтрРеквизит.РеквизитИзменен=Ложь;
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение ИЗ СоответствиеОбъектов Цикл
		
		СтрокаОбработки=ТаблицаДокументовКОбработке.НайтиСтроки(Новый Структура("ОбработанныйОбъектСсылка",КлючИЗначение.Ключ));
		
		КлючИЗначение.Значение.Записать(?(СтрокаОбработки[0].ОбработкаЗавершена,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
		
		НаборЗаписей=РегистрыСведений.ОбработанныеОбъектыБД.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбработанныйОбъектСсылка.Установить(КлючИЗначение.Значение.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()>0 Тогда
			
			НаборЗаписей[0].ОбработкаЗавершена=СтрокаОбработки[0].ОбработкаЗавершена;
			НаборЗаписей.Записать(Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	СохранитьИзмененияНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	ОперативноеПланированиеФормыУХ.УстановитьУсловноеОформлениеДополнительныхАналитик(ЭтаФорма, 
		Элементы.ТабБюджетДвиженияДенежныхСредств, 
		Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств, Ложь,
		"ТабБюджетДвиженияДенежныхСредствАналитика");
		
	ОперативноеПланированиеФормыУХ.УстановитьУсловноеОформлениеДополнительныхАналитик(ЭтаФорма, 
		Элементы.ТабБюджетДоходовИРасходов, 
		Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов, Ложь,
		"ТабБюджетДоходовИРасходовАналитика");
		
	ОперативноеПланированиеФормыУХ.УстановитьУсловноеОформлениеДополнительныхАналитик(ЭтаФорма, 
		Элементы.ТабБюджетДвиженияРесурсов, 
		Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов, Ложь,
		"ТабБюджетДвиженияРесурсовАналитика");
		
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияДенежныхСредствПередНачаломИзменения(Элемент, Отказ)
	
	УстановитьСвязиПараметровВыбора(Элементы.ТабБюджетДвиженияДенежныхСредств.ТекущаяСтрока,
		ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств"));

КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДоходовИРасходовПередНачаломИзменения(Элемент, Отказ)
	
	УстановитьСвязиПараметровВыбора(Элементы.ТабБюджетДоходовИРасходов.ТекущаяСтрока,
		ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов"));

КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияРесурсовПередНачаломИзменения(Элемент, Отказ)
	
	УстановитьСвязиПараметровВыбора(Элементы.ТабБюджетДвиженияРесурсов.ТекущаяСтрока,
		ПредопределенноеЗначение("Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов"));

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеСтатьиНаСервере(ВидБюджета, Строка)
	
	ИмяТаблицы = ДвиженияБюджетированиеКлиентСерверУХ.ИмяТаблицыБюджета(ВидБюджета);
	Таблица = ЭтотОбъект["Таб" + ИмяТаблицы];

	ОперативноеПланированиеФормыУХ.УстановитьАналитикиСтатьи(Таблица.НайтиПоИдентификатору(Строка), ВидБюджета, "Аналитика%1");

	УстановитьСвязиПараметровВыбора(Строка, ВидБюджета);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияДенежныхСредствПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элементы.ТабБюджетДвиженияДенежныхСредств.ТекущиеДанные.ОбработанныйОбъектСсылка=Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДоходовИРасходовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элементы.ТабБюджетДоходовИРасходов.ТекущиеДанные.ОбработанныйОбъектСсылка=Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТабБюджетДвиженияРесурсовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элементы.ТабБюджетДвиженияРесурсов.ТекущиеДанные.ОбработанныйОбъектСсылка=Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОбъектаВИБ(СтрокаGUID)
	
	ТекСоединениеВИБ = УправлениеСоединениямиВИБУХ.ПолучитьСоединение(Объект.ИспользуемаяИБ, 1);
		
	Если ТекСоединениеВИБ=Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОбъектСсылкаВИБ=РасширениеИнтеграцииУХ.ПолучитьСсылкуПОСтрокеUUID(ТекСоединениеВИБ,"Документ",Объект.ДокументБД.Наименование,СтрокаGUID);
		
	ТипЗначения = РаботаСОбъектамиМетаданныхВнешнийУХ.ПолучитьXMLTypeOf(ТекСоединениеВИБ,ОбъектСсылкаВИБ).TypeName;
	
	СтруктураОбъекта=Новый Структура("ТипЗначения, Значение", ТипЗначения, РаботаСОбъектамиМетаданныхВнешнийУХ.ПолучитьXMLString(ТекСоединениеВИБ,ОбъектСсылкаВИБ));
	Возврат СтруктураОбъекта;
			
КонецФункции // ПолучитьДанныеОбъектаВИБ()


&НаКлиенте
Процедура ОткрытьИсходныйДокумент(Команда)
	
	Если Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запись=Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные;
	
	Если ТипЗнч(Запись.ИсходныйОбъектСсылка)=Тип("Строка") Тогда
		
		ДанныеОбъекта=ПолучитьДанныеОбъектаВИБ(Запись.ИсходныйОбъектСсылка);
		
		Если ТипЗнч(ДанныеОбъекта)=Тип("Структура") Тогда
			
			ОткрытьФорму("ОбщаяФорма.ОтображениеЭлементаWS_Управляемая", Новый Структура("Расшифровка, ИспользуемаяИБ", ДанныеОбъекта, Объект.ИспользуемаяИБ));
			
		КонецЕсли;
		
	Иначе
		
		ПоказатьЗначение(, Запись.ИсходныйОбъектСсылка);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовКОбработкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя="ТаблицаДокументовКОбработкеДокументОтраженияФакта" Тогда
		
		СтандартнаяОбработка=Ложь;
		
		Если НЕ ЗначениеЗаполнено(Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка) Тогда
			
			Возврат;
			
		КонецЕсли;
		
		ПоказатьЗначение(, Элементы.ТаблицаДокументовКОбработке.ТекущиеДанные.ОбработанныйОбъектСсылка);
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СписокРеквизитовФакт.Количество()>0 Тогда
		
		Элементы.ПанельНастройка.Доступность=Истина;
		Элементы.КнопкаРеквизитыФакт.Видимость=Ложь;
		
	Иначе
		
		Элементы.ПанельНастройка.Доступность=Ложь;
		Элементы.КнопкаРеквизитыФакт.Видимость=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ИзмененоОписаниеДокументаБД" Тогда
		
		Если Параметр.ДокументБД="ОтражениеФактическихДанныхБюджетирования" И Параметр.ТипБД=ПредопределенноеЗначение("Справочник.ТипыБазДанных.ТекущаяИБ") Тогда
			
			ОбновитьСписокРеквизитовФакт();
			
			Если СписокРеквизитовФакт.Количество()>0 Тогда
				
				Элементы.ПанельНастройка.Доступность=Истина;
				Элементы.КнопкаРеквизитыФакт.Видимость=Ложь;
				
			Иначе
				
				Элементы.ПанельНастройка.Доступность=Ложь;
				Элементы.КнопкаРеквизитыФакт.Видимость=Истина;
				
			КонецЕсли;
			
		Иначе
			
			ОбновитьСписокРеквизитовШапки();
			
			Если СписокРеквизитовШапки.Количество()>0 Тогда
				
				Элементы.ПанельРедактирование.Доступность=Истина;
				Элементы.КнопкаРеквизитыШапки.Видимость=Ложь;
				
			Иначе
				
				Элементы.ПанельРедактирование.Доступность=Ложь;
				Элементы.КнопкаРеквизитыШапки.Видимость=Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыФакт(Команда)
	
	ОткрытьФорму("Справочник.ДокументыБД.ФормаОбъекта",Новый Структура("Ключ",ДокументОтражениеФактическихДанных));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыШапки(Команда)
	
	ОткрытьФорму("Справочник.ДокументыБД.ФормаОбъекта",Новый Структура("Ключ",Объект.ДокументБД));
	
КонецПроцедуры
