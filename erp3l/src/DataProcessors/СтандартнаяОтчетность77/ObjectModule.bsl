
Перем СтруктураЗапроса Экспорт;
Перем СтрЗапрос Экспорт;
Перем ОбъектРасчета Экспорт;

Перем ТекРасшифровка;
Перем СтруктураОбластей;
Перем СтруктураИтоги Экспорт;
Перем Т;
Перем Обновить;
Перем ПредставлениеРУ;
Перем тИтСб, тИтКорСб, тРазворотСубконто;
Перем ТипИтога;
Перем НаименованиеФормы Экспорт;

Перем АдресХранилищаПеременныхДляРасчета Экспорт;

Функция ВывестиИтогиПоРегистру(СтруктураИтоги,ДопФильтр=Неопределено) Экспорт
	
	ТекРасшифровка = Новый Структура;
	
	Т=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("МакетИтогиПоРегистру");
	
	// Выводим шапку отчета
	
	Т.Вывести(Макет.ПолучитьОбласть("Отступ|Шапка"));
	
	ОбластьШапка=Макет.ПолучитьОбласть("ШапкаЗаголовок|Шапка");
	
	ОбластьШапка.Параметры.ТипОтчета=?(СтруктураИтоги.ТипРегистра="Обороты","Обороты","Остатки и обороты")+" по регистру";
	ОбластьШапка.Параметры.ИмяРегистра=СтруктураИтоги.ИмяРегистра+", ресурс "+СтруктураИтоги.РесурсРегистра;
	УточнениеОтбора = ОбъектРасчета.Организация.Наименование;
	
	ОбластьШапка.Параметры.Период="за "+ОбъектРасчета.ПериодОтчета;
	ОбластьШапка.Параметры.НазваниеОрганизации=УточнениеОтбора;
	
	НаименованиеФормы=ОбластьШапка.Параметры.ТипОтчета+" "+ОбластьШапка.Параметры.ИмяРегистра+" "+ОбластьШапка.Параметры.Период+", "+ОбластьШапка.Параметры.НазваниеОрганизации;
	
	Т.Присоединить(ОбластьШапка);
	
	Если Не ДопФильтр=Неопределено Тогда
		
		Т.Вывести(Макет.ПолучитьОбласть("Отступ|Отбор"));
		ОбластьОтбор=Макет.ПолучитьОбласть("ШапкаЗаголовок|Отбор");	
		
		ТекстОтбор="";
		Для Каждого СтрОтбор ИЗ ДопФильтр Цикл
			
			ТекстОтбор=ТекстОтбор+" И "+СтрОтбор.Представление+" = "+СтрОтбор.Значение.Наименование;
			
		КонецЦикла;
		
		ОбластьОтбор.Параметры.ТекстОтбор="Отбор: "+Сред(ТекстОтбор,2);
		
		Т.Присоединить(ОбластьОтбор);
		
	КонецЕсли;
	
	// Выводим шапку таблицы.
	
	Т.Вывести(Макет.ПолучитьОбласть("Отступ|ШапкаТаблицы"));
	
	ОбластьИзмерение=Макет.ПолучитьОбласть("Измерения|ШапкаТаблицы");

	ТекстСверткиИзмерения="";
	
	Если Не ДопФильтр=Неопределено Тогда
		
		ОбластьИзмерение.Параметры.Измерение="Документ";		
		Т.Присоединить(ОбластьИзмерение);
		
	Иначе
		
		Для Каждого КлючИЗначение ИЗ СтруктураИтоги.Измерения Цикл
			
			ОбластьИзмерение.Параметры.Измерение=КлючИЗначение.Ключ;
			ОбластьИзмерение.Параметры.Реквизиты=КлючИЗначение.Значение;
			
			Т.Присоединить(ОбластьИзмерение);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбластьРесурс=Макет.ПолучитьОбласть("Ресурсы|ШапкаТаблицы");

	МассивРесурсы=Новый Массив;
	
	Если СтруктураИтоги.ТипРегистра="Обороты" Тогда
		
		ОбластьРесурс.Параметры.Ресурс="Оборот";
		Т.Присоединить(ОбластьРесурс);
		МассивРесурсы.Добавить(СтруктураИтоги.РесурсРегистра+"Оборот");
		
	Иначе
		
		ОбластьРесурс.Параметры.Ресурс="Остаток на начало";
		Т.Присоединить(ОбластьРесурс);	
		МассивРесурсы.Добавить(СтруктураИтоги.РесурсРегистра+"НачОст");
	
		ОбластьРесурс.Параметры.Ресурс="Приход";
		Т.Присоединить(ОбластьРесурс);	
		МассивРесурсы.Добавить(СтруктураИтоги.РесурсРегистра+"Приход");
	
		ОбластьРесурс.Параметры.Ресурс="Расход";
		Т.Присоединить(ОбластьРесурс);	
		МассивРесурсы.Добавить(СтруктураИтоги.РесурсРегистра+"Расход");
	
		ОбластьРесурс.Параметры.Ресурс="Остаток на конец";
		Т.Присоединить(ОбластьРесурс);
		МассивРесурсы.Добавить(СтруктураИтоги.РесурсРегистра+"КонОст");
	
	КонецЕсли;
	
	СписокНачальныхЗначений=СтруктураИтоги.СписокНачальныхЗначений;
	
	Если СтруктураИтоги.ТипРегистра="Обороты" Тогда
		СписокНачальныхЗначений.Установить("ОстаткиОбороты",1);
	Иначе
		СписокНачальныхЗначений.Установить("ОстаткиОбороты",2);
	КонецЕсли;	
	
	СписокПолей=СтруктураЗапроса.База.CreateObject("СписокЗначений");
	
	Если ДопФильтр=Неопределено Тогда
		
		Для Каждого КлючИЗначение ИЗ СтруктураИтоги.Измерения Цикл
			СписокПолей.ДобавитьЗначение(КлючИЗначение.Ключ,КлючИЗначение.Ключ);
		КонецЦикла;
		
	Иначе
		
		СписокНачальныхЗначений.Установить("ПоДокументам",1);
		
	КонецЕсли;
	
	СписокНачальныхЗначений.Установить("СписокПолей",СписокПолей);
	
	Если Не ДопФильтр=Неопределено Тогда
		
		СписокОтборов=СписокНачальныхЗначений.Получить("СписокОтборов");
		Для Каждого СтрОтбор ИЗ ДопФильтр Цикл
			СписокОтборов.ДобавитьЗначение(СтрОтбор.Значение, СтрОтбор.Представление);
		КонецЦикла;
		
		СписокНачальныхЗначений.Установить("СписокОтборов",СписокОтборов);
		
	КонецЕсли;	
	
	ТЗ_ВИБ = Неопределено;
	СтруктураЗапроса.База.СохранитьЗначение("_СписокНачальныхЗначений", СписокНачальныхЗначений);
	СтруктураЗапроса.База.ExecuteBatch("ОткрытьФормуМодально(""Обработка.GetTotals"")"); // Открываем обработку для получения данных из ВИБ
	Попытка
		ТаблИтоги = СтруктураЗапроса.База.ВосстановитьЗначение("_ТаблицаДанных", Неопределено);
	Исключение
		Возврат Т;
	КонецПопытки;
			
	ОбластьИзмерение=Макет.ПолучитьОбласть("Измерения|ТелоОтчета");
	ОбластьРесурсы=Макет.ПолучитьОбласть("Ресурсы|ТелоОтчета");
	
	СтруктураПодвал=Новый Структура;
	
	Для Каждого Ресурс ИЗ МассивРесурсы Цикл
		СтруктураПодвал.Вставить(Ресурс,0);
	КонецЦикла;
	
	ТаблИтоги.ВыбратьСтроки();
	
	Пока ТаблИтоги.ПолучитьСтроку() = 1 Цикл
		
		Т.Вывести(Макет.ПолучитьОбласть("Отступ|ТелоОтчета"));
		СтруктураРеквизитовСтрока=Новый Структура;
				
		Если ДопФильтр=Неопределено Тогда
			
			СтруктураРеквизитовСтрока.Вставить("СтрокаРегистра");
			
			// Выведем значения измерений
			
			Для Каждого КлючИЗначение ИЗ СтруктураИтоги.Измерения Цикл
				
				ПредставлениеИзмерения="";
				СтруктураРеквизитов=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(КлючИЗначение.Значение);
				
				Если КлючИЗначение.Значение.Тип="Справочник" Тогда
					
					ПредставлениеИзмерения=ТаблИтоги[КлючИЗначение.Ключ].Наименование;
					СтруктураРеквизитов.Вставить("Код",ТаблИтоги[КлючИЗначение.Ключ].Код);
					
				ИначеЕсли КлючИЗначение.Значение.Тип="Перечисление" Тогда 
					
					ПредставлениеИзмерения=ТаблИтоги[КлючИЗначение.Ключ].Identifier();
					СтруктураРеквизитов.Вставить("Идентификатор",ТаблИтоги[КлючИЗначение.Ключ].Identifier());
					
				КонецЕсли;
				
				ОбластьИзмерение.Параметры.ЗначениеИзмерения=ПредставлениеИзмерения;
				ОбластьИзмерение.Параметры.РасшифровкаИзмерения=СтруктураРеквизитов;
				
				Т.Присоединить(ОбластьИзмерение);
				
				СтруктураРеквизитовСтрока.Вставить(КлючИЗначение.Ключ,СтруктураРеквизитов);
				
			КонецЦикла;
			
			Т.Область(Т.ВысотаТаблицы,1).Расшифровка = СтруктураРеквизитовСтрока;
			
		Иначе
			
			СтруктураДокумент=Новый Структура;
			
			ТекущийДокумент=ТаблИтоги.ТекДокумент;
			НомерДок=ТекущийДокумент.НомерДок;
			ДатаДок=ТекущийДокумент.ДатаДок;
			
			Если Не ТекущийДокумент.Вид()="" Тогда
				ОбластьИзмерение.Параметры.ЗначениеИзмерения=ТекущийДокумент.ПредставлениеВида()+" №"+НомерДок+" от "+Формат(ДатаДок,"ДФ=dd.MM.yyyy");
				СтруктураДокумент.Вставить("Вид",ТекущийДокумент.Вид());
				СтруктураДокумент.Вставить("НомерДок",НомерДок);
				СтруктураДокумент.Вставить("ДатаДок",ДатаДок);
				СтруктураРеквизитовСтрока.Вставить("СтруктураДокумент",СтруктураДокумент);
			КонецЕсли;
			
			Т.Присоединить(ОбластьИзмерение);				
						
			Т.Область(Т.ВысотаТаблицы,1).Расшифровка = СтруктураРеквизитовСтрока;
			
		КонецЕсли;	
		
		// Выведем значения ресурсов
		
		Для Каждого Ресурс ИЗ МассивРесурсы Цикл
			
			ОбластьРесурсы.Параметры.ЗначениеРесурса=Формат(ТаблИтоги[Ресурс],"ЧДЦ=2");
			
			РасшифровкаРесурс=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(СтруктураРеквизитовСтрока);
			РасшифровкаРесурс.Вставить("Ресурс",Ресурс);
			ОбластьРесурсы.Параметры.РасшифровкаРесурса=РасшифровкаРесурс;
			
			СтруктураПодвал[Ресурс]=СтруктураПодвал[Ресурс]+ТаблИтоги[Ресурс];
			
			Т.Присоединить(ОбластьРесурсы);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Т.Вывести(Макет.ПолучитьОбласть("Отступ|Подвал"));
	
	ОбластьИзмерение=Макет.ПолучитьОбласть("Измерения|Подвал");
	ОбластьРесурсы=Макет.ПолучитьОбласть("Ресурсы|Подвал");
	
	Если ДопФильтр=Неопределено Тогда 
		
		Для Каждого КлючИЗначение ИЗ СтруктураИтоги.Измерения Цикл
			
			Т.Присоединить(ОбластьИзмерение);
			
		КонецЦикла;
		
	Иначе
		
		Т.Присоединить(ОбластьИзмерение);
		
	КонецЕсли;	
	
	Для Каждого Ресурс ИЗ МассивРесурсы Цикл
		
		ОбластьРесурсы.Параметры.Итого=Формат(СтруктураПодвал[Ресурс],"ЧДЦ=2");
		
		Т.Присоединить(ОбластьРесурсы);
		
	КонецЦикла;
		
	Т.Защита=Истина;
	
	Возврат Т;
	
КонецФункции // ВывестиИтогиПоРегистру()	

////////////////////////////////////////////////////////////////////
// Процедуры и функции для формирования отчета типа "Анализ счета".

Функция ВывестиАнализСчета(СтруктураИтоги)
		
	ТекРасшифровка = Новый Структура;

	Т=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("МакетАнализСчета");
	СтруктураОбластей=Новый Структура;
	
	Для Инд=1 По 8 Цикл
		
		СтруктураОбластей.Вставить("Секция_"+Инд,Макет.ПолучитьОбласть("Секция_"+Инд));
		
	КонецЦикла;
    	
   	НазваниеОрганизации = ОбъектРасчета.Организация.Наименование;
	
	СтруктураОбластей.Секция_1.Параметры.Заголовок="Анализ счета "+Операнд.Счет.Код;
	СтруктураОбластей.Секция_1.Параметры.Период="за "+ОбъектРасчета.ПериодОтчета;
	СтруктураОбластей.Секция_1.Параметры.НазваниеОрганизации=НазваниеОрганизации;
	
	НаименованиеФормы=СтруктураОбластей.Секция_1.Параметры.Заголовок+" "+СтруктураОбластей.Секция_1.Параметры.Период+", "+СтруктураОбластей.Секция_1.Параметры.НазваниеОрганизации;

	Т.Вывести(СтруктураОбластей.Секция_1);
		
	ПоСчетам(СтруктураИтоги);
	
	Т.Защита=Истина;
	
	Возврат Т;
	                                                                    	
КонецФункции // ВывестиАнализСчета() 


//----------------------------------------------------------------------
Процедура ПоКорСубконто(СтруктураИтогов)
	
КонецПроцедуры

//-----------------------------------------------
Процедура ПоКорСчетам(СтруктураИтогов)
	
	Ит=СтруктураИтогов.Ит;
	
	СтруктураОбластей.Секция_2.Параметры.СНД=Формат(Ит.СНД(),"ЧДЦ=2");
	СтруктураОбластей.Секция_2.Параметры.СНК=Формат(Ит.СНК(),"ЧДЦ=2");
	
	Т.Вывести(СтруктураОбластей.Секция_2);

   	Ит.ВыбратьКорСчета();
	Пока Ит.ПолучитьКорСчет() = 1 Цикл
		
		ТекРасшифровка.Вставить("КоррСчет", Ит.КорСчет.Код);
		
		СтруктураОбластей.Секция_3.Параметры.КорСчет=Ит.КорСчет.Код;
		СтруктураОбластей.Секция_3.Параметры.РасшифровкаКорСчет=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);
		
		ТекРасшифровка.Вставить("ДтКт","Дт");
		СтруктураОбластей.Секция_3.Параметры.РасшифровкаКорДО=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);
		СтруктураОбластей.Секция_3.Параметры.КорДО=Формат(Ит.КорДО(),"ЧДЦ=2");
		
		ТекРасшифровка.Вставить("ДтКт","Кт");
		СтруктураОбластей.Секция_3.Параметры.РасшифровкаКорКО=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);
		СтруктураОбластей.Секция_3.Параметры.КорКО=Формат(Ит.КорКО(),"ЧДЦ=2");
			
		Т.Вывести(СтруктураОбластей.Секция_3);
		ПоКорСубконто(СтруктураИтогов);
	
	КонецЦикла;
	
	ТекРасшифровка.Вставить("КоррСчет",Неопределено);
	СтруктураОбластей.Секция_4.Параметры.ДО=Формат(Ит.ДО(),"ЧДЦ=2");
	СтруктураОбластей.Секция_4.Параметры.КО=Формат(Ит.КО(),"ЧДЦ=2");
    СтруктураОбластей.Секция_4.Параметры.Расшифровка=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);

	Т.Вывести(СтруктураОбластей.Секция_4);
	
	СтруктураОбластей.Секция_5.Параметры.СКД=Формат(Ит.СКД(),"ЧДЦ=2");
	СтруктураОбластей.Секция_5.Параметры.СКК=Формат(Ит.СКК(),"ЧДЦ=2");
	
	Т.Вывести(СтруктураОбластей.Секция_5);
	
КонецПроцедуры        

//----------------------------------------------------------------------
Процедура ПоСубконто(СтруктураИтоги)              
	
	
КонецПроцедуры

//-----------------------------------------------
Процедура ПоСчетам(СтруктураИтоги)
	
	Ит=СтруктураИтоги.Ит;
	
	Ит.ВыбратьСчета();
	Пока Ит.ПолучитьСчет() = 1 Цикл
		
		ТекРасшифровка.Вставить("Счет", СокрЛП(Ит.Счет.Код));
		СтруктураОбластей.Секция_7.Параметры.Счет=СокрЛП(Ит.Счет.Код);
		СтруктураОбластей.Секция_7.Параметры.РасшифровкаСчет=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);	
		Т.Вывести(СтруктураОбластей.Секция_7);
		
		ПоКорСчетам(СтруктураИтоги);
		ПоСубконто(СтруктураИтоги);

	КонецЦикла;
	
КонецПроцедуры       

////////////////////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции формирования отчета типа "Отчет по проводкам".

Функция ВывестиОтчетПоПроводкам() Экспорт
	
	ТекРасшифровка = Новый Структура;

	Т=Новый ТабличныйДокумент;
	
	Макет=ПолучитьМакет("МакетОтчетПоПроводкам");
	СтруктураОбластей=Новый Структура;
	
	Для Инд=1 По 3 Цикл
		
		СтруктураОбластей.Вставить("Секция_"+Инд,Макет.ПолучитьОбласть("Секция_"+Инд));
		
	КонецЦикла;
	
	НазваниеОрганизации = ОбъектРасчета.Организация.Наименование;
	
	СтруктураОбластей.Секция_1.Параметры.Заголовок=СокрЛП(СтруктураЗапроса.СписокСчетов[0].Значение)+", "+СокрЛП(СтруктураЗапроса.СписокКоррСчетов[0].Значение);
	СтруктураОбластей.Секция_1.Параметры.Период="за "+ОбъектРасчета.ПериодОтчета;
	СтруктураОбластей.Секция_1.Параметры.НазваниеОрганизации=НазваниеОрганизации;
	
	НаименованиеФормы="Журнал проводок "+СтруктураОбластей.Секция_1.Параметры.Заголовок+" "+СтруктураОбластей.Секция_1.Параметры.Период+", "+СтруктураОбластей.Секция_1.Параметры.НазваниеОрганизации;
	
	Т.Вывести(СтруктураОбластей.Секция_1);
	
	Опер=СтруктураЗапроса.База.CreateObject("Операция");
	Сумма=0;
		
	РазделительУчета=Неопределено;
	
	Для Каждого СтрокаВычисления Из СтруктураЗапроса.ТаблицаВычисленияПараметров Цикл
		
		Если СтрокаВычисления.ТипРасчета = "НеИспользуется" Тогда
			Продолжить;
		ИначеЕсли СтрокаВычисления.ИмяПараметра = "Организация" Тогда
			ЗначениеПараметра = ИнтеграцияСВнешнимиСистемамиУХ.ПолучитьЗначениеВИБНаОснованииОтбора77(СтруктураЗапроса.ВИБ,СтруктураЗапроса.База, СтрокаВычисления, Ложь);
			
			Если ЗначениеПараметра <> Неопределено Тогда
				
				РазделительУчета=ЗначениеПараметра[0];
				
			КонецЕсли;
			
		Иначе
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = СтруктураЗапроса.ТекстЗапроса;
	ПланСчетов   = СтруктураЗапроса.База.ПланыСчетов.ЗначениеПоИдентификатору(СокрЛП(СтрПолучитьСтроку(ТекстЗапроса, 1)));
	
	СтрФильтр="";
	Для Каждого СтрСчет ИЗ СтруктураЗапроса.СписокСчетов Цикл
		
		Для Каждого СтрКоррСчет ИЗ СтруктураЗапроса.СписокКоррСчетов Цикл
			
			СтрФильтр=СтрФильтр+";"+СтрСчет.Значение+","+СтрКоррСчет.Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Опер.ВыбратьОперацииСПроводками(ОбъектРасчета.ПериодОтчета.ДатаНачала, 
									ОбъектРасчета.ПериодОтчета.ДатаОкончания, 
									Сред(СтрФильтр,2),"",ПланСчетов,РазделительУчета);
									
	Пока Опер.ПолучитьПроводку() = 1 Цикл
		
		НомерДок=Опер.Документ.НомерДок;
		ДатаДок=Опер.Документ.ДатаДок;
		
		СтруктураОбластей.Секция_2.Параметры.ОперДатаОперации=Опер.ДатаОперации;
		СтруктураОбластей.Секция_2.Параметры.Опер=Опер.Документ.ПредставлениеВида()+" №"+НомерДок+" от "+Формат(ДатаДок,"ДФ=dd.MM.yyyy");
		СтруктураОбластей.Секция_2.Параметры.ОперПредставлениеПроводки=Опер.ПредставлениеПроводки(1);
		СтруктураОбластей.Секция_2.Параметры.ОперДебетСчет=Опер.Дебет.Счет.Код;
		СтруктураОбластей.Секция_2.Параметры.ОперКредитСчет=Опер.Кредит.Счет.Код;
		СтруктураОбластей.Секция_2.Параметры.ОперСумма=Формат(Опер.Сумма,"ЧДЦ=2");
		СтруктураОбластей.Секция_2.Параметры.ОперКоличество=Формат(Опер.Количество,"ЧДЦ=3");
		
		ТекРасшифровка.Вставить("ТипОбъектаМетаданных","Документ");
		ТекРасшифровка.Вставить("Вид",Опер.Документ.Вид());
		ТекРасшифровка.Вставить("НомерДок",НомерДок);
		ТекРасшифровка.Вставить("ДатаДок",ДатаДок);
		
		СтруктураОбластей.Секция_2.Параметры.РасшифровкаДок=ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(ТекРасшифровка);
		
		Сумма=Сумма+Опер.Сумма;
				
		Т.Вывести(СтруктураОбластей.Секция_2);
		
	КонецЦикла;
	
	СтруктураОбластей.Секция_3.Параметры.Сумма=Формат(Сумма,"ЧДЦ=2");

	Т.Вывести(СтруктураОбластей.Секция_3);	
	
	Т.Защита=Истина;
	
	Возврат Т;
							
КонецФункции // ВывестиОтчетПоПроводкам()

Процедура ПодготовитьСтруктуруЗапросаОперанд() Экспорт
	
	СтруктураЗапроса = РасширениеИнтеграцииУХ.ПодготовитьСтруктуруЗапроса(ОбъектРасчета, СтрЗапрос);
	
	Если СтрЗапрос.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнешниеДанныеОстаткиИОборотыИзПланаСчетов Тогда
		
		СписокСчетовИтог=Новый СписокЗначений;
		СписокКоррСчетовИтог=Новый СписокЗначений;
		
		СписокРесурсов=Новый СписокЗначений;
		
		ТабСчетаОперандов=Новый ТаблицаЗначений;
		ТабСчетаОперандов.Колонки.Добавить("КодОперанда",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(100));
		ТабСчетаОперандов.Колонки.Добавить("СчетДанные",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(20));
		ТабСчетаОперандов.Колонки.Добавить("КоррСчетДанные",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(20));
		
		СоответствиеРесурсов=Новый Соответствие;
		
		Для Каждого ТекОперанд Из СтрЗапрос.ТаблицаОперандов Цикл
			
			Если СписокСчетовИтог.НайтиПоЗначению(ТекОперанд.Счет.Код)=Неопределено Тогда 
				СписокСчетовИтог.Добавить(ТекОперанд.Счет.Код);
			КонецЕсли;
			
			Если (Не ПустаяСтрока(ТекОперанд.КоррСчет)) И СписокКоррСчетовИтог.НайтиПоЗначению(ТекОперанд.КоррСчет.Код)=Неопределено Тогда
				СписокКоррСчетовИтог.Добавить(ТекОперанд.КоррСчет.Код);
			КонецЕсли;
			
			Если СписокРесурсов.НайтиПоЗначению(ТекОперанд.Ресурс)=Неопределено Тогда
				СписокРесурсов.Добавить(ТекОперанд.Ресурс);
			КонецЕсли;
			
			СоответствиеРесурсов.Вставить(СокрЛП(ТекОперанд.Код),ТекОперанд.Ресурс);
			
			НоваяСтрока=ТабСчетаОперандов.Добавить();
			НоваяСтрока.КодОперанда=СокрЛП(ТекОперанд.Код);
			НоваяСтрока.СчетДанные=ТекОперанд.Счет;
			НоваяСтрока.КоррСчетДанные=ТекОперанд.КоррСчет;
			
		КонецЦикла;
		
		СтруктураЗапроса.Вставить("СписокРесурсов",СписокРесурсов);
		СтруктураЗапроса.Вставить("ВИБ",Новый Структура("ВИБ,ТипПодключения",ОбъектРасчета.ИспользуемаяИБ,0));
		
		СтруктураЗапроса.Вставить("СписокСчетов",СписокСчетовИтог);
		СтруктураЗапроса.Вставить("СписокКоррСчетов",СписокКоррСчетовИтог);
		СтруктураЗапроса.Вставить("ПравилаИспользованияПолей",ОбщегоНазначенияУХ.ПолучитьЭлементСтруктурыПоИндексу(СтруктураЗапроса.СтруктураПолей,0).Значение);
		
	Иначе
		
		СтруктураЗапроса.Вставить("КодОперанда");
		СтруктураЗапроса.Вставить("ТаблицаИспользованияПолейЗапроса");
		СтруктураЗапроса.Вставить("ВИБ",Новый Структура("ВИБ,ТипПодключения",ОбъектРасчета.ИспользуемаяИБ,0));
		
		ТабСчетаСписок=Новый ТаблицаЗначений;
		ТабСчетаСписок.Колонки.Добавить("Операнд");
		
		ТекОперанд=СтрЗапрос.ТаблицаОперандов[0];
		
		НоваяСтрока=ТабСчетаСписок.Добавить();
		НоваяСтрока.Операнд=СокрЛП(ТекОперанд.Код);
				
		СтруктураЗапроса.КодОперанда                      = СокрЛП(ТекОперанд.Код);
		
		СтруктураЗапроса.ТаблицаИспользованияПолейЗапроса = СтруктураЗапроса.СтруктураПолей[СтруктураЗапроса.КодОперанда];
		
		
	КонецЕсли;
	
КонецПроцедуры // ПодготовитьСтруктуруЗапроса()

Функция ПолучитьТаблицуОтчета() Экспорт
		
	ПодготовитьСтруктуруЗапросаОперанд();
	
	Если СтрЗапрос.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнешниеДанныеОстаткиИОборотыИзПланаСчетов Тогда
			
		ДанныеРесурса=ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(Операнд.ТекстЗапросаМодуля,"_");
		ВидИтога=ДанныеРесурса[0];
		ТипИтога=ДанныеРесурса[1];
		
		Если СтруктураЗапроса.СписокКоррСчетов.Количество()>0 Тогда
			
			Возврат ВывестиОтчетПоПроводкам();
			
		Иначе
			
			СтруктураИтоги = ИнтеграцияСВнешнимиСистемамиУХ.ПолучитьТаблицуДанныхПоЗапросу77(СтруктураЗапроса,Истина);
			Возврат ВывестиАнализСчета(СтруктураИтоги);
			
		КонецЕсли;
		
	ИначеЕсли СтрЗапрос.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнешниеДанныеРегистр Тогда
		
		СтруктураИтоги = ИнтеграцияСВнешнимиСистемамиУХ.ПолучитьТаблицуДанныхДляРегистра77(СтруктураЗапроса,,Истина);
		Возврат ВывестиИтогиПоРегистру(СтруктураИтоги);
		
	КонецЕсли;
	
КонецФункции // ПолучитьТаблицуОтчета()

Функция ПодготовитьСтруктуруПеременныхДляРасчета() Экспорт
	
	СтруктураПеременных=Новый Структура;
	СтруктураПеременных.Вставить("СтруктураЗапроса",СтруктураЗапроса);
	СтруктураПеременных.Вставить("СтрЗапрос",		СтрЗапрос);
	СтруктураПеременных.Вставить("ОбъектРасчета",	ОбъектРасчета);
	СтруктураПеременных.Вставить("СтруктураИтоги",	СтруктураИтоги);
	
	Возврат СтруктураПеременных;
	
КонецФункции // ПодготовитьСтруктуруПеременныхДляРасчета()

Процедура ВосстановитьПеременныеДляРасчета() Экспорт
	
	ПеременныеДляРасчета=ПолучитьИзВременногоХранилища(АдресХранилищаПеременныхДляРасчета);
	
	Если ТипЗнч(ПеременныеДляРасчета)=Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ПеременныеДляРасчета);
		
	КонецЕсли;
	
КонецПроцедуры // ВосстановитьПеременныеДляРасчета()
