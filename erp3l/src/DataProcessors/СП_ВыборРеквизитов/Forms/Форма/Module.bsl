
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ИмяОбъекта") Тогда
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	Параметры.Свойство("ИмяОбъекта", ИмяОбъекта);
	Параметры.Свойство("СтруктураИсключаемых", СтруктураИсключаемых);
	
	Если СтруктураИсключаемых = Неопределено Тогда
		СтруктураИсключаемых = НоваяСтруктураИсключаемыхПолей();
	КонецЕсли;
	
	ЗаполнитьДеревоРеквизитовОбъекта();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагПриИзменении(Элемент)
	
	ИДТекущейСтроки = Элементы.ДеревоРеквизитов.ТекущаяСтрока;
	
	ФлагНеВыбран = 0;
	ФлагВыбраныПодчиненные = 2;
	
	Если ИДТекущейСтроки <> Неопределено Тогда
		
		ЭлементКоллекции = ЭтотОбъект.ДеревоРеквизитов.НайтиПоИдентификатору(ИДТекущейСтроки);
		Если ЭлементКоллекции.Флаг = ФлагВыбраныПодчиненные Тогда
			ЭлементКоллекции.Флаг = ФлагНеВыбран;
		КонецЕсли;
		
		УстановитьФлагВыбора(ЭлементКоллекции, ЭлементКоллекции.Флаг);
		
		Родитель = ЭлементКоллекции.ПолучитьРодителя();
		Пока Родитель <> Неопределено Цикл
			
			Если ФлагУстановленДляВсех(ЭлементКоллекции) Тогда
				Родитель.Флаг = ЭлементКоллекции.Флаг;
			Иначе
				Родитель.Флаг = ФлагВыбраныПодчиненные;
			КонецЕсли;
			
			ЭлементКоллекции = Родитель;
			Родитель = ЭлементКоллекции.ПолучитьРодителя();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагВыбора(ЭлементКоллекции, ФлагВыбора)
	
	ЭлементыТекущейСтроки = ЭлементКоллекции.ПолучитьЭлементы();
	
	Для Каждого ТекЭлемент Из ЭлементыТекущейСтроки Цикл
		
		ТекЭлемент.Флаг = ФлагВыбора;
		УстановитьФлагВыбора(ТекЭлемент, ТекЭлемент.Флаг);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ФлагУстановленДляВсех(ЭлементКоллекции)
	
	СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	
	ФлагУстановлен = Истина;
	
	Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
		
		Если ТекЭлемент.Флаг <> ЭлементКоллекции.Флаг Тогда
			ФлагУстановлен = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ФлагУстановлен;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	ИсключаемыеПоля = ПолучитьСтруктуруИсключаемыхПолей();
	
	Закрыть(ИсключаемыеПоля);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоРеквизитовОбъекта()
	
	Если Не ЗначениеЗаполнено(ИмяОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	МетаОбъект = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	Дерево = РеквизитФормыВЗначение("ДеревоРеквизитов");
	Дерево.Строки.Очистить();
	
	СписокГрупп = "СтандартныеРеквизиты";
	Если СП_ОбменДанными.ЭтоРегистр(ИмяОбъекта) Тогда
		СписокГрупп = СписокГрупп + ",Измерения,Ресурсы,Реквизиты";
	Иначе
		Если Метаданные.Задачи.Содержит(МетаОбъект) Тогда
			СписокГрупп = СписокГрупп + ",РеквизитыАдресации";
		КонецЕсли;
		СписокГрупп = СписокГрупп + ",Реквизиты,ТабличныеЧасти";
	КонецЕсли;
	
	МассивГрупп = СтрРазделить(СписокГрупп, ",");
	Для Каждого ИмяГруппы Из МассивГрупп Цикл
		
		СтрокаРодитель = Дерево.Строки.Добавить();
		СтрокаРодитель.ИмяРеквизита = ИмяГруппы;
		СтрокаРодитель.ПолноеИмяРеквизита = ИмяГруппы;
		СтрокаРодитель.СинонимРеквизита = ИмяГруппы;
		СтрокаРодитель.Флаг = ОпределитьФлагТекущейСтроки(ИмяГруппы);
		
		ЭтоТабЧасть = (ИмяГруппы = "ТабличныеЧасти");
		ДобавитьГруппуВДеревоРеквизитов(СтрокаРодитель.Строки, МетаОбъект[ИмяГруппы], ЭтоТабЧасть);
		
		Если СтрокаРодитель.Строки.Количество() = 0 Тогда
			Дерево.Строки.Удалить(СтрокаРодитель);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизитов");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьГруппуВДеревоРеквизитов(КоллекцияСтрок, КоллекцияРеквизитов, ЭтоТабЧасть = Ложь)
	
	Для Каждого Реквизит Из КоллекцияРеквизитов Цикл
		
		ИмяРодителя = КоллекцияСтрок.Родитель.ИмяРеквизита;		
		Если ЭтоСтандартнаяСсылка(Реквизит.Имя, ИмяРодителя) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРеквизит = КоллекцияСтрок.Добавить();
		СтрокаРеквизит.ИмяРеквизита       = Реквизит.Имя;
		СтрокаРеквизит.ПолноеИмяРеквизита = ОпределитьПолноеИмяРеквизита(СтрокаРеквизит);
		СтрокаРеквизит.СинонимРеквизита   = ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним);
		СтрокаРеквизит.Флаг               = ОпределитьФлагТекущейСтроки(СтрокаРеквизит.ПолноеИмяРеквизита);
		
		Если ЭтоТабЧасть Тогда
			ДобавитьГруппуВДеревоРеквизитов(СтрокаРеквизит.Строки, Реквизит.Реквизиты);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьПолноеИмяРеквизита(СтрокаРеквизит)
	
	Если СтрокаРеквизит.Родитель = Неопределено Тогда
		ПолноеИмяРодителя = "";
	Иначе
		ПолноеИмяРодителя = СтрокаРеквизит.Родитель.ПолноеИмяРеквизита;
	КонецЕсли; 
	
	Возврат СтрШаблон("%1.%2", ПолноеИмяРодителя, СтрокаРеквизит.ИмяРеквизита);
	
КонецФункции

&НаСервере
Функция ОпределитьФлагТекущейСтроки(ПолноеИмяРеквизита)
	
	ЧастиИмени = СтрРазделить(ПолноеИмяРеквизита, ".");
	ВычисляемаяСтруктура = СтруктураИсключаемых;
	
	ФлагВыбран = 1;
	ФлагНеВыбран = 0;
	ФлагВыбраныПодчиненные = 2;
	
	Для А = 0 По ЧастиИмени.ВГраница() Цикл
		
		Если ВычисляемаяСтруктура.Свойство(ЧастиИмени[А]) Тогда
			ВычисляемаяСтруктура = ВычисляемаяСтруктура[ЧастиИмени[А]];
			Если ВычисляемаяСтруктура = Неопределено Тогда
				ФлагСтроки = ФлагНеВыбран;
			Иначе
				ФлагСтроки = ФлагВыбраныПодчиненные;
			КонецЕсли;
			
		Иначе
			ФлагСтроки = ФлагВыбран;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ФлагСтроки;
	
КонецФункции

&НаСервере
Функция ЭтоСтандартнаяСсылка(ИмяРеквизита, ИмяРодителя)
	
	Возврат ИмяРеквизита = "Ссылка" И ИмяРодителя = "СтандартныеРеквизиты";
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруИсключаемыхПолей()
	
	ИсключаемыеПоля = Новый Структура();
	
	Дерево = РеквизитФормыВЗначение("ДеревоРеквизитов");
	Если Дерево.Строки.Количество() = 0 Тогда
		Возврат ИсключаемыеПоля;
	КонецЕсли;
	
	ЗаполнитьИсключаемыеПоляРекурсивно(ИсключаемыеПоля, Дерево.Строки);
	
	ДобавитьИсключаемыеПоляПоУмолчанию(ИсключаемыеПоля);
	
	Возврат ИсключаемыеПоля;
	
КонецФункции

&НаСервере
Процедура ДобавитьИсключаемыеПоляПоУмолчанию(ИсключаемыеПоля)
	
	Если ИсключаемыеПоля.Свойство("СтандартныеРеквизиты") Тогда
		ИсключаемыеПоля.СтандартныеРеквизиты.Вставить("Ссылка");
	Иначе
		ИсключаемыеПоля.Вставить("СтандартныеРеквизиты", Новый Структура("Ссылка"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсключаемыеПоляРекурсивно(ИсключаемыеПоля, СтрокиДерева)
	
	ФлагВыбран = 1;
	ФлагНеВыбран = 0;
	
	Для Каждого ТекСтрока Из СтрокиДерева Цикл
		
		Если ТекСтрока.Флаг = ФлагВыбран Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрока.Строки.Количество() = 0 Тогда
			Если ТекСтрока.Флаг = ФлагНеВыбран Тогда
				ИсключаемыеПоля.Вставить(ТекСтрока.ИмяРеквизита);
			КонецЕсли;
			
		Иначе
			ИсключаемыеПоля.Вставить(ТекСтрока.ИмяРеквизита, Новый Структура);
			ЗаполнитьИсключаемыеПоляРекурсивно(ИсключаемыеПоля[ТекСтрока.ИмяРеквизита], ТекСтрока.Строки);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НоваяСтруктураИсключаемыхПолей()
	
	Исключаемые = Новый Структура;
	
	МетаОбъект = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	Если СП_ОбменДанными.ЭтоРегистр(ИмяОбъекта) Тогда
		СписокГрупп = "Измерения,Ресурсы,Реквизиты";
	Иначе
		СписокГрупп = "Реквизиты,ТабличныеЧасти";
		Если Метаданные.Задачи.Содержит(МетаОбъект) Тогда
			СписокГрупп = "РеквизитыАдресации," + СписокГрупп;
		КонецЕсли;
	КонецЕсли;
	
	МассивГрупп = СтрРазделить(СписокГрупп, ",");
	
	Для Каждого ИмяГруппы Из МассивГрупп Цикл
		
		ЭтоТабЧасть = (ИмяГруппы = "ТабличныеЧасти");
		Исключаемые.Вставить(ИмяГруппы, Новый Структура);
		ДобавитьИсключаемыеРеквизиты(Исключаемые[ИмяГруппы], МетаОбъект[ИмяГруппы], ЭтоТабЧасть);
		
		Если Исключаемые[ИмяГруппы].Количество() = 0 Тогда
			Исключаемые.Удалить(ИмяГруппы);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Исключаемые;
	
КонецФункции

&НаСервере
Процедура ДобавитьИсключаемыеРеквизиты(Исключаемые, КоллекцияРеквизитов, ЭтоТабЧасть = Ложь)
	
	Для Каждого Реквизит Из КоллекцияРеквизитов Цикл
		
		Если ЭтоТабЧасть Тогда
			Исключаемые.Вставить(Реквизит.Имя, Новый Структура);
			ДобавитьИсключаемыеРеквизиты(Исключаемые[Реквизит.Имя], Реквизит.Реквизиты);
			
			Если Исключаемые[Реквизит.Имя].Количество() = 0 Тогда
				Исключаемые.Удалить(Реквизит.Имя);
			КонецЕсли;
			
		Иначе
			Если СтрНачинаетсяС(НРег(Реквизит.Имя), "удалить") Тогда
				Исключаемые.Вставить(Реквизит.Имя);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
