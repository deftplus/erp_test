Перем СписокПериодов Экспорт;
Перем ТабШаблонКорректировок;
Перем ТабШаблонПоказателей;
Перем РассчитыватьЗависимые;
Перем ОбработкаВыполнена;

Функция ВыполнитьАктуализациюБюджетов() Экспорт
	
	Если Не ПроверитьВозможностьАктуализации() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ОбработкаВыполнена=Истина;
	
	ПеренестиОтклонения();
	
	Возврат ОбработкаВыполнена;
	
КонецФункции // ВыполнитьАктуализациюБюджетов()

Функция ПроверитьВозможностьАктуализации()
					
	НовыйПериод = УправлениеОтчетамиУХ.ПолучитьСледующийПериод(ПериодОтчета,1);
	
	Если НЕ ЗначениеЗаполнено(НовыйПериод) Тогда
		
		СтрокаШаблона = Нстр("ru = 'Не удалось определить период, следующий за %1. Проверьте наличие соответствующего
		|элемента справочника ""Периоды"". Актуализация не выполнена.'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда				
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, ПериодОтчета),,, СтатусСообщения.Внимание);
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтатусыПериодовСценариев.СтатусБлокировки
	|ИЗ
	|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
	|ГДЕ
	|	СтатусыПериодовСценариев.Сценарии = &Сценарии
	|	И СтатусыПериодовСценариев.Организации = &Организации
	|	И СтатусыПериодовСценариев.Периоды = &Периоды";
	
	Запрос.УстановитьПараметр("Сценарии",	СценарийПлан);
	Запрос.УстановитьПараметр("Организации",Организация);
	Запрос.УстановитьПараметр("Периоды",	НовыйПериод);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	ТекстОшибки="";
	
	Если Результат.Следующий() Тогда
		
		Если Результат.СтатусБлокировки>0 Тогда
			
			СтрокаШаблона = Нстр("ru = ' период %1 закрыт от изменений.'");
			
			Если Не ПустаяСтрока(СтрокаШаблона) тогда			
				ТекстОшибки = СтрШаблон(СтрокаШаблона, НовыйПериод);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		СтрокаШаблона = Нстр("ru = ' период %1 еще не открыт.'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда			
			ТекстОшибки = СтрШаблон(СтрокаШаблона, НовыйПериод);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		
		СтрокаШаблона = Нстр("ru = 'Организация: %1,Сценарий: %2'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда			
			ТекстОшибки = СтрШаблон(СтрокаШаблона, Организация, СценарийПлан)+ТекстОшибки;
		КонецЕсли;
		
		СтрокаШаблона = Нстр("ru = 'Актуализация бюджетов не произведена по следующим причинам: %1'");
		
		Если Не ПустаяСтрока(СтрокаШаблона) тогда			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(СтрокаШаблона, ТекстОшибки),,, СтатусСообщения.Важное);
		КонецЕсли;
				
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПроверитьВозможностьАктуализации() 

Процедура ВыполнитьАктуализациюПоФакту() Экспорт
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОтчетов.Организация КАК Организация,
	|	ДанныеОтчетов.Проект КАК Проект,
	|	ДанныеОтчетов.Валюта КАК Валюта,
	|	ДанныеОтчетов.ВидОтчета КАК ВидОтчета
	|ПОМЕСТИТЬ ДанныеДляАктуализации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВерсииЗначенийПоказателей.Организация КАК Организация,
	|		ВерсииЗначенийПоказателей.Проект КАК Проект,
	|		ВерсииЗначенийПоказателей.Валюта КАК Валюта,
	|		ВерсииЗначенийПоказателей.ВидОтчета КАК ВидОтчета
	|	ИЗ
	|		Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|	ГДЕ
	|		НЕ ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
	|		И НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|		И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|		И ВерсииЗначенийПоказателей.Сценарий = &СценарийПлан
	|		И ВерсииЗначенийПоказателей.Организация = &Организация
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ВерсииЗначенийПоказателей.Организация,
	|		ВерсииЗначенийПоказателей.Проект,
	|		ВерсииЗначенийПоказателей.Валюта,
	|		ВерсииЗначенийПоказателей.ВидОтчета
	|	ИЗ
	|		Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|	ГДЕ
	|		НЕ ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
	|		И НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|		И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|		И ВерсииЗначенийПоказателей.Сценарий = &СценарийФакт
	|		И ВерсииЗначенийПоказателей.Организация = &Организация) КАК ДанныеОтчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсииЗначенийПоказателей.Ссылка КАК Ссылка,
	|	ВерсииЗначенийПоказателей.Организация КАК Организация,
	|	ВерсииЗначенийПоказателей.Проект КАК Проект,
	|	ВерсииЗначенийПоказателей.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаВерсийПлан
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ВерсииЗначенийПоказателей.Организация = ДанныеДляАктуализации.Организация
	|			И ВерсииЗначенийПоказателей.Проект = ДанныеДляАктуализации.Проект
	|			И ВерсииЗначенийПоказателей.ВидОтчета = ДанныеДляАктуализации.ВидОтчета
	|			И ВерсииЗначенийПоказателей.Валюта = ДанныеДляАктуализации.Валюта
	|ГДЕ
	|	НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|	И ВерсииЗначенийПоказателей.Сценарий = &СценарийПлан
	|	И ВерсииЗначенийПоказателей.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсииЗначенийПоказателей.Ссылка КАК Ссылка,
	|	ВерсииЗначенийПоказателей.Организация КАК Организация,
	|	ВерсииЗначенийПоказателей.Проект КАК Проект,
	|	ВерсииЗначенийПоказателей.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаВерсийФакт
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ВерсииЗначенийПоказателей.Организация = ДанныеДляАктуализации.Организация
	|			И ВерсииЗначенийПоказателей.Проект = ДанныеДляАктуализации.Проект
	|			И ВерсииЗначенийПоказателей.ВидОтчета = ДанныеДляАктуализации.ВидОтчета
	|			И ВерсииЗначенийПоказателей.Валюта = ДанныеДляАктуализации.Валюта
	|ГДЕ
	|	НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|	И ВерсииЗначенийПоказателей.Сценарий = &СценарийФакт
	|	И ВерсииЗначенийПоказателей.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ПоказателиОтчетов.ГруппаРаскрытия.ЧислоАналитик, 0) КАК ЧислоАналитикПоказателя,
	|	ЕстьNULL(ПоказателиОтчетов.ГруппаРаскрытия.Валютная,Ложь) КАК Валютный,
	|	ДанныеДляАктуализации.ВидОтчета КАК ВидОтчета
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ПоказателиОтчетов.Владелец = ДанныеДляАктуализации.ВидОтчета
	|ГДЕ
	|	ПоказателиОтчетов.ЧисловойПоказатель
	|	И НЕ ПоказателиОтчетов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("СценарийПлан",	СценарийПлан);
	Запрос.УстановитьПараметр("СценарийФакт",	СценарийФакт);	
	Запрос.УстановитьПараметр("ПериодОтчета",	ПериодОтчета);
	Запрос.УстановитьПараметр("Организация",	Организация);

	ТабВидыОтчета=Запрос.Выполнить().Выгрузить();
	
	ТабАналитики=Новый ТаблицаЗначений;
	ТабАналитики.Колонки.Добавить("МаксАналитикОтчета");
	ТабАналитики.Колонки.Добавить("ЧислоАналитикПоказателя");
	ТабАналитики.Колонки.Добавить("ВсегоАналитик");

	ТабАналитики.Колонки.Добавить("Валютный",ОбщегоНазначенияУх.ПолучитьОписаниеТиповБулево());

	ТабАналитики.Колонки.Добавить("ВыводитьСинтетику",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	ТабАналитики.Колонки.Добавить("ВыводитьАналитику",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	
	МаксКоличествоАналитик=0;
		
	РассчитыватьЗависимые=Ложь;
			
	Для Каждого СтрВидОтчета ИЗ ТабВидыОтчета Цикл
		
		МаксАналитикОтчета=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(СтрВидОтчета.ВидОтчета);
		
		СтрАналитикиОтчета=ТабАналитики.НайтиСтроки(Новый Структура("МаксАналитикОтчета,ВыводитьСинтетику",МаксАналитикОтчета,Истина));
		
		Если СтрАналитикиОтчета.Количество()=0 Тогда
			
			СтрАналитикиОтчета						= ТабАналитики.Добавить();
			СтрАналитикиОтчета.МаксАналитикОтчета	= МаксАналитикОтчета;
			СтрАналитикиОтчета.ВсегоАналитик		= МаксАналитикОтчета;
			СтрАналитикиОтчета.ВыводитьСинтетику	= Истина;
			
		КонецЕсли;
		
		Если НЕ (СтрВидОтчета.ЧислоАналитикПоказателя>0 ИЛИ СтрВидОтчета.Валютный) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СтрАналитикиПоказателя=ТабАналитики.НайтиСтроки(Новый Структура("ЧислоАналитикПоказателя,МаксАналитикОтчета,Валютный",СтрВидОтчета.ЧислоАналитикПоказателя,МаксАналитикОтчета,СтрВидОтчета.Валютный));
		
		Если СтрАналитикиПоказателя.Количество()=0 Тогда
			
			СтрАналитикиПоказателя=ТабАналитики.Добавить();
			СтрАналитикиПоказателя.ЧислоАналитикПоказателя=СтрВидОтчета.ЧислоАналитикПоказателя;
			СтрАналитикиПоказателя.МаксАналитикОтчета=МаксАналитикОтчета;
			СтрАналитикиПоказателя.Валютный=СтрВидОтчета.Валютный;
			СтрАналитикиПоказателя.ВсегоАналитик=(МаксАналитикОтчета+СтрВидОтчета.ЧислоАналитикПоказателя);
			СтрАналитикиПоказателя.ВыводитьАналитику=Истина;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТабАналитики.Сортировать("ВсегоАналитик УБЫВ");
	МаксКоличествоАналитик=ТабАналитики[0].ВсегоАналитик;
	
	ТекстОбъединение="";
	
	Для Каждого СтрАналитика ИЗ ТабАналитики Цикл
		
		Если СтрАналитика.ВсегоАналитик=0 Тогда
			
			Если СтрАналитика.Валютный Тогда
				
				ИмяРабочейТаблицы="ЗначенияПоказателейОтчетовВалютные";
				ПолеАналитикаВалюта=ИмяРабочейТаблицы+".АналитикаВалюта КАК АналитикаВалюта,";
				ПолеЗначениеВалюта=ИмяРабочейТаблицы+".ЗначениеВалюта";
				ПолеИтоговоеЗначение=ИмяРабочейТаблицы+".ИтоговоеЗначение КАК ИтоговоеЗначение,";
				
			Иначе
				
				ИмяРабочейТаблицы="ЗначенияПоказателейОтчетовСинтетика";
				ПолеАналитикаВалюта="Значение(Справочник.Валюты.ПустаяСсылка) КАК АналитикаВалюта,";
				ПолеЗначениеВалюта="0";
				ПолеИтоговоеЗначение="ИСТИНА КАК ИтоговоеЗначение,";
				
			КонецЕсли;
			
		Иначе
			
			ИмяРабочейТаблицы="ЗначенияПоказателейОтчетов"+СтрАналитика.ВсегоАналитик;
			ПолеАналитикаВалюта=ИмяРабочейТаблицы+".АналитикаВалюта КАК АналитикаВалюта,";
			ПолеЗначениеВалюта=ИмяРабочейТаблицы+".ЗначениеВалюта";
			ПолеИтоговоеЗначение=ИмяРабочейТаблицы+".ИтоговоеЗначение КАК ИтоговоеЗначение,";
			
		КонецЕсли;
	
		ТекстОбъединение=ТекстОбъединение+"
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|"+ИмяРабочейТаблицы+".Показатель КАК Показатель,
		|"+ПолеАналитикаВалюта+"
		|ТаблицаВерсийПлан.Организация КАК Организация,
		|ТаблицаВерсийПлан.Проект КАК Проект,
		|ТаблицаВерсийПлан.Валюта КАК Валюта,
		|"+ПолеИтоговоеЗначение;
		
		Для Индекс=1 ПО МаксКоличествоАналитик Цикл
			
			ТекстОбъединение=ТекстОбъединение+"
			|"+?(СтрАналитика.ВсегоАналитик>=Индекс,ИмяРабочейТаблицы+".Аналитика"+Индекс,"НЕОПРЕДЕЛЕНО")+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ТекстОбъединение=ТекстОбъединение+"
		|"+ИмяРабочейТаблицы+".Значение КАК ЗначениеПлан,
		|"+ПолеЗначениеВалюта+" КАК ЗначениеВалютаПлан,
		|0 КАК ЗначениеФакт,
		|0 КАК ЗначениеВалютаФакт
		|ИЗ РегистрСведений."+ИмяРабочейТаблицы+" КАК "+ИмяРабочейТаблицы+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВерсийПлан КАК ТаблицаВерсийПлан
		|ПО 
		|"+ИмяРабочейТаблицы+".Версия = ТаблицаВерсийПлан.Ссылка";
					
		ТекстОбъединение=ТекстОбъединение+"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|"+ИмяРабочейТаблицы+".Показатель КАК Показатель,
		|"+ПолеАналитикаВалюта+"
		|ТаблицаВерсийФакт.Организация КАК Организация,
		|ТаблицаВерсийФакт.Проект КАК Проект,
		|ТаблицаВерсийФакт.Валюта КАК Валюта,
		|"+ПолеИтоговоеЗначение;
		
		Для Индекс=1 ПО МаксКоличествоАналитик Цикл
			
			ТекстОбъединение=ТекстОбъединение+"
			|"+?(СтрАналитика.ВсегоАналитик>=Индекс,ИмяРабочейТаблицы+".Аналитика"+Индекс,"НЕОПРЕДЕЛЕНО")+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ТекстОбъединение=ТекстОбъединение+"
		|0 КАК ЗначениеПлан,
		|0 КАК ЗначениеВалютаПлан,
		|"+ИмяРабочейТаблицы+".Значение КАК ЗначениеФакт,
		|"+ПолеЗначениеВалюта+" КАК ЗначениеВалютаФакт
		|ИЗ РегистрСведений."+ИмяРабочейТаблицы+" КАК "+ИмяРабочейТаблицы+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВерсийФакт КАК ТаблицаВерсийФакт
		|ПО 
		|"+ИмяРабочейТаблицы+".Версия = ТаблицаВерсийФакт.Ссылка";
				
	КонецЦикла;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ДанныеДляСравнения.Показатель КАК ПоказательОтчета,
	|	ДанныеДляСравнения.Показатель.Владелец КАК ВидОтчета,
	|	ДанныеДляСравнения.Организация КАК Организация,
	|	ДанныеДляСравнения.Проект КАК Проект,
	|	ДанныеДляСравнения.Валюта КАК Валюта,
	|	ДанныеДляСравнения.ИтоговоеЗначение КАК СинтетическоеЗначение,
	|	ДанныеДляСравнения.АналитикаВалюта КАК АналитикаВалюта,";
	
	Для Индекс=1 По МаксКоличествоАналитик Цикл
		
		Запрос.Текст=Запрос.Текст+"
		|ДанныеДляСравнения.Аналитика"+Индекс+" КАК Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|	СУММА(ДанныеДляСравнения.ЗначениеПлан) КАК ЗначениеПлан,
	|	СУММА(ДанныеДляСравнения.ЗначениеВалютаПлан) КАК ЗначениеВалютаПлан,
	|	СУММА(ДанныеДляСравнения.ЗначениеФакт) КАК ЗначениеФакт,
	|	СУММА(ДанныеДляСравнения.ЗначениеВалютаФакт) КАК ЗначениеВалютаФакт,
	|	ДанныеДляСравнения.Организация.ТипОрганизации КАК ТипОрганизации
	|ИЗ
	|	("+Сред(ТекстОбъединение,16)+") КАК ДанныеДляСравнения
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляСравнения.Показатель,
	|	ДанныеДляСравнения.Организация,
	|	ДанныеДляСравнения.Проект,
	|	ДанныеДляСравнения.Валюта,
	|	ДанныеДляСравнения.ИтоговоеЗначение,
	|	ДанныеДляСравнения.АналитикаВалюта,";
	
	Для Индекс=1 По МаксКоличествоАналитик Цикл
		
		Запрос.Текст=Запрос.Текст+"
		|ДанныеДляСравнения.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|	ДанныеДляСравнения.Организация.ТипОрганизации
	|
	|ИМЕЮЩИЕ
	|	(НЕ (СУММА(ДанныеДляСравнения.ЗначениеПлан) = СУММА(ДанныеДляСравнения.ЗначениеФакт) И СУММА(ДанныеДляСравнения.ЗначениеВалютаПлан) = СУММА(ДанныеДляСравнения.ЗначениеВалютаФакт)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Проект,
	|	Валюта";
	
	Если ПустаяСтрока(ТекстОбъединение) Тогда  
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СценарийПлан",СценарийПлан);
	Запрос.УстановитьПараметр("СценарийФакт",СценарийФакт);
	
	Запрос.УстановитьПараметр("ПериодОтчета",ПериодОтчета);
	Запрос.УстановитьПараметр("НовыйПериод",НовыйПериод);
	
	Запрос.УстановитьПараметр("Число",Перечисления.ТипыЗначенийПоказателейОтчетов.Число);
		
	ТаблицаСравнения=Запрос.Выполнить().Выгрузить();
	
	ТабШаблонКорректировок=Новый ТаблицаЗначений;
	ТабШаблонКорректировок.Колонки.Добавить("ПериодОтчета");
	ТабШаблонКорректировок.Колонки.Добавить("ВидОтчета");
	ТабШаблонКорректировок.Колонки.Добавить("ОсновнаяВалюта");
	ТабШаблонКорректировок.Колонки.Добавить("РежимКорректировки");
	ТабШаблонКорректировок.Колонки.Добавить("ТаблицаИзмененныхПоказателей");
		
	РасчетПоказателейОбъект=Обработки.ЗаписьПоказателяСРасчетомЗависимых.Создать();
	ТабШаблонПоказателей=РасчетПоказателейОбъект.ТаблицаИзмененныхПоказателей.ВыгрузитьКолонки();
		
	Для Каждого СтрКорректировка ИЗ ТаблицаСравнения Цикл
			
			СтрКорректировкаТек=ПолучитьСтрокуКорректировки(СтрКорректировка,ПериодОтчета,Истина);
			
			//////////////////////////////////////////////////////////////////////////////////////////////
			// Корректируем записи текущего периода
			
			НоваяСтрокаТек=СтрКорректировкаТек.ТаблицаИзмененныхПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТек,СтрКорректировка);
			
			НоваяСтрокаТек.Значение=СтрКорректировка.ЗначениеФакт-СтрКорректировка.ЗначениеПлан;
			НоваяСтрокаТек.ЗначениеВалюта=СтрКорректировка.ЗначениеВалютаФакт-СтрКорректировка.ЗначениеВалютаПлан;

			НоваяСтрокаТек.ПериодОТчета=ПериодОтчета;
			НоваяСтрокаТек.Сценарий=СценарийПлан;
			
						
	КонецЦикла;
	
	Для Каждого Строка ИЗ ТабШаблонКорректировок Цикл
		
		ЗаписатьСтрокуКорректировки(Строка);
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьАктуализациюПоФакту()

Процедура ПеренестиОтклонения() Экспорт
		
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст="Выбрать ТаблицаДействийПриАктуализации.Показатель, ТаблицаДействийПриАктуализации.ДействияПриАктуализации
	|Поместить ТаблицаДействийПриАктуализации
	|ИЗ &ТаблицаДействийПриАктуализации КАК ТаблицаДействийПриАктуализации
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОтчетов.Организация КАК Организация,
	|	ДанныеОтчетов.Проект КАК Проект,
	|	ДанныеОтчетов.Валюта КАК Валюта,
	|	ДанныеОтчетов.ВидОтчета КАК ВидОтчета
	|ПОМЕСТИТЬ ДанныеДляАктуализации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВерсииЗначенийПоказателей.Организация КАК Организация,
	|		ВерсииЗначенийПоказателей.Проект КАК Проект,
	|		ВерсииЗначенийПоказателей.Валюта КАК Валюта,
	|		ВерсииЗначенийПоказателей.ВидОтчета КАК ВидОтчета
	|	ИЗ
	|		Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|	ГДЕ
	|		НЕ ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
	|		И НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|		И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|		И ВерсииЗначенийПоказателей.Сценарий = &СценарийПлан
	|		И ВерсииЗначенийПоказателей.Организация = &Организация";
	
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		
		Запрос.Текст=Запрос.Текст+"
	|		И ВерсииЗначенийПоказателей.ВидОтчета=&ВидОтчета";
		
		Запрос.УстановитьПараметр("ВидОтчета",ВидОтчета);
		
	КонецЕсли;
	Запрос.Текст=Запрос.Текст+"
	|		Объединить ВЫБРАТЬ
	|			ВерсииЗначенийПоказателей.Организация КАК Организация,
	|			ВерсииЗначенийПоказателей.Проект КАК Проект,
	|			ВерсииЗначенийПоказателей.Валюта КАК Валюта,
	|			ВерсииЗначенийПоказателей.ВидОтчета КАК ВидОтчета
	|		ИЗ
	|			Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ГДЕ
	|			НЕ ВерсииЗначенийПоказателей.ЗаписьВДополнительнойВалюте
	|			И НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|			И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|			И ВерсииЗначенийПоказателей.Сценарий = &СценарийФакт
	|			И ВерсииЗначенийПоказателей.Организация = &Организация";
	
	Если ЗначениеЗаполнено(ВидОтчета) Тогда
		
		Запрос.Текст=Запрос.Текст+"
	|		И ВерсииЗначенийПоказателей.ВидОтчета=&ВидОтчета";
		
		Запрос.УстановитьПараметр("ВидОтчета",ВидОтчета);
		
	КонецЕсли;
	Запрос.Текст=Запрос.Текст+") КАК ДанныеОтчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсииЗначенийПоказателей.Ссылка КАК Ссылка,
	|	ВерсииЗначенийПоказателей.Организация КАК Организация,
	|	ВерсииЗначенийПоказателей.Проект КАК Проект,
	|	ВерсииЗначенийПоказателей.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаВерсийПлан
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ВерсииЗначенийПоказателей.Организация = ДанныеДляАктуализации.Организация
	|			И ВерсииЗначенийПоказателей.Проект = ДанныеДляАктуализации.Проект
	|			И ВерсииЗначенийПоказателей.ВидОтчета = ДанныеДляАктуализации.ВидОтчета
	|			И ВерсииЗначенийПоказателей.Валюта = ДанныеДляАктуализации.Валюта
	|ГДЕ
	|	НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|	И ВерсииЗначенийПоказателей.Сценарий = &СценарийПлан
	|	И ВерсииЗначенийПоказателей.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсииЗначенийПоказателей.Ссылка КАК Ссылка,
	|	ВерсииЗначенийПоказателей.Организация КАК Организация,
	|	ВерсииЗначенийПоказателей.Проект КАК Проект,
	|	ВерсииЗначенийПоказателей.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаВерсийФакт
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ВерсииЗначенийПоказателей.Организация = ДанныеДляАктуализации.Организация
	|			И ВерсииЗначенийПоказателей.Проект = ДанныеДляАктуализации.Проект
	|			И ВерсииЗначенийПоказателей.ВидОтчета = ДанныеДляАктуализации.ВидОтчета
	|			И ВерсииЗначенийПоказателей.Валюта = ДанныеДляАктуализации.Валюта
	|ГДЕ
	|	НЕ ВерсииЗначенийПоказателей.ЧерноваяВерсия
	|	И ВерсииЗначенийПоказателей.ПериодОтчета = &ПериодОтчета
	|	И ВерсииЗначенийПоказателей.Сценарий = &СценарийФакт
	|	И ВерсииЗначенийПоказателей.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ПоказателиОтчетов.ГруппаРаскрытия.ЧислоАналитик, 0) КАК ЧислоАналитикПоказателя,
	|	ЕстьNULL(ПоказателиОтчетов.ГруппаРаскрытия.Валютная,Ложь) КАК Валютный,
	|	ДанныеДляАктуализации.ВидОтчета КАК ВидОтчета
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляАктуализации КАК ДанныеДляАктуализации
	|		ПО ПоказателиОтчетов.Владелец = ДанныеДляАктуализации.ВидОтчета
	|ГДЕ
	|	ПоказателиОтчетов.ЧисловойПоказатель
	|	И НЕ ПоказателиОтчетов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("СценарийПлан",	СценарийПлан);
	Запрос.УстановитьПараметр("СценарийФакт",	СценарийФакт);	
	Запрос.УстановитьПараметр("ПериодОтчета",	ПериодОтчета);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ВидОтчета",		ВидОтчета);
	Запрос.УстановитьПараметр("ТаблицаДействийПриАктуализации",ТаблицаДействийПриАктуализации.Выгрузить());

	ТабВидыОтчета=Запрос.Выполнить().Выгрузить();
	
	ТабАналитики=Новый ТаблицаЗначений;
	ТабАналитики.Колонки.Добавить("МаксАналитикОтчета");
	ТабАналитики.Колонки.Добавить("ЧислоАналитикПоказателя");
	ТабАналитики.Колонки.Добавить("ВсегоАналитик");

	ТабАналитики.Колонки.Добавить("Валютный",ОбщегоНазначенияУх.ПолучитьОписаниеТиповБулево());

	ТабАналитики.Колонки.Добавить("ВыводитьСинтетику",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	ТабАналитики.Колонки.Добавить("ВыводитьАналитику",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	
	МаксКоличествоАналитик=0;
	
	Если НеРассчитыватьЗависимые Тогда
		
		РассчитыватьЗависимые=Ложь;
		
	Иначе
		
		РассчитыватьЗависимые=Константы.АвтоматическийПересчетЗависимыхПоказателей.Получить();
		
	КонецЕсли;
	
	Для Каждого СтрВидОтчета ИЗ ТабВидыОтчета Цикл
		
		МаксАналитикОтчета=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(СтрВидОтчета.ВидОтчета);
		
		СтрАналитикиОтчета=ТабАналитики.НайтиСтроки(Новый Структура("МаксАналитикОтчета,ВыводитьСинтетику",МаксАналитикОтчета,Истина));
		
		Если СтрАналитикиОтчета.Количество()=0 Тогда
			
			СтрАналитикиОтчета						= ТабАналитики.Добавить();
			СтрАналитикиОтчета.МаксАналитикОтчета	= МаксАналитикОтчета;
			СтрАналитикиОтчета.ВсегоАналитик		= МаксАналитикОтчета;
			СтрАналитикиОтчета.ВыводитьСинтетику	= Истина;
			
		КонецЕсли;
		
		Если НЕ (СтрВидОтчета.ЧислоАналитикПоказателя>0 ИЛИ СтрВидОтчета.Валютный) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СтрАналитикиПоказателя=ТабАналитики.НайтиСтроки(Новый Структура("ЧислоАналитикПоказателя,МаксАналитикОтчета,Валютный",СтрВидОтчета.ЧислоАналитикПоказателя,МаксАналитикОтчета,СтрВидОтчета.Валютный));
		
		Если СтрАналитикиПоказателя.Количество()=0 Тогда
			
			СтрАналитикиПоказателя=ТабАналитики.Добавить();
			СтрАналитикиПоказателя.ЧислоАналитикПоказателя=СтрВидОтчета.ЧислоАналитикПоказателя;
			СтрАналитикиПоказателя.МаксАналитикОтчета=МаксАналитикОтчета;
			СтрАналитикиПоказателя.Валютный=СтрВидОтчета.Валютный;
			СтрАналитикиПоказателя.ВсегоАналитик=(МаксАналитикОтчета+СтрВидОтчета.ЧислоАналитикПоказателя);
			СтрАналитикиПоказателя.ВыводитьАналитику=Истина;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТабАналитики.Сортировать("ВсегоАналитик УБЫВ");
	МаксКоличествоАналитик=ТабАналитики[0].ВсегоАналитик;
	
	ТекстОбъединение="";
	
	Для Каждого СтрАналитика ИЗ ТабАналитики Цикл
		
		Если СтрАналитика.ВсегоАналитик=0 Тогда
			
			Если СтрАналитика.Валютный Тогда
				
				ИмяРабочейТаблицы="ЗначенияПоказателейОтчетовВалютные";
				ПолеАналитикаВалюта=ИмяРабочейТаблицы+".АналитикаВалюта КАК АналитикаВалюта,";
				ПолеЗначениеВалюта=ИмяРабочейТаблицы+".ЗначениеВалюта";
				ПолеИтоговоеЗначение=ИмяРабочейТаблицы+".ИтоговоеЗначение КАК ИтоговоеЗначение,";
				
			Иначе
				
				ИмяРабочейТаблицы="ЗначенияПоказателейОтчетовСинтетика";
				ПолеАналитикаВалюта="Значение(Справочник.Валюты.ПустаяСсылка) КАК АналитикаВалюта,";
				ПолеЗначениеВалюта="0";
				ПолеИтоговоеЗначение=ИмяРабочейТаблицы+".Значение КАК ИтоговоеЗначение,";
				
			КонецЕсли;
			
		Иначе
			
			ИмяРабочейТаблицы="ЗначенияПоказателейОтчетов"+СтрАналитика.ВсегоАналитик;
			ПолеАналитикаВалюта=ИмяРабочейТаблицы+".АналитикаВалюта КАК АналитикаВалюта,";
			ПолеЗначениеВалюта=ИмяРабочейТаблицы+".ЗначениеВалюта";
			ПолеИтоговоеЗначение=ИмяРабочейТаблицы+".ИтоговоеЗначение КАК ИтоговоеЗначение,";
			
		КонецЕсли;
		
		ТекстОбъединение=ТекстОбъединение+"
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|"+ИмяРабочейТаблицы+".Показатель КАК Показатель,
		|"+ПолеАналитикаВалюта+"
		|ТаблицаДействийПриАктуализации.ДействияПриАктуализации,
		|ТаблицаВерсийПлан.Организация КАК Организация,
		|ТаблицаВерсийПлан.Проект КАК Проект,
		|ТаблицаВерсийПлан.Валюта КАК Валюта,
		|"+ПолеИтоговоеЗначение;
		
		Для Индекс=1 ПО МаксКоличествоАналитик Цикл
			
			ТекстОбъединение=ТекстОбъединение+"
			|"+?(СтрАналитика.ВсегоАналитик>=Индекс,ИмяРабочейТаблицы+".Аналитика"+Индекс,"НЕОПРЕДЕЛЕНО")+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ТекстОбъединение=ТекстОбъединение+"
		|"+ИмяРабочейТаблицы+".Значение КАК ЗначениеПлан,
		|"+ПолеЗначениеВалюта+" КАК ЗначениеВалютаПлан,
		|0 КАК ЗначениеФакт,
		|0 КАК ЗначениеВалютаФакт
		|ИЗ РегистрСведений."+ИмяРабочейТаблицы+" КАК "+ИмяРабочейТаблицы+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВерсийПлан КАК ТаблицаВерсийПлан
		|ПО 
		|"+ИмяРабочейТаблицы+".Версия = ТаблицаВерсийПлан.Ссылка";
		
		ТекстОбъединение=ТекстОбъединение+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДействийПриАктуализации КАК ТаблицаДействийПриАктуализации
		|ПО 
		|"+ИмяРабочейТаблицы+".Показатель=ТаблицаДействийПриАктуализации.Показатель";

			
		ТекстОбъединение=ТекстОбъединение+"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|"+ИмяРабочейТаблицы+".Показатель КАК Показатель,
		|"+ПолеАналитикаВалюта+"
		|ТаблицаДействийПриАктуализации.ДействияПриАктуализации,
		|ТаблицаВерсийФакт.Организация КАК Организация,
		|ТаблицаВерсийФакт.Проект КАК Проект,
		|ТаблицаВерсийФакт.Валюта КАК Валюта,
		|"+ПолеИтоговоеЗначение;
		
		Для Индекс=1 ПО МаксКоличествоАналитик Цикл
			
			ТекстОбъединение=ТекстОбъединение+"
			|"+?(СтрАналитика.ВсегоАналитик>=Индекс,ИмяРабочейТаблицы+".Аналитика"+Индекс,"НЕОПРЕДЕЛЕНО")+" КАК Аналитика"+Индекс+",";
			
		КонецЦикла;
		
		ТекстОбъединение=ТекстОбъединение+"
		|0 КАК ЗначениеПлан,
		|0 КАК ЗначениеВалютаПлан,
		|"+ИмяРабочейТаблицы+".Значение КАК ЗначениеФакт,
		|"+ПолеЗначениеВалюта+" КАК ЗначениеВалютаФакт
		|ИЗ РегистрСведений."+ИмяРабочейТаблицы+" КАК "+ИмяРабочейТаблицы+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВерсийФакт КАК ТаблицаВерсийФакт
		|ПО 
		|"+ИмяРабочейТаблицы+".Версия = ТаблицаВерсийФакт.Ссылка";
						
		ТекстОбъединение=ТекстОбъединение+"
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДействийПриАктуализации КАК ТаблицаДействийПриАктуализации
		|ПО 
		|"+ИмяРабочейТаблицы+".Показатель=ТаблицаДействийПриАктуализации.Показатель";

		
	КонецЦикла;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ДанныеДляСравнения.Показатель КАК ПоказательОтчета,
	|	ДанныеДляСравнения.Показатель.Владелец КАК ВидОтчета,
	|	ДанныеДляСравнения.Организация КАК Организация,
	|	ДанныеДляСравнения.Проект КАК Проект,
	|	ДанныеДляСравнения.Валюта КАК Валюта,
	|	ДанныеДляСравнения.ИтоговоеЗначение КАК СинтетическоеЗначение,
	|	ДанныеДляСравнения.АналитикаВалюта КАК АналитикаВалюта,";
	
	Для Индекс=1 По МаксКоличествоАналитик Цикл
		
		Запрос.Текст=Запрос.Текст+"
		|ДанныеДляСравнения.Аналитика"+Индекс+" КАК Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|	СУММА(ДанныеДляСравнения.ЗначениеПлан) КАК ЗначениеПлан,
	|	СУММА(ДанныеДляСравнения.ЗначениеВалютаПлан) КАК ЗначениеВалютаПлан,
	|	СУММА(ДанныеДляСравнения.ЗначениеФакт) КАК ЗначениеФакт,
	|	СУММА(ДанныеДляСравнения.ЗначениеВалютаФакт) КАК ЗначениеВалютаФакт,
	|	ДанныеДляСравнения.ДействияПриАктуализации КАК ДействияПриАктуализации,
	|	ДанныеДляСравнения.Организация.ТипОрганизации КАК ТипОрганизации
	|ИЗ
	|	("+Сред(ТекстОбъединение,16)+") КАК ДанныеДляСравнения
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляСравнения.Показатель,
	|	ДанныеДляСравнения.Организация,
	|	ДанныеДляСравнения.Проект,
	|	ДанныеДляСравнения.Валюта,
	|	ДанныеДляСравнения.ИтоговоеЗначение,
	|	ДанныеДляСравнения.АналитикаВалюта,";
	
	Для Индекс=1 По МаксКоличествоАналитик Цикл
		
		Запрос.Текст=Запрос.Текст+"
		|ДанныеДляСравнения.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|	ДанныеДляСравнения.ДействияПриАктуализации,
	|	ДанныеДляСравнения.Организация.ТипОрганизации
	|
	|ИМЕЮЩИЕ
	|	(НЕ СУММА(ДанныеДляСравнения.ЗначениеПлан) = СУММА(ДанныеДляСравнения.ЗначениеФакт))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Проект,
	|	Валюта";
	
	Если ПустаяСтрока(ТекстОбъединение) Тогда  
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СценарийПлан",СценарийПлан);
	Запрос.УстановитьПараметр("СценарийФакт",СценарийФакт);
	
	Запрос.УстановитьПараметр("ПериодОтчета",ПериодОтчета);
	Запрос.УстановитьПараметр("НовыйПериод",НовыйПериод);
	
	Запрос.УстановитьПараметр("Число",Перечисления.ТипыЗначенийПоказателейОтчетов.Число);
	
	ТаблицаСравнения=Запрос.Выполнить().Выгрузить();
	
	ТабШаблонКорректировок=Новый ТаблицаЗначений;
	ТабШаблонКорректировок.Колонки.Добавить("ПериодОтчета");
	ТабШаблонКорректировок.Колонки.Добавить("ВидОтчета");
	ТабШаблонКорректировок.Колонки.Добавить("ОсновнаяВалюта");
	ТабШаблонКорректировок.Колонки.Добавить("РежимКорректировки");
	ТабШаблонКорректировок.Колонки.Добавить("ТаблицаИзмененныхПоказателей");
		
	РасчетПоказателейОбъект=Обработки.ЗаписьПоказателяСРасчетомЗависимых.Создать();
	ТабШаблонПоказателей=РасчетПоказателейОбъект.ТаблицаИзмененныхПоказателей.ВыгрузитьКолонки();
	РасчетПоказателейОбъект.Регистратор=Регистратор;
		
	Для Каждого СтрКорректировка ИЗ ТаблицаСравнения Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрКорректировка.ДействияПриАктуализации)  Тогда
			
			Продолжить;
			
		КонецЕсли;
				
		Если Актуализировать Тогда
			
			СтрКорректировкаТек=ПолучитьСтрокуКорректировки(СтрКорректировка,ПериодОтчета,Истина);
			
			//////////////////////////////////////////////////////////////////////////////////////////////
			// Корректируем записи текущего периода
			
			НоваяСтрокаТек=СтрКорректировкаТек.ТаблицаИзмененныхПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТек,СтрКорректировка);
			
			НоваяСтрокаТек.Значение=СтрКорректировка.ЗначениеФакт-СтрКорректировка.ЗначениеПлан;
			НоваяСтрокаТек.ПериодОТчета=ПериодОтчета;
			НоваяСтрокаТек.Сценарий=СценарийПлан;
			
		КонецЕсли;
				
		Если ПеренестиОтклонения Тогда
			
			//////////////////////////////////////////////////////////////////////////////////////////////////////
			// Корректируем записи следующего периода
			
			Если СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.НеПереносить
				ИЛИ (ЗначениеЗаполнено(СтрКорректировка.ТипОрганизации) И (НЕ СтрКорректировка.ТипОрганизации=Перечисления.ТипыОрганизационныхЕдиниц.Обычная))
				ИЛИ (СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиОтрицательные И СтрКорректировка.ЗначениеФакт>СтрКорректировка.ЗначениеПлан) 
				ИЛИ (СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиПоложительные И СтрКорректировка.ЗначениеФакт<СтрКорректировка.ЗначениеПлан)
				ИЛИ (СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиОтрицательныеРавномерно И СтрКорректировка.ЗначениеФакт>СтрКорректировка.ЗначениеПлан)
				ИЛИ (СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиПоложительныеРавномерно И СтрКорректировка.ЗначениеФакт<СтрКорректировка.ЗначениеПлан) Тогда
				
				Продолжить;
				
			ИначеЕсли ПериодыГоризонта.Количество()>0 И (СтрКорректировка.ДействияПриАктуализации = Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиВсеРавномерно 
				 ИЛИ СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиОтрицательныеРавномерно  
				ИЛИ СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиПоложительныеРавномерно)  Тогда
						
				ЗначениеКорректировки = (СтрКорректировка.ЗначениеПлан-СтрКорректировка.ЗначениеФакт)/ПериодыГоризонта.Количество();
				
				Для Каждого СтрПериод Из ПериодыГоризонта Цикл
					
					СтрКорректировкаПериоды=ПолучитьСтрокуКорректировки(СтрКорректировка,СтрПериод.ПериодОтчета,Истина);	
						
					НоваяСтрокаНов=СтрКорректировкаПериоды.ТаблицаИзмененныхПоказателей.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаНов,СтрКорректировка);
					НоваяСтрокаНов.Значение=ЗначениеКорректировки;
					
					НоваяСтрокаНов.ПериодОТчета=СтрПериод.ПериодОтчета;
					НоваяСтрокаНов.Сценарий=СценарийПлан;
														
				КонецЦикла;
				
			ИначеЕсли СтрКорректировка.ДействияПриАктуализации = Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиВсе
				ИЛИ СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиОтрицательные  
				ИЛИ СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиПоложительные  Тогда
				
				СтрКорректировкаНов=ПолучитьСтрокуКорректировки(СтрКорректировка,НовыйПериод,Истина);
				
				НоваяСтрокаНов=СтрКорректировкаНов.ТаблицаИзмененныхПоказателей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаНов,СтрКорректировка);
				
				НоваяСтрокаНов.Значение=СтрКорректировка.ЗначениеПлан-СтрКорректировка.ЗначениеФакт;
				
				НоваяСтрокаНов.ПериодОТчета=НовыйПериод;
				НоваяСтрокаНов.Сценарий=СценарийПлан;
				
			ИначеЕсли СтрКорректировка.ДействияПриАктуализации = Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиФакт Тогда
				
				СтрКорректировкаНов=ПолучитьСтрокуКорректировки(СтрКорректировка,НовыйПериод,Ложь);
				
				НоваяСтрокаНов=СтрКорректировкаНов.ТаблицаИзмененныхПоказателей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаНов,СтрКорректировка);
				
				НоваяСтрокаНов.Значение=СтрКорректировка.ЗначениеФакт;
				
				НоваяСтрокаНов.ПериодОТчета=НовыйПериод;
				НоваяСтрокаНов.Сценарий=СценарийПлан;
				
			ИначеЕсли СтрКорректировка.ДействияПриАктуализации=Перечисления.ДействияПриАктуализацииБюджетов.ПеренестиФактРавномерно Тогда
				
				Для Каждого СтрПериод Из ПериодыГоризонта Цикл
					
					СтрКорректировкаПериоды=ПолучитьСтрокуКорректировки(СтрКорректировка,СтрПериод.ПериодОтчета,Ложь);	
						
					НоваяСтрокаНов=СтрКорректировкаПериоды.ТаблицаИзмененныхПоказателей.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрокаНов,СтрКорректировка);
					НоваяСтрокаНов.Значение=СтрКорректировка.ЗначениеФакт;
					
					НоваяСтрокаНов.ПериодОТчета=СтрПериод.ПериодОтчета;
					НоваяСтрокаНов.Сценарий=СценарийПлан;
														
				КонецЦикла;
								
			КонецЕсли
			
		КонецЕсли;		
		
	КонецЦикла;
	
	Для Каждого Строка ИЗ ТабШаблонКорректировок Цикл
		
		Если НЕ ЗаписатьСтрокуКорректировки(Строка) Тогда
			
			ОбработкаВыполнена=Ложь;
			Возврат;
			
		КонецЕсли;
				
	КонецЦикла;
		
КонецПроцедуры // ВыполнитьАктуализацию() 

Функция ЗаписатьСтрокуКорректировки(СтрокаКорректировки)
	
	Если СтрокаКорректировки.ТаблицаИзмененныхПоказателей.Количество()=0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	РасчетПоказателейОбъект=Обработки.ЗаписьПоказателяСРасчетомЗависимых.Создать();
	РасчетПоказателейОбъект.ВалютаОтображения=СтрокаКорректировки.ОсновнаяВалюта;
	РасчетПоказателейОбъект.ВидОтчета=СтрокаКорректировки.ВидОтчета;
	РасчетПоказателейОбъект.РежимКорректировки=СтрокаКорректировки.РежимКорректировки;
	РасчетПоказателейОбъект.ПериодАктуализации=ПериодОтчета;
	РасчетПоказателейОбъект.НовыйПериод=НовыйПериод;
	РасчетПоказателейОбъект.Регистратор=Регистратор;
	
	Для Каждого СтрокаПоказатель ИЗ СтрокаКорректировки.ТаблицаИзмененныхПоказателей Цикл
		
		НоваяСтрока=РасчетПоказателейОбъект.ТаблицаИзмененныхПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаПоказатель);
		
	КонецЦикла;
	
	РасчетПоказателейОбъект.РассчитыватьЗависимые = РассчитыватьЗависимые;	
	
	СводнаяТаблицаУХ.ЗаполнитьВалютыПоРегламенту(РасчетПоказателейОбъект,СтрокаКорректировки.ТаблицаИзмененныхПоказателей);
	
	РасчетПоказателейОбъект.ИзменениеСостояний = Ложь;
	Возврат РасчетПоказателейОбъект.ЗаписатьЗначенияТаблицыПоказателей();
	
КонецФункции // ЗаписатьДокументКорректировки()

Функция ПолучитьСтрокуКорректировки(РеквизитыДокумента,Период,РежимКорректировки)
	
	СтруктураПоиска=Новый Структура("ПериодОтчета,ОсновнаяВалюта,ВидОтчета,РежимКорректировки",Период,РеквизитыДокумента.Валюта,РеквизитыДокумента.ВидОтчета,РежимКорректировки);
	
	МассивСтрок=ТабШаблонКорректировок.НайтиСтроки(СтруктураПоиска);
	
	Если МассивСтрок.Количество()>0 Тогда
		
		Возврат МассивСтрок[0];
		
	КонецЕсли;
	
	НоваяСтрока=ТабШаблонКорректировок.Добавить();
	НоваяСтрока.ПериодОтчета				= Период;
	НоваяСтрока.ВидОтчета					= РеквизитыДокумента.ВидОтчета;
	НоваяСтрока.ОсновнаяВалюта				= РеквизитыДокумента.Валюта;
	НоваяСтрока.ТаблицаИзмененныхПоказателей= ТабШаблонПоказателей.СкопироватьКолонки();
	НоваяСтрока.РежимКорректировки			= РежимКорректировки;
	
	Возврат НоваяСтрока; 
	
КонецФункции // СоздатьДокументКорректировки() 

Функция ПолучитьОткрытыеПериоды()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыПериодовСценариев.Периоды КАК Период
	|ИЗ
	|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
	|ГДЕ
	|	СтатусыПериодовСценариев.Сценарии = &Сценарий
	|	И СтатусыПериодовСценариев.Организации = &Организация
	|	И СтатусыПериодовСценариев.СтатусБлокировки = 0
	|	И СтатусыПериодовСценариев.Периоды.ДатаНачала > &ДатаНачала
	|	И СтатусыПериодовСценариев.Периоды.Периодичность = &Периодичность";
	
	Запрос.УстановитьПараметр("Сценарий", СценарийПлан);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Периодичность", ПериодОтчета.Периодичность);
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОтчета.ДатаОкончания);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

