
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыгрузкаДанных			= Параметры.ВыгрузкаДанных;
	ИмпортДанных			= Параметры.ИмпортДанных;
	ОписаниеОбъектаВИБ		= Параметры.ОписаниеОбъектаВИБ;
	НастройкаСоответствия	= Параметры.НастройкаСоответствия;
	ВнешняяИнформационнаяБаза=Параметры.ВнешняяИнформационнаяБаза;
	ИмяОбъектаМетаданных	= Параметры.ИмяОбъектаМетаданных;
	ТипОбъектаКонсолидации	= Параметры.ТипОбъектаКонсолидации;
	
	ПоВнешнейИБ=?(ЗначениеЗаполнено(ВнешняяИнформационнаяБаза),1,0);
	
	ПодготовитьПараметрыОбмена();
			
КонецПроцедуры

&НаСервере
Процедура ПодготовитьПараметрыОбмена()
	
	Заголовок=НСтр("ru = 'Обмен НСИ: '");
	
	Если ЗначениеЗаполнено(НастройкаСоответствия) Тогда
		
		ЗаполнитьДеревоИмпортаПоНастройкеСоответствия(НастройкаСоответствия);
		
		Элементы.ГруппаДеревоЗагрузки.ТекущаяСтраница=Элементы.ГруппаДеревоЗагрузки.ПодчиненныеЭлементы.ПоОбъекту;		
		Заголовок=Заголовок+НастройкаСоответствия;	
		
	ИначеЕсли ЗначениеЗаполнено(ОписаниеОбъектаВИБ) Тогда // Обмен данными по объекту ВИБ
		
		ЗаполнитьДеревоИмпортаПоОбъектуВИБ();
		
		Элементы.ГруппаДеревоЗагрузки.ТекущаяСтраница=Элементы.ГруппаДеревоЗагрузки.ПодчиненныеЭлементы.ПоОбъекту;
		Заголовок=Заголовок+ОписаниеОбъектаВИБ;
		
	ИначеЕсли ЗначениеЗаполнено(ВнешняяИнформационнаяБаза) Тогда
		
		ЗаполнитьДеревоИмпортаПоВИБ();
		
		ВыгрузкаДанных=ВнешняяИнформационнаяБаза.ЭкспортироватьЭлементыНСИ;
		
		Элементы.ГруппаДеревоЗагрузки.ТекущаяСтраница=Элементы.ГруппаДеревоЗагрузки.ПодчиненныеЭлементы.ПоВИБ;		
		Заголовок=Заголовок+ВнешняяИнформационнаяБаза;
		
	ИначеЕсли ЗначениеЗаполнено(ИмяОбъектаМетаданных) Тогда
		
		СписокОбъектовКонсолидации=ПолучитьСписокДляВыбораОбъектаКонсолидации(ТипОбъектаКонсолидации);
		
		Если СписокОбъектовКонсолидации.НайтиПоЗначению(ИмяОбъектаМетаданных)=Неопределено Тогда
			СписокОбъектовКонсолидации.Добавить(ИмяОбъектаМетаданных);
		КонецЕсли;
		
		Элементы.ИмяОбъектаМетаданных.СписокВыбора.Очистить();
		
		Для Каждого ТекОбъект ИЗ СписокОбъектовКонсолидации Цикл
			
			Элементы.ИмяОбъектаМетаданных.СписокВыбора.Добавить(ТекОбъект.Значение,ТекОбъект.Представление);
			
		КонецЦикла;
				
		ЗаполнитьДеревоИмпортаПоТипуМетаданных();
		Элементы.ГруппаДеревоЗагрузки.ТекущаяСтраница=Элементы.ГруппаДеревоЗагрузки.ПодчиненныеЭлементы.ПоОбъекту;
		
	Иначе
		
		ВыгрузкаДанных=Истина;
		ИмпортДанных=Истина;
		
	КонецЕсли;
	
	УстановитьВидимость();
	
	
КонецПроцедуры // 

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ДеревоЗагрузкиПоВИБКоманднаяПанель.ПодчиненныеЭлементы.ПодменюВыгрузкаДанных1.Видимость=ВыгрузкаДанных;
	Элементы.ДеревоЗагрузкиПоВИБКоманднаяПанель.ПодчиненныеЭлементы.ДеревоЗагрузкиПоВИБИмпортироватьДанные.Видимость=ИмпортДанных;

	Элементы.ДеревоЗагрузкиПоОбъектуКоманднаяПанель.ПодчиненныеЭлементы.ПодменюВыгрузкаДанных.Видимость=ВыгрузкаДанных;
	Элементы.ДеревоЗагрузкиПоОбъектуКоманднаяПанель.ПодчиненныеЭлементы.ДеревоЗагрузкиПоОбъектуИмпортироватьДанные.Видимость=ИмпортДанных;
	
	Элементы.ГруппаСпособОбработки.ТекущаяСтраница=?(ПоВнешнейИБ=1,Элементы.ГруппаВИБ,Элементы.ГруппаВыборОбъекта);
		
КонецПроцедуры // УстановитьВидимость() 

&НаСервере
Процедура ЗаполнитьДеревоИмпортаПоВИБ()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.Ссылка КАК НастройкаСоответствия
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|ГДЕ
	|	СоответствиеВнешнимИБ.Владелец = &ТипБД
	|	И СоответствиеВнешнимИБ.ТипОбъектаКонсолидации = ""Справочник""
	|	И НЕ СоответствиеВнешнимИБ.СинхронизацияПоGUID
	|ИТОГИ ПО
	|	НастройкаСоответствия";
	
	Запрос.УстановитьПараметр("ТипБД",ВнешняяИнформационнаяБаза.ТипБД);	
	Результат=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НастройкаСоответствия");
	
	ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы().Очистить();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы().Добавить();
		НоваяСтрока.НастройкаСоответствия=Результат.НастройкаСоответствия;
		НоваяСтрока.ЗагружатьДанные=Истина;
				
	КонецЦикла;	
		
КонецПроцедуры // ЗаполнитьДеревоИмпортаПоВИБ() 

&НаСервере
Процедура ЗаполнитьДеревоИмпортаПоОбъектуВИБ()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.Ссылка КАК НастройкаСоответствия,
	|	СоответствиеВнешнимИБ.Ссылка.Наименование КАК НаименованиеНастройки,
	|	СоответствиеВнешнимИБ.Владелец.Наименование КАК НаименованиеТипаВИБ,
	|	ВнешниеИнформационныеБазы.Ссылка КАК ВнешняяИнформационнаяБаза
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеИнформационныеБазы КАК ВнешниеИнформационныеБазы
	|		ПО СоответствиеВнешнимИБ.Владелец = ВнешниеИнформационныеБазы.ТипБД
	|ГДЕ
	|	СоответствиеВнешнимИБ.ОписаниеОбъектаВИБ = &ОписаниеОбъектаВИБ
	|	И НЕ СоответствиеВнешнимИБ.СинхронизацияПоGUID
	|ИТОГИ ПО
	|	НастройкаСоответствия,
	|	ВнешняяИнформационнаяБаза";
	
	Запрос.УстановитьПараметр("ОписаниеОбъектаВИБ",ОписаниеОбъектаВИБ);
	Запрос.УстановитьПараметр("ТипБД",ОписаниеОбъектаВИБ.Владелец);
	
	Результат=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НастройкаСоответствия");
	
	ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Очистить();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Добавить();
		НоваяСтрока.НастройкаСоответствия=Результат.НастройкаСоответствия;
		НоваяСтрока.СтрокаНастройка="["+Результат.НаименованиеТипаВИБ+"]: "+Результат.НаименованиеНастройки;
		НоваяСтрока.ЗагружатьДанные=Истина;
		
		СтрВИБ=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВнешняяИнформационнаяБаза");
		
		Пока СтрВИБ.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрВИБ.ВнешняяИнформационнаяБаза) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтрокаБаза=НоваяСтрока.ПолучитьЭлементы().Добавить();
			СтрокаБаза.ВнешняяИнформационнаяБаза=СтрВИБ.ВнешняяИнформационнаяБаза;
			СтрокаБаза.ЗагружатьДанные=Истина;
							
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьДеревоИмпортаПоВИБ()

&НаСервере
Процедура ЗаполнитьДеревоИмпортаПоНастройкеСоответствия(НастройкаСоответствия)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.Ссылка КАК НастройкаСоответствия,
	|	СоответствиеВнешнимИБ.Наименование КАК НаименованиеНастройки,
	|	СоответствиеВнешнимИБ.Владелец.Наименование КАК НаименованиеТипаВИБ,
	|	ВнешниеИнформационныеБазы.Ссылка КАК ВнешняяИнформационнаяБаза
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеИнформационныеБазы КАК ВнешниеИнформационныеБазы
	|		ПО СоответствиеВнешнимИБ.Владелец = ВнешниеИнформационныеБазы.ТипБД
	|ГДЕ
	|	СоответствиеВнешнимИБ.Ссылка = &НастройкаСоответствия
	|ИТОГИ ПО
	|	НастройкаСоответствия,
	|	ВнешняяИнформационнаяБаза";
	
	Запрос.УстановитьПараметр("НастройкаСоответствия",НастройкаСоответствия);
	Запрос.УстановитьПараметр("ТипБД",НастройкаСоответствия.Владелец);
	
	ТипОбъектаКонсолидации=НастройкаСоответствия.ТипОбъектаКонсолидации;
	
	ПриИзмененииТипаОбъектаКонсолидации();
	
	ИмяОбъектаМетаданных=НастройкаСоответствия.ИмяОбъектаМетаданных;
	
	Результат=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НастройкаСоответствия");
	
	ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Очистить();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Добавить();
		НоваяСтрока.НастройкаСоответствия=Результат.НастройкаСоответствия;
		НоваяСтрока.СтрокаНастройка="["+Результат.НаименованиеТипаВИБ+"]: "+Результат.НаименованиеНастройки;
		НоваяСтрока.ЗагружатьДанные=Истина;
		
		СтрВИБ=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВнешняяИнформационнаяБаза");
		
		Пока СтрВИБ.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрВИБ.ВнешняяИнформационнаяБаза) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтрокаБаза=НоваяСтрока.ПолучитьЭлементы().Добавить();
			СтрокаБаза.ВнешняяИнформационнаяБаза=СтрВИБ.ВнешняяИнформационнаяБаза;
			СтрокаБаза.ЗагружатьДанные=Истина;
							
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьДеревоИмпортаПоВИБ()


&НаСервере
Процедура ЗаполнитьДеревоИмпортаПоТипуМетаданных()
	
	ТекДеревоЗагрузки=РеквизитФормыВЗначение("ДеревоЗагрузкиПоОбъекту");
	ТекДеревоЗагрузки.Строки.Очистить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СоответствиеВнешнимИБ.Ссылка КАК НастройкаСоответствия,
	|	СоответствиеВнешнимИБ.Ссылка.Наименование КАК НаименованиеНастройки,
	|	СоответствиеВнешнимИБ.Владелец.Наименование КАК НаименованиеТипаВИБ,
	|	ВнешниеИнформационныеБазы.Ссылка КАК ВнешняяИнформационнаяБаза
	|ИЗ
	|	Справочник.СоответствиеВнешнимИБ КАК СоответствиеВнешнимИБ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеИнформационныеБазы КАК ВнешниеИнформационныеБазы
	|		ПО СоответствиеВнешнимИБ.Владелец = ВнешниеИнформационныеБазы.ТипБД
	|ГДЕ
	|	СоответствиеВнешнимИБ.ТипОбъектаКонсолидации = &ТипОбъектаКонсолидации
	|	И СоответствиеВнешнимИБ.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|	И НЕ СоответствиеВнешнимИБ.СинхронизацияПоGUID
	|ИТОГИ ПО
	|	НастройкаСоответствия,
	|	ВнешняяИнформационнаяБаза";
	
	Запрос.УстановитьПараметр("ТипОбъектаКонсолидации",ТипОбъектаКонсолидации);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных",ИмяОбъектаМетаданных);
	
	Результат=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НастройкаСоответствия");
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ТекДеревоЗагрузки.Строки.Добавить();
		НоваяСтрока.НастройкаСоответствия=Результат.НастройкаСоответствия;
		НоваяСтрока.СтрокаНастройка="["+Результат.НаименованиеТипаВИБ+"]: "+Результат.НаименованиеНастройки;
		НоваяСтрока.ЗагружатьДанные=Истина;
		
		СтрВИБ=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВнешняяИнформационнаяБаза");
		
		Пока СтрВИБ.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрВИБ.ВнешняяИнформационнаяБаза) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			СтрокаБаза=НоваяСтрока.Строки.Добавить();
			СтрокаБаза.ВнешняяИнформационнаяБаза=СтрВИБ.ВнешняяИнформационнаяБаза;
								
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТекДеревоЗагрузки,"ДеревоЗагрузкиПоОбъекту");
		
КонецПроцедуры // ЗаполнитьДеревоИмпортаПоВИБ()

&НаСервере
Процедура ПриИзмененииТипаОбъектаКонсолидации()
	
	Если ТипОбъектаКонсолидации="ВидСубконто" Тогда
		
		ИмяОбъектаМетаданных=ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка");
		
	Иначе
		
		ИмяОбъектаМетаданных="";
		
	КонецЕсли;
	
	Элементы.ИмяОбъектаМетаданных.СписокВыбора.Очистить();
	
	СписокОбъектовКонсолидации=ПолучитьСписокДляВыбораОбъектаКонсолидации(ТипОбъектаКонсолидации);
		
	Для Каждого ТекОбъект ИЗ СписокОбъектовКонсолидации Цикл
		
		Элементы.ИмяОбъектаМетаданных.СписокВыбора.Добавить(ТекОбъект.Значение,ТекОбъект.Представление);
		
	КонецЦикла;
	
	ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Очистить();
		
КонецПроцедуры // ПриИзмененииТипаОбъектаКонсолидации()

&НаСервере
Функция ПолучитьСписокДляВыбораОбъектаКонсолидации(ТипОбъектаКонсолидации)
	
	Если Не ЗначениеЗаполнено(ТипОбъектаКонсолидации) Тогда
		
		Возврат Новый СписокЗначений;
		
	Иначе
		
		СписокЗначений = Новый СписокЗначений;
		
		Если ТипОбъектаКонсолидации="Справочник" Тогда
			
			Для Каждого Справочник из Метаданные.Справочники Цикл
				
				Если Справочник.Имя="ПроизвольныйКлассификаторУХ" Тогда
					Продолжить;
				КонецЕсли;
				
				СписокЗначений.Добавить(Справочник.Имя, ОбщегоНазначенияУХ.ПолучитьСинонимПоля(Справочник.Имя));
				
			КонецЦикла;
						
		Иначе
					
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	ВидыСубконто.Ссылка,
			|	ВидыСубконто.Наименование КАК Наименование,
			|	ВидыСубконто.ТипЗначения КАК ТипЗначенияАналитики
			|ИЗ
			|	ПланВидовХарактеристик.ВидыСубконтоКорпоративные КАК ВидыСубконто
			|
			|УПОРЯДОЧИТЬ ПО
			|	Наименование";
			
			Результат=Запрос.Выполнить().Выбрать();
			
			Пока Результат.Следующий() Цикл
				
				Если Результат.ТипЗначенияАналитики.Типы()[0] = Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ") Тогда
					
					СписокЗначений.Добавить(Результат.Ссылка, Результат.Наименование);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Возврат СписокЗначений;
		
	КонецЕсли;
	
КонецФункции // ПолучитьСписокДляВыбораОбъектаКонсолидации()

&НаСервере
Процедура ПриИзмененииОбъектаМетаданных()
	
	ЗаполнитьДеревоИмпортаПоТипуМетаданных();
	
КонецПроцедуры // ПриИзмененииПотребителяРасчета()

&НаСервере
Процедура ЗагрузитьДанныеПоНастройке(ИспользуемаяИБ,НастройкаСоответствия)
	
	ПротоколируемыеСобытияУХ.Начать();
	
	Если НастройкаСоответствия.ТипОбъектаВИБ="ТаблицаADO" Тогда
		
		ИнтеграцияСВнешнимиСистемамиУХ.ЗагрузитьОбъектыИзADO(ИспользуемаяИБ,НастройкаСоответствия);
		
	Иначе
		
		ИнтеграцияСВнешнимиСистемамиУХ.ЗагрузитьОбъектыИзВИБ(ИспользуемаяИБ,НастройкаСоответствия,,,,,?(ТестовыйРежим,ЧислоПервых,0));
		
	КонецЕсли;
	
	ТаблицаОшибок=ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Обмен НСИ'"),,,,Ложь);
	ЗначениеВРеквизитФормы(ТаблицаОшибок,"ТаблицаСобытийЗагрузки");
		
КонецПроцедуры // ЗагрузитьДанныеПоНастройке()

&НаСервере
Процедура ВыгрузитьДанныеПоНастройке(ИспользуемаяИБ,НастройкаСоответствия,ТолькоИзмененные)
	
	ПротоколируемыеСобытияУХ.Начать();
	
	Если ТолькоИзмененные Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеОбъектыДляВыгрузки.Элемент
		|ИЗ
		|	РегистрСведений.ИзмененныеОбъектыДляВыгрузки КАК ИзмененныеОбъектыДляВыгрузки
		|ГДЕ
		|	ИзмененныеОбъектыДляВыгрузки.НастройкаСоответствия = &НастройкаСоответствия
		|	И ИзмененныеОбъектыДляВыгрузки.ИспользуемаяИБ = &ИспользуемаяИБ";
		
		Запрос.УстановитьПараметр("ИспользуемаяИБ",ИспользуемаяИБ);
		Запрос.УстановитьПараметр("НастройкаСоответствия",НастройкаСоответствия);
		
		СписокОбъектов=Новый СписокЗначений;
		СписокОбъектов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Элемент"));
		
		ИнтеграцияСВнешнимиСистемамиУХ.ВыгрузитьОбъектыВВИБ(ИспользуемаяИБ,НастройкаСоответствия,Неопределено,СписокОбъектов);
		
	Иначе
		
		ИнтеграцияСВнешнимиСистемамиУХ.ВыгрузитьОбъектыВВИБ(ИспользуемаяИБ,НастройкаСоответствия);
		
	КонецЕсли;
	
	ТаблицаОшибок=ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Обмен НСИ'"),,,,Ложь);
	ЗначениеВРеквизитФормы(ТаблицаОшибок,"ТаблицаСобытийЗагрузки");
				
КонецПроцедуры // ЗагрузитьДанныеПоНастройке()


///////////////////////////////////////////////////////////////////////////////////////////////


&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	Если ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы().Количество()>0 Тогда
		
		Для Каждого СтрДерево ИЗ ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы() Цикл
			СтрДерево.ЗагружатьДанные=Истина;
			СтрДерево.ПризнакОтметки=2;
			
			Для Каждого СтрИсточник ИЗ СтрДерево.ПолучитьЭлементы() Цикл
				
				СтрИсточник.ЗагружатьДанные=Истина;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрДерево ИЗ ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы() Цикл
			
			СтрДерево.ЗагружатьДанные=Истина;
			СтрДерево.ПризнакОтметки=2;
			
			Для Каждого СтрИсточник ИЗ СтрДерево.ПолучитьЭлементы() Цикл
				
				СтрИсточник.ЗагружатьДанные=Истина;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли; 	
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Если ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы().Количество()>0 Тогда
		
		Для Каждого СтрДерево ИЗ ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы() Цикл
			СтрДерево.ЗагружатьДанные=Ложь;
			СтрДерево.ПризнакОтметки=0;
			
			Для Каждого СтрИсточник ИЗ СтрДерево.ПолучитьЭлементы() Цикл
				
				 СтрИсточник.ЗагружатьДанные=Ложь;
				 
			 КонецЦикла;
			 
		 КонецЦикла;
		 
	 Иначе
		 
		 Для Каждого СтрДерево ИЗ ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы() Цикл
			СтрДерево.ЗагружатьДанные=Ложь;
			СтрДерево.ПризнакОтметки=0;
			
			Для Каждого СтрИсточник ИЗ СтрДерево.ПолучитьЭлементы() Цикл
				
				 СтрИсточник.ЗагружатьДанные=Ложь;
				 
			 КонецЦикла;
			 
		 КонецЦикла;

	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗагрузкиПоОбъектуЗагружатьДанныеПриИзменении(Элемент)
	
	СтрРодитель=Элементы.ДеревоЗагрузкиПоОбъекту.ТекущиеДанные.ПолучитьРодителя();
	
	Если Не СтрРодитель=Неопределено Тогда	
		СтрРодитель.ПризнакОтметки=?(Элементы.ДеревоЗагрузкиПоОбъекту.ТекущиеДанные.ЗагружатьДанные,1,СтрРодитель.ПризнакОтметки);
		
	Иначе
		
		Для Каждого СтрЭлемент ИЗ Элементы.ДеревоЗагрузкиПоОбъекту.ТекущиеДанные.ПолучитьЭлементы() Цикл
			СтрЭлемент.ЗагружатьДанные=Элементы.ДеревоЗагрузкиПоОбъекту.ТекущиеДанные.ЗагружатьДанные;
		КонецЦикла;
			
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗагрузкиПоВИБЗагружатьДанныеПриИзменении(Элемент)	
	
	СтрЭлемент=Элементы.ДеревоЗагрузкиПоВИБ.ТекущиеДанные;
	СтрРодитель=Элементы.ДеревоЗагрузкиПоВИБ.ТекущиеДанные.ПолучитьРодителя();
	Если Не СтрРодитель=Неопределено Тогда
		
		Если Элементы.ДеревоЗагрузкиПоВИБ.ТекущиеДанные.ЗагружатьДанные Тогда
			
			СтрРодитель.ПризнакОтметки=1;
			
		Иначе
			
			СтрРодитель.ПризнакОтметки=0;
			
		КонецЕсли;
		
	Иначе
		
		Если СтрЭлемент.ЗагружатьДанные Тогда
			СтрЭлемент.ПризнакОтметки=2;
		Иначе
			СтрЭлемент.ПризнакОтметки=0;
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТипОбъектаКонсолидацииПриИзменении(Элемент)
	
	ПриИзмененииТипаОбъектаКонсолидации();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаМетаданныхПриИзменении(Элемент)
	
	ПриИзмененииОбъектаМетаданных()
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьДанные(Команда)
	
	Если ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Количество()>0 Тогда
		
		Для Каждого СтрЭлемент ИЗ ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы() Цикл
			
			Если НЕ СтрЭлемент.ЗагружатьДанные Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Сообщить(НСтр("ru = 'Загружаются данные по настройке соответствия: '") + СтрЭлемент.НастройкаСоответствия);
			
			Для Каждого СтрБаза ИЗ СтрЭлемент.ПолучитьЭлементы() Цикл
				
				Если СтрБаза.ЗагружатьДанные Тогда
					
					Сообщить(НСтр("ru = 'Внешняя информационная база: '") + СтрБаза.ВнешняяИнформационнаяБаза);
					ЗагрузитьДанныеПоНастройке(СтрБаза.ВнешняяИнформационнаяБаза,СтрЭлемент.НастройкаСоответствия);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Сообщить(НСтр("ru = 'Загружаются данные из внешней информационной базы: '") + ВнешняяИнформационнаяБаза);
		
		Для Каждого СтрЭлемент ИЗ ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы() Цикл
			
			Если СтрЭлемент.ЗагружатьДанные Тогда
				
				Сообщить(НСтр("ru = 'Настройка соответствия: '") + СтрЭлемент.НастройкаСоответствия);
				ЗагрузитьДанныеПоНастройке(ВнешняяИнформационнаяБаза,СтрЭлемент.НастройкаСоответствия);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПроверитьОтобразитьПротокол();
					
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресТаблицыСобытий()
	
	ТаблицаСобытий=РеквизитФормыВЗначение("ТаблицаСобытийЗагрузки");
	ТаблицаСобытий.Сортировать("Дата,ВремяMs");
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаСобытий,ЭтаФорма.УникальныйИдентификатор);
		
КонецФункции // ПолучитьАдресТаблицыСобытий()

&НаКлиенте
Процедура  ПроверитьОтобразитьПротокол()
	
	Если ТаблицаСобытийЗагрузки.Количество()>0 Тогда
		
		ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма",Новый Структура("АдресТаблицыСобытий",ПолучитьАдресТаблицыСобытий()));
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьОтобразитьПротокол();

Процедура ВыгрузитьОбъекты(ТолькоИзмененные)
	
	Если ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Количество()>0 Тогда
		
		Для Каждого СтрЭлемент ИЗ ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы() Цикл
			
			Если НЕ СтрЭлемент.ЗагружатьДанные Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Сообщить(НСтр("ru = 'Выгружаются данные по настройке соответствия: '") + СтрЭлемент.НастройкаСоответствия);
			
			Для Каждого СтрБаза ИЗ СтрЭлемент.ПолучитьЭлементы() Цикл
				
				Если СтрБаза.ЗагружатьДанные И СтрБаза.ВнешняяИнформационнаяБаза.ЭкспортироватьЭлементыНСИ Тогда
					
					Сообщить(НСтр("ru = 'Внешняя информационная база: '") + СтрБаза.ВнешняяИнформационнаяБаза);
					ВыгрузитьДанныеПоНастройке(СтрБаза.ВнешняяИнформационнаяБаза,СтрЭлемент.НастройкаСоответствия,ТолькоИзмененные);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Если НЕ ВнешняяИнформационнаяБаза.ЭкспортироватьЭлементыНСИ Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Сообщить(НСтр("ru = 'Данные выгружаются во внешнюю информационную базу: '") + ВнешняяИнформационнаяБаза);
		
		Для Каждого СтрЭлемент ИЗ ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы() Цикл
			
			Если СтрЭлемент.ЗагружатьДанные Тогда
				
				Сообщить(НСтр("ru = 'Настройка соответствия: '") + СтрЭлемент.НастройкаСоответствия);
				ВыгрузитьДанныеПоНастройке(ВнешняяИнформационнаяБаза,СтрЭлемент.НастройкаСоответствия,ТолькоИзмененные);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ВыгрузитьОбъекты() 

&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
	
	ВыгрузитьОбъекты(Ложь);
	
	ПроверитьОтобразитьПротокол();
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьТолькоИзмененные(Команда)
	
	ВыгрузитьОбъекты(Истина);
	ПроверитьОтобразитьПротокол();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВнешнейИБПриИзменении(Элемент)
	
	Если ПоВнешнейИБ=1 Тогда
		
		ТипОбъектаКонсолидации="";
		ИмяОбъектаМетаданных="";
		ОписаниеОбъектаВИБ="";
		НастройкаСоответствия="";
		
	Иначе
		
		ВнешняяИнформационнаяБаза="";
		
	КонецЕсли;
	
	ДеревоЗагрузкиПоВИБ.ПолучитьЭлементы().Очистить();
	ДеревоЗагрузкиПоОбъекту.ПолучитьЭлементы().Очистить();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешняяИнформационнаяБазаПриИзменении(Элемент)
	
	ПодготовитьПараметрыОбмена();
	
КонецПроцедуры

