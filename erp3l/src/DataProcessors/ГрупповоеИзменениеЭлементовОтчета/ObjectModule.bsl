
Процедура ДополнитьТекстЗапроса(ТекстЗапроса, ИмяРеквизита, Первый)
	
	ТекстЗапроса = ТекстЗапроса + ?(Первый, ";", "
	|ОБЪЕДИНИТЬ") + "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	""" + ИмяРеквизита + """ КАК Ключ,
	|	ВТ_Вн." + ИмяРеквизита + " КАК Значение
	|ИЗ
	|	ВнутренняяТаблица КАК ВТ_Вн
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ." + ИмяРеквизита + ")
	|			ИЗ
	|				ВнутренняяТаблица КАК ВТ)";

	
КонецПроцедуры

Функция ОпределитьСтруктуруИзменяемыхДанных(ТипЭлемента, МассивОбъектов, ТекущаяТаблицаВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТипЭлемента = "Строка" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтрокиОтчетов.Ссылка,
		|	СтрокиОтчетов.ГруппаРаскрытия КАК ГруппаРаскрытия,
		|	СтрокиОтчетов.ВидПоказателя,
		|	СтрокиОтчетов.ДействияПриАктуализации,
		|	СтрокиОтчетов.ВидКурса,
		|	СтрокиОтчетов.ВидИтога,
		|	СтрокиОтчетов.Оборотный,
		|	СтрокиОтчетов.Внутригрупповой,
		|	СтрокиОтчетов.НеМасштабируется,
		|	СтрокиОтчетов.Код,
		|	СтрокиОтчетов.ТипЗначения,
		|	СтрокиОтчетов.Родитель КАК Родитель,
		|	СтрокиОтчетов.Предназначение,
		|	СтрокиОтчетов.ПриходРасход,
		|	СтрокиОтчетов.ОценкаПоложительногоОтклонения,
		|	СтрокиОтчетов.СчетБД,
		|	СтрокиОтчетов.РазделениеПоПроектам КАК РазделениеПоПроектам
		|ПОМЕСТИТЬ ВнутренняяТаблица
		|ИЗ
		|	Справочник.СтрокиОтчетов КАК СтрокиОтчетов
		|ГДЕ
		|	НЕ СтрокиОтчетов.ПометкаУдаления
		|	И СтрокиОтчетов.Ссылка В(&МассивОбъектов)";
		ДополнитьТекстЗапроса(ТекстЗапроса, "ГруппаРаскрытия", Истина);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидПоказателя", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ДействияПриАктуализации", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидКурса", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидИтога", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Оборотный", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Внутригрупповой", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "НеМасштабируется", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ТипЗначения", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "СчетБД", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Родитель", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Предназначение", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ПриходРасход", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ОценкаПоложительногоОтклонения", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "РазделениеПоПроектам", Ложь);
		
		
	ИначеЕсли ТипЭлемента = "Колонка" Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КолонкиОтчетов.Ссылка,
		|	КолонкиОтчетов.ТипЗначения,
		|	КолонкиОтчетов.ВидКурса,
		|	КолонкиОтчетов.Оборотный,
		|	КолонкиОтчетов.НеМасштабируется,
		|	КолонкиОтчетов.Код,
		|	КолонкиОтчетов.ВидИтогаПоСчету
		|ПОМЕСТИТЬ ВнутренняяТаблица
		|ИЗ
		|	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
		|ГДЕ
		|	НЕ КолонкиОтчетов.ПометкаУдаления
		|	И КолонкиОтчетов.Ссылка В(&МассивОбъектов)";
		
		ДополнитьТекстЗапроса(ТекстЗапроса, "ТипЗначения", Истина);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидКурса", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Оборотный", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "НеМасштабируется", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидИтогаПоСчету", Ложь);
		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоказателиОтчетов.Ссылка,
		|	ПоказателиОтчетов.ГруппаРаскрытия,
		|	ПоказателиОтчетов.Строка.ГруппаРаскрытия КАК ГруппаРаскрытияСтрока,
		|	ПоказателиОтчетов.ВидПоказателя,
		|	ПоказателиОтчетов.Оборотный,
		|	ПоказателиОтчетов.Строка.ВидПоказателя КАК ВидПоказателяСтрока,
		|	ПоказателиОтчетов.ДействияПриАктуализации,
		|	ПоказателиОтчетов.Строка.ДействияПриАктуализации КАК ДействияПриАктуализацииСтрока,
		|	ПоказателиОтчетов.ОценкаПоложительногоОтклонения,
		|	ПоказателиОтчетов.Строка.ОценкаПоложительногоОтклонения КАК ОценкаПоложительногоОтклоненияСтрока,
		|	ПоказателиОтчетов.ВидИтога,
		|	ПоказателиОтчетов.ВидКурса,
		|	ПоказателиОтчетов.СвязанныйПоказатель,
		|	ПоказателиОтчетов.НеФинансовый,
		|	ПоказателиОтчетов.Код,
		|	ПоказателиОтчетов.НеМасштабируется,
		|	ПоказателиОтчетов.ТипЗначения,
		|	ПоказателиОтчетов.ВнутриГрупповой,
		|	ПоказателиОтчетов.Предназначение,
		|	ПоказателиОтчетов.ПриходРасход,
		|	ПоказателиОтчетов.Строка.Предназначение КАК ПредназначениеСтрока,
		|	ПоказателиОтчетов.Строка.ПриходРасход КАК ПриходРасходСтрока,
		|	ПоказателиОтчетов.СчетБД,
		|	ПоказателиОтчетов.ВидИтогаПоСчету,
		|	ПоказателиОтчетов.Колонка.ВидИтогаПоСчету КАК ВидИтогаПоСчетуКолонка,
		|	ПоказателиОтчетов.Строка.СчетБД КАК СчетБДСтрока,
		|	ПоказателиОтчетов.Валютный,
		|	ПоказателиОтчетов.ПересчитыватьВалютнуюСумму,
		|	ПоказателиОтчетов.РазделениеПоПроектам КАК РазделениеПоПроектам
		|ПОМЕСТИТЬ ВнутренняяТаблица
		|ИЗ
		|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
		|ГДЕ
		|	НЕ ПоказателиОтчетов.ПометкаУдаления
		|	И ПоказателиОтчетов.Ссылка В(&МассивОбъектов)";
		
		ДополнитьТекстЗапроса(ТекстЗапроса, "ГруппаРаскрытия", Истина);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидПоказателя", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Оборотный", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ДействияПриАктуализации", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ОценкаПоложительногоОтклонения", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидИтога", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидКурса", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "СвязанныйПоказатель", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Нефинансовый", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "НеМасштабируется", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ТипЗначения", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Внутригрупповой", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Предназначение", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ПриходРасход", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "СчетБД", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ВидИтогаПоСчету", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "Валютный", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "ПересчитыватьВалютнуюСумму", Ложь);
		ДополнитьТекстЗапроса(ТекстЗапроса, "РазделениеПоПроектам", Ложь);
	
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса + "
	|;
	|ВЫБРАТЬ * ИЗ ВнутренняяТаблица";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса     = Запрос.ВыполнитьПакет();
	ТекущаяТаблицаВыбора = РезультатЗапроса[2].Выгрузить();
	
	Выборка = РезультатЗапроса[1].Выбрать();
	
	СтруктураНачальногоЗаполнения = Новый Структура;
	Пока Выборка.Следующий() Цикл
		СтруктураНачальногоЗаполнения.Вставить(Выборка.Ключ, Выборка.Значение);
	КонецЦикла;
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВнутренняяТаблица";
	Запрос.Выполнить();
	
	Возврат СтруктураНачальногоЗаполнения;
	
КонецФункции

Процедура ЗаписатьИзмененныеДанные(ФормаЭлемента, ТаблицаДанных, ТипЭлемента) Экспорт
	
	СтруктураИзмененныхДанных = ПодготовитьСтруктуруИзмененныхДанных(ФормаЭлемента);
	
	МассивНаследуемыхРеквизитовКолонка	= Новый Массив;		
	МассивНаследуемыхРеквизитовКолонка.Добавить("ВидИтогаПоСчету");
	
	МассивНаследуемыхРеквизитовСтрока 	= Новый Массив;
	МассивНаследуемыхРеквизитовСтрока.Добавить("ГруппаРаскрытия");
	МассивНаследуемыхРеквизитовСтрока.Добавить("СчетБД");
			
	Для Каждого Элемент Из ТаблицаДанных Цикл
		
		ЭлементОбъект = Неопределено;
		
		Для Каждого КлючИЗначение Из СтруктураИзмененныхДанных Цикл
			
			Если Элемент[КлючИЗначение.Ключ] <> КлючИЗначение.Значение Тогда
				
				Если ТипЭлемента = "Показатель" Тогда
					
					Если МассивНаследуемыхРеквизитовСтрока.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
						
						ЗначениеРеквизитаСтроки = Элемент[КлючИЗначение.Ключ + "Строка"];
						
						Если ЗначениеРеквизитаСтроки <> КлючИЗначение.Значение
						   И НЕ (КлючИЗначение.Ключ = "ГруппаРаскрытия" И Элемент.ГруппаРаскрытияСтрока.Пустая()) Тогда
							Продолжить;
						КонецЕсли;
						
					КонецЕсли;
					
					Если МассивНаследуемыхРеквизитовКолонка.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
						
						ЗначениеРеквизитаКолонки = Элемент[КлючИЗначение.Ключ + "Колонка"];
						
						Если ЗначениеРеквизитаКолонки <> КлючИЗначение.Значение Тогда
							Продолжить;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;

				Если ЭлементОбъект = Неопределено Тогда
					ЭлементОбъект = Элемент.Ссылка.ПолучитьОбъект();
				КонецЕсли;
				
				ЭлементОбъект[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭлементОбъект <> Неопределено Тогда
			Попытка
				ЭлементОбъект.Записать();
			Исключение
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
				СообщениеПользователю.Сообщить();
			КонецПопытки;
		КонецЕсли;
			
	КонецЦикла;
	
	Если ТипЭлемента = "Строка" Тогда
		НаследуемыеРеквизиты = Новый Структура;
		Для Каждого СтрРеквизит Из МассивНаследуемыхРеквизитовСтрока Цикл
			Если СтруктураИзмененныхДанных.Свойство(СтрРеквизит) Тогда
				Если СтрРеквизит = "ГруппаРаскрытия" И СтруктураИзмененныхДанных[СтрРеквизит].Пустая() Тогда
					Продолжить;
				КонецЕсли;
				НаследуемыеРеквизиты.Вставить(СтрРеквизит, СтруктураИзмененныхДанных[СтрРеквизит]);
			КонецЕсли;
		КонецЦикла;
		
		Если СтруктураИзмененныхДанных.Количество() > 0 Тогда
			УстановитьЗначенияРеквизитовДляПоказателей(Элемент.Ссылка, НаследуемыеРеквизиты);
		КонецЕсли;
				
	КонецЕсли;

	
КонецПроцедуры

Процедура УстановитьЗначенияРеквизитовДляПоказателей(СтрокаПоказателя, НаследуемыеРеквизиты) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиОтчетов.Ссылка
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|ГДЕ
	|	ПоказателиОтчетов.Строка = &Строка";
	
	Запрос.УстановитьПараметр("Строка", СтрокаПоказателя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ПоказательОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого Элемент Из НаследуемыеРеквизиты Цикл
			ПоказательОбъект[Элемент.Ключ] = Элемент.Значение;
		КонецЦикла;
		
		Попытка
			ПоказательОбъект.Записать();
		Исключение
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			СообщениеПользователю.Сообщить();
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьСтруктуруИзмененныхДанных(ЭтаФорма)
	
	СтруктураИзмененныхДанных = Новый Структура;
	
	РеквизитыФормы = ЭтаФорма.ПолучитьРеквизиты();
	Для Каждого Элемент Из РеквизитыФормы Цикл
		
		Если СтрЧислоВхождений(Элемент.Имя, "Изменить") > 0 Тогда
			
			Если ЭтаФорма[Элемент.Имя] Тогда
				ИмяРеквизита = СтрЗаменить(Элемент.Имя, "Изменить", "");
				СтруктураИзмененныхДанных.Вставить(ИмяРеквизита, ЭтаФорма[ИмяРеквизита]);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураИзмененныхДанных;
	
КонецФункции;