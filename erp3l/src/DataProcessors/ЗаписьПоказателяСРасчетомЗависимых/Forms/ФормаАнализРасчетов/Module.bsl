
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрокаШаблона = Нстр("ru = 'Вид отчета: %1'");
	ТекстЗаголовка = "";
	Если Не ПустаяСтрока(СтрокаШаблона) тогда				
		ТекстЗаголовка = СтрШаблон(СтрокаШаблона, Параметры.ВидОтчета);
	КонецЕсли;

	Элементы.ДекорацияВидОтчета.Заголовок = ТекстЗаголовка;
	
	МаксАналитикОтчета=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(Параметры.ВидОтчета);

	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		Элементы["ТаблицаИсходныхПоказателейАналитика"+Индекс].Видимость=(МаксАналитикОтчета>=Индекс);
		Элементы["ТаблицаТрассировкиРасчетаАналитика"+Индекс].Видимость=(МаксАналитикОтчета>=Индекс);
		
	КонецЦикла;
	
	ЕстьРазделениеПоПроектам=Параметры.ВидОтчета.РазделениеПоПроектам;
	
	Элементы.ТаблицаИсходныхПоказателейПроект.Видимость=(МаксАналитикОтчета>=Индекс);
	Элементы.ТаблицаТрассировкиРасчетаПроект.Видимость=(МаксАналитикОтчета>=Индекс);
		
	ДанныеРасчета=ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаДанныхТрассировки);
		
	ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(ДанныеРасчета.ТаблицаИсходныхПоказателей,ТаблицаИсходныхПоказателей);
	ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(ДанныеРасчета.ТаблицаТрассировкиРасчета,ТаблицаТрассировкиРасчета);
	
	ТаблицаИсходныхПоказателей.Сортировать("ВремяРасчетаЗависимых Убыв");

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсходныхПоказателейПриАктивизацииСтроки(Элемент)
		
	Если Элементы.ТаблицаИсходныхПоказателей.ТекущиеДанные=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураОтбор=Новый ФиксированнаяСтруктура("ИдентификаторПересчета",Элементы.ТаблицаИсходныхПоказателей.ТекущиеДанные.ИдентификаторПересчета);
	Элементы.ТаблицаТрассировкиРасчета.ОтборСтрок=СтруктураОтбор;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТаблицаИсходныхПоказателей.Количество()>0 Тогда
		
		Элементы.ТаблицаИсходныхПоказателей.ТекущаяСтрока=ТаблицаИсходныхПоказателей.НайтиПоИдентификатору(0);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктураПараметровДляРасшифровки(ИдентификаторСтроки)
	
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	
	СтрокаДанные=ТаблицаТрассировкиРасчета.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	НоваяСтрока=ОбработкаОбъект.ТаблицаИзмененныхПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДанные);
	НоваяСтрока.СинтетическоеЗначение=Истина;
	ОбработкаОбъект.ВидОтчета=СтрокаДанные.ВидОтчета;
	ОбработкаОбъект.ВалютаОтображения=СтрокаДанные.ОсновнаяВалюта;
	
	СтруктураПараметровДляВызоваРасшифровки=ОбработкаОбъект.ПолучитьСтруктуруПараметровДляРасшифровки();
	
	Если НЕ СтруктураПараметровДляВызоваРасшифровки = Неопределено Тогда
		
		 СтруктураПараметровДляВызоваРасшифровки.Вставить("АдресХранилищаПеременныхДляРасчета", ПоместитьВоВременноеХранилище(СтруктураПараметровДляВызоваРасшифровки.ОбъектРасчета,ЭтаФорма.УникальныйИдентификатор));
		 
		 СтруктураПараметровДляВызоваРасшифровки.ОбъектРасчета.Вставить("ЕдиницаИзмеренияОтображения",Перечисления.ПорядкиОкругленияОтчетности.Окр1);
		 СтруктураПараметровДляВызоваРасшифровки.Вставить("ВсегдаПоказыватьБланкРасшифровки",Истина);
			 
		 СтруктураПараметровДляВызоваРасшифровки.Удалить("ОбъектРасчета");
		 
		 Возврат СтруктураПараметровДляВызоваРасшифровки;
		 
	 Иначе
		 
		 Возврат Неопределено;
		
	КонецЕсли;	
	
КонецФункции // ПолучитьСтруктураПараметровДляРасшифровки() 

&НаКлиенте
Процедура Расшифровать(Команда)
	
	СтруктураПараметровДляВызоваРасшифровки=ПолучитьСтруктураПараметровДляРасшифровки(Элементы.ТаблицаТрассировкиРасчета.ТекущиеДанные.ПолучитьИдентификатор());
	
	Если НЕ СтруктураПараметровДляВызоваРасшифровки = Неопределено  Тогда
		ОткрытьФорму("Обработка.РасшифровкаРассчитанныхЗначений.Форма", 
		СтруктураПараметровДляВызоваРасшифровки,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЭкземплярОтчета(СтруктураРеквизитов)
	
	Возврат Документы.НастраиваемыйОтчет.ПолучитьЭкземплярОтчета(СтруктураРеквизитов.Организация,
																СтруктураРеквизитов.ПериодОтчета,
																СтруктураРеквизитов.Сценарий,
																СтруктураРеквизитов.ВидОтчета,
																СтруктураРеквизитов.ОсновнаяВалюта,
																Истина,
																Истина,
																"",
																СтруктураРеквизитов.Проект,
																Ложь);
	
	
КонецФункции // ПолучитьЭкземплярОтчета() 

&НаКлиенте
Процедура ОткрытьЭкземплярОтчета(Команда)
	
	ТекущиеДанные=Элементы.ТаблицаТрассировкиРасчета.ТекущиеДанные;
	
	СтруктураРеквизитов=Новый Структура("Организация, ПериодОтчета, Сценарий, ВидОтчета,ОсновнаяВалюта,Проект");
	
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитов,ТекущиеДанные);
	
	Экземпляр = ПолучитьЭкземплярОтчета(СтруктураРеквизитов);
	
	Если Экземпляр = Неопределено Тогда
		
		Сообщить(Нстр("ru = 'Не удалось определить экземпляр отчета'"));
		
	Иначе	 
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Ключ", Экземпляр);
		СтруктураПараметров.Вставить("мТекущаяВалюта", Элементы.ТаблицаТрассировкиРасчета.ТекущиеДанные.ОсновнаяВалюта);
		
		МассивПоказателей=Новый Массив;
		МассивПоказателей.Добавить(ТекущиеДанные.ПоказательОтчета);
		
		СтруктураПараметров.Вставить("МассивПоказателей",Новый ФиксированныйМассив(МассивПоказателей));	

		ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаДокументаУправляемая",СтруктураПараметров); 
		
	КонецЕсли;
	
КонецПроцедуры
