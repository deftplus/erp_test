
// Определяет возможность создания договора по протоколу ПротоколВыбораВход.
// Дополнительно выводит диагностическое сообщение, если создание недоступно.
&НаСервере
Функция ОпределитьВозможностьСозданияДоговора(ПротоколВыбораВход)
	РезультатФункции = Ложь;
	Если ТипЗнч(ПротоколВыбораВход) = Тип("ДокументСсылка.ПротоколВыбораПобедителей") Тогда
		Если ПротоколВыбораВход.Проведен Тогда
			Если (ПротоколВыбораВход.ТоргиСостоялись) И (Не ПротоколВыбораВход.ПринятоРешениеОПереторжке) Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПротоколВыбораПобедителей.ЗакупочнаяПроцедура КАК ЗакупочнаяПроцедура,
				|	ПротоколВыбораПобедителей.Ссылка КАК ПротоколПобедителей,
				|	Лоты.Ссылка КАК Лот,
				|	ОбъектыВыбора.Выбран КАК Выбран,
				|	ОбъектыВыбора.Объект КАК Предложение
				|ПОМЕСТИТЬ ВТ_ВыбранныеОбъекты
				|ИЗ
				|	Документ.ПротоколВыбораПобедителей КАК ПротоколВыбораПобедителей
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лоты КАК Лоты
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
				|			ПО Лоты.Ссылка = ОбъектыВыбора.Владелец
				|		ПО ПротоколВыбораПобедителей.ЗакупочнаяПроцедура = Лоты.ЗакупочнаяПроцедура
				|ГДЕ
				|	НЕ Лоты.ПометкаУдаления
				|	И ПротоколВыбораПобедителей.Ссылка = &ПротоколВыбораПобедителей
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ДокументПредложениеПоставщика.Ссылка КАК ПредложениеПоставщика,
				|	ДокументПредложениеПоставщика.Контрагент КАК Поставщик,
				|	ВТ_ВыбранныеОбъекты.Лот КАК Лот,
				|	ВТ_ВыбранныеОбъекты.ПротоколПобедителей КАК ПротоколПобедителей
				|ИЗ
				|	Документ.ПредложениеПоставщика КАК ДокументПредложениеПоставщика
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВыбранныеОбъекты КАК ВТ_ВыбранныеОбъекты
				|		ПО ДокументПредложениеПоставщика.Ссылка = ВТ_ВыбранныеОбъекты.Предложение
				|			И (ВТ_ВыбранныеОбъекты.Выбран)";
				Запрос.УстановитьПараметр("ПротоколВыбораПобедителей", ПротоколВыбораВход);
				РезультатЗапроса = Запрос.Выполнить();
				Если НЕ РезультатЗапроса.Пустой() Тогда
					РезультатФункции = Истина;
				Иначе
					РезультатФункции = Ложь;
					ТекстСообщения = НСтр("ru = 'Нет победителей по протоколу ""%Протокол%"". Операция отменена.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Протокол%", Строка(ПротоколВыбораВход));
					ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
				КонецЕсли;
			Иначе
				РезультатФункции = Ложь;
				ТекстСообщения = НСтр("ru = 'Торги по протоколу ""%Протокол%"" не завершены. Операция отменена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Протокол%", Строка(ПротоколВыбораВход));
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			КонецЕсли;
		Иначе
			РезультатФункции = Ложь;
			ТекстСообщения = НСтр("ru = 'Протокол ""%Протокол%"" не проведён. Операция отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Протокол%", Строка(ПротоколВыбораВход));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		РезультатФункции = Ложь;
		ТекстСообщения = НСтр("ru = 'Неизвестный вариант выбора победителе ""%Протокол%"". Операция отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Протокол%", Строка(ПротоколВыбораВход));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		 // ОпределитьВозможностьСозданияДоговора()

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	МожноСоздаватьДоговор = ОпределитьВозможностьСозданияДоговора(ПараметрКоманды);
	Если МожноСоздаватьДоговор Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПротоколВыбораПобедителей", ПараметрКоманды);
		ОткрытьФорму("Обработка.ФормированиеДоговоровСПобедителямиТоргов.Форма",
			ПараметрыФормы, 
			ПараметрыВыполненияКоманды.Источник, 
			ПараметрыВыполненияКоманды.Уникальность, 
			ПараметрыВыполненияКоманды.Окно, 
			ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создание договора недоступно'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры
