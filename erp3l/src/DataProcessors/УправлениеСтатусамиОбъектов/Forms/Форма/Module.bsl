// Устанавливает в списке объектов на форме параметры отбора.
&НаСервере
Процедура УстановитьПараметрыЗапросаСпискаОбъектов(УстанавливатьВидОбъектаПоУмолчаниюВход = Ложь)
	// Организация.
	ВыбранныйВидОбъекта = Объект.ВидОбъектаБд;
	ТекстЗапроса = ТекстЗапросаСпискаОбъектовПоУмолчанию;
	Если ЗначениеЗаполнено(ВыбранныйВидОбъекта) Тогда
		РеквизитОрганизация = ВыбранныйВидОбъекта.РеквизитРазделенияПоОрганизациям;
		Если ЗначениеЗаполнено(РеквизитОрганизация) Тогда
			// Реквизит указан. Установим отбор по организации, если организация заполнена.
			Если ЗначениеЗаполнено(Объект.Организация) Тогда
				СписокОбъектов.Параметры.УстановитьЗначениеПараметра("Организация", Объект.Организация);	
			Иначе
				СписокОбъектов.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено);	
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Организация", "." + РеквизитОрганизация);
			СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
		Иначе
			// Реквизит разделения по организации не указан. Уберём отбор по организации.
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств.Организация = &Организация", "ИСТИНА");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств.Организация КАК Организация", "ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация");
			СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
			СписокОбъектов.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено);	
		КонецЕсли;
	Иначе
		// Вид объекта не выбран. Определить реквизит организации нельзя. Уберём отбор по организации.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств.Организация = &Организация", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств.Организация КАК Организация", "ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация");
		СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
		СписокОбъектов.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено);	
	КонецЕсли;
	// Вид объекта.
	Если ЗначениеЗаполнено(ВыбранныйВидОбъекта) Тогда
		Если ТипЗнч(ВыбранныйВидОбъекта) = Тип("СправочникСсылка.ДокументыБД") Тогда
			// Документы.
			НаименованиеДокумента = ВыбранныйВидОбъекта.Наименование;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ЗаявкаНаРасходованиеДенежныхсредств", "Документ." + ВыбранныйВидОбъекта.Наименование);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств", НаименованиеДокумента);
			СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
			СписокОбъектов.ОсновнаяТаблица = "Документ." + ВыбранныйВидОбъекта.Наименование;
		ИначеЕсли ТипЗнч(ВыбранныйВидОбъекта) = Тип("СправочникСсылка.СправочникиБД") Тогда
			// Справочники.
			НаименованиеДокумента = ВыбранныйВидОбъекта.Наименование;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.ЗаявкаНаРасходованиеДенежныхСредств", "Справочник." + ВыбранныйВидОбъекта.Наименование);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗаявкаНаРасходованиеДенежныхСредств", НаименованиеДокумента);
			СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
			СписокОбъектов.ОсновнаяТаблица = "Справочник." + ВыбранныйВидОбъекта.Наименование;
		Иначе
			// Прочие варианты. Вернём запрос по умолчанию.
			СписокОбъектов.ТекстЗапроса = ТекстЗапросаСпискаОбъектовПоУмолчанию;
			СписокОбъектов.ОсновнаяТаблица = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
		КонецЕсли;
	Иначе
		// Пустой вид объекта. Установим запрос по умолчанию.
		ТекИБ = Справочники.ТипыБазДанных.ТекущаяИБ;
		Если УстанавливатьВидОбъектаПоУмолчаниюВход Тогда
			Объект.ВидОбъектаБд = Справочники.ДокументыБД.НайтиПоНаименованию("ЗаявкаНаРасходованиеДенежныхСредств", , , ТекИБ);
		Иначе
			// Оставляем пустым, согласно переданному параметру.
		КонецЕсли;
		СписокОбъектов.ТекстЗапроса = ТекстЗапросаСпискаОбъектовПоУмолчанию;
		СписокОбъектов.ОсновнаяТаблица = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	КонецЕсли;
	СписокОбъектов.ТекстЗапроса = ТекстЗапроса;
КонецПроцедуры		// УстановитьПараметрыЗапросаСпискаОрганизаций()

// Возвращает элемент справочника БД, сопоставленному объекту СсылкаВход.
&НаСервереБезКонтекста
Функция ВернутьСправочникБдПоОбъекту(СсылкаВход)
	РезультатФункции = Справочники.ДокументыБД.ПустаяСсылка();
	ТипДокумента = ТипЗнч(СсылкаВход);
	РезультатФункции = ОбщегоНазначенияСерверУХ.ВернутьСсылкуБДПоТипу(ТипДокумента);
	Возврат РезультатФункции;	
КонецФункции		// ВернутьСправочникБдПоОбъекту()

// Возвращает соответствие организаций объектам из МассивДокументовВход.
&НаСервереБезКонтекста
Функция ПолучитьСоответствиеОрганизаций(МассивДокументовВход)
	// Инициализация.
	РезультатФункции = Новый Соответствие;
	ПустаяОрганизация = Справочники.Организации.ПустаяСсылка();
	Для Каждого ТекМассивДокументовВход Из МассивДокументовВход Цикл
		// Определение реквизита Организации.
		ТекСправочникБд = ВернутьСправочникБдПоОбъекту(ТекМассивДокументовВход);
		РеквизитОрганизация = ТекСправочникБд.РеквизитРазделенияПоОрганизациям;
		Если ЗначениеЗаполнено(РеквизитОрганизация) Тогда
			РеквизитНайден = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекМассивДокументовВход, РеквизитОрганизация);
			// Получение организации из выбранного реквизита и запись в итоговое соответствие.
			Если РеквизитНайден Тогда
				ТекОрганизация = ТекМассивДокументовВход[РеквизитОрганизация];
				РезультатФункции.Вставить(ТекМассивДокументовВход, ТекОрганизация);
			Иначе
				РезультатФункции.Вставить(ТекМассивДокументовВход, ПустаяОрганизация);				
			КонецЕсли;
		Иначе
			РезультатФункции.Вставить(ТекМассивДокументовВход, ПустаяОрганизация);
		КонецЕсли;	
	КонецЦикла;	
	Возврат РезультатФункции;
КонецФункции		// ПолучитьСоответствиеОрганизаций()

// Управляет доступностью элементов на форме Форма.
&НаСервере
Процедура УправлениеДоступностью()
	// Доступность ревизита Организация в зависимости от выбранного вида объекта.
	ВыбранныйВидОбъекта = Объект.ВидОбъектаБд;
	Если ЗначениеЗаполнено(ВыбранныйВидОбъекта) Тогда
		РеквизитОрганизация = ВыбранныйВидОбъекта.РеквизитРазделенияПоОрганизациям;
		Элементы.Организация.Доступность = ЗначениеЗаполнено(РеквизитОрганизация);
	Иначе
		Элементы.Организация.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры		// УправлениеДоступностью()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекстЗапросаСпискаОбъектовПоУмолчанию = СписокОбъектов.ТекстЗапроса;
	УстановитьПараметрыЗапросаСпискаОбъектов(Истина);
	УправлениеДоступностью();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьПараметрыЗапросаСпискаОбъектов(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаБдПриИзменении(Элемент)
	УстановитьПараметрыЗапросаСпискаОбъектов();
	УправлениеДоступностью();
КонецПроцедуры

&НаКлиенте
Процедура ВыборСтатуса_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт 
	ПустаяОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		// Получение дополнительных параметров.
		МассивОбъектов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "МассивОбъектов", Новый Массив);
		СоответствиеОрганизаций = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "СоответствиеОрганизаций", Новый Соответствие);
		Для Каждого ТекМассивОбъектов Из МассивОбъектов Цикл
			Если ЗначениеЗаполнено(ТекМассивОбъектов) Тогда
				Попытка
					// Определение прав СуперПользователя.
					ТекОрганизация = СоответствиеОрганизаций.Получить(ТекМассивОбъектов);
					Если НЕ ЗначениеЗаполнено(ТекОрганизация) Тогда
						ТекОрганизация = ПустаяОрганизация;
					Иначе
						// Значение получено.
					КонецЕсли;
					ЕстьСуперПользователь = МодульСогласованияДокументовУХ.ЕстьСуперПользователь(ТекОрганизация);
					Если ЕстьСуперПользователь Тогда
						// Непосредственный перевод статуса.
						РезультатПеревода = УправлениеПроцессамиСогласованияУХ.ПеревестиЗаявкуВПроизвольноеСостояние(ТекМассивОбъектов, ВыбранноеЗначение);
						// Обработка результата перевода.
						Если РезультатПеревода Тогда
							КартинкаОповещения = БиблиотекаКартинок.ПометкаНовостиФлагЖелтый32;
							ТекстОповещения = НСтр("ru = 'Изменение состояния'");
							ПояснениеОповещения = НСтр("ru = 'Состояние объекта %Объект% успешно переведено в %Состояние%'");
							ПояснениеОповещения = СтрЗаменить(ПояснениеОповещения, "%Объект%", Строка(ТекМассивОбъектов));
							ПояснениеОповещения = СтрЗаменить(ПояснениеОповещения, "%Состояние%", Строка(ВыбранноеЗначение));
							ПоказатьОповещениеПользователя(ТекстОповещения, , ПояснениеОповещения, КартинкаОповещения);
						Иначе
							ТекстСообщения = НСтр("ru = 'Не удалось перевести объект %Объект% в состояние %Состояние%'");
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ТекМассивОбъектов));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Состояние%", Строка(ВыбранноеЗначение));
							ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
						КонецЕсли;
					Иначе
						ТекстСообщения = НСтр("ru = 'Требуются права суперпользователя для организации %Организация%, чтобы установить новый статус у объекта %Объект%. Воспользуйтесь матрицей полномочий для их установки.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(ТекОрганизация));
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ТекМассивОбъектов));
						ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
					КонецЕсли;
				Исключение
					ТекстСообщения = НСтр("ru = 'При переводе объекта %Объект% в состояние %Состояние% возникли ошибки: %ОписаниеОшибки%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ТекМассивОбъектов));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Состояние%", Строка(ВыбранноеЗначение));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
					ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
				КонецПопытки;
			Иначе
				// Пустой объект. Пропускаем.
			КонецЕсли; 
		КонецЦикла;
		// Обновление списка на форме.
		Элементы.СписокОбъектов.Обновить();
	Иначе
		// Статус не выбран. Отменяем действие.
	КонецЕсли;
КонецПроцедуры		// ВыборСтатуса_Завершение()

&НаКлиенте
Процедура ИзменитьСтатус(Команда)
	ВыделенныеСтроки = Элементы.СписокОбъектов.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		Попытка
			// Получим нужное перечисление для установки нового статуса.
			ПерваяСтрока = ВыделенныеСтроки[0];
			ВыбранныйВидОбъекта = ВернутьСправочникБдПоОбъекту(ПерваяСтрока);
			Если ЗначениеЗаполнено(ВыбранныйВидОбъекта) Тогда
				РеквизитСостояния = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ВыбранныйВидОбъекта, "РеквизитСостоянияСтрока");
				РеквизитСостояния = СтрЗаменить(РеквизитСостояния, "Перечисление.", "");
				Если ЗначениеЗаполнено(РеквизитСостояния) Тогда
					СтрокаФормы = "Перечисление." + РеквизитСостояния + ".ФормаВыбора";
					// Получим соответствие организаций выбранным документам.
					МассивОбъектов = ОбщегоНазначенияКлиентСерверУХ.УдалитьПустыеЭлементыМассива(ВыделенныеСтроки); 
					СоответствиеОрганизаций = ПолучитьСоответствиеОрганизаций(МассивОбъектов);
					//Заполнение параметров и открытие формы выбора.
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("МассивОбъектов", МассивОбъектов);
					СтруктураПараметров.Вставить("СоответствиеОрганизаций", СоответствиеОрганизаций);
					ОписаниеОЗакрытии = Новый ОписаниеОповещения("ВыборСтатуса_Завершение", ЭтаФорма, СтруктураПараметров);
					ОткрытьФорму(СтрокаФормы, , ЭтаФорма, , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				Иначе
					ТекстСообщения = НСтр("ru = 'Не удалось получить реквизит состояния для объекта %Объект%. Операция отменена.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ПерваяСтрока));
					ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
				КонецЕсли;
			Иначе
				ТекстСообщения = НСтр("ru = 'Не удалось получить данные по принадлежности объекта %Объект%. Операция отменена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Объект%", Строка(ПерваяСтрока));
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			КонецЕсли;
		Исключение
			ТекстСообщения = НСтр("ru = 'При переводе объектов в новое состояние возникли ошибки: %ОптсаниеОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОптсаниеОшибки%", ОписаниеОшибки());
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецПопытки;
	Иначе
		ТекстСообщения = НСтр("ru = 'Объект не выбран. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры
