#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимТрассировки = Константы.ИспользоватьРежимТрассировкиПересчетаПоказателей.Получить();
	
	Если НЕ (РежимТрассировки
		ИЛИ Параметры.Свойство("РежимТрассировки")) Тогда
		
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для интерактивного использования'");
		
	КонецЕсли;
	
	// Заполним переданные для открытия формы параметры
	Параметры.Свойство("ИспользоватьНастройкиФормы",ИспользоватьНастройкиФормы);
	Параметры.Свойство("Вывод",Вывод);
	Параметры.Свойство("ПоказыватьМакетыСОшибками", Объект.ПоказыватьМакетыСОшибками);
	Параметры.Свойство("ПутьДляСохраненияОтчетов", Объект.ПутьДляСохраненияОтчетов);
	Параметры.Свойство("ВидГруппаОтчета", Объект.ВидГруппаОтчета);
	Параметры.Свойство("ЭкземплярОтчета", Объект.ЭкземплярОтчета);
	Параметры.Свойство("ЧислоВыполнений", Объект.ЧислоВыполнений);
	
	Если Вывод = 0 Тогда
		Вывод = 1; 
	КонецЕсли;
	
	Если Объект.ЧислоВыполнений = 0 Тогда
		Объект.ЧислоВыполнений = 1;
	КонецЕсли;	
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если ИспользоватьНастройкиФормы Тогда
		Настройки.Очистить();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ФормаСравнениеСКлассическимАлгоритмом.Пометка = Объект.СравнениеСКлассическимАлгоритмомРасчета;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыводПриИзменении(Элемент)
	
	УправлениеВидимостью();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьНаКлиенте(Элемент=Неопределено)
	
	Результат = ВыполнитьНаСервере();
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПутьДляСохраненияОтчетов) Тогда
		
		// АПК:143-выкл
		ПрефиксДляОтчета = Макс(НСтр(СтрокаСоединенияИнформационнойБазы(),"Ref"),НСтр(СтрокаСоединенияИнформационнойБазы(),"File"))
			+ "_" + Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd-hh-mm-ss");
		// АПК:143-вкл	
			
		Результат.Протокол.Записать(Объект.ПутьДляСохраненияОтчетов + "\" + ?(Результат.БылиОшибки,"ОШИБКА_","УСПЕХ_") + ПрефиксДляОтчета + ".XLSX",
			ТипФайлаТабличногоДокумента.XLSX);
		
		Если Объект.ПоказыватьМакетыСОшибками 
			И Результат.Свойство("ОтличияВМакетах") Тогда
			Результат.ОтличияВМакетах.Записать(Объект.ПутьДляСохраненияОтчетов + "ОтличияВМакетах_" + ПрефиксДляОтчета + ".XLSX",
				ТипФайлаТабличногоДокумента.XLSX);
		КонецЕсли;
		
	Иначе

		ТабДокПротокол = Результат.Протокол;
		Если Объект.ПоказыватьМакетыСОшибками Тогда
			Если Результат.Свойство("ОтличияВМакетах") Тогда
				Результат.ОтличияВМакетах.Показать();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьНаСервере()
	
	ТабДокПротокол.Очистить();
	
	тОбъект = РеквизитФормыВЗначение("Объект");
	Возврат тОбъект.ВыполнитьАвтоЗаполнение();
	
КонецФункции

&НаКлиенте
Процедура СравнениеСКлассическимАлгоритмом(Команда)

	Элементы.ФормаСравнениеСКлассическимАлгоритмом.Пометка = НЕ Элементы.ФормаСравнениеСКлассическимАлгоритмом.Пометка;
	Объект.СравнениеСКлассическимАлгоритмомРасчета = Элементы.ФормаСравнениеСКлассическимАлгоритмом.Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостью()
	
	Если Вывод = 1 Тогда
		Элементы.ПутьДляСохраненияОтчетов.Видимость = Ложь;
		Объект.ПутьДляСохраненияОтчетов = "";
	Иначе
		Элементы.ПутьДляСохраненияОтчетов.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

