///////////////////////////////////////////////////////////////////////////////
// Данная обработка не предназначена для загрузки в качестве внешней
// обработки. Другие обработки конвертации (подчиненные) могут быть
// потенциально открыты как внешние, поэтому модуль менеджера у них
// использовать нерекомендуется.
// Для обеспечения максимальной замкнутости набора обработок конвертации
// общие модули используются минимально. Весь общий функционал перенесен
// в модуль менеджера данной обработки.
//

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс


// Возвращает объект обработки.
//
Функция ПолучитьОбъект() Экспорт
	Возврат Обработки.КонвертерSCMIntermediateFormatУХ.Создать();
КонецФункции

// Добавляет в соответствие, описывающее функции конвертации
//  (см. ПолучитьОписаниеКонвертера()), тип и функции
//  для его обработки.
//
// Параметры:
//  СоответвиеФункцийКонвертации - Соответствие - куда добавлять
//		описание функций.
//  ИмяТипа - Тип - для какого типа регистрировать функции обработки.
//  СтрокаИменФункций - Строка - имена функций разделенных
//		запятыми, либо запятыми с переносом строки. Например,
//		"Имя1,
//		|Имя2".
// 
Процедура ДобавитьФункцииОбработки(СоответвиеФункцийКонвертации,
								 ИмяТипа,
								 СтрокаИменФункций) Экспорт
	СоответвиеФункцийКонвертации.Вставить(
		ИмяТипа,
		СтрокуВФиксМассив(СтрокаИменФункций));
КонецПроцедуры

// Возвращает текст .xsd файла с описанием формата.
//
Функция ПолучитьТекстSCMIntermediateFormatИзМакета() Экспорт
	Возврат ПолучитьТекстИзМакета("SCMIntermediateFormat");
КонецФункции

#Область ДоступКДаннымКонфигурацииЗависящийОтСхемыДанных


// Ищет ссылку указанного типа по ключевым полям.
//
// Параметры:
//  КлючевыеПоля - Структура - Ключ - имя поля; Значение - значение поля.
//  ИмяТипа1С - Строка - имя типа. Например, "Документ.ПрограммаЗакупок".
// 
// Возвращаемое значение:
//	 - Структура результата с полями:
//   	- Результат - ЛюбаяСсылка - ссылка на найденный объект.
//		- ЕстьОшибка - Булево - объект не нейден.
//		- Ошибка - Строка - причина ошибки.
//
Функция НайтиСсылкуПоКлючевымПолям(КлючевыеПоля, ИмяТипа1С) Экспорт
	мПутьИмениТипа = СтрРазделить(ИмяТипа1С, ".", Ложь);
	ИмяТипаОбъекта = мПутьИмениТипа[0];
	ИмяВидаОбъекта = мПутьИмениТипа[1];
	мСсылок = ЦентрализованныеЗакупкиУХ.ПолучитьСсылкиОбъектаПоОтбору(
		ИмяТипаОбъекта,
		ИмяВидаОбъекта,
		КлючевыеПоля);
	Если мСсылок.Количество() = 0 Тогда
		Возврат 
			Обработки.КонвертерОбъектовXDTOУХ.РезультатОшибка(
				НСтр("ru='Не удалось найти объект по ключевым полям!'"));
	КонецЕсли;
	Если мСсылок.Количество() > 1 Тогда
		Возврат 
			Обработки.КонвертерОбъектовXDTOУХ.РезультатОшибка(
				НСтр("ru='Найдено больше одного объекта по ключевым полям!'"));
	КонецЕсли;
	Возврат 
		Обработки.КонвертерОбъектовXDTOУХ.РезультатУспех(мСсылок[0]);
КонецФункции

// Ищет ссылку по УИД среди элементов указанного типа.
//
// Параметры:
//  СтрокаУИД	 - Строка - УИД объекта.
//  ТипОбъектаУХ - Строка - тип объекта метаданных, например,
//							"Справочник.Контрагенты".
// 
// Возвращаемое значение:
//   - ЛюбаяСсылка - ссылка на найденный объект типа ТипОбъектаУХ.
//	 - Неопределено - такого объекта нет.
//
Функция НайтиОбъектПоУИД(СтрокаУИД, ТипОбъектаУХ) Экспорт
	Менеджер = Новый (СтрЗаменить(ТипОбъектаУХ, ".", "Менеджер."));
	Ссылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаУИД));
	Если Ссылка.Пустая()
		Или ОбщегоНазначения.СсылкаСуществует(Ссылка) Тогда
		Возврат Ссылка;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции


#КонецОбласти


#КонецОбласти


#Область НеЭкспортныеФункции


Функция СтрокуВФиксМассив(Строка)
	мСтрок = СтрРазделить(Строка, ",", Ложь);
	МаксИндекс = мСтрок.Количество()-1;
	Для Ном = 0 По МаксИндекс Цикл
		мСтрок[Ном] = СокрЛП(мСтрок[Ном]);
	КонецЦикла;
	Возврат Новый ФиксированныйМассив(мСтрок);
КонецФункции

// Возвращает текст макета данной обработки по его имени.
Функция ПолучитьТекстИзМакета(ИмяМакета)
	ТекстСтруктуры = ПолучитьМакет(ИмяМакета);
	Возврат ТекстСтруктуры.ПолучитьТекст();
КонецФункции


#КонецОбласти


#КонецЕсли