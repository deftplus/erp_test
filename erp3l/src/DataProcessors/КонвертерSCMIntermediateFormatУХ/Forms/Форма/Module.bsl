
#Область ОбработкаОсновныхСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТипПравилКонвертацииXSD = Справочники.ПравилаКонвертацииXSD.Из1СВОбъектыSCM;
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура XMLВОбъектУХ(Команда)
	Результат = XMLВОбъектУХНаСервере(ИсходныйТекст);
КонецПроцедуры

&НаКлиенте
Процедура НайтиСсылкуПоXML(Команда)
	РезультатСсылка = НайтиСсылкуПоXMLНаСервере(ИсходныйТекст, ИмяТипаXDTO);
	Если РезультатСсылка.ЕстьОшибка Тогда
		Результат = РезультатСсылка.Ошибка;
	Иначе
		Ссылка = РезультатСсылка.Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СсылкуВXML(Команда)
	Результат = ОбъектУХВXDTOНаСервере(Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура XMLВXDTO(Команда)
	Результат = XMLВXDTOНаСервере(ИсходныйТекст);
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаОбъектовВXML(Команда)
	ВыборкаОбъектовВXMLНаСервере();
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервереБезКонтекста
Функция XMLВОбъектУХНаСервере(ТекстОписания)
	Конвертер = Обработки.КонвертерSCMIntermediateFormatУХ.ПолучитьОбъект();
	ОбъектXDTO = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(
		ТекстОписания,
		Конвертер.ПолучитьФабрикуXDTO());
	ОбъектXDTO.Проверить();
	РезультатОписаниеОбъекта = Конвертер.ВыполнитьФункциюКонвертации(
		"СоздатьОбъектИзXDTO",
		ОбъектXDTO.Тип().Имя,
		ОбъектXDTO);
	Если РезультатОписаниеОбъекта.ЕстьОшибка Тогда
		Возврат РезультатОписаниеОбъекта.Ошибка;
	КонецЕсли;
	ДесериализованныйОбъект = РезультатОписаниеОбъекта.Результат;
	Возврат ОбщегоНазначенияУХ.ЗначениеВСтроку(ДесериализованныйОбъект);
КонецФункции

&НаСервереБезКонтекста
Функция ОбъектУХВXDTOНаСервере(Ссылка)
	Перем ОбъектXDTO;
	ИмяТипаМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка)).ПолноеИмя();
	Конвертер = Обработки.КонвертерSCMIntermediateFormatУХ.ПолучитьОбъект();
	РезультатОписаниеОбъекта = Конвертер.ВыполнитьФункциюКонвертации(
		"ПреобразоватьСсылкуВXDTO",
		ИмяТипаМетаданных,
		Ссылка);
	Если РезультатОписаниеОбъекта.ЕстьОшибка Тогда
		Возврат РезультатОписаниеОбъекта.Ошибка;
	КонецЕсли;
	ОбъектXDTO = РезультатОписаниеОбъекта.Результат;
	ОбъектXDTO.Проверить();	
	ТекстОписания = ОбщегоНазначения.ОбъектXDTOВСтрокуXML(
		ОбъектXDTO, 
		Конвертер.ПолучитьФабрикуXDTO());
	Возврат ТекстОписания;
КонецФункции

&НаСервере
Функция XMLВXDTOНаСервере(ТекстОписания)
	Перем ОбъектXDTO;
	Конвертер = Обработки.КонвертерSCMIntermediateFormatУХ.ПолучитьОбъект();
	ОбъектXDTO = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(
		ТекстОписания,
		Конвертер.ПолучитьФабрикуXDTO());
	ОбъектXDTO.Проверить();
	ДесериализованныйОбъект = 
		Обработки.КонвертерОбъектовXDTOУХ.ОбъектXDTOВСтруктуру(
			ОбъектXDTO);
	Возврат ОбщегоНазначенияУХ.ЗначениеВСтроку(ДесериализованныйОбъект);
КонецФункции

&НаСервереБезКонтекста
Функция НайтиСсылкуПоXMLНаСервере(ТекстОписания, ИмяТипаXDTO)
	Конвертер = Обработки.КонвертерSCMIntermediateFormatУХ.ПолучитьОбъект();
	ОбъектXDTO = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(
		ТекстОписания,
		Конвертер.ПолучитьФабрикуXDTO());
	//ОбъектXDTO = ИнтеграцияЦУЗсЭТПКлиентСерверУХ.ТекстXMLВОбъектXDTO(
	//	Конвертер.ПолучитьФабрикуXDTO(),
	//	ТекстОписания,
	//	Конвертер.ПолучитьТипXDTO(ИмяТипаXDTO));
	ОбъектXDTO.Проверить();
	Возврат Конвертер.ВыполнитьФункциюКонвертации(
		"НайтиСсылкуНаОбъектИзXDTO",
		ОбъектXDTO.Тип().Имя,
		ОбъектXDTO);
КонецФункции

&НаСервереБезКонтекста
Процедура ВыборкаОбъектовВXMLНаСервере()
	
КонецПроцедуры


#КонецОбласти






