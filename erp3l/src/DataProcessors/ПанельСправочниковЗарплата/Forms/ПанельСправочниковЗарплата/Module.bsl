
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	УправлениеЭлементами()
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		// Изменены настройки программы в панелях администрирования
		УправлениеЭлементами();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбщиеСправочники

&НаКлиенте
Процедура ОткрытьСправочникВидыДоходовНДФЛ(Команда)
	
	ОткрытьФорму("Справочник.ВидыДоходовНДФЛ.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрСведенийВычетыКДоходамПоНДФЛ(Команда)
	
	ОткрытьФорму("РегистрСведений.ВычетыПоДоходамНДФЛ.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыВычетовПоНДФЛ(Команда)
	
	ОткрытьФорму("Справочник.ВидыВычетовНДФЛ.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрСведенийРазмерВычетовНДФЛ(Команда)
	
	ОткрытьФорму("РегистрСведений.РазмерВычетовНДФЛ.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрСведенийТарифыСтраховыхВзносов(Команда)
	
	ОткрытьФорму("РегистрСведений.ТарифыСтраховыхВзносов.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыДоходовПоСтраховымВзносам(Команда)
	
	ОткрытьФорму("Справочник.ВидыДоходовПоСтраховымВзносам.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикиРаботыСотрудников(Команда)
	
	ОткрытьФорму("Справочник.ГрафикиРаботыСотрудников.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыИспользованияРабочегоВремени(Команда)
	
	ОткрытьФорму("Справочник.ВидыИспользованияРабочегоВремени.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыРаботСотрудников(Команда)
	
	ОткрытьФорму("Справочник.ВидыРаботСотрудников.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникСпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения(Команда)
	
	ОткрытьФорму("Справочник.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПланВидовРасчетаНачисления(Команда)
	
	ОткрытьФорму("ПланВидовРасчета.Начисления.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПланВидовРасчетаУдержания(Команда)
	
	ОткрытьФорму("ПланВидовРасчета.Удержания.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникПоказателиРасчетаЗарплаты(Команда)
	
	ОткрытьФорму("Справочник.ПоказателиРасчетаЗарплаты.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникПодразделенияОрганизаций(Команда)
	
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникДолжности(Команда)
	
	ОткрытьФорму("Справочник.Должности.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникВидыДокументовВводДанныхДляРасчетаЗарплаты(Команда)
	
	ОткрытьФорму("Справочник.ВидыДокументовВводДанныхДляРасчетаЗарплаты.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникСпособыОтраженияЗарплатыВБухУчете(Команда)
	
	ОткрытьФорму("Справочник.СпособыОтраженияЗарплатыВБухУчете.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗарплатныеПроекты(Команда)
	
	ОткрытьФорму("Справочник.ЗарплатныеПроекты.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМестаРаботы(Команда)
	
	ОткрытьФорму("Справочник.МестаРаботы.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТерриторииВыполненияРабот(Команда)
	
	ОткрытьФорму("Справочник.ТерриторииВыполненияРабот.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаконодательныеЗначения(Команда)
	ОткрытьФорму("Обработка.РедактированиеЗаконодательныхЗначений.Форма.Форма", , ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементами()
	
	// Права просмотра нормативно-справочной информации.
	ПравоДоступаПодразделения        = ПравоДоступа("Просмотр", Метаданные.Справочники.ПодразделенияОрганизаций);
	ПравоДоступаДолжности            = ПравоДоступа("Просмотр", Метаданные.Справочники.Должности);
	ПравоДоступаГрафикиРаботыСотрудников = ПравоДоступа("Просмотр", Метаданные.Справочники.ГрафикиРаботыСотрудников);
	ПравоДоступаВидыРаботСотрудников = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыРаботСотрудников);
	ПравоДоступаВидыИспользованияРабочегоВремени = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыИспользованияРабочегоВремени);
	ПравоДоступаЗарплатныеПроекты    = ПравоДоступа("Просмотр", Метаданные.Справочники.ЗарплатныеПроекты);
	ПравоДоступаМестаРаботы          = ПравоДоступа("Просмотр", Метаданные.Справочники.МестаРаботы);
	ПравоДоступаСпособыВыплаты       = ПравоДоступа("Просмотр", Метаданные.Справочники.СпособыВыплатыЗарплаты);
	ПравоДоступаСпособыОкругления    = ПравоДоступа("Просмотр", Метаданные.Справочники.СпособыОкругленияПриРасчетеЗарплаты);
	ПравоДоступаСпособыОтражения     = ПравоДоступа("Просмотр", Метаданные.Справочники.СпособыОтраженияЗарплатыВБухУчете);
	ПравоДоступаТерриторииВыполненияРабот = ПравоДоступа("Просмотр", Метаданные.Справочники.ТерриторииВыполненияРабот);
	
	// Права просмотра данных для расчета.
	ПравоДоступаНачисления                  = ПравоДоступа("Просмотр", Метаданные.ПланыВидовРасчета.Начисления);
	ПравоДоступаУдержания                   = ПравоДоступа("Просмотр", Метаданные.ПланыВидовРасчета.Удержания);
	ПравоДоступаПоказателиРасчетаЗарплаты   = ПравоДоступа("Просмотр", Метаданные.Справочники.ПоказателиРасчетаЗарплаты);
	ПравоДоступаВидыДокументовВводДанныхДляРасчетаЗарплаты = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыДокументовВводДанныхДляРасчетаЗарплаты);
	ПравоДоступаТарифныеГруппы              = ПравоДоступа("Просмотр", Метаданные.Справочники.ТарифныеСетки);
	ПравоДоступаКвалификационныеРазряды     = ПравоДоступа("Просмотр", Метаданные.Справочники.РазрядыКатегорииДолжностей);
	
	// Права просмотра вычетов НДФЛ.
	ПравоДоступаВидыДоходовНДФЛ               = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыДоходовНДФЛ);
	ПравоДоступаВычетыКДоходамПоНДФЛ          = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ВычетыПоДоходамНДФЛ);
	ПравоДоступаВидыВычетовПоНДФЛ             = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыВычетовНДФЛ);
	ПравоДоступаРазмерВычетовНДФЛ             = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.РазмерВычетовНДФЛ);
	
	// Права просмотра настроек по страховым взносам.
	ПравоДоступаТарифыСтраховыхВзносов        = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ТарифыСтраховыхВзносов);
	ПравоДоступаВидыДоходовПоСтраховымВзносам = ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыДоходовПоСтраховымВзносам);
	
	ПравоДоступаСпискиПрофессийДолжностей     = ПравоДоступа(
		"Просмотр",
		Метаданные.Справочники.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения);
	
	// Управление видимостью нормативно-справочной информации.
	Элементы.КнопкаПодразделенияОрганизаций.Видимость    = ПравоДоступаПодразделения;
	
	Элементы.КнопкаДолжности.Видимость    = ПравоДоступаДолжности;
	
	Элементы.ОткрытьМестаРаботы.Видимость = ПравоДоступаМестаРаботы И ПолучитьФункциональнуюОпцию("ИспользоватьКраткосрочныеИзмененияОплатыТрудаВЗависимостиОтВыполняемойРаботы");
	
	Элементы.КнопкаВидыИспользованияРабочегоВремени.Видимость    = ПравоДоступаВидыИспользованияРабочегоВремени;
	
	Элементы.КнопкаГрафикиРаботыСотрудников.Видимость    = ПравоДоступаГрафикиРаботыСотрудников;
	
	Элементы.КнопкаВидыРаботСотрудников.Видимость    = ПравоДоступаВидыРаботСотрудников;
	
	Элементы.ГруппаЗарплатныеПроекты.Видимость = ПравоДоступаЗарплатныеПроекты;
	Элементы.ОткрытьСпособыВыплатыЗарплаты.Видимость = ПравоДоступаСпособыВыплаты;
	Элементы.ОткрытьСпособыОкругления.Видимость = ПравоДоступаСпособыОкругления;
	Элементы.КнопкаСпособыОтраженияЗарплатыВБухУчете.Видимость = ПравоДоступаСпособыОтражения;
	Элементы.ОткрытьТерриторииВыполненияРабот.Видимость = ПравоДоступаТерриторииВыполненияРабот;
	
	// Управление видимостью данных для расчета.
	Элементы.КнопкаПВРНачисления.Видимость    = ПравоДоступаНачисления;
	
	Элементы.КнопкаПоказателиРасчетаЗарплаты.Видимость    = ПравоДоступаПоказателиРасчетаЗарплаты;
	
	Элементы.КнопкаВидыДокументовВводДанныхДляРасчетаЗарплаты.Видимость		= ПравоДоступаВидыДокументовВводДанныхДляРасчетаЗарплаты;
	
	Элементы.ОткрытьТарифныеСетки.Видимость = ПравоДоступаТарифныеГруппы И ПолучитьФункциональнуюОпцию("ИспользоватьТарифныеСеткиПриРасчетеЗарплатыХозрасчет");
	Элементы.ОткрытьКвалификационныеРазряды.Видимость = ПравоДоступаКвалификационныеРазряды И ПолучитьФункциональнуюОпцию("ИспользоватьТарифныеСеткиПриРасчетеЗарплатыХозрасчет");
		
	// Управление видимостью данных для расчета НДФЛ.
	Элементы.КнопкаВидыДоходовНДФЛ.Видимость    = ПравоДоступаВидыДоходовНДФЛ;
	
	Элементы.КнопкаВычетыКДоходамПоНДФЛ.Видимость    = ПравоДоступаВычетыКДоходамПоНДФЛ;
	
	Элементы.КнопкаВидыВычетовПоНДФЛ.Видимость    = ПравоДоступаВидыВычетовПоНДФЛ;
	
	Элементы.КнопкаРазмерВычетовНДФЛ.Видимость    = ПравоДоступаРазмерВычетовНДФЛ;
	
	// Управление видимостью настроек страховых взносов.
	Элементы.ГруппаСтраховыеВзносыСлева.Видимость  = ПравоДоступаТарифыСтраховыхВзносов;
	Элементы.ГруппаСтраховыеВзносыСправа.Видимость = ПравоДоступаВидыДоходовПоСтраховымВзносам;
	
	// Управление видимостью персонифицированного учета.
	Элементы.ГруппаПерсонифицированныйУчет.Видимость = ПравоДоступаСпискиПрофессийДолжностей;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникОсобыеУсловияТрудаПФР(Команда)
	ОткрытьФорму("Справочник.ОсобыеУсловияТрудаПФР.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникТерриториальныеУсловияПФР(Команда)
	ОткрытьФорму("Справочник.ТерриториальныеУсловияПФР.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникПараметрыИсчисляемогоСтраховогоСтажа(Команда)
	ОткрытьФорму("Справочник.ПараметрыИсчисляемогоСтраховогоСтажа.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникОснованияДосрочногоНазначенияПенсии(Команда)
	ОткрытьФорму("Справочник.ОснованияДосрочногоНазначенияПенсии.ФормаСписка", , ЭтаФорма);
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочникОснованияИсчисляемогоСтраховогоСтажа(Команда)
	ОткрытьФорму("Справочник.ОснованияИсчисляемогоСтраховогоСтажа.ФормаСписка", , ЭтаФорма);
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТарифныеСетки(Команда)
	
	ПараметрыОткрытия = Новый Структура();
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ВидТарифнойСетки", ПредопределенноеЗначение("Перечисление.ВидыТарифныхСеток.Тариф"));
	ПараметрыОткрытия.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("Справочник.ТарифныеСетки.ФормаСписка", 
		ПараметрыОткрытия, 
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКвалификационныеРазряды(Команда)
	ОткрытьФорму("Справочник.РазрядыКатегорииДолжностей.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСпособыВыплатыЗарплаты(Команда)
	ОткрытьФорму("Справочник.СпособыВыплатыЗарплаты.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСпособыОкругления(Команда)
	ОткрытьФорму("Справочник.СпособыОкругленияПриРасчетеЗарплаты.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

#КонецОбласти
