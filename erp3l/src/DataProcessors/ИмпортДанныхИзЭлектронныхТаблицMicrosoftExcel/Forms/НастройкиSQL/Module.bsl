
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИменаТаблиц = Новый Соответствие;
	
	Для Каждого Элемент Из Параметры.Таблицы Цикл
		Таблицы.Добавить(Элемент.Значение, Элемент.Представление);
		ИменаТаблиц.Вставить(Элемент.Представление, Элемент.Значение);
	КонецЦикла;
	
	Данные = Новый Структура;
	Данные.Вставить("Колонки", Параметры.Колонки);
	Данные.Вставить("ИменаТаблиц", ИменаТаблиц);
	
	Для Каждого Элемент Из Параметры.Соединения Цикл
		Соединение = Соединения.Добавить();
		Соединение.Таблица = Таблицы.НайтиПоЗначению(Элемент.Значение).Представление;
		Соединение.Условие = Элемент.Представление;
	КонецЦикла;
	
	Для Каждого Элемент Из Параметры.ДобавочныеПоля Цикл
		ДобавочноеПоле = ДобавочныеПоля.Добавить();
		ДобавочноеПоле.Имя = Элемент.Представление;
		ДобавочноеПоле.Значение = Элемент.Значение;
		Типы = Новый Массив;
		Типы.Добавить(ТипЗнч(Элемент.Значение));
		ДобавочноеПоле.Тип = Новый ОписаниеТипов(Типы);
	КонецЦикла; 
	
	Условие = Параметры.Условие;
	Первые1 = Параметры.Первые1;
	Таблица = Параметры.Таблица;
	
КонецПроцедуры


&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
    Параметр = Новый Структура;
	
	Параметр.Вставить("СоединенияИзменены", СоединенияИзменены);
	
	Если СоединенияИзменены Тогда
		
		СписокСоединений = Новый СписокЗначений;
		Для Каждого Соединение Из Соединения Цикл
			
			СписокСоединений.Добавить(Данные.ИменаТаблиц[Соединение.Таблица], Соединение.Условие);
			
		КонецЦикла; 
		
		Параметр.Вставить("Соединения", СписокСоединений);
		
	КонецЕсли;
	
	Параметр.Вставить("ДобавочныеПоляИзменены", ДобавочныеПоляИзменены);
	
	Если ДобавочныеПоляИзменены Тогда
		
		СписокДобавочныхПолей = Новый СписокЗначений;
		Для Каждого ДобавочноеПоле Из ДобавочныеПоля Цикл
			
			СписокДобавочныхПолей.Добавить(ДобавочноеПоле.Значение, ДобавочноеПоле.Имя);
			
		КонецЦикла; 
		
		Параметр.Вставить("ДобавочныеПоля", СписокДобавочныхПолей);
		
	КонецЕсли;
	
	Параметр.Вставить("Условие", Условие);
	Параметр.Вставить("Первые1", Первые1);
	
	Оповестить(ИмяФормы, Параметр, ВладелецФормы);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКолонку(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	
	ДобавитьКолонкиТаблицы(СписокВыбора, Таблица);
	
	Для Каждого Соединение Из Соединения Цикл
		ИмяТаблицы = Данные.ИменаТаблиц[Соединение.Таблица];
		Если НЕ ИмяТаблицы = Неопределено Тогда
			ДобавитьКолонкиТаблицы(СписокВыбора, ИмяТаблицы);
		КонецЕсли;
	КонецЦикла; 
	
	Элемент = Неопределено;
 
	
	СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ВставитьКолонкуЗавершение", ЭтотОбъект), "Выберите колонку");
		
КонецПроцедуры

&НаКлиенте
Процедура ВставитьКолонкуЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Элемент = ВыбранныйЭлемент;
    Если Элемент = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    Элементы.Условия.ВыделенныйТекст = Элемент.Значение;

КонецПроцедуры


&НаКлиенте
Процедура СоединенияПриИзменении(Элемент)
	
	СоединенияИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СоединенияТаблицаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеВыбора = Таблицы;
	СтандартнаяОбработка = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура СоединенияТаблицаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВыбора = Элемент.СписокВыбора;
	
	Если Элемент.СписокВыбора.Количество() = 0 Тогда
	
		Для Каждого ЭлементСписка Из Таблицы Цикл
			
			СписокВыбора.Добавить(ЭлементСписка.Представление);
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьКолонкиТаблицы(Список, ИмяТаблицы)
	
	Колонки = Данные.Колонки[ИмяТаблицы];
	Если НЕ Колонки = Неопределено  Тогда
		Для Каждого Колонка Из Колонки Цикл
			Список.Добавить(Колонка.Значение, Колонка.Представление);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавочныеПоляТипНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	ДанныеВыбора.Добавить(Новый ОписаниеТипов("Число"));
	ДанныеВыбора.Добавить(Новый ОписаниеТипов("Строка"));
	ДанныеВыбора.Добавить(Новый ОписаниеТипов("Дата"));
	ДанныеВыбора.Добавить(Новый ОписаниеТипов("Булево"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавочныеПоляПриИзменении(Элемент)
	
	ДобавочныеПоляИзменены = Истина;
	
КонецПроцедуры
