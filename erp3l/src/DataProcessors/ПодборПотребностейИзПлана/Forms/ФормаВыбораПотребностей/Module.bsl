
#Область ОбработкаОсновныхСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗакрыватьПриВыборе = Ложь;
	ПараметрОрганизация = Параметры.ОрганизацияДляЗаключенияДоговора;
	ОтборОрганизации.Очистить();
	Если ЗначениеЗаполнено(ПараметрОрганизация) Тогда
		ОтборОрганизации.Добавить(ПараметрОрганизация);
	Иначе
		// Оставляем список пустым.
	КонецЕсли;
	Параметры.Свойство("МестоПоставки", МестоПоставки);
	Параметры.Свойство("ФиксироватьМестоПоставки", ФиксироватьМестоПоставки);
	Параметры.Свойство("Валюта", Валюта);
	
	ОтборТоварнаяКатегория = Параметры.ТоварнаяКатегория;
	ДатаСреза = Параметры.ДатаСреза;
	Если ДатаСреза = '00010101' Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	УстановитьРеквизитыФормыПоОрганизации();
	ОбновитьВыборПериодаЗакупкиИзПараметров(Параметры);
	РеквизитПериодаЗакупокПриИзмененииНаСервере(Элементы.Инновационный.Имя);
	ПриИзмененииОтбораНаСервере();
	ИнициализироватьОформлениеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ФормаВладелец = ОбщегоНазначенияКлиентСерверУХ.ПолучитьФормуПоЭлементу(
		ЭтаФорма.ВладелецФормы);
	Если ИмяСобытия = "ЗакрытьПодчиненнуюФорму"
			И Параметр = "ПодборПотребностейИзПлана"
			И Источник = ФормаВладелец Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура ВыбранныеПотребностиВНоменклатуреКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.ВыбранныеПотребностиВНоменклатуре.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.Количество > ТекДанные.КоличествоОстаток Тогда
		ТекДанные.Количество = ТекДанные.КоличествоОстаток;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСОжиданиемЗакрытия(Команда)
	АдресТаблицы = ПолучитьАдресТаблицыСВыбраннымиСтрокамиНаСервере(ЭтаФорма.УникальныйИдентификатор);
	ОповеститьОВыборе(АдресТаблицы);
	Если ЭтаФорма.Открыта() Тогда
		ЭтаФорма.Закрыть();
	Иначе
		// Форма уже закрыта.
	КонецЕсли;
КонецПроцедуры
		
&НаКлиенте
Процедура ОрганизацияДляЗаключенияДоговораПриИзменении(Элемент)
	ОрганизацияДляЗаключенияДоговораПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МестоПоставкиОтборПриИзменении(Элемент)
	МестоПоставкиОтборПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнновационныйПриИзменении(Элемент)
	РеквизитПериодаЗакупокПриИзмененииНаСервере(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалаПриИзменении(Элемент)
	РеквизитПериодаЗакупокПриИзмененииНаСервере(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОкончанияПриИзменении(Элемент)
	РеквизитПериодаЗакупокПриИзмененииНаСервере(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ЗаполнитьТаблицуПотребностейВыбраннымиСтроками(ВыбраннаяСтрока);
КонецПроцедуры
		
&НаКлиенте
Процедура ОтборОрганизацииПриИзменении(Элемент)
	УстановитьРеквизитыФормыПоОрганизации();
	ПриИзмененииОтбораНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТоварнаяКатегорияПриИзменении(Элемент)
	ТоварнаяКатегорияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыборТоварнойКатегории_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ОтборТоварнаяКатегория = Результат.Значение;
		ТоварнаяКатегорияПриИзмененииНаСервере();
    Иначе
		// Пользователь отказался.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборТоварнаяКатегорияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекПользователь = ПользователиКлиент.ТекущийПользователь();
	МассивКатегорий = ПолучитьМассивКатегорий(ТекПользователь, ОтборОрганизации);
	Если МассивКатегорий.Количество() > 0 Тогда
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.ЗагрузитьЗначения(МассивКатегорий);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыборТоварнойКатегории_Завершение", ЭтаФорма);
		СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Нет доступных товарных категорий по оргазации ""%Организация%"" для текущего пользователя. Уточните матрицу категорийных менеджеров.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(ОтборОрганизации));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборТоварнаяКатегорияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиенте
Процедура ЗаполнитьТаблицуПотребностейВыбраннымиСтроками(мКлючей)
	Для Каждого КлючСтроки Из мКлючей Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(КлючСтроки);
		Поиск = Новый Структура(
			ЦентрализованныеЗакупкиКлиентСерверУХ.ИменаКлючевыхПолейПотребности());
		ЗаполнитьЗначенияСвойств(Поиск, ДанныеСтроки);
		НайденныеСтроки = ВыбранныеПотребностиВНоменклатуре.НайтиСтроки(Поиск);
		Если НайденныеСтроки.Количество() = 0 Тогда
			ИзменяемаяСтрока = ВыбранныеПотребностиВНоменклатуре.Добавить();
		Иначе
			ИзменяемаяСтрока = НайденныеСтроки[0];
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ИзменяемаяСтрока, ДанныеСтроки);
		ИзменяемаяСтрока.КоличествоОстаток = ДанныеСтроки.Количество;
		Если НЕ ТИПЗНЧ(ДанныеСтроки.Номенклатура) = ТИП("СправочникСсылка.Номенклатура") Тогда
			ИзменяемаяСтрока.ОбщийОстаток = ДанныеСтроки.Сумма;
		Иначе
			ИзменяемаяСтрока.ОбщийОстаток = ДанныеСтроки.Количество;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервере
Процедура УстановитьРеквизитыФормыПоОрганизации()
	Если ОтборОрганизации.Количество() = 1 Тогда
		ТекОрганизация = ОтборОрганизации[0].Значение;
		МожноВыбратьИнновационный = (ЗначениеЗаполнено(ТекОрганизация) И ТекОрганизация.ЗакупкаПоФЗ223);
	Иначе
		МожноВыбратьИнновационный = Истина;
	КонецЕсли;
	Если НЕ МожноВыбратьИнновационный Тогда
		ВыборПериодаЗакупок.Инновационный = Ложь;
		РеквизитПериодаЗакупокПриИзмененииНаСервере(Элементы.Инновационный.Имя);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьОформлениеФормы()
	флРазделятьНоменклатуруПоКатегорийнымМенеджерам = Константы.РазделятьНоменклатуруПоКатегорийнымМенеджерам.Получить();
	ОтображатьМестоПоставки = (НЕ ФиксироватьМестоПоставки) ИЛИ (НЕ ЗначениеЗаполнено(МестоПоставки));
	Элементы.МестоПоставкиОтбор.Доступность = ОтображатьМестоПоставки;
	УстановитьОформлениеФормы();
КонецПроцедуры
	
&НаСервере
Процедура УстановитьОформлениеФормы()
	Элементы.Инновационный.Видимость = МожноВыбратьИнновационный;
	Элементы.Организация.Видимость = НЕ ЗначениеЗаполнено(ОрганизацияДляЗаключенияДоговора);
	Элементы.МестоПоставки.Видимость = НЕ ЗначениеЗаполнено(МестоПоставки);
	Элементы.ГруппаТоварнаяКатегория.Видимость = флРазделятьНоменклатуруПоКатегорийнымМенеджерам;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыборПериодаЗакупкиИзПараметров(Параметры)
	ЗначениеВДанныеФормы(
		Обработки.ВыборПериодаЗакупок.СоздатьВыборПериодаДиапазоном(
			Параметры.ПериодНачала,
			Параметры.ПериодОкончания,
			Параметры.Инновационный),
		ВыборПериодаЗакупок);
КонецПроцедуры
	
&НаСервере
Процедура РеквизитПериодаЗакупокПриИзмененииНаСервере(ИмяРеквизита)
	Обработки.ВыборПериодаЗакупок.ОбработатьПриИзмененииРеквизита(
		ВыборПериодаЗакупок,
		ИмяРеквизита);
	ПриИзмененииОтбораНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтбораНаСервере()
	НоваяДатаНачала = ВыборПериодаЗакупок.ПериодНачала.ДатаНачала;
	НоваяДатаОкончания = ВыборПериодаЗакупок.ПериодОкончания.ДатаОкончания;
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала", НоваяДатаНачала);
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", НоваяДатаОкончания);
	Список.Параметры.УстановитьЗначениеПараметра("Валюта", Валюта);
	
	Если ОтборОрганизации.Количество() > 0 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Организация", ОтборОрганизации);
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоОрганизации", Истина);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Организация", Новый СписокЗначений);
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоОрганизации", Ложь);
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("ДатаСреза", ДатаСреза);
	ОтборыСписковКлиентСерверУХ.ИзменитьЭлементОтбораСписка(
		Список, "МестоПоставки", МестоПоставки,  ЗначениеЗаполнено(МестоПоставки));
	Если флРазделятьНоменклатуруПоКатегорийнымМенеджерам Тогда
		Если ЗначениеЗаполнено(ОтборТоварнаяКатегория) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ТоварнаяКатегория", ОтборТоварнаяКатегория);
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("ТоварнаяКатегория", Справочники.ТоварныеКатегории.ПустаяСсылка());
		КонецЕсли;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ТоварнаяКатегория", Справочники.ТоварныеКатегории.ПустаяСсылка());
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияДляЗаключенияДоговораПриИзмененииНаСервере()
	УстановитьРеквизитыФормыПоОрганизации();
	ПриИзмененииОтбораНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаСервере
Процедура МестоПоставкиОтборПриИзмененииНаСервере()
	ПриИзмененииОтбораНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры

// Вызывается при изменении отбора по товарной категории.
&НаСервере
Процедура ТоварнаяКатегорияПриИзмененииНаСервере()
	ПриИзмененииОтбораНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры		// ТоварнаяКатегорияПриИзмененииНаСервере()

&НаСервере
Функция ПолучитьАдресТаблицыСВыбраннымиСтрокамиНаСервере(УИДВладельца)
	ТаблицаПотребностей = ПодготовитьТаблицуПотребностей();
	АдресТаблицы = ПоместитьВоВременноеХранилище(
		ТаблицаПотребностей, 
		УИДВладельца);
	Возврат АдресТаблицы;
КонецФункции

&НаСервере
Функция ПодготовитьТаблицуПотребностей()
	ТаблицаПотребностей = РеквизитФормыВЗначение(
			"ВыбранныеПотребностиВНоменклатуре");
	Для Каждого СтрокаТаблицы Из ТаблицаПотребностей Цикл
		Если СтрокаТаблицы.Количество = 0 Тогда
			СтрокаТаблицы.Цена = СтрокаТаблицы.Сумма;
		Иначе
			Цена = СтрокаТаблицы.Сумма / 
				?(СтрокаТаблицы.КоличествоОстаток = 0,
					1, 
					СтрокаТаблицы.КоличествоОстаток);
			СтрокаТаблицы.Сумма = Окр(Цена * СтрокаТаблицы.Количество, 2);
		КонецЕсли;
	КонецЦикла;
	Возврат ТаблицаПотребностей;
КонецФункции

// Возвращает массив товарных категорий, сопоставленных менеджеру ПользовательВход
// в организации ОрганизацияВход.
&НаСервереБезКонтекста
Функция ПолучитьМассивКатегорий(ПользовательВход, ОрганизацияВход)
	РезультатФункции = РегистрыСведений.ПолномочияКатегорийныхМенеджеров.ПолучитьТоварныеКатегорииПоМенеджеру(ПользовательВход, ОрганизацияВход);
	Возврат РезультатФункции;
КонецФункции

#КонецОбласти