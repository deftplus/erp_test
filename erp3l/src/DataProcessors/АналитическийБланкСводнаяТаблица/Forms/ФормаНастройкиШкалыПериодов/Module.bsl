
&НаКлиенте
Процедура Применить(Команда)
	
	Если НастройкиПериодовСводнойТаблицы[0].ИспользоватьГруппировкуПериодов  
		И Не ЗначениеЗаполнено(НастройкиПериодовСводнойТаблицы[0].ПериодичностьГруппировки) Тогда	
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана периодичность группировки периодов'"),,"НастройкиПериодовСводнойТаблицы[0].ПериодичностьГруппировки");		
		Возврат;	
	КонецЕсли;

	ПрименитьИзмененияСервер();
	
	Закрыть(Новый Структура("Изменено,НастройкиПериодовСводнойТаблицыАдрес",Истина,НастройкиПериодовСводнойТаблицыСводнойТаблицыАдрес));
			
КонецПроцедуры

&НаСервере
Процедура ПрименитьИзмененияСервер()
					
	тНастройкиПериодовСводнойТаблицы = НастройкиПериодовСводнойТаблицы.Выгрузить();
	
	НастройкиПериодовСводнойТаблицыСводнойТаблицыАдрес = ПоместитьВоВременноеХранилище(тНастройкиПериодовСводнойТаблицы, Новый УникальныйИдентификатор);
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.УправлениеПериодом.Количество()>0 Тогда 
		УправлениеОтчетнымПериодом 				 	 = Параметры.УправлениеПериодом[0].Значение;	
	КонецЕсли;

	
	ИспользоватьДинамическийГоризонт             = Параметры.ИспользоватьДинамическийГоризонт;
	
	НастройкиПериодовСводнойТаблицы.Загрузить(ПолучитьИзВременногоХранилища(Параметры.НастройкиПериодовСводнойТаблицыАдрес));
		
	Периодичность = НастройкиПериодовСводнойТаблицы[0].Периодичность;
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	УстановитьПараметрыПериодовДляГруппировки();
	
	Если ИспользоватьДинамическийГоризонт Тогда 
		ОбновитьТекущийГоризонт();
		Организации.ЗагрузитьЗначения(Параметры.Организации.ВыгрузитьЗначения());
	КонецЕсли;
	
	Элементы.Периодичность.ТолькоПросмотр = Параметры.ЗаблокироватьПериодичность;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСледующийПериод(Команда)
	
	ВыполнитьАктуализацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАктуализацию()
	
	СтруктураПараметров = ПодготовитьПараметрыАктуализацииБюджетов();
		
	ОткрытьФорму("Обработка.УправлениеПериодомСценарияВГрафическомВиде.Форма.ФормаАктуализацииБюджетов",СтруктураПараметров,,,,,);
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыАктуализацииБюджетов()
	
	ОрганизацииДляАктуализации = Новый ТаблицаЗначений;
    ОрганизацииДляАктуализации.Колонки.Добавить("Организация");	
	ОрганизацииДляАктуализации.Колонки.Добавить("ПериодФакт");
	ОрганизацииДляАктуализации.Колонки.Добавить("ПериодПлан");
	ОрганизацииДляАктуализации.Колонки.Добавить("ПризнакИспользования");
	
	Для Каждого стрОрганизация Из Организации Цикл;	
		нСтр = ОрганизацииДляАктуализации.Добавить();
		нСтр.Организация 			= стрОрганизация.Значение;
		нСтр.ПериодФакт 			= ГраницаАктуализации;
		нСтр.ПериодПлан 			= ПериодСценарияОкончание;
		нСтр.ПризнакИспользования 	= Истина;
	КонецЦикла;
	
	ОрганизацииДляАктуализацииАдрес = ПоместитьВоВременноеХранилище(ОрганизацииДляАктуализации,ЭтаФорма.УникальныйИдентификатор);
	
	СтруктураПолей = Новый Структура;	
	СтруктураПолей.Вставить("ПериодОкончания", ПериодСценарияОкончание);
	СтруктураПолей.Вставить("ОрганизацииДляАктуализацииАдрес",ОрганизацииДляАктуализацииАдрес);
	СтруктураПолей.Вставить("Сценарий",Сценарий);
	СтруктураПолей.Вставить("ТекущийДокументУправленияПериодом",УправлениеОтчетнымПериодом);
	СтруктураПолей.Вставить("ГраницаАктуализации",УправлениеОтчетнымПериодом.ГраницаАктуализации);
	
	ДоступныеПериоды = Новый СписокЗначений;
	
	ДоступныеПериоды.ЗагрузитьЗначения(ПериодыУХ.ПолучитьПодчиненныеПериоды(ГраницаАктуализации,ГраницаАктуализации));
	СтруктураПолей.Вставить("ДоступныеПериоды",ДоступныеПериоды);
	СтруктураПолей.Вставить("ВыбранныеПериоды",ДоступныеПериоды.ВыгрузитьЗначения());
    СтруктураПолей.Вставить("ПериодАктуализацииДанныхНовыйПо",ГраницаАктуализации);
	
	Возврат СтруктураПолей;
	
КонецФункции

&НаСервере
Процедура ОткрытиеСледующегоПериодаСервер() 

	УОПОбъект = УправлениеОтчетнымПериодом.ПолучитьОбъект();
	УОПОбъект.ОткрытьСледующийПериод();
	ОбновитьТекущийГоризонт();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизитыУОП()
	
	
	ТаблицыИнтерфейса = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	
	НастройкиСкользящегоПланирования  = Новый Структура;
	НастройкиСкользящегоПланирования.Вставить("ИспользоватьГруппировкуПериодовСреднесрочную",ИспользоватьГруппировкуПериодовСреднесрочную);
	НастройкиСкользящегоПланирования.Вставить("ГраницаСреднесрочнойГруппировки",ГраницаСреднесрочнойГруппировки);
    НастройкиСкользящегоПланирования.Вставить("ПериодичностьСреднесрочнойГруппировки",ПериодичностьСреднесрочнойГруппировки);
	НастройкиСкользящегоПланирования.Вставить("ГраницаАктуализации",ГраницаАктуализации);
	НастройкиСкользящегоПланирования.Вставить("Периодичность",УправлениеОтчетнымПериодом.ТекущаяПериодичность);

	ТаблицыИнтерфейса.Вставить("НастройкиСкользящегоПланирования",НастройкиСкользящегоПланирования);	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытиеПредыдущегоПериода(Команда)
	
	Элементы.ВариантРасположенияОтборов1.Пометка = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОткрытиеПредыдущегоПериодаСервер() 

	УОПОбъект = УправлениеОтчетнымПериодом.ПолучитьОбъект();
	УОПОбъект.ОткрытьПредыдущийПериод();
	ОбновитьТекущийГоризонт();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьГруппировкуПериодовСреднесрочнуюПриИзменении(Элемент)
	
	Элементы.НастройкиГруппировкиПериодовСреднесрочной.Доступность = НастройкиПериодовСводнойТаблицы[0].ИспользоватьГруппировкуПериодов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИспользоватьГруппировкуПериодовСреднесрочнуюПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыПериодовДляГруппировки()
	
	Элементы.СреднесрочныйПериод.Доступность = Истина;
    
	Если Периодичность = Перечисления.Периодичность.День Тогда
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'дня'");
		
		ДоступныеПериоды = Новый Массив;
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Неделя);
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Декада);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Месяц);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Квартал);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры;			
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда	
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'недели'");
		 
		ДоступныеПериоды = Новый Массив;
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Декада);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Месяц);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Квартал);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры;
		 	 
	ИначеЕсли Периодичность = Перечисления.Периодичность.Декада Тогда
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'декады'");
		 
		ДоступныеПериоды = Новый Массив;
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Месяц);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Квартал);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры;

		 
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'месяца'");
		 
		ДоступныеПериоды = Новый Массив;
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Квартал);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
        ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры;
		 
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда	
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'квартала'");
		
		ДоступныеПериоды = Новый Массив;
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Полугодие);
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры;
		
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда	
		
		Элементы.ДекорацияПредставлениеПериода.Заголовок = Нстр("ru = 'полугодия'");
		 
		ДоступныеПериоды = Новый Массив;
		ДоступныеПериоды.Добавить(Перечисления.Периодичность.Год);
		
		МассивЗнченийПараметров  = Новый ФиксированныйМассив(ДоступныеПериоды);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", МассивЗнченийПараметров);	
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ПериодичностьСреднесрочнойГруппировки.ПараметрыВыбора 	= НовыеПараметры; 
		 
	Иначе	
		
		Элементы.СреднесрочныйПериод.Доступность = Ложь;
		Элементы.ДекорацияПредставлениеПериода.Заголовок = "";
		НастройкиПериодовСводнойТаблицы[0].ИспользоватьГруппировкуПериодов = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры	


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьДанныеПослеАктуализации" Тогда
		ОткрытиеСледующегоПериодаСервер(); 
		ОбновитьТекущийГоризонт();
		Оповестить("ОбновитьТаблицу");
	КонецЕсли;	

	Если ИмяСобытия = "ОбновитьПанельПериодов" Тогда
		 ОбновитьТекущийГоризонт();
		 Оповестить("ОбновитьТаблицу");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ОбновитьТекущийГоризонт()
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма,УправлениеОтчетнымПериодом);
	
	Если Не ЗначениеЗаполнено(ГраницаАктуализации) Тогда
		ГраницаАктуализации = УправлениеОтчетнымПериодом.ПериодСценария; 
	Иначе	 
		ГраницаАктуализации = УправлениеОтчетамиУХ.ПолучитьСледующийПериод(УправлениеОтчетнымПериодом.ГраницаАктуализации,1);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьУправлениеПериодами(Команда)
	
	ПараметрыФормы = Новый Структура("ДокументУправленияПериодомСценария,Режим", УправлениеОтчетнымПериодом,"Периоды");
	Имя = "Обработка.УправлениеПериодомСценарияВГрафическомВиде.Форма.Форма";
	ОткрытьФорму(Имя, ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	  УстановитьВидимостьДоступностьЭлементовФормы();
	  НастройкиПериодовСводнойТаблицы[0].ПериодичностьГруппировки = ПредопределенноеЗначение("Перечисление.Периодичность.ПустаяСсылка");
	  УстановитьПараметрыПериодовДляГруппировки();
	  	 
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	Периодичность = НастройкиПериодовСводнойТаблицы[0].Периодичность;

	Элементы.УправлениеДинамическимГоризонтом.Видимость = ИспользоватьДинамическийГоризонт;
	
	Если НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Год Тогда
		
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогГод 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогПолугодие 	= Ложь;
         НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогКвартал 	= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогМесяц 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДекада 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Ложь;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Ложь;
         Элементы.ВыводитьИтогКвартал.Доступность 		= Ложь;
         Элементы.ВыводитьИтогМесяц.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДекада.Доступность 		= Ложь;
         Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	
			 		 	 
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Полугодие Тогда
		 
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогПолугодие 	= Ложь;
         НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогКвартал 	= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогМесяц 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДекада 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Ложь;
         Элементы.ВыводитьИтогКвартал.Доступность 		= Ложь;
         Элементы.ВыводитьИтогМесяц.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДекада.Доступность 		= Ложь;
         Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	 
		 
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Квартал Тогда
		 
         НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогКвартал 	= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогМесяц 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДекада 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Истина;
         Элементы.ВыводитьИтогКвартал.Доступность 		= Ложь;
         Элементы.ВыводитьИтогМесяц.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДекада.Доступность 		= Ложь;
         Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	
		
		 
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Месяц Тогда
		 
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогМесяц 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДекада 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;
		 
		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Истина;
		 Элементы.ВыводитьИтогКвартал.Доступность 		= Истина;
		 Элементы.ВыводитьИтогМесяц.Доступность 		= Ложь;
		 Элементы.ВыводитьИтогДекада.Доступность 		= Ложь;
		 Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
		 Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	 
		 
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Декада Тогда
		 
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДекада 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Истина;
         Элементы.ВыводитьИтогКвартал.Доступность 		= Истина;
         Элементы.ВыводитьИтогМесяц.Доступность 		= Истина;
         Элементы.ВыводитьИтогДекада.Доступность 		= Ложь;
         Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	
		  
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.Неделя Тогда
		 
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогНеделя 		= Ложь;
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Истина;
         Элементы.ВыводитьИтогКвартал.Доступность 		= Истина;
         Элементы.ВыводитьИтогМесяц.Доступность 		= Истина;
         Элементы.ВыводитьИтогДекада.Доступность 		= Истина;
         Элементы.ВыводитьИтогНеделя.Доступность 		= Ложь;
         Элементы.ВыводитьИтогДень.Доступность 			= Ложь;		 
		 
	 ИначеЕсли НастройкиПериодовСводнойТаблицы[0].Периодичность = Перечисления.Периодичность.День Тогда
		 
		 НастройкиПериодовСводнойТаблицы[0].ВыводитьИтогДень 		= Ложь;

		 Элементы.ВыводитьИтогГод.Доступность 			= Истина;
		 Элементы.ВыводитьИтогПолугодие.Доступность 	= Истина;
		 Элементы.ВыводитьИтогКвартал.Доступность 		= Истина;
		 Элементы.ВыводитьИтогМесяц.Доступность 		= Истина;
		 Элементы.ВыводитьИтогДекада.Доступность 		= Истина;
		 Элементы.ВыводитьИтогНеделя.Доступность 		= Истина;
		 Элементы.ВыводитьИтогДень.Доступность 			= Ложь;	
		 
	 КонецЕсли;	 
	 
	 Элементы.НастройкиГруппировкиПериодовСреднесрочной.Доступность = НастройкиПериодовСводнойТаблицы[0].ИспользоватьГруппировкуПериодов;
	 
	 
КонецПроцедуры

&НаКлиенте
Процедура УправлениеПериодичностьюиИтогами(Команда)
	
	Элементы.ВариантРасположенияОтборов1.Пометка = Истина;

КонецПроцедуры



