
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиСоставаСтрокСводнойТаблицыАдрес = Параметры.НастройкиСоставаСтрокСводнойТаблицыАдрес;

	НастройкиСоставаСтрокСводнойТаблицы      = ПолучитьИзВременногоХранилища(НастройкиСоставаСтрокСводнойТаблицыАдрес);
	
	ЗаполнитьОграничениеВыбораПоВидамОтчетов(НастройкиСоставаСтрокСводнойТаблицы);
		
	НастройкиСоставаКолонокСводнойТаблицы.Загрузить(ПолучитьИзВременногоХранилища(Параметры.НастройкиСоставаКолонокСводнойТаблицыАдрес));
	
	Для Каждого Кол Из НастройкиСоставаКолонокСводнойТаблицы Цикл
		
		Если ЗначениеЗаполнено(Кол.ПериодОтчета) Тогда
			
			Кол.ПериодПредставление = Кол.ПериодОтчета;
			
		ИначеЕсли ЗначениеЗаполнено(Кол.ПериодСдвиг) Тогда 	
			
			Кол.ПериодПредставление = Нстр("ru = 'Сдвиг по периоду: '") + Строка(Кол.ПериодСдвиг);
	
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОграничениеВыбораПоВидамОтчетов(НастройкиСоставаСтрокСводнойТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкиСоставаСтрокСводнойТаблицы.СтрокаОтчета КАК СтрокаОтчета
	|ПОМЕСТИТЬ втНастройкиСоставаСтрокСводнойТаблицы
	|ИЗ
	|	&НастройкиСоставаСтрокСводнойТаблицы КАК НастройкиСоставаСтрокСводнойТаблицы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ (втНастройкиСоставаСтрокСводнойТаблицы.СтрокаОтчета КАК Справочник.СтрокиОтчетов).Владелец КАК ВидОтчета
	|ИЗ
	|	втНастройкиСоставаСтрокСводнойТаблицы КАК втНастройкиСоставаСтрокСводнойТаблицы";
	
	Запрос.УстановитьПараметр("НастройкиСоставаСтрокСводнойТаблицы",НастройкиСоставаСтрокСводнойТаблицы);
	
	ВидыОтчетовМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидОтчета");
	ВидыОтчетовСписок.ЗагрузитьЗначения(ВидыОтчетовМассив);
	
	МассивЗнченийПараметров  = Новый ФиксированныйМассив(ВидыОтчетовМассив);
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", МассивЗнченийПараметров);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.НастройкиСоставаКолонокСводнойТаблицыКолонкаОтчета.ПараметрыВыбора = НовыеПараметры;

	  
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСоставаКолонокСводнойТаблицыКолонкаОтчетаПриИзменении(Элемент)
	 
	Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные.ПредставлениеКолонки  = Строка(Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные.КолонкаОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСоставаКолонокСводнойТаблицыПриИзменении(Элемент)
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ТипКолонки) Тогда	
			Элемент.ТекущиеДанные.ПризнакИспользования    = Истина;
			Элемент.ТекущиеДанные.ТипКолонки = ПредопределенноеЗначение("Перечисление.ВидыКолонокСводнойТаблицы.БазовоеЗначение");
		КонецЕсли;		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСоставаКолонокСводнойТаблицыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяПоля = СтрЗаменить(Поле.Имя,"НастройкиСоставаКолонокСводнойТаблицы","");
		
	Если ИмяПоля = "Сценарий" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
				
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение'"));
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение контекста'"));
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
			
	ИначеЕсли ИмяПоля = "ПериодПредставление" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
				
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Сдвиг по периоду источника'"));
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение контекста'"));

		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
			
	ИначеЕсли ИмяПоля = "Организация" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
				
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение'"));
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение контекста'"));
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
		
	ИначеЕсли ИмяПоля = "Проект" Тогда
	
		СтандартнаяОбработка = Ложь;
			
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
				
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение'"));
		СписокДоступныхЗначений.Добавить(Нстр("ru = 'Значение контекста'"));
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборИзМенюОкончание(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяПоля = ДополнительныеПараметры.ИмяПоля;
	ТекущийВыбор = Результат;
	
	Если ИмяПоля = "Сценарий" Тогда
		
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение =Нстр("ru = 'Значение контекста'") Тогда 
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ИмяПоля] = ПредопределенноеЗначение("Справочник.Сценарии.ПустаяСсылка");	
		ИначеЕсли  ТекущийВыбор.Значение =Нстр("ru = 'Значение'") Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Сценарии.ФормаВыбора",,,,,,Оповещение);	
		КонецЕсли;
			
	ИначеЕсли ИмяПоля = "ПериодПредставление" Тогда
			
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
	    ИначеЕсли ТекущийВыбор.Значение =Нстр("ru = 'Значение контекста'") Тогда 
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ИмяПоля] 			= ПредопределенноеЗначение("Справочник.Периоды.ПустаяСсылка");	
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодСдвиг"]	 	= 0;
            Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодОтчета"] 	= ПредопределенноеЗначение("Справочник.Периоды.ПустаяСсылка");
		ИначеЕсли  ТекущийВыбор.Значение =Нстр("ru = 'Значение'") Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Периоды.ФормаВыбора",,,,,,Оповещение);	
		ИначеЕсли ТекущийВыбор.Значение = Нстр("ru = 'Сдвиг по периоду источника'") Тогда 
	        Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			тЧисло     = Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодСдвиг"];	
			ПоказатьВводчисла(Оповещение, тЧисло, НСтр("ru = 'Введите сдвиг по периоду'"), 2, 0);
		КонецЕсли;
		
	ИначеЕсли ИмяПоля = "Организация" Тогда
		
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение =Нстр("ru = 'Значение контекста'") Тогда 
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ИмяПоля] = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");	
		ИначеЕсли  ТекущийВыбор.Значение =Нстр("ru = 'Значение'") Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Организации.ФормаВыбора",,,,,,Оповещение);		
		КонецЕсли;	
		
	ИначеЕсли ИмяПоля = "Проект" Тогда
	
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение =Нстр("ru = 'Значение контекста'") Тогда 
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ИмяПоля] = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");	
		ИначеЕсли  ТекущийВыбор.Значение =Нстр("ru = 'Значение'") Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Проекты.ФормаВыбора",,,,,,Оповещение);	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборАналитикЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущаяКолонкаИмя = СтрЗаменить(Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущийЭлемент.Имя,"НастройкиСоставаКолонокСводнойТаблицы","");
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
		
		Если Результат = 0 Тогда	
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодОтчета"] 		= Результат;
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодСдвиг"]	 		= 0;
			Результат = ПредопределенноеЗначение("Справочник.Периоды.ПустаяСсылка");
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ТекущаяКолонкаИмя] 	= Результат;	
		Иначе	 
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодСдвиг"]	 		= Результат;
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные["ПериодОтчета"]		= ПредопределенноеЗначение("Справочник.Периоды.ПустаяСсылка");
			Результат = Нстр("ru = 'Сдвиг по периоду: '") + Строка(Результат);
			Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ТекущаяКолонкаИмя] 	= Результат;		
		КонецЕсли;	
				
	Иначе	
		
		Элементы.НастройкиСоставаКолонокСводнойТаблицы.ТекущиеДанные[ТекущаяКолонкаИмя] 		= Результат;	
	
	КонецЕсли;	
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	
	ПрименитьИзмененияСервер();
	Закрыть(Новый Структура("Изменено,НастройкиСоставаКолонокСводнойТаблицыАдрес",Истина,НастройкиСоставаКолонокСводнойТаблицыАдрес));
		
КонецПроцедуры

&НаСервере
Процедура ПрименитьИзмененияСервер()
				
	НастройкиСоставаКолонокСводнойТаблицы_ = РеквизитФормыВЗначение("НастройкиСоставаКолонокСводнойТаблицы");
		
	НомерПоПорядку = 1;
		
	Для Каждого Стр Из НастройкиСоставаКолонокСводнойТаблицы_ Цикл				
		Стр.НомерПоПорядку  = НомерПоПорядку;
		НомерПоПорядку      = НомерПоПорядку+1;
	КонецЦикла;	
		
	НастройкиСоставаКолонокСводнойТаблицыАдрес = ПоместитьВоВременноеХранилище(НастройкиСоставаКолонокСводнойТаблицы_,Новый УникальныйИдентификатор);
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьКолонки(Команда)
	
	Если НастройкиСоставаКолонокСводнойТаблицы.Количество()>0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьКолонкиЗавершение",ЭтаФорма);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Текущий список колонок будет перезаполнен, продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе	
		ЗаполнитьКолонкиСервер();
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКолонкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда		
		 ЗаполнитьКолонкиСервер();	
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкиСервер()
	
	НастройкиСоставаКолонокСводнойТаблицы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КолонкиОтчетов.Ссылка КАК Ссылка,
	|	КолонкиОтчетов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.КолонкиОтчетов КАК КолонкиОтчетов
	|ГДЕ
	|	КолонкиОтчетов.Владелец В(&Владелец)
	|	И КолонкиОтчетов.ПометкаУдаления = Ложь
	|
	|УПОРЯДОЧИТЬ ПО
	|	КолонкиОтчетов.Владелец.Код,
	|	КолонкиОтчетов.ПорядковыйНомер";
	
	Запрос.УстановитьПараметр("Владелец",ВидыОтчетовСписок.ВыгрузитьЗначения());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		 нКолонка = НастройкиСоставаКолонокСводнойТаблицы.Добавить();
		 нКолонка.КолонкаОтчета 			= Выборка.Ссылка;
		 нКолонка.ПредставлениеКолонки      = Выборка.Наименование;
		 нКолонка.ПризнакИспользования      = Истина;
		 нКолонка.ТипКолонки                = Перечисления.ВидыКолонокСводнойТаблицы.БазовоеЗначение;
		 
	КонецЦикла;
	
	
КонецПроцедуры	


