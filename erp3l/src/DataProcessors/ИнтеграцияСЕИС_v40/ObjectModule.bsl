#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ПрограммныйИнтерфейс

// Функции которые должна реализовать обработка, чтобы обеспечить интеграцию с ЭТП.

// Возвращает структуру с описанием ЭТП интеграцию с которой осуществляет обработка. Необходима для регистрации ЭТП в справочнике "Электронные торговые площадки".
Функция ОписаниеЭТП() Экспорт
	ПоляОписания = ИнтеграцияЦУЗсЭТПСерверУХ.ШаблонОписанияЭТП();
	ПоляОписания.ИмяОбработки = "ИнтеграцияСЕИС_v40"; // Имя обработки
	ПоляОписания.Наименование = "new.zakupky.gov.ru"; // Имя отображаемое пользователю в качестве имени ЭТП.
	ПоляОписания.АдресВебСервиса = "https://int223.zakupki.gov.ru/223/integration/integration/upload"; // Адрес сервера
	ПоляОписания.АдресЛичногоКабинета = ""; // Пользователь входит через браузер
	ПоляОписания.ЕстьАвторизация = Истина; // Передавать имя и пароль при обращении к веб-сервису
	ПоляОписания.ИмяФормыДопНастроек = ""; // Имя формы, вызываемой для ввода дополнительных настроек синхронизации, перед обменом данными.
	ПоляОписания.ВерсияОбработки = 3.0; // Версия обработки
	ПоляОписания.ОбменНаСервере = Ложь; // Обмен на стороне клиента
	
	Возврат ПоляОписания;
КонецФункции

// Возвращает фабрику XDTO заполненную актуальными схемами ЕИС
Функция ПолучитьФабрикуXDTO() Экспорт
	
	НовыйНаборСхемXML = Новый НаборСхемXML;
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("Types"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("purchase"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("purchasePlanProject"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("purchasePlan"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("reference"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("orderClause"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("webRequest"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("contract"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("purchasePlanAdditionalPosition"));
	НовыйНаборСхемXML.Добавить(ПолучитьСхемуXML("purchasePlanUpdatePosition"));
	
	НоваяФабрикаXDTO = Новый ФабрикаXDTO(НовыйНаборСхемXML);
	
	Возврат НоваяФабрикаXDTO;
КонецФункции


#КонецОбласти


#Область ВспомогательныеФункции


Функция ПолучитьСхемуXML(ИмяСхемы)
	ТекстСтруктуры = ПолучитьМакет(ИмяСхемы);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстСтруктуры.ПолучитьТекст());
	
	НовыйПостроительDOM = Новый ПостроительDOM;
	НовыйДокументDOM = НовыйПостроительDOM.Прочитать(ЧтениеXML);

	НовыйПостроительСхемыXML = Новый ПостроительСхемXML;
	Возврат НовыйПостроительСхемыXML.СоздатьСхемуXML(НовыйДокументDOM);
КонецФункции

// Возвращает список команд обмена требующих обязательного заполнения
// рексизита Организация.
//
Функция КомандыТребующиеОрганизацию() Экспорт
	мРезультат = Новый Массив;
	мРезультат.Добавить("ОтправитьПроцедуруЗакупкиНаЭТП");
	мРезультат.Добавить("ПолучитьПротоколВыбораПоставщиков");
	мРезультат.Добавить("ПолучитьСтатусОбъектаНаЭТП");
	мРезультат.Добавить("ОтменитьЗакупку");
	мРезультат.Добавить("ОтправитьПроектПланаЗакупки");
	мРезультат.Добавить("ОтправитьПланЗакупки");
	мРезультат.Добавить("ОтправитьПротоколВыбораПобедителей");
	мРезультат.Добавить("ОтправитьПротоколВскрытияКонвертов");
	мРезультат.Добавить("ОтправитьПротоколРассмотренияЗаявок");
	мРезультат.Добавить("ОтправитьДоговорНаЭТП");
	мРезультат.Добавить("ОтправитьИсполнениеДоговора");
	мРезультат.Добавить("ОтправитьОбъемЗакупокУМCП");
	мРезультат.Добавить("ОтправитьОтчетОЗаключенныхДоговорах");
	Возврат мРезультат;
КонецФункции

#КонецОбласти


#КонецЕсли