
Перем СтруктураДополнительныхРеквизитов Экспорт;
Перем МассивФайлов Экспорт;

Процедура ЗагрузитьЭкземплярыОтчетов() Экспорт
	
	Попытка
		
		МассивФайлов = Новый Массив;
		
		Если НЕ ЗначениеЗаполнено(ПутьКФайлам) Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не заполнен путь к %1'"), 
				?(ИмпортИзФайла, "файлу.", "файлам.")),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
				
		ОбработанныеЭкземплярыОтчетов.Очистить();
		
		Если ИмпортИзФайла Тогда
			МассивФайлов=НайтиФайлы(ПутьКФайлам);
		Иначе		
			МассивФайлов=НайтиФайлы(ПутьКФайлам,"*.xl*",ИскатьВПодкаталогах);
		КонецЕсли;
	
		Если МассивФайлов.Количество()=0 Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не найдены файлы %1'"), ПутьКФайлам),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
			
		КонецЕсли;
		
		Файл = Неопределено;
		ТаблицаФайлов = ПолучитьТаблицуФайловЭО(МассивФайлов, Файл);
		
		ТаблицаКонтекстов=ТаблицаФайлов.Скопировать();
		ТаблицаКонтекстов.Свернуть("Сценарий,ПериодОтчета,Организация");
		ТаблицаКонтекстов.Колонки.Добавить("ДокументУправленияПериодом");
		ТаблицаКонтекстов.Колонки.Добавить("ВерсияОрганизационнойСтруктуры");
		ТаблицаКонтекстов.Колонки.Добавить("ДатаНачалаПроцесса");
		ТаблицаКонтекстов.Колонки.Добавить("ТаблицаВыверки");
		ТаблицаКонтекстов.Колонки.Добавить("ТаблицаВалютОтчетности");
		
		Для Каждого Строка ИЗ ТаблицаКонтекстов Цикл
			
			КонтекстПроцесса = УправлениеРабочимиПроцессамиУХ.ПолучитьКонтекстУправленияПериодомСценария(Строка.Сценарий, Строка.ПериодОтчета);
			
			Если КонтекстПроцесса <> Неопределено Тогда
				
				ЕстьОшибки=Ложь;
				
				ШапкаОшибки=СтрШаблон(Нстр("ru = 'Невозможно загрузить данные по организации %1, периоду %2, сценарию %3'"), 
					Строка.Организация, Строка.ПериодОтчета, Строка.Сценарий);
				
				Если НЕ ПолныеПраваУХ.ПроверитьВозможностьЗаписиДокументовПоПериодуСценария(Строка.Сценарий, Строка.ПериодОтчета,Строка.Организация,ЕстьОшибки,ШапкаОшибки) Тогда
					
					МассивСтрок=ТаблицаФайлов.НайтиСтроки(Новый Структура("Сценарий,ПериодОтчета,Организация",Строка.Сценарий,Строка.ПериодОтчета,Строка.Организация));
					
					Для Каждого СтрокаКУдалению ИЗ МассивСтрок Цикл
						
						ТаблицаФайлов.Удалить(СтрокаКУдалению);
						
					КонецЦикла;
					
				Иначе
					
					Строка.ДокументУправленияПериодом		= КонтекстПроцесса.Ссылка;
					Строка.ВерсияОрганизационнойСтруктуры	= КонтекстПроцесса.ВерсияОрганизационнойСтруктуры;
					Строка.ДатаНачалаПроцесса				= КонтекстПроцесса.ДатаНачалаПроцесса;
					
					Строка.ТаблицаВыверки = УправлениеОтчетамиУХ.ПолучитьТаблицуПолномочий(Строка.ПериодОтчета, Строка.Сценарий, Строка.ВерсияОрганизационнойСтруктуры,,, Строка.Организация,,,, ЕстьОшибки);
					Строка.ТаблицаВалютОтчетности = РегистрыСведений.ВалютыОтчетности.ПолучитьТаблицуВалютДляВерсииОрганизационнойСтруктуры(Строка.ВерсияОрганизационнойСтруктуры);
					
				КонецЕсли;
				
			Иначе
				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не открыт период подготовки отчетности для сценария %1 и периода %2.'"), 
					Строка.Сценарий, Строка.ПериодОтчета),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
				
				МассивСтрок=ТаблицаФайлов.НайтиСтроки(Новый Структура("Сценарий,ПериодОтчета",Строка.Сценарий,Строка.ПериодОтчета));
				
				Для Каждого СтрокаКУдалению ИЗ МассивСтрок Цикл
					
					ТаблицаФайлов.Удалить(СтрокаКУдалению);
					
				КонецЦикла;
								
			КонецЕсли;
			
		КонецЦикла;
		
		ExcelApplication = Неопределено;
						
		// Импорт экземпляров отчета
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ * Поместить ТаблицаФайлов ИЗ &ТаблицаФайлов КАК ТаблицаФайлов
		|;
		|ВЫБРАТЬ
		|		ТаблицаФайлов.ВидОтчета КАК ВидОтчета,
		|		ТаблицаФайлов.Организация КАК Организация,
		|		ТаблицаФайлов.Сценарий КАК Сценарий,
		|		ТаблицаФайлов.ПериодОтчета КАК ПериодОтчета,
		|		ТаблицаФайлов.Проект КАК Проект,
		|		ТаблицаФайлов.РежимКорректировки КАК РежимКорректировки,
		|		ПравилаОбработки.Ссылка КАК ПравилоОбработки,
		|		ПравилаОбработки.ТипБД КАК ТипБД,
		|		ПравилаОбработки.ТипБД.ВерсияПлатформы КАК ВерсияПлатформы,
		|		ПравилаОбработки.ТипБД.ВИБПоУмолчанию КАК ВИБПоУмолчанию,
		|		ТаблицаФайлов.Имя КАК ИмяФайла,
		|		ТаблицаФайлов.ПолноеИмя КАК ПолноеИмяФайла,
		|		ТаблицаФайлов.ИмяБезРасширения КАК ИмяБезРасширения,
		|		ТаблицаФайлов.ДатаИзмененияФайла КАК ДатаИзмененияФайла,
		|		ТаблицаФайлов.РазмерФайла КАК РазмерФайла,
		|		НастраиваемыйОтчет.Ссылка КАК ЭкземплярОтчета
		|	ИЗ  ТаблицаФайлов КАК ТаблицаФайлов
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаОбработки КАК ПравилаОбработки
		|			ПО ТаблицаФайлов.ВидОтчета = ПравилаОбработки.Владелец
		|				И (ПравилаОбработки.ТипБД = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ОбменТаблДок)
		|					ИЛИ ПравилаОбработки.ТипБД.ВерсияПлатформы = ЗНАЧЕНИЕ(Перечисление.ПлатформыВнешнихИнформационныхБаз.ADO))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
		|			ПО ТаблицаФайлов.ВидОтчета = НастраиваемыйОтчет.ВидОтчета
		|			И ТаблицаФайлов.Организация = НастраиваемыйОтчет.Организация
		|			И ТаблицаФайлов.ПериодОтчета = НастраиваемыйОтчет.ПериодОтчета
		|			И ТаблицаФайлов.Сценарий = НастраиваемыйОтчет.Сценарий
		|			И ТаблицаФайлов.Проект = НастраиваемыйОтчет.Проект
		|
		|УПОРЯДОЧИТЬ ПО
		|ТаблицаФайлов.РежимКорректировки Возр";
		
		Запрос.УстановитьПараметр("ТаблицаФайлов",	ТаблицаФайлов);
				
		Результат=Запрос.Выполнить().Выбрать();
		
		Пока Результат.Следующий() Цикл
			
			ПротоколируемыеСобытияУХ.Начать();
			
			СтрокаКонтекст=ТаблицаКонтекстов.НайтиСтроки(Новый Структура("Организация,ПериодОтчета,Сценарий",Результат.Организация,Результат.ПериодОтчета,Результат.Сценарий))[0];
			
			Если ЗначениеЗаполнено(Результат.ЭкземплярОтчета) Тогда // Обновляем существующий экземпляр отчета
				
				СтруктураФайла=Новый Структура("ИмяФайла,ДатаИзмененияФайла,РазмерФайла");
				ЗаполнитьЗначенияСвойств(СтруктураФайла,Результат);
				
				ИмпортированнаяВерсия=ХранимыеФайлыУХ.ПолучитьИмпортированнуюВерсию(СтруктураФайла,Результат.ЭкземплярОтчета);
				
				Если НЕ (ВыполнятьПовторныйИмпорт ИЛИ ИмпортированнаяВерсия=Неопределено) Тогда
					
					ТекстОшибки=СтрШаблон(Нстр("ru = 'Отменен повторный импорт файла %1 с датой изменения %2 и размером %3
					| в экземпляр отчета %4 Файл уже был импортирован ранее'"), Результат.ИмяФайла, 
					Файл.ПолучитьВремяИзменения(), Файл.Размер(), Результат.ЭкземплярОтчета);
					
					ПротоколироватьОшибкуФайла(Результат,ИмпортированнаяВерсия,ТекстОшибки);
					
					Продолжить;
					
				КонецЕсли;
				
				// Очистим информацию о протоколах, связанных с данным экземпляром отчета
				
				Если НЕ ИмпортированнаяВерсия=Неопределено Тогда
					ПротоколируемыеСобытияУХ.ЗаписатьПротоколВРегистр(Результат.ЭкземплярОтчета,ИмпортированнаяВерсия);
				КонецЕсли;
				
				ОтчетОбъект=Результат.ЭкземплярОтчета.ПолучитьОбъект();
				
			Иначе
								
				ОтчетОбъект = Документы.НастраиваемыйОтчет.СоздатьДокумент();
				ОтчетОбъект.Дата = ?(ЗначениеЗаполнено(СтрокаКонтекст.ДатаНачалаПроцесса),СтрокаКонтекст.ДатаНачалаПроцесса,ТекущаяДата());
				ОтчетОбъект.УстановитьНовыйНомер();
				
				ДанныеПериода=Документы.НастраиваемыйОтчет.ПолучитьДанныеПериода(Результат.Сценарий,Результат.ПериодОтчета,Результат.Организация);
				
				ОтчетОбъект.Сценарий                 	= Результат.Сценарий;
				ОтчетОбъект.ПериодОтчета             	= Результат.ПериодОтчета;
				ОтчетОбъект.ВидОтчета                	= Результат.ВидОтчета;
				ОтчетОбъект.Организация              	= Результат.Организация;
				ОтчетОбъект.Проект              		= Результат.Проект;
				
				ЗаполнитьЗначенияСвойств(ОтчетОбъект,ДанныеПериода);
				
				Если ЗначениеЗаполнено(ОтчетОбъект.ШаблонОтчета) Тогда
					
					ОтчетОбъект.ЕдиницаИзмерения     = ОтчетОбъект.ШаблонОтчета.ЕдиницаИзмеренияПоУмолчанию;
					ОтчетОбъект.УровеньТочности      = ОтчетОбъект.ШаблонОтчета.УровеньТочностиПоУмолчанию;
					
				КонецЕсли;
				
				СтруктураОтчета = Новый Структура("Ссылка, Сценарий, Организация,Проект,ПериодОтчета,ПериодОкончания,УправлениеПериодом,ВидОтчета,Состояние");
				
				Для Инд = 1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
					СтруктураОтчета.Вставить("Аналитика" + Инд);
				КонецЦикла;
				
				ЗаполнитьЗначенияСвойств(СтруктураОтчета, ОтчетОбъект);
				
				Если ПолныеПраваУХ.ПроверитьНаличиеДокументовСРеквизитамиТекущего(СтруктураОтчета) Тогда
					ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Загрузка файла.'"));
					Продолжить;
				КонецЕсли;	
				
			КонецЕсли;
						
			МассивРеквизитов=СтрокаКонтекст.ТаблицаВыверки.НайтиСтроки(Новый Структура("ВидОтчета, Организация", Результат.ВидОтчета, Результат.Организация));
			
			Если МассивРеквизитов.Количество()=0 Тогда
				
				ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не найдены настройки заполнения отчетов по умолчанию для вида отчета %1 по организации %2'"), 
					Результат.ВидОтчета, Результат.Организация),,,СтатусСообщения.Важное);
				ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Загрузка файла.'"));
				Продолжить;
				
			Иначе
				
				Реквизиты=МассивРеквизитов[0];
				
				Если ЗначениеЗаполнено(Реквизиты.ПравилоОбработки) Тогда
					
					Если НЕ Реквизиты.ПравилоОбработки.Владелец=Результат.ВидОтчета Тогда
						
						Реквизиты.ПравилоОбработки=Неопределено;
						
					ИначеЕсли НЕ Реквизиты.ПравилоОбработки=Результат.ПравилоОбработки Тогда
						
						ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Правило, указанное в настройках по умолчанию для вида отчета %1 по организации %2 не используется для импорта из файлов.'"), 
							Результат.ВидОтчета, Результат.Организация),,,СтатусСообщения.Внимание);
						ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Загрузка файла.'"));
						Продолжить;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;	
			
			ОтчетОбъект.ПравилоОбработки         	= ?(ЗначениеЗаполнено(Реквизиты.ПравилоОбработки),Реквизиты.ПравилоОбработки,Результат.ПравилоОбработки);
			ОтчетОбъект.ПравилоПроверки				= Реквизиты.ПравилоПроверки;
			ОтчетОбъект.СпособФормированияОтчета	= Перечисления.СпособыФормированияОтчетов.АвтоматическиПоПравилуОбработки;
			ОтчетОбъект.БланкИмпорта             	= Реквизиты.БланкДляИмпорта;
			
			Если ЗначениеЗаполнено(Реквизиты.ВнешняяИнформационнаяБаза) И Реквизиты.ВнешняяИнформационнаяБаза.ТипБД=Результат.ТипБД Тогда
				
				ОтчетОбъект.ИспользуемаяИБ=Реквизиты.ВнешняяИнформационнаяБаза;
				
			Иначе
				
				ОтчетОбъект.ИспользуемаяИБ=Результат.ВИБПоУмолчанию;
				
			КонецЕсли;

			ОтчетОбъект.ШаблонОтчета             	= Реквизиты.БланкДляОтображения;
			
			// Основные настройки валюты из регламента.
			СтрокиВалюты = СтрокаКонтекст.ТаблицаВалютОтчетности.НайтиСтроки(Новый Структура("Организация",Результат.Организация));
			
			ОтчетОбъект.ДополнительныеВалюты.Очистить();
			
			Если СтрокиВалюты.Количество() Тогда
				ОтчетОбъект.ОсновнаяВалюта = СтрокиВалюты[0].ОсновнаяВалюта;
				Для Каждого Элемент Из СтрокиВалюты[0].ДополнительныеВалюты Цикл
					ОтчетОбъект.ДополнительныеВалюты.Добавить().Валюта = Элемент.Значение;
				КонецЦикла;
			КонецЕсли;
						
			ТипБД=ОтчетОбъект.ИспользуемаяИБ.ТипБД;
			
			ОтчетОбъект.РежимКорректировки=Результат.РежимКорректировки;
			
			Если ТипБД=Справочники.ТипыБазДанных.ОбменТаблДок Тогда
				
				СпособЗаполнения=Перечисления.СпособыФормированияОтчетов.Импорт;
				
				СтруктураОбъекта=Новый Структура;
				СтруктураОбъекта.Вставить("Организация",ОтчетОбъект.Организация);
				СтруктураОбъекта.Вставить("Сценарий",ОтчетОбъект.Сценарий);
				СтруктураОбъекта.Вставить("ПериодСценария",ОтчетОбъект.ПериодОтчета);
		
				ОтчетОбъект.ВерсияХранимогоФайла 	= ХранимыеФайлыУХ.ДобавитьХранимыйФайлИлиВерсию(Результат.ПолноеИмяФайла,СтруктураОбъекта,,ОтчетОбъект.ФайлИмпорта);
				
				Если ОтчетОбъект.ВерсияХранимогоФайла = Неопределено Тогда // Не удалось получить элемент справочника "Хранимые файлы организаций" по заданным параметрам.
					
					ПротоколироватьОшибкуФайла(Результат,Результат.ПолноеИмяФайла,Нстр("ru = 'Системная ошибка. Подробности в полном протоколе'"),Истина,Нстр("ru = 'Не удалось поместить файл во временное хранилище. Возможно, он открыт другим пользователем.'"));
					Продолжить;
					
				КонецЕсли;
				
				ИмяФайла = ПолучитьИмяВременногоФайла(ОтчетОбъект.ФайлИмпорта.РасширениеФайла)+"\"+ОтчетОбъект.ФайлИмпорта.Наименование;
				
				Если ХранимыеФайлыУХ.ПолучитьХранимыйФайл(ОтчетОбъект.ФайлИмпорта, ИмяФайла)=Неопределено Тогда
					
					ПротоколироватьОшибкуФайла(Результат,Результат.ПолноеИмяФайла,Нстр("ru = 'Системная ошибка. Подробности в полном протоколе'"),Истина,Нстр("ru = 'Не удалось поместить файл во временное хранилище. Возможно, он открыт другим пользователем.'"));
					
					Продолжить;
					
				КонецЕсли;			
				
				ОтчетОбъект.ИмяЛиста      	= ОтчетОбъект.БланкИмпорта.ИмяЛиста;
				ОтчетОбъект.ДатаИзменения	= ТекущаяДата();
				
			Иначе
				
				ОтчетОбъект.ПутьКФайлуADO=Результат.ПолноеИмяФайла;
				СпособЗаполнения=Перечисления.СпособыФормированияОтчетов.АвтоматическиПоПравилуОбработки;
				
			КонецЕсли;
			
			ДополнительныеСвойстваИмпорта = Новый Структура("ПропускатьОшибкиОтсутствияТаблиц", Истина);
			ОтчетОбъект.ДополнительныеСвойства.Вставить("ДополнительныеСвойстваИмпорта", ДополнительныеСвойстваИмпорта);
			
			Если ОтчетОбъект.ЗаполнитьОтчет(СпособЗаполнения) Тогда
				
				Если НЕ ОтчетОбъект.Состояние=Перечисления.СостоянияОтчетов.Утвержден
					ИЛИ ОтчетОбъект.Состояние=Перечисления.СостоянияОтчетов.Возвращен Тогда
					
					ОтчетОбъект.Состояние=Перечисления.СостоянияОтчетов.Подготовлен;
					
				КонецЕсли;
				
			Иначе
				
				ОтчетОбъект.Состояние=Перечисления.СостоянияОтчетов.Запланирован;
				
			КонецЕсли;
			
			ЗаписатьЭкземплярОтчета(ОтчетОбъект, Результат);		
			
		КонецЦикла;
		
		ОбработанныеЭкземплярыОтчетов.Сортировать("ИмяФайлаБезРасширения, ЭкземплярОтчета");
		ИмпортированныеПакеты.Сортировать("ИмяФайлаБезРасширения");
		
		Если ПереименовыватьФайлыПослеИмпорта Тогда
			
			// Переименуем файлы, по которым были загружены пакеты или созданы экземпляры отчетов
			
			ТекстПрефикс=Формат(ТекущаяДата(),"ДФ=dd_MM_yy");
			
			МассивИмен=Новый Массив;
			
			Для Каждого Строка ИЗ ОбработанныеЭкземплярыОтчетов Цикл
				
				Если ЗначениеЗаполнено(Строка.ЭкземплярОтчета) Тогда
					
					ПереименоватьЗагруженныйФайл(Строка,МассивИмен,ТекстПрефикс);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого Строка ИЗ ИмпортированныеПакеты Цикл
				
				ПереименоватьЗагруженныйФайл(Строка,МассивИмен,ТекстПрефикс);
				
			КонецЦикла;
			
		КонецЕсли;
		
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке),,СтрШаблон(Нстр("ru = 'Общая ошибка импорта: %1'"), ИнформацияОбОшибке.Описание),СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗагрузитьОбъектыБД() Экспорт
	
	Попытка
		
		МассивФайлов = Новый Массив;
		
		Если НЕ ЗначениеЗаполнено(ПутьКФайлам) Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не заполнен путь к %1'"), 
				?(ИмпортИзФайла, "файлу.", "файлам.")),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
				
		ИмпортированныеОбъекты.Очистить();
		
		Если ИмпортИзФайла Тогда
			МассивФайлов=НайтиФайлы(ПутьКФайлам);
		Иначе		
			МассивФайлов=НайтиФайлы(ПутьКФайлам,"*.xl*",ИскатьВПодкаталогах);
		КонецЕсли;
	
		Если МассивФайлов.Количество()=0 Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не найдены файлы %1'"), ПутьКФайлам),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
			
		КонецЕсли;
		
		Файл = Неопределено;
		ТаблицаФайлов = ПолучитьТаблицуФайловОбъектыБД(МассивФайлов, Файл);
				
		ExcelApplication = Неопределено;
						
		// Импорт экземпляров отчета
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ * Поместить ТаблицаФайлов ИЗ &ТаблицаФайлов КАК ТаблицаФайлов
		|;
		|ВЫБРАТЬ
		|		ТаблицаФайлов.ПравилоЗаполнения КАК ПравилоЗаполнения,
		|		ТаблицаФайлов.ПравилоЗаполнения.Владелец КАК ОбъектБД,
		|		ТаблицаФайлов.Организация КАК Организация,
		|		ТаблицаФайлов.Сценарий КАК Сценарий,
		|		ТаблицаФайлов.ПериодОтчета КАК ПериодОтчета,
		|		ТаблицаФайлов.Проект КАК Проект,
		|		ТаблицаФайлов.ПравилоЗаполнения.ТипБД КАК ТипБД,
		|		ТаблицаФайлов.ПравилоЗаполнения.ТипБД.ВерсияПлатформы КАК ВерсияПлатформы,
		|		ТаблицаФайлов.ПравилоЗаполнения.ТипБД.ВИБПоУмолчанию КАК ИспользуемаяИБ,
		|		ТаблицаФайлов.Имя КАК ИмяФайла,
		|		ТаблицаФайлов.ПолноеИмя КАК ПолноеИмяФайла,
		|		ТаблицаФайлов.ИмяБезРасширения КАК ИмяБезРасширения,
		|		ТаблицаФайлов.ДатаИзмененияФайла КАК ДатаИзмененияФайла,
		|		ТаблицаФайлов.РазмерФайла КАК РазмерФайла
		|	ИЗ  ТаблицаФайлов КАК ТаблицаФайлов";
		
		Запрос.УстановитьПараметр("ТаблицаФайлов",	ТаблицаФайлов);
				
		Результат=Запрос.Выполнить().Выбрать();
		
		Пока Результат.Следующий() Цикл
			
			ПротоколируемыеСобытияУХ.Начать();	
			ОбработкаОбъект=Обработки.ГенерацияОбъектовБД.Создать();
			ЗаполнитьЗначенияСвойств(ОбработкаОбъект,Результат);
			ОбработкаОбъект.ПутьКФайлуADO=Результат.ПолноеИмяФайла;
			ОбработкаОбъект.ОбластьГенерации=Перечисления.ОбластиГенерацииОбъектов.ТекущаяИБ;
			ОбработкаОбъект.ОбработатьОбъектыБД();
			
			Для Каждого Строка ИЗ ОбработкаОбъект.ТаблицаОбъектов Цикл
				
				НоваяСтрока=ИмпортированныеОбъекты.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Результат);
				
				НоваяСтрока.ДокументБД=Результат.ОбъектБД;
				НоваяСтрока.ДокументПараллельногоУчета=Строка.ОбработанныйОбъектСсылка;
				НоваяСтрока.ЕстьОшибкиИмпорта=Строка.ЕстьОшибкиИмпорта;
				НоваяСтрока.ОбработкаЗавершена=Строка.ОбработкаЗавершена;
				
			КонецЦикла;
					
		КонецЦикла;
				
		Если ПереименовыватьФайлыПослеИмпорта Тогда
			
			// Переименуем файлы, по которым были загружены пакеты или созданы экземпляры отчетов
			
			ТекстПрефикс=Формат(ТекущаяДата(),"ДФ=dd_MM_yy");
			
			МассивИмен=Новый Массив;
						
			Для Каждого Строка ИЗ ИмпортированныеОбъекты Цикл
				
				ПереименоватьЗагруженныйФайл(Строка,МассивИмен,ТекстПрефикс);
				
			КонецЦикла;
			
		КонецЕсли;
		
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке),,СтрШаблон(Нстр("ru = 'Общая ошибка импорта: %1'"), ИнформацияОбОшибке.Описание),СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗагрузитьПакетыДокументов() Экспорт
	
	Попытка
		
		МассивФайлов = Новый Массив;
		
		Если НЕ ЗначениеЗаполнено(ПутьКФайлам) Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не заполнен путь к %1'"), 
				?(ИмпортИзФайла, "файлу.", "файлам.")),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не указана организация.'"),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
				
		ИмпортированныеПакеты.Очистить();
		
		Если ИмпортИзФайла Тогда
			МассивФайлов=НайтиФайлы(ПутьКФайлам);
		Иначе		
			МассивФайлов=НайтиФайлы(ПутьКФайлам,"*.*");
		КонецЕсли;
		
		Если МассивФайлов.Количество()=0 Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не найдены файлы %1'"), ПутьКФайлам),,Нстр("ru = 'Общая ошибка импорта'"),СтатусСообщения.Важное);
			Возврат;
			
		КонецЕсли;
		
		// Определим набор реквизитов, подставляемых по умолчанию
		
		СтруктураРеквизитов = ПолучитьСтруктуруРеквизитовФайла();	
		СтруктураПоиска = ПолучитьСтруктуруПоискаФайлов();
				
		ExcelApplication = Неопределено;
		
		Файл = Неопределено;
		ТаблицаФайлов = ПолучитьТаблицуФайловДокументы(МассивФайлов, Файл);
		// Импорт документов параллельного учета
		
		Запрос=Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПодготовитьЗапросПакетыПравилИмпорта(Запрос, ТаблицаФайлов);
		Результат=Запрос.Выполнить().Выбрать();
		
		Пока Результат.Следующий() Цикл
			
			МассивДокументов=Новый Массив;
			
			Excel2003 = НРег(Прав(Результат.ПолноеИмяФайла, СтрДлина(".xls"))) = ".xls";
			АдресФайлаВоВременномХранилище = Неопределено;
			
			ПравилаИмпорта = Результат.ПорядокИмпортаТаблиц.Выбрать();
			
			ПротоколируемыеСобытияУХ.Начать();
			
			НачатьТранзакцию();
			
			Попытка
				
				Если АдресФайлаВоВременномХранилище = Неопределено Тогда
					АдресФайлаВоВременномХранилище = РаботаСФайламиУХ.ПоместитьФайлВоВременноеХарнилище(Результат.ПолноеИмяФайла);
					Если АдресФайлаВоВременномХранилище = Неопределено Тогда
						ТекстИсключения = СтрШаблон(Нстр("ru = 'Не удалось открыть файл %1.'"), Результат.ПолноеИмяФайла);
						ВызватьИсключение ТекстИсключения;					
					КонецЕсли;
				КонецЕсли;
				
				УникальныеИдентификаторыПакетаПравилИмпорта = Новый Соответствие;
				
				Пока ПравилаИмпорта.Следующий() Цикл
					
					УникальныйИдентификаторПравилаИмпорта = Неопределено;
					
					ПриемникТабличнаяЧасть = СтрЧислоВхождений(ПравилаИмпорта.ПолноеИмяМетаданных, ".") = 3;
					Если ПриемникТабличнаяЧасть Тогда
						ПолноеИмяМетаданныхСтроки = СтрЗаменить(ПравилаИмпорта.ПолноеИмяМетаданных, ".", Символы.ПС);
						ПолноеИмяОсновнойТаблицыМетаданных = СтрПолучитьСтроку(ПолноеИмяМетаданныхСтроки, 1) + "." + СтрПолучитьСтроку(ПолноеИмяМетаданныхСтроки, 2);
					Иначе
						ПолноеИмяОсновнойТаблицыМетаданных = ПравилаИмпорта.ПолноеИмяМетаданных;
					КонецЕсли;
					
					УникальныйИдентификаторПравилаИмпорта = УникальныеИдентификаторыПакетаПравилИмпорта[ПолноеИмяОсновнойТаблицыМетаданных];
					
					Если УникальныйИдентификаторПравилаИмпорта = Неопределено Тогда
						УникальныйИдентификаторПравилаИмпорта = ПравилаИмпорта.ПравилоИмпортаТаблицы.УникальныйИдентификатор();
						УникальныеИдентификаторыПакетаПравилИмпорта.Вставить(ПолноеИмяОсновнойТаблицыМетаданных, УникальныйИдентификаторПравилаИмпорта);
					КонецЕсли;
					
					СтруктураПоиска.Вставить("УникальныйИдентификаторПравилаИмпорта", УникальныйИдентификаторПравилаИмпорта);
					
					Если ПравилаИмпорта.КонвертироватьЗначенияВТекст Тогда
						
						АдресФайлаВоВременномХранилищеТекст = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище));
						
						Если НЕ ОбработкаФайловMicrosoftExcelКлиентСерверУХ.ПривестиЗначенияКТекстуДляПравилаИмпортаДанных(АдресФайлаВоВременномХранилищеТекст, Excel2003, ПравилаИмпорта.ПравилоИмпортаТаблицы, ПравилаИмпорта.Пароль, ExcelApplication) Тогда
							ТекстИсключения = СтрШаблон(Нстр("ru = 'Приведение данных файла %1 к текстовым значениям не выполнено.'"), 
								Результат.ПолноеИмяФайла);
							ВызватьИсключение ТекстИсключения;
						КонецЕсли;
						
						АдресФайлаДляИмпорта = АдресФайлаВоВременномХранилищеТекст;
						
					Иначе
						
						АдресФайлаДляИмпорта = АдресФайлаВоВременномХранилище;
						
					КонецЕсли;
					
					МассивОбъектов = Обработки.ИмпортОбъектовИзExcel.Загрузить2(АдресФайлаДляИмпорта, ПравилаИмпорта.ПравилоИмпортаТаблицы,, ПроводитьДокументыПослеИмпорта, СтруктураРеквизитов, СтруктураПоиска, Результат.ПолноеИмяФайла);
					
					МассивДокументов=Новый Массив;
					
					Если ПравилаИмпорта.КонвертироватьЗначенияВТекст Тогда
						УдалитьИзВременногоХранилища(АдресФайлаДляИмпорта);
					КонецЕсли;
					
					Если МассивОбъектов = Неопределено Тогда
						ТекстИсключения = СтрШаблон(Нстр("ru = 'Импорт данных из файла %1 по правилу %2 завершился ошибкой.'"), 
							Результат.ПолноеИмяФайла, ПравилаИмпорта.ПравилоИмпортаТаблицы);
						ВызватьИсключение ТекстИсключения;
					КонецЕсли;
					
					// сохраним версию файла в реквизит документа
					Если СтрНайти(ПравилаИмпорта.ПолноеИмяМетаданных, "Документ.") > 0 Тогда
						ПозицияТЧВИмениМетаданных = СтрНайти(ПравилаИмпорта.ПолноеИмяМетаданных, "ТабличнаяЧасть")-2;
						ИмяМетаданныхДокумента = ?(ПозицияТЧВИмениМетаданных>0,Лев(ПравилаИмпорта.ПолноеИмяМетаданных,ПозицияТЧВИмениМетаданных),ПравилаИмпорта.ПолноеИмяМетаданных);
						ДокументМетаданные = Метаданные.НайтиПоПолномуИмени(ИмяМетаданныхДокумента);
						Если ДокументМетаданные.Реквизиты.Найти("ФайлИмпорта") <> Неопределено Тогда
							
							СтруктураОбъекта=Новый Структура;
							СтруктураОбъекта.Вставить("Организация",Организация);
							СтруктураОбъекта.Вставить("Сценарий",Сценарий);
							СтруктураОбъекта.Вставить("ПериодСценария",ПериодОтчета);
							
							ХранимыйФайл = Неопределено;
							ВерсияХранимогоФайла 	= ХранимыеФайлыУХ.ДобавитьХранимыйФайлИлиВерсию(Результат.ПолноеИмяФайла,СтруктураОбъекта,,ХранимыйФайл);
							
							Для каждого ПолученнаяСсылка Из МассивОбъектов Цикл
								
								Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ПолученнаяСсылка)) Тогда
									
									МассивДокументов.Добавить(ПолученнаяСсылка);
									
								КонецЕсли;
								
								Попытка
									Если НЕ ЗначениеЗаполнено(ПолученнаяСсылка) Тогда
										Продолжить;
									КонецЕсли;
									ПолученныйОбъект = ПолученнаяСсылка.ПолучитьОбъект();
									ПолученныйОбъект.ФайлИмпорта = ВерсияХранимогоФайла;
									ПолученныйОбъект.Записать(РежимЗаписиДокумента.Запись);
								Исключение
								КонецПопытки;
							КонецЦикла;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				ЗафиксироватьТранзакцию();
				
				ТекстСобытия = "Обработка.ИмпортОбъектовИзExcel.ЗагрузитьОбъектыИзФайла.1";
				
			Исключение
				
				ОтменитьТранзакцию();
				
				ПротоколируемыеСобытияУХ.ДобавитьЗаписьОшибка("Обработка.ИмпортОбъектовИзExcel.МодульОбъекта.ЗагрузитьОбъектыИзФайла",,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ТекстСобытия = "Обработка.ИмпортОбъектовИзExcel.ЗагрузитьОбъектыИзФайла.2";
				
			КонецПопытки;	
			
			ПротоколОшибок=ПротоколируемыеСобытияУХ.Завершить(ТекстСобытия,,Результат.Ссылка,,,Результат.ПолноеИмяФайла);
			
			ПротоколируемыеСобытияУХ.ЗаписатьПротоколВРегистр(Результат.Ссылка,,ПротоколОшибок,Организация,ПериодОтчета,Сценарий, );		
			
			ЕстьОшибки = ПротоколируемыеСобытияУХ.ЕстьОшибкиПоОбъекту(Результат.Ссылка,Организация,ПериодОтчета,Сценарий);
			
			Если МассивДокументов.Количество()>0 Тогда
				
				Для Каждого Документ ИЗ МассивДокументов Цикл
					
					Если ИмпортированныеПакеты.НайтиСтроки(Новый Структура("ПакетПравилИмпортаТаблиц,ДокументПараллельногоУчета",Результат.Ссылка,Документ)).Количество()=0 Тогда
						
						НоваяСтрока	= ИмпортированныеПакеты.Добавить();
						НоваяСтрока.ПакетПравилИмпортаТаблиц = Результат.Ссылка;
						НоваяСтрока.ДокументПараллельногоУчета=Документ;
						
						НоваяСтрока.ЕстьОшибки= ЕстьОшибки;
						НоваяСтрока.ИмяФайла				= Результат.ИмяФайла;
						НоваяСтрока.ПолноеИмяФайла			= Результат.ПолноеИмяФайла;
						НоваяСтрока.ИмяФайлаБезРасширения	= Результат.ИмяБезРасширения;
						
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли ИмпортированныеПакеты.Найти(Результат.Ссылка,"ПакетПравилИмпортаТаблиц")=Неопределено Тогда
				
				НоваяСтрока	= ИмпортированныеПакеты.Добавить();
				НоваяСтрока.ПакетПравилИмпортаТаблиц = Результат.Ссылка;
				
				НоваяСтрока.ЕстьОшибки				= ЕстьОшибки;
				НоваяСтрока.ИмяФайла				= Результат.ИмяФайла;
				НоваяСтрока.ПолноеИмяФайла			= Результат.ПолноеИмяФайла;
				НоваяСтрока.ИмяФайлаБезРасширения	= Результат.ИмяБезРасширения;
				
			КонецЕсли;
			
			Если ЭтоАдресВременногоХранилища(АдресФайлаВоВременномХранилище) Тогда
				УдалитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке),,СтрШаблон(Нстр("ru = 'Общая ошибка импорта: %1'"), ИнформацияОбОшибке.Описание),СтатусСообщения.Важное);
	КонецПопытки;
	
	
КонецПроцедуры // ЗагрузитьПакетыДокументов()

#Область СлужебныеПроцедурыИФункцииИмпорта

Функция ПроверитьВставитьРеквизит(ИмяФайла,СтруктураРеквизитов,ИмяРеквизита)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]) Тогда
		
		Если СтруктураРеквизитов.Свойство(ИмяРеквизита) И (НЕ СтруктураРеквизитов[ИмяРеквизита]=ЭтотОбъект[ИмяРеквизита]) Тогда
			
			Возврат Ложь;
			
		Иначе
			
			СтруктураРеквизитов.Вставить(ИмяРеквизита,ЭтотОбъект[ИмяРеквизита]);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ (ИмяРеквизита="Проект" ИЛИ СтруктураРеквизитов.Свойство(ИмяРеквизита)) Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Импорт из файла %1: не удалось определить значение реквизита %2.'"), 
			ИмяФайла, ИмяРеквизита),,,СтатусСообщения.Внимание);
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;	
		
	КонецЕсли;
	
КонецФункции // ПроверитьВставитьРеквизит() 

Процедура ЗаписатьЭкземплярОтчета(ОтчетОбъект, Результат)

	флНеЗаписывать = (ОтчетОбъект.ДополнительныеСвойства <> Неопределено) 
		И ОтчетОбъект.ДополнительныеСвойства.Свойство("ДополнительныеСвойстваИмпорта")		
		И ИнтеграцияСВнешнимиСистемамиУХ.ПропуститьОшибкиОтсутствияТаблиц(ОтчетОбъект.ДополнительныеСвойства.ДополнительныеСвойстваИмпорта);
		
	ОтчетЗаписан=Ложь;	
	ОтказЗаписи=Ложь;
	ШапкаОшибки = СтрШаблон(Нстр("ru = 'Документ ""%1"" не может быть %2'"), ОтчетОбъект, 
		?(ОтчетОбъект.ЭтоНовый(), "создан:", "записан:"));
		
	Попытка
		
		Если НЕ флНеЗаписывать Тогда
			
			ОтчетОбъект.ПроверитьПередЗаписью(ОтказЗаписи, ШапкаОшибки);
			
			Если НЕ ОтказЗаписи Тогда
				
				Если ЗаписыватьПоРезультатамЗаполнения Тогда
					Если ОтчетОбъект.ЕстьЗаполненныеЗначения() Тогда
						ОтчетОбъект.Записать();
					ИначеЕсли ЗначениеЗаполнено(Результат.ЭкземплярОтчета) И (НЕ ОтчетОбъект.РежимКорректировки) Тогда
						
						РасширениеПроцессыИСогласованиеУХ.ИзменитьСостояниеСогласованияОбъекта(ОтчетОбъект, Перечисления.СостоянияОтчетов.Запланирован);						
						
						ОтчетОбъект.Записать();
						
					КонецЕсли;	
				Иначе
					ОтчетОбъект.Записать();
				КонецЕсли;
				
			КонецЕсли;
			
			СтрВидОтчета=ПолучитьСтрокуОбработки(Результат.ВидОтчета,Результат.ИмяФайла,ОтчетОбъект.Ссылка);
		
			Если ЗначениеЗаполнено(ОтчетОбъект.Ссылка) Тогда
				
				СтрВидОтчета.ЭкземплярОтчета	= ОтчетОбъект.Ссылка;
				СтрВидОтчета.Состояние			= ОтчетОбъект.Состояние;
				СтрВидОтчета.ЕстьОшибки			= ПротоколируемыеСобытияУХ.ЕстьПротоколыПоОбъекту(ОтчетОбъект.Ссылка,
				ОтчетОбъект.Организация,
				ОтчетОбъект.ПериодОтчета,
				ОтчетОбъект.Сценарий,
				ОтчетОбъект.ВерсияХранимогоФайла);
				
			КонецЕсли;
			
			СтрВидОтчета.ИмяФайла				= Результат.ИмяФайла;
			СтрВидОтчета.ПолноеИмяФайла			= Результат.ПолноеИмяФайла;
			СтрВидОтчета.ВерсияХранимогоФайла	= ОтчетОбъект.ВерсияХранимогоФайла;
			СтрВидОтчета.ИмяФайлаБезРасширения	= Результат.ИмяБезРасширения;
			СтрВидОтчета.ПравилоОбработки		= ОтчетОбъект.ПравилоОбработки;
			
		КонецЕсли;
		
		ПротоколОшибок = ПротоколируемыеСобытияУХ.Завершить(Нстр("ru = 'Загрузка файла.'"),, ?(ЗначениеЗаполнено(ОтчетОбъект.Ссылка), ОтчетОбъект.Ссылка, ОтчетОбъект.ВерсияХранимогоФайла),,, ОтчетОбъект.ВерсияХранимогоФайла);
		ПротоколируемыеСобытияУХ.ЗаписатьПротоколВРегистр(?(ЗначениеЗаполнено(ОтчетОбъект.Ссылка), ОтчетОбъект.Ссылка, ОтчетОбъект.ВерсияХранимогоФайла), 
			ОтчетОбъект.ВерсияХранимогоФайла,
			ПротоколОшибок,
			ОтчетОбъект.Организация,
			ОтчетОбъект.ПериодОтчета,
			ОтчетОбъект.Сценарий,
			ОтчетОбъект.ВидОтчета);
		
		
		
	Исключение
		
		ТекстОшибки=СтрШаблон(Нстр("ru = 'Не удалось записать документ %1'"), ОтчетОбъект);
		ПротоколироватьОшибкуФайла(Результат,ОтчетОбъект.ВерсияХранимогоФайла,ТекстОшибки,Истина,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), ОписаниеОшибки());
		
		Возврат;
		
	КонецПопытки;

КонецПроцедуры

Функция ПолучитьТаблицуФайловЭО(МассивФайлов, Файл = Неопределено)

	ТаблицаФайлов=Новый ТаблицаЗначений;
	ТаблицаФайлов.Колонки.Добавить("ИмяБезРасширения",	ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ПолноеИмя",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("Имя",				ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ДатаИзмененияФайла",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТаблицаФайлов.Колонки.Добавить("РазмерФайла",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(15));
	ТаблицаФайлов.Колонки.Добавить("Организация",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Организации"));
	ТаблицаФайлов.Колонки.Добавить("ПериодОтчета",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Периоды"));
	ТаблицаФайлов.Колонки.Добавить("Сценарий",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Сценарии"));
	ТаблицаФайлов.Колонки.Добавить("Проект",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Проекты"));
	ТаблицаФайлов.Колонки.Добавить("ВидОтчета",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.ВидыОтчетов"));
	ТаблицаФайлов.Колонки.Добавить("РежимКорректировки",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	
	Для Каждого Файл ИЗ МассивФайлов Цикл
		
		Если ПустаяСтрока(Файл.Расширение) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураСтроки=Новый Структура("ИмяБезРасширения,ПолноеИмя,Имя,ДатаИзмененияФайла,РазмерФайла,Организация,ПериодОтчета,Сценарий,Проект");

		СтруктураРеквизитов=ПолучитьКлючевыеРеквизитыПоИмениЭкземпляры(СтрЗаменить(Файл.ПолноеИмя,Файл.Расширение,""));
		
		Если НЕ СтруктураРеквизитов.Свойство("ВидыОтчетов") Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Импорт из файла %1: не удалось определить виды отчетов.'"), 
				Файл.ПолноеИмя),,,СтатусСообщения.Внимание);
			Продолжить;
			
		КонецЕсли;

		Если НЕ (ПроверитьВставитьРеквизит(Файл.ПолноеИмя,СтруктураРеквизитов,"Организация")
				И ПроверитьВставитьРеквизит(Файл.ПолноеИмя,СтруктураРеквизитов,"ПериодОтчета")
				И ПроверитьВставитьРеквизит(Файл.ПолноеИмя,СтруктураРеквизитов,"Сценарий")
				И ПроверитьВставитьРеквизит(Файл.ПолноеИмя,СтруктураРеквизитов,"Проект")) Тогда
				
				Продолжить;
				
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураСтроки,Файл);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки,СтруктураРеквизитов);		
		
		СтруктураСтроки.ДатаИзмененияФайла	= Файл.ПолучитьВремяИзменения();
		СтруктураСтроки.РазмерФайла			= Файл.Размер();
		
		Для Каждого КлючИЗначение ИЗ СтруктураРеквизитов.ВидыОтчетов Цикл 
			
			НоваяСтрока=ТаблицаФайлов.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
			
			НоваяСтрока.ВидОтчета=КлючИЗначение.Ключ;
			НоваяСтрока.РежимКорректировки=КлючИЗначение.Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаФайлов;

КонецФункции

Функция ПолучитьТаблицуФайловОбъектыБД(МассивФайлов, Файл = Неопределено)

	ТаблицаФайлов=Новый ТаблицаЗначений;
	ТаблицаФайлов.Колонки.Добавить("ИмяБезРасширения",	ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ПолноеИмя",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("Имя",				ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ДатаИзмененияФайла",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТаблицаФайлов.Колонки.Добавить("РазмерФайла",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(15));
	ТаблицаФайлов.Колонки.Добавить("Организация",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Организации"));
	ТаблицаФайлов.Колонки.Добавить("ПериодОтчета",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Периоды"));
	ТаблицаФайлов.Колонки.Добавить("Сценарий",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Сценарии"));
	ТаблицаФайлов.Колонки.Добавить("Проект",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Проекты"));
	ТаблицаФайлов.Колонки.Добавить("ПравилоЗаполнения",	ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.ПравилаЗаполненияОбъектовБД"));
	
	Для Каждого Файл ИЗ МассивФайлов Цикл
		
		Если ПустаяСтрока(Файл.Расширение) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураСтроки=Новый Структура("ИмяБезРасширения,ПолноеИмя,Имя,ДатаИзмененияФайла,РазмерФайла,Организация,ПериодОтчета,Сценарий,Проект");

		СтруктураРеквизитов=ПолучитьКлючевыеРеквизитыПоИмениОбъектыБД(СтрЗаменить(Файл.ПолноеИмя,Файл.Расширение,""));
		
		Если НЕ СтруктураРеквизитов.Свойство("ПравилаЗаполненияОбъектов") Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Импорт из файла %1: не удалось определить правила заполнения документов.'"), 
				Файл.ПолноеИмя),,,СтатусСообщения.Внимание);
			Продолжить;
			
		КонецЕсли;

		Если НЕ ПроверитьВставитьРеквизит(Файл.ПолноеИмя,СтруктураРеквизитов,"Организация") Тогда
				
			Продолжить;
				
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураСтроки,Файл);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки,СтруктураРеквизитов);		
		
		СтруктураСтроки.ДатаИзмененияФайла	= Файл.ПолучитьВремяИзменения();
		СтруктураСтроки.РазмерФайла			= Файл.Размер();
		
		Для Каждого КлючИЗначение ИЗ СтруктураРеквизитов.ПравилаЗаполненияОбъектов Цикл 
			
			НоваяСтрока=ТаблицаФайлов.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураСтроки);
			
			НоваяСтрока.ПравилоЗаполнения=КлючИЗначение.Ключ;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаФайлов;

КонецФункции

Функция ПолучитьСтруктуруРеквизитовФайла()

	СтруктураРеквизитов=Новый Структура;
	СтруктураРеквизитов.Вставить("Организация",			Организация);
	СтруктураРеквизитов.Вставить("ПериодОтчета",		ПериодОтчета);
	СтруктураРеквизитов.Вставить("Сценарий",			Сценарий);
	СтруктураРеквизитов.Вставить("ОсновнаяВалюта",		Организация.ФункциональнаяВалюта);
	СтруктураРеквизитов.Вставить("ВидДоговора",			ДоговорыКонтрагентовВстраиваниеУХКлиентСервер.ПолучитьВидДоговораПрочие());
	СтруктураРеквизитов.Вставить("Дата",				КонецДня(ПериодОтчета.ДатаОкончания));
	
	ДанныеДляПроведения=УправлениеОтчетамиУХ.ПолучитьДанныеДляПроведения(Организация);
	
	СтруктураРеквизитов.Вставить("ПланСчетов",			ДанныеДляПроведения.ПланСчетов);
	СтруктураРеквизитов.Вставить("РегистрБухгалтерии",	ДанныеДляПроведения.РегистрБухгалтерии);
	
	Если ТипЗнч(СтруктураДополнительныхРеквизитов)=Тип("Структура") Тогда
		
		Для Каждого Реквизит ИЗ СтруктураДополнительныхРеквизитов Цикл
			
			СтруктураРеквизитов.Вставить(Реквизит.Ключ,Реквизит.Значение);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов; 
	
КонецФункции // ПолучитьСтруктуруРеквизитовФайла()


Функция ПолучитьСтруктуруПоискаФайлов()

	СтруктураПоиска=Новый Соответствие;
	СтруктураПоиска.Вставить("Организация",		Организация);
	СтруктураПоиска.Вставить("Дата",			КонецДня(ПериодОтчета.ДатаОкончания));
	СтруктураПоиска.Вставить("Сценарий",		Сценарий);
	СтруктураПоиска.Вставить("ПериодОтчета",	ПериодОтчета);
	
	Возврат	СтруктураПоиска;

КонецФункции // ПолучитьСтруктуруПоискаФайлов()

Функция ПолучитьТаблицуФайловДокументы(МассивФайлов, Файл = Неопределено)

	ТаблицаФайлов=Новый ТаблицаЗначений;
	ТаблицаФайлов.Колонки.Добавить("ИмяБезРасширения",	ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ПолноеИмя",			ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("Имя",				ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(255));
	ТаблицаФайлов.Колонки.Добавить("ДатаИзмененияФайла",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТаблицаФайлов.Колонки.Добавить("РазмерФайла",		ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(15));
	
	Для Каждого Файл ИЗ МассивФайлов Цикл
		
		Если ПустаяСтрока(Файл.Расширение) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока=ТаблицаФайлов.Добавить();
		НоваяСтрока.ИмяБезРасширения=Файл.ИмяБезРасширения;
		НоваяСтрока.ПолноеИмя=Файл.ПолноеИмя;
		НоваяСтрока.Имя=Файл.Имя;
		НоваяСтрока.ДатаИзмененияФайла=Файл.ПолучитьВремяИзменения();
		НоваяСтрока.РазмерФайла=Файл.Размер();
		
	КонецЦикла;
	
	Возврат ТаблицаФайлов;

КонецФункции // ПолучитьТаблицуФайловДокументы()

Функция ПолучитьКлючевыеРеквизитыПоИмениЭкземпляры(ПолноеИмяФайла)
		
	МассивРеквизитов=Новый Массив;
	
	ТекущийТекст="";
	
	Для Инд=1 ПО СтрДлина(ПолноеИмяФайла) Цикл
		
		ТекСимвол=Сред(ПолноеИмяФайла,Инд,1);
		
		Если ТекСимвол="+" ИЛИ ТекСимвол="\" Тогда
			
			МассивРеквизитов.Добавить(ТекущийТекст);
			ТекущийТекст="";
			
		Иначе
			
			ТекущийТекст=ТекущийТекст+ТекСимвол;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивРеквизитов.Добавить(ТекущийТекст);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИменаФайловИКаталогов.Имя,
	|	ИменаФайловИКаталогов.Объект,
	|	ИменаФайловИКаталогов.ТипОбъекта,
	|	ИменаФайловИКаталогов.РежимКорректировки
	|ПОМЕСТИТЬ ТаблицаРеквизитов
	|ИЗ
	|	РегистрСведений.ИменаФайловИКаталогов КАК ИменаФайловИКаталогов
	|ГДЕ
	|	ИменаФайловИКаталогов.Имя В(&МассивРеквизитов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеквизитов.Имя,
	|	ТаблицаРеквизитов.Объект,
	|	ТаблицаРеквизитов.ТипОбъекта
	|ИЗ
	|	ТаблицаРеквизитов КАК ТаблицаРеквизитов
	|ГДЕ
	|	(ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.ПериодСценария)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Сценарий)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Организация)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Проект))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРеквизитов.Объект,
	|	ТаблицаРеквизитов.Имя,
	|	ТаблицаРеквизитов.РежимКорректировки
	|ИЗ
	|	ТаблицаРеквизитов КАК ТаблицаРеквизитов
	|ГДЕ
	|	ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.ВидОтчета)";
	
	Запрос.УстановитьПараметр("МассивРеквизитов",МассивРеквизитов);
	РезультатЗапроса=Запрос.ВыполнитьПакет();
	
	ЗапросРеквизиты=РезультатЗапроса[1].Выбрать();
	
	СтруктураРеквизиты=Новый Структура;
	
	Пока ЗапросРеквизиты.Следующий() Цикл
		
		Если ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Организация Тогда
			
			СтруктураРеквизиты.Вставить("Организация",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.ПериодСценария Тогда
			
			СтруктураРеквизиты.Вставить("ПериодОтчета",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Сценарий Тогда
			
			СтруктураРеквизиты.Вставить("Сценарий",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Проект Тогда
			
			СтруктураРеквизиты.Вставить("Проект",ЗапросРеквизиты.Объект);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВидыОтчетов=Новый Соответствие;
	ЗапросВидОтчета=РезультатЗапроса[2].Выбрать();
	
	Пока ЗапросВидОтчета.Следующий() Цикл
		
		ВидыОтчетов.Вставить(ЗапросВидОтчета.Объект,ЗапросВидОтчета.РежимКорректировки);
				
	КонецЦикла;
	
	Если ВидыОтчетов.Количество()>0 Тогда
		
		СтруктураРеквизиты.Вставить("ВидыОтчетов",ВидыОтчетов);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизиты;
			
КонецФункции // ПолучитьКлючевыеРеквизитыПоИмени()

Функция ПолучитьКлючевыеРеквизитыПоИмениОбъектыБД(ПолноеИмяФайла)
		
	МассивРеквизитов=Новый Массив;
	
	ТекущийТекст="";
	
	Для Инд=1 ПО СтрДлина(ПолноеИмяФайла) Цикл
		
		ТекСимвол=Сред(ПолноеИмяФайла,Инд,1);
		
		Если ТекСимвол="+" ИЛИ ТекСимвол="\" Тогда
			
			МассивРеквизитов.Добавить(ТекущийТекст);
			ТекущийТекст="";
			
		Иначе
			
			ТекущийТекст=ТекущийТекст+ТекСимвол;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивРеквизитов.Добавить(ТекущийТекст);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИменаФайловИКаталогов.Имя,
	|	ИменаФайловИКаталогов.Объект,
	|	ИменаФайловИКаталогов.ТипОбъекта
	|ПОМЕСТИТЬ ТаблицаРеквизитов
	|ИЗ
	|	РегистрСведений.ИменаФайловИКаталогов КАК ИменаФайловИКаталогов
	|ГДЕ
	|	ИменаФайловИКаталогов.Имя В(&МассивРеквизитов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеквизитов.Имя,
	|	ТаблицаРеквизитов.Объект,
	|	ТаблицаРеквизитов.ТипОбъекта
	|ИЗ
	|	ТаблицаРеквизитов КАК ТаблицаРеквизитов
	|ГДЕ
	|	(ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.ПериодСценария)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Сценарий)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Организация)
	|			ИЛИ ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.Проект))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРеквизитов.Объект,
	|	ТаблицаРеквизитов.Имя
	|ИЗ
	|	ТаблицаРеквизитов КАК ТаблицаРеквизитов
	|ГДЕ
	|	ТаблицаРеквизитов.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектов.ДокументПараллельногоУчета)";
	
	Запрос.УстановитьПараметр("МассивРеквизитов",МассивРеквизитов);
	РезультатЗапроса=Запрос.ВыполнитьПакет();
	
	ЗапросРеквизиты=РезультатЗапроса[1].Выбрать();
	
	СтруктураРеквизиты=Новый Структура;
	
	Пока ЗапросРеквизиты.Следующий() Цикл
		
		Если ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Организация Тогда
			
			СтруктураРеквизиты.Вставить("Организация",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.ПериодСценария Тогда
			
			СтруктураРеквизиты.Вставить("ПериодОтчета",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Сценарий Тогда
			
			СтруктураРеквизиты.Вставить("Сценарий",ЗапросРеквизиты.Объект);
			
		ИначеЕсли ЗапросРеквизиты.ТипОбъекта=Перечисления.ТипыОбъектов.Проект Тогда
			
			СтруктураРеквизиты.Вставить("Проект",ЗапросРеквизиты.Объект);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПравилаЗаполненияОбъектов=Новый Соответствие;
	ЗапросПравилаЗаполнения=РезультатЗапроса[2].Выбрать();
	
	Пока ЗапросПравилаЗаполнения.Следующий() Цикл
		
		ПравилаЗаполненияОбъектов.Вставить(ЗапросПравилаЗаполнения.Объект);
				
	КонецЦикла;
	
	Если ПравилаЗаполненияОбъектов.Количество()>0 Тогда
		
		СтруктураРеквизиты.Вставить("ПравилаЗаполненияОбъектов",ПравилаЗаполненияОбъектов);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизиты;
			
КонецФункции // ПолучитьКлючевыеРеквизитыПоИмени()

Процедура ПодготовитьЗапросПакетыПравилИмпорта(Запрос, ТаблицаФайлов)

	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаФайлов.ИмяБезРасширения,
	|	ТаблицаФайлов.ПолноеИмя,
	|	ТаблицаФайлов.Имя,
	|	ТаблицаФайлов.ДатаИзмененияФайла,
	|	ТаблицаФайлов.РазмерФайла
	|ПОМЕСТИТЬ ТаблицаФайлов
	|ИЗ
	|	&ТаблицаФайлов КАК ТаблицаФайлов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетыПравилИмпортаТаблиц.Ссылка,
	|	ПакетыПравилИмпортаТаблиц.ПорядокИмпортаТаблиц.(
	|		Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ПравилоИмпортаТаблицы,
	|		ЕСТЬNULL(ПакетыПравилИмпортаТаблиц.ПорядокИмпортаТаблиц.ПравилоИмпортаТаблицы.ТаблицаADO.Владелец.ВИБПоУмолчанию.КонвертироватьЗначенияВТекст, ЛОЖЬ) КАК КонвертироватьЗначенияВТекст,
	|		ЕСТЬNULL(ПакетыПравилИмпортаТаблиц.ПорядокИмпортаТаблиц.ПравилоИмпортаТаблицы.ТаблицаADO.Владелец.ВИБПоУмолчанию.КонвертироватьЗначенияВТекст, """") КАК Пароль,
	|		ПравилоИмпортаТаблицы.ПриемникПолноеИмяМетаданных КАК ПолноеИмяМетаданных
	|	) КАК ПорядокИмпортаТаблиц,
	|	ТаблицаФайлов.Имя КАК ИмяФайла,
	|	ТаблицаФайлов.ПолноеИмя КАК ПолноеИмяФайла,
	|	ТаблицаФайлов.ИмяБезРасширения КАК ИмяБезРасширения,
	|	ТаблицаФайлов.ДатаИзмененияФайла КАК ДатаИзмененияФайла,
	|	ТаблицаФайлов.РазмерФайла КАК РазмерФайла,
	|	ИменаФайловИКаталогов.РежимКорректировки
	|ИЗ
	|	Справочник.ПакетыПравилИмпортаТаблиц КАК ПакетыПравилИмпортаТаблиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИменаФайловИКаталогов КАК ИменаФайловИКаталогов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаФайлов КАК ТаблицаФайлов
	|			ПО ИменаФайловИКаталогов.Имя = ТаблицаФайлов.ИмяБезРасширения
	|		ПО ПакетыПравилИмпортаТаблиц.Ссылка = ИменаФайловИКаталогов.Объект
	|			И (ИменаФайловИКаталогов.ТипОбъекта = &ТипОбъекта)";
		
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаФайлов",	ТаблицаФайлов);
	Запрос.УстановитьПараметр("ТипОбъекта",		Перечисления.ТипыОбъектов.ДокументПараллельногоУчета);
	
КонецПроцедуры

Процедура ПротоколироватьОшибкуФайла(ДанныеЗапроса, ДанныеФайла, ТекстОшибки, Ошибка=Ложь, ТехнологическаяИнформация = "", ОписаниеОшибки = "")
	
	СтрВидОтчета=ПолучитьСтрокуОбработки(ДанныеЗапроса.ВидОтчета,ДанныеЗапроса.ИмяФайла,ДанныеЗапроса.ЭкземплярОтчета);
	
	СтрВидОтчета.ПолноеИмяФайла			= ДанныеЗапроса.ПолноеИмяФайла;
	СтрВидОтчета.ИмяФайлаБезРасширения	= ДанныеЗапроса.ИмяБезРасширения;
	СтрВидОтчета.ВерсияХранимогоФайла   = ДанныеФайла;
	СтрВидОтчета.ЭкземплярОтчета        = ДанныеЗапроса.ЭкземплярОтчета;
		
	Если Ошибка Тогда
		
		ПротоколируемыеСобытияУХ.ДобавитьЗаписьОшибка("Обработка.ИмпортОбъектовИзExcel.ЗагрузитьОбъектыИзФайла",,ДанныеФайла,ТекстОшибки,ТехнологическаяИнформация);
		
	Иначе
		
		ПротоколируемыеСобытияУХ.ДобавитьЗаписьПредупреждение("Обработка.ИмпортОбъектовИзExcel.ЗагрузитьОбъектыИзФайла",,ДанныеФайла,ТекстОшибки,ТехнологическаяИнформация);
		
	КонецЕсли;
	
	ПротоколОшибок=ПротоколируемыеСобытияУХ.Завершить("Обработка.ИмпортОбъектовИзExcel",,ДанныеФайла,,,ДанныеФайла);
	ПротоколируемыеСобытияУХ.ЗаписатьПротоколВРегистр(?(ЗначениеЗаполнено(ДанныеЗапроса.ЭкземплярОтчета),ДанныеЗапроса.ЭкземплярОтчета,ДанныеФайла),ДанныеФайла,ПротоколОшибок,,,,ДанныеЗапроса.ВидОтчета);
			
КонецПроцедуры // ПротоколироватьОшибкуФайла() 

Функция ПолучитьСтрокуОбработки(ВидОтчета,ИмяФайла,ЭкземплярОтчета)
	
	МассивОбработанных=ОбработанныеЭкземплярыОтчетов.НайтиСтроки(Новый Структура("ВидОтчета,ИмяФайла,ЭкземплярОтчета",ВидОтчета,ИмяФайла,?(ЗначениеЗаполнено(ЭкземплярОтчета),ЭкземплярОтчета,Документы.НастраиваемыйОтчет.ПустаяСсылка())));
	
	Если МассивОбработанных.Количество()>0 Тогда
		
		СтрВидОтчета=МассивОбработанных[0];
		
	Иначе
		
		СтрВидОтчета=ОбработанныеЭкземплярыОтчетов.Добавить();
		СтрВидОтчета.ВидОтчета= ВидОтчета;
		СтрВидОтчета.ИмяФайла = ИмяФайла;
	
	КонецЕсли;

	Возврат СтрВидОтчета;
		
КонецФункции // ПолучитьСтрокуОбработки()

Процедура ПереименоватьЗагруженныйФайл(ДанныеФайла,МассивИмен,ТекстПрефикс)
	
	Если МассивИмен.Найти(ДанныеФайла.ИмяФайла)=Неопределено Тогда
		
		МассивИмен.Добавить(ДанныеФайла.ИмяФайла);
		
		НовоеИмяФайла=СтрЗаменить(ДанныеФайла.ИмяФайла,ДанныеФайла.ИмяФайлаБезРасширения,ДанныеФайла.ИмяФайлаБезРасширения+"_"+ТекстПрефикс);
		
		Попытка
			
			ПереместитьФайл(ДанныеФайла.ПолноеИмяФайла,СтрЗаменить(ДанныеФайла.ПолноеИмяФайла,ДанныеФайла.ИмяФайла,НовоеИмяФайла));
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не удалось переименовать файл  %1: %2'"), 
				ДанныеФайла.ПолноеИмяФайла, 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())),,,СтатусСообщения.Внимание);
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры // ПереименоватьЗагруженныйФайл()

#КонецОбласти

