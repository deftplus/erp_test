
&НаКлиенте
Процедура ИмпортИзФайлаПриИзменении(Элемент)
	
	Объект.ПутьКФайлам="";
	Элементы.ИскатьВПодкаталогах.Видимость=(Объект.ИмпортИзФайла=1);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуСервер()
	
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	
	Если Объект.ЗагрузкаДокументов=0 Тогда
		
		ОбработкаОбъект.ЗагрузитьЭкземплярыОтчетов();
		
	Иначе
		
		ОбработкаОбъект.ЗагрузитьПакетыДокументов();
		ОбработкаОбъект.ЗагрузитьОбъектыБД();
		
	КонецЕсли;
	
	КоличествоФайлов=ОбработкаОбъект.МассивФайлов.Количество();
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
	Данные = Новый Структура;
	
	КлючевыеРеквизиты=Новый Структура;
	КлючевыеРеквизиты.Вставить("Организация",	Объект.Организация);
	КлючевыеРеквизиты.Вставить("ПериодОтчета",	Объект.ПериодОтчета);
	КлючевыеРеквизиты.Вставить("Сценарий",		Объект.Сценарий);
	
	МассивОбъектов=Объект.ИмпортированныеПакеты.Выгрузить().ВыгрузитьКолонку("ПакетПравилИмпортаТаблиц");
	
	Для Каждого СтрОбъект ИЗ Объект.ОбработанныеЭкземплярыОтчетов Цикл
		
		Если ЗначениеЗаполнено(СтрОбъект.ЭкземплярОтчета) Тогда
			
			МассивОбъектов.Добавить(Новый Структура("Объект,ВерсияХранимогоФайла,ВидОтчета",СтрОбъект.ЭкземплярОтчета,СтрОбъект.ВерсияХранимогоФайла,СтрОбъект.ВидОтчета));
			
		ИначеЕсли ЗначениеЗаполнено(СтрОбъект.ВерсияХранимогоФайла) Тогда
			
			МассивОбъектов.Добавить(Новый Структура("Объект,ВерсияХранимогоФайла,ВидОтчета",СтрОбъект.ВерсияХранимогоФайла,СтрОбъект.ВерсияХранимогоФайла,СтрОбъект.ВидОтчета));
			
		Иначе
			
			МассивОбъектов.Добавить(Новый Структура("Объект,ВерсияХранимогоФайла,ВидОтчета",СтрОбъект.ВидОтчета,,СтрОбъект.ВидОтчета));
			
		КонецЕсли;
		
	КонецЦикла;	
		
	Данные.Вставить("МассивПротоколируемыхОбъектов", ПротоколируемыеСобытияУХ.ПолучитьМассивПротоколируемыхОбъектов(МассивОбъектов,КлючевыеРеквизиты));
	
	Элементы.ИтогиЗагрузки.Видимость=Истина;
	
КонецПроцедуры // ВыполнитьЗагрузкуСервер()


&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Объект.ИмпортИзФайла=1 Тогда
		ВыбратьФайл();
	Иначе
		ВыбратьКаталог(Объект.ПутьКФайлам,СтандартнаяОбработка);
	КонецЕсли;
	
	ИзменитьДоступностьРабочихКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	Фильтр =  Нстр("ru = 'Листы Microsoft Excel'")+" (*.xls, *.xlsx)|*.xls; *.xlsx|";
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = Нстр("ru = 'Выбор файлов'");
	ДиалогВыбораФайла.ПолноеИмяФайла = Объект.ПутьКФайлам;
	ДиалогВыбораФайла.Фильтр = Фильтр;
			
	ОписаниеОткрытияФайла = Новый ОписаниеОповещения("ОбработатьНачалоВыбораФайлаЗавершение", ЭтаФорма);
	ДиалогВыбораФайла.Показать(ОписаниеОткрытияФайла);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНачалоВыбораФайлаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Объект.ПутьКФайлам=ВыбранноеЗначение[0];
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталог(Каталог, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Каталог = Объект.ПутьКФайлам;

	ОписаниеОткрытияФайла = Новый ОписаниеОповещения("ОбработатьНачалоВыбораКаталогаЗавершение", ЭтаФорма);
	ДиалогВыбораФайла.Показать(ОписаниеОткрытияФайла);
		
КонецПроцедуры // ВыбратьКаталог()

&НаКлиенте
Процедура ОбработатьНачалоВыбораКаталогаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Объект.ПутьКФайлам=ВыбранноеЗначение[0];
			
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	
	ВыполнитьЗагрузкуСервер();
	
	Если Объект.ОбработанныеЭкземплярыОтчетов.Количество()>0 
		ИЛИ Объект.ИмпортированныеПакеты.Количество()>0
		ИЛИ Объект.ИмпортированныеОбъекты.Количество()>0 
		ИЛИ Данные.МассивПротоколируемыхОбъектов.Количество() > 0 Тогда
	
		Элементы.ПротоколОбработки.Доступность=Истина;
		
	Иначе
		
		Элементы.ПротоколОбработки.Доступность=Ложь;
		
	КонецЕсли;
	
	ТекстСообщения=СтрШаблон(Нстр("ru = 'В каталоге обнаружено %1 файлов,
	|из них принято к обработке %2 отчетных форм.'"), КоличествоФайлов, 
	Объект.ОбработанныеЭкземплярыОтчетов.Количество());
	
	КоличествоЭкземпляров=0;
	
	Для Каждого Строка ИЗ Объект.ОбработанныеЭкземплярыОтчетов Цикл
		
		Если ЗначениеЗаполнено(Строка.ЭкземплярОтчета) Тогда
			
			КоличествоЭкземпляров=КоличествоЭкземпляров+1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСообщения=СтрШаблон(Нстр("ru = '%1Загружено %2 экземпляров отчетов'"), ТекстСообщения, КоличествоЭкземпляров);
	
	МассивОшибочных=Объект.ОбработанныеЭкземплярыОтчетов.НайтиСтроки(Новый Структура("ЕстьОшибки",Истина));
	
	Если МассивОшибочных.Количество()>0 Тогда
		
		ТекстСообщения=СтрШаблон(Нстр("ru = '%1, из них с ошибками %2.'"), ТекстСообщения, МассивОшибочных.Количество());
		
	Иначе
		
		ТекстСообщения=ТекстСообщения+".";
		
	КонецЕсли;
		
	ТекстСообщения=СтрШаблон(Нстр("ru = '%1
	|Загружено %2 пакетов импорта данных'"), ТекстСообщения, Объект.ИмпортированныеПакеты.Количество());
	
	МассивОшибочных=Объект.ИмпортированныеПакеты.НайтиСтроки(Новый Структура("ЕстьОшибки",Истина));
	
	Если МассивОшибочных.Количество()>0 Тогда
		
		ТекстСообщения=СтрШаблон(Нстр("ru = '%1, из них с ошибками %2.'"), ТекстСообщения, МассивОшибочных.Количество());
		
	Иначе
		
		ТекстСообщения=ТекстСообщения+".";
		
	КонецЕсли;
	
	ТекстСообщения=СтрШаблон(Нстр("ru = '%1
	|Загружено %2 документа параллельного учета'"), ТекстСообщения, Объект.ИмпортированныеОбъекты.Количество());
	
	МассивОшибочных=Объект.ИмпортированныеОбъекты.НайтиСтроки(Новый Структура("ЕстьОшибкиИмпорта",Истина));
	
	Если МассивОшибочных.Количество()>0 Тогда
		
		ТекстСообщения=СтрШаблон(Нстр("ru = '%1, из них с ошибками %2.'"), ТекстСообщения, МассивОшибочных.Количество());
		
	Иначе
		
		ТекстСообщения=ТекстСообщения+".";
		
	КонецЕсли;
	
	Элементы.ИтогиЗагрузки.Заголовок=ТекстСообщения;

	Если Объект.ОбработанныеЭкземплярыОтчетов.Количество()>0 Тогда
	
		Элементы.ГруппаЭкземпляры.Заголовок=СтрШаблон(Нстр("ru = 'Экземпляры отчетов: %1(%2)'"), Объект.ОбработанныеЭкземплярыОтчетов.Количество(), 
		КоличествоЭкземпляров);
		
		Элементы.ГруппаЭкземпляры.Видимость=Истина;
		
	Иначе
		
		Элементы.ГруппаЭкземпляры.Видимость=Ложь;
		
	КонецЕсли;
	
	Если Объект.ИмпортированныеПакеты.Количество()>0 Тогда
	
		Элементы.ГруппаПакеты.Заголовок=СтрШаблон(Нстр("ru = 'Пакеты импорта данных: %1'"), Объект.ИмпортированныеПакеты.Количество());
		
		Элементы.ГруппаПакеты.Видимость=Истина;
		
	Иначе
		
		Элементы.ГруппаПакеты.Видимость=Ложь;
		
	КонецЕсли;
	
	Если Объект.ИмпортированныеОбъекты.Количество()>0 Тогда
	
		Элементы.ГруппаДокументы.Заголовок=СтрШаблон(Нстр("ru = 'Документы: %1'"), Объект.ИмпортированныеОбъекты.Количество());
		
		Элементы.ГруппаДокументы.Видимость=Истина;
		
	Иначе
		
		Элементы.ГруппаДокументы.Видимость=Ложь;
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ОпределитьШаблонПроцесса()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	УправлениеПериодомСценария.ВерсияОрганизационнойСтруктуры.ШаблонПроцесса КАК ШаблонПроцесса
	|ИЗ
	|	Документ.УправлениеПериодомСценария КАК УправлениеПериодомСценария
	|ГДЕ
	|	УправлениеПериодомСценария.Сценарий = &Сценарий
	|	И УправлениеПериодомСценария.ПериодСценария = &ПериодСценария";
	
	Запрос.УстановитьПараметр("Сценарий",		Объект.Сценарий);
	Запрос.УстановитьПараметр("ПериодСценария",	Объект.ПериодОтчета);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		ШаблонПроцесса=Результат.ШаблонПроцесса;
		
	Иначе
		
		ШаблонПроцесса=Справочники.ШаблоныПроцессов.ПустаяСсылка();
		
	КонецЕсли;	
	
КонецПроцедуры // ОпределитьШаблонПроцесса()

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
			
	ИзменитьДоступностьРабочихКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
		
	ОпределитьШаблонПроцесса();
	ИзменитьДоступностьРабочихКнопок();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПериодовСценариев(Сценарий=Неопределено,ПериодОтчета=Неопределено)
	
	Возврат УправлениеОтчетамиУХ.ПолучитьСписокПериодовСценариев(Сценарий,ПериодОтчета);
		
КонецФункции // ПолучитьСписокПериодовСценариев()

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОпределитьШаблонПроцесса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколОбработки(Команда)
	
	ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма",Новый Структура("МассивПротоколируемыхОбъектов",Данные.МассивПротоколируемыхОбъектов));
			
КонецПроцедуры

&НаКлиенте
Процедура СверкаВГО(Команда)
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Организация",Объект.Организация);
	СтруктураПараметров.Вставить("ПериодСценария",Объект.ПериодОтчета);
	СтруктураПараметров.Вставить("Сценарий",Объект.Сценарий);
	СтруктураПараметров.Вставить("СверкаВГО",Истина);

	ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма",СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭкземплярыОтчетов(Команда)
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("Организация",Объект.Организация);
	СтруктураПараметров.Вставить("ПериодОтчета",Объект.ПериодОтчета);
	СтруктураПараметров.Вставить("Сценарий",Объект.Сценарий);	
	
	ОткрытьФорму("Документ.НастраиваемыйОтчет.ФормаСписка",СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВНА(Команда)
	
	Отбор = Новый Структура("Сценарий, Организация", Объект.Сценарий, Объект.Организация);
	ПараметрыФормы = Новый Структура("Отбор, ПериодСценария", Отбор, Объект.ПериодОтчета);
	ОткрытьФорму("ЖурналДокументов.ДокументыПоВНАМСФО.ФормаСписка", ПараметрыФормы, ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ПротоколОбработки.Доступность=Ложь;
		
	ЗаписанСОшибкой	= Перечисления.СостоянияОтчетов.ЗаписанСОшибкой;
	Запланирован	= Перечисления.СостоянияОтчетов.Запланирован;
	
	Элементы.ОтобратьОшибочныеэкземпляры.Пометка=Ложь;
	Элементы.ОтобратьОшибочныеПакеты.Пометка=Ложь;
	Элементы.ОтобратьОшибочныеДокументы.Пометка=Ложь;
	
	Элементы.ИтогиЗагрузки.Видимость		= Ложь;
	Объект.ЗаписыватьПоРезультатамЗаполнения= Истина;
	Объект.ВыполнятьПовторныйИмпорт			= Истина;
	
	УстановитьВидимость();
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФормыОбъекта(Ссылка)
	
	Возврат Ссылка.Метаданные().ПолноеИмя()+".ФормаОбъекта";	
	
КонецФункции // ПолучитьИмяФормыОбъекта() 

&НаКлиенте
Процедура ОбработанныеЭкземплярыВыборВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСсылка=Элементы.ОбработанныеЭкземплярыОтчетов.ТекущиеДанные.ЭкземплярОтчета;	
	
	Если ЗначениеЗаполнено(ТекущаяСсылка) Тогда
		ОткрытьФорму(ПолучитьИмяФормыОбъекта(ТекущаяСсылка),Новый Структура("Ключ",ТекущаяСсылка));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьРабочихКнопок()
	
	ЕстьОрганизация	= ЗначениеЗаполнено(Объект.Организация);
	ЕстьПериод		= ЗначениеЗаполнено(Объект.ПериодОтчета);
	ЕстьСценарий	= ЗначениеЗаполнено(Объект.Сценарий);
	ЕстьПутьКФайлам	= Не ПустаяСтрока(Объект.ПутьКФайлам);
	ЕстьШаблон		= ЗначениеЗаполнено(ШаблонПроцесса);
	
	Элементы.ВыполнитьЗагрузку.Доступность	= ЕстьПутьКФайлам;
	Элементы.ПротоколОбработки.Доступность	= Объект.ОбработанныеЭкземплярыОтчетов.Количество()>0 ИЛИ Объект.ИмпортированныеПакеты.Количество()>0;
		
КонецПроцедуры // ИзменитьДоступностьРабочихКнопок()

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ИзменитьДоступностьРабочихКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	
	ИзменитьДоступностьРабочихКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьДоступностьРабочихКнопок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьОшибочныеЭкземпляры(Команда)
	
	Элементы.ОтобратьОшибочныеэкземпляры.Пометка=Не Элементы.ОтобратьОшибочныеэкземпляры.Пометка;
	
	Если Элементы.ОтобратьОшибочныеэкземпляры.Пометка Тогда
		
		Элементы.ОбработанныеЭкземплярыОтчетов.ОтборСтрок=Новый ФиксированнаяСтруктура("ЕстьОшибки",Истина);
		
	Иначе
		
		Элементы.ОбработанныеЭкземплярыОтчетов.ОтборСтрок=Неопределено;
		
	КонецЕсли;
		
		
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьОшибочныеПакеты(Команда)
	
	Элементы.ОтобратьОшибочныеПакеты.Пометка=Не Элементы.ОтобратьОшибочныеПакеты.Пометка;
	
	Если Элементы.ОтобратьОшибочныеПакеты.Пометка Тогда
		
		Элементы.ИмпортированныеПакеты.ОтборСтрок=Новый ФиксированнаяСтруктура("ЕстьОшибки",Истина);
		
	Иначе
		
		Элементы.ИмпортированныеПакеты.ОтборСтрок=Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортированныеПакетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСсылка=Элементы.ИмпортированныеПакеты.ТекущиеДанные.ПакетПравилИмпортаТаблиц;	
	
	Если ЗначениеЗаполнено(ТекущаяСсылка) Тогда
		ОткрытьФорму(ПолучитьИмяФормыОбъекта(ТекущаяСсылка),Новый Структура("Ключ",ТекущаяСсылка));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Объект.ИмпортИзФайла Тогда
		ОбщегоНазначенияКлиент.ОткрытьФайлВПрограммеПросмотра(
				Объект.ПутьКФайлам);
	Иначе
		ОбщегоНазначенияКлиент.ОткрытьПроводник(Объект.ПутьКФайлам);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Сценарий) Тогда
		
		СтандартнаяОбработка=Ложь;
		ОткрытьФорму("Справочник.Периоды.ФормаВыбора",Новый Структура("ОтборСценарий",Объект.Сценарий),Элемент);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДокументыФИ(Команда)
	
	Отбор = Новый Структура("Сценарий, Организация", Объект.Сценарий, Объект.Организация);
	ПараметрыФормы = Новый Структура("Отбор, ПериодСценария", Отбор, Объект.ПериодОтчета);
	ОткрытьФорму("ЖурналДокументов.ДокументыПоФинансовымИнструментам.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ЗаписыватьПоРезультатамЗаполнения.Видимость= (Объект.ЗагрузкаДокументов=0);
	Элементы.Проект.Видимость							= (Объект.ЗагрузкаДокументов=0);
	Элементы.ГруппаЭкземпляры.Видимость					= (Объект.ЗагрузкаДокументов=0);
	Элементы.ВыполнятьПовторныйИмпорт.Видимость			= (Объект.ЗагрузкаДокументов=0);
	
	Элементы.ГруппаПакеты.Видимость	= Ложь;
	Элементы.ГруппаДокументы.Видимость	= Ложь;
			
КонецПроцедуры // УстановитьВидимость() 


&НаКлиенте
Процедура ЗагрузкаДокументовПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтобратьОшибочныеДокументы(Команда)
	
	Элементы.ОтобратьОшибочныеДокументы.Пометка=Не Элементы.ОтобратьОшибочныеДокументы.Пометка;
	
	Если Элементы.ОтобратьОшибочныеДокументы.Пометка Тогда
		
		Элементы.ИмпортированныеОбъекты.ОтборСтрок=Новый ФиксированнаяСтруктура("ЕстьОшибкиИмпорта",Истина);
		
	Иначе
		
		Элементы.ИмпортированныеОбъекты.ОтборСтрок=Неопределено;
		
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ИмпортированныеОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Поле.Имя="ПравилоЗаполнения"
		ИЛИ Поле.Имя="ДокументПараллельногоУчета" Тогда
		
		ПоказатьЗначение(,Элементы.ИмпортированныеОбъекты.ТекущиеДанные[Поле.Имя]);
		
	КонецЕсли;
			
КонецПроцедуры

