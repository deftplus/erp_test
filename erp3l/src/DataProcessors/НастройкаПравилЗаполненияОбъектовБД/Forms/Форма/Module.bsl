&НаКлиенте
Перем ВыполняетсяЗакрытие;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ЦветЧетныйВидОтчета        = Новый Цвет(255, 255, 255);
	ЦветНеЧетныйВидОтчета      = Новый Цвет(255, 255, 255);
	ЦветУзораЧетныйВидОтчета   = Новый Цвет(255, 255, 255);
	ЦветУзораНеЧетныйВидОтчета = Новый Цвет(255, 255, 255);
	ЦветФонаЧетнойСтроки       = Новый Цвет(255, 255, 255);
	
	Объект.ОбластьГенерации=?(ЗначениеЗаполнено(Параметры.ОбластьГенерации),Параметры.ОбластьГенерации,Перечисления.ОбластиГенерацииОбъектов.ТекущаяИБ);
	
	Элементы.ГруппаВыбора.Видимость=Ложь;
	
	ПолучитьТаблицуНастроек();
	
	ОбновитьПолеНастройки();
	
КонецПроцедуры

&НаСервере
Функция ОбрабатыватьОбъектБД(СтрокаОбъектБД)
	
	Если ЗначениеЗаполнено(ОбъектБДОтбор) И (Не СтрокаОбъектБД.ОбъектБД=ОбъектБДОтбор) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипБДОтбор) И (Не СтрокаОбъектБД.ТипБД=ТипБДОтбор) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ СтрокаОбъектБД.ОбластьГенерации=Объект.ОбластьГенерации Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ОбрабатыватьОбъектБД() 

&НаСервере
Процедура ОбновитьПолеНастройки()
		
	ПолеНастройки.Очистить();
	
	Макет = Обработки.НастройкаПравилЗаполненияОбъектовБД.ПолучитьМакет("Макет");
	
	ОбластьВидОтчета   = Макет.ПолучитьОбласть("ОбъектБД");
	ОбластьОрганизация = Макет.ПолучитьОбласть("Организация");
	ОбластьДетализация = Макет.ПолучитьОбласть("Детализация");
	
	ПолеНастройки.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	Инд = 1;
	
	Для Каждого СтрокаОбъектБД Из ТаблицаОбъектовБД Цикл
		
		Если НЕ ОбрабатыватьОбъектБД(СтрокаОбъектБД) Тогда
			
			СтрокаОбъектБД.Колонка=0;
			Продолжить;
			
		КонецЕсли;
		
		ОбластьВидОтчета.Параметры.ОбъектБД   	= СтрокаОбъектБД.ТекстОбъектБД;
		ОбластьВидОтчета.Параметры.Расшифровка 	= Новый Структура("ОбъектБД",СтрокаОбъектБД.ОбъектБД);
		ТекОбласть = ПолеНастройки.Присоединить(ОбластьВидОтчета);
		ТекОбласть.ЦветФона  = ?(ОбщегоНазначенияУХ.ЧетноеЧисло(Инд), ЦветЧетныйВидОтчета, ЦветНеЧетныйВидОтчета);
		ТекОбласть.ЦветУзора = ?(ОбщегоНазначенияУХ.ЧетноеЧисло(Инд), ЦветУзораЧетныйВидОтчета, ЦветУзораНеЧетныйВидОтчета);
		СтрокаОбъектБД.Колонка = ТекОбласть.Лево;
		Инд = Инд + 1;
		
	КонецЦикла;
	
	Инд = 1;
	
	Для Каждого СтрокаОрганизация Из ТаблицаОрганизаций Цикл
		
		Если СписокОрганизацийОтбор.Количество()>0 И СписокОрганизацийОтбор.НайтиПоЗначению(СтрокаОрганизация.Организация)=Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ТаблДокСтрока = Новый ТабличныйДокумент;
		ОбластьОрганизация.Параметры.Организация = СтрокаОрганизация.Организация;
		ОбластьОрганизация.Параметры.Расшифровка = СтрокаОрганизация.Организация;
		ТаблДокСтрока.Вывести(ОбластьОрганизация);//.ЦветФона = ?(ОбщегоНазначенияУХ.ЧетноеЧисло(Инд), ЦветФонаЧетнойСтроки, Новый Цвет());
		
		Для Каждого СтрокаОбъектБД ИЗ ТаблицаОбъектовБД Цикл
			
			Если НЕ ОбрабатыватьОбъектБД(СтрокаОбъектБД) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Структура = Новый Структура("ОбъектБД, Организация", СтрокаОбъектБД.ОбъектБД, СтрокаОрганизация.Организация);
			НайденныеСтроки = ТаблицаНастроекЗаполнения.НайтиСтроки(Структура);
			
			Если НайденныеСтроки.Количество()=0 Тогда
				
				ОбластьДетализация.Параметры.Расшифровка = Структура;
				ТекОбласть = ТаблДокСтрока.Присоединить(ОбластьДетализация);
				ТекОбласть.ЦветФона = Новый Цвет(255, 255, 255);
				ТекОбласть.ЦветУзора = Новый Цвет(240, 240, 240);
				ТекОбласть.Узор = ТипУзораТабличногоДокумента.Узор3;
				ТекОбласть.Объединить();
				ТекОБласть.Текст = "";
				ТекОбласть.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
				ТекОбласть.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
				
			Иначе
								
				СтрокаНастройка=НайденныеСтроки[0];
				ОбластьДетализация.Параметры.Расшифровка  				= Структура;
				ОбластьДетализация.Параметры.ТекстПравилаЗаполнения  	= СтрокаНастройка.ТекстПравилаЗаполнения;
																					
				ТекОбласть = ТаблДокСтрока.Присоединить(ОбластьДетализация);
				ТекОбласть.Шрифт = Новый Шрифт(ТекОбласть.Шрифт, , , СтрокаНастройка.НастройкаИзменена);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТекОбласть = ПолеНастройки.Вывести(ТаблДокСтрока);
		СтрокаОрганизация.Ряд = ТекОбласть.Верх;
		Инд = Инд + 1;
		
	КонецЦикла;
	
	ПолеНастройки.ФиксацияСверху = 1;
	ПолеНастройки.ФиксацияСЛЕВА  = 2;
	
	ЗапросКоординаты=Новый Запрос;
	ЗапросКоординаты.Текст="ВЫБРАТЬ
	|	ТаблицаОрганизаций.Организация,
	|	ТаблицаОрганизаций.Ряд
	|ПОМЕСТИТЬ СтрокиОрганизаций
	|ИЗ
	|	&ТаблицаОрганизаций КАК ТаблицаОрганизаций
	|ГДЕ
	|	ТаблицаОрганизаций.Ряд <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОбъектовБД.ОбъектБД,
	|	ТаблицаОбъектовБД.Колонка
	|ПОМЕСТИТЬ КолонкиОбъектов
	|ИЗ
	|	&ТаблицаОбъектовБД КАК ТаблицаОбъектовБД
	|ГДЕ
	|	ТаблицаОбъектовБД.Колонка <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиОрганизаций.Организация,
	|	СтрокиОрганизаций.Ряд КАК Верх,
	|	КолонкиОбъектов.ОбъектБД,
	|	КолонкиОбъектов.Колонка КАК Лево
	|ИЗ
	|	СтрокиОрганизаций КАК СтрокиОрганизаций,
	|	КолонкиОбъектов КАК КолонкиОбъектов";
	
	ЗапросКоординаты.УстановитьПараметр("ТаблицаОрганизаций",РеквизитФормыВЗначение("ТаблицаОрганизаций"));
	ЗапросКоординаты.УстановитьПараметр("ТаблицаОбъектовБД",РеквизитФормыВЗначение("ТаблицаОбъектовБД"));
	
	ЗначениеВРеквизитФормы(ЗапросКоординаты.Выполнить().Выгрузить(),"ТаблицаКоординат");
		
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуНастроек()
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	ТаблицаНастроекЗаполнения.Очистить();
	
	Запрос.Текст="ВЫБРАТЬ
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.Организация,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.Сценарий,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ОбъектБД,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ПравилоЗаполнения,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ИсходныйОбъектБД,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ОбластьГенерации,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ИспользуемаяИБ,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ВыполнятьАвтоматически,
	|	НастройкиЗаполненияОбъектовБДСрезПоследних.ПроводитьДокументы,
	|	ВЫБОР
	|		КОГДА НастройкиЗаполненияОбъектовБДСрезПоследних.ОбъектБД.Владелец = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ТекущаяИБ)
	|			ТОГДА НастройкиЗаполненияОбъектовБДСрезПоследних.ПравилоЗаполнения.ТипБД
	|		ИНАЧЕ НастройкиЗаполненияОбъектовБДСрезПоследних.ОбъектБД.Владелец
	|	КОНЕЦ КАК ТипБД
	|ПОМЕСТИТЬ ИсходнаяТаблицаРегистра
	|ИЗ
	|	РегистрСведений.НастройкиЗаполненияОбъектовБД.СрезПоследних(, ) КАК НастройкиЗаполненияОбъектовБДСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаЗаполненияОбъектовБД.Владелец КАК ОбъектБД,
	|	ПравилаЗаполненияОбъектовБД.Владелец.Владелец КАК ТипБД,
	|	0 КАК Колонка,
	|	"""" КАК ТекстОбъектБД,
	|	ВЫБОР
	|		КОГДА ПравилаЗаполненияОбъектовБД.Владелец.Владелец = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ТекущаяИБ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОбластиГенерацииОбъектов.ТекущаяИБ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОбластиГенерацииОбъектов.ВнешняяИБ)
	|	КОНЕЦ КАК ОбластьГенерации
	|ИЗ
	|	Справочник.ПравилаЗаполненияОбъектовБД КАК ПравилаЗаполненияОбъектовБД
	|ГДЕ
	|	НЕ ПравилаЗаполненияОбъектовБД.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипБД,
	|	ОбъектБД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	0 КАК Ряд
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходнаяТаблицаРегистра.Организация,
	|	ИсходнаяТаблицаРегистра.ОбъектБД,
	|	ИсходнаяТаблицаРегистра.ОбластьГенерации
	|ИЗ
	|	ИсходнаяТаблицаРегистра КАК ИсходнаяТаблицаРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Значение
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение ИЕРАРХИЯ";
	
	Результат=Запрос.ВыполнитьПакет();
	
	ЗначениеВРеквизитФормы(Результат[1].Выгрузить(),"ТаблицаОбъектовБД");
	ЗначениеВРеквизитФормы(Результат[2].Выгрузить(),"ТаблицаОрганизаций");
	
	ДеревоОрганизаций=Результат[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	НоваяСтрока=ДеревоОрганизаций.Строки.Вставить(0);
	
	ЗначениеВРеквизитФормы(ДеревоОрганизаций,"ОрганизационныеЕдиницы");
	ОрганизационныеЕдиницы.ПолучитьЭлементы()[0].Значение="(Все организации)";
	
	СформироватьДеревоОбъектовБД();
	
	ТаблицаСуществующихНастроек=Результат[3].Выгрузить();
	
	Запрос.Текст="ВЫБРАТЬ
	|	ИсходнаяТаблицаРегистра.ПравилоЗаполнения,
	|	ИсходнаяТаблицаРегистра.ИсходныйОбъектБД,
	|	ИсходнаяТаблицаРегистра.ИспользуемаяИБ,
	|	ИсходнаяТаблицаРегистра.ВыполнятьАвтоматически,
	|	ИсходнаяТаблицаРегистра.ПроводитьДокументы,
	|	ИсходнаяТаблицаРегистра.ТипБД
	|ИЗ
	|	ИсходнаяТаблицаРегистра КАК ИсходнаяТаблицаРегистра
	|ГДЕ
	|	ИсходнаяТаблицаРегистра.Организация = &Организация
	|	И ИсходнаяТаблицаРегистра.ОбъектБД = &ОбъектБД";
	
	Для Каждого Строка ИЗ ТаблицаСуществующихНастроек Цикл
		
		НоваяСтрока=ТаблицаНастроекЗаполнения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
				
		Запрос.УстановитьПараметр("Организация",Строка.Организация);
		Запрос.УстановитьПараметр("ОбъектБД",Строка.ОбъектБД);
		
		РезультатНастройки=Запрос.Выполнить().Выбрать();
		
		Пока РезультатНастройки.Следующий() Цикл
			
			СтрокаНастройки=НоваяСтрока.НастройкиЗаполнения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНастройки,РезультатНастройки);
			
		КонецЦикла;
		
		НоваяСтрока.ТекстПравилаЗаполнения=СформироватьПредставлениеНастроекСервер(НоваяСтрока.НастройкиЗаполнения);
		
	КонецЦикла;
			
КонецПроцедуры //

&НаСервере
Функция СформироватьПредставлениеНастроекСервер(ТабНастройкиЗаполнения)
	
	ТекстНастройки="";
	
	МаксНомерСтроки=?(ТабНастройкиЗаполнения.Количество()<=3,ТабНастройкиЗаполнения.Количество()-1,2);
	
	Для Инд=0 по МаксНомерСтроки цикл
		
		ТекстНастройки=ТекстНастройки+","+ТабНастройкиЗаполнения[Инд].ИспользуемаяИБ+": "+?(ЗначениеЗаполнено(ТабНастройкиЗаполнения[Инд].ИсходныйОбъектБД),ТабНастройкиЗаполнения[Инд].ИсходныйОбъектБД,ТабНастройкиЗаполнения[Инд].ПравилоЗаполнения);
		
	КонецЦикла;
	
	ТекстНастройки=Сред(ТекстНастройки,2);
	
	Если ТабНастройкиЗаполнения.Количество()>3 Тогда
		
		ТекстНастройки=ТекстНастройки+"...("+(ТабНастройкиЗаполнения.Количество()-3)+")";
		
	КонецЕсли;
	
	Возврат ТекстНастройки;
		
КонецФункции // СформироватьПредставлениеНастроек()

&НаСервере
Процедура СформироватьДеревоОбъектовБД()
		
	ДеревоОбъектов=Новый ДеревоЗначений;
	ДеревоОбъектов.Колонки.Добавить("Значение");
	
	НоваяСтрока=ДеревоОбъектов.Строки.Добавить();
	НоваяСтрока.Значение="(Все объекты)";
	
	Для Каждого Строка ИЗ ТаблицаОбъектовБД Цикл
		
		Строка.ТекстОбъектБД=""+Строка.ОбъектБД+?(НЕ Строка.ТипБД=Справочники.ТипыБазДанных.ТекущаяИБ,Символы.ПС+"("+Строка.ТипБД+")","");
		
		Если НЕ Строка.ОбластьГенерации=Объект.ОбластьГенерации Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если Объект.ОбластьГенерации=Перечисления.ОбластиГенерацииОбъектов.ТекущаяИБ Тогда
			
			НоваяСтрока=ДеревоОбъектов.Строки.Добавить();
			НоваяСтрока.Значение=Строка.ОбъектБД;
			
		Иначе
			
			СтрокаТипБД=ДеревоОбъектов.Строки.Найти(Строка.ТипБД,"Значение");
			
			Если СтрокаТипБД=Неопределено Тогда
				
				СтрокаТипБД=ДеревоОбъектов.Строки.Добавить();
				СтрокаТипБД.Значение=Строка.ТипБД;
				
			КонецЕсли;
			
			НоваяСтрока=СтрокаТипБД.Строки.Добавить();
			НоваяСтрока.Значение=Строка.ОбъектБД;

		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоОбъектов,"ОбъектыБД");
		
КонецПроцедуры // СформироватьДеревоОбъектовБД() 

&НаКлиенте
Процедура ПолеНастройкиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	МассивНастроек=Новый Массив;
	
	Если Расшифровка.Свойство("Организация") И Расшифровка.Свойство("ОбъектБД") Тогда
		
		ДанныеНастройки=ТаблицаНастроекЗаполнения.НайтиСтроки(Расшифровка);
		
		Если ДанныеНастройки.Количество()>0 Тогда
			
			Для Каждого Строка ИЗ ДанныеНастройки[0].НастройкиЗаполнения Цикл
				
				СтруктураНастройки=Новый Структура;
				
				СтруктураНастройки.Вставить("ПравилоЗаполнения",		Строка.ПравилоЗаполнения);
				СтруктураНастройки.Вставить("ИсходныйОбъектБД",			Строка.ИсходныйОбъектБД);
				СтруктураНастройки.Вставить("ИспользуемаяИБ",			Строка.ИспользуемаяИБ);
				СтруктураНастройки.Вставить("ВыполнятьАвтоматически",	Строка.ВыполнятьАвтоматически);
				СтруктураНастройки.Вставить("ПроводитьДокументы",		Строка.ПроводитьДокументы);
				СтруктураНастройки.Вставить("ТипБД",					Строка.ТипБД);
				
				МассивНастроек.Добавить(СтруктураНастройки);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураНастройки=Новый Структура;
	
	Для Каждого КлючИЗначение ИЗ Расшифровка Цикл
		
		СтруктураНастройки.Вставить(КлючИЗначение.Ключ,КлючИЗначение.Значение);
		
	КонецЦикла;
	
	СтруктураНастройки.Вставить("МассивНастроек",МассивНастроек);	
	ОткрытьФорму("Обработка.НастройкаПравилЗаполненияОбъектовБД.Форма.ФормаНастройки",СтруктураНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
		
КонецПроцедуры

&НаСервере
Процедура Применить()

	Для Каждого Строка ИЗ ТаблицаНастроекЗаполнения Цикл
		
		Если Строка.НастройкаИзменена Тогда
			
			НаборЗаписей=РегистрыСведений.НастройкиЗаполненияОбъектовБД.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Строка.Организация);
			НаборЗаписей.Отбор.ОбъектБД.Установить(Строка.ОбъектБД);
			
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			
			Для Каждого СтрокаНастройка ИЗ Строка.НастройкиЗаполнения Цикл
				
				НоваяСтрока=НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНастройка);
				НоваяСтрока.Период=ТекущаяДата();
				НоваяСтрока.Активность=Истина;
				
			КонецЦикла;
						
			НаборЗаписей.Записать(Истина);	
			Строка.НастройкаИзменена=Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьПолеНастройки();
	Модифицированность = Ложь;			
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	Применить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизационныеЕдиницыВыбор(Элемент, Инд_ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьПолеОтбора(Элементы.ОрганизационныеЕдиницы.ТекущиеДанные.Значение);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	ОбновитьПолеНастройки();
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьОтборы(Команда)
	
	Элементы.ФормаПоказатьОтборы.Пометка = НЕ Элементы.ФормаПоказатьОтборы.Пометка;
	Элементы.ГруппаВыбора.Видимость = Элементы.ФормаПоказатьОтборы.Пометка;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОбластиГенерации()
	
	ТипБДОтбор="";
	ОбъектБДОтбор="";
	
	ОбновитьПолеНастройки();
	СформироватьДеревоОбъектовБД();
	
КонецПроцедуры // ПриИзмененииОбластиГенерации()

&НаКлиенте
Процедура ОбластьГенерацииПриИзменении(Элемент)
	
	ПриИзмененииОбластиГенерации()	
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиСоответствия(ОбъектБД,Организация,НовыеНастройки)
	
	Модифицированность = Истина;
	МассивНастроек=ТаблицаНастроекЗаполнения.НайтиСтроки(Новый Структура("ОбъектБД,Организация",ОбъектБД,Организация));
	
	Если МассивНастроек.Количество()=0 Тогда
		
		СтрокаНастройки=ТаблицаНастроекЗаполнения.Добавить();
		СтрокаНастройки.Организация=Организация;
		СтрокаНастройки.ОбъектБД=ОбъектБД;
		СтрокаНастройки.ОбластьГенерации=?(ОбъектБД.Владелец=Справочники.ТипыБазДанных.ТекущаяИБ,Перечисления.ОбластиГенерацииОбъектов.ТекущаяИБ,Перечисления.ОбластиГенерацииОбъектов.ВнешняяИБ);
		
	Иначе
		
		СтрокаНастройки=МассивНастроек[0];
		
	КонецЕсли;
	
	СтрокаНастройки.НастройкаИзменена=Истина;
	СтрокаНастройки.НастройкиЗаполнения.Очистить();
	
	Для Каждого Настройка ИЗ НовыеНастройки Цикл
		
		НоваяСтрока=СтрокаНастройки.НастройкиЗаполнения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Настройка);
		
	КонецЦикла;
	
	СтрокаНастройки.ТекстПравилаЗаполнения=СформироватьПредставлениеНастроекСервер(СтрокаНастройки.НастройкиЗаполнения);
	
	СтрокаКоординат=ТаблицаКоординат.НайтиСтроки(Новый Структура("ОбъектБД,Организация",ОбъектБД,Организация));
	
	ОбластьНастройки=ПолеНастройки.Область(СтрокаКоординат[0].Верх,СтрокаКоординат[0].Лево,СтрокаКоординат[0].Верх,СтрокаКоординат[0].Лево);
	
	ОбластьНастройки.Текст = СтрокаНастройки.ТекстПравилаЗаполнения;																				
	ОбластьНастройки.Шрифт = Новый Шрифт(ОбластьНастройки.Шрифт, , , Истина);
	
КонецПроцедуры // ИзменитьНастройкиСоответствия()
	
&НаКлиенте
Функция СформироватьПредставлениеНастроекКлиент(ТабНастройкиЗаполнения)
	
	ТекстНастройки="";
	
	МаксНомерСтроки=?(ТабНастройкиЗаполнения.Количество()<=3,ТабНастройкиЗаполнения.Количество()-1,2);
	
	Для Инд=0 по МаксНомерСтроки цикл
		
		ТекстНастройки=ТекстНастройки+","+?(ЗначениеЗаполнено(ТабНастройкиЗаполнения[Инд].ИсходныйОбъектБД),ТабНастройкиЗаполнения[Инд].ИсходныйОбъектБД,ТабНастройкиЗаполнения[Инд].ПравилоЗаполнения)+"("+ТабНастройкиЗаполнения[Инд].ИспользуемаяИБ+")";
		
	КонецЦикла;
	
	ТекстНастройки=Сред(ТекстНастройки,2);
	
	Если ТабНастройкиЗаполнения.Количество()>3 Тогда
		
		ТекстНастройки=ТекстНастройки+"...("+(ТабНастройкиЗаполнения.Количество()-3)+")";
		
	КонецЕсли;
	
	Возврат ТекстНастройки;
		
КонецФункции // СформироватьПредставлениеНастроек()	
	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ИзмененыПравилаЗаполненияОбъектаБД" Тогда
		
		Если Параметр.Модифицированность=Ложь Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметр.ОбъектБД) И ЗначениеЗаполнено(Параметр.Организация) Тогда
			
			ИзменитьНастройкиСоответствия(Параметр.ОбъектБД,Параметр.Организация,Параметр.МассивНастроек);
			
		Иначе
			
			Для Каждого Строка ИЗ ТаблицаОрганизаций Цикл
				
				ИзменитьНастройкиСоответствия(Параметр.ОбъектБД,Строка.Организация,Параметр.МассивНастроек);
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбъектыБДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьПолеОтбора(Элементы.ОбъектыБД.ТекущиеДанные.Значение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПолеОтбора(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение="(Все организации)" Тогда
		
		СписокОрганизацийОтбор.Очистить();
		
	ИначеЕсли ВыбранноеЗначение="(Все объекты)" Тогда
		
		ТипБДОтбор="";
		ОбъектБДОтбор="";
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение)=Тип("СправочникСсылка.ТипыБазДанных") Тогда
		
		ОбъектБДОтбор="";
		ТипБДОтбор=ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение)=Тип("СправочникСсылка.ДокументыБД") Тогда
		
		ТипБДОтбор="";
		ОбъектБДОтбор=ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение)=Тип("СправочникСсылка.Организации") Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В ИЕРАРХИИ(&ВыбранноеЗначение)";
		
		Запрос.УстановитьПараметр("ВыбранноеЗначение",ВыбранноеЗначение);
		
		СписокОрганизацийОтбор.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
		
	КонецЕсли;
	
	ОбновитьПолеНастройки();
	
КонецПроцедуры // ОбработатьПолеОтбора() 

&НаКлиенте
Процедура ПередЗапись_Завершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        ВыполняетсяЗакрытие = Истина;
        ЭтаФорма.Закрыть();
    ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
    	Применить();
        ВыполняетсяЗакрытие = Истина;
        ЭтаФорма.Закрыть();
    ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда    
    	// Пользователь отказался закрывать форму.
    Иначе       
    	ТекстСообщения = НСтр("ru = 'Выбран неизвестный вариант: %Результат%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Результат%", Строка(Результат));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если (Модифицированность) И НЕ (ЗавершениеРаботы) Тогда
		Если Не ВыполняетсяЗакрытие Тогда
			Отказ = Истина;
			СтруктураПараметров = Новый Структура;
			ТекстВопроса = НСтр("ru = 'Настройки были изменены. Записать настройки перед закрытием?'");
			Режим = РежимДиалогаВопрос.ДаНетОтмена;
			Оповещение = Новый ОписаниеОповещения("ПередЗапись_Завершение", ЭтаФорма, СтруктураПараметров);
			ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		Иначе
			// Закрытие разрешено.
		КонецЕсли;
	Иначе
		// Данные записаны. Можно закрывать форму
	КонецЕсли;
КонецПроцедуры

ВыполняетсяЗакрытие = Ложь;
