
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоУказанным(Команда)
	ТекстВопроса = СтрШаблон(НСтр("ru = 'По данным первичных движений будут перезаполнены регистры: %1
	|
	|Задания к переотражению в БУ, МФУ, НДС и к закрытию месяца созданы не будут. Продолжить?';
	|en = 'The following registers will be re-populated: %1 according to the primary register records data
	|
	|Jobs to be recorded in the accounting, IFRS, VAT and by the month-end closing will not be created. Continue?'"),
		ИменаРегистров());
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоУказаннымЗавершение", ЭтотОбъект), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУказаннымЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоУказаннымНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсё(Команда)
	ТекстВопроса = СтрШаблон(НСтр("ru = 'По данным первичных движений будут перезаполнены регистры: %1
	|
	|Задания к переотражению в БУ, МФУ, НДС и к закрытию месяца созданы не будут. Продолжить?';
	|en = 'The following registers will be re-populated: %1 according to the primary register records data
	|
	|Jobs to be recorded in the accounting, IFRS, VAT and by the month-end closing will not be created. Continue?'"),
		ИменаРегистров());
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьВсёЗавершение", ЭтотОбъект), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсёЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьВсёСервер();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлановые(Команда)
	ТекстВопроса = СтрШаблон(НСтр("ru = 'По данным первичных движений будут перезаполнены регистры: %1
	|
	|Продолжить?';
	|en = 'The following registers will be re-populated: %1 according to the primary register records data
	|
	|. Continue?'"),
		ИменаРегистров(Истина));
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПлановыеЗавершение", ЭтотОбъект), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлановыеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПлановыеНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПустые(Команда)
	ПерезаполнитьПустыеСервер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоУказаннымНаСервере(Порядок = "")
	
	Если Не ЗначениеЗаполнено(ОбъектРасчетов) ИЛИ Не ЗначениеЗаполнено(КлючАналитикиУчетаПоПартнерам) Тогда
		ТекстИсключения = НСтр("ru = 'Для частичного заполнения указжите Объект расчетов и Ключ аналитики учета по партнерам.';
								|en = 'For partial filling, specify AR/AP object and Dimension key of accounting by partners.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ОсновныеПараметры = ОперативныеВзаиморасчетыСервер.СтруктураПараметровЗаполненияВзаиморасчетов();
	ОсновныеПараметры.ОбъектРасчетов = ОбъектРасчетов;
	ОсновныеПараметры.АналитикаУчетаПоПартнерам = КлючАналитикиУчетаПоПартнерам;
	Если ЗначениеЗаполнено(ДатаНачалаПересчета) Тогда
		ОсновныеПараметры.ПорядокФакт = ОперативныеВзаиморасчетыСервер.Порядок(ДатаНачалаПересчета,"",,Тип("ДокументСсылка.РегистраторРасчетов"));
		ОсновныеПараметры.ПорядокПлан = ОперативныеВзаиморасчетыСервер.Порядок(ДатаНачалаПересчета,"",,Тип("ДокументСсылка.РегистраторРасчетов"));
	КонецЕсли;
	
	ОсновныеПараметры.ВалютаРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектРасчетов, "ВалютаВзаиморасчетов");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистр.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|	И ВЫРАЗИТЬ(Регистр.Регистратор КАК Документ.КорректировкаРегистров).Операция <> ЗНАЧЕНИЕ(Перечисление.ОперацииКорректировкиРегистров.РучнаяКорректировка)
	|	И Регистр.АналитикаУчетаПоПартнерам = &АналитикаУчетаПоПартнерам
	|	И Регистр.ОбъектРасчетов = &ОбъектРасчетов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистр.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Регистр
	|ГДЕ
	|	Регистр.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|	И ВЫРАЗИТЬ(Регистр.Регистратор КАК Документ.КорректировкаРегистров).Операция <> ЗНАЧЕНИЕ(Перечисление.ОперацииКорректировкиРегистров.РучнаяКорректировка)
	|	И Регистр.АналитикаУчетаПоПартнерам = &АналитикаУчетаПоПартнерам
	|	И Регистр.ОбъектРасчетов = &ОбъектРасчетов
	|";
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",КлючАналитикиУчетаПоПартнерам);
	Запрос.УстановитьПараметр("ОбъектРасчетов",ОбъектРасчетов);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		ДвиженияРасчетыСКлиентами = ДокументОбъект.Движения.РасчетыСКлиентамиПоСрокам;
		ДвиженияРасчетыСКлиентами.Прочитать();
		сч = 0;
		Пока сч < ДвиженияРасчетыСКлиентами.Количество() Цикл
			Если ДвиженияРасчетыСКлиентами[сч].АналитикаУчетаПоПартнерам = КлючАналитикиУчетаПоПартнерам
				И ДвиженияРасчетыСКлиентами[сч].ОбъектРасчетов = ОбъектРасчетов Тогда
				ДвиженияРасчетыСКлиентами.Удалить(сч);
			Иначе
				сч = сч + 1;
			КонецЕсли;
		КонецЦикла;
		ДвиженияРасчетыСКлиентами.Записать();
		
		ДвиженияРасчетыСПоставщиками = ДокументОбъект.Движения.РасчетыСПоставщикамиПоСрокам;
		ДвиженияРасчетыСПоставщиками.Прочитать();
		сч = 0;
		Пока сч < ДвиженияРасчетыСПоставщиками.Количество() Цикл
			Если ДвиженияРасчетыСПоставщиками[сч].АналитикаУчетаПоПартнерам = КлючАналитикиУчетаПоПартнерам
				И ДвиженияРасчетыСПоставщиками[сч].ОбъектРасчетов = ОбъектРасчетов Тогда
				ДвиженияРасчетыСПоставщиками.Удалить(сч);
			Иначе
				сч = сч + 1;
			КонецЕсли;
		КонецЦикла;
		ДвиженияРасчетыСПоставщиками.Записать();
		
	КонецЦикла;
	
	ОсновныеПараметры.ЭтоРасчетыСКлиентами = Истина;
	ОперативныеВзаиморасчетыСервер.ЗаполнитьОперативныеВзаиморасчеты(ОсновныеПараметры);
	
	ОсновныеПараметры.ЭтоРасчетыСКлиентами = Ложь;
	ОперативныеВзаиморасчетыСервер.ЗаполнитьОперативныеВзаиморасчеты(ОсновныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	ОперативныеВзаиморасчетыСервер.ОчиститьРегистрыВзаиморасчетов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсёСервер()
	ОперативныеВзаиморасчетыСервер.ЗаполнитьПоВсемРасчетам();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПлановыеНаСервере()
	
	ОперативныеВзаиморасчетыСервер.ОчиститьРегистр("РасчетыСКлиентамиПланОплат");
	ОперативныеВзаиморасчетыСервер.ОчиститьРегистр("РасчетыСКлиентамиПланОтгрузок");
	ОперативныеВзаиморасчетыСервер.ОчиститьРегистр("РасчетыСПоставщикамиПланОплат");
	ОперативныеВзаиморасчетыСервер.ОчиститьРегистр("РасчетыСПоставщикамиПланПоставок");
	
	ТаблицаОбъектов = ОперативныеВзаиморасчетыСервер.ПолучитьВсеОбъекты();
	Для Каждого Стр из ТаблицаОбъектов Цикл
		ОсновныеПараметры = ОперативныеВзаиморасчетыСервер.СтруктураПараметровЗаполненияВзаиморасчетов();
		ЗаполнитьЗначенияСвойств(ОсновныеПараметры,Стр);
		ОсновныеПараметры.НачальноеЗаполнение = Истина;
		ОперативныеВзаиморасчетыСервер.ЗаполнитьОперативныеВзаиморасчеты(ОсновныеПараметры);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ИменаРегистров(ТолькоПлановые = Ложь)
	Если НЕ ТолькоПлановые Тогда
		Возврат 
			СтрШаблон("
			|	%1
			|	%2
			|	%3
			|	%4
			|	%5
			|	%6",
			Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОплат.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОтгрузок.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланОплат.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланПоставок.Синоним
			);
	Иначе
		Возврат 
			СтрШаблон("
			|	%1
			|	%2
			|	%3
			|	%4",
			Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОплат.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСКлиентамиПланОтгрузок.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланОплат.Синоним,
			Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПланПоставок.Синоним
			);
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПерезаполнитьПустыеСервер()
	
	ОбъектыРасчетовСервер.ПерезаполнитьПустые();
	
КонецПроцедуры


#КонецОбласти

