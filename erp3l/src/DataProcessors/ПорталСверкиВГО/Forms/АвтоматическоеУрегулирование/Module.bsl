&НаКлиенте
Перем МожноЗакрытьФорму;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Номер;
	
	Объект.ПериодСценария 	= Параметры.ПериодСверки;
	Объект.Сценарий 		= Параметры.Сценарий;
	Объект.Этап 			= Параметры.Этап;
	
	Элементы.Этап.Видимость = ЗначениеЗаполнено(Объект.Этап);
	
	СторонаСверки = Неопределено;
	Организация = Неопределено;
	Контрагент = Неопределено;
	
	Для каждого ЭлементОтбора Из Параметры.Отбор Цикл
		Если ЭлементОтбора.Ключ = "СторонаСверки" Тогда
			СторонаСверки = ЭлементОтбора.Значение;
		ИначеЕсли ЭлементОтбора.Ключ = "Организация" Тогда
			Организация = ЭлементОтбора.Значение;
		ИначеЕсли ЭлементОтбора.Ключ = "Контрагент" Тогда
			Контрагент = ЭлементОтбора.Значение;
		Иначе
			НоваяСтрока = Отбор.Добавить();
			НоваяСтрока.Значение = ЭлементОтбора.Значение;
			НоваяСтрока.Имя = ЭлементОтбора.Ключ;
			НоваяСтрока.Использовать = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если СторонаСверки = Перечисления.СтороныСверкиВГО.Кредитор Тогда
		Если Организация <> Неопределено Тогда
			НоваяСтрока = Отбор.Добавить();
			НоваяСтрока.Значение = Организация;
			НоваяСтрока.Имя = "Кредитор";
			НоваяСтрока.Использовать = Истина;
		КонецЕсли;
		Если Контрагент <> Неопределено Тогда
			НоваяСтрока = Отбор.Добавить();
			НоваяСтрока.Значение = Организация;
			НоваяСтрока.Имя = "Дебитор";
			НоваяСтрока.Использовать = Истина;
		КонецЕсли;
	ИначеЕсли СторонаСверки = Перечисления.СтороныСверкиВГО.Дебитор Тогда
		Если Организация <> Неопределено Тогда
			НоваяСтрока = Отбор.Добавить();
			НоваяСтрока.Значение = Организация;
			НоваяСтрока.Имя = "Дебитор";
			НоваяСтрока.Использовать = Истина;
		КонецЕсли;
		Если Контрагент <> Неопределено Тогда
			НоваяСтрока = Отбор.Добавить();
			НоваяСтрока.Значение = Организация;
			НоваяСтрока.Имя = "Кредитор";
			НоваяСтрока.Использовать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	ТекстОшибки = "";
	АвтоурегулированиеНаСервере(ТекстОшибки);
	Если ТекстОшибки <> "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Во время операции автоурегулирования возникла ошибка: '") + 
			+ Символы.ПС + ТекстОшибки;
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АвтоурегулированиеНаСервере(ТекстОшибки)
	
	Отбор_ = Новый Структура();
	Для каждого СтрОтбор Из Отбор Цикл
		Если СтрОтбор.Использовать Тогда
			Отбор_.Вставить(СтрОтбор.Имя, СтрОтбор.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Параметры_ = Новый Структура("ПериодСценария, Сценарий, Этап, СпособУрегулирования, Отбор");
	Параметры_.ПериодСценария = Объект.ПериодСценария;
	Параметры_.Сценарий = Объект.Сценарий;
	Параметры_.Этап = Объект.Этап;
	Параметры_.СпособУрегулирования = СпособУрегулирования;
	
	Если СпособУрегулирования = Перечисления.СпособыАвтоматическогоУрегулирования.ПоРейтингуКомпаний Тогда
		Параметры_.Вставить(КорректнаяОрганизация);
	КонецЕсли;
	
	Параметры_.Отбор = Отбор_;
	
	мДокументовУрегулирования = СверкаВГОУХ.АвтоматическоеУрегулированиеРасхождений(Параметры_, ТекстОшибки);
	Если ТекстОшибки <> "" Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементМассива Из мДокументовУрегулирования Цикл
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементМассива);
		НоваяСтрока.Выбран = Истина;
	КонецЦикла;
	Элементы.ФормаПровести.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	
	ЛогВыполнения = "";
	ПровестиНаСервере(ЛогВыполнения);	
	Если ЛогВыполнения <> "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Возникли ошибки, при проведении документов:'") + Символы.ПС +
			ЛогВыполнения;
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПровестиНаСервере(ЛогВыполнения)
	
	Для каждого СтрокаДокумент Из ТаблицаДокументов Цикл
		Если СтрокаДокумент.Выбран = Ложь Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			НачатьТранзакцию();
			СтрокаДокумент.ДокументУрегулирования.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение,
				РежимПроведенияДокумента.Неоперативный);
			СтрокаДокумент.Проведен = Истина;
			ЗафиксироватьТранзакцию();
		Исключение
			ЛогВыполнения = ЛогВыполнения + ОписаниеОшибки() + Символы.ПС;
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЦикла;
	
	Если ЛогВыполнения <> "" Тогда
		ЛогВыполнения = Лев(ЛогВыполнения, СтрДлина(ЛогВыполнения)-1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособУрегулированияПриИзменении(Элемент)
	
	Элементы.ФормаСформироватьДокументы.Доступность =  ЗначениеЗаполнено(СпособУрегулирования);
	Если СпособУрегулирования = ПредопределенноеЗначение("Перечисление.СпособыАвтоматическогоУрегулирования.ПоРейтингуКомпаний") Тогда
		Элементы.КорректнаяОрганизация.Видимость = Истина;
	Иначе
		Элементы.КорректнаяОрганизация.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если МожноЗакрытьФорму <> Истина Тогда
      Если Не ЗавершениеРаботы = Истина Тогда
          УдалитьДокументыНаКлиенте();
      Иначе
           Отказ = Истина;
           ТекстПредупреждения = НСтр("ru = 'Необходимо дождаться обработки данных формы, перед закрытием!'");
           ПодключитьОбработчикОжидания("ОбработкаЗакрытияНаКлиенте", 1, Истина);
       КонецЕсли;
   КонецЕсли;
   
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияНаКлиенте() Экспорт
    МожноЗакрытьФорму = Истина;
	УдалитьДокументыНаКлиенте();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДокументыНаКлиенте() Экспорт
	
	Если ТаблицаДокументов.Количество() > 0 Тогда
		мДокументыДляУдаления = ТаблицаДокументов.НайтиСтроки(Новый Структура("Проведен", Ложь));
		УдалитьДокументыНаСервере(мДокументыДляУдаления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьДокументыНаСервере(мДокументыДляУдаления)
	Для Каждого СсылкаДокумент Из мДокументыДляУдаления Цикл
		ОбъектДокумент = СсылкаДокумент.ДокументУрегулирования.ПолучитьОбъект();
		ОбъектДокумент.Удалить();
	КонецЦикла;
КонецПроцедуры

