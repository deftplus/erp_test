
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектРасчета=Параметры.СтруктураКлючевыхРеквизитов;
	
	МакетРасшифровки = Обработки.АналитическийБланк.ПолучитьМакет("МакетРасшифровок");
	
	ОбластьШапка = МакетРасшифровки.ПолучитьОбласть("ШапкаЗаголовок");
	ПолеТабличногоДокумента.Вывести(ОбластьШапка);
	
	ОбластьШапка = МакетРасшифровки.ПолучитьОбласть("ШапкаРасшифровки");
	ОбластьШапка.Параметры.Заполнить(ОбъектРасчета);	
	ПолеТабличногоДокумента.Вывести(ОбластьШапка);
	
	ПолеТабличногоДокумента.Область("ШапкаРасшифровки").Сгруппировать();
	ПолеТабличногоДокумента.ПоказатьУровеньГруппировокСтрок(0);
		
	КэшАналитикПоказателей 	= ПолучитьИзВременногоХранилища(Параметры.КэшАналитикПоказателейАдрес);
	РасшифровкаГруппОтборов = ПолучитьИзВременногоХранилища(Параметры.РасшифровкаГруппОтборовАдрес);
	ТзСвойстваПоказателей   = ПолучитьИзВременногоХранилища(Параметры.ТзСвойстваПоказателейАдрес);

	ИдентификаторСеанса     = Параметры.ИдентификаторСеанса;
	
	СтруктураАналитики = Новый Структура;
			
	ОбластьОтбораАналитики 							= МакетРасшифровки.ПолучитьОбласть("ДопОтборы");
    ОбластьОтбораАналитики.Параметры.ИмяОтбора 		= Нстр("ru = 'Валюта отображения'");
	ОбластьОтбораАналитики.Параметры.ЗначениеОтбора = Параметры.СтруктураКлючевыхРеквизитов.мТекущаяВалюта;	
	ПолеТабличногоДокумента.Вывести(ОбластьОтбораАналитики);	
	
	Для Каждого СтрАналитика Из Параметры.СтруктураРасшифровкиГруппировок Цикл
				
		ОбластьОтбораАналитики 							= МакетРасшифровки.ПолучитьОбласть("ДопОтборы");
        ОбластьОтбораАналитики.Параметры.ИмяОтбора 		= СтрАналитика.Ключ;
		ОбластьОтбораАналитики.Параметры.ЗначениеОтбора = СтрАналитика.Значение;
		
		ПолеТабличногоДокумента.Вывести(ОбластьОтбораАналитики);			
		
	КонецЦикла;	
		
	Если Параметры.ЭтоФормула Тогда
		
		тКэшПоказателейКроссОбластей 	= ПолучитьИзВременногоХранилища(Параметры.КэшПоказателейКроссОбластейАдрес);
		КэшФормулПоказателей    		= ПолучитьИзВременногоХранилища(Параметры.КэшФормулПоказателейАдрес);
	
		тФормулаПредставление 								= КэшФормулПоказателей.Найти(Параметры.РасшифровкаЯчейки.УидФормулы,"УидФормулы");
		
		ОбластьЗначение 									= МакетРасшифровки.ПолучитьОбласть("ОбластьЗначение");
		ОбластьЗначение.Параметры.ЗначениеВыражения 		= Параметры.ЗначениеВыражения;
        ПолеТабличногоДокумента.Вывести(ОбластьЗначение);
		
		ОбластьФормула 										= МакетРасшифровки.ПолучитьОбласть("Формула");
		ОбластьФормула.Параметры.ФормулаВычисления 			= тФормулаПредставление.ТекстФормулыИсходный;
		ПолеТабличногоДокумента.Вывести(ОбластьФормула);
	
		ПолеТабличногоДокумента.Область("ОбластьТекстФормулы").Объединить();
		
		ОбластьШапкаТаблицыРасшифровки 						= МакетРасшифровки.ПолучитьОбласть("ШапкаТаблицыРасшифровки");	
		ПолеТабличногоДокумента.Вывести(ОбластьШапкаТаблицыРасшифровки);

		тОперандыФормулы =  тКэшПоказателейКроссОбластей.Скопировать(Новый Структура("ИмяФормулы",Параметры.РасшифровкаЯчейки.УидФормулы),"Показатель,УидГРуппыОтборов");
		тОперандыФормулы.Свернуть("Показатель,УидГруппыОтборов");
		
		Для Каждого СтрОперанд Из тОперандыФормулы Цикл
			
			нОперанд 					= Операнды.Добавить();
			нОперанд.Ссылка 			= СтрОперанд.Показатель;
			нОперанд.Уид 				= СтрОперанд.УидГруппыОтборов;
			
			ВывестиСтрокуОперанда(ОбъектРасчета,нОперанд,ТзСвойстваПоказателей,РасшифровкаГруппОтборов,Параметры.СтруктураРасшифровкиГруппировок,МакетРасшифровки,КэшАналитикПоказателей);
			
		КонецЦикла;	
		
	Иначе
		
		ОбластьФормула 										= МакетРасшифровки.ПолучитьОбласть("Формула");
		ОбластьФормула.Параметры.ФормулаВычисления 			= Строка(Параметры.ВидОтчета)+"_"+Строка(Параметры.ПоказательКод);
		ПолеТабличногоДокумента.Вывести(ОбластьФормула);
		
		ОбластьШапкаТаблицыРасшифровки 						= МакетРасшифровки.ПолучитьОбласть("ШапкаТаблицыРасшифровки");	
		ПолеТабличногоДокумента.Вывести(ОбластьШапкаТаблицыРасшифровки);
			
		нОперанд 					= Операнды.Добавить();
		нОперанд.Ссылка 			= Параметры.РасшифровкаЯчейки.Ссылка;
		нОперанд.Уид 				= Параметры.РасшифровкаЯчейки.УИД;
		
		ВывестиСтрокуОперанда(ОбъектРасчета,нОперанд,ТзСвойстваПоказателей,РасшифровкаГруппОтборов,Параметры.СтруктураРасшифровкиГруппировок,МакетРасшифровки,КэшАналитикПоказателей);
		
	КонецЕсли;	

		
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуОперанда(тОбъект,СтрОперанда,ТзСвойстваПоказателей,РасшифровкаГруппОтборов,СтруктураРасшифровкиГруппировок,МакетРасшифровки,КэшАналитикПоказателей)
	
	СтруктураНезаполненыхАналитик 	= Новый Структура;
	СтруктураОтбираемыхАналитик 	= Новый Структура;
	СтруктураРасшифровки            = Новый Структура;
	
	Для Каждого СтрГруппировка Из СтруктураРасшифровкиГруппировок Цикл
		СтруктураРасшифровки.Вставить(СтрГруппировка.Ключ,СтрГруппировка.Значение);
	КонецЦикла;	
	
	тПоказатель_  = ТзСвойстваПоказателей.Найти(СтрОперанда.Ссылка,"Ссылка");
	
	АналитическийБланкУХСервер.ПолучитьСвойстваПоказателяСтруктура(ТзСвойстваПоказателей,СтрОперанда,СтруктураРасшифровки,тПоказатель_);	
	АналитическийБланкУХСервер.ПолучитьСтруктуруРасшифровкиБезКонтекста(тОбъект,СтруктураРасшифровки,СтруктураНезаполненыхАналитик,СтруктураОтбираемыхАналитик,РасшифровкаГруппОтборов,тПоказатель_);
	
	
	МассивПоказателей = Новый Массив();
	МассивПоказателей.Добавить(СтрОперанда.Ссылка);	
	СтруктураОтбираемыхАналитик.Вставить("ПоказательОтчета",МассивПоказателей);
	СтруктураОтбираемыхАналитик.Вставить("УидГруппыОтборов",СтрОперанда.Уид);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИдентификаторСеанса",ИдентификаторСеанса);
	
	Если НЕ тПоказатель_.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда 
		ДополнительныеПараметры.Вставить("ЭтоНечисловые",Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(тПоказатель_.ВидИтога) Тогда
		ДополнительныеПараметры.Вставить("ОбщийИтог",тПоказатель_.ВидИтога);
	ИначеЕсли тПоказатель_.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда	
		ДополнительныеПараметры.Вставить("ОбщийИтог",Перечисления.ВидыИтоговПоказателя.Сумма);
    Иначе
		ДополнительныеПараметры.Вставить("ОбщийИтог",Перечисления.ВидыИтоговПоказателя.Максимум);
	КонецЕсли;

	Если Не СтруктураРасшифровки.Свойство("ПериодОтчета") Тогда
		Если СтруктураРасшифровки.Свойство("ПериодС") И СтруктураРасшифровки.Свойство("ПериодПо") Тогда
			Если СтруктураРасшифровки.ПериодС <> СтруктураРасшифровки.ПериодПо Тогда
				СтруктураОтбираемыхАналитик.Вставить("ПериодОтчета",ПериодыУХ.ПолучитьПодчиненныеПериоды(СтруктураРасшифровки.ПериодС,СтруктураРасшифровки.ПериодПо,СтруктураРасшифровки.ПериодС.Периодичность));
			Иначе	
				СтруктураОтбираемыхАналитик.Вставить("ПериодОтчета",СтруктураРасшифровки.ПериодС);
			КонецЕсли;	
		КонецЕсли;	
	Иначе	
		СтруктураОтбираемыхАналитик.Вставить("ПериодОтчета",СтруктураРасшифровки.ПериодОтчета);
	КонецЕсли;
	
	СтруктураОтбираемыхАналитик.Вставить("Валюта",тОбъект.мТекущаяВалюта);
	
	Результат = СводнаяТаблицаУХ.ПолучитьЗначениеПоказателей(СтруктураОтбираемыхАналитик,СтруктураНезаполненыхАналитик,ДополнительныеПараметры);	
	
	Если  НЕ тПоказатель_.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда
		Результат.Колонки.Удалить("Значение");
		Результат.Колонки.ЗначениеНеЧисловое.Имя = "Значение";
	КонецЕсли;	
	
	ОбластьСтрокаФормулы 										= МакетРасшифровки.ПолучитьОбласть("РасшифровкаСтрока");
	ОбластьСтрокаФормулы.Параметры.ИмяОперанда 					= Строка(тПоказатель_.ВидОтчета)+"_"+Строка(тПоказатель_.ПоказательКод);
	ОбластьСтрокаФормулы.Параметры.ЗначениеОперанда 			= ?(Результат.Количество() = 0,0, Результат[0].Значение);
	ОбластьСтрокаФормулы.Параметры.ВидОтчетаОперанда 			= тПоказатель_.ВидОтчета;
	ОбластьСтрокаФормулы.Параметры.РасшифровкаОтборов 			= ПолучитьПредставлениеРасшифровкиОперанда(СтрОперанда.Уид,РасшифровкаГруппОтборов);
	
	РасшифровкаЗначения = Новый Структура;
	РасшифровкаЗначения.Вставить("ВидОтчета",СтруктураОтбираемыхАналитик.ВидОтчета[0]);
	Если СтруктураОтбираемыхАналитик.Свойство("Организация") Тогда
		РасшифровкаЗначения.Вставить("Организация",СтруктураОтбираемыхАналитик.Организация);
	КонецЕсли;	
	Если СтруктураОтбираемыхАналитик.Свойство("Сценарий") Тогда
		РасшифровкаЗначения.Вставить("Сценарий",СтруктураОтбираемыхАналитик.Сценарий);
	КонецЕсли;	
	Если СтруктураОтбираемыхАналитик.Свойство("Проект") Тогда
		РасшифровкаЗначения.Вставить("Проект",СтруктураОтбираемыхАналитик.Проект);
	КонецЕсли;
	Если СтруктураОтбираемыхАналитик.Свойство("ПериодОтчета") Тогда
		РасшифровкаЗначения.Вставить("ПериодОтчета",СтруктураОтбираемыхАналитик.ПериодОтчета);
	КонецЕсли;
	
	РасшифровкаЗначения.Вставить("Значение",?(Результат.Количество() = 0,0, Результат[0].Значение));
	РасшифровкаЗначения.Вставить("ПоказательОтчета",тПоказатель_.Ссылка);
	РасшифровкаЗначения.Вставить("ПоказательОтчетаКод",СокрЛП(тПоказатель_.ПоказательКод));
	
	
	ОбластьСтрокаФормулы.Область(1,3,1,3).Расшифровка           = РасшифровкаЗначения;
	
	СтруктураРасшифровкиОтборов = Новый Структура;
	
	тРасшифровкаГруппОтборов                = РасшифровкаГруппОтборов.Скопировать(Новый Структура("УидГруппыОтборов",СтрОперанда.Уид));
	тРасшифровкаГруппОтборовРаскрытия       = РасшифровкаГруппОтборов.СкопироватьКолонки();		
	РасшифровкаГруппОтборовАдрес      		= ПоместитьВовременноеХранилище(тРасшифровкаГруппОтборов,ЭтаФорма.УникальныйИдентификатор);
	
	СтруктураРасшифровкиОтборов.Вставить("ТзРасшифровкаОтборовАдрес",	РасшифровкаГруппОтборовАдрес);		
	
	ОбластьСтрокаФормулы.Область(1,2,1,2).Расшифровка           = СтруктураРасшифровкиОтборов;
	
	ПолеТабличногоДокумента.Вывести(ОбластьСтрокаФормулы);

	СтруктураАналитики = Новый Структура;
	Для Каждого стрГруппировка ИЗ СтруктураРасшифровкиГруппировок Цикл 
		Для Инд = 1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			тАналитика = КэшАналитикПоказателей.НайтиСтроки(Новый Структура("Показатель,ВидАналитики"+Инд+"Код",СтрОперанда.Ссылка,стрГруппировка.Ключ));
			Если тАналитика.Количество() = 1 Тогда
				СтруктураАналитики.Вставить("Аналитика"+Инд,стрГруппировка.Значение);
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьПредставлениеРасшифровкиОперанда(УидГруппыОтборов,РасшифровкаГруппОтборов)
	
	тПредставление = "";
	
	тГруппа = РасшифровкаГруппОтборов.НайтиСтроки(Новый Структура("УидГруппыОтборов",УидГруппыОтборов));
	
	Для Каждого стрОтбор Из тГруппа Цикл
		
		Если ЗначениеЗаполнено(стрОтбор.ЗначениеОтбора) Тогда
			
			тПредставление = тПредставление+стрОтбор.Поле+" "+стрОтбор.Отбор +" "+стрОтбор.ЗначениеОтбора+Символ(13);
			
		КонецЕсли;	
			
	КонецЦикла;	
	
	Возврат тПредставление;
	
КонецФункции	

&НаСервере
Процедура ЗаполнитьТаблицуДокументовРасшифровки(ОбъектРасчета)
	
	НоваяСтрока=ДокументыРасшифровки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ОбъектРасчета);
	
	МассивПок=Новый Массив;
	МассивПок.Добавить(СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектРасчета.ПоказательОтчета,"Код")));
	
	МассивПоказателей=Новый ФиксированныйМассив(МассивПок);
	
КонецПроцедуры // ЗаполнитьТаблицуДокументовРасшифровки() 

&НаСервере
Процедура ВывестиТабличныйДокументРасшифровки(ОбъектРасчета)
	
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");	
	
	СтруктураРасшифровка=ОбработкаОбъект.ОбработатьРасшифровкуАналитикПоказателяПоПравилуОбработки(ОбъектРасчета,Параметры.ПоказательОтчета, Параметры.СтруктураОтбора);
	
	Если НЕ ПустаяСтрока(СтруктураРасшифровка.ТекстОшибки) Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(СтруктураРасшифровка.ТекстОшибки,,,СтатусСообщения.Информация);
		Отказ=Истина;
		Возврат;
		
	КонецЕсли;
			
	МассивРасшифровок=Новый ФиксированныйМассив(СтруктураРасшифровка.МассивРасшифровок);
	
	ТекстОшибки=СтруктураРасшифровка.ТекстОшибки;
	
	Если СтруктураРасшифровка.Свойство("КодыНаименованияОперандов") Тогда
		
		Для Каждого Строка ИЗ СтруктураРасшифровка.КодыНаименованияОперандов Цикл
			
			НоваяСтрока=КодыНаименованияОперандов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Элементы.ОтображатьНаименования.Видимость=(КодыНаименованияОперандов.Количество()>0);
	
	Если Параметры.ВсегдаПоказыватьБланкРасшифровки ИЛИ (НЕ МассивРасшифровок.Количество()=1) Тогда
		
	ПолеТабличногоДокумента.Вывести(СтруктураРасшифровка.ТабДокумент);
		
	КонецЕсли;
	
КонецПроцедуры // ВывестиТабличныйДокументРасшифровки() 

&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
		
	Если Расшифровка.Свойство("Значение") Тогда
		
		СтандартнаяОбработка=Ложь;
		ДокументыРасшифровки.Очистить();
		
		Если НЕ Расшифровка.Свойство("ПериодОтчета") ИЛИ НЕ  ТипЗнч(Расшифровка.ПериодОтчета) = Тип("СправочникСсылка.Периоды") Тогда	
			ТекстСообщения = НСтр("ru = 'Не указан период отчета. Выберите расшифровку по периоду '");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);		
			Возврат;		
		КонецЕсли;	
		
		Если НЕ Расшифровка.Свойство("Сценарий") ИЛИ НЕ  ТипЗнч(Расшифровка.Сценарий) = Тип("СправочникСсылка.Сценарии")  Тогда	
			ТекстСообщения = НСтр("ru = 'Не указан сценарий. Выберите расшифровку по сценарию '");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);		
			Возврат;		
		КонецЕсли;	
		
		Если НЕ Расшифровка.Свойство("Организация") ИЛИ НЕ  ТипЗнч(Расшифровка.Организация) = Тип("СправочникСсылка.Организации") Тогда	
			ТекстСообщения = НСтр("ru = 'Не указана организация. Выберите расшифровку по организации '");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);		
			Возврат;		
		КонецЕсли;	
		
		Регистратор = ПолучитьРегистратор(Расшифровка);
		
		Если ЗначениеЗаполнено(Регистратор) Тогда
			ОткрытьДокументыРасшифровки(Расшифровка.ПоказательОтчета,Расшифровка.ПоказательОтчетаКод,Расшифровка.ПериодОтчета);
		КонецЕсли;	
		
	ИначеЕсли  Расшифровка.Свойство("ТзРасшифровкаОтборовАдрес") Тогда	
		
		СтандартнаяОбработка=Ложь;
		
		ПараметрыФормы = Новый Структура("Бланк,ГрупповойРежим,ТзРасшифровкаОтборовАдрес,ТЗРасшифровкаОтборовГруппРаскрытия,ОтображатьСуммуВДопВалюте,РежимТолькоПросмотр"
		,Неопределено
		,Ложь
		,Расшифровка.ТзРасшифровкаОтборовАдрес
		,Расшифровка.ТзРасшифровкаОтборовАдрес
		,Ложь
		,Истина);	   	
		
		ОткрытьФорму("Обработка.АналитическийБланк.Форма.ФормаРедактированияОтборов", ПараметрыФормы,,,,,);
		
	Иначе	
		
		СтандартнаяОбработка=Ложь;
		
	КонецЕсли;	
				
КонецПроцедуры

&НаСервере
Функция ПолучитьРегистратор(Расшифровка)
	
	ДокументСсылка	=	ПолучитьЭкземплярОтчета(Расшифровка.Организация,Расшифровка.ПериодОтчета,
	Расшифровка.Сценарий,Расшифровка.ВидОтчета,,Истина,Истина,,?(ЗначениеЗаполнено(Расшифровка.Проект),Расшифровка.Проект,Неопределено));
	
	НоваяСтрока=ДокументыРасшифровки.Добавить();
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда	
		НоваяСтрока.ИмяОбъекта=ДокументСсылка.Метаданные().Имя;	
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ДокументСсылка);
	НоваяСтрока.Ссылка = ДокументСсылка;
		
	Возврат ДокументСсылка;			
	
КонецФункции

&НаСервереБезКонтекста
Функция МногопериодныйЭкземпляр(Ссылка)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	НастраиваемыйОтчет.УправлениеПериодом.ВерсияОрганизационнойСтруктуры.РежимМногопериодныхУОП КАК РежимМногопериодныхУОП
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|ГДЕ
	|	НастраиваемыйОтчет.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Результат.Следующий();
	
	Возврат Результат.РежимМногопериодныхУОП; 	
	
КонецФункции // МногопериодныйЭкземпляр()

&НаКлиенте
Процедура ОткрытьДокументыРасшифровки(тПоказатель,тПоказательКод,тПериод)
	
	Если ДокументыРасшифровки.Количество()>0 Тогда
		
		МассивПоказателей = Новый Массив;
		МассивПоказателей.Добавить(СокрЛП(тПоказательКод));
		
		Для Каждого СтрДокумент ИЗ ДокументыРасшифровки Цикл
			
			СтруктураПараметров=Новый Структура;
			
			Если ЗначениеЗаполнено(СтрДокумент.Ссылка) Тогда
				
				ИмяФормыОбъекта="Документ."+СтрДокумент.ИмяОбъекта+".ФормаОбъекта";
				
				МассивПоказателейСсылка = Новый Массив;
				МассивПоказателейСсылка.Добавить(тПоказатель);
				МассивПоказателейСсылка = Новый ФиксированныйМассив(МассивПоказателейСсылка);
				
				СтруктураПараметров.Вставить("Ключ",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("ДокументКлюч",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("МассивПоказателей",Новый ФиксированныйМассив(МассивПоказателей));
				СтруктураПараметров.Вставить("МассивПоказателейСсылка",МассивПоказателейСсылка);
				СтруктураПараметров.Вставить("мТекущаяВалюта",Параметры.мТекущаяВалюта);
				СтруктураПараметров.Вставить("СтруктураОтбора",СтруктураАналитики);
				СтруктураПараметров.Вставить("ПериодРасшифровки",тПериод);
								
				Если СтрДокумент.ИмяОбъекта="НастраиваемыйОтчет"
					И ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура")
					И (Не МногопериодныйЭкземпляр(СтрДокумент.Ссылка)) Тогда
					
					Форма=ПолучитьФорму(ИмяФормыОбъекта,СтруктураПараметров);
					Форма.Открыть();
					Форма.ОткрытьФормуРаскрытияПоАналитике(тПоказатель,,СтруктураАналитики);
					
				Иначе
					
					Если (НЕ ВладелецФормы=Неопределено) И ВладелецФормы.Объект.Ссылка = СтрДокумент.Ссылка Тогда
						
						ВладелецФормы.ВыделитьОбластиПоказателей(СтруктураПараметров,СтруктураПараметров.ПериодРасшифровки,СтруктураПараметров.СтруктураОтбора);
						ВладелецФормы.Активизировать();
						
					Иначе
						
						ОткрытьФорму(ИмяФормыОбъекта,СтруктураПараметров);		
					КонецЕсли;
					
				КонецЕсли;		
								
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОткрытьДокументыРасшифровки()

&НаСервереБезКонтекста
Функция ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
	ОсновнаяВалюта=Неопределено,ПроверятьНаличие=Истина,СоздаватьНовые=Истина,Комментарий="",Проект=Неопределено)
	
	Возврат Документы.НастраиваемыйОтчет.ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
			ОсновнаяВалюта,ПроверятьНаличие,СоздаватьНовые,Комментарий,Проект);
		
КонецФункции // ПолучитьЭкземплярОтчета() 
