
&НаКлиенте
Процедура ВыбратьОбласть(Команда)
	
 		
	Если НЕ ТипЗнч(ПолеТабличногоДокументаМакет.ТекущаяОбласть) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		ПоказатьПредупреждение(, Нстр("ru = 'Выделенная область не является областью ячеек. Выделите прямоугольную область с показателями.'"));
		Возврат;
	КонецЕсли;			
			
	Если НЕ ПолеТабличногоДокументаМакет.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
		ПоказатьПредупреждение(, Нстр("ru = 'Выделенная область не является таблицей. Выделите прямоугольную область с показателями.'"));
		Возврат;
	КонецЕсли;	
	
	ЕстьПоказатели = Ложь;
	
	тОбласть = ПолеТабличногоДокументаМакет.ТекущаяОбласть;
	Для ИндСтроки = тОбласть.Верх По тОбласть.Низ Цикл
		Для ИндКолонки = тОбласть.Лево По тОбласть.Право Цикл	
			ОбластьЯчейки = ПолеТабличногоДокументаМакет.Область(ИндСтроки,ИндКолонки,ИндСтроки,ИндКолонки);
			Если ТипЗнч(ОбластьЯчейки.Расшифровка) = Тип("Структура") Тогда
				ЕстьПоказатели = Истина;
				Прервать;
			КонецЕсли;		
		КонецЦикла;
	КонецЦикла;	
	
	Если НЕ ЕстьПоказатели Тогда
		ПоказатьПредупреждение(, Нстр("ru = 'Выделенная область не содержит показатели. Выделите прямоугольную область(таблицу) с показателями.'"));
	Иначе				
		Закрыть(ПодготовитьПарамтеры(тОбласть.Имя,СвязаннаяОбластьБланк));	
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Функция ПодготовитьПарамтеры(ИмяОбласти,СвязаннаяОбластьБланк)
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ИмяОбласти",ИмяОбласти);
	СтруктураПараметров.Вставить("СвязаннаяОбластьБланк",СвязаннаяОбластьБланк);
	СтруктураПараметров.Вставить("ТекущийМакетАдрес",ПоместитьВоВременноеХранилище(ПолеТабличногоДокументаМакет,Новый УникальныйИдентификатор));

	Возврат СтруктураПараметров;
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийБланк                  =  Параметры.ТекущийБланк;
	ТекущийМакетАдрес             =  Параметры.ТекущийМакетАдрес;
	СвязаннаяОбластьБланк         =  Параметры.СвязаннаяОбластьБланк;
	
	СвязаннаяОбластьПредставление =  Параметры.СвязаннаяОбластьПредставление;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	БланкПриИзменении(Неопределено);	
	
КонецПроцедуры

&НаКлиенте
Процедура БланкПриИзменении(Элемент)
	
	ОтобразитьМакетБланка();
	
	//Выделим текущую связанную область, если есть
	Если ЗначениеЗаполнено(СвязаннаяОбластьПредставление) Тогда
		 МассивВыделенныхОбластей = Новый Массив;
		 МассивВыделенныхОбластей.Добавить(ПолеТабличногоДокументаМакет.Область(СвязаннаяОбластьПредставление));
		 Элементы.ПолеТабличногоДокументаМакет.УстановитьВыделенныеОбласти(МассивВыделенныхОбластей);
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ПолеТабличногоДокументаМакет;

КонецПроцедуры

&НаСервере
Процедура ОтобразитьМакетБланка()
	
	ПолеТабличногоДокументаМакет.Очистить();
	
	Если СвязаннаяОбластьБланк = ТекущийБланк Тогда
		
		ПолеТабличногоДокументаМакет.Вывести(ПолучитьИзВременногоХранилища(ТекущийМакетАдрес));
		
	Иначе	
		
		текНаборЗаписей = РегистрыСведений.НастройкиАналитическихБланков.СоздатьНаборЗаписей();
		текНаборЗаписей.Отбор.Бланк.Установить(СвязаннаяОбластьБланк);
		текНаборЗаписей.Прочитать();
		Если  текНаборЗаписей.Количество() =1 Тогда			
			ЗначениеСохраняемойНастройки = текНаборЗаписей[0].ХранилищеДополнительныхНастроек.Получить();	
			Если  ЗначениеСохраняемойНастройки.Свойство("ТабДокМакет") Тогда		
				ПолеТабличногоДокументаМакет.Вывести(ЗначениеСохраняемойНастройки.ТабДокМакет);
			КонецЕсли;
			Если  ЗначениеСохраняемойНастройки.Свойство("ФиксацияСверху") Тогда		
				ПолеТабличногоДокументаМакет.ФиксацияСверху = ЗначениеСохраняемойНастройки.ФиксацияСверху;
			КонецЕсли;
			Если  ЗначениеСохраняемойНастройки.Свойство("ФиксацияСлева") Тогда		
				ПолеТабличногоДокументаМакет.ФиксацияСлева = ЗначениеСохраняемойНастройки.ФиксацияСлева;
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;
	
	//Отобразим скрытые строки, если есть.
	Для ИндСтроки = 1 По ПолеТабличногоДокументаМакет.ВысотаТаблицы Цикл
		тОбластьСтроки = ПолеТабличногоДокументаМакет.Область(ИндСтроки,0,ИндСтроки,0);
		Если НЕ  тОбластьСтроки.Видимость  Тогда
			тОбластьСтроки.Видимость = Истина;
		КонецЕсли;		                
	КонецЦикла;	
		
КонецПроцедуры


