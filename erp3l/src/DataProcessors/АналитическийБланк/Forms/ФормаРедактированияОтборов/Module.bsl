
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТзРасшифровкаОтборовЭталон  		= ПолучитьИзВременногоХранилища(Параметры.ТзРасшифровкаОтборовАдрес);
	ТЗРасшифровкаОтборовГруппРаскрытия  = ПолучитьИзВременногоХранилища(Параметры.ТЗРасшифровкаОтборовГруппРаскрытия);
	ТзРасшифровкаОтборовЭталон.Сортировать("ПорядокОтбора,ПолеКод");
	СуммаВДопВалюте           			= Параметры.ОтображатьСуммуВДопВалюте;
	
	Элементы.СуммаВДопВалюте.Доступность = НЕ Параметры.РежимТолькоПросмотр;
	
	Если  Параметры.ОтображатьСуммуВДопВалюте = Неопределено Тогда
		Элементы.СуммаВДопВалюте.Видимость = Ложь;
	КонецЕсли;	
	
	ТзПараметрыАдрес =  Параметры.ТзПараметрыАдрес;
	ГрупповойРежим   =  Параметры.ГрупповойРежим;

	ЭтаФорма.Заголовок = ?(ГрупповойРежим,Нстр("ru = 'Групповое редактирование отборов'", ОбщегоНазначения.КодОсновногоЯзыка()), Нстр("ru = 'Настройка отбора значений показателей'", ОбщегоНазначения.КодОсновногоЯзыка()) );      
		
	ПериодЗаблокирован = Ложь;
		
	Для Каждого Стр Из  ТзРасшифровкаОтборовЭталон Цикл	
		
		нСтр = ПараметрыОтбора.Добавить();
		ЗаполнитьЗначенияСвойств(Нстр,Стр);	
		
		нСтр.ОтборПредставление = АналитическийБланкГенерацияМакетаУХСервер.ПолучитьПредставлениеОтбора(Стр.Отбор);
		нСтр.ПолеПредставление 	= АналитическийБланкГенерацияМакетаУХСервер.ПолучитьПредставлениеПоля(Стр.Поле);
				
		нСтр.Использовать = Не ГрупповойРежим;	
		нСтр.ЗначениеОтбора = ?(НЕ ЗначениеЗаполнено(Стр.ЗначениеОтбораСтрока),"",ЗначениеИзСтрокиВнутр(Стр.ЗначениеОтбораСтрока));
		
		ОтборРаcкрытия = ТЗРасшифровкаОтборовГруппРаскрытия.НайтиСтроки(Новый Структура("ПолеКод",Стр.ПолеКод));
		
		ТекСубконто =  ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоКоду(нСтр.ПолеКод);
		Если ЗначениеЗаполнено(ТекСубконто) Тогда
			нСтр.ПолеСсылка  = ТекСубконто;
		КонецЕсли;	
			
		Если  ПериодЗаблокирован Тогда
			Если  Стр.ПолеКод = "ПериодС" Тогда
				нСтр.Отбор = Нстр("ru = 'Период начала со сдвигом'");
				нСтр.ЗначениеОтбора = ?(НЕ ЗначениеЗаполнено(Стр.ЗначениеОтбораСтрока),0,ЗначениеИзСтрокиВнутр(Стр.ЗначениеОтбораСтрока));
				Продолжить;
			КонецЕсли;	
			Если  Стр.ПолеКод = "ПериодПо" Тогда
				нСтр.Отбор = Нстр("ru = 'Период окончания со сдвигом'");
				нСтр.Заблокирован = Истина;
				нСтр.ЗначениеОтбора = ?(НЕ ЗначениеЗаполнено(Стр.ЗначениеОтбораСтрока),0,ЗначениеИзСтрокиВнутр(Стр.ЗначениеОтбораСтрока));
				Продолжить;
			КонецЕсли;		
		КонецЕсли;
		
		Если  Стр.ПолеКод = "ПериодС" ИЛИ Стр.ПолеКод = "ПериодПо" Тогда
			  Продолжить;
		КонецЕсли;
		
		Если ОтборРаcкрытия.Количество() > 0 Тогда
			Если ГрупповойРежим Тогда
				нСтр.Заблокирован = Истина;
				ПараметрыОтбора.Удалить(нСтр);
			Иначе	
				нСтр.Заблокирован = Истина;
                ЗаполнитьЗначенияСвойств(Нстр,ОтборРаcкрытия[0]);	
				нСтр.ЗначениеОтбора = ?(НЕ ЗначениеЗаполнено(ОтборРаcкрытия[0].ЗначениеОтбораСтрока),"",ЗначениеИзСтрокиВнутр(ОтборРаcкрытия[0].ЗначениеОтбораСтрока));
			КонецЕсли;				
		КонецЕсли;	
				
	КонецЦикла;	
	
	Если Параметры.РежимТолькоПросмотр Тогда
		Для Каждого Стр Из  ПараметрыОтбора Цикл
			Стр.Заблокирован = Истина;
		КонецЦикла;		 
	КонецЕсли;	
		
	Элементы.ПараметрыОтбораИспользовать.Видимость = ГрупповойРежим;	
	Элементы.ФормаПрименить.Видимость 	=	НЕ Параметры.РежимТолькоПросмотр;
    Элементы.ФормаОтмена.Видимость 		= 	НЕ Параметры.РежимТолькоПросмотр;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Применить(Команда)
	
	АдресРезультатаРедактирования = ПодготовитьПараметрыНаСервере();
	Закрыть(Новый Структура("АдресРезультатаРедактирования",АдресРезультатаРедактирования));
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОтбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	АналитическийБланкУХКлиент.ПараметрыОтбораВыбор(Элементы,Элемент,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОтбораПриИзменении(Элемент)
	
	Если ПериодЗаблокирован Тогда
		
		Если Элемент.ТекущиеДанные.ПолеКод = "ПериодС" Тогда	
			ПараметрыОтбора[1].ЗначениеОтбора = Элемент.ТекущиеДанные.ЗначениеОтбора;	
		КонецЕсли;	
		
	КонецЕсли;
		
КонецПроцедуры


#КонецОбласти

&НаСервере
Функция ПодготовитьПараметрыНаСервере()
	
   СтруктураВозврата = Новый Структура;
   СтруктураВозврата.Вставить("ОтборыГруппы",ПоместитьВоВременноеХранилище(ПараметрыОтбора.Выгрузить(),Новый УникальныйИдентификатор));
   СтруктураВозврата.Вставить("ОтображатьСуммуВДопВалюте",СуммаВДопВалюте);
   
   Возврат СтруктураВозврата;
     
КонецФункции

&НаСервереБезКонтекста
Функция  ПоддерживаетИерархию(ТипСтрока)
	
	ТипСсылки = СтрРазделить(ТипСтрока,"|");
	
	Для Каждого ТипСтрока_ Из ТипСсылки Цикл
		
		ТипСсылка = Новый(ТипСтрока_);
		
		Если Лев(ТипСтрока_,10) = "Справочник" И  ТипСсылка.Метаданные().Иерархический  Тогда		
			Возврат Истина			
		КонецЕсли;	
			
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции	

&НаКлиенте
Процедура ПараметрыОтбораОтборПредставлениеПриИзменении(Элемент)
	
	АналитическийБланкУХКлиент.ПараметрыОтбораОтборПриИзменении(Элемент,Элементы);

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОтбораОтборПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитическийБланкУХКлиент.ЗаполнитьСписокТиповОтбора(Элементы.ПараметрыОтбораОтбор.СписокВыбора,Элемент.СписокВыбора,Элементы.ПараметрыОтбора.ТекущиеДанные,ПериодЗаблокирован,ПоддерживаетИерархию(Элементы.ПараметрыОтбора.ТекущиеДанные.ТипЗначенияСтрока));

КонецПроцедуры

