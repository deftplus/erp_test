
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимТрассировки = Константы.ИспользоватьРежимТрассировкиПересчетаПоказателей.Получить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Рассчитать(Команда)
	
	ОбщееВремяПолученияПараметрики = 0;
	ОбщееВремяРасчетов = 0;
	ОбщееВремяЗаписиВерсий = 0;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если РассчитатьДокументНаСервере() Тогда
		Если ОткрыватьДокументПослеРасчета Тогда
			ПоказатьЗначение(,ЭкземплярОтчета);
		КонецЕсли;
	КонецЕсли;	
	
	ОтобразитьПротокол();
	
КонецПроцедуры

&НаСервере
Функция РассчитатьДокументНаСервере()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	АдресТаблицыСобытий = "";
	НомерТранзакции	= 1;
	
	ОбработкаОбъект				= РеквизитФормыВЗначение("Объект");	
	ЭкземплярОтчетаОбъект		= ЭкземплярОтчета.ПолучитьОбъект(); 	
	ОбъектРасчета				= ЭкземплярОтчетаОбъект.ПодготовитьСтруктуруПеременныхДляРасчета();
		
	Если ОчищатьВерсии Тогда
		ОбработкаОбъект.ОчиститьСтарыеДанные(ОбъектРасчета,Истина,Ложь,Ложь);
	КонецЕсли;
	Если ОбновлятьПараметрику Тогда
		ОбработкаОбъект.ОчиститьСтарыеДанные(ОбъектРасчета,Ложь,Истина,Ложь);
		ОбработкаОбъект.ПолучитьТаблицуРасчетаПоказателейПоПравилуРасчета(ОбъектРасчета.ПравилоОбработки);
	КонецЕсли;
	
	// Расчет показателей
	ПротоколируемыеСобытияУХ.Начать();
	Результат = ОбработкаОбъект.ЗаполнитьДанныеПоПериодам(ОбъектРасчета);
	
	// Покажем протокол, если необходимо
	Протокол = ПротоколируемыеСобытияУХ.Завершить("Рассчитать",,,,Ложь);
	Если Протокол <> Неопределено Тогда
		Если Протокол.Количество() Тогда
			АдресТаблицыСобытий = ПоместитьВоВременноеХранилище(Протокол, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Результат Тогда		
		Возврат Ложь;		
	КонецЕсли;
	
	// Запись показателей
	ПротоколируемыеСобытияУХ.Начать();
	ОбработкаОбъект.Регистратор = ЭкземплярОтчета;
	ОбработкаОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиПоПравилуОбработки;
	Результат = ОбработкаОбъект.ЗаписатьЛогИзмененныхПоказателей();
	
	// Покажем протокол, если необходимо
	Протокол = ПротоколируемыеСобытияУХ.Завершить("Рассчитать",,,,Ложь);
	Если Протокол <> Неопределено Тогда
		Если Протокол.Количество() Тогда
			АдресТаблицыСобытий = ПоместитьВоВременноеХранилище(Протокол, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Результат Тогда
		Возврат Ложь;		
	КонецЕсли;
	
	ОбщееВремяПолученияПараметрики 	= ОбработкаОбъект.ОбщееВремяПолученияПараметрики;
	ОбщееВремяРасчетов 				= ОбработкаОбъект.ОбщееВремяРасчетов;
	ОбщееВремяЗаписиВерсий 			= ОбработкаОбъект.ОбщееВремяЗаписиВерсий;

	Возврат Результат;
			
КонецФункции
	
&НаКлиенте
Процедура ОтобразитьПротокол()
	
	// Отобразим прокол
	Если ЗначениеЗаполнено(АдресТаблицыСобытий) Тогда
		ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма",Новый Структура("АдресТаблицыСобытий",АдресТаблицыСобытий));
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтарыеДанные(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСтарыеДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСтарыеДанныеНаСервере()
	
	ЭкземплярОтчетаОбъект 	= ЭкземплярОтчета.ПолучитьОбъект(); 	
	ОбъектРасчета 			= ЭкземплярОтчетаОбъект.ПодготовитьСтруктуруПеременныхДляРасчета();
	
	ОбработкаОбъект			= РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОчиститьСтарыеДанные(ОбъектРасчета,Истина,Истина,Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура РежимТрассировкиПриИзменении(Элемент)
	РежимТрассировкиПриИзмененииСервер(РежимТрассировки);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РежимТрассировкиПриИзмененииСервер(ТекЗначение)	
	Константы.ИспользоватьРежимТрассировкиПересчетаПоказателей.Установить(ТекЗначение);	
КонецПроцедуры

#КонецОбласти





