
&НаСервере
Процедура ЗапускНаСервере()                                       
	
	Если ЗначениеЗаполнено(Объект.СП_Сообщение) тогда 
		
		текПравило=Справочники.инт_СоответствиеОбъектовЗначениямИнтеграции.ПустаяСсылка();
		Если ЗначениеЗаполнено(Объект.Правило) тогда
			текПравило=Объект.Правило;	
		КонецЕсли;	
		
		
		МассивКРаспознаванию=Новый Массив();
		МассивКРаспознаванию.Добавить(Объект.СП_Сообщение);
		
		СП_РаботаССообщениями.ллл_ВыполнитьОбработкуВходящихСообщений(истина,МассивКРаспознаванию,истина,текПравило);
		
		
		//инт_ПроцедурыПоискаСоответствийОбмена.ОбработатьСП_Сообщение(Объект.СП_Сообщение.ПолучитьОбъект(),текПравило,истина);
		//Если значениеЗаполнено(Объект.СП_Сообщение.СсылкаНаОбъект) тогда
		//			инт_ПроцедурыПоискаСоответствийОбмена.ОбработкаСозданногоОбъекта(Объект.СП_Сообщение.СсылкаНаОбъект,Объект.СП_Сообщение.РезультатВ1С,
		//			Объект.СП_Сообщение.Событие, Объект.СП_Сообщение.текстОшибки);
		//конецЕсли; 
		
		
		

		
	иначе	
		для каждого стр из Объект.ИменаОбъектов цикл  
			
			//Если по одному объекту есть несколько сообщений, окучиваем самое старшее по коду справочника
			ТекПравило=стр.Правило;
			Запрос=Новый Запрос();
			Запрос.Текст="ВЫБРАТЬ
			             |	СП_СообщенияОбмена.Ссылка КАК Ссылка,
			             |	СП_СообщенияОбмена.СсылкаНаОбъект КАК СсылкаНаОбъект
			             |ПОМЕСТИТЬ ВТ_1
			             |ИЗ
			             |	Справочник.СП_СообщенияОбмена КАК СП_СообщенияОбмена
			             |ГДЕ
			             |	СП_СообщенияОбмена.ИмяОбъекта = &ИмяОбъекта
			             |	И СП_СообщенияОбмена.ТипСообщения = &ТипСообщения
			             |	И (СП_СообщенияОбмена.СостояниеСообщения <> &СостояниеСообщения
			             |			ИЛИ &Повторить)
			             |	И (СП_СообщенияОбмена.ДатаВремяСообщения >= &Дата
			             |			ИЛИ &НеИскатьДату)
			             |	И СП_СообщенияОбмена.ПометкаУдаления = ЛОЖЬ
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ВТ_1.Ссылка КАК Ссылка,
			             |	ВТ_1.СсылкаНаОбъект КАК СсылкаНаОбъект
			             |ПОМЕСТИТЬ ВТ_СообщенияГдеНеРаспознанОбъект
			             |ИЗ
			             |	ВТ_1 КАК ВТ_1
			             |ГДЕ
			             |	ВТ_1.СсылкаНаОбъект = НЕОПРЕДЕЛЕНО
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ВТ_1.Ссылка КАК Ссылка,
			             |	ВТ_1.СсылкаНаОбъект КАК СсылкаНаОбъект
			             |ПОМЕСТИТЬ ВТ_СообщенияГдеРаспознанОбъект
			             |ИЗ
			             |	ВТ_1 КАК ВТ_1
			             |ГДЕ
			             |	ВТ_1.СсылкаНаОбъект <> НЕОПРЕДЕЛЕНО
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ВТ_СообщенияГдеРаспознанОбъект.СсылкаНаОбъект КАК СсылкаНаОбъект,
			             |	МАКСИМУМ(ВТ_СообщенияГдеРаспознанОбъект.Ссылка.Код) КАК СсылкаКод
			             |ПОМЕСТИТЬ ВТ_МаксимальныеКодыСообщенийОДногоИТогоЖеОбъекта
			             |ИЗ
			             |	ВТ_СообщенияГдеРаспознанОбъект КАК ВТ_СообщенияГдеРаспознанОбъект
			             |
			             |СГРУППИРОВАТЬ ПО
			             |	ВТ_СообщенияГдеРаспознанОбъект.СсылкаНаОбъект
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ВТ_СообщенияГдеНеРаспознанОбъект.Ссылка КАК Ссылка
			             |ИЗ
			             |	ВТ_СообщенияГдеНеРаспознанОбъект КАК ВТ_СообщенияГдеНеРаспознанОбъект
			             |
			             |ОБЪЕДИНИТЬ ВСЕ
			             |
			             |ВЫБРАТЬ
			             |	ВТ_СообщенияГдеРаспознанОбъект.Ссылка
			             |ИЗ
			             |	ВТ_СообщенияГдеРаспознанОбъект КАК ВТ_СообщенияГдеРаспознанОбъект
			             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксимальныеКодыСообщенийОДногоИТогоЖеОбъекта КАК ВТ_МаксимальныеКодыСообщенийОДногоИТогоЖеОбъекта
			             |		ПО ВТ_СообщенияГдеРаспознанОбъект.Ссылка.Код = ВТ_МаксимальныеКодыСообщенийОДногоИТогоЖеОбъекта.СсылкаКод";
			Запрос.УстановитьПараметр("ИмяОбъекта",стр.ИмяОбъекта);
			Запрос.УстановитьПараметр("ТипСОобщения",Перечисления.СП_ТипыСообщений.Входящее);
			Запрос.УстановитьПараметр("СостояниеСообщения",Перечисления.СП_СостоянияСообщений.Загружено);
			Запрос.УстановитьПараметр("Повторить",стр.ПовторитьРанееЗагруженные);  
			Запрос.УстановитьПараметр("Дата",стр.НачинаяСДаты);
			Запрос.УстановитьПараметр("НеИскатьДату",не значениеЗаполнено(стр.НачинаяСДаты));
			Результат=Запрос.Выполнить();
			Выборка=Результат.Выбрать(); 
			МассивКРаспознаванию=Новый Массив();
			Пока ВЫборка.Следующий() цикл	 
					
				МассивКРаспознаванию.Добавить(ВЫборка.Ссылка);
				
				
				
				//Если стр.ВыводитьОтладочныеСообщения тогда
				//	инт_ПроцедурыПоискаСоответствийОбмена.ОбработатьСП_Сообщение(Выборка.Ссылка.ПолучитьОбъект(),ТекПравило,стр.ВыводитьОтладочныеСообщения); 
				//	Если значениеЗаполнено(Выборка.Ссылка.СсылкаНаОбъект) тогда
				//	инт_ПроцедурыПоискаСоответствийОбмена.ОбработкаСозданногоОбъекта(Выборка.Ссылка.СсылкаНаОбъект,Выборка.Ссылка.РезультатВ1С,Выборка.Ссылка.Событие,ВЫборка.Ссылка.текстОшибки);
				//	конецЕсли;
				//иначе
				//    инт_ПроцедурыПоискаСоответствийОбмена.ОбработатьСП_СообщениеВФоне(Выборка.Ссылка,текПравило,ложь);
				//КонецЕсли;
			КонецЦикла;
			
			СП_РаботаССообщениями.ллл_ВыполнитьОбработкуВходящихСообщений(истина,МассивКРаспознаванию,стр.ВыводитьОтладочныеСообщения, текПравило);
			
		КонецЦикла;
	КонецЕсли;

	
КонецПроцедуры







&НаКлиенте
Процедура Запуск(Команда)
	ЗапускНаСервере();
КонецПроцедуры   








&НаСервере

Функция ОпределитьНастройкиСоответствияДляПрочитаннойСтруктуры(РаспознаннаяСтруктура)
	перем head;
	перем Object_type;                                
	перем subtype;  
	перем МетаданныеВерхнегоУровня;                                                      
	
	
	
	МетаданныеВерхнегоУровня=неопределено;  
	
	УспехОперации=истина;
	ТекстОшибки="";
	head=инт_JSONОбмен.ПолучитьСтруктуруHeadРаспознаннойСтруктурыФайлаJSON(РаспознаннаяСтруктура,ТекстОшибки,УспехОперации);
	
	Если не УспехОперации  тогда возврат(неопределено); конецЕсли;
	
	МетаданныеВерхнегоУровня=инт_JSONОбмен.ПолучитьМетаданныеВерхнегоУровня(head,ТекстОшибки,Успехоперации);
	
	Если не УспехОперации  тогда возврат(неопределено); конецЕсли;
	
	МетаданныеВторогоУровня=инт_JSONОбмен.ПолучитьМетаданныеВторогоУровня(МетаданныеВерхнегоУровня,head,ТекстОшибки,Успехоперации);

	Если не УспехОперации  тогда возврат(неопределено); конецЕсли;

	СтрокаДляПоискаНастроекСоответствияДляПрочитаннойСтруктуры=инт_JSONОбмен.ПолучитьСтрокуПоискаНастроекПоМетаданным(МетаданныеВторогоУровня);
	
	ТекстОшибки="";
	возврат(инт_ПроцедурыПоискаСоответствийОбмена.ПолучитьСправочникНастроекСоответствияПОИмениМетаданных(
	СтрокаДляПоискаНастроекСоответствияДляПрочитаннойСтруктуры, ТекстОшибки, Успехоперации));
	
	                                                                                                    
КонецФункции 

