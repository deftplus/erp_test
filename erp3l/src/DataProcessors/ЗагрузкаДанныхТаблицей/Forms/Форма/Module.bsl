
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//СписокКолонок - Список значений
	//(колонки нумеруются по порядку, представление значения - представление колонки, 
	//Значение - тип значения для преобразования)
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокФормы) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.ЗаголовокФормы;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокКнопкиЗагрузить) Тогда
		Элементы.Загрузить.Заголовок = Параметры.ЗаголовокКнопкиЗагрузить;
	КонецЕсли;
		
	Если ЭтоАдресВременногоХранилища(Параметры.АдресТаблицы) Тогда
		
		ТаблицаЗагрузки = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы);
		ВывестиВТабличныйДокумент(ТаблицаЗагрузки);
		АдресТаблицы = ПоместитьВоВременноеХранилище(ТаблицаЗагрузки, УникальныйИдентификатор);
		
	КонецЕсли;
	
	Параметры.Свойство("КэшируемыеЗначения", ЭтотОбъект.КэшируемыеЗначения);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиВТабличныйДокумент(Знач ТаблицаЗагрузки)
	
	Перем НомераКолонокДат, НомерКолонки, НомерСтроки, ОбластьЗаголовка, ОбластьЗаполнения, ОписаниеКолонки, СтрокаТаблицы, ТипДата, ЧислоКолонок, ЧислоСтрок;
	
	ЧислоКолонок = ТаблицаЗагрузки.Колонки.Количество();
	ЧислоСтрок = ТаблицаЗагрузки.Количество();
	
	НомераКолонокДат = Новый Массив;
	ТипДата = Тип("Дата");
	Для НомерКолонки = 1 По ЧислоКолонок Цикл
		
		ОписаниеКолонки = ТаблицаЗагрузки.Колонки.Получить(НомерКолонки-1);
		ТабличныйДокумент.Область(1, НомерКолонки).Текст = ?(ОписаниеКолонки.Заголовок = "", ОписаниеКолонки.Имя, ОписаниеКолонки.Заголовок);
		Если ЗначениеЗаполнено(ОписаниеКолонки.Ширина) Тогда
			ТабличныйДокумент.Область(,НомерКолонки,,НомерКолонки).ШиринаКолонки = ОписаниеКолонки.Ширина;
		Иначе	
			ТабличныйДокумент.Область(,НомерКолонки,,НомерКолонки).ШиринаКолонки = 20;
		КонецЕсли;
		
		Если ОписаниеКолонки.ТипЗначения.СодержитТип(ТипДата) Тогда
			НомераКолонокДат.Добавить(НомерКолонки);
		КонецЕсли;
		
	КонецЦикла;
	
	Для НомерСтроки = 1 По ЧислоСтрок Цикл	
		
		СтрокаТаблицы = ТаблицаЗагрузки[НомерСтроки-1];
		Для НомерКолонки = 1 По ЧислоКолонок Цикл				
			ОбластьЗаполнения = ТабличныйДокумент.Область(НомерСтроки + 1, НомерКолонки);
			Если НомераКолонокДат.Найти(НомерКолонки) = Неопределено Тогда
				ОбластьЗаполнения.Текст = СтрокаТаблицы[НомерКолонки - 1];
			Иначе
				ОбластьЗаполнения.Текст = Формат(СтрокаТаблицы[НомерКолонки - 1], "ДФ=dd.MM.yyyy");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбластьЗаголовка = ТабличныйДокумент.Область(1, 1, 1, ЧислоКолонок);
	ОбластьЗаголовка.ЦветФона = ЦветаСтиля.ЦветФонаТолькоПросмотр;
	ОбластьЗаголовка.Шрифт = ШрифтыСтиля.ШрифтВажнойНадписи;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	АдресДанныхТаблицы = ПолучитьТаблицуНаСервере();
	Оповестить("ЗагрузитьДанныеИзТаблицы", АдресДанныхТаблицы, ЭтаФорма.ВладелецФормы);
	
	Закрыть(АдресДанныхТаблицы);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуНаСервере()

	ОбработкаЗагрузки = РеквизитФормыВЗначение("Объект");
	СтарыйГрафик = ПолучитьИзВременногоХранилища(АдресТаблицы);
	
	Если ЗагрузкаТекстом Тогда
		ЗагрузитьТабДок(ЭтотОбъект.ТабличныйДокумент, ЭтотОбъект.ТекстовыйДокумент);
	КонецЕсли;
	
	ТаблицаДанных = ОбработкаЗагрузки.ПолучитьДанныеТаблицы(ТабличныйДокумент, СтарыйГрафик, ЭтотОбъект.КэшируемыеЗначения);
	
	ДанныеГрафика = Новый Структура("ТаблицаДанных,ПараметрыТаблицы,КэшируемыеЗначения", 
					ТаблицаДанных, Параметры.ПараметрыТаблицы, ЭтотОбъект.КэшируемыеЗначения);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеГрафика, УникальныйИдентификатор);

КонецФункции

&НаКлиенте
Процедура ИзменитьТипЗагрузки(Команда)
	
	ЗагрузкаТекстом = Не ЗагрузкаТекстом;
	Попытка
		ПреобразоватьВТип();
	Исключение
		Сообщить(ОписаниеОшибки());
		ЗагрузкаТекстом = Не ЗагрузкаТекстом;
	КонецПопытки;
	
	УправлениеФормой(ЭтотОбъект);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Если Форма.ЗагрузкаТекстом Тогда
		Элементы.ГруппаЗагрузка.ТекущаяСтраница = Элементы.ГруппаТекст;
		Элементы.ФормаТипЗагрузки.Заголовок = Элементы.ГруппаТаблица.Заголовок;
	Иначе	
		Элементы.ГруппаЗагрузка.ТекущаяСтраница = Элементы.ГруппаТаблица;
		Элементы.ФормаТипЗагрузки.Заголовок = Элементы.ГруппаТекст.Заголовок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПреобразоватьВТип()

	Если ЗагрузкаТекстом Тогда
		
		//Поток = Новый ПотокВПамяти;
		Поток = ПолучитьИмяВременногоФайла("txt");
		ТабличныйДокумент.Записать(Поток, ТипФайлаТабличногоДокумента.TXT); 
		ТекстовыйДокумент.Прочитать(Поток);
		//Поток.Закрыть();
		
		УдалитьФайлы(Поток);
	
	Иначе 
		
		ЗагрузитьТабДок(ТабличныйДокумент, ТекстовыйДокумент);
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьТабДок(ТабличныйДокумент, ТекстовыйДокумент)
	
	//Поток = Новый ПотокВПамяти;
	Поток = ПолучитьИмяВременногоФайла("txt");
	ТекстовыйДокумент.Записать(Поток); 
	
	ЧтениеФайла = Новый ЧтениеТекста(Поток);
	ТабличныйДокумент.Очистить();
	НомерСтроки = 1;
	
	СтрокаТаб = ЧтениеФайла.ПрочитатьСтроку();
	Разделитель = Символы.Таб;
	Если СтрРазделить(СтрокаТаб, ";").Количество() > 2 Тогда
		Разделитель = ";";	
	КонецЕсли;
	
	Пока Истина Цикл
	
		Если СтрокаТаб = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Значения = СтрРазделить(СтрокаТаб, Разделитель);
		Для й = 1 По Значения.Количество() Цикл
			ТабличныйДокумент.Область(НомерСтроки, й).Текст = СокрЛП(Значения[й-1]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаТаб = ЧтениеФайла.ПрочитатьСтроку();
	
	КонецЦикла;
	ЧтениеФайла.Закрыть();
	
	//ТабличныйДокумент.Прочитать(Поток, );
	УдалитьФайлы(Поток);
	//Поток.Закрыть();
	
КонецПроцедуры
