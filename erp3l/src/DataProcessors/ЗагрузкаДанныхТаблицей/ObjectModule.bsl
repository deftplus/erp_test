#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение)
	
	ШаблонТекста = НСтр("ru='Строка №%1 колонка ""%2"" - ошибка преобразования значения ""%3""
						|Строка не загружена'");
	Текст = СтрШаблон(ШаблонТекста, НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	
КонецПроцедуры

Функция ТекстВДату(Знач СтроковоеЗначение, НомерСтроки, ИмяКолонки, Разделитель = ".") Экспорт
	
	Цифры = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтроковоеЗначение,Разделитель);
	Попытка
		Результат = СокрЛП(?(СтрДлина(Цифры[2]) = 2, "20"+Цифры[2], Цифры[2]))
					+ СокрЛП(Формат(Цифры[1], "ЧЦ=2; ЧВН=;"))
					+ СокрЛП(Формат(Цифры[0], "ЧЦ=2; ЧВН=;"));
		Результат = Дата(Результат);
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	Возврат Результат;
	
КонецФункции

Функция ТекстВЧисло(СтроковоеЗначение, НомерСтроки, ИмяКолонки) Экспорт
	
	Если ПустаяСтрока(СтроковоеЗначение) ИЛИ СтроковоеЗначение = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Попытка
		Результат = Число(СтрЗаменить(СтроковоеЗначение," ",""));
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	Возврат Результат;
	
КонецФункции

Функция ТекстВБулево(СтроковоеЗначение, НомерСтроки, ИмяКолонки) Экспорт
	
	Если ПустаяСтрока(СтроковоеЗначение) ИЛИ СтроковоеЗначение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Результат = Булево(СтроковоеЗначение);
	Исключение
		СообщитьОбОшибкеПреобразования(НомерСтроки, ИмяКолонки, СтроковоеЗначение);
	КонецПопытки;
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеТаблицы(ТабличныйДокументИсточник, СтараяТаблица, КэшируемыеЗначения = Неопределено) Экспорт

	ТаблицаЗагрузки 	= СтараяТаблица.СкопироватьКолонки();
	ОписаниеКолонок 	= ПолучитьОписаниеКолонок(ТаблицаЗагрузки);

	ПотокПоТаблице = Новый ПотокВПамяти;
	ТабличныйДокументИсточник.Записать(ПотокПоТаблице, ТипФайлаТабличногоДокумента.ANSITXT);
	ТаблицаТекстом = ПолучитьСтрокуИзДвоичныхДанных(ПотокПоТаблице.ЗакрытьИПолучитьДвоичныеДанные(), КодировкаТекста.ANSI);
	
	СтрокиТекста = СтрРазделить(ТаблицаТекстом, Символы.ПС);
	Если СтрокиТекста.Количество() Тогда
		СтрокиТекста.Удалить(0);//заголовки
	КонецЕсли;
	
	НомерСтроки = 0;
	
	Для Каждого СтрокаТекста Из СтрокиТекста Цикл
		
		СтрокаЗагрузки = ТаблицаЗагрузки.Добавить();
		
		ЗначенияИсточник = СтрРазделить(СтрокаТекста, Символы.Таб);
		НомерСтроки = НомерСтроки + 1;
		НомерКолонки = 0;
		
		Для Каждого ТекстЯчейки Из ЗначенияИсточник Цикл

			Если Не ЗначениеЗаполнено(ТекстЯчейки) Тогда
				НомерКолонки = НомерКолонки + 1;
				Продолжить;
			КонецЕсли;
			
			Колонка = ОписаниеКолонок.Получить(НомерКолонки);
			
			СтрокаЗагрузки[Колонка.Имя] = ТекстЯчейки;
			Если Колонка.КодТипа = 1 Тогда
				СтрокаЗагрузки[Колонка.Имя] = ТекстВЧисло(ТекстЯчейки, НомерСтроки, НомерКолонки);
			ИначеЕсли Колонка.КодТипа = 2 Тогда
				СтрокаЗагрузки[Колонка.Имя] = ТекстВДату(ТекстЯчейки, НомерСтроки, НомерКолонки);
			ИначеЕсли Колонка.КодТипа = 3 Тогда
				СтрокаЗагрузки[Колонка.Имя] = ТекстВБулево(ТекстЯчейки, НомерСтроки, НомерКолонки);
			КонецЕсли;
			
			НомерКолонки = НомерКолонки + 1;
			
		КонецЦикла;
	
	КонецЦикла;
	
	Если ТипЗнч(КэшируемыеЗначения) = Тип("Структура") 
		И КэшируемыеЗначения.Свойство("Модуль_ДоработатьТаблицу")
		И ЗначениеЗаполнено(КэшируемыеЗначения.Модуль_ДоработатьТаблицу) Тогда
		
		омДоработки = ОбщегоНазначения.ОбщийМодуль(КэшируемыеЗначения.Модуль_ДоработатьТаблицу);
		омДоработки.ДоработатьТаблицуЗагрузки(ТаблицаЗагрузки, КэшируемыеЗначения);
		
	КонецЕсли;
	
	Возврат ТаблицаЗагрузки;
	
КонецФункции

Функция ПолучитьОписаниеКолонок(ТаблицаЗагрузки)
	
	ОписаниеКолонок = Новый Соответствие;
	
	ТипДата = Тип("Дата");
	ТипБулево = Тип("Булево");
	ТипЧисло = Тип("Число");
	ТипСтрока = Тип("Строка");
	отСтрока = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(0);
		
	Для НомерКолонки = 1 По ТаблицаЗагрузки.Колонки.Количество() Цикл
		
		ТекКолонка = ТаблицаЗагрузки.Колонки[НомерКолонки-1];
		
		ТипКолонки = 0;
		Если ТекКолонка.ТипЗначения.СодержитТип(ТипЧисло) Тогда
			ТипКолонки = 1;
		ИначеЕсли ТекКолонка.ТипЗначения.СодержитТип(ТипДата) Тогда
			ТипКолонки = 2;
		ИначеЕсли ТекКолонка.ТипЗначения.СодержитТип(ТипБулево) Тогда
			ТипКолонки = 3;
		ИначеЕсли ТекКолонка.ТипЗначения.СодержитТип(ТипСтрока) Тогда
			ТипКолонки = 4;			
		КонецЕсли;
		
		Колонка = Новый Структура("Имя,КодТипа", ТекКолонка.Имя, ТипКолонки);
		ОписаниеКолонок.Вставить(НомерКолонки-1, Колонка);
		
		Если ТипКолонки = 0 Тогда //для сложных типов изменим тип колонки на строку
			
			ТекущееИмя = ТекКолонка.Имя;
			ТекКолонка.Имя = ТекКолонка.Имя + "_";			
			ТаблицаЗагрузки.Колонки.Вставить(НомерКолонки-1, ТекущееИмя, отСтрока, ТекКолонка.Заголовок);			
			ТаблицаЗагрузки.Колонки.Удалить(ТекКолонка);			
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОписаниеКолонок;

КонецФункции

#КонецЕсли
