
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.АдресПараметровРеструктуризации) Тогда
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	ДанныеРеструктуризации=ПолучитьИзВременногоХранилища(Параметры.АдресПараметровРеструктуризации);
	
	ВидОтчета=ДанныеРеструктуризации.ВидОтчета;
	
	Если ДанныеРеструктуризации.Свойство("ИзменениеДанныхЗапрещено") Тогда
		
		Элементы.ДекорацияЗапретРедактирования.Заголовок=СтрШаблон(Нстр("ru = 'Изменение структуры данных запрещено:%1%2'"), Символы.ПС, 
			ДанныеРеструктуризации.ИзменениеДанныхЗапрещено);
		Элементы.ГруппаОбработка.ТекущаяСтраница=Элементы.ГруппаОбработка.ПодчиненныеЭлементы.ГруппаЗапретРедактирования;
		Элементы.ГруппаОбработка.ОтображениеСтраниц=ОтображениеСтраницФормы.Нет;
		Элементы.ФормаОК.Видимость=Ложь;
		Элементы.ГруппаТекЭлементСтруктуры.Видимость=Ложь;
		Элементы.ГруппаТаблицаАналитик.Видимость=Ложь;
		Элементы.ГруппаИзменениеАналитик.Видимость=Ложь;
		
		Возврат;
		
	Иначе
		
		Элементы.ГруппаЗапретРедактирования.Видимость=Ложь;
		Элементы.ГруппаОбработка.ОтображениеСтраниц=ОтображениеСтраницФормы.Нет;
		
	КонецЕсли;
	
	Если ДанныеРеструктуризации.Свойство("ИзмененТипЗначенияПоказателя") Тогда
		
		Элементы.ГруппаТекЭлементСтруктуры.Видимость=Истина;
		Элементы.ПодтвержденаОчисткаДанныхПоказателя.Видимость=Истина;
		Элементы.ГруппаОбработка.Видимость=Ложь;
		Элементы.ГруппаТаблицаАналитик.Видимость=Ложь;
		Элементы.ГруппаИзменениеАналитик.Видимость=Ложь;
		
		
		ИзмененТипЗначенияПоказателя=Истина;
		
		Элементы.ТекЭлементСтруктуры.Заголовок=Нстр("ru = 'Показатель'");
		
		ТекЭлементСтруктуры	= ДанныеРеструктуризации.ЭлементСтруктуры;
		ТипЗначенияНов		= ДанныеРеструктуризации.ТипЗначенияНов;
		
		Возврат;
		
	КонецЕсли;
	
	Если ДанныеРеструктуризации.Свойство("СброшеноРазделениеПоПроектам") Тогда
		
		Элементы.ГруппаПроекты.Видимость=Истина;
		СброшеноРазделениеПоПроектам=Истина;
		
		Элементы.ДекорацияПроекты.Заголовок=СтрШаблон(Нстр("ru = 'Снят флаг разделения по проектам. В настоящий момент в базе присутствуют записи 
		|по %1 проектам.
		|После подтверждения действия записи будут свернуты на пустой проект, 
		|экземпляры отчетов вида %2 с заполненной аналитикой ""Проект"" помечены на удаление.'"), 
		Формат(ДанныеРеструктуризации.ЧислоПроектовВРегистрахВидОтчета,"ЧГ=3,0"), ВидОтчета);
		
		Элементы.ГруппаТекЭлементСтруктуры.Видимость=Ложь;
		Элементы.ГруппаТаблицаАналитик.Видимость=Ложь;
		Элементы.ГруппаИзменениеАналитик.Видимость=Ложь;
		
	Иначе
		
		Элементы.ГруппаПроекты.Видимость=Ложь;
		
	КонецЕсли;
	
	Если ДанныеРеструктуризации.Свойство("ЕстьИзменениеАналитикВидаОтчета")
		ИЛИ ДанныеРеструктуризации.Свойство("СброшеноРазделениеПоПроектам") Тогда
		
		НоваяСтрока=ТабЭлементыСтруктуры.Добавить();
		НоваяСтрока.ЭлементСтруктуры=ВидОтчета;
		ЕстьИзменениеАналитикВидаОтчета=ДанныеРеструктуризации.Свойство("ЕстьИзменениеАналитикВидаОтчета");
		
		НоваяСтрока.ТипЭлементаСтруктуры=Нстр("ru = 'Вид отчета'");
		НоваяСтрока.ЕстьЗаписиВРегистрах=ДанныеРеструктуризации.ЕстьЗаписиВРегистрахВидОтчета;
		
		ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(ДанныеРеструктуризации.ТаблицаАналитикСтарВидОтчета,НоваяСтрока.ТаблицаАналитикСтар);
		ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(ДанныеРеструктуризации.ТаблицаАналитикНовВидОтчета,НоваяСтрока.ТаблицаАналитикНов);
				
		НоваяСтрока.ВидОтчета=Истина;
		
	КонецЕсли;
	
	Если ДанныеРеструктуризации.Свойство("ИзменениеГруппРаскрытия") Тогда
		
		Для Каждого КлючИЗначение ИЗ ДанныеРеструктуризации.ИзменениеГруппРаскрытия Цикл
			
			НоваяСтрока=ТабЭлементыСтруктуры.Добавить();
			НоваяСтрока.ЭлементСтруктуры=КлючИЗначение.Ключ;
			НоваяСтрока.ЕстьЗаписиВРегистрах=КлючИЗначение.Значение.ЕстьЗаписиВРегистрах;
			
			ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(КлючИЗначение.Значение.ТаблицаАналитикСтар,НоваяСтрока.ТаблицаАналитикСтар);
			ОбщегоНазначенияКлиентСерверУХ.ПоместитьТаблицуЗначенийВКоллекциюФормы(КлючИЗначение.Значение.ТаблицаАналитикНов,НоваяСтрока.ТаблицаАналитикНов);
						
			НоваяСтрока.ТипЭлементаСтруктуры=ПолучитьНаименованиеЭлементаСтруктуры(НоваяСтрока.ЭлементСтруктуры);
							
		КонецЦикла;
		
		Если ТабЭлементыСтруктуры.Количество()=1 Тогда
			
			ТекЭлементСтруктуры=ТабЭлементыСтруктуры[0].ЭлементСтруктуры;
			Элементы.ГруппаТекЭлементСтруктуры.Видимость=Истина;
			Элементы.ТекЭлементСтруктуры.Заголовок=ТабЭлементыСтруктуры[0].ТипЭлементаСтруктуры;
			Элементы.ГруппаТаблицаАналитик.Видимость=Ложь; 		
				
		Иначе
			
			Элементы.ГруппаТекЭлементСтруктуры.Видимость=Ложь;
			Элементы.ГруппаТаблицаАналитик.Видимость=ЕстьИзменениеАналитикВидаОтчета ИЛИ (ДанныеРеструктуризации.Свойство("ИзменениеГруппРаскрытия") И НЕ СброшеноРазделениеПоПроектам);
			
		КонецЕсли;

	КонецЕсли;
	
	Элементы.ГруппаИзменениеАналитик.Видимость=ЕстьИзменениеАналитикВидаОтчета ИЛИ (ДанныеРеструктуризации.Свойство("ИзменениеГруппРаскрытия") И НЕ СброшеноРазделениеПоПроектам);
	Элементы.ГруппаТекЭлементСтруктуры.Видимость=Элементы.ГруппаИзменениеАналитик.Видимость И НЕ Элементы.ГруппаТаблицаАналитик.Видимость;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьНаименованиеЭлементаСтруктуры(ЭлементСтруктуры)
	
	Если ТипЗнч(ЭлементСтруктуры)=Тип("СправочникСсылка.ВидыОтчетов") Тогда
		
		Возврат Нстр("ru = 'Вид отчета'");
		
	ИначеЕсли ТипЗнч(ЭлементСтруктуры)=Тип("СправочникСсылка.СтрокиОтчетов") Тогда
		
		Возврат Нстр("ru = 'Строка'");
		
	ИначеЕсли ТипЗнч(ЭлементСтруктуры)=Тип("СправочникСсылка.КолонкиОтчетов") Тогда
		
		Возврат Нстр("ru = 'Колонка'");
		
	ИначеЕсли ТипЗнч(ЭлементСтруктуры)=Тип("СправочникСсылка.ГруппыРаскрытия") Тогда
		
		Возврат Нстр("ru = 'Группа раскрытия'");
		
	ИначеЕсли ТипЗнч(ЭлементСтруктуры)=Тип("СправочникСсылка.ПоказателиОтчетов") Тогда
		
		Возврат Нстр("ru = 'Показатель'");
		
	КонецЕсли;
	
КонецФункции // ПолучитьНаименованиеЭлементаСтруктуры() 


&НаКлиенте
Процедура ТабЭлементыСтруктурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТабЭлементыСтруктуры.ТекущиеДанные=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекЭлементСтруктуры=Элементы.ТабЭлементыСтруктуры.ТекущиеДанные.ЭлементСтруктуры;
	ОбновитьРабочиеТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРабочиеТаблицы()
	
	ТекТаблицаАналитикНов.Очистить();
	ТекТаблицаАналитикСтар.Очистить();
	
	ТекСтрокаРаскрытия=ТабЭлементыСтруктуры.НайтиСтроки(Новый Структура("ЭлементСтруктуры",ТекЭлементСтруктуры))[0];
	
	Для Каждого Строка ИЗ ТекСтрокаРаскрытия.ТаблицаАналитикСтар Цикл
		
		НоваяСтрока=ТекТаблицаАналитикСтар.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
	КонецЦикла;
	
	Для Каждого Строка ИЗ ТекСтрокаРаскрытия.ТаблицаАналитикНов Цикл
		
		НоваяСтрока=ТекТаблицаАналитикНов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
	КонецЦикла;
	
	ТекОчищатьАналитическиеЗначения	= ТекСтрокаРаскрытия.ОчищатьАналитическиеЗначения;
	ТекПереноситьЗаписи				= ТекСтрокаРаскрытия.ПереноситьЗаписи;
	ТекОчищатьСинтетическиеЗначения	= ТекСтрокаРаскрытия.ОчищатьСинтетическиеЗначения;
	
	Если НЕ ТекСтрокаРаскрытия.ЕстьЗаписиВРегистрах Тогда
		
		Элементы.ГруппаДействия.Видимость=Ложь;
		
	Иначе
		
		Элементы.ГруппаДействия.Видимость=Истина;
		
		Если ТекСтрокаРаскрытия.ТипЭлементаСтруктуры=Нстр("ru = 'Вид отчета'") Тогда
			
			Элементы.ТекПереноситьЗаписи.Видимость=Истина;
			Элементы.ТекОчищатьСинтетическиеЗначения.Видимость=Истина;
			Элементы.ТекОчищатьСинтетическиеЗначения.Доступность=Истина;
			Элементы.ТекОчищатьЗаписи.Видимость=Ложь;
			
		ИначеЕсли ТекТаблицаАналитикСтар.НайтиСтроки(Новый Структура("АналитикаВидаОтчета",Ложь)).Количество()>0
			И ТекТаблицаАналитикНов.НайтиСтроки(Новый Структура("АналитикаВидаОтчета",Ложь)).Количество()>0 Тогда
			
			Элементы.ТекПереноситьЗаписи.Видимость=Истина;
			Элементы.ТекОчищатьСинтетическиеЗначения.Доступность=Ложь;
			Элементы.ТекОчищатьЗаписи.Видимость=Истина;
			
		ИначеЕсли ТекТаблицаАналитикСтар.НайтиСтроки(Новый Структура("АналитикаВидаОтчета",Ложь)).Количество()>0 Тогда // Убрали аналитическое раскрытие показателя
			
			Элементы.ТекОчищатьЗаписи.Видимость=Истина;
			Элементы.ТекОчищатьЗаписи.Доступность=Ложь;
			ТекОчищатьАналитическиеЗначения=Истина;
			ТекСтрокаРаскрытия.ОчищатьАналитическиеЗначения=Истина;
			
			Элементы.ТекПереноситьЗаписи.Видимость=Ложь;
			Элементы.ТекОчищатьСинтетическиеЗначения.Доступность=Истина;
			
		ИначеЕсли ТекТаблицаАналитикНов.НайтиСтроки(Новый Структура("АналитикаВидаОтчета",Ложь)).Количество()>0
			ИЛИ ТекСтрокаРаскрытия.ТипЭлементаСтруктуры=Нстр("ru = 'Вид отчета'") Тогда
			
			Элементы.ТекОчищатьЗаписи.Видимость=Ложь;
			Элементы.ТекПереноситьЗаписи.Видимость=Истина;
			Элементы.ТекОчищатьСинтетическиеЗначения.Доступность=Истина;
			
		КонецЕсли;
		
	КонецЕсли;
				
КонецПроцедуры // ОбновитьРабочиеТаблицы()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ТекЭлементСтруктуры) И Элементы.ГруппаОбработка.Видимость Тогда
		
		ОбновитьРабочиеТаблицы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекОчищатьАналитическиеЗначенияПриИзменении(Элемент)
	
	Если ТекПереноситьЗаписи И ТекОчищатьАналитическиеЗначения Тогда
		
		ТекПереноситьЗаписи=Ложь;
		
	КонецЕсли;
	
	Если ТекОчищатьАналитическиеЗначения Тогда
		
		ТекОчищатьСинтетическиеЗначения=Истина;
		
	Иначе
		
		ТекОчищатьСинтетическиеЗначения=Ложь;
		
	КонецЕсли;
	
	ОбновитьСтрокуГруппыРаскрытия();
		
КонецПроцедуры

&НаКлиенте
Процедура ТекПереноситьЗаписиПриИзменении(Элемент)
	
	Если ТекПереноситьЗаписи Тогда
		
		ТекОчищатьАналитическиеЗначения=Ложь;
		ТекОчищатьСинтетическиеЗначения=Ложь;
		
	КонецЕсли;
	
	ОбновитьСтрокуГруппыРаскрытия();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтрокуГруппыРаскрытия()
	
	СтрокаГруппыРаскрытия=ТабЭлементыСтруктуры.НайтиСтроки(Новый Структура("ЭлементСтруктуры",ТекЭлементСтруктуры))[0];
	СтрокаГруппыРаскрытия.ОчищатьАналитическиеЗначения=ТекОчищатьАналитическиеЗначения;
	СтрокаГруппыРаскрытия.ОчищатьСинтетическиеЗначения=ТекОчищатьСинтетическиеЗначения;
	СтрокаГруппыРаскрытия.ПереноситьЗаписи=ТекПереноситьЗаписи;
	
КонецПроцедуры // ОбновитьСтрокуГруппыРаскрытия()

&НаСервере
Функция ПреобразоватьКоллекциюФормыВТаблицуЗначений(КоллекцияФормы)
	
	РабочаяТаблица=РеквизитФормыВЗначение("ТекТаблицаАналитикНов");
	РабочаяТаблица.Очистить();
	
	Для Каждого Строка ИЗ КоллекцияФормы Цикл
		
		НоваяСтрока=РабочаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
	КонецЦикла;
	
	Возврат РабочаяТаблица;	
	
КонецФункции // 

&НаСервере
Функция ПроверитьПодготовитьСтруктуруОтвета(ИдентификаторВладельца,ЕстьОшибки)
	
	ТекстОшибки="";
	СтруктураОтвета=Новый Структура;
	СтруктураОтвета.Вставить("ВидОтчета",ВидОтчета);
	
	Если ЕстьИзменениеАналитикВидаОтчета Тогда
		
		СтруктураОтвета.Вставить("ЕстьИзменениеАналитикВидаОтчета",ЕстьИзменениеАналитикВидаОтчета);
		
	КонецЕсли;
	
	Если СброшеноРазделениеПоПроектам Тогда
				
		Если ПодтвержденаСверткаПоПроектам Тогда
			
			СтруктураОтвета.Вставить("ПодтвержденаСверткаПоПроектам",Истина);
			
		ИначеЕсли ПодтвержденаОчисткапоПроектам Тогда
			
			СтруктураОтвета.Вставить("ПодтвержденаОчисткапоПроектам",Истина);
			
		Иначе
			
			ТекстОшибки=СтрШаблон(Нстр("ru = '%1
			|Не выбрано действие (свертка / очистка данных) по проектам.'"), ТекстОшибки);
			
		КонецЕсли;
				
	КонецЕсли;
	
	Если ИзмененТипЗначенияПоказателя Тогда
		
		Если ДействияПриИзмененииТипаПоказателя Тогда
			
			СтруктураОтвета.Вставить("ДействияПриИзмененииТипаПоказателя",	Истина);
			СтруктураОтвета.Вставить("ЭлементСтруктуры",					ТекЭлементСтруктуры);
			СтруктураОтвета.Вставить("ТипЗначенияНов",						ТипЗначенияНов);
			
		Иначе
			
			ТекстОшибки=СтрШаблон(Нстр("ru = '%1
			|Не подтверждена очистка данных при изменении типа значения показателя.'"), ТекстОшибки);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменениеРаскрытия=Новый Соответствие;
	
	Для Каждого Строка ИЗ ТабЭлементыСтруктуры Цикл
		
		Если (НЕ (Строка.ОчищатьАналитическиеЗначения ИЛИ Строка.ПереноситьЗаписи ИЛИ Строка.ОчищатьАналитическиеЗначения)) И Строка.ЕстьЗаписиВРегистрах Тогда
			
			ТекстОшибки=СтрШаблон(Нстр("ru = '%1
			|Не выбрано действие (очистка/реструктуризация) записей 
			|для %2%3'"), ТекстОшибки, ?(Строка.ВидОтчета," вида отчета ", " группы раскрытия "), 
			Строка.ЭлементСтруктуры);
			
			Прервать;
																		
		КонецЕсли;
														
	КонецЦикла;	
	
	Если ПустаяСтрока(ТекстОшибки) Тогда
		
		Если ТабЭлементыСтруктуры.Количество()>0 Тогда 
			
			СтруктураОтвета.Вставить("ИзменениеРаскрытия",РеквизитФормыВЗначение("ТабЭлементыСтруктуры"));
			
		КонецЕсли;
		
		Возврат ПоместитьВоВременноеХранилище(СтруктураОтвета,ИдентификаторВладельца);
		
	Иначе
		
		ЕстьОшибки=Истина;
		
		Возврат Сред(ТекстОшибки,2);
		
	КонецЕсли;
												
КонецФункции // ПроверитьПодготовитьСтруктуруОтвета()


&НаКлиенте
Процедура ОК(Команда)
	
	ЕстьОшибки=Ложь;
	
	АдресСтруктурыОтвета=ПроверитьПодготовитьСтруктуруОтвета(ЭтотОбъект.ВладелецФормы.УникальныйИдентификатор,ЕстьОшибки);
	
	Если Не ЕстьОшибки Тогда
		
		 Закрыть(АдресСтруктурыОтвета);
		 
	 Иначе
		 
		 ПоказатьПредупреждение(,АдресСтруктурыОтвета);
		 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекОчищатьСинтетическиеЗначенияПриИзменении(Элемент)
	
	Если ТекОчищатьСинтетическиеЗначения Тогда
		
		ТекОчищатьАналитическиеЗначения=Истина;
		ТекПереноситьЗаписи=Ложь;
		
	КонецЕсли;
	
	ОбновитьСтрокуГруппыРаскрытия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвержденаСверткаПоПроектамПриИзменении(Элемент)
	
	Если ПодтвержденаСверткаПоПроектам Тогда
		
		ПодтвержденаОчисткапоПроектам=Ложь;
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ ТабЭлементыСтруктуры Цикл
		
		Строка.ОчищатьСинтетическиеЗначения=ПодтвержденаОчисткапоПроектам;
		Строка.ПереноситьЗаписи=ПодтвержденаСверткаПоПроектам;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвержденаОчисткапоПроектамПриИзменении(Элемент)
	
	Если ПодтвержденаОчисткапоПроектам Тогда
		
		ПодтвержденаСверткаПоПроектам=Ложь;
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ ТабЭлементыСтруктуры Цикл
		
		Строка.ОчищатьСинтетическиеЗначения=ПодтвержденаОчисткапоПроектам;
		Строка.ПереноситьЗаписи=ПодтвержденаСверткаПоПроектам;
		
	КонецЦикла;
	
КонецПроцедуры
