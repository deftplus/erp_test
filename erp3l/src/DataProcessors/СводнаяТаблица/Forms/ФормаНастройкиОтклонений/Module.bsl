

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Бланк = Параметры.Бланк;
	РежимРаботы = Параметры.РежимРаботы;
	
	ТаблицыИнтерфейса = ПолучитьИзВременногоХранилища(Параметры.АдресТекущихНастроек);
	ТаблицаВыбранныеОтклонения.Загрузить(ТаблицыИнтерфейса.ДополнительныеПоля); 
	
	ВидыОтчетовМассив = СводнаяТаблицаУХ.ПолучитьИспользуемыеВидыОтчетов(Бланк);
		
	МассивЗнченийПараметров  = Новый ФиксированныйМассив(ВидыОтчетовМассив);
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", МассивЗнченийПараметров);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.ТаблицаВыбранныеОтклоненияПоказатель.ПараметрыВыбора = НовыеПараметры;
		
	ВидОтчета = Параметры.Бланк.Владелец;
	
	Если НЕ РежимРаботы = "Бланк" Тогда
		
		БазовыеПоказатели = ТаблицаВыбранныеОтклонения.Выгрузить(Новый Структура("Расчетный",Ложь),"Показатель").ВыгрузитьКолонку("Показатель");
		БазовыеПоказателиСписок = Новый СписокЗначений;
		Для Каждого Эл Из БазовыеПоказатели Цикл
			БазовыеПоказателиСписок.Добавить(Эл);
		КонецЦикла;	
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", БазовыеПоказатели);
		
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипЗначения", Перечисления.ТипыЗначенийПоказателейОтчетов.Число);
		НовыйМассив.Добавить(НовыйПараметр);
		
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ТаблицаВыбранныеОтклоненияПоказатель.ПараметрыВыбора = НовыеПараметры;		
		
		Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
			
			Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Очистить();
			Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("Значение", Нстр("ru = 'Базовое значение'"));
	        Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("АбсОтклонение","∆");
			Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("ОтнОтклонение","∆%");
			
			Если Стр.Заблокирован Тогда
				Стр.ИндексКартинки = 0;
			Иначе
				Стр.ИндексКартинки = 10;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Стр.Сценарии) Тогда
				 Стр.Сценарии = "Значение источника";
			КонецЕсли;	
			Если Не ЗначениеЗаполнено(Стр.Периоды) Тогда
				 Стр.Периоды = "Значение источника";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.Организации) Тогда
				 Стр.Организации = "Значение источника";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.Проекты) Тогда
				 Стр.Проекты = "Значение источника";
			КонецЕсли;
	
		КонецЦикла;	
			
	Иначе	
			
		Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Очистить();
		Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("ТекущееЗначение",Нстр("ru = 'Текущее значение'"));
		Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("Значение",Нстр("ru = 'Базовое значение'"));
		Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("АбсОтклонение","∆");
		Элементы.ТаблицаВыбранныеОтклоненияВидОтклонения.СписокВыбора.Добавить("ОтнОтклонение","∆%");
		
		Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
			
			Стр.ИндексКартинки = 10;		
			Если Не ЗначениеЗаполнено(Стр.Сценарии) Тогда
				Стр.Сценарии = "Значение источника";
			КонецЕсли;	
			Если Не ЗначениеЗаполнено(Стр.Периоды) Тогда
				Стр.Периоды = "Значение источника";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.Организации) Тогда
				Стр.Организации = "Значение источника";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.Проекты) Тогда
				Стр.Проекты = "Значение источника";
			КонецЕсли;	
				
		КонецЦикла;		
	КонецЕсли;	
	
	Если Не ВидОтчета.РазделениеПоПроектам Тогда
		 Элементы.ТаблицаВыбранныеОтклоненияПроекты.Видимость = Ложь;
	КонецЕсли;	
	
	ОбновитьПредставлениеКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборАналитикЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Число") Тогда
				
		Результат = Нстр("ru = 'Сдвиг по периоду: '") + Строка(Результат);
		
	КонецЕсли;	
	
	Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные[СтрЗаменить(Элементы.ТаблицаВыбранныеОтклонения.ТекущийЭлемент.Имя,"ТаблицаВыбранныеОтклонения","")] = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзМенюОкончание(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяПоля = ДополнительныеПараметры.ИмяПоля;
	ТекущийВыбор = Результат;
	
	Если ИмяПоля = "Сценарии" Тогда
		
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение = "Значение источника" Тогда 
			Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные[ИмяПоля] = "Значение источника";	
		ИначеЕсли  ТекущийВыбор.Значение = "Значение" Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Сценарии.ФормаВыбора",,,,,,Оповещение);	
		КонецЕсли;
			
	ИначеЕсли ИмяПоля = "Периоды" Тогда
			
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
	    ИначеЕсли ТекущийВыбор.Значение = "Значение источника" Тогда 
			Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные[ИмяПоля] = "Значение источника";	
		ИначеЕсли  ТекущийВыбор.Значение = "Значение" Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Периоды.ФормаВыбора",,,,,,Оповещение);	
		ИначеЕсли ТекущийВыбор.Значение = "Сдвиг по периоду источника" Тогда 
	        Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ПоказатьВводчисла(Оповещение, 0, НСтр("ru = 'Введите сдвиг по периоду'"), 2, 0);
		КонецЕсли;
		
	ИначеЕсли ИмяПоля = "Организации" Тогда
		
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение = "Значение источника" Тогда 
			Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные[ИмяПоля] = "Значение источника";	
		ИначеЕсли  ТекущийВыбор.Значение = "Значение" Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Организации.ФормаВыбора",,,,,,Оповещение);		
		КонецЕсли;	
		
	ИначеЕсли ИмяПоля = "Проекты" Тогда
	
		Если ТекущийВыбор = Неопределено Тогда
			Возврат;
		ИначеЕсли ТекущийВыбор.Значение = "Значение источника" Тогда 
			Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные[ИмяПоля] = "Значение источника";	
		ИначеЕсли  ТекущийВыбор.Значение = "Значение" Тогда 	
			Оповещение = Новый ОписаниеОповещения("ВыборАналитикЗавершение", ЭтаФорма);
			ОткрытьФорму("Справочник.Проекты.ФормаВыбора",,,,,,Оповещение);	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Для Каждого стр Из ТаблицаВыбранныеОтклонения Цикл
		
		Если Не ЗначениеЗаполнено(стр.Колонки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не выбран показатель'"),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаВыбранныеОтклонения", ТаблицаВыбранныеОтклонения.Индекс(стр)+1,"Показатель"));		
				Возврат;	
		КонецЕсли;	
				
	КонецЦикла;	

	
	Если РежимРаботы = "Бланк" Тогда		
		
		СтруктураПараметров = ПодготовитьПараметры();
		Если СтруктураПараметров.ФлОшибки Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтруктураПараметров.ТекстОшибки);
			Возврат;
			
		КонецЕсли;	
				
		ЗаписатьНастройкиПоказателей();
		Закрыть(СтруктураПараметров);		
	Иначе
		СтруктураПараметров = ПодготовитьПараметры();
		Закрыть(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияПриИзменении(Элемент)
	
Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		
		Если   РежимРаботы = "Бланк" Тогда
			
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ВидОтклонения) Тогда
				
				Элемент.ТекущиеДанные.Сценарии    = "Значение источника";
				Элемент.ТекущиеДанные.Периоды     = "Значение источника";
				Элемент.ТекущиеДанные.Проекты     = "Значение источника";
				Элемент.ТекущиеДанные.Организации = "Значение источника";
				Элемент.ТекущиеДанные.Использовать    = Истина;
				Элемент.ТекущиеДанные.ВидОтклонения = "ТекущееЗначение";
				Элемент.ТекущиеДанные.ИндексКартинки = 10;
				Элемент.ТекущиеДанные.Расчетный    = Ложь;
				
			КонецЕсли;	
			
		Иначе	
			
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ВидОтклонения) Тогда
				
				Элемент.ТекущиеДанные.Сценарии    = "Значение источника";
				Элемент.ТекущиеДанные.Периоды     = "Значение источника";
				Элемент.ТекущиеДанные.Проекты     = "Значение источника";
				Элемент.ТекущиеДанные.Организации = "Значение источника";
				Элемент.ТекущиеДанные.Использовать    = Истина;
				Элемент.ТекущиеДанные.ВидОтклонения = "Значение";
				Элемент.ТекущиеДанные.ИндексКартинки = 10;
				Элемент.ТекущиеДанные.Расчетный    = Истина;
				
			КонецЕсли;	
				
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные.ВидОтклонения = "ТекущееЗначение" Тогда 				
			Элемент.ТекущиеДанные.Расчетный    = Ложь;
		Иначе	
			Элемент.ТекущиеДанные.Расчетный    = Истина;
		КонецЕсли;

		Если Элемент.ТекущиеДанные.Расчетный И Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Заголовок) Тогда 
			Элемент.ТекущиеДанные.Заголовок    = "#Заголовок"+ТаблицаВыбранныеОтклонения.Количество();
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяПоля = СтрЗаменить(Поле.Имя,"ТаблицаВыбранныеОтклонения","");
		
	Если ИмяПоля = "Сценарии" Тогда
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
		
		Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные["Расчетный"]  Тогда
			Возврат;
		КонецЕсли;
		
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить("Значение");
		СписокДоступныхЗначений.Добавить("Значение источника");
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
			
	ИначеЕсли ИмяПоля = "Периоды" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
		
		Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные["Расчетный"] Тогда
			Возврат;
		КонецЕсли;
		
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить("Значение");
		СписокДоступныхЗначений.Добавить("Сдвиг по периоду источника");
		СписокДоступныхЗначений.Добавить("Значение источника");

		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
			
	ИначеЕсли ИмяПоля = "Организации" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
		
		Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные["Расчетный"]  Тогда
			Возврат;
		КонецЕсли;
		
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить("Значение");
		СписокДоступныхЗначений.Добавить("Значение источника");
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);
		
	ИначеЕсли ИмяПоля = "Проекты" Тогда
	
		СтандартнаяОбработка = Ложь;
			
		ПараметрыВыбора = Новый Структура("ИмяПоля",ИмяПоля);
	    ОповещениеВыборИзМенюОкончание = Новый ОписаниеОповещения("ВыборИзМенюОкончание",ЭтаФорма,ПараметрыВыбора);
		
		Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные["Расчетный"]  Тогда
			Возврат;
		КонецЕсли;
		
		СписокДоступныхЗначений = Новый СписокЗначений;
		СписокДоступныхЗначений.Добавить("Значение");
		СписокДоступныхЗначений.Добавить("Значение источника");
		
		ЭтаФорма.ПоказатьВыборИзМеню(ОповещениеВыборИзМенюОкончание,СписокДоступныхЗначений,Элемент);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметры()
	
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ФлОшибки",Ложь);

	//Проверим, что нет расчетных показателей без выбранных текущих значений.
	ТекКолонки = ПолучитьМассивТекущихКолонок();
	
	Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
		
		Если НЕ Стр.ВидОтклонения = "ТекущееЗначение" Тогда
			
			ЗначениеПроверено = Ложь;
			
			Для Каждого Кол Из Стр.Колонки Цикл
				ТекКолонка = ТекКолонки.Найти(Кол.Значение);
				ЗначениеПроверено =  ТекКолонка <> Неопределено; 
				Если НЕ ЗначениеПроверено Тогда
					
					СтруктураВозврата.Вставить("ФлОшибки",Истина);
					СтруктураВозврата.Вставить("ОшибочныйПоказатель",Стр.Показатель);
					СтруктураВозврата.Вставить("ТекстОшибки","");
					
					Возврат СтруктураВозврата;
					
				КонецЕсли;
				
				
			КонецЦикла;
			
			
		КонецЕсли;	
		
	КонецЦикла;	

	Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
		
		Если Не ЗначениеЗаполнено(Стр.КодПоказателя) Тогда
			Если Стр.Расчетный Тогда
				ИндексБазы = СтрЗаменить(Новый УникальныйИдентификатор(),"-","");
				Если Стр.Показатель.Владелец = ВидОтчета Тогда
					Стр.КодПоказателя =ИндексБазы+"_"+СокрЛП(Стр.Колонки[0].Значение.Код);
				Иначе
					Стр.КодПоказателя =ИндексБазы+"_"+СокрЛП(Стр.Колонки[0].Значение.Код);	
				КонецЕсли;	
				Стр.ИндексПоказателя = ИндексБазы;
				Стр.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число;
			Иначе		
				Если Стр.Показатель.Владелец = ВидОтчета Тогда
					Стр.КодПоказателя = СокрЛП(Стр.Колонки[0].Значение.Код);	
				Иначе
					Стр.КодПоказателя = СокрЛП(Стр.Колонки[0].Значение.Код);	
				КонецЕсли;		
			КонецЕсли;
			Стр.ТипЗначения =Стр.Колонки[0].Значение.ТипЗначения;

			
		КонецЕсли;
		
	КонецЦикла;	 
	
	СтруктураВозврата.Вставить("АдресТзОтклонений",ПоместитьВоВременноеХранилище(ТаблицаВыбранныеОтклонения.Выгрузить(),Новый УникальныйИдентификатор));
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура ЗаписатьНастройкиПоказателей()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкиСтруктурыБланка.Ссылка
	|ИЗ
	|	Справочник.НастройкиСтруктурыБланка КАК НастройкиСтруктурыБланка
	|ГДЕ
	|	НастройкиСтруктурыБланка.Владелец = &Владелец
	|	И НастройкиСтруктурыБланка.ИндексЭлемента = 10";
	
	Запрос.УстановитьПараметр("Владелец",Бланк);	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		 Выборка.Ссылка.ПолучитьОбъект().Удалить();
	
	КонецЦикла;
	
	ТзПоказателей = ТаблицаВыбранныеОтклонения.Выгрузить();
	ТзПоказателей.Свернуть("Сценарии,Периоды,Организации,Проекты,Использовать,Показатель,ВидОтклонения,Заголовок,Расчетный,КодПоказателя,ИндексПоказателя,ИндексКартинки,Колонки,НарастающийИтог");
	ТаблицаВыбранныеОтклонения.Загрузить(ТзПоказателей);	
		
	Инд = 0;
	Для Каждого СтрПоказатель Из ТаблицаВыбранныеОтклонения Цикл
		
		НСтр = Справочники.НастройкиСтруктурыБланка.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НСтр,СтрПоказатель);
		НСтр.Владелец = Бланк;
		НСтр.Наименование = СтрПоказатель.Заголовок;
		НСтр.ИндексЭлемента = 10;
		Нстр.КолонкаОтчета = СтрПоказатель.Показатель;
		Нстр.ПорядковыйНомер = Инд;
		Инд = Инд+1;
		
		Для Каждого кСтр Из СтрПоказатель.Колонки Цикл
			нКолонка 				= Нстр.КолонкиОтчетов.Добавить();
			нКолонка.Колонка 		= кСтр.Значение;
			нКолонка.КодПоказателя  = "["+СокрЛП(кСтр.Значение.Владелец)+"] "+СокрЛП(кСтр.Значение.Код);
		КонецЦикла;	
		
		
		НСтр.Записать();	
		
	КонецЦикла;
			
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияПоказательПриИзменении(Элемент)
	
	Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Расчетный Тогда 
		Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Заголовок    = Строка(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Показатель);
		Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.КодПоказателя = "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияПередУдалением(Элемент, Отказ)
	
	Если НЕ РежимРаботы = "Бланк" Тогда
		Если Элемент.ТекущиеДАнные.Заблокирован Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		 Отказ = Истина;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияВидОтклоненияПриИзменении(Элемент)
	
	Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.ВидОтклонения = "ТекущееЗначение" Тогда
		Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Расчетный    = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуПоказателей(Команда)
	
	ТаблицаВыбранныеОтклонения.Добавить();
	ТаблицаВыбранныеОтклоненияПриИзменении(Элементы.ТаблицаВыбранныеОтклонения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияПоказательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВидыОтчетовМассив = СводнаяТаблицаУХ.ПолучитьИспользуемыеВидыОтчетов(Бланк);                                 
	ТекущиеЗначенияМассив = ПолучитьМассивТекущихКолонок();	
	
	
	Если Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.ВидОтклонения = "ТекущееЗначение" Тогда
		ТекущаяСтрока = ?(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Количество()=0,Неопределено,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения()[0]);
		СтруктураОтбора = Новый Структура("Владелец",ВидыОтчетовМассив);
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе,МножественныйВыбор,Отбор,РежимВыбора,ТекСтрока,Выделенныестроки", Истина,Истина,СтруктураОтбора,Истина,
		ТекущаяСтрока,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения());
		
		Оповещение = Новый ОписаниеОповещения("ВыборКолонокЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.КолонкиОтчетов.ФормаВыбора",ПараметрыФормы,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		ТекущаяСтрока = ?(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Количество()=0,Неопределено,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения()[0]);
		СтруктураОтбора = Новый Структура("Владелец,Ссылка",ВидыОтчетовМассив,ТекущиеЗначенияМассив);
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе,МножественныйВыбор,Отбор,РежимВыбора,ТекСтрока,Выделенныестроки", Истина,Истина,СтруктураОтбора,Истина,
		ТекущаяСтрока,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения());
		
		Оповещение = Новый ОписаниеОповещения("ВыборКолонокЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.КолонкиОтчетов.ФормаВыбора",ПараметрыФормы,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;	
	
		
КонецПроцедуры
	
&НаКлиенте
Процедура ВыборКолонокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена   Тогда
		 Возврат;
	КонецЕсли;	

	Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ЗагрузитьЗначения(Результат);
	
	СтрокаЗаголовка = "";
	
	ФорматироватьКолонки(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки,СтрокаЗаголовка,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.КолонкиПредставление);
		
	Если Не ЗначениеЗаполнено(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Заголовок) Тогда
		
		 Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Заголовок = СтрокаЗаголовка;
		
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборНастраиваемыхКолонокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена   Тогда
		 Возврат;
	КонецЕсли;	

	Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Очистить();
	Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Добавить(Результат);
	
	//ФорматироватьКолонки(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки)
		
КонецПроцедуры

Процедура ФорматироватьКолонки(Результат,СтрокаЗаголовка,КолонкиПредставление)
	
	СтрокаПредставлений = "";
	
	Для Каждого СтрКол Из  Результат Цикл
		СтрКол.Представление = "["+СокрЛП(СтрКол.Значение.Владелец)+"] "+СокрЛП(СтрКол.Значение.Код);		 
		СтрокаПредставлений = СтрокаПредставлений+СтрКол.Представление+";";
	КонецЦикла;	
	
	Если Результат.Количество() = 1 Тогда
		СтрокаЗаголовка = СокрЛП(СтрКол.Значение.Наименование);	 
	Иначе	
		Для Каждого СтрКол Из  Результат Цикл
			СтрокаЗаголовка = СтрокаЗаголовка+"["+СокрЛП(СтрКол.Значение.Владелец)+"] "+СокрЛП(СтрКол.Значение.Код)+";";		 
		КонецЦикла;		
	КонецЕсли;	
	
	КолонкиПредставление = Лев(СтрокаПредставлений,СтрДлина(СтрокаПредставлений)-1);
	
	ОбновитьПредставлениеКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияКолонкиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
	
	ВидыОтчетовМассив = СводнаяТаблицаУХ.ПолучитьИспользуемыеВидыОтчетов(Бланк);                                 
	ТекущиеЗначенияМассив = ПолучитьМассивТекущихКолонок();	
	
	
	Если Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.ВидОтклонения = "ТекущееЗначение" Тогда
		ТекущаяСтрока = ?(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Количество()=0,Неопределено,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения()[0]);
		СтруктураОтбора = Новый Структура("Владелец",ВидыОтчетовМассив);
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе,МножественныйВыбор,Отбор,РежимВыбора,ТекСтрока,Выделенныестроки", Истина,Истина,СтруктураОтбора,Истина,
		ТекущаяСтрока,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения());
		
		Оповещение = Новый ОписаниеОповещения("ВыборКолонокЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.КолонкиОтчетов.ФормаВыбора",ПараметрыФормы,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		ТекущаяСтрока = ?(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.Количество()=0,Неопределено,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения()[0]);
		СтруктураОтбора = Новый Структура("Владелец,Ссылка",ВидыОтчетовМассив,ТекущиеЗначенияМассив);
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе,МножественныйВыбор,Отбор,РежимВыбора,ТекСтрока,Выделенныестроки", Истина,Истина,СтруктураОтбора,Истина,
		ТекущаяСтрока,Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Колонки.ВыгрузитьЗначения());
		
		Оповещение = Новый ОписаниеОповещения("ВыборКолонокЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.КолонкиОтчетов.ФормаВыбора",ПараметрыФормы,,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеОтклоненияКолонкиПредставлениеПриИзменении(Элемент)
	
	Если НЕ Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Расчетный Тогда 
		Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Заголовок    = Строка(Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.Показатель);
		Элементы.ТаблицаВыбранныеОтклонения.ТекущиеДанные.КодПоказателя = "";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеКолонок()
	
	Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
		
		СтрокаПредставлений = "";
		
		Для Каждого СтрКолонка Из  Стр.Колонки Цикл	
			СтрокаПредставлений = СтрокаПредставлений+СтрКолонка.Представление+";";	
		КонецЦикла;	
		
		Стр.КолонкиПредставление = Лев(СтрокаПредставлений,СтрДлина(СтрокаПредставлений)-1);
		
	КонецЦикла;
		
КонецПроцедуры	

&НаСервере
Функция ПолучитьМассивТекущихКолонок() 
	
	МассивТекущих = Новый Массив();
	
	Для Каждого Стр Из ТаблицаВыбранныеОтклонения Цикл
		
		Если  Стр.ВидОтклонения = "ТекущееЗначение" Тогда
			
			Для Каждого Кол Из Стр.Колонки Цикл
				
				МассивТекущих.Добавить(Кол.Значение);
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат МассивТекущих;
	
КонецФункции






