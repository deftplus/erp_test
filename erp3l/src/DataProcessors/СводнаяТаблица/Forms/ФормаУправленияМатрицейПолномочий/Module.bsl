
&НаКлиенте
Перем ДанныеБуфера;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ПрочитатьСтрукутруБланка();
	
	ВидОбъекта = "Документ";	
	Элементы.ВидДокументаОтбор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ДокументыБД");
		
	СТ = Обработки.СводнаяТаблица.Создать();
	СТ.РежимДиаграммы = Ложь;
	СТ.ОтборПроект = ОтборПроект;
	СТ.ОтборСценарий = ОтборСценарий;
	СТ.НазначениеТаблицы = Перечисления.НазначенияИспользованияСводнойТаблицы.МатрицаПолномочий;	
	СТ.СоздатьПоляФильтров(ЭтаФорма,Бланк);
	   	
	СтруктураТаблицИнтерфейса =  ПолучитьИзВременногоХранилища(СТ.АдресТаблицИнтерфейса);
    СтруктураДопФильтров = ПолучитьИзВременногоХранилища(СТ.АдресСтруктураФильтров);

	Если Параметры.ЭтоНастройкиЦНСИ Тогда
		
		ВидОбъекта = "Документ";
		ЗначениеВреквизитФормы(СТ,"Объект");
		ВидОбъектаПриИзмененииСервер();
		ВидДокументаОтбор = Справочники.ДокументыБД.НайтиПоНаименованию("ЗаявкаНаИзменениеНСИ",,,Справочники.ТипыБазДанных.ТекущаяИБ);
		
		Если ЗначениеЗаполнено(Параметры.ОбъектБД) Тогда	
			ЭтаФорма["Фильтр_ШаблонДокументаБД"] = Параметры.ОбъектБД;
		КонецЕсли;	
		
		ВидДокументаОтборПриИзмененииСервер();
						
	ИначеЕсли ЗначениеЗаполнено(Параметры.ОбъектБД) Тогда
		
		Если ТипЗнч(Параметры.ОбъектБД) = Тип("СправочникСсылка.СправочникиБД") Тогда
			ВидОбъекта = "Справочник";	
		Иначе	
			ВидОбъекта = "Документ";	
		КонецЕсли;
					
		ЗначениеВреквизитФормы(СТ,"Объект");
		ВидОбъектаПриИзмененииСервер();
		ВидДокументаОтбор = Параметры.ОбъектБД;		
		ВидДокументаОтборПриИзмененииСервер();			
	КонецЕсли;
	
	
	ТаблицаСтроки.Загрузить(СтруктураТаблицИнтерфейса.ТаблицаСтроки);
	ТаблицаКолонки.Загрузить(СтруктураТаблицИнтерфейса.ТаблицаКолонки);
	ТаблицаСтраницы.Загрузить(СтруктураТаблицИнтерфейса.ТаблицаСтраницы);
	
	
	ЗначениеВреквизитФормы(СТ,"Объект");
	
	ОбновитьПолеФильтров();
	
	ВерсияРегламента = Параметры.ВерсияОрганизационнойСтруктуры;
	
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ДокументБД",ВидДокументаОтбор);
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
		
	СоздатьСводнуюТаблицуСКД();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ДанныеБуфера = Новый Массив;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещенийФормы

&НаКлиенте
Процедура НастрйкаОсейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ИзменитьСтруктуруТаблицы(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастрйкаРедактированияОтветственныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ПоказатьОповещениеПользователя(,, НСтр("ru = 'Обновление таблицы данных'"), БиблиотекаКартинок.ДлительнаяОперация48);
		СоздатьСводнуюТаблицуСКД();
		Возврат;
	КонецЕсли;
	 
 КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСводнойТаблицы

&НаКлиенте
Процедура СкопироватьДанныеПоСтроке(Команда)
	
	ВыдОбласть =ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0];
	
	Если ВыдОбласть.Право - ВыдОбласть.Лево<>0 Тогда
		ГраницаОбласти =   ВыдОбласть.Право;
	Иначе	
		ГраницаОбласти =  ПолеТабличногоДокументаМакет.ШиринаТаблицы;
	КонецЕсли;
	
	МассивСтрок = Новый Массив();
	НачальныйИндексКолонки = ВыдОбласть.Лево;

	 
	ОбластьДляВставки = ПолеТабличногоДокументаМакет.Область(ВыдОбласть.Верх,ВыдОбласть.Лево,ВыдОбласть.Низ,ГраницаОбласти);
	
	КодРесурса = "";
	Расшифровка = ПолеТабличногоДокументаМакет.Область(ВыдОбласть.Верх,ВыдОбласть.Лево,ВыдОбласть.Верх,ВыдОбласть.Лево).Расшифровка;
	Если ТипЗнч(Расшифровка)  = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		СтруктураРасшифровки = ПолучитьРасшифровкуЯчейки(Расшифровка);
		Если СтруктураРасшифровки.Свойство("КодРесурса") Тогда
			 КодРесурса = СтруктураРасшифровки.КодРесурса;
		КонецЕсли;	
		
	КонецЕсли;

	
	
	Для  СтрУ=ВыдОбласть.Верх По ВыдОбласть.Низ Цикл 
		Если  ТипЗнч(ПолеТабличногоДокументаМакет.Область(СтрУ,ВыдОбласть.Право,СтрУ,ВыдОбласть.Право).Расшифровка)=Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
			МассивЗначений = Новый Массив();
			Значение = ПолеТабличногоДокументаМакет.Область(СтрУ,ВыдОбласть.Лево,СтрУ,ВыдОбласть.Лево).Расшифровка;
			Для ИндК = НачальныйИндексКолонки По ГраницаОбласти Цикл
				
				Область = ПолеТабличногоДокументаМакет.Область(СтрУ,ИндК,СтрУ,ИндК);
				Если  ТипЗнч(Область.Расшифровка)=Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
					МассивЗначений.Добавить(Значение);
				КонецЕсли;
				
			КонецЦикла;	
		КонецЕсли;	
		
		МассивСтрок.Добавить(МассивЗначений);
		
	КонецЦикла;
	СкопироватьЗначениеПоКолонкам(ОбластьДляВставки.Имя,МассивСтрок,КодРесурса);
	СоздатьСводнуюТаблицуСКД();
  
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьДанныеПоКолонке(Команда)
	
	ВыдОбласть =ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0];
	
	Если ВыдОбласть.Низ - ВыдОбласть.Верх<>0 Тогда
		ГраницаОбласти =   ВыдОбласть.Низ;
	Иначе	
		ГраницаОбласти =   ПолеТабличногоДокументаМакет.ВысотаТаблицы;	
	КонецЕсли;
	МассивСтрок = Новый Массив();
	НачальныйИндексСтроки = ВыдОбласть.Верх;	
	
	ОбластьДляВставки = ПолеТабличногоДокументаМакет.Область(ВыдОбласть.Верх,ВыдОбласть.Лево,ГраницаОбласти,ВыдОбласть.Право);

	
	Для  СтрУ=ВыдОбласть.Верх По ГраницаОбласти Цикл 
		Если  ТипЗнч(ПолеТабличногоДокументаМакет.Область(СтрУ,ВыдОбласть.Право,СтрУ,ВыдОбласть.Право).Расшифровка)=Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
			МассивЗначений = Новый Массив();
			
			Для ИндК =  ВыдОбласть.Лево По ВыдОбласть.Право Цикл
				Значение = ПолеТабличногоДокументаМакет.Область(ВыдОбласть.Верх,ИндК,ВыдОбласть.Верх,ИндК).Расшифровка;
				Область = ПолеТабличногоДокументаМакет.Область(СтрУ,ИндК,СтрУ,ИндК);
				Если  ТипЗнч(Область.Расшифровка)=Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
					МассивЗначений.Добавить(Значение);
				КонецЕсли;
				
			КонецЦикла;	
		КонецЕсли;	
		
		МассивСтрок.Добавить(МассивЗначений);
		
	КонецЦикла;
    СкопироватьЗначениеПоКолонкам(ОбластьДляВставки.Имя,МассивСтрок,"");
	СоздатьСводнуюТаблицуСКД();
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьЗначениеПоКолонкам(ИмяОбласти,МассивЗначений,КодРесурса)
	
	СтруктураРасшифровки = Новый Структура;
	СтруктураРасшифровки.Вставить("ДокументБД",ВидДокументаОтбор);
	СтруктураРасшифровки.Вставить("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	СтруктураРасшифровки.Вставить("Организация");
    СтруктураРасшифровки.Вставить("Проект");
	СтруктураРасшифровки.Вставить("Бланк");
	СтруктураРасшифровки.Вставить("ШаблонДокументаБД");

	
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаИзмененныхПоказателей = Новый ТаблицаЗначений;
	РабочийОбъект.ВставитьЗначениеВОбласть(ПолеТабличногоДокументаМакет,ИмяОбласти,МассивЗначений,,"МатрицаПолномочий",СтруктураРасшифровки,КодРесурса);

	   
КонецПроцедуры
    
#КонецОбласти

#Область ОбработчикиКомандРежимаРаботыСДанными

&НаКлиенте
Процедура ПоказатьНастройкиТаблицы(Команда)
		
	Параметры_ = Новый Структура("Бланк", Бланк);
	Параметры_.Вставить("АдресТекущихНастроек",Объект.АдресТаблицИнтерфейса);
	Параметры_.Вставить("ЗаблокироватьДоступныеПоля");
    Параметры_.Вставить("РежимРедактированияСвойств",Ложь);
	Параметры_.Вставить("ИерархияСтрок",Истина);
	Параметры_.Вставить("ИерархияКолонок",Ложь);

	
	ИзмененаСтруктура = Истина;
	ИзмененыДанные = Истина;
	Оповещение = Новый ОписаниеОповещения("НастрйкаОсейЗавершение", ЭтаФорма);

	
	ОткрытьФорму("ОбщаяФорма.ФормаНастроекСтруктурыСводнойТаблицы", 
	Параметры_,,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПоляТабличногоДокумента 

&НаКлиенте
Процедура ПолеТабличногоДокументаМакетВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если ТипЗнч(Область.Расшифровка)<>Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		 Возврат;
	КонецЕсли;	
	
	Если Область.Право<=ПолеТабличногоДокументаМакет.ФиксацияСлева ИЛИ Область.Верх<=ПолеТабличногоДокументаМакет.ФиксацияСверху Тогда
		 Возврат;
	КонецЕсли;	
	
	Параметры_ = Новый Структура("АдресПараметров,ТипОбъектаСогласования",ПолучитьПараметрыЯчейки(Область.Расшифровка),ВидДокументаОтбор);
	
	ИзмененаСтруктура = Истина;
	ИзмененыДанные = Истина;
	Оповещение = Новый ОписаниеОповещения("НастрйкаРедактированияОтветственныхЗавершение", ЭтаФорма);

	
	ОткрытьФорму("Обработка.СводнаяТаблица.Форма.ФормаРедактированияОтветственных", 
	Параметры_,,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыЯчейки(эРасшифровка)
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Объект.АдресХранилищаДанныеРасшифровки);
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	АналитикиОтбораИсточник = Новый Структура;
	АналитикиОтбораИсточник.Вставить("ДокументБД",ВидДокументаОтбор);
	АналитикиОтбораИсточник.Вставить("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	АналитикиОтбораИсточник.Вставить("Организация");
    АналитикиОтбораИсточник.Вставить("Проект");
	АналитикиОтбораИсточник.Вставить("Бланк");
	АналитикиОтбораИсточник.Вставить("ШаблонДокументаБД");
	  
	ТекущееПоле = ДанныеРасшифровки.Элементы[эРасшифровка].ПолучитьПоля()[0].Поле;
	АналитикиОтбораИсточник.Вставить(ТекущееПоле,ДанныеРасшифровки.Элементы[эРасшифровка].ПолучитьПоля()[0].Значение); 
	
	РабочийОбъект.ПолучитьАналитикиЯчейкиСОтборами(ДанныеРасшифровки,эРасшифровка,,,АналитикиОтбораИсточник);

	Возврат ПоместитьВоВременноеХранилище(АналитикиОтбораИсточник,Новый УникальныйИдентификатор); 
	
КонецФункции	

#КонецОбласти

#Область СервисныеПроцедурыИФункции 

&НаСервере
Процедура ПрочитатьСтрукутруБланка()
	 
	ВидОтчетаОтбор = Бланк.Владелец;
	ТаблицаДоступныеПоля.Очистить();
	НастройкиПолейД=РеквизитФормыВзначение("ДоступныеПоля");
	Нполе = НастройкиПолейД.Строки.Добавить();	
	Нполе.Поле = "";
		
	СводнаяТаблицаУХ.ЗаполнитьДоступныеПоляМатрицаПолномочий(ТаблицаДоступныеПоля);
	
	Для Каждого дПоле из ТаблицаДоступныеПоля Цикл
		нНполе =  Нполе.Строки.Добавить();
		нНполе.ПолеСиноним = СтрЗаменить(дПоле.Код,"Фильтр_","");
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(НастройкиПолейД,"ДоступныеПоля");
	
	СоздатьРеквизитыФильтры();
	
	ЭтаФорма.Заголовок = НСтр("ru = 'Матрица полномочий'");
			
	ВыбранныеСтроки =  РеквизитФормыВЗначение("КэшАналитикПоказателей").ВыгрузитьКолонку("Строка");
	ВыбранныеКолонки = РеквизитФормыВЗначение("ТаблицаВыбранныеРесурсы").ВыгрузитьКолонку("Ресурс");

	СводнаяТаблицаУХ.ЗаполнитьВыбранныеПоказатели(ВыбранныеСтроки,ВыбранныеКолонки,ВыбранныеПоказатели);
		
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыФильтры();

	МассивНовыхРеквизитов = Новый Массив;
	
	Для Каждого нПоле Из ТаблицаДоступныеПоля Цикл
		Если МассивДобавленныхРеквизитов.НайтиПоЗначению(нПоле.Код)=Неопределено Тогда
			НовыйРеквизит  = Новый РеквизитФормы(нПоле.Код, Новый ОписаниеТипов(нПоле.ТипСтрока), , нПоле.Наименование);
			МассивНовыхРеквизитов.Добавить(НовыйРеквизит);
			МассивДобавленныхРеквизитов.Добавить(нПоле.Код);
		КонецЕсли;	
	КонецЦикла;
    ИзменитьРеквизиты(МассивНовыхРеквизитов);
    
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитФильтраШаблонаДокумента()
	
		
	Если НЕ ЗначениеЗаполнено(ВидДокументаОтбор) Тогда
		Возврат;
	КонецЕсли;	
	
	РеквизитШаблона = ВидДокументаОтбор.РеквизитШаблонаДокумета;
	Если НЕ  ЗначениеЗаполнено(РеквизитШаблона) Тогда
		Если  ВидДокументаОтбор.ИспользуетсяВНастройкахРеглмента Тогда	
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(РеквизитШаблона) Тогда
		
		МассивУдаляемыхРеквизитов = Новый Массив;
		МассивУдаляемыхРеквизитов.Добавить("Фильтр_ШаблонДокументаБД");
		ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
		
		МассивНовыхРеквизитов = Новый Массив;
		ТипРеквизитаШаблона=Метаданные.НайтиПоТипу(Метаданные.Документы[ВидДокументаОтбор.Наименование].Реквизиты[РеквизитШаблона].Тип.Типы()[0]);	
		НовыйРеквизит  = Новый РеквизитФормы("Фильтр_ШаблонДокументаБД", Новый ОписаниеТипов("СправочникСсылка."+ТипРеквизитаШаблона.Имя), , "Шаблон");
		МассивНовыхРеквизитов.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(МассивНовыхРеквизитов);
		
	Иначе
		
		МассивУдаляемыхРеквизитов = Новый Массив;
		МассивУдаляемыхРеквизитов.Добавить("Фильтр_ШаблонДокументаБД");
		ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
		
		МассивНовыхРеквизитов = Новый Массив;
		Если ТипЗнч(ВидДокументаОтбор) = Тип("СправочникСсылка.ДокументыБД") Тогда	
			ТипРеквизитаШаблона = "СправочникСсылка.ДокументыБД";
		Иначе
			ТипРеквизитаШаблона = "СправочникСсылка.СправочникиБД";
		КонецЕсли;
		
		НовыйРеквизит  = Новый РеквизитФормы("Фильтр_ШаблонДокументаБД", Новый ОписаниеТипов(ТипРеквизитаШаблона), , "Шаблон");
		МассивНовыхРеквизитов.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(МассивНовыхРеквизитов);

		ЭтаФорма.Фильтр_ШаблонДокументаБД = ВидДокументаОтбор; 
		
	КонецЕсли;
   
	
КонецПроцедуры	

&НаСервере
Процедура  ОбновитьПолеФильтров()
	
	ОновнаяПодгруппа = Неопределено;
	
	ГруппаДополнительныеФильтры = Элементы.Найти("ГруппаДополнительныеФильтры");
		
	МассивУдаляемыхЭлементов = Новый Массив;
	Для Каждого Поле_ ИЗ  ГруппаДополнительныеФильтры.ПодчиненныеЭлементы Цикл
		МассивУдаляемыхЭлементов.Добавить(Поле_);
	КонецЦикла;
		
	Для Каждого уПоле Из МассивУдаляемыхЭлементов Цикл
		  Элементы.Удалить(уПоле);
	КонецЦикла;
	
	ОновнаяПодгруппа = ГруппаДополнительныеФильтры;

	Для Каждого СтрПоле из ТаблицаСтраницы Цикл				
		КодПоля = СтрПоле.Код;
		ЭлементТаблицаДанных =  Элементы.Найти("Элемент_"+КодПоля);	
		Если  ЭлементТаблицаДанных = Неопределено Тогда
			ЭлементТаблицаДанных  = Элементы.Добавить("Элемент_"+КодПоля, Тип("ПолеФормы"), ОновнаяПодгруппа);
			ЭлементТаблицаДанных.ПутьКДанным  = КодПоля;
			ЭлементТаблицаДанных.Вид = ВидПоляФормы.ПолеВвода;
			ЭлементТаблицаДанных.УстановитьДействие("ПриИзменении","НарисоватьТаблицу");
			ЭлементТаблицаДанных.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
			ЭлементТаблицаДанных.Ширина = 20;
			Если КодПоля = "Фильтр_ШаблонДокументаБД" Тогда
				ЭлементТаблицаДанных.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
			КонецЕсли;
		КонецЕсли;
				
		Если ЗначениеЗаполнено(ВидДокументаОтбор) Тогда
			
			Если ВидДокументаОтбор.Наименование = "ЗаявкаНаИзменениеНСИ" Тогда
				ЭлементТаблицаДанных.Доступность = Истина;
				Возврат;
			КонецЕсли;	
			
			Если КодПоля = "Фильтр_ШаблонДокументаБД" И НЕ ВидДокументаОтбор.ИспользуетсяВНастройкахРеглмента Тогда
				ЭлементТаблицаДанных.Доступность = Ложь;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НарисоватьТаблицу(Команда)
	
	ПоказатьОповещениеПользователя(,, НСтр("ru = 'Обновление таблицы данных'"),БиблиотекаКартинок.ДлительнаяОперация48);
	СоздатьСводнуюТаблицуСКД();
	
КонецПроцедуры
    
&НаСервере  
Процедура СоздатьСводнуюТаблицуСКД(ОбновитьСтруктуру = Неопределено)
					
	ТаблицыИнтерфейса = ПолучитьИзВременногоХранилища(Объект.АдресТаблицИнтерфейса);
    СтруктураФильтровИтог = ПолучитьИзВременногоХранилища(Объект.АдресСтруктураФильтров);	
	
	РегистрПолномочий.Отбор.Элементы.Очистить();
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(РегистрПолномочий.Отбор,"ДокументБД",ВидДокументаОтбор,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(РегистрПолномочий.Отбор,"ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	
	Для Каждого Страница ИЗ ТаблицыИнтерфейса.ТаблицаСтраницы Цикл		
		СтруктураФильтровИтог.Вставить(СтрЗаменить(Страница.Код,"Фильтр_",""),ЭтаФорма[Страница.Код]);		
		ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(РегистрПолномочий.Отбор,СтрЗаменить(Страница.Код,"Фильтр_",""),ЭтаФорма[Страница.Код],ВидСравненияКомпоновкиДанных.Равно,,Истина);		
	КонецЦикла;
	
	СТ = РеквизитФормыВЗначение("Объект");
	СТ.Масштаб = Масштаб;
	СТ.Точность = Точность;
	СТ.ВариантОтображенияРесурсов = ВариантыТаблицы;
	СТ.ВыбранныйГоризонт = ПериодПланированияОтбор;	
	СтатусВыполнения = СТ.ПолучитьИтоговыйМакетМатрицаПолномочий(ВидДокументаОтбор,ВерсияРегламента,ПолеТабличногоДокументаМакет,Бланк,ВидДокументаОтбор,СТ_ДополнительныеНастройки,СтруктураФильтровИтог,ОбновитьСтруктуру);
		
	Если СтатусВыполнения = "стОшибкаИнициализацииКлючевыхРеквизитов" Тогда
		Элементы.КомандыРежимаРаботыСДанными.Доступность = Ложь;
		Элементы.ПолеТабличногоДокументаМакет.Доступность = Ложь;
	Иначе
		Элементы.КомандыРежимаРаботыСДанными.Доступность = Истина;
		Элементы.ПолеТабличногоДокументаМакет.Доступность = Истина;
	КонецЕсли;	
	
	АдресХранилищаДанныеРасшифровки =  СТ.АдресХранилищаДанныеРасшифровки;
	
	ИзмененаСтруктура = Ложь;
	ИзмененыДанные = Ложь;
	ИзмененПериод = Ложь;
	
	ЗначениеВРеквизитФормы(СТ,"Объект");
		
КонецПроцедуры

#КонецОбласти

&НаСервере 
Процедура ИзменитьСтруктуруТаблицы(Параметр)
	
	Если Не ЗначениеЗаполнено(Параметр) Тогда
		 Возврат;
	КонецЕсли;	
	
	СтруктураТаблиц = ПолучитьИзВременногоХранилища(Параметр.СтруктураТаблиц);
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(РабочийОбъект.АдресТаблицИнтерфейса);
	СтруктураТаблицИнтерфейса.ТаблицаСтроки   = СтруктураТаблиц.ТаблицаСтроки.Скопировать();
	СтруктураТаблицИнтерфейса.ТаблицаКолонки  = СтруктураТаблиц.ТаблицаКолонки.Скопировать();
	СтруктураТаблицИнтерфейса.ТаблицаСтраницы = СтруктураТаблиц.ТаблицаСтраницы.Скопировать();
	СтруктураТаблицИнтерфейса.ТаблицаДоступныеПоля = СтруктураТаблиц.ТаблицаДоступныеПоля;
	
	РабочийОбъект.АдресТаблицИнтерфейса = ПоместитьВоВременноеХранилище(СтруктураТаблицИнтерфейса,новый УникальныйИдентификатор);
	ТаблицаСтроки.Загрузить(СтруктураТаблиц.ТаблицаСтроки);
	ТаблицаКолонки.Загрузить(СтруктураТаблиц.ТаблицаКолонки);
	ТаблицаСтраницы.Загрузить(СтруктураТаблиц.ТаблицаСтраницы);
	
	ОбновитьПолеФильтров();
	ЗначениеВРеквизитФормы(РабочийОбъект,"Объект");
	СоздатьСводнуюТаблицуСКД(Истина);

КонецПроцедуры	
  
&НаКлиенте
Процедура УстановитьФильтры(Команда)
	 
	 Элементы.ПанельНастроекСводнойТаблицы.Видимость = Истина;
	 Элементы.УстановитьФильтры.Видимость = Ложь;	 
	 
 КонецПроцедуры

&НаКлиенте
Процедура СкрытьПанельОтборов(Команда)
	 
	 Элементы.ПанельНастроекСводнойТаблицы.Видимость = Ложь;
	 Элементы.УстановитьФильтры.Видимость = Истина;
	 
 КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОтборПриИзменении(Элемент)
	
	Фильтр_ШаблонДокументаБД = Неопределено;
	
	ВидДокументаОтборПриИзмененииСервер();
	
	ОбновитьПолеФильтров();
	
	НарисоватьТаблицу(Неопределено);
	 
КонецПроцедуры

&НаКлиенте
Процедура Прменить(Команда)
	 
	 СоздатьСводнуюТаблицуСКД();
	 
КонецПроцедуры

&НаКлиенте
Процедура ВставитьИзБуфера(Команда)
	
	МассивЗначений = Новый Массив;		
	//РазобратьДанныеБУфера(МассивЗначений);
	Для Каждого Область Из ПолеТабличногоДокументаМакет.ВыделенныеОбласти Цикл
		ВставитьЗначенияСервер(Область.Имя,ДанныеБуфера);
	КонецЦикла;
		
	ПоказатьОповещениеПользователя(,, НСтр("ru = 'Обновление таблицы данных'"),БиблиотекаКартинок.ДлительнаяОперация48);
	СоздатьСводнуюТаблицуСКД();
	
КонецПроцедуры

&НаСервере
Процедура РазобратьДанныеБуфера(Верх,Лево,Низ,Право,ДанныеБуфера)
	
	 
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Объект.АдресХранилищаДанныеРасшифровки);
	
	Для Стр = Верх По Низ Цикл
		Для Кол = Лево По Право Цикл
			МассивЗначенийСтроки = Новый Массив();
			ИмяТекущегоРесурса = ДанныеРасшифровки.Элементы[ПолеТабличногоДокументаМакет.Область(Стр,Кол,Стр,Кол).Расшифровка].ПолучитьПоля()[0].Значение;
            МассивЗначенийСтроки.Добавить(ИмяТекущегоРесурса);

		КонецЦикла;
		ДанныеБуфера.Добавить(МассивЗначенийСтроки);
	КонецЦикла;
			 		
КонецПроцедуры

&НаСервере
Процедура ВставитьЗначенияСервер(ИмяОбласти,МассивЗначений)
	
	СтруктураРасшифровки = Новый Структура;
	СтруктураРасшифровки.Вставить("ДокументБД",ВидДокументаОтбор);
	СтруктураРасшифровки.Вставить("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	СтруктураРасшифровки.Вставить("Организация");
    СтруктураРасшифровки.Вставить("Проект");
	СтруктураРасшифровки.Вставить("Бланк");
	СтруктураРасшифровки.Вставить("ШаблонДокументаБД");
	  
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаИзмененныхПоказателей = Новый ТаблицаЗначений;
	РабочийОбъект.ВставитьЗначениеВОбласть(ПолеТабличногоДокументаМакет,ИмяОбласти,МассивЗначений,,"МатрицаПолномочий",СтруктураРасшифровки);
		
КонецПроцедуры

&НаКлиенте
 Процедура СнятьОтбор(Команда)
	 
	 Элементы.СнятьОтбор.Видимость = Ложь;
	 Элементы.УстановитьФильтры.Заголовок = НСтр("ru = 'Доп. отборы (нк установлены)'");
	 ПоказатьОповещениеПользователя(,,НСтр("ru = 'Обновление таблицы данных'"), БиблиотекаКартинок.ДлительнаяОперация48);
	 СоздатьСводнуюТаблицуСКД();

	 // Вставить содержимое обработчика.
 КонецПроцедуры
 
&НаКлиенте
Процедура ВидОбъектаПриИзменении(Элемент)
	 
	  ВидОбъектаПриИзмененииСервер();
	  НарисоватьТаблицу(Неопределено);
	  
КонецПроцедуры

&НаСервере
Процедура ВидОбъектаПриИзмененииСервер()
		
	Если ВидОбъекта = "Документ" Тогда
		Элементы.ВидДокументаОтбор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ДокументыБД");
		ВидДокументаОтбор = Справочники.ДокументыБД.ПустаяСсылка();
	Иначе	
		Элементы.ВидДокументаОтбор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СправочникиБД");
		ВидДокументаОтбор = Справочники.СправочникиБД.ПустаяСсылка();
	КонецЕсли;
	ВерсияРегламента = Справочники.ВерсииРегламентовПодготовкиОтчетности.ПустаяСсылка();
	
		
КонецПроцедуры

// Возвращает массив справочников ИБ, у которых включена опция Контролируется.
&НаСервере
Функция МассивКонтролируемыхОбъектовИБ()
	РезультатФункции = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СправочникиБД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СправочникиБД КАК СправочникиБД
	|ГДЕ
	|	НЕ СправочникиБД.ПометкаУдаления
	|	И СправочникиБД.Владелец = &Владелец
	|	И СправочникиБД.Контролируемый";
	Запрос.УстановитьПараметр("Владелец", Справочники.ТипыБазДанных.ТекущаяИБ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РезультатФункции.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	Возврат РезультатФункции;		
КонецФункции		// МассивКонтролируемыхОбъектовИБ()	

&НаСервере
Процедура ВидДокументаОтборПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(ВидДокументаОтбор) И ВидОбъекта = "Документ"  Тогда
		Элементы.ВерсияРегламента.Видимость =  ВидДокументаОтбор.ИспользуетсяВНастройкахРеглмента;	
	Иначе	
		Элементы.ВерсияРегламента.Видимость = Ложь;
	КонецЕсли;
	
	Если ВидДокументаОтбор.Наименование = "ЗаявкаНаИзменениеНСИ" Тогда			
		Элементы.ВерсияРегламента.Видимость=Ложь;
		// Проверим наличие хотя бы одного контролируемого справочника.
		МассивКонтролируемых = МассивКонтролируемыхОбъектовИБ();
		Если МассивКонтролируемых.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Матрица полномочий пуста, поскольку в текущей информационной базе отсутствуют справочники с включенным флагом ""Контролируемый справочник""'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Иначе
			// Проверка пройдена.
		КонецЕсли;
    КонецЕсли;
	
	ВерсияРегламента = Справочники.ВерсииРегламентовПодготовкиОтчетности.ПустаяСсылка();
	
	СоздатьРеквизитФильтраШаблонаДокумента();	
	
	Если НЕ ВидДокументаОтбор.ИспользуетсяВНастройкахРеглмента И НЕ ВидДокументаОтбор.Наименование = "ЗаявкаНаИзменениеНСИ" Тогда
		Фильтр_ШаблонДокументаБД = ВидДокументаОтбор;
		
	Иначе	 
		Если ЗначениеЗаполнено(Параметры.ШаблонДокументаБД) Тогда
			
			ЭтаФорма["Фильтр_ШаблонДокументаБД"] = Параметры.ШаблонДокументаБД;
			Фильтр_ШаблонДокументаБД             = Параметры.ШаблонДокументаБД;
			
		КонецЕсли;	
		
	КонецЕсли;
		
	ТаблицыИнтерфейса = ПолучитьИзВременногоХранилища(Объект.АдресТаблицИнтерфейса);

	Если ВидДокументаОтбор = Справочники.ДокументыБД.НайтиПоНаименованию("НастраиваемыйОтчет",,,Справочники.ТипыБазДанных.ТекущаяИБ) 
		ИЛИ (ВидДокументаОтбор = Справочники.ДокументыБД.НайтиПоНаименованию("ЗаявкаНаИзменениеНСИ",,,Справочники.ТипыБазДанных.ТекущаяИБ)) 
		ИЛИ (ВидДокументаОтбор = Справочники.ДокументыБД.НайтиПоНаименованию("РакурсДанных",,,Справочники.ТипыБазДанных.ТекущаяИБ)) 
		И НЕ ЗначениеЗаполнено(Фильтр_ШаблонДокументаБД) Тогда		
		СводнаяТаблицаУХ.ПеренестиИзмерение(ТаблицыИнтерфейса.ТаблицаСтраницы,ТаблицыИнтерфейса.ТаблицаКолонки,"Фильтр_ШаблонДокументаБД");	
	Иначе	
		СводнаяТаблицаУХ.ПеренестиИзмерение(ТаблицыИнтерфейса.ТаблицаСтроки,ТаблицыИнтерфейса.ТаблицаСтраницы,"Фильтр_ШаблонДокументаБД");
	КонецЕсли;
	
	
	ТаблицаСтроки.Загрузить(ТаблицыИнтерфейса.ТаблицаСтроки);
	ТаблицаКолонки.Загрузить(ТаблицыИнтерфейса.ТаблицаКолонки);
	ТаблицаСтраницы.Загрузить(ТаблицыИнтерфейса.ТаблицаСтраницы);

	ОбновитьПолеФильтров();
	
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ДокументБД",ВидДокументаОтбор);
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияРегламентаПриИзменении(Элемент)
	
	//ВидДокументаОтборПриИзмененииСервер();
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ДокументБД",ВидДокументаОтбор);
	РегистрПолномочий.Параметры.УстановитьЗначениеПараметра("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	
	НарисоватьТаблицу(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура КопироватьВБуфер(Команда)
	
	ДанныеБуфера.Очистить();
	
	РазобратьДанныеБУфера(ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Верх,ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Лево,
	ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Низ,ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Право,ДанныеБуфера);
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Для Каждого Область Из ПолеТабличногоДокументаМакет.ВыделенныеОбласти Цикл
		ОчиститьСодержимоеРаскрытияСервер(Область.Имя);
	КонецЦикла;
	СоздатьСводнуюТаблицуСКД();
КонецПроцедуры

&НаСервере
Процедура ОчиститьСодержимоеРаскрытияСервер(ИмяОбласти)
	
	РабочийОбъект = РеквизитФормыВЗначение("Объект");

	СтруктураРасшифровки = Новый Структура;
	СтруктураРасшифровки.Вставить("ДокументБД",ВидДокументаОтбор);
	СтруктураРасшифровки.Вставить("ВерсияРегламентаПодготовкиОтчетности",ВерсияРегламента);
	СтруктураРасшифровки.Вставить("Организация");
    СтруктураРасшифровки.Вставить("Проект");
	СтруктураРасшифровки.Вставить("Бланк");
	СтруктураРасшифровки.Вставить("ШаблонДокументаБД");

	ТаблицаИзмененныхПоказателей = Новый ТаблицаЗначений;
	
	РабочийОбъект.ВставитьЗначениеВОбласть(ПолеТабличногоДокументаМакет,ИмяОбласти,"",,"МатрицаПолномочий",СтруктураРасшифровки);

	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуЯчейки(Расшифровка)
		
	РабочийОбъект = РеквизитФормыВЗначение("Объект");
	//АналитикиОтбораИсточник = РабочийОбъект.ПолучитьРасшифровкуТаблицы(Расшифровка);
	СтруктураТаблицИнтерфейса = ПолучитьИзВременногоХранилища(РабочийОбъект.АдресТаблицИнтерфейса);
	АналитикиОтбораИсточник = Новый Структура;
	//РабочийОбъект.СоздатьОписаниеСтруктурыПолей(АналитикиОтбораИсточник,СтруктураТаблицИнтерфейса.ДоступныеАналитики);
	РабочийОбъект.ПолучитьАналитикиЯчейкиСОтборами(,Расшифровка,,,АналитикиОтбораИсточник);	
		
	Возврат АналитикиОтбораИсточник;
	
КонецФункции

&НаСервере
Процедура НастрйкаРедактированияОтветственныхЗавершениеСервер(Область,Значение) Экспорт
	
	
	Область.Шрифт = Новый Шрифт(ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Шрифт,,,Истина);
	Область.Текст = Значение;

	 
 КонецПроцедуры

&НаКлиенте
Процедура ПолеТабличногоДокументаМакетПриАктивизацииОбласти(Элемент)
	СтатусЯчейки = "";
	
	Если НЕ ТипЗнч(ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0]) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущаяОбласть.Имя ="T" Тогда
		Элементы.ПолеТабличногоДокументаМакет.Редактирование = Ложь;
		Элементы.КомандыРежимаРаботыСДанными.Доступность = Ложь;
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(ПолеТабличногоДокументаМакет.ВыделенныеОбласти) = Тип("ВыделенныеОбластиТабличногоДокумента") Тогда		
		Если ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Верх <= ПолеТабличногоДокументаМакет.ФиксацияСверху Тогда
			Элементы.ПолеТабличногоДокументаМакет.Редактирование = Ложь;
			Элементы.КомандыРежимаРаботыСДанными.Доступность = Ложь;
		ИначеЕсли ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Лево <= ПолеТабличногоДокументаМакет.ФиксацияСлева Тогда	
			Элементы.ПолеТабличногоДокументаМакет.Редактирование = Истина;
			Элементы.КомандыРежимаРаботыСДанными.Доступность = Истина;
		ИначеЕсли ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Право > ПолеТабличногоДокументаМакет.ШиринаТаблицы 
			ИЛИ  ПолеТабличногоДокументаМакет.ВыделенныеОбласти[0].Низ > ПолеТабличногоДокументаМакет.ВысотаТаблицы Тогда		
			Элементы.ПолеТабличногоДокументаМакет.Редактирование = Ложь;
			Элементы.КомандыРежимаРаботыСДанными.Доступность = Ложь;
		Иначе	  
			Элементы.ПолеТабличногоДокументаМакет.Редактирование = Истина;
			Элементы.КомандыРежимаРаботыСДанными.Доступность = Истина;			
		КонецЕсли;		
	КонецЕсли;

КонецПроцедуры

