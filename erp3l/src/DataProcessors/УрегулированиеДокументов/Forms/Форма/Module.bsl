
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		
		СтандартнаяОбработка = Ложь;
		ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	КонецЕсли;
	
	Элементы.ДокументыОтобратьРасхождения.Пометка = Истина;
	ПереключитьПодробно(ЭтаФорма, Ложь);
	
	ЗаполнитьТаблицуДокументов();
		
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("Организация") Тогда
		Настройки.Очистить(); //открытие из контекста, настройки не перезаполняем
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьТаблицуДокументов()
КонецПроцедуры

&НаКлиенте
Процедура Подробно(Команда)
	
	ПереключитьПодробно(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОтобратьРасхождения(Команда)
	
	Элементы.ДокументыОтобратьВсе.Пометка = Ложь;
	Элементы.ДокументыОтобратьРасхождения.Пометка = Истина;
	
	ЗаполнитьТаблицуДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьВсе(Команда)
	
	Элементы.ДокументыОтобратьВсе.Пометка = Истина;
	Элементы.ДокументыОтобратьРасхождения.Пометка = Ложь;
	
	ЗаполнитьТаблицуДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПоступление(Команда)
	
	ТекущаяСтрока = Элементы.Документы.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьНаСервере(ТекущаяСтрока.ДокументПродавца);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗаполнитьТаблицуДокументов()
КонецПроцедуры

&НаКлиенте
Процедура ПродавецПриИзменении(Элемент)
	ЗаполнитьТаблицуДокументов()
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьТаблицуДокументов()
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаСервере
Функция СформироватьНаСервере(РТУ = Неопределено)
	
	Если РТУ = Неопределено Тогда
		
		ПустойПТУ = Новый (ВстраиваниеУХ.ТипДокументСсылкаПоступлениеТоваровУслуг());
		ТабДокументы = Объект.Документы.НайтиСтроки(Новый Структура("ДокументПокупателя", ПустойПТУ));
	
	Иначе 
		
		ТабДокументы = Объект.Документы.НайтиСтроки(Новый Структура("ДокументПродавца", РТУ));
		
	КонецЕсли;
	
	Результат = Новый Массив;
	
	Для каждого СтрокаДок Из ТабДокументы Цикл
		
		Если СтрокаДок.ДокументПокупателя.Пустая() Тогда
			
			МетаданныеДок = Метаданные.НайтиПоТипу(ТипЗнч(СтрокаДок.ДокументПокупателя));
			НовыйДокумент = Документы[МетаданныеДок.Имя].СоздатьДокумент();

		Иначе	
			НовыйДокумент = СтрокаДок.ДокументПокупателя.ПолучитьОбъект();
		КонецЕсли;
		
		УправлениеЗакупкамиВстраиваниеПереопределяемыйУХ.ЗаполнитьПоступлениеТоваровУслугИзРеализации(
			НовыйДокумент, СтрокаДок.ДокументПродавца, "", Истина);
			
		Попытка
			
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);		
			Результат.Добавить(НовыйДокумент.Ссылка);
	
		Исключение
			
			ШаблонОшибки = НСтр("ru = 'Не удалось сформировать поступление по продаже <%1> по причине: %2'");
			Сообщить(СтрШаблон(ШаблонОшибки, СтрокаДок.ДокументПродавца, ОписаниеОшибки()));	
			
		КонецПопытки;
			
	КонецЦикла;
	
	ЗаполнитьТаблицуДокументов();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДокументов()
	
	Если Объект.Организация.Пустая() Или Не ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		Возврат;
	ИначеЕсли Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеРТУ = "РеализацияТоваровУслуг.Контрагент.ОрганизационнаяЕдиница = &Покупатель";
	УсловиеРТУ = ?(Объект.Продавец.Пустая(), "ИСТИНА", УсловиеРТУ);
	Запрос = Новый Запрос(СтрЗаменить(ТекстЗапроса_Документы(), "&УсловиеРТУ", УсловиеРТУ));
	
	Запрос.УстановитьПараметр("Покупатель", 		Объект.Организация);
	Запрос.УстановитьПараметр("ДатаНачала", 		Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 		Объект.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Продавец", 			Объект.Продавец);
	Запрос.УстановитьПараметр("ТолькоРасхождения", 	Элементы.ДокументыОтобратьРасхождения.Пометка);
		
	Объект.Документы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапроса_Документы()
	
	Возврат 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.СуммаДокумента - ЕСТЬNULL(ПоступлениеТоваровУслуг.СуммаДокумента, 0) КАК Расхождение,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаПродажи,
	|	ПоступлениеТоваровУслуг.СуммаДокумента КАК СуммаПокупки,
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументПродавца,
	|	РеализацияТоваровУслуг.Дата КАК ДатаПродажи,
	|	ПоступлениеТоваровУслуг.Ссылка КАК ДокументПокупателя,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаПокупки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Контрагент.ОрганизационнаяЕдиница = ПоступлениеТоваровУслуг.Организация
	|			И (ПоступлениеТоваровУслуг.Контрагент.ОрганизационнаяЕдиница = РеализацияТоваровУслуг.Организация)
	|			И (ВЫБОР
	|				КОГДА РеализацияТоваровУслуг.СуммаДокумента = ПоступлениеТоваровУслуг.СуммаДокумента
	|					ТОГДА ИСТИНА
	|				КОГДА РеализацияТоваровУслуг.Ссылка = ПоступлениеТоваровУслуг.ДокументОснование
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|			И (ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|			И (ПоступлениеТоваровУслуг.Проведен)
	|			И (НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.Дата, ДЕНЬ))
	|			И (ИСТИНА)
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.Организация = &Продавец
	|	И РеализацияТоваровУслуг.Контрагент.ОрганизационнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &ТолькоРасхождения
	|				ТОГДА РеализацияТоваровУслуг.СуммаДокумента <> ЕСТЬNULL(ПоступлениеТоваровУслуг.СуммаДокумента, 0)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И &УсловиеРТУ";
	
КонецФункции

&НаКлиентеНаСервереБезконтекста
Процедура ПереключитьПодробно(Форма, НоваяПометка = Неопределено)
	
	Элементы = Форма.Элементы;
	
	ПометкаПодробно = ?(НоваяПометка = Неопределено, Не Элементы.ДокументыПодробно.Пометка, НоваяПометка);
	
	Элементы.ДокументыПодробно.Пометка 			= ПометкаПодробно;
	Элементы.ДокументыСуммаПокупки.Видимость 	= ПометкаПодробно;
	Элементы.ДокументыСуммаПродажи.Видимость 	= ПометкаПодробно;
	
КонецПроцедуры

#КонецОбласти







