
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОтменитьЗакрытие(СтруктураПараметров, АдресХранилища) Экспорт
	Для Каждого СтрокаТаблицы Из СтруктураПараметров.ТаблицаОпераций Цикл
		Если СтрокаТаблицы.Картинка = 1 Тогда
			Продолжить;
		КонецЕсли;
		ОтменитьЭтап(СтрокаТаблицы);		
	КонецЦикла;
	АдресХранилища = ПоместитьВоВременноеХранилище(СтруктураПараметров.ТаблицаОпераций, АдресХранилища);
КонецПроцедуры

Процедура ОтменитьЭтап(СтрокаТаблицы) Экспорт
	Если ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) Тогда
		ОбъектДокумент = СтрокаТаблицы.Ссылка.ПолучитьОбъект();
		Если Не ОбъектДокумент.Проведен Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	Попытка
		ОбъектДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено;
		СтрокаТаблицы.Проведен = Ложь;
		СтрокаТаблицы.Картинка = 0;
	Исключение
		СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками;
		СтрокаТаблицы.Картинка = 3;
	КонецПопытки;
КонецПроцедуры

Процедура ЗапуститьЗакрытие(СтруктураПараметров, АдресХранилища) Экспорт
	Для Каждого СтрокаТаблицы Из СтруктураПараметров.ТаблицаОпераций Цикл
		ОписаниеОшибки = "";
		ЗакрытьЭтап(СтрокаТаблицы, СтруктураПараметров.ПериодРегистрации, СтруктураПараметров.Сценарий, СтруктураПараметров.Организация, ОписаниеОшибки);
		Если СтрокаТаблицы.Картинка = 3 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	АдресХранилища = ПоместитьВоВременноеХранилище(СтруктураПараметров.ТаблицаОпераций, АдресХранилища);
КонецПроцедуры

Процедура ЗакрытьЭтап(СтрокаТаблицы, ПериодРегистрации, Сценарий, Организация, ОписаниеОшибки = "") Экспорт
	
	Если СтрокаТаблицы.Картинка = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицы, "Требуется") И Не СтрокаТаблицы.Требуется Тогда		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) Тогда
		ОбъектДокумент = СтрокаТаблицы.Ссылка.ПолучитьОбъект();
	Иначе
		ОбъектДокумент = Документы[Сред(СтрокаТаблицы.Документ, СтрНайти(СтрокаТаблицы.Документ, ".") + 1)].СоздатьДокумент();		
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура("ПериодОтчета, Сценарий, Организация, ЗаполнитьДокумент, ВидОперации", ПериодРегистрации, Сценарий, Организация, Истина, ?(ПустаяСтрока(СтрокаТаблицы.ВидОперации), Неопределено, ПредопределенноеЗначение("Перечисление." + СтрокаТаблицы.ВидОперации)));
	ОбъектДокумент.Заполнить(ЗначенияЗаполнения);
	
	ОбъектДокумент.Дата = КонецДня(ПериодРегистрации.ДатаОкончания);
	ОбъектДокумент.Ответственный = Пользователи.ТекущийПользователь();
	ОбъектДокумент.ПериодОтчета = ПериодРегистрации;
	
	Если ОбъектДокумент.ПроверитьЗаполнение() Тогда
		Попытка
			ОбъектДокумент.Записать(РежимЗаписиДокумента.Проведение);
			СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено;
			СтрокаТаблицы.Ссылка = ОбъектДокумент.Ссылка;
			СтрокаТаблицы.Дата = ОбъектДокумент.Дата;
			СтрокаТаблицы.Ответственный = ОбъектДокумент.Ответственный;
			СтрокаТаблицы.Картинка = 2;
		Исключение
			СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками;
			СтрокаТаблицы.Картинка = 3;
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
	ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) И СтрокаТаблицы.Проведен Тогда
		ОбъектДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками;
		СтрокаТаблицы.Картинка = 3;
		ОписаниеОшибки = ПолучитьОписаниеОшибкиДляСтроки(СтрокаТаблицы);
	Иначе
		СтрокаТаблицы.Состояние = Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками;
		СтрокаТаблицы.Картинка = 3;
		ОписаниеОшибки = ПолучитьОписаниеОшибкиДляСтроки(СтрокаТаблицы);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьОписаниеОшибкиДляСтроки(СтрокаТаблицы)
	Возврат СтрШаблон(НСтр("ru = 'Не удалось автоматически заполнить документ %1'"), СтрокаТаблицы.Документ);
КонецФункции

#КонецЕсли