
Перем ТабОбработанныхДокументов Экспорт;

Процедура ОбработатьКорректировки() Экспорт
	
	ТабОбработанныхДокументов=Новый ТаблицаЗначений;
	ТабОбработанныхДокументов.Колонки.Добавить("ШаблонКорректировки");
	ТабОбработанныхДокументов.Колонки.Добавить("ОбработанныйДокумент");
		
	Если ЗначениеЗаполнено(ШаблонКорректировки) Тогда
		
		ОбработатьКорректировкиПоШаблону();
		
	ИначеЕсли ЗначениеЗаполнено(ДокументБД) Тогда
		
		ОбработатьКорректировкиПоДокументу();
		
	Иначе
		
		ПерезаполнитьКорректировкиПоВсемШаблонам();
			
	КонецЕсли;
				
 КонецПроцедуры // ОбработатьКорректировки() 

Процедура ОбработатьКорректировкиПоДокументу()
	
	МассивШаблоновКорректировок=ПолучитьМассивШаблоновКорректировок();
	ИмяДокумента=ДокументБД.Наименование;
	
	Для Каждого РабочийШаблон ИЗ МассивШаблоновКорректировок Цикл
		
		Если СоздаватьНовые Тогда
			
			ОбновитьСоздвтьКорректировкиПоШаблону(РабочийШаблон,ИмяДокумента);
			
		Иначе
			
			ПерезаполнитьКорректировкиПоШаблону(РабочийШаблон,ИмяДокумента);
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры // ОбработатьКорректировкиПоДокументу() 

Функция ПолучитьМассивШаблоновКорректировок()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ШаблоныТрансформационныхКорректировок.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШаблоныТрансформационныхКорректировок КАК ШаблоныТрансформационныхКорректировок
	|ГДЕ
	|	ШаблоныТрансформационныхКорректировок.ДокументБД = &ДокументБД
	|	И НЕ ШаблоныТрансформационныхКорректировок.ПометкаУдаления";
		
	Запрос.УстановитьПараметр("ДокументБД",ДокументБД);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции // ПолучитьМассивШаблоновКорректировок() 

Процедура ОбработатьКорректировкиПоШаблону()
	
	МассивИменДокументовБД=ПолучитьМассивДокументовБД();
	
	Для Каждого ИмяДокумента ИЗ МассивИменДокументовБД Цикл
		
		Если СоздаватьНовые Тогда
			
			ОбновитьСоздвтьКорректировкиПоШаблону(ШаблонКорректировки,ИмяДокумента);
			
		Иначе
			
			ПерезаполнитьКорректировкиПоШаблону(ШаблонКорректировки,ИмяДокумента);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ОбработатьКорректировкиПоШаблону() 

Процедура ПерезаполнитьКорректировкиПоВсемШаблонам()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтражениеДокументовПоШаблонам.ШаблонОперации КАК ШаблонОперации
	|ПОМЕСТИТЬ ШаблоныКорректировок
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовПоШаблонам КАК ОтражениеДокументовПоШаблонам
	|ГДЕ
	|	НЕ ОтражениеДокументовПоШаблонам.ПроведениеОтменено
	|И ОтражениеДокументовПоШаблонам.ШаблонОперации ССЫЛКА Справочник.ШаблоныТрансформационныхКорректировок";
	
	Если ТолькоНеобработанные Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ОтражениеДокументовПоШаблонам.ОбработкаВыполнена = ЗНАЧЕНИЕ(Перечисление.ДаНет.нет)";
		
	КонецЕсли;	
	
	Запрос.Текст=Запрос.Текст+"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШаблонОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШаблоныТрансформационныхКорректировок.Ссылка КАК ШаблонКорректировки,
	|	ШаблоныТрансформационныхКорректировок.ДокументБД.Наименование КАК НаименованиеДокументаБД
	|ИЗ
	|	Справочник.ШаблоныТрансформационныхКорректировок КАК ШаблоныТрансформационныхКорректировок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШаблоныКорректировок КАК ШаблоныКорректировок
	|		ПО ШаблоныТрансформационныхКорректировок.Ссылка = ШаблоныКорректировок.ШаблонОперации";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ПерезаполнитьКорректировкиПоШаблону(Результат.ШаблонКорректировки,Результат.НаименованиеДокументаБД);
		
	КонецЦикла;	
	
КонецПроцедуры // ПерезаполнитьКорректировкиПоВсемШаблонам()

Процедура ОбновитьКорректировкиПоДокументу(ИсходныйДокумент,РабочийШаблон)
	
	НаборЗаписей=РегистрыСведений.ОтражениеДокументовПоШаблонам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИсходныйДокумент.Установить(ИсходныйДокумент);
	НаборЗаписей.Отбор.ШаблонОперации.Установить(РабочийШаблон);
	
	НаборЗаписей.Прочитать();
	
	Для Каждого ДанныеОбъекта ИЗ НаборЗаписей Цикл
		
		РегистрыСведений.ОтражениеДокументовПоШаблонам.ВыполнитьОтражениеОбъекта(ДанныеОбъекта);
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
	НоваяСтрока=ТабОбработанныхДокументов.Добавить();
	НоваяСтрока.ШаблонКорректировки=РабочийШаблон;
	НоваяСтрока.ОбработанныйДокумент=ИсходныйДокумент;
	
КонецПроцедуры // ОбновитьКорректировкиПоДокументу()

Функция ПолучитьМассивДокументовБД()	
	
	Если ЗначениеЗаполнено(ДокументБД) Тогда
		
		МассивДокументов=Новый Массив;
		МассивДокументов.Добавить(ДокументБД.Наименование);
		
		Возврат МассивДокументов;
		
	Иначе
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ШаблоныТрансформационныхКорректировок.ДокументБД.Наименование КАК НаименованиеДокументаБД
		|ИЗ
		|	Справочник.ШаблоныТрансформационныхКорректировок КАК ШаблоныТрансформационныхКорректировок
		|ГДЕ
		|	ШаблоныТрансформационныхКорректировок.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка",ШаблонКорректировки);
		
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НаименованиеДокументаБД");
		
	КонецЕсли;	
	
КонецФункции // НолучитьТаблицуДокументовБД() 

Процедура ПерезаполнитьКорректировкиПоШаблону(РабочийШаблон,ИмяДокумента)
	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	|	ОтражениеДокументовПоШаблонам.ИсходныйДокумент КАК ИсходныйДокумент
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовПоШаблонам КАК ОтражениеДокументовПоШаблонам
	|ГДЕ
	|	ОтражениеДокументовПоШаблонам.ШаблонОперации = &ШаблонОперации
	|	И НЕ ОтражениеДокументовПоШаблонам.ПроведениеОтменено
	|	И ОтражениеДокументовПоШаблонам.ИсходныйДокумент ССЫЛКА Документ."+ИмяДокумента;
	
	Если ЗначениеЗаполнено(ПериодОбработки.ДатаНачала) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ВЫРАЗИТЬ(ОтражениеДокументовПоШаблонам.ИсходныйДокумент КАК Документ."+ИмяДокумента+").Дата >= &ДатаНач";
		Запрос.УстановитьПараметр("ДатаНач",ПериодОбработки.ДатаНачала);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодОбработки.ДатаОкончания) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ВЫРАЗИТЬ(ОтражениеДокументовПоШаблонам.ИсходныйДокумент КАК Документ."+ИмяДокумента+").Дата <= &ДатаКон";
		Запрос.УстановитьПараметр("ДатаКон",ПериодОбработки.ДатаОкончания);
		
	КонецЕсли;
	
	Если ТолькоНеобработанные Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ОтражениеДокументовПоШаблонам.ОбработкаВыполнена = ЗНАЧЕНИЕ(Перечисление.ДаНет.нет)";
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"
	|Упорядочить ПО
	|ВЫРАЗИТЬ(ОтражениеДокументовПоШаблонам.ИсходныйДокумент КАК Документ."+ИмяДокумента+").Дата";
	
	Запрос.УстановитьПараметр("ШаблонОперации",РабочийШаблон);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ОбновитьКорректировкиПоДокументу(Результат.ИсходныйДокумент,РабочийШаблон);
		
	КонецЦикла;
	
КонецПроцедуры // ПерезаполнитьКорректировкиПоШаблону()

Процедура ОбновитьСоздвтьКорректировкиПоШаблону(РабочийШаблон,ИмяДокумента)
	
	ДокументМД=Метаданные.Документы[ИмяДокумента];
	
	ЕстьСценарий=ОбщегоНазначенияУХ.ЕстьРеквизитОбъектаМД("Сценарий",ДокументМД);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка КАК ИсходныйДокумент,
	|	ДокументыКОбработке.Организация КАК Организация,
	|	ДокументыКОбработке.Дата КАК Дата,";
	
	Если ЕстьСценарий Тогда
		
		Запрос.Текст=Запрос.Текст+"		
		|	ДокументыКОбработке.Сценарий КАК Сценарий";
		
	Иначе
		
		Запрос.Текст=Запрос.Текст+"		
		|	Неопределено КАК Сценарий";
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"			
	|ИЗ
	|	Документ."+ИмяДокумента+" КАК ДокументыКОбработке
	|ГДЕ
	|	ДокументыКОбработке.Проведен";
	
	Если ЗначениеЗаполнено(ПериодОбработки.ДатаНачала) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ДокументыКОбработке.Дата >= &ДатаНач";
		Запрос.УстановитьПараметр("ДатаНач",ПериодОбработки.ДатаНачала);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодОбработки.ДатаОкончания) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|	И ДокументыКОбработке.Дата <= &ДатаКон";
		
		Запрос.УстановитьПараметр("ДатаКон",ПериодОбработки.ДатаОкончания);
		
	КонецЕсли;
	
	Результат=Запрос.Выполнить().Выбрать();
	
	ПланСчетов=РабочийШаблон.ПланСчетов.Наименование;
	
	Пока Результат.Следующий() Цикл
		
		ДанныеДляОтражения=Новый Структура;
		ДанныеДляОтражения.Вставить("ИсходныйДокумент",	Результат.ИсходныйДокумент);
		ДанныеДляОтражения.Вставить("Организация",		Результат.Организация);
		ДанныеДляОтражения.Вставить("Дата",				Результат.Дата);
		
		Если НЕ Результат.Сценарий=Неопределено Тогда
			
			ДанныеДляОтражения.Вставить("Сценарий",Результат.Сценарий);
			
		ИначеЕсли ПланСчетов="МСФО" Тогда
			
			ДанныеДляОтражения.Вставить("Сценарий",Константы.СценарийМСФО.Получить());
			
		Иначе
			
			ДанныеДляОтражения.Вставить("Сценарий",Справочники.Сценарии.Факт);
			
		КонецЕсли;
		
		Обработки.КорректировкиЗначенийПоказателей.СформироватьКорректировкуПоШаблону(РабочийШаблон,ДанныеДляОтражения,Ложь);
		НоваяСтрока=ТабОбработанныхДокументов.Добавить();
		НоваяСтрока.ШаблонКорректировки=РабочийШаблон;
		НоваяСтрока.ОбработанныйДокумент=Результат.ИсходныйДокумент;
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьСоздвтьКорректировкиПоШаблону() 
