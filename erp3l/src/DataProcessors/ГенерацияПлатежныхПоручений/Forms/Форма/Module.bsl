
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	ТребуетсяРеестрПлатежей = Константы.ИспользоватьРеестрПлатежей.Получить();
	
	Если ТребуетсяРеестрПлатежей Тогда
		Объект.ГенерацияПоРееструПлатежей = Истина;
		Элементы.ГенерацияПоРееструПлатежей.Видимость = Ложь;
	Иначе
		Если НЕ (Параметры.Свойство("НачалоПериода") И Параметры.Свойство("КонецПериода")) Тогда
			Объект.НачалоПериода = ОбщегоНазначения.ТекущаяДатаПользователя();
			Объект.КонецПериода  = ОбщегоНазначения.ТекущаяДатаПользователя();
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = ОбщегоНазначенияУХ.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСписокНаСервере();
	
	УправлениеФормой(ЭтотОбъект);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГенерацияПоРееструПлатежейПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РеестрПлатежейПриИзменении(Элемент)
	ОбновитьСписокНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаявкиКИсполнению

&НаКлиенте
Процедура ЗаявкиКИсполнениюСоздаватьПриИзменении(Элемент)
	
	ТекДанные = Элементы.ЗаявкиКИсполнению.ТекущиеДанные;
	Если ТекДанные.Создавать Тогда
		Знак = 1;
	Иначе
		Знак = -1;
	КонецЕсли;
	
	КоличествоКСозданию = КоличествоКСозданию + Знак;
	СуммаКСозданию = СуммаКСозданию + Знак * ТекДанные.СуммаДокумента;

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиКИсполнениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,Элемент.ТекущиеДанные.ЗаявкаНаОперацию);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура КомандаОбновитьСписокЗаявок(Команда)
	
	ОбновитьСписокНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора,,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	УстановитьОтметку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсех(Команда)
	УстановитьОтметку(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СписокСозданныхОбъектов(Команда)
	ОткрытьСписокСозданныхОбъектов();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПлатежныеПоручения(Команда)
	РезультатПроверки = ЭтаФорма.ПроверитьЗаполнение();
	Если РезультатПроверки Тогда
		Состояние(НСтр("ru = 'Формирование платежных поручений'"));
		СоздатьПлатежныеПорученияНаСервере();
		Если Объект.СозданныеДокументы.Количество() Тогда
			ЧтоСоздано = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(Объект.СозданныеДокументы.Количество(), НСтр("ru = 'платежное поручение, платежных поручения, платежных поручений'"));
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Создано %1'"), ЧтоСоздано);
		Иначе
			ТекстСообщения = НСтр("ru = 'Не создано ни одного платежного поручения'");
		КонецЕсли;
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСписокСозданныхОбъектов", ЭтотОбъект);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Создание завершено'"), ОписаниеОповещения, ТекстСообщения, БиблиотекаКартинок.Информация32);
		Оповестить("СозданыПлатежныеПоручения",Объект.РеестрПлатежей);
	Иначе
		// Проверка не пройдена. Создание отменено.
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоПериода = РезультатВыбора.НачалоПериода;
	Объект.КонецПериода  = РезультатВыбора.КонецПериода;
	
	ОбновитьСписокНаСервере();	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьТаблицуЗаявкиКИсполнениюПоПараметрамОтбора();
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый Массив;
	
	НовыйТекстЗапроса = ДенежныеСредстваВстраиваниеУХ.ПолучитьТекстЗапросаТаблицаЗаявкиКИсполнению();
	ТекстыЗапроса.Добавить(НовыйТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДополнительныйОтбор", Истина);
	Запрос.УстановитьПараметр("ДатаНачало", НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("ДатаОкончание", КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстыЗапроса.Добавить("РазмещениеЗаявок.Организация = &Организация");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		ТекстыЗапроса.Добавить("РазмещениеЗаявок.БанковскийСчетКасса = &БанковскийСчет");
		Запрос.УстановитьПараметр("БанковскийСчет", Объект.БанковскийСчет);
	Иначе
		// Не добавляем отбор по счёту.
	КонецЕсли;
	
	Разделитель = Символы.ПС + "И ";
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, Разделитель);
	Объект.ЗаявкиКИсполнению.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуЗаявкиКИсполнениюПоРееструПлатежей();
	
	Если Не ЗначениеЗаполнено(Объект.РеестрПлатежей) Тогда
		Объект.ЗаявкиКИсполнению.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	НовыйТекстЗапроса = ДенежныеСредстваВстраиваниеУХ.ПолучитьТекстЗапросаТаблицаЗаявкиИзРеестраПлатежей();
	Запрос.Текст = НовыйТекстЗапроса;
	
	Запрос.УстановитьПараметр("РеестрПлатежей", Объект.РеестрПлатежей);
	Объект.ЗаявкиКИсполнению.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметку(Отметка)
	
	Для каждого СтрокаДокумента Из Объект.ЗаявкиКИсполнению Цикл
		СтрокаДокумента.Создавать = Отметка;
	КонецЦикла;
	
	ОбновитьИтогиВПодвале();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИтогиВПодвале()
	
	ДокументыКСозданию		= Объект.ЗаявкиКИсполнению.Выгрузить(Новый Структура("Создавать", Истина));
	КоличествоКСозданию		= ДокументыКСозданию.Количество();
	СуммаКСозданию	= ДокументыКСозданию.Итог("СуммаДокумента");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаСервере()
	
	Если Объект.ГенерацияПоРееструПлатежей Тогда
		ОбновитьТаблицуЗаявкиКИсполнениюПоРееструПлатежей();
	Иначе
		ОбновитьТаблицуЗаявкиКИсполнениюПоПараметрамОтбора();
	КонецЕсли;
	ОбновитьИтогиВПодвале();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПлатежныеПорученияНаСервере()
	
	ДокументыКВыгрузке = Объект.ЗаявкиКИсполнению.НайтиСтроки(Новый Структура("Создавать", Истина));
	СозданныеДокументы = ДенежныеСредстваВстраиваниеУХ.СоздатьСписаниеБезналичныхСредствПоВыгрузке(ДокументыКВыгрузке, Объект.ГенерацияПоРееструПлатежей);
	Для Каждого ТекСозданныеДокументы Из СозданныеДокументы Цикл
		НовыйСозданныйДокумент = Объект.СозданныеДокументы.Добавить();
		НовыйСозданныйДокумент.ПлатежноеПоручение = ТекСозданныеДокументы;
	КонецЦикла;	
	ОбновитьСписокНаСервере();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаПараметрыОтбора.Видимость = Не Объект.ГенерацияПоРееструПлатежей;
	Элементы.ГруппаРеестрПлатежей.Видимость = Объект.ГенерацияПоРееструПлатежей;
	
	КоличествоСозданныхДокументов = Объект.СозданныеДокументы.Количество();
	Если КоличествоСозданныхДокументов > 0 Тогда
		ЗаголовокКомандыСозданныеОбъекты = СтрШаблон(НСтр("ru = 'Созданные документы (%1)'"), КоличествоСозданныхДокументов);
	Иначе
		ЗаголовокКомандыСозданныеОбъекты = НСтр("ru = 'Созданные документы'");
	КонецЕсли;
	Элементы.ФормаСписокСозданныхОбъектов.Заголовок = ЗаголовокКомандыСозданныеОбъекты;
	
	Элементы.ФормаСписокСозданныхОбъектов.Доступность = (КоличествоСозданныхДокументов > 0);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыРеестра(РеестрПлатежей)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеестрПлатежей, "Организация,ДатаОплаты");
	
КонецФункции

&НаКлиенте
Процедура ОткрытьСписокСозданныхОбъектов(ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Объект.СозданныеДокументы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПервыйДокумент = Объект.СозданныеДокументы[0].ПлатежноеПоручение;
	
	Если Объект.СозданныеДокументы.Количество() = 1 Тогда
		
		ПоказатьЗначение(, ПервыйДокумент);
		
	Иначе
		
		Отбор = Новый Структура;
		Если Объект.ГенерацияПоРееструПлатежей Тогда
			РеквизитыРеестра = ПолучитьРеквизитыРеестра(Объект.РеестрПлатежей);
			Отбор.Вставить("Организация", РеквизитыРеестра.Организация);
			Отбор.Вставить("ДатаОтбора", РеквизитыРеестра.ДатаОплаты);
		Иначе
			
			Если ЗначениеЗаполнено(Объект.Организация) Тогда
				Отбор.Вставить("Организация", Объект.Организация);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
				Отбор.Вставить("СчетОрганизации", Объект.БанковскийСчет);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.НачалоПериода) И Объект.НачалоПериода = Объект.КонецПериода Тогда
				Отбор.Вставить("ДатаОтбора", Объект.НачалоПериода);
			КонецЕсли;
		КонецЕсли;
		
		СписокДокументов = Новый СписокЗначений;
		Для Каждого ТекСозданныйДокумент Из Объект.СозданныеДокументы Цикл
			СписокДокументов.Добавить(ТекСозданныйДокумент.ПлатежноеПоручение);
		КонецЦикла;
		СписокВыделения = Новый Структура("Ссылка", СписокДокументов);
		
		ДенежныеСредстваВстраиваниеУХКлиент.ОткрытьСписокСозданныхПлатежныхПоручений(
			ЭтаФорма, Отбор, СписокВыделения );
		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти
