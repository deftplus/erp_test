&НаКлиенте
Перем НеУстанавливатьТекущуюСтроку;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлятьНСИ=КэшируемыеПроцедурыУХ.ИспользоватьУправлениеНСИ();
	
	Если НЕ УправлятьНСИ Тогда
		Сообщить(Нстр("ru = 'Для использования синхронизации элементов необходимо включить механизмы контроля ЦНСИ!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВнешниеИнформационныеБазы.Ссылка
	|ИЗ
	|	Справочник.ВнешниеИнформационныеБазы КАК ВнешниеИнформационныеБазы
	|ГДЕ
	|	ВнешниеИнформационныеБазы.НСИ_ТребуетСинхронизации";
				 
	Результат=Запрос.Выполнить().Выбрать();
	
	Если НЕ Результат.Следующий() Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не обнаружены информационные базы, объекты которых требуют синхронизации'"),Отказ,,СтатусСообщения.Информация);
		Возврат;
		
	Иначе
		
		ВИБ=Результат.Ссылка;
	
	КонецЕсли;
	
	Объект.ИмяОбъектаМетаданных=Параметры.ИмяОбъектаМетаДанных;
	Объект.ТипОбъектаКонсолидации="Справочник";
		
	СписокОбъектовКонсолидации=ПолучитьСписокДляВыбораОбъектаКонсолидации(Объект.ТипОбъектаКонсолидации);
	
	Элементы.ИмяОбъектаМетаданных.СписокВыбора.Очистить();
	
	Для Каждого ТекОбъект ИЗ СписокОбъектовКонсолидации Цикл
		
		Элементы.ИмяОбъектаМетаданных.СписокВыбора.Добавить(ТекОбъект.Значение,ТекОбъект.Представление);
		
	КонецЦикла;
	
	Если СписокОбъектовКонсолидации.Количество()>0 Тогда
		
		Объект.ИмяОбъектаМетаданных=СписокОбъектовКонсолидации[0].Значение;
		ПриИзмененииОбъектаМетаданных();
		
	Иначе
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не обнаружены элементы справочников, требующие синхронизации.'"),Отказ,,СтатусСообщения.Информация);
		Возврат;

	КонецЕсли;
		
	Элементы.ЭталонныеЭлементыКонтекстноеМеню.ПодчиненныеЭлементы.ЭталонныеЭлементыКонтекстноеМенюОтбиратьПоЭталонному.Пометка=Ложь;
	Элементы.ЭлементыДляСинхронизацииКоманднаяПанель.ПодчиненныеЭлементы.Отбирать.ПодчиненныеЭлементы.ТолькоНеСинхронизированные.Пометка=Ложь;
	Элементы.ЭлементыДляСинхронизацииКоманднаяПанель.ПодчиненныеЭлементы.Отбирать.ПодчиненныеЭлементы.ЭлементыДляСинхронизацииОтбиратьПоЭталонному.Пометка=Ложь;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуСинхронизации()
	
	Элементы.ЭлементыДляСинхронизации.ТекущаяСтрока = Неопределено;
	Элементы.ЭталонныеЭлементы.ТекущаяСтрока = Неопределено;
	ЭлементыДляСинхронизации.ОсновнаяТаблица=ТаблицаАналитики;
	ЭталонныеЭлементы.ОсновнаяТаблица=ТаблицаАналитики;
 
	
	Для Каждого Элемент ИЗ ЭталонныеЭлементы.Отбор.Элементы Цикл
		
		Если Строка(Элемент.ЛевоеЗначение)="Владелец" Тогда
			
			Если Объект.ТипОбъектаКонсолидации="ВидСубконто" Тогда
				Элемент.Использование=Истина;
				Элемент.ПравоеЗначение=Объект.ИмяОбъектаМетаданных;
			Иначе
				Элемент.Использование=Ложь;	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент ИЗ ЭлементыДляСинхронизации.Отбор.Элементы Цикл
		
		Если Строка(Элемент.ЛевоеЗначение)="Владелец" Тогда
			
			Если Объект.ТипОбъектаКонсолидации="ВидСубконто" Тогда
				Элемент.Использование=Истина;
				Элемент.ПравоеЗначение=Объект.ИмяОбъектаМетаданных;
			Иначе
				Элемент.Использование=Ложь;	
			КонецЕсли;
			
		КонецЕсли;
		
		
	КонецЦикла;
		
КонецПроцедуры // ОбновитьТаблицуСинхронизации() 

&НаСервере
Процедура ПриИзмененииТипаОбъектаКонсолидации()
	
	Если Объект.ТипОбъектаКонсолидации="ВидСубконто" Тогда
		
		Объект.ИмяОбъектаМетаданных=ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка();
		
	Иначе
		
		Объект.ИмяОбъектаМетаданных="";
		
	КонецЕсли;
		
	СписокОбъектовКонсолидации=ПолучитьСписокДляВыбораОбъектаКонсолидации(Объект.ТипОбъектаКонсолидации);
	
	Элементы.ИмяОбъектаМетаданных.СписокВыбора.Очистить();
	
	Для Каждого ТекОбъект ИЗ СписокОбъектовКонсолидации Цикл
		
		Элементы.ИмяОбъектаМетаданных.СписокВыбора.Добавить(ТекОбъект.Значение,ТекОбъект.Представление);
		
	КонецЦикла;
	
	ПриИзмененииОбъектаМетаданных();
		
КонецПроцедуры // ПриИзмененииТипаОбъектаКонсолидации()

&НаСервере
Функция ПолучитьСписокДляВыбораОбъектаКонсолидации(ТипОбъектаКонсолидации)
	
	Запрос=Новый Запрос;
	
	СписокВыбора=Новый СписокЗначений;
	
	Для Каждого ОбъектМД ИЗ Метаданные.Справочники Цикл
		
		Если НЕ ОбщегоНазначенияУХ.ЕстьРеквизитОбъектаМД("НСИ_ВИБ",ОбъектМД) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		|	СправочникНСИ.Ссылка
		|ИЗ
		|	Справочник."+ОбъектМД.Имя+" КАК СправочникНСИ
		|ГДЕ
		|	СправочникНСИ.НСИ_ВИБ.НСИ_ТребуетСинхронизации";
		
		Результат=Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			
			СписокВыбора.Добавить(ОбъектМД.Имя, ОбъектМД.Имя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокВыбора.СортироватьПоПредставлению();
	
	Возврат СписокВыбора;
	
КонецФункции // ПолучитьСписокДляВыбораОбъектаКонсолидации()


&НаСервере
Процедура ПриИзмененииОбъектаМетаданных()

	РеквизитыДляПоиска.Очистить();
	
	ТабРеквизитыДляПоиска=РеквизитФормыВЗначение("РеквизитыДляПоиска");
	
	ТекСправочникБД = Справочники.СправочникиБД.НайтиПоНаименованию(Объект.ИмяОбъектаМетаданных,,,Справочники.ТипыБазДанных.ТекущаяИБ);
	
	Если НЕ ЗначениеЗаполнено(Объект.ИмяОбъектаМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипОбъектаКонсолидации="Справочник" Тогда
		
		ОбъектМетаДанных = МетаДанные.Справочники[Объект.ИмяОбъектаМетаданных];
		
		Если ОбъектМетаДанных.ДлинаНаименования>0 Тогда
			НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
			НоваяСтрока.ИмяРеквизита="Наименование";
			НоваяСтрока.Синоним="Наименование";
			НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(ОбъектМетаДанных.ДлинаНаименования);
		КонецЕсли;
		
		Если ОбъектМетаДанных.ДлинаКода>0 Тогда
			
			НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
			НоваяСтрока.ИмяРеквизита="Код";
			НоваяСтрока.Синоним="Код";
			
			Если ОбъектМетаДанных.ТипКода=Метаданные.СвойстваОбъектов.ТипКодаСправочника.Число Тогда
				
				НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(ОбъектМетаДанных.ДлинаКода);
				
			Иначе
				
				НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(ОбъектМетаДанных.ДлинаКода);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьПоляПоРеквизитам(ОбъектМетаДанных,ТабРеквизитыДляПоиска);			
		ОтборПоВладельцу=(ОбъектМетаДанных.Владельцы.Количество()>0);
		Иерархический=ОбъектМетаДанных.Иерархический;
				
	ИначеЕсли Объект.ТипОбъектаКонсолидации="ВидСубконто" Тогда
		
		ОбъектМетаДанных = ОбщегоНазначенияУХ.ПолучитьСправочникПоВидуСубконто(Объект.ИмяОбъектаМетаданных);
		
		Если ОбъектМетаДанных.ДлинаНаименования>0 Тогда
			НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
			НоваяСтрока.ИмяРеквизита="Наименование";
			НоваяСтрока.Синоним="Наименование";
			НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(ОбъектМетаДанных.ДлинаНаименования);
		КонецЕсли;
		
		Если ОбъектМетаДанных.ДлинаКода>0 Тогда
			
			НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
			НоваяСтрока.ИмяРеквизита="Код";
			НоваяСтрока.Синоним="Код";
			
			Если ОбъектМетаДанных.ТипКода=Метаданные.СвойстваОбъектов.ТипКодаСправочника.Число Тогда
				
				НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(ОбъектМетаДанных.ДлинаКода);
				
			Иначе
				
				НоваяСтрока.ТипЗначения=ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(ОбъектМетаДанных.ДлинаКода);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьПоляПоРеквизитам(ОбъектМетаДанных,ТабРеквизитыДляПоиска);			
		ОтборПоВладельцу=(ОбъектМетаДанных.Владельцы.Количество()>0);
		
		Иерархический=ОбъектМетаДанных.Иерархический;
 		
	КонецЕсли;
		
	ТаблицаАналитики="Справочник."+ОбъектМетаДанных.Имя;
	ОтборПоВладельцу=(ОбъектМетаДанных.Владельцы.Количество()>0);
	ЗначениеВРеквизитФормы(ТабРеквизитыДляПоиска,"РеквизитыДляПоиска");
	
	ОбновитьТаблицуСинхронизации();
			
КонецПроцедуры // ПриИзмененииПотребителяРасчета()

&НаСервере
Процедура ЗаполнитьПоляПоРеквизитам(ОбъектМетаданных,ТабРеквизитыДляПоиска)
	
	
	Для каждого Реквизит Из Метаданные.ОбщиеРеквизиты Цикл
		
		Если Реквизит.Имя="ОбластьДанныхОсновныеДанные" ИЛИ Реквизит.Имя="ОбластьДанныхВспомогательныеДанные" Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ИспользованиеРеквизита = Реквизит.Content.Find(ОбъектМетаданных.Имя);
		АвтоИспользование = (Реквизит.AutoUse = Метаданные.ObjectProperties.CommonAttributeAutoUse.Use);
		
		Если ИспользованиеРеквизита.Use = Метаданные.ObjectProperties.CommonAttributeUse.DontUse Тогда
			Продолжить;				
		ИначеЕсли НЕ АвтоИспользование И (ИспользованиеРеквизита.Use = Метаданные.ObjectProperties.CommonAttributeUse.Auto) Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
		НоваяСтрока.ИмяРеквизита=Реквизит.Имя;
		НоваяСтрока.Синоним=Реквизит.Синоним;
		НоваяСтрока.ТипЗначения=Реквизит.Тип;
		
		Если НоваяСтрока.ТипЗначения = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(0) Тогда
			
			НоваяСтрока.НеограниченнаяДлина=Истина;
			
		КонецЕсли;
		
		
	КонецЦикла;

	Для Каждого Реквизит ИЗ ОбъектМетаданных.Реквизиты Цикл
				
		НоваяСтрока=ТабРеквизитыДляПоиска.Добавить();
		НоваяСтрока.ИмяРеквизита=Реквизит.Имя;
		НоваяСтрока.Синоним=Реквизит.Синоним;
		НоваяСтрока.ТипЗначения=Реквизит.Тип;
		
		Если НоваяСтрока.ТипЗначения = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(0) Тогда
			
			НоваяСтрока.НеограниченнаяДлина=Истина;
			
		КонецЕсли;
						
	КонецЦикла;
	
		
КонецПроцедуры // ЗаполнитьПоляПоРеквизитам()

&НаСервере
Процедура ЗаполнитьРеквизитыОбъекта(ЭталонныйЭлемент,Ссылка)
		
	ТаблицаРеквизитов=РеквизитФормыВЗначение("РеквизитыЭлементаВИБ");
	ТаблицаРеквизитов.Очистить();
	
	Если ЭталонныйЭлемент Тогда
		РеквизитыЭталонногоЭлемента.Очистить();
	Иначе
		РеквизитыЭлементаВИБ.Очистить();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТаблицаАналитики) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ";
	
	Для Каждого СтрРеквизит ИЗ РеквизитыДляПоиска Цикл
		
		Запрос.Текст=Запрос.Текст+"
		|ТаблицаАналитики."+СтрРеквизит.ИмяРеквизита+" КАК "+СтрРеквизит.ИмяРеквизита+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|ТаблицаАналитики.ПометкаУдаления КАК ПометкаУдаления	
	|ИЗ "+ТаблицаАналитики+" КАК ТаблицаАналитики
	|ГДЕ ТаблицаАналитики.Ссылка=&Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Результат=Запрос.Выполнить().Выбрать();	
	Результат.Следующий();
		
	Для Каждого СтрРеквизит ИЗ РеквизитыДляПоиска Цикл 
		
		Если ЭталонныйЭлемент И  СтрНайти(СтрРеквизит.ИмяРеквизита,"НСИ_")>0 Тогда
			Продолжить;
		КонецЕсли;
	
		НоваяСтрока=ТаблицаРеквизитов.Добавить();
		НоваяСтрока.ИмяРеквизита=СтрРеквизит.ИмяРеквизита;
		НоваяСтрока.ЗначениеРеквизита=Результат[СтрРеквизит.ИмяРеквизита];
		
	КонецЦикла;
	
	НоваяСтрока=ТаблицаРеквизитов.Добавить();
	НоваяСтрока.ИмяРеквизита="ПометкаУдаления";
	НоваяСтрока.ЗначениеРеквизита=Результат.ПометкаУдаления;

	Если ЭталонныйЭлемент Тогда
		
		ЗначениеВРеквизитФормы(ТаблицаРеквизитов,"РеквизитыЭталонногоЭлемента");
		
		Если ОтбиратьПоЭталонному Тогда
			
			УстановитьОтборпоЭталонномуЭлементу(Ссылка);
			
		КонецЕсли;
		
	Иначе
		ЗначениеВРеквизитФормы(ТаблицаРеквизитов,"РеквизитыЭлементаВИБ");
	КонецЕсли;
	
КонецПроцедуры // ЭталонныйЭлемент()

&НаСервере
Процедура ВыполнитьОбработкуСинхронизации(СписокСинхронизируемых,ЭталонныйЭлемент,УстановитьСоответствие)
	
	Для Каждого СтрЭлемент ИЗ СписокСинхронизируемых Цикл
		
		СправочникОбъект=СтрЭлемент.Значение.ПолучитьОбъект();
		
		Если УстановитьСоответствие Тогда
			СправочникОбъект.НСИ_ЭталонныйЭлемент=ЭталонныйЭлемент;
		Иначе
			СправочникОбъект.НСИ_ЭталонныйЭлемент="";
		КонецЕсли;
		
		СправочникОбъект.ОбменДанными.Загрузка=Истина;
		
		Попытка
			
			СправочникОбъект.Записать();
			
		Исключение
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(СтрШаблон(Нстр("ru = 'Не удалось записать объект %1:
			|%2'"), СправочникОбъект, ОписаниеОшибки()),,,СтатусСообщения.Внимание);
			
		КонецПопытки;
		
	КонецЦикла;
	
	
КонецПроцедуры // ВыполнитьОбработкуСинхронизации()

&НаСервере
Процедура ВыполнитьСинхронизацию(ОбновлятьЭталонныеЭлементы)
	
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбновлятьЭталонныеЭлементы=ОбновлятьЭталонныеЭлементы;
	ОбработкаОбъект.ВыполнитьСинхронизациюЭлементов();
	
КонецПроцедуры // ВыполнитьСинхронизацию

&НаСервере
Процедура УстановитьОтборпоЭталонномуЭлементу(Ссылка)
	
	Поле = Новый ПолеКомпоновкиДанных("НСИ_ЭталонныйЭлемент");
	
	ЭлмОтбор = Неопределено;
	
	Для каждого СтрОтбор Из ЭлементыДляСинхронизации.Отбор.Элементы Цикл
		
		Если СтрОтбор.ЛевоеЗначение = Поле Тогда
			
			ЭлмОтбор = СтрОтбор;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭлмОтбор = Неопределено Тогда
		
		ЭлмОтбор = ЭлементыДляСинхронизации.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлмОтбор.ЛевоеЗначение = Поле;
		
	КонецЕсли;
	
	Если ОтбиратьПоЭталонному ИЛИ ТолькоНеСинхронизированные Тогда
		
		ЭлмОтбор.Использование=Истина;
		
		Если ОтбиратьПоЭталонному Тогда
			ЭлмОтбор.ПравоеЗначение=Ссылка;
		Иначе
			ЭлмОтбор.ПравоеЗначение=Справочники[СтрЗаменить(ТаблицаАналитики,"Справочник.","")].ПустаяСсылка();	
		КонецЕсли;
		
	Иначе
		
		ЭлмОтбор.Использование=Ложь;
		
	КонецЕсли;
		
КонецПроцедуры // УстановитьОтборпоЭталонномуЭлементу() 
	
/////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ТипОбъектаКонсолидацииПриИзменении(Элемент)
	
	ПриИзмененииТипаОбъектаКонсолидации();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаМетаданныхПриИзменении(Элемент)
	
	ПриИзмененииОбъектаМетаданных();
	
КонецПроцедуры


&НаКлиенте
Процедура ЭлементыДляСинхронизацииПриАктивизацииСтроки(Элемент)
	
	//Если НеУстанавливатьТекущуюСтроку = Истина Тогда
	//	Возврат;
	//КонецЕсли;

	
	Если НЕ Элементы.ЭлементыДляСинхронизации.ТекущиеДанные=Неопределено Тогда 
		
		Если Элементы.ЭлементыДляСинхронизации.ТекущиеДанные.Свойство("Ссылка") Тогда

			НеУстанавливатьТекущуюСтроку = Истина;
		
			Если ЗначениеЗаполнено(Элементы.ЭлементыДляСинхронизации.ТекущиеДанные.НСИ_ЭталонныйЭлемент) Тогда
				Элементы.ЭталонныеЭлементы.ТекущаяСтрока=Элементы.ЭлементыДляСинхронизации.ТекущиеДанные.НСИ_ЭталонныйЭлемент;
			КонецЕсли;
			
			ЗаполнитьРеквизитыОбъекта(Ложь,Элементы.ЭлементыДляСинхронизации.ТекущиеДанные.Ссылка);
			
			НеУстанавливатьТекущуюСтроку = Ложь;

		КонецЕсли;			
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЭталонныеЭлементыПриАктивизацииСтроки(Элемент)
	
	Если НеУстанавливатьТекущуюСтроку = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Элементы.ЭталонныеЭлементы.ТекущиеДанные=Неопределено Тогда
		
		НеУстанавливатьТекущуюСтроку = Истина;
		
		ЗаполнитьРеквизитыОбъекта(Истина,Элементы.ЭталонныеЭлементы.ТекущиеДанные.Ссылка);
		
		НеУстанавливатьТекущуюСтроку = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСинхронизируемыеЭлементы(УстановитьСоответствие, ЭталонныйЭлемент)
	Если УстановитьСоответствие Тогда
		
		Если Иерархический И ЭталонныйЭлемент.ЭтоГруппа Тогда
			
			ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не выбран эталонный элемент.'"),,,СтатусСообщения.Внимание);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;

	СписокСинхронизируемых=Новый СписокЗначений;
	
	Для Каждого Строка ИЗ Элементы.ЭлементыДляСинхронизации.ВыделенныеСтроки Цикл
		
		Если Иерархический И Строка.ЭтоГруппа Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СписокСинхронизируемых.Добавить(Строка.Ссылка);
		
	КонецЦикла;
	
	
	Если СписокСинхронизируемых.Количество()>0 Тогда
		
		ВыполнитьОбработкуСинхронизации(СписокСинхронизируемых,ЭталонныйЭлемент,УстановитьСоответствие);
	
	КонецЕсли;
	
	
КонецПроцедуры // ОбработатьСинхронизируемыеЭлементы() 	

&НаКлиенте
Процедура Синхронизировать(Команда)
	
	Если Элементы.ЭталонныеЭлементы.ТекущиеДанные=Неопределено Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не выбран эталонный элемент.'"),,,СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;

	ОбработатьСинхронизируемыеЭлементы(Истина, Элементы.ЭталонныеЭлементы.ТекущиеДанные.Ссылка);

	Элементы.ЭлементыДляСинхронизации.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьСинхронизацию(Команда)
	
	ОбработатьСинхронизируемыеЭлементы(Ложь, Неопределено);

	Элементы.ЭлементыДляСинхронизации.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтбиратьПоЭталонному(Команда)
	
	ОтбиратьПоЭталонному=НЕ ОтбиратьПоЭталонному;
	
	УстановитьОтборпоЭталонномуЭлементу(Элементы.ЭталонныеЭлементы.ТекущиеДанные.Ссылка);
		
	Элементы.ЭталонныеЭлементыКонтекстноеМеню.ПодчиненныеЭлементы.ЭталонныеЭлементыКонтекстноеМенюОтбиратьПоЭталонному.Пометка=ОтбиратьПоЭталонному;
	Элементы.ЭлементыДляСинхронизацииКоманднаяПанель.ПодчиненныеЭлементы.Отбирать.ПодчиненныеЭлементы.ЭлементыДляСинхронизацииОтбиратьПоЭталонному.Пометка=ОтбиратьПоЭталонному;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоискаДублей(Команда)
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("ТипОбъектаКонсолидации",Объект.ТипОбъектаКонсолидации);
	СтруктураПараметров.Вставить("ИмяОбъектаМетаданных",Объект.ИмяОбъектаМетаданных);
	СтруктураПараметров.Вставить("ЭлементДляПоиска",Элементы.ЭталонныеЭлементы.ТекущиеДанные.Ссылка);
	СтруктураПараметров.Вставить("СпособОбработки",2);
	
	ОткрытьФорму("Обработка.ПоискИСлияниеДублирующихсяЭлементов.Форма.Форма",СтруктураПараметров,,,,, Новый ОписаниеОповещения("ОткрытьФормуПоискаДублейЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоискаДублейЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Элементы.ЭлементыДляСинхронизации.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьАвтоматически(Команда)
	
	 ВыполнитьСинхронизацию(Ложь);
	 Элементы.ЭлементыДляСинхронизации.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьАвтоматическиВсе(Команда)
	
	ВыполнитьСинхронизацию(Истина);
	Элементы.ЭлементыДляСинхронизации.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ТолькоНеСинхронизированные(Команда)
	
	ТолькоНеСинхронизированные=Не ТолькоНеСинхронизированные;
	УстановитьОтборпоЭталонномуЭлементу(Неопределено);
	Элементы.ЭлементыДляСинхронизацииКоманднаяПанель.ПодчиненныеЭлементы.Отбирать.ПодчиненныеЭлементы.ТолькоНеСинхронизированные.Пометка=ТолькоНеСинхронизированные;
	
КонецПроцедуры


&НаКлиенте
Процедура ВИБПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСерверУХ.УстановитьЭлементОтбора(ЭлементыДляСинхронизации.Отбор,"НСИ_ВИБ",ВИБ,ВидСравненияКомпоновкиДанных.Равно,,Истина);
	Элементы.ЭлементыДляСинхронизации.Обновить();
	
КонецПроцедуры 

&НаКлиенте
Процедура ЭталонныеЭлементыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры 

&НаКлиенте
Процедура ЭталонныеЭлементыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если Элемент.Имя = "ЭталонныеЭлементы" Тогда // Сами с собой не синхронизируемся
		Возврат;
	КонецЕсли;
	
	СписокСинхронизируемых = Новый СписокЗначений();
	Для каждого Ссылка Из ПараметрыПеретаскивания.Значение Цикл
		СписокСинхронизируемых.Добавить(Ссылка);
	КонецЦикла;
	
	ВыполнитьОбработкуСинхронизации(СписокСинхронизируемых, Строка, Истина);
	
	Элементы.ЭлементыДляСинхронизации.Обновить();
КонецПроцедуры 
&НаКлиенте
Процедура ЭлементыДляСинхронизацииПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВИБПриИзменении(Неопределено);
КонецПроцедуры

