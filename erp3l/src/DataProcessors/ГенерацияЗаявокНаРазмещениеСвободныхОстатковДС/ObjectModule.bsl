#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьТаблицуЗаявокНаРазмещение() Экспорт	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ДенежныеСредстваВстраиваниеУХ.ТекстЗапросаТаблицыЗаявокНаРазмещение(ЗначениеЗаполнено(Организация), АвтоматическаяГенерация);
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтборПоОрганизации", Истина);
	Запрос.УстановитьПараметр("УсловиеАвтоматическойГенерации", Истина);
	Запрос.УстановитьПараметр("ДатаОстатков", НачалоДня(ДатаОстатков));
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	СтруктураВнутригрупповыхКонтрагентов = Обработки.НастройкаВнутригрупповыхКонтрагентов.ПолучитьТаблицыВнутригрупповыхКонтрагентов();
	СоответствиеСчетов = СтруктураВнутригрупповыхКонтрагентов.СоответствиеСчетовКонтрагентов;
	Для Каждого ТекВыгрузка Из Выгрузка Цикл
		ТекСчетаКонтрагента = СоответствиеСчетов[ТекВыгрузка.МастерСчет];
		Если ТекСчетаКонтрагента <> Неопределено Тогда
			ТекВыгрузка.СчетКонтрагента = ТекСчетаКонтрагента;
		Иначе
			// Оставляем счет из договора.
		КонецЕсли;
	КонецЦикла;
	РеквизитыЗаявокНаРазмещениеСредств.Загрузить(Выгрузка);
	
					
КонецПроцедуры // ЗаполнитьТаблицуЗаявокНаРазмещение()

Функция СформироватьЗаявкиНаРазмещение() Экспорт
	// Инициализация.
	РезультатФункции = Истина;
	НачатьТранзакцию();
	ЕстьОшибки = Ложь;
	// Получение исходных данных.
	ТабОперации = РеквизитыЗаявокНаРазмещениеСредств.НайтиСтроки(Новый Структура("Формировать",Истина));
	КоллекцияКолонок = Метаданные().ТабличныеЧасти.РеквизитыЗаявокНаРазмещениеСредств.Реквизиты;
	// Формирования заявок.
	Для Каждого Строка ИЗ РеквизитыЗаявокНаРазмещениеСредств Цикл
		Попытка
			Если Не Строка.Формировать Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			Для Каждого Колонка Из КоллекцияКолонок Цикл
				СтруктураПараметров.Вставить(Колонка.Имя, Строка[Колонка.Имя]);
			КонецЦикла;
			СтруктураПараметров.Вставить("ДатаНачала", ДатаОстатков);
			
			ДокЗаявка = Документы.ЗаявкаНаРасходованиеДенежныхСредств.СоздатьДокумент();
			ДокЗаявка.Заполнить(СтруктураПараметров);
			ЗаполнитьЗначенияСвойств(ДокЗаявка, Строка);
			ДокЗаявка.ДополнительныеСвойства.Вставить("БанковскийСчетКасса", Строка.БанковскийСчетКасса);
			ДокЗаявка.ВнеМаршрута = Истина;
			ДокЗаявка.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ЕстьОшибки = Истина;
			ТекстСообщения = НСтр("ru = 'Не удалось создать заявку по счёту %БанковскийСчетКасса% по причине: %ОписаниеОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%БанковскийСчетКасса%", Строка(Строка.БанковскийСчетКасса));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецПопытки;
	КонецЦикла;	
	// Завершение транзакции.
	Если ЕстьОшибки Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	РезультатФункции = НЕ ЕстьОшибки;
	Возврат РезультатФункции;	
КонецФункции // СформироватьЗаявкиНаРазмещение() 

#КонецЕсли