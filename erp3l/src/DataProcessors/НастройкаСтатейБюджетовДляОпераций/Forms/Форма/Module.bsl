
&НаКлиенте
Перем ОтветПередЗакрытием;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	ПеречитатьДеревьяСтатей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Если НЕ ЗавершениеРаботы Тогда
			Если ОтветПередЗакрытием <> Истина Тогда
				Отказ = Истина;
				ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
				ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'При закрытии формы все данные будут утеряны.'"), РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
		Иначе
			Отказ = Истина;
			ТекстПредупреждения = НСтр("ru = 'При закрытии формы все данные будут утеряны.'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ОсновныеСтатьиВидовОперацийУХ

&НаКлиенте
Процедура ДеревоСтатьяБюджетаПриИзменении(Элемент)
	ТекДанные = Элементы.ОсновныеСтатьиВидовОперацийУХ.ТекущиеДанные;
	ТекДанные.Изменено = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	ФормыУХКлиентСервер.ДобавитьПараметрВыбора(
		Элементы.ОсновныеСтатьиВидовОперацийУХСтатьяБюджета,
		"Отбор.ПриходРасход",
		Элемент.ТекущиеДанные.ПриходРасход
	);

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_СтатьиОперацийФинансовыхИнструментов

&НаКлиенте
Процедура СтатьиОперацийФинансовыхИнструментовСтатьяБюджетаПриИзменении(Элемент)
	ТекДанные = Элементы.СтатьиОперацийФинансовыхИнструментов.ТекущиеДанные;
	ТекДанные.Изменено = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтатьиОперацийФинансовыхИнструментовПриАктивизацииСтроки(Элемент)
	
	ФормыУХКлиентСервер.ДобавитьПараметрВыбора(
		Элементы.СтатьиОперацийФинансовыхИнструментовСтатьяБюджета,
		"Отбор.ПриходРасход",
		Элемент.ТекущиеДанные.ПриходРасход
	);
		
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНаСервере()
	
	ДеревоПараметров = РеквизитФормыВЗначение("ОсновныеСтатьиВидовОперацийУХ");
	ИзмененныеЗначения = ДеревоПараметров.Строки.НайтиСтроки(Новый Структура("Изменено", Истина), Истина);
	Для Каждого ТекИзмененноеЗначение Из ИзмененныеЗначения Цикл
		МЗ = РегистрыСведений.ОсновныеСтатьиВидовОперацийУХ.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ТекИзмененноеЗначение);
		МЗ.Записать();
	КонецЦикла;
	
	ДеревоПараметров = РеквизитФормыВЗначение("СтатьиОперацийФинансовыхИнструментов");
	ИзмененныеЗначения = ДеревоПараметров.Строки.НайтиСтроки(Новый Структура("Изменено", Истина), Истина);
	Для Каждого ТекИзмененноеЗначение Из ИзмененныеЗначения Цикл
		МЗ = РегистрыСведений.НастройкиФинансовыхИнструментов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ТекИзмененноеЗначение);
		МЗ.Записать();
	КонецЦикла;
	
	Модифицированность = Ложь;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДеревьяСтатей()
	
	ПВХ = ПланыВидовХарактеристик.ВидыБюджетов;
	
	ПустаяСтатьяБДДС = 
		ОбщегоНазначенияОПК.ПустоеЗначениеОписанияТипа(ПВХ.БюджетДвиженияДенежныхСредств.ТипЗначения);
		
	ПустаяСтатьяБДР = 
		ОбщегоНазначенияОПК.ПустоеЗначениеОписанияТипа(ПВХ.БюджетДоходовИРасходов.ТипЗначения);
	
	ПустаяСтатьяБюджетаЗакупок = 
		ОбщегоНазначенияОПК.ПустоеЗначениеОписанияТипа(ПВХ.БюджетДвиженияРесурсов.ТипЗначения);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустаяСтатьяБДДС", ПустаяСтатьяБДДС);
	Запрос.УстановитьПараметр("ПустаяСтатьяБДР", ПустаяСтатьяБДР);
	Запрос.УстановитьПараметр("ПустаяСтатьяБюджетаЗакупок", ПустаяСтатьяБюджетаЗакупок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОперацийУХ.Ссылка КАК ВидОперацииУХ,
	|	ВидыОперацийУХ.ЭтоГруппа КАК ЭтоГруппа,
	|	ВидыОперацийУХ.ВидБюджета КАК ВидБюджета,
	|	ВидыОперацийУХ.ПриходРасход КАК ПриходРасход,
	|	ЕСТЬNULL(ОсновныеСтатьиВидовОперацийУХ.СтатьяБюджета, ВЫБОР
	|			КОГДА ВидыОперацийУХ.ВидБюджета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств)
	|				ТОГДА &ПустаяСтатьяБДДС
	|			КОГДА ВидыОперацийУХ.ВидБюджета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов)
	|				ТОГДА &ПустаяСтатьяБДР
	|			КОГДА ВидыОперацийУХ.ВидБюджета = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов)
	|				ТОГДА &ПустаяСтатьяБюджетаЗакупок
	|		КОНЕЦ) КАК СтатьяБюджета,
	|	ЛОЖЬ КАК Изменено,
	|	"""" КАК Отступ	
	|ИЗ
	|	Справочник.ВидыОперацийУХ КАК ВидыОперацийУХ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтатьиВидовОперацийУХ КАК ОсновныеСтатьиВидовОперацийУХ
	|		ПО (ОсновныеСтатьиВидовОперацийУХ.ВидОперацииУХ = ВидыОперацийУХ.Ссылка)
	|ГДЕ
	|	НЕ ВидыОперацийУХ.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыОперацийУХ.Код
	|ИТОГИ
	|	ЭтоГруппа КАК ЭтоГруппа
	|ПО
	|	ВидОперацииУХ ТОЛЬКО ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОперацииГрафиковДоговоров.Ссылка КАК Операция,
	|	НастройкиФинансовыхИнструментов.СтатьяБюджета КАК СтатьяБюджета,
	|	ОперацииГрафиковДоговоров.ЭтоГруппа КАК ЭтоГруппа,
	|	ЛОЖЬ КАК Изменено,
	|	"""" КАК Отступ,
	|	ОперацииГрафиковДоговоров.НаправлениеДвижения КАК ПриходРасход,
	|	ОперацииГрафиковДоговоров.ВидБюджета КАК ВидБюджета
	|ИЗ
	|	Справочник.ОперацииГрафиковДоговоров КАК ОперацииГрафиковДоговоров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФинансовыхИнструментов КАК НастройкиФинансовыхИнструментов
	|		ПО (НастройкиФинансовыхИнструментов.Операция = ОперацииГрафиковДоговоров.Ссылка)
	|ГДЕ
	|	НЕ ОперацииГрафиковДоговоров.ЭтоГруппа
	|	И НЕ ОперацииГрафиковДоговоров.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОперацииГрафиковДоговоров.Код
	|ИТОГИ
	|	ОперацииГрафиковДоговоров.ЭтоГруппа КАК ЭтоГруппа
	|ПО
	|	Операция ТОЛЬКО ИЕРАРХИЯ";
	
	ОписаниеРезультатов = Новый Массив;
	ОписаниеРезультатов.Добавить("ОсновныеСтатьиВидовОперацийУХ");
	ОписаниеРезультатов.Добавить("СтатьиОперацийФинансовыхИнструментов");
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Для Сч = 0 По ОписаниеРезультатов.Количество() - 1 Цикл
		ВыгрузкаРезультатаЗапроса = РезультатыЗапроса[Сч].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ЗначениеВРеквизитФормы(ВыгрузкаРезультатаЗапроса, ОписаниеРезультатов[Сч]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Таблица "Основные статьи видов операций"
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.ОсновныеСтатьиВидовОперацийУХСтатьяБюджета.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОсновныеСтатьиВидовОперацийУХ.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно,Истина,,Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",            Истина);
	
	//
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.ОсновныеСтатьиВидовОперацийУХВидОперацииУХ.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"ОсновныеСтатьиВидовОперацийУХ.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно,Истина,,Истина);
	
	ТекущийШрифт = Элементы.ОсновныеСтатьиВидовОперацийУХ.Шрифт;
	ЖирныйШрифт = Новый Шрифт(ТекущийШрифт, , , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", ЖирныйШрифт);

	// Таблица "Статьи операций финансовых инструментов"
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.СтатьиОперацийФинансовыхИнструментовСтатьяБюджета.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"СтатьиОперацийФинансовыхИнструментов.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно,Истина,,Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",            Истина);
	
	//
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
		
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.СтатьиОперацийФинансовыхИнструментовОперация.Имя);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"СтатьиОперацийФинансовыхИнструментов.ЭтоГруппа", ВидСравненияКомпоновкиДанных.Равно,Истина,,Истина);
	
	ТекущийШрифт = Элементы.СтатьиОперацийФинансовыхИнструментов.Шрифт;
	ЖирныйШрифт = Новый Шрифт(ТекущийШрифт, , , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", ЖирныйШрифт);
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОтветПередЗакрытием = Истина;
		Закрыть();
	Иначе
		ОтветПередЗакрытием = Неопределено;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти