#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Сравнивает 2 табличных документа по ячейкам, проверяя не только текст но и дополнительные свойства
//
// Параметры:
//  ТабДок1		 - ТабличныйДокумент - Первый табличный документ для сравнения
//  ТабДок2		 - ТабличныйДокумент - Второй табличный документ для сравнения
//  Исключения	 - Массив - Массив, содержащий строковое представление свойств, которые будут исключены из проверки
//  ТолькоТекст	 - Булево - Признак того, что сравниваться будет только текстовое содержание ячеек
//	ПоШаблону	 - Булево - Признак того, что сроки будут сравниваться по шаблону с использованием специальных символов: 
//			"%" или "*" - последовательность, содержащая любое количество произвольных символов.
//			"_" 		- один произвольный символ.
//			"[…]" 		- любой одиночный символ из перечисленных внутри квадратных скобок
//			"[^…]" 		- любой одиночный символ, кроме тех, которые перечислены следом за значком отрицания
// 
// Возвращаемое значение:
//   - Структура - Структура, содержащая следующие свойства
//		- ДокументыИдентичны - Булево - Истина, если документы совпадают, Ложь - в противном случае
//		- Ошибки - Массив - Массив с найденными различиями
//		- Документ1 - ТабличныйДокумент - Первый табличный документ с подкрашенными отличающимися ячейками
//		- Документ2 - ТабличныйДокумент - Второй табличный документ с подкрашенными отличающимися ячейками
//		- ДокументРезультат - ТабличныйДокумент - Табличный документ, содержащий в себе Документ1 и Документ2 
//			для наглядного представления отличий
//
Функция СравнитьДваТабличныхДокумента(ТабДок1, ТабДок2, Исключения = Неопределено, ТолькоТекст = Истина, ПоШаблону = Ложь) Экспорт
	
	Макет = ПолучитьМакет("Макет");
	ТабДокРезультат = Новый ТабличныйДокумент;
	ДокументИсходный1 = Новый ТабличныйДокумент;
	ДокументИсходный1.Вывести(ТабДок1);
	ДокументИсходный2 = Новый ТабличныйДокумент;
	ДокументИсходный2.Вывести(ТабДок2);
	ДокументРезультат1 = Новый ТабличныйДокумент;
	ДокументРезультат2 = Новый ТабличныйДокумент;
	
	Ошибки = Новый Массив;
	ЦветФонаОшибкаЗначение = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
	ЦветФонаОшибкаОформление = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
	
	МаксимальнаяВысота = Макс(ДокументИсходный1.ВысотаТаблицы, ДокументИсходный2.ВысотаТаблицы);
	МаксимальнаяШирина = Макс(ДокументИсходный1.ШиринаТаблицы, ДокументИсходный2.ШиринаТаблицы);
	
	Если ДокументИсходный1.ВысотаТаблицы <> ДокументИсходный2.ВысотаТаблицы Тогда
		ТекстОшибки = НСтр("ru = 'Количество строк в документах отличается;'");
		Ошибки.Добавить(ТекстОшибки);
	КонецЕсли;	
	
	Если ДокументИсходный1.ШиринаТаблицы <> ДокументИсходный2.ШиринаТаблицы Тогда
		ТекстОшибки = НСтр("ru = 'Количество колонок в документах отличается'");
		Ошибки.Добавить(ТекстОшибки);
	КонецЕсли;
	
	ПараметрыСравнения = Новый Структура;
	ПараметрыСравнения.Вставить("Ошибки", Ошибки);
	ПараметрыСравнения.Вставить("СвойстваИсключения", ?(Исключения=Неопределено, Новый Массив, Исключения));
	ПараметрыСравнения.Вставить("ПоШаблону", ПоШаблону);
	
	Для НСтроки = 1 По МаксимальнаяВысота Цикл
		
		// Выведем шапку рамки
		Если НСтроки = 1 Тогда
			Для НКолонки = -1 По МаксимальнаяШирина Цикл 
				Если НКолонки = -1 Тогда
					ТОбласть = Макет.ПолучитьОбласть("Шапка|Лево");
					ДокументРезультат1.Вывести(ТОбласть);
					ДокументРезультат2.Вывести(ТОбласть);
				ИначеЕсли НКолонки = МаксимальнаяШирина Тогда
					ТОбласть = Макет.ПолучитьОбласть("Шапка|Право");
					ДокументРезультат1.Присоединить(ТОбласть);
					ДокументРезультат2.Присоединить(ТОбласть);
				Иначе
					ТОбласть = Макет.ПолучитьОбласть("Шапка|Центр");
					ДокументРезультат1.Присоединить(ТОбласть);
					ДокументРезультат2.Присоединить(ТОбласть);
				КонецЕсли;				
			КонецЦикла;
		КонецЕсли;
		
		ТОбласть = Макет.ПолучитьОбласть("Строка|Лево");
		ДокументРезультат1.Вывести(ТОбласть);
		ДокументРезультат2.Вывести(ТОбласть);
		
		Для НКолонки = 1 По МаксимальнаяШирина Цикл
			
			Ячейка1 = ДокументИсходный1.Область(НСтроки, НКолонки, НСтроки, НКолонки);
			Ячейка2	= ДокументИсходный2.Область(НСтроки, НКолонки, НСтроки, НКолонки);
			
			ПараметрыСравнения.Вставить("Ячейка1", Ячейка1);
			ПараметрыСравнения.Вставить("Ячейка2", Ячейка2);
			
			// Проверяем свойства ячейки
			Если ТолькоТекст Тогда
				СравнитьСвойствоЯчеек(ПараметрыСравнения, "Текст");
			Иначе
				СравнитьСвойстваЯчеек(ПараметрыСравнения);
			КонецЕсли;		
			
			ДокументРезультат1.Присоединить(ДокументИсходный1.ПолучитьОбласть(Ячейка1.Имя));
			ДокументРезультат2.Присоединить(ДокументИсходный2.ПолучитьОбласть(Ячейка2.Имя));
		
		КонецЦикла;
		
		ТОбласть = Макет.ПолучитьОбласть("Строка|Право");
		ДокументРезультат1.Присоединить(ТОбласть);
		ДокументРезультат2.Присоединить(ТОбласть);
		
		// Выведем подвал рамки
		Если НСтроки = МаксимальнаяВысота Тогда
			Для НКолонки = -1 По МаксимальнаяШирина Цикл 
				Если НКолонки = -1 Тогда
					ТОбласть = Макет.ПолучитьОбласть("Подвал|Лево");
					ДокументРезультат1.Вывести(ТОбласть);
					ДокументРезультат2.Вывести(ТОбласть);
				ИначеЕсли НКолонки = МаксимальнаяШирина Тогда
					ТОбласть = Макет.ПолучитьОбласть("Подвал|Право");
					ДокументРезультат1.Присоединить(ТОбласть);
					ДокументРезультат2.Присоединить(ТОбласть);
				Иначе
					ТОбласть = Макет.ПолучитьОбласть("Подвал|Центр");
					ДокументРезультат1.Присоединить(ТОбласть);
					ДокументРезультат2.Присоединить(ТОбласть);
				КонецЕсли;				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДокРезультат.Вывести(ДокументРезультат1.ПолучитьОбласть(1,1,МаксимальнаяВысота+3,МаксимальнаяШирина+3));
	ТабДокРезультат.Присоединить(ДокументРезультат2.ПолучитьОбласть(1,1,МаксимальнаяВысота+3,МаксимальнаяШирина+3));
	
	Результат = Новый Структура;
	Результат.Вставить("ДокументыИдентичны",Ошибки.Количество() = 0);
	Результат.Вставить("Ошибки",Ошибки);
	Результат.Вставить("Документ1",ДокументРезультат1);
	Результат.Вставить("Документ2",ДокументРезультат2);
	Результат.Вставить("ДокументРезультат",ТабДокРезультат);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СравнитьСвойстваЯчеек(ПараметрыСравнения)
	
	Ячейка1 = ПараметрыСравнения.Ячейка1;
	Ячейка2 = ПараметрыСравнения.Ячейка2; 
	
	Если ТипЗнч(Ячейка1) <> ТипЗнч(Ячейка2) Тогда
		ТекстОшибки = НСтр("ru = 'Отличаются типы значений в ячейке ""%2"";'");
		Если ТипЗнч(Ячейка1) = Тип("РисунокТабличногоДокумента")
			И Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Примечание Тогда
			ТекстОшибки = СтрШаблон(ТекстОшибки, "Примечание");
		Иначе
			ТекстОшибки = СтрШаблон(ТекстОшибки, Ячейка1.Имя);
		КонецЕсли;
		ПараметрыСравнения.Ошибки.Добавить(ТекстОшибки);
		Ячейка1.ЦветФона = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
		Ячейка2.ЦветФона = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
		Возврат;
	КонецЕсли;
	
	// Общие свойства для табличного документа и рисунка табличного документа
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "АвтоОтметкаНезаполненного"); 			// Булево
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВертикальноеПоложение"); 				// ВертикальноеПоложение
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Верх"); 									// Число
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВыделятьОтрицательные"); 				// Булево
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Гиперссылка"); 							// Булево
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГоризонтальноеПоложение"); 				// ГоризонтальноеПоложение
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГраницаСверху");							// Линия
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГраницаСлева");							// Линия
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГраницаСнизу");							// Линия
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГраницаСправа");							// Линия	
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Защита"); 								// Булево	
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Лево"); 									// Число
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ОриентацияТекста"); 						// Число
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ОтметкаНезаполненного"); 				// Булево
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Отступ"); 								// Число	
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ПараметрРасшифровки"); 					// Строка	
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "РазмещениеТекста"); 						// ТипРазмещенияТекстаТабличногоДокумента
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Расшифровка"); 							// Произвольный
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Текст"); 								// Строка
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Узор"); 									// ТипУзораТабличногоДокумента	
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЦветТекста");							// Цвет
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЦветУзора");								// Цвет
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЦветФона");								// Цвет
	СравнитьСвойствоЯчеек(ПараметрыСравнения, "Шрифт");									// Шрифт
	
	Если ТипЗнч(Ячейка1) = Тип("РисунокТабличногоДокумента") Тогда
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "АвтоРазмер"); 							// Булево
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВыводитьНаПечать"); 						// Булево
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Высота");			 					// Число
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Линия"); 								// Линия
		Если Ячейка1.ТипРисунка <> ТипРисункаТабличногоДокумента.Примечание
			И Ячейка2.ТипРисунка <> ТипРисункаТабличногоДокумента.Примечание Тогда
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Имя"); 								// Строка
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Маска"); 							// Строка
		КонецЕсли;		
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ТипРисунка");							// ТипРисункаТабличногоДокумента
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЦветЛинии");								// Цвет
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Ширина");								// Число
		Если Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Текст
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.Текст Тогда
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Заполнение"); 						// ТипЗаполненияОбластиТабличногоДокумента
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Параметр"); 							// Строка
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Формат"); 							// Строка
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "ФорматРедактирования"); 				// Строка
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "СодержитЗначение"); 					// Булево
			Если Ячейка1.СодержитЗначение 
				И Ячейка2.СодержитЗначение Тогда
				СравнитьСвойствоЯчеек(ПараметрыСравнения, "Значение");						// Произвольный
				СравнитьСвойствоЯчеек(ПараметрыСравнения, "ТипЗначения");					// ОписаниеТипов
				СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЭлементУправления");				// ЭлементУправления
			КонецЕсли;
		ИначеЕсли Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Картинка
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.Картинка Тогда
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Картинка");							// Картинка
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "РазмерКартинки"); 					// РазмерКартинки
		ИначеЕсли (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Объект
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.Объект)
			ИЛИ (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Диаграмма
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.Диаграмма)
			ИЛИ (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.ДиаграммаГанта
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.ДиаграммаГанта)
			ИЛИ (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.СводнаяДиаграмма
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.СводнаяДиаграмма)
			ИЛИ (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Дендрограмма
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.Дендрограмма)
			ИЛИ (Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.ГеографическаяСхема
			И Ячейка2.ТипРисунка = ТипРисункаТабличногоДокумента.ГеографическаяСхема) Тогда
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Объект");							// Произвольный
		КонецЕсли;
	Иначе
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "АвтоВысотаСтроки"); 						// Булево
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "АвтоОтступ"); 							// Булево
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВертикальноеПоложениеКартинки"); 		// ВертикальноеПоложение
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВесовойКоэффициентШирины"); 				// Число
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Видимость"); 							// Булево
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВысотаСтроки"); 							// Число
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ГоризонтальноеПоложениеКартинки"); 		// ГоризонтальноеПоложение
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Заполнение"); 							// ТипЗаполненияОбластиТабличногоДокумента
		Если Ячейка1.СодержитЗначение И Ячейка2.СодержитЗначение Тогда 		
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "Значение");							// Произвольный
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "ТипЗначения");						// ОписаниеТипов		
		КонецЕсли;
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Низ"); 									// Число
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Имя"); 									// Строка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Картинка");								// Картинка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Маска"); 								// Строка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Параметр"); 								// Строка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ПараметрКартинки"); 						// Строка
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ПоВыделеннымКолонкам"); 					// Булево
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ПоложениеТекстаОтносительноКартинки"); 	// ПоложениеТекстаОтносительноКартинки
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Право"); 								// Число
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Примечание");                        	// РисунокТабличногоДокумента
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "РазмерКартинки"); 						// РазмерКартинки
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "РастягиватьПоГоризонтали"); 				// Булево
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "РежимИзмененияРазмераКолонки"); 			// РежимИзмененияРазмера
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "СодержитЗначение"); 						// Булево
	    СравнитьСвойствоЯчеек(ПараметрыСравнения, "ТипОбласти"); 							// ТипОбластиЯчеекТабличногоДокумента
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ИспользованиеРасшифровки"); 				// ИспользованиеРасшифровкиТабличногоДокумента
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "Формат"); 								// Строка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ФорматРедактирования"); 					// Строка
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ШиринаКолонки");							// Число	
		Если Ячейка1.ТипОбласти = Ячейка2.ТипОбласти
			И (Ячейка1.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки
			Или Ячейка1.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки) Тогда			
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "ВместеСоСледующим");					// Булево
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "КонецСтраницы");						// Булево
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "НачалоСтраницы");					// Булево			
		КонецЕсли;	
		СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЦветРамки");								// Цвет
		Если Ячейка1.СодержитЗначение 
			И Ячейка2.СодержитЗначение
			И Ячейка1.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Ячейка2.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			СравнитьСвойствоЯчеек(ПараметрыСравнения, "ЭлементУправления");					// ЭлементУправления
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СравнитьСвойствоЯчеек(ПараметрыСравнения, Свойство)
	
	Исключения = ПараметрыСравнения.СвойстваИсключения;
	Если ТипЗнч(Исключения) = Тип("Массив") Тогда
		Если Исключения.Найти(Свойство) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Ячейка1 = ПараметрыСравнения.Ячейка1;
	Ячейка2 = ПараметрыСравнения.Ячейка2;
	Ошибки = ПараметрыСравнения.Ошибки;
	ПоШаблону = ПараметрыСравнения.ПоШаблону;
	
	ДанныеСовпадают = Ложь;
	Значение1 = Ячейка1[Свойство];
	Значение2 = Ячейка2[Свойство];
	
	Если ТипЗнч(Значение1) = ТипЗнч(Значение2) Тогда
		Если ТипЗнч(Значение1) = Тип("Структура") Тогда
			ДанныеСовпадают = ОбщегоНазначения.ДанныеСовпадают(Значение1, Значение2);
		ИначеЕсли ТипЗнч(Значение1) = Тип("Картинка") Тогда
			ДанныеСовпадают = Значение1.Вид = Значение2.Вид
				И Значение1.НаборВариантов = Значение2.НаборВариантов
				И Значение1.РазмерФайла() = Значение2.РазмерФайла();
		ИначеЕсли ТипЗнч(Значение1) = Тип("РисунокТабличногоДокумента") Тогда
				
			ИсключенияШаблон = Новый Массив;
			Для Сч = 0 По Исключения.Количество()-1 Цикл
				ИсключенияШаблон.Добавить(Исключения.Получить(Сч));
			КонецЦикла;
			Если ПоШаблону Тогда
				ИсключенияШаблон.Добавить("Высота");
				ИсключенияШаблон.Добавить("Ширина");
				ИсключенияШаблон.Добавить("Верх");
				ИсключенияШаблон.Добавить("Лево");
			КонецЕсли;
 			
			ОшибкиДо = Ошибки.Количество();			
			ПараметрыСравненияРисунка = Новый Структура;
			ПараметрыСравненияРисунка.Вставить("Ячейка1", Значение1);
			ПараметрыСравненияРисунка.Вставить("Ячейка2", Значение2);
			ПараметрыСравненияРисунка.Вставить("Ошибки", Ошибки);
			ПараметрыСравненияРисунка.Вставить("СвойстваИсключения", ИсключенияШаблон);
			ПараметрыСравненияРисунка.Вставить("ПоШаблону", ПоШаблону);
			СравнитьСвойстваЯчеек(ПараметрыСравненияРисунка);
			ДанныеСовпадают = Ошибки.Количество() = ОшибкиДо;
			
		ИначеЕсли ПоШаблону И ТипЗнч(Значение1) = Тип("Строка") Тогда
			ДанныеСовпадают = СравнитьСтрокиПоШаблону(Значение1, Значение2);
			
		ИначеЕсли Значение1 = Значение2 Тогда
			ДанныеСовпадают = Истина;
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ ДанныеСовпадают Тогда
		ТекстОшибки = НСтр("ru = 'Отличается свойство ""%1"" в ячейке ""%2"": Значение 1=""%3"", значение 2=""%4"";'");
		Если ТипЗнч(Ячейка1) = Тип("РисунокТабличногоДокумента")
			И Ячейка1.ТипРисунка = ТипРисункаТабличногоДокумента.Примечание Тогда
			ТекстОшибки = СтрШаблон(ТекстОшибки, Свойство, "Примечание", Значение1, Значение2);
		Иначе
			ТекстОшибки = СтрШаблон(ТекстОшибки, Свойство, Ячейка1.Имя, Значение1, Значение2);
		КонецЕсли;
		Ошибки.Добавить(ТекстОшибки);
		Ячейка1.ЦветФона = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
		Ячейка2.ЦветФона = Метаданные.ЭлементыСтиля.ПросроченныеДанныеЦвет.Значение;
	КонецЕсли;
	
КонецПроцедуры

Функция СравнитьСтрокиПоШаблону(Строка1, Строка2)
	
	Если Строка1 = "" И Строка2 = "" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Строка1 ПОДОБНО &Строка2 КАК Совпадают";
	
	Запрос.УстановитьПараметр("Строка1", Строка1);
	Запрос.УстановитьПараметр("Строка2", СтрЗаменить(Строка2, "*", "%"));
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

	Возврат ВыборкаДетальныеЗаписи.Совпадают;
	
КонецФункции

#КонецОбласти

#КонецЕсли