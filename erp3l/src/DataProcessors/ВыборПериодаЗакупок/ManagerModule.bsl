#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
Функция СоздатьВыборПериодаДиапазоном(ПериодНачала, ПериодОкончания, Инновационный) Экспорт
	ОбработкаОбъект = Обработки.ВыборПериодаЗакупок.Создать();
	ОбработкаОбъект.Инициализировать();
	ОбработкаОбъект.УстановитьИнновационный(Инновационный);
	ОбработкаОбъект.УстановитьПериодНачала(ПериодНачала);
	ОбработкаОбъект.УстановитьПериодОкончания(ПериодОкончания);
	Возврат ОбработкаОбъект;
КонецФункции


Функция СоздатьВыборПериодаПериодомЗакупки(ПериодЗакупок, Инновационный) Экспорт
	ОбработкаОбъект = Обработки.ВыборПериодаЗакупок.Создать();
	ОбработкаОбъект.Инициализировать();
	ОбработкаОбъект.УстановитьИнновационный(Инновационный);
	ОбработкаОбъект.УстановитьПериодЗакупок(ПериодЗакупок);
	Возврат ОбработкаОбъект;
КонецФункции

// Данную процедуру нужно вызывать при изменении
// реквизитов обработки размещенных на форме
// для поддержания значений остальных реквизитов
// обработки в согласованном состоянии.
Процедура ОбработатьПриИзмененииРеквизита(ОбработкаКоллекция,
										ИмяРеквизита) Экспорт
	ОбработатьСобытиеРеквизита(
		ОбработкаКоллекция,
		"ПриИзменении",
		ИмяРеквизита);
КонецПроцедуры

// Распаковывает объект и вызывает метод обработки события.
//
Процедура ОбработатьСобытиеРеквизита(ОбработкаКоллекция,
									ИмяСобытия,
									ИмяРеквизита) Экспорт
	ОбработкаОбъект = ДанныеФормыВЗначение(
		ОбработкаКоллекция,
		Тип("ОбработкаОбъект.ВыборПериодаЗакупок"));
	Если ИмяСобытия = "ПриИзменении" Тогда
		ИмяМетода = Строка(ИмяРеквизита) + "ПриИзменении";
		ОбщегоНазначения.ВыполнитьМетодОбъекта(
			ОбработкаОбъект,
		    ИмяМетода);
	Иначе
		Возврат;
	КонецЕсли;
	ЗначениеВДанныеФормы(ОбработкаОбъект, ОбработкаКоллекция);
КонецПроцедуры


#КонецЕсли