&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;


#Область ОбработкаОсновныхСобытийФормы


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ПодключениеРасширенияРаботыСФайлами", 0.1, Истина);
	#Иначе
		ПодключениеРасширенияРаботыСФайламиЗавершение(Истина, Неопределено);
	#КонецЕсли
	
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыборФайла(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ОбработатьЗагрузкуДанных();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ЗагрузитьРезультат(АдресХранилища);
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаЕИС(Команда)
	ЗапуститьПриложение("ftp://fz223free:fz223free@ftp.zakupki.gov.ru/out/nsi/");
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Элементы = Форма.Элементы;
	Элементы.ИмяФайлаДанных.Видимость = Форма.ВозможностьВыбораФайлов;	
	
	Если Форма.ВозможностьВыбораФайлов Тогда
		ТекстПояснения = НСтр("ru = 'Укажите путь к файлу с данными классификатора и нажмите кнопку ""Загрузить данные"".
                              |В настоящий момент поддерживается загрузка классификаторов ОКПД2 и ОКВЭД2 в формате xml или zip.
                              |Файлы можно получить на сайте zakupki.gov.ru.
                              |Подробнее про предоставление справочной информации на сайте ЕИС рассказано в разделе 4 документа ""Требования к форматам и файлам 223-ФЗ"" опубликованного на сайте ЕИС.'");
	Иначе
		ТекстПояснения = Нстр("ru = 'По кнопке ""Загрузить данные"" укажите путь к файлу, с данными классификатора'");
	КонецЕсли;
	Элементы.ГруппаСсылкаЕИС.Видимость = Форма.ВозможностьВыбораФайлов;
	
	Элементы.ДекорацияПояснение.Заголовок = ТекстПояснения;	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеРасширенияРаботыСФайлами() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеРасширенияРаботыСФайламиЗавершение(РасширениеРаботыСФайламиПодключено, ДополнительныеПараметры) Экспорт
	ВозможностьВыбораФайлов = РасширениеРаботыСФайламиПодключено;
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Элемент)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      = Нстр("ru = 'Файл данных (*.xml, *.zip)|*.xml;*.zip'");
	ДиалогВыбораФайла.Заголовок                   = Нстр("ru = 'Выберите файл'");
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.Расширение                  ="xml";
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы <> Неопределено
		И ВыбранныеФайлы.Количество()>0 Тогда
		ИмяФайлаДанных = ВыбранныеФайлы[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗагрузкуДанных()

	УстановитьТекстСообщения(ЭтаФорма, "");
	
	АдресФайла = Неопределено;
	
	ОчиститьСообщения();
	
	Если ВозможностьВыбораФайлов Тогда
		
		Если ПустаяСтрока(ИмяФайлаДанных) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не указан файл данных для загрузки'"));
			Возврат;
		КонецЕсли;
		
		ПомещаемыеФайлы = Новый Массив;
		ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайлаДанных));
		
		ПомещениеФайловЗавершение = Новый ОписаниеОповещения("ПомещениеФайловЗавершение", ЭтотОбъект);
		
		НачатьПомещениеФайлов(ПомещениеФайловЗавершение, ПомещаемыеФайлы, , Ложь);
		
	Иначе
		// Веб клиент без расширения для работы с файлами
		Попытка
			ПомещениеФайлаЗавершение = Новый ОписаниеОповещения("ПомещениеФайлаЗавершение", ЭтотОбъект);
			НачатьПомещениеФайла(ПомещениеФайлаЗавершение, АдресФайла, , Истина, УникальныйИдентификатор);
		Исключение
			ШаблонСообщения = НСтр("ru = 'При чтении файла возникла ошибка
			|%1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
								КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ОписаниеОшибки = ИнформацияОбОшибке();
			ЗаписатьОшибкуВЖурнал(ТекстСообщения, ОписаниеОшибки);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайловЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	Если ПомещенныеФайлы <> Неопределено И ПомещенныеФайлы.Количество() > 0 Тогда
		ОписаниеФайлов = ПомещенныеФайлы.Получить(0);
		АдресФайла = ОписаниеФайлов.Хранение;
		ИмяФайла = ОписаниеФайлов.Имя;
		ВыполнитьЗагрузкуДанных(АдресФайла, ИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаЗавершение(Результат, АдресФайлаПомещенный, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	ВыполнитьЗагрузкуДанных(АдресФайлаПомещенный, ВыбранноеИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуДанных(АдресФайла, ИмяФайла)
	Если АдресФайла = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не удалось получить данные для загрузки'"));
		Возврат;
	КонецЕсли;
	
	Результат = ВыполнитьЗагрузкуДанныхНаСервере(АдресФайла, ИмяФайла, УникальныйИдентификатор);
		
	Если Результат.ЗаданиеВыполнено Тогда
		ЗагрузитьРезультат(Результат.АдресХранилища);
	Иначе
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстСообщения(Форма, ТекстСообщения)
	Форма.ТекстСообщения = ТекстСообщения;
	Форма.Элементы.ТекстСообщения.Видимость =
			НЕ ПустаяСтрока(ТекстСообщения);
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервереБезКонтекста
Процедура ЗаписатьОшибкуВЖурнал(ТекстСообщения, ОписаниеОшибки)
	ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьЗагрузкуДанныхНаСервере(АдресФайла, ИмяФайлаНаКлиенте, УИДФормы)
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);
	ПараметрыВыгрузки.Вставить("ИмяФайлаНаКлиенте", ИмяФайлаНаКлиенте);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() И ОбщегоНазначенияУХ.ЭтоВнешнееСоединение() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УИДФормы);
		Обработки.ЗагрузкаКлассификаторовЕИС.ЗагрузитьДанныеКлассификатора(ПараметрыВыгрузки, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено, АдресХранилища", Истина, АдресХранилища);
	
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Загрузка классификатора ЕИС'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УИДФормы,
			"Обработки.ЗагрузкаКлассификаторовЕИС.ЗагрузитьДанныеКлассификатора", 
			ПараметрыВыгрузки, 
			НаименованиеЗадания);
	КонецЕсли;
		
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультат(АдресХранилища)
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Строка")
			И ЗначениеЗаполнено(Результат) Тогда 
		УстановитьТекстСообщения(ЭтаФорма, Результат);
	КонецЕсли;
КонецПроцедуры


#КонецОбласти
