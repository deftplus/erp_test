#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает таблицу описания объектов бухгалтерского учета.
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание колонок:
//  * ОбъектУчета - ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета - Ссылка объекта бухгалтерского учета
//  * ФункциональныеОпции - Массив из Строка - массив имен функциональных опций, управляющих ведением учета по объекту бух.учета
//  * ИсточникДанных - Строка - Имя регистра накопления, в котором ведется учет по объекту бух.учета
//  * ОтборДанных - Соответствие, Массив - Отбор данных регистра по объекту бух.учета. Условия отбора в Соответствии складываются по "И", в Массиве по "ИЛИ"
//  * ПутьКДаннымОбъектНастройки - Строка - Путь выборки данных регистра, соответствующих объектам настроек, в разрезе которых указываются счета учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * ПутьКДаннымНаправлениеДеятельности - Строка - Путь выборки значения направления деятельности из данных регистра. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * ПутьКДаннымИдентификаторФинЗаписи - Строка - Путь выборки значения идентификатора записи регистра. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * ПутьКДаннымИдентификаторСтроки - Строка - Путь выборки значения идентификатора строки регистра. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * ПутиКДаннымСубконто - Соответствие Из КлючИЗначение - Уточнение путей выборки субконто. Указывается в случае некорректного результата подбора значения субконто по источникам субконто регистра
//  	* Ключ - ПланВидовХарактеристикСсылка.ВидыСубконтоМеждународные - Вид субконто
//  	* Значение - Строка - Путь выборки значения субконто
//  * РесурсыУпр - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте управленческого учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыРегл - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте регламентированного учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыВал - Массив - Массив строк с именами ресурсов, хранящих валютную сумму операции. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыКоличество - Массив - Массив строк с именами ресурсов, хранящих количество операции. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * КорИсточникиДанных - Массив - Массив строк с именами регистров накопления, в которых ведется учет корреспондирующих объектов учета. Применяется для регистра Выручка.
// 
Функция ОписаниеОбъектовБухгалтерскогоУчета() Экспорт
	
	ОбъектыБухгалтерскогоУчета = Новый ТаблицаЗначений();
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов("ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ФункциональныеОпции", Новый ОписаниеТипов("Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ИсточникДанных", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ОтборДанных", Новый ОписаниеТипов("Соответствие,Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ПутьКДаннымОбъектНастройки", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ПутьКДаннымНаправлениеДеятельности", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ПутьКДаннымИдентификаторФинЗаписи", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ПутьКДаннымИдентификаторСтроки", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("ПутиКДаннымСубконто", Новый ОписаниеТипов("Соответствие"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("РесурсыУпр", Новый ОписаниеТипов("Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("РесурсыРегл", Новый ОписаниеТипов("Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("РесурсыВал", Новый ОписаниеТипов("Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("РесурсыКоличество", Новый ОписаниеТипов("Массив"));
	ОбъектыБухгалтерскогоУчета.Колонки.Добавить("КорИсточникиДанных", Новый ОписаниеТипов("Массив"));
	
	ЗаполнитьОбъектыУчетаДенежныеСредства(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаНоменклатура(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаОсновныеСредства(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаНематериальныеАктивы(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаРасчетыСКлиентами(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаРасчетыСПоставщиками(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаКредитыИЗаймыВыданные(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаКредитыИЗаймыПолученные(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаРасчетыССотрудниками(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаАренда(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаНезавершенноеПроизводство(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаДоходыИРасходы(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаНДС(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьОбъектыУчетаПрочиеАктивыИОбязательства(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьСлужебныеОбъектыУчета(ОбъектыБухгалтерскогоУчета);
	ЗаполнитьУдаляемыеОбъектыУчета(ОбъектыБухгалтерскогоУчета);
	
	МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистровЛокализация.ДобавитьОписаниеОбъектовБухгалтерскогоУчета(ОбъектыБухгалтерскогоУчета);
	
	ОбъектыБухгалтерскогоУчета.Индексы.Добавить("ИсточникДанных");
	ОбъектыБухгалтерскогоУчета.Индексы.Добавить("ОбъектУчета");
	
	Возврат ОбъектыБухгалтерскогоУчета;
	
КонецФункции

// Возвращает структуру описания объекта бухгалтерского учета.
// 
// Возвращаемое значение:
// 	Структура - Описание:
//  * ОбъектУчета - ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета - Ссылка объекта бухгалтерского учета
//  * ФункциональныеОпции - Массив из Строка - массив имен функциональных опций, управляющих ведением учета по объекту бух.учета
//  * ИсточникДанных - Строка - Имя регистра накопления, в котором ведется учет по объекту бух.учета
//  * ОтборДанных - Соответствие, Массив - Отбор данных регистра по объекту бух.учета. Условия отбора в Соответствии складываются по "И", в Массиве по "ИЛИ"
//  * ПутьКДаннымОбъектНастройки - Строка - Путь выборки данных регистра, соответствующих объектам настроек, в разрезе которых указываются счета учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыУпр - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте управленческого учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыРегл - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте регламентированного учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыВал - Массив - Массив строк с именами ресурсов, хранящих валютную сумму операции. Указывается в случае отличия от аналогичого параметра регистра накопления
// 
Функция ОписаниеОбъектаБухгалтерскогоУчета(ОбъектУчета) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектУчета) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеОбъектовУчета = ОписаниеОбъектовБухгалтерскогоУчета();
	
	Результат = Новый Структура;
	Для каждого Колонка Из ОписаниеОбъектовУчета.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ОписаниеОбъекаУчета = ОписаниеОбъектовУчета.Найти(ОбъектУчета, "ОбъектУчета");
	
	Если ОписаниеОбъекаУчета = Неопределено Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Отсутствует описание объекта учета ""%1""';
										|en = 'No details for the ""%1"" accounting object'"), ОбъектУчета);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Результат, ОписаниеОбъекаУчета);
	
	Возврат Результат;
	
КонецФункции

// Возвращает расширенную таблицу описания объектов бухгалтерского учета. Таблица содержит описание группировки объектов учета, типов объектов настройки и т.д.
// 
// Возвращаемое значение:
// 	Структура - Описание:
//  * ОбъектУчета - ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета - Ссылка объекта бухгалтерского учета
//  * ФункциональныеОпции - Массив из Строка - массив имен функциональных опций, управляющих ведением учета по объекту бух.учета
//  * ИсточникДанных - Строка - Имя регистра накопления, в котором ведется учет по объекту бух.учета
//  * ОтборДанных - Соответствие, Массив - Отбор данных регистра по объекту бух.учета. Условия отбора в Соответствии складываются по "И", в Массиве по "ИЛИ"
//  * ПутьКДаннымОбъектНастройки - Строка - Путь выборки данных регистра, соответствующих объектам настроек, в разрезе которых указываются счета учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыУпр - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте управленческого учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыРегл - Массив - Массив строк с именами ресурсов, хранящих сумму операции в валюте регламентированного учета. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * РесурсыВал - Массив - Массив строк с именами ресурсов, хранящих валютную сумму операции. Указывается в случае отличия от аналогичого параметра регистра накопления
//  * Группа - Строка - Группа объектов учета
//  * Представление - Строка - Представление объекта при отображении в группе
//  * ОписаниеТиповОбъектНастройки - ОписаниеТипов - Описание типов объекта настройки. Если только общая настройка, то описание не содержит типов.
//  * ОтборОбъектовНастройки - Структура, Массив - Отбор объектов настройки, в случае массива условия складываются по "ИЛИ":
//  	* Ключ - Строка - Имя реквизита отбора
//  	* Значение - Произвольный - Значение отбора
//  * ОписаниеТиповМестоУчета - ОписаниеТипов - Описание типов места учета для настройки исключение. Если настройка исключений по местам учета не предусмотрена, то описание не содержит типов.
//  * ЗаголовокТаблицыНастройкиСчетов - Строка - Заголовок таблицы настройки счетов по объекту учета
Функция РасширенноеОписаниеОбъектовУчетаДляНастройки() Экспорт
	
	ОбъектыБухгалтерскогоУчета = ОписаниеОбъектовБухгалтерскогоУчета();
	Для каждого КлючИЗначение Из ОписаниеОбъектаУчетаДляНастройкиФорм() Цикл
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(КлючИЗначение.Значение));
		Если КлючИЗначение.Ключ = "ОтборОбъектовНастройки" Тогда
			МассивТипов.Добавить(Тип("Массив"));
		КонецЕсли;
		ОбъектыБухгалтерскогоУчета.Колонки.Добавить(КлючИЗначение.Ключ, Новый ОписаниеТипов(МассивТипов));
	КонецЦикла;
	
	ГруппыОбъектовУчета = ГруппыОбъектовУчета();
	ОписаниеОбъектовУчетаДляНастройкиФорм = Новый Соответствие();
	
	#Область ОписаниеОбъектовУчета
	
	#Область ДенежныеСредства
	
	ИмяРеквизитаТипДенежныхСредств = Метаданные.Справочники.ГруппыФинансовогоУчетаДенежныхСредств.Реквизиты.ТипДенежныхСредств.Имя;
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДережныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'В кассах предприятия';
												|en = 'On the enterprise cash accounts'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета денежных средств в кассах предприятия';
																|en = 'Ledger account of cash in enterprise cash accounts'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДенежныхСредств");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура(ИмяРеквизитаТипДенежныхСредств, Перечисления.ТипыДенежныхСредств.Наличные);
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВКассах, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДережныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'В кассах ККМ';
												|en = 'In cash registers'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета денежных средств в рознице';
																|en = 'Ledger account of retail cash'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДенежныхСредств");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура(ИмяРеквизитаТипДенежныхСредств, Перечисления.ТипыДенежныхСредств.ВКассахККМ);
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВКассахККМ, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДережныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'На банковских счетах';
												|en = 'On bank accounts'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета денежных средств на банковских счетах';
																|en = 'Ledger accounts of cash in bank accounts'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДенежныхСредств");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура(ИмяРеквизитаТипДенежныхСредств, Перечисления.ТипыДенежныхСредств.Безналичные);
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваНаСчетах, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДережныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'В пути';
												|en = 'In transit'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета денежных средств в пути';
																|en = 'Cash-in-transit GL accounts'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПереводовДенежныхСредств");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВПути, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область Номенклатура
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'На складе';
												|en = 'In warehouse'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета товаров на складах';
																|en = 'Ledger accounts of goods in warehouses'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.Склады");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураНаСкладе, ОписаниеОбъектаУчета);

	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'В пути';
												|en = 'In transit'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета собственных товаров в пути';
																|en = 'Ledger accounts of own goods in transit'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураВПути, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'В цеховой кладовой';
												|en = 'In shop floor stockrooms'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета материалов в цеховых кладовых';
																|en = 'Ledger accounts of materials in shop floor stockrooms'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.Склады");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураВЦеховойКладовой, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Отгруженная';
												|en = 'Shipped'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета товаров отгруженных покупателю';
																|en = 'Ledger accounts of goods shipped to customer'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураОтгруженная, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Переданная в переработку';
												|en = 'Transferred to subcontracting'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета материалов переданных переработчику';
																|en = 'Ledger accounts of materials transferred to subcontractor'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяВПереработку, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Переданная на хранение с правом продажи';
												|en = 'Transferred to safekeeping with the right of sale'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета товаров переданных на хранение';
																|en = 'Ledger accounts of goods transferred to safekeeping'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяНаХранение, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Переданная на комиссию';
												|en = 'Transferred to commission agent'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета товаров переданных комиссионеру';
																|en = 'Ledger accounts of goods transferred to commission agent'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяНаКомиссию, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Переданная возвратная тара';
												|en = 'Transferred returnable packaging'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета переданной возвратной тары';
																|en = 'Ledger accounts of transferred returnable packaging'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПереданнаяВозвратнаяТара, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Номенклатура;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Принятая возвратная тара';
												|en = 'Received returnable packaging'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета принятой возвратной тары';
																|en = 'Ledger accounts of received returnable packaging'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПринятаяВозвратнаяТара, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область ОсновныеСредства
	
	РеквизитВидАктива = Метаданные.Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.Реквизиты.ВидАктива.Имя;
	МассивВидовАктивов = Новый Массив;
	МассивВидовАктивов.Добавить(Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
	МассивВидовАктивов.Добавить(Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество);
	ОтборГруппФинансовогоУчетаОС = Новый Структура(РеквизитВидАктива, МассивВидовАктивов);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ОсновныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Стоимость ОС';
												|en = 'Fixed assets cost'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета стоимости ОС';
																|en = 'Ledger accounts of fixed assets cost'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаОС;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.СтоимостьОС, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ОсновныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Амортизация ОС';
												|en = 'Fixed assets — Depreciation charge'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета амортизации ОС';
																|en = 'Ledger accounts of fixed asset depreciation'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаОС;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АмортизацияОС, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ОсновныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Резерв переоценки стоимости';
												|en = 'Cost revaluation reserve'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета резерва переоценки стоимости ОС';
																|en = 'Ledger accounts of revaluation reserve of fixed assets cost'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаОС;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РезервПереоценкиСтоимостиОС, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ОсновныеСредства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обесценение ОС';
												|en = 'Fixed asset impairment'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обесценения ОС';
																|en = 'Fixed asset impairment ledger account'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаОС;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбесценениеОС, ОписаниеОбъектаУчета);

	#КонецОбласти
	
	#Область НематериальныеАктивы
	
	РеквизитВидАктива = Метаданные.Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.Реквизиты.ВидАктива.Имя;
	МассивВидовАктивов = Новый Массив;
	МассивВидовАктивов.Добавить(Перечисления.ВидыВнеоборотныхАктивов.НМА);
	МассивВидовАктивов.Добавить(Перечисления.ВидыВнеоборотныхАктивов.НИОКР);
	ОтборГруппФинансовогоУчетаНМА = Новый Структура(РеквизитВидАктива, МассивВидовАктивов);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НематериальныеАктивы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Стоимость НМА';
												|en = 'Intangible assets cost'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета стоимости НМА';
																|en = 'Ledger accounts of intangible assets cost'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаНМА;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.СтоимостьНМА, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НематериальныеАктивы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Амортизация НМА';
												|en = 'Intangible assets — Amortization charge'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета амортизации НМА';
																|en = 'Ledger accounts of intangible asset amortization'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаНМА;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АмортизацияНМА, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НематериальныеАктивы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Резерв переоценки стоимости';
												|en = 'Cost revaluation reserve'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета резерва переоценки стоимости НМА';
																|en = 'Ledger accounts of revaluation reserve of intangible assets cost'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаНМА;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РезервПереоценкиСтоимостиНМА, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НематериальныеАктивы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обесценение НМА';
												|en = 'Intangible asset impairment'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обесценения НМА';
																|en = 'Intangible asset impairment ledger account'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаНМА;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбесценениеНМА, ОписаниеОбъектаУчета);
	
	#КонецОбласти

	#Область РасчетыСКлиентами
	
	РеквизитыГФУРасчетов = Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.Реквизиты;
	ОтборГруппФинансовогоУчетаРасчетовСКлиентами = Новый Массив();
	ОтборГруппФинансовогоУчетаРасчетовСКлиентами.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКлиентами.Имя, Истина));
	ОтборГруппФинансовогоУчетаРасчетовСКлиентами.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКомиссионерами.Имя, Истина));
	ОтборГруппФинансовогоУчетаРасчетовСКлиентами.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКомитентамиПоЗакупке.Имя, Истина));
	ОтборГруппФинансовогоУчетаРасчетовСКлиентами.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКомитентами.Имя, Истина));
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСКлиентами;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Аванс';
												|en = 'Prepayment'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета авансов, полученных от клиентов';
																|en = 'Ledger accounts of prepayments from customers'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетовСКлиентами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АвансыПолученныеОтКлиентов, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСКлиентами;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Задолженность';
												|en = 'Debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета задолженности клиентов';
																|en = 'Ledger accounts of customer receivables'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетовСКлиентами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ЗадолженностьКлиентов, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСКлиентами;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Подарочные сертификаты';
												|en = 'Gift cards'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета подарочных сертификатов';
																|en = 'Ledger accounts of gift cards'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПодарочныеСертификаты, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСКлиентами;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Расчеты с розничными покупателями';
												|en = 'AR/AP accounting for retail customers'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов с розничными покупателями';
																|en = 'Ledger accounts of AR/AP accounting for retail customers'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыСРозничнымиПокупателями, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСКлиентами;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обязательства перед комитентом по закупкам';
												|en = 'Liabilities to vendor for purchasing'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обязательств перед комитентом по закупкам';
																|en = 'Ledger accounts of liabilities to vendor for purchasing'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередКомитентомПоЗакупкам, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщиками
	
	РеквизитыГФУРасчетов = Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.Реквизиты;
	ОтборГруппФинансовогоУчетаРасчетовСПоставщиками = Новый Массив();
	ОтборГруппФинансовогоУчетаРасчетовСПоставщиками.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСПоставщиками.Имя, Истина));
	ОтборГруппФинансовогоУчетаРасчетовСПоставщиками.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКомитентами.Имя, Истина));
	ОтборГруппФинансовогоУчетаРасчетовСПоставщиками.Добавить(Новый Структура(РеквизитыГФУРасчетов.РасчетыСКомиссионерами.Имя, Истина));
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСПоставщиками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Аванс';
												|en = 'Prepayment'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета авансов, выплаченных поставщикам';
																|en = 'Ledger accounts of prepayments to vendors'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетовСПоставщиками;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АвансыВыданныеПоставщикам, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСПоставщиками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Долг';
												|en = 'Debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета задолженности перед поставщиками';
																|en = 'Ledger accounts of vendor payables'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетовСПоставщиками;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ЗадолженностьПередПоставщиками, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСПоставщиками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Процентные расходы дисконтирования';
												|en = 'Discounting interest expenses'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета процентных расходов дисконтирования';
																|en = 'Ledger accounts of discounting interest expenses'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетовСПоставщиками;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПроцентныеРасходыДисконтирования, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСПоставщиками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обязательства перед комитентом по реализованным товарам';
												|en = 'Liabilities to vendor for goods sold'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обязательств перед комитентом по реализованным товарам';
																|en = 'Ledger accounts of liabilities to vendor for goods sold'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередКомитентомПоРеализованнымТоварам, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыСПоставщиками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обязательства перед принципалом по реализованным услугам';
												|en = 'Liabilities to principal for services sold'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обязательств перед принципалом по реализованным услугам';
																|en = 'Ledger accounts of liabilities to principal for services sold'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередПринципаломПоРеализованнымУслугам, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область КредитыИЗаймыВыданные
	
	РеквизитРасчетыСДебиторами = Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.Реквизиты.РасчетыСДебиторами.Имя;
	ОтборГруппФинансовогоУчетаРасчетыСДебиторами = Новый Структура(РеквизитРасчетыСДебиторами, Истина);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыВыданные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Основной долг';
												|en = 'Principal debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета основного долга по кредитам и займам выданным';
																|en = 'Ledger accounts of principal debt on issued credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСДебиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеДолг, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыВыданные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Задолженность по комиссии';
												|en = 'Commission debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета комиссии по кредитам и займам выданным';
																|en = 'Ledger accounts of commission on issued credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСДебиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеКомиссия, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыВыданные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Процентная задолженность';
												|en = 'Interest on debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета начисленных процентов  по кредитам и займам выданным';
																|en = 'Ledger accounts of charged interest on issued credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСДебиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеПроценты, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область КредитыИЗаймыПолученные
	
	РеквизитРасчетыСКредиторами = Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.Реквизиты.РасчетыСКредиторами.Имя;
	ОтборГруппФинансовогоУчетаРасчетыСКредиторами = Новый Структура(РеквизитРасчетыСКредиторами, Истина);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыПолученные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Основной долг';
												|en = 'Principal debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета основного долга по по кредитам и займам полученным';
																|en = 'Ledger accounts of principal debt on received credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСКредиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеДолг, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыПолученные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Задолженность по комиссии';
												|en = 'Commission debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета комиссии по кредитам и займам полученным';
																|en = 'Ledger accounts of commission on received credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСКредиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеКомиссия, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.КредитыИЗаймыПолученные;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Процентная задолженность';
												|en = 'Interest on debt'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета начисленных процентов  по кредитам и займам полученным';
																|en = 'Ledger accounts of accrued interest on received credits and loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСКредиторами;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеПроценты, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область РасчетыССотрудниками
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыССотрудниками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'По заработной плате';
												|en = 'Payroll'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов с сотрудниками по зарплате';
																|en = 'Ledger accounts of employee AR/AP for payroll'");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоЗаработнойПлате, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыССотрудниками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'С подотчетниками';
												|en = 'With advance holders'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов с подотчетными лицами';
																|en = 'Ledger accounts of AR/AP accounting for advance holders'");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыСПодотчетнымиЛицами, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.РасчетыССотрудниками;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Расчеты по выданным займам';
												|en = 'AR/AP accounting for loans issued'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов с сотрудниками по займам';
																|en = 'Ledger accounts of employee AR/AP for loans'");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоЗаймамСотрудникам, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область Аренда
	
	РеквизитРасчетыСАрендодателями = Метаданные.Справочники.ГруппыФинансовогоУчетаРасчетов.Реквизиты.РасчетыСАрендодателями.Имя;
	ОтборГруппФинансовогоУчетаРасчетыСАрендодателями = Новый Структура(РеквизитРасчетыСАрендодателями, Истина);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обеспечительный платеж';
												|en = 'Security deposit'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по обеспечительным платежам';
																|en = 'Ledger accounts of AR/AP accounting for security deposits'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбеспечительныйПлатежПоАренде, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Услуги по аренде';
												|en = 'Lease services'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по услугам аренды';
																|en = 'Ledger accounts of AR/AP accounting for lease services'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.УслугиПоАренде, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Арендные обязательства';
												|en = 'Lease obligations'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов  по арендным  обязательствам';
																|en = 'Ledger accounts of AR/AP accounting for lease obligations'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АрендныеОбязательства, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Выкуп предмета аренды';
												|en = 'Leased object redemption'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по выкупу предмета аренды';
																|en = 'Ledger accounts of lease buyback AR/AP'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВыкупнаяСтоимостьПоАренде, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Аванс за выкуп предмета аренды';
												|en = 'Prepayment for leased object redemption'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по авансам за выкуп предмета аренды';
																|en = 'Ledger accounts of AR/AP for lease buyback prepayments'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.АвансВыкупнойСтоимостиПоАренде, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Проценты по аренде';
												|en = 'Lease interest'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по процентам по аренде';
																|en = 'Ledger accounts of AR/AP accounting for lease interest'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПроцентыПоАренде, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.Аренда;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС по аренде';
												|en = 'Lease VAT'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по НДС по аренде';
																|en = 'Ledger accounts of AR/AP accounting for lease VAT'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = ОтборГруппФинансовогоУчетаРасчетыСАрендодателями;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДСПоАренде, ОписаниеОбъектаУчета);
	
	#КонецОбласти

	#Область НезавершенноеПроизводство
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НезавершенноеПроизводство;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Материальные затраты и работы';
												|en = 'Material costs and works'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета материалов и работ в незавершенном производстве';
																|en = 'Ledger accounts of materials and works in work-in-progress'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия ");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.МатериалыИРаботыВНезавершенномПроизводстве, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НезавершенноеПроизводство;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Трудозатраты';
												|en = 'Labor costs'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета трудозатрат в незавершенном производстве';
																|en = 'Ledger accounts of WIP labor costs'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ТрудозатратыВНезавершенномПроизводстве, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НезавершенноеПроизводство;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Прочие затраты';
												|en = 'Other expenses'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета прочих затрат в незавершенном производстве';
																|en = 'Ledger accounts of other expenses in work-in-progress'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПостатейныеЗатратыВНезавершенномПроизводстве, ОписаниеОбъектаУчета);
	
	#КонецОбласти

	#Область ДоходыИРасходы
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Выручка от продаж товаров и услуг';
												|en = 'Revenue from sales of goods and services'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета выручки от продаж товаров и услуг';
																|en = 'Ledger accounts of revenue from sales of goods and services'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВыручкаОтПродаж, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Себестоимость продаж товаров и услуг';
												|en = 'Cost of goods and services sold'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета себестоимости продаж товаров и услуг';
																|en = 'Ledger accounts of cost of goods and services sold'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.СебестоимостьПродаж, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Прочая выручка';
												|en = 'Revenue — Services and Assets'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета прочей выручки';
																|en = 'Ledger accounts of other revenue'");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Доходы", Истина);
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДоходовРасходов");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПрочаяВыручка, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Прочие расходы';
												|en = 'Other expenses'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета прочих расходов';
																|en = 'Ledger accounts of other expenses'");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Расходы", Истина);
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДоходовРасходов");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.Расходы, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Прочие доходы';
												|en = 'Income'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета прочих доходов';
																|en = 'Ledger accounts of income'");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Доходы", Истина);
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДоходовРасходов");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ПрочиеДоходы, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Закрытие доходов';
												|en = 'Close income'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета закрытия доходов от продолжающихся операций';
																|en = 'Ledger accounts of continuing operation income closing'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ЗакрытиеДоходовОтПродолжающихсяОпераций, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ДоходыИРасходы;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Закрытие расходов';
												|en = 'Close expenses'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета закрытия расходов от продолжающихся операций';
																|en = 'Ledger accounts of continuing operation expense closing'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ЗакрытиеРасходовОтПродолжающихсяОпераций, ОписаниеОбъектаУчета);
	
	#КонецОбласти
	
	#Область НДС
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Входящий НДС';
												|en = 'Input VAT'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета входящего НДС';
																|en = 'Ledger accounts of input VAT'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНалогообложенияНДС");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Ссылка", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"); 
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВходящийНДС, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Расчеты по НДС';
												|en = 'VAT AR/AP accounting'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по НДС';
																|en = 'Ledger accounts of VAT AR/AP accounting'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов(); 
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоНДС, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС с продаж товаров и услуг';
												|en = 'VAT on sales of goods and services'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета НДС с продаж товаров и услуг';
																|en = 'Ledger accounts of VAT on sales of goods and services'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДССПродаж, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС по отгузкам без перехода права собственности';
												|en = 'VAT on shipment without transfer of title to goods'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета НДС по отгрузкам без перехода права собственности';
																|en = 'Ledger accounts of VAT on shipment without transfer of title to goods'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДСПоОтгрузкамБезПереходаПраваСобственности, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС с прочих продаж';
												|en = 'VAT on other sales'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета НДС с прочих продаж';
																|en = 'Ledger accounts of VAT on other sales'");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Доходы", Истина);
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаДоходовРасходов");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДССПрочихДоходов, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС с полученных авансов';
												|en = 'VAT on prepayments from customer'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета НДС с полученных авансов';
																|en = 'Ledger accounts of VAT on prepayments from customer'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов(); 
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДССАвансовПолученных, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.НДС;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'НДС с выплаченных авансов';
												|en = 'VAT on prepayments to vendor'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета НДС с выплаченных авансов';
																|en = 'Ledger accounts of VAT on prepayments to vendor'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов(); 
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.НДССАвансовВыданных, ОписаниеОбъектаУчета);

	#КонецОбласти

	#Область ПрочиеАктивыИОбязательства
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Налоги и взносы';
												|en = 'Taxes and contributions'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по налогам и взносам';
																|en = 'Ledger accounts of AR/AP accounting for taxes and contributions'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНалогов"); 
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТипыНалогов.Ссылка КАК Ссылка
	|ИЗ
	|	Перечисление.ТипыНалогов КАК ТипыНалогов
	|ГДЕ
	|	ТипыНалогов.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	ТипыПрочихНалогов = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОписаниеОбъектаУчета.ОтборОбъектовНастройки = Новый Структура("Ссылка", ТипыПрочихНалогов);
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов(); 
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоНалогамИВзносам, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Резервы по предстоящим расходам';
												|en = 'Provisions'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета резервов по предстоящим расходам';
																|en = 'Ledger accounts of provisions'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.Резервы");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РезервыОценочныеОбязательства, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Резервы по сомнительным долгам';
												|en = 'Loss allowance'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета резервов по сомнительным долгам';
																|en = 'Ledger accounts of loss allowance'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РезервыПоСомнительнымДолгам, ОписаниеОбъектаУчета);

	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Резервы под обесценение';
												|en = 'Provisions for impairment'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета резервов под обесценение материальных ценностей';
																|en = 'Ledger accounts of provisions for impairment of tangible assets'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры");
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РезервыПодОбесценение, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Внутрихозяйственные расчеты (расчеты с филиалами)';
												|en = 'Interbranch AR/AP (AR/AP accounting for branch offices)'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета внутрихозяйственных расчетов';
																|en = 'Ledger accounts of interbranch AR/AP'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВнутрихозяйственныеРасчеты, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Внутрихозяйственные расчеты по выделенному имуществу';
												|en = 'Interbranch AR/AP for allocated property'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета внутрихозяйственных расчетов по выделенному имуществу';
																|en = 'Ledger accounts of interbranch AR/AP for allocated property'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВнутрихозяйственныеРасчетыПоВыделенномуИмуществу, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Обязательства по неотфактурованным поставкам';
												|en = 'Liabilities for goods received not invoiced'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета обязательств по неотфактурованным поставкам';
																|en = 'Ledger accounts of liabilities for goods received not invoiced'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПоНеотфактурованнымПоставкам, ОписаниеОбъектаУчета);
	
	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Расчеты по взаимозачетам задолженности';
												|en = 'AR/AP accounting for AR/AP offset'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Счета учета расчетов по взаимозачетам задолженности';
																|en = 'Ledger accounts of AR/AP accounting for AR/AP offset'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоВзаимозачетамЗадолженности, ОписаниеОбъектаУчета);

	ОписаниеОбъектаУчета = ОписаниеОбъектаУчетаДляНастройкиФорм();
	ОписаниеОбъектаУчета.Группа = ГруппыОбъектовУчета.ПрочиеАктивыИОбязательства;
	ОписаниеОбъектаУчета.Представление = НСтр("ru = 'Ввод остатков';
												|en = 'Balance entry'");
	ОписаниеОбъектаУчета.ЗаголовокТаблицыНастройкиСчетов = НСтр("ru = 'Вспомогательные счета для ввода остатков';
																|en = 'Subaccounts for entering balance'");
	ОписаниеОбъектаУчета.ОписаниеТиповОбъектНастройки = Неопределено;
	ОписаниеОбъектаУчета.ОписаниеТиповМестоУчета = Новый ОписаниеТипов();
	ОписаниеОбъектовУчетаДляНастройкиФорм.Вставить(Перечисления.ОбъектыБухгалтерскогоУчета.ВводОстатков, ОписаниеОбъектаУчета);

	#КонецОбласти
	
	МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистровЛокализация.ДобавитьРасширенноеОписаниеОбъектовУчетаДляНастройки(
		ОписаниеОбъектовУчетаДляНастройкиФорм, ГруппыОбъектовУчета);
	
	#КонецОбласти
	
	Для каждого Строка Из ОбъектыБухгалтерскогоУчета Цикл
		
		ОписаниеОбъекта = ОписаниеОбъектовУчетаДляНастройкиФорм[Строка.ОбъектУчета];
		
		Если ОписаниеОбъекта <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Строка, ОписаниеОбъекта);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбъектыБухгалтерскогоУчета.Индексы.Добавить("ОбъектУчета");
	
	Возврат ОбъектыБухгалтерскогоУчета;
	
КонецФункции

// Возвращает представление объекта учета с группой. 
// Например, "Расчеты с клиентами - Долг".
//
// Параметры:
// 	ОбъектУчета - ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета - Объект, для которого надо получить расширенное представление
// 	РасширенноеОписаниеОбъектовУчета - см. РасширенноеОписаниеОбъектовУчетаДляНастройки
//
// Возвращаемое значение:
// 	Строка - 
Функция ПредставлениеОбъектаУчетаСГруппой(ОбъектУчета, РасширенноеОписаниеОбъектовУчета = Неопределено) Экспорт
	
	Если РасширенноеОписаниеОбъектовУчета = Неопределено Тогда
		РасширенноеОписаниеОбъектовУчета = РасширенноеОписаниеОбъектовУчетаДляНастройки();
	КонецЕсли;
	
	РасширенноеОписанияОбъектаУчета = РасширенноеОписаниеОбъектовУчета.Найти(ОбъектУчета, "ОбъектУчета");
	Если РасширенноеОписанияОбъектаУчета <> Неопределено Тогда
		Результат = РасширенноеОписанияОбъектаУчета.Группа + " - " + РасширенноеОписанияОбъектаУчета.Представление;
	Иначе
		Результат = Строка(ОбъектУчета);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает дерево объектов бухгалтерского учета для представления формах.
// 
// 
// Возвращаемое значение:
// 	ДеревоЗначений - Описание:
// * ОбъектУчета - ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета -
// * Представление - Строка -
// * ИсточникДанных - Строка -
// * ЗаголовокТаблицыНастройкиСчетов - Строка -
// * ОписаниеТиповОбъектНастройки - ОписаниеТипов -
// * ОписаниеТиповМестоУчета - ОписаниеТипов -
// * ЭтоГруппа - Булево -
//
Функция ДеревоОбъектовУчета() Экспорт
	
	ДеревоОбъектовУчета = Новый ДеревоЗначений();
	ДеревоОбъектовУчета.Колонки.Добавить("ЭтоГруппа", Новый ОписаниеТипов("Булево"));
	ДеревоОбъектовУчета.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов("ПеречислениеСсылка.ОбъектыБухгалтерскогоУчета"));
	ДеревоОбъектовУчета.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ДеревоОбъектовУчета.Колонки.Добавить("ИсточникДанных", Новый ОписаниеТипов("Строка"));
	ДеревоОбъектовУчета.Колонки.Добавить("ЗаголовокТаблицыНастройкиСчетов", Новый ОписаниеТипов("Строка"));
	ДеревоОбъектовУчета.Колонки.Добавить("ОписаниеТиповОбъектНастройки", Новый ОписаниеТипов("ОписаниеТипов"));
	ДеревоОбъектовУчета.Колонки.Добавить("ОписаниеТиповМестоУчета", Новый ОписаниеТипов("ОписаниеТипов"));
	ДеревоОбъектовУчета.Колонки.Добавить("ОтборОбъектовНастройки", Новый ОписаниеТипов("Структура,ФиксированныйМассив"));
	
	ОписаниеОбъектовУчета = РасширенноеОписаниеОбъектовУчетаДляНастройки();
	ОписаниеОбъектовУчета.Индексы.Добавить("Группа");
	
	Для каждого КлючИЗначение Из ГруппыОбъектовУчета() Цикл
		
		НоваяГруппа = ДеревоОбъектовУчета.Строки.Добавить();
		НоваяГруппа.ЭтоГруппа = Истина;
		НоваяГруппа.Представление = КлючИЗначение.Значение;
		
		РезультатОтбора = ОписаниеОбъектовУчета.НайтиСтроки(Новый Структура("Группа", КлючИЗначение.Значение));
		ДобавленныеОбъектыУчета = Новый Соответствие();
		Для каждого СтрокаТаблицы Из РезультатОтбора Цикл
			Если ДобавленныеОбъектыУчета[СтрокаТаблицы.ОбъектУчета] = Неопределено
				И ОбъектУчетаДоступенПоФункциональнымОпциям(СтрокаТаблицы) Тогда
				НоваяСтрокаДерева = НоваяГруппа.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаДерева, СтрокаТаблицы);
				Если ТипЗнч(СтрокаТаблицы.ОтборОбъектовНастройки) = Тип("Массив") Тогда
					НоваяСтрокаДерева.ОтборОбъектовНастройки = Новый ФиксированныйМассив(СтрокаТаблицы.ОтборОбъектовНастройки);
				КонецЕсли;
				ДобавленныеОбъектыУчета.Вставить(НоваяСтрокаДерева.ОбъектУчета, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СтрокиДереваКУдалению = Новый Массив;
	Для каждого СтрокаДерева Из ДеревоОбъектовУчета.Строки Цикл
		Если СтрокаДерева.Строки.Количество() = 0 Тогда
			СтрокиДереваКУдалению.Добавить(СтрокаДерева);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаДерева Из СтрокиДереваКУдалению Цикл
		ДеревоОбъектовУчета.Строки.Удалить(СтрокаДерева);
	КонецЦикла;
	
	Возврат ДеревоОбъектовУчета;
	
КонецФункции

Функция ОбъектУчетаДоступенПоФункциональнымОпциям(ОписаниеОбъектаУчета) Экспорт
	
	ОбъектДоступенПоФО = ОписаниеОбъектаУчета.ФункциональныеОпции.Количество() = 0;
	
	Для Каждого ИмяФункциональнойОпции Из ОписаниеОбъектаУчета.ФункциональныеОпции Цикл
		Если ПолучитьФункциональнуюОпцию(ИмяФункциональнойОпции) Тогда
			ОбъектДоступенПоФО = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбъектДоступенПоФО;
	
КонецФункции

Функция ЗаголовокОбъектаНастройкиПоОписаниюТипов(ОписаниеТиповОбъектНастройки) Экспорт
	
	ПредставленияОбъектовНастройки = Новый Массив;
	Для каждого Тип Из ОписаниеТиповОбъектНастройки.Типы() Цикл
		МетаданныеОбъектаНастройки =  Метаданные.НайтиПоТипу(Тип); 
		Если ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъектаНастройки) И МетаданныеОбъектаНастройки.ПредставлениеОбъекта <> "" Тогда
			ПредставленияОбъектовНастройки.Добавить(МетаданныеОбъектаНастройки.ПредставлениеОбъекта);
		ИначеЕсли ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъектаНастройки) И МетаданныеОбъектаНастройки.ПредставлениеОбъекта <> "" Тогда
			ПредставленияОбъектовНастройки.Добавить(МетаданныеОбъектаНастройки.ПредставлениеОбъекта);
		Иначе
			ПредставленияОбъектовНастройки.Добавить(МетаданныеОбъектаНастройки.Представление());
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрСоединить(ПредставленияОбъектовНастройки, ",");
	
КонецФункции

Функция ПараметрыВыбораОбъектаНастрйки(ОтборОбъектовНастройки) Экспорт
	
	Если ЗначениеЗаполнено(ОтборОбъектовНастройки)
	И ТипЗнч(ОтборОбъектовНастройки) = Тип("Структура") Тогда
		МассивПараметровВыбораОбъектаНастройки = Новый Массив;
		Для каждого КлючИЗначение Из ОтборОбъектовНастройки Цикл
			Если ТипЗнч(КлючИЗначение.Значение) = Тип("Массив") Тогда
				МассивЗначения = КлючИЗначение.Значение;
			Иначе
				МассивЗначения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючИЗначение.Значение);
			КонецЕсли;
			МассивПараметровВыбораОбъектаНастройки.Добавить(
				Новый ПараметрВыбора("Отбор." + КлючИЗначение.Ключ, Новый ФиксированныйМассив(МассивЗначения)));
		КонецЦикла;
		ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбораОбъектаНастройки);
	Иначе
		ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ЗаголовокМестаУчета(ОписаниеТиповМестоУчета) Экспорт
	
	ПредставленияМестаУчета = Новый Массив;
	Для каждого Тип Из ОписаниеТиповМестоУчета.Типы() Цикл
		МетаданныеМестаУчета =  Метаданные.НайтиПоТипу(Тип);
		Если ОбщегоНазначения.ЭтоСправочник(МетаданныеМестаУчета) И МетаданныеМестаУчета.ПредставлениеОбъекта <> "" Тогда
			ПредставленияМестаУчета.Добавить(МетаданныеМестаУчета.ПредставлениеОбъекта);
		ИначеЕсли ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеМестаУчета) И МетаданныеМестаУчета.ПредставлениеОбъекта <> "" Тогда
			ПредставленияМестаУчета.Добавить(МетаданныеМестаУчета.ПредставлениеОбъекта);
		Иначе
			ПредставленияМестаУчета.Добавить(МетаданныеМестаУчета.Представление());
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрСоединить(ПредставленияМестаУчета, ",");
	
КонецФункции

Функция ОписаниеОбъектаУчетаДляНастройкиФорм() Экспорт
	
	ОписаниеОбъекта = Новый Структура;
	
	ОписаниеОбъекта.Вставить("Группа", "");
	ОписаниеОбъекта.Вставить("Представление", "");
	ОписаниеОбъекта.Вставить("ЗаголовокТаблицыНастройкиСчетов", "");
	ОписаниеОбъекта.Вставить("ОписаниеТиповОбъектНастройки", Новый ОписаниеТипов());
	ОписаниеОбъекта.Вставить("ОтборОбъектовНастройки", Новый Структура);
	ОписаниеОбъекта.Вставить("ОписаниеТиповМестоУчета", Новый ОписаниеТипов());
	
	Возврат ОписаниеОбъекта;
	
КонецФункции

Функция СтатьиАктивовПассивовСНастройками() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбъектыБухгалтерскогоУчета = ОписаниеОбъектовБухгалтерскогоУчета();
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураПоиска = Новый Структура("ИсточникДанных", Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя);
	ПрочиеАктивыИОбязательства = ОбъектыБухгалтерскогоУчета.НайтиСтроки(СтруктураПоиска);
	
	СтатьиАктивовПассивов = Новый Массив();
	
	Для Каждого СтрокаОбъектаУчета Из ПрочиеАктивыИОбязательства Цикл
		ЗаполнитьСтатьиИзНастроекОтбора(СтатьиАктивовПассивов, СтрокаОбъектаУчета.ОтборДанных);
	КонецЦикла;
	
	Возврат СтатьиАктивовПассивов;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	МассивИсключаемыхЗначений = Новый Массив;
	
	ОбъектыБухгалтерскогоУчета = ОписаниеОбъектовБухгалтерскогоУчета();
	Для каждого СтрокаТаблицы Из ОбъектыБухгалтерскогоУчета Цикл
		Если Не ОбъектУчетаДоступенПоФункциональнымОпциям(СтрокаТаблицы) Тогда
			МассивИсключаемыхЗначений.Добавить(СтрокаТаблицы.ОбъектУчета);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияУТ.ДоступныеДляВыбораЗначенияПеречисления(
		ПустаяСсылка().Метаданные().Имя,
		ДанныеВыбора,
		Параметры,
		МассивИсключаемыхЗначений);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ГруппыОбъектовУчета()
	
	ГруппыОбъектовУчета = Новый Структура;
	ГруппыОбъектовУчета.Вставить("ДережныеСредства", НСтр("ru = 'Денежные средства';
															|en = 'Cash'"));
	ГруппыОбъектовУчета.Вставить("Номенклатура", НСтр("ru = 'Номенклатура';
														|en = 'Item'"));
	ГруппыОбъектовУчета.Вставить("ОсновныеСредства", НСтр("ru = 'Основные средства';
															|en = 'Fixed assets'"));
	ГруппыОбъектовУчета.Вставить("НематериальныеАктивы", НСтр("ru = 'Нематериальные активы';
																|en = 'Intangible assets'"));
	ГруппыОбъектовУчета.Вставить("РасчетыСКлиентами", НСтр("ru = 'Расчеты с клиентами';
															|en = 'Customer AR/AP'"));
	ГруппыОбъектовУчета.Вставить("РасчетыСПоставщиками", НСтр("ru = 'Расчеты с поставщиками';
																|en = 'Vendor AR/AP'"));
	ГруппыОбъектовУчета.Вставить("КредитыИЗаймыВыданные", НСтр("ru = 'Депозиты, кредиты и займы выданные';
																|en = 'Deposits, credits and loans issued'"));
	ГруппыОбъектовУчета.Вставить("КредитыИЗаймыПолученные", НСтр("ru = 'Кредиты и займы полученные';
																|en = 'Received credits and loans'"));
	ГруппыОбъектовУчета.Вставить("РасчетыССотрудниками", НСтр("ru = 'Расчеты с сотрудниками';
																|en = 'AR/AP accounting for employees'"));
	ГруппыОбъектовУчета.Вставить("Аренда", НСтр("ru = 'Аренда';
												|en = 'Lease'"));
	ГруппыОбъектовУчета.Вставить("НезавершенноеПроизводство", НСтр("ru = 'Незавершенное производство';
																	|en = 'Work-in-progress'"));
	ГруппыОбъектовУчета.Вставить("ДоходыИРасходы", НСтр("ru = 'Доходы и расходы';
														|en = 'Income and expenses'"));
	ГруппыОбъектовУчета.Вставить("НДС", НСтр("ru = 'НДС';
											|en = 'VAT'"));
	ГруппыОбъектовУчета.Вставить("ПрочиеАктивыИОбязательства", НСтр("ru = 'Прочие активы и обязательства';
																	|en = 'Other assets and liabilities'"));
	
	Возврат ГруппыОбъектовУчета;
	
КонецФункции

#Область ЗаполнениеСвойствОбъектовБухгалтерскогоУчета

Процедура ЗаполнитьОбъектыУчетаДенежныеСредства(ОбъектыБухгалтерскогоУчета)
	
	СтрокаДенежныеСредстваВКассах = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаДенежныеСредстваВКассах.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВКассах;
	СтрокаДенежныеСредстваВКассах.ИсточникДанных = Метаданные.РегистрыНакопления.ДенежныеСредстваНаличные.Имя; 
	
	СтрокаДенежныеСредстваВКассахККМ = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаДенежныеСредстваВКассахККМ.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВКассахККМ;
	СтрокаДенежныеСредстваВКассахККМ.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьРозничныеПродажи.Имя); 
	СтрокаДенежныеСредстваВКассахККМ.ИсточникДанных = Метаданные.РегистрыНакопления.ДенежныеСредстваВКассахККМ.Имя; 
	
	СтрокаДенежныеСредстваНаСчетах = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаДенежныеСредстваНаСчетах.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваНаСчетах;
	СтрокаДенежныеСредстваНаСчетах.ИсточникДанных = Метаданные.РегистрыНакопления.ДенежныеСредстваБезналичные.Имя; 
	
	СтрокаДенежныеСредстваВПути = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаДенежныеСредстваВПути.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ДенежныеСредстваВПути;
	СтрокаДенежныеСредстваВПути.ИсточникДанных = Метаданные.РегистрыНакопления.ДенежныеСредстваВПути.Имя; 
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаНоменклатура(ОбъектыБухгалтерскогоУчета)
	
	СтрокаНоменклатураНаСкладе = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураНаСкладе.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураНаСкладе;
	СтрокаНоменклатураНаСкладе.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя; 
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах);
	СтрокаНоменклатураНаСкладе.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураНаСкладе.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураНаСкладе.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураНаСкладе.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураВПути = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураВПути.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураВПути;
	СтрокаНоменклатураВПути.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя; 
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути);
	СтрокаНоменклатураВПути.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураВПути.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураВПути.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураВПути.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураВЦеховойКладовой = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураВЦеховойКладовой.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураВЦеховойКладовой;
	СтрокаНоменклатураВЦеховойКладовой.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПроизводство.Имя); 
	СтрокаНоменклатураВЦеховойКладовой.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты);
	ОтборДанных.Вставить("АналитикаУчетаНоменклатуры.ТипМестаХранения", Перечисления.ТипыМестХранения.Склад);
	СтрокаНоменклатураВЦеховойКладовой.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураВЦеховойКладовой.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураВЦеховойКладовой.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураВЦеховойКладовой.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураОтгруженная = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураОтгруженная.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураОтгруженная;
	СтрокаНоменклатураОтгруженная.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыВПути);
	СтрокаНоменклатураОтгруженная.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураОтгруженная.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураОтгруженная.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураОтгруженная.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураПереданнаяВПереработку = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураПереданнаяВПереработку.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяВПереработку;
	СтрокаНоменклатураПереданнаяВПереработку.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПроизводствоНаСтороне.Имя); 
	СтрокаНоменклатураПереданнаяВПереработку.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику);
	СтрокаНоменклатураПереданнаяВПереработку.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураПереданнаяВПереработку.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураПереданнаяВПереработку.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураПереданнаяВПереработку.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураПереданнаяНаХранение = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураПереданнаяНаХранение.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяНаХранение;
	СтрокаНоменклатураПереданнаяНаХранение.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи.Имя); 
	СтрокаНоменклатураПереданнаяНаХранение.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам);
	СтрокаНоменклатураПереданнаяНаХранение.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураПереданнаяНаХранение.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураПереданнаяНаХранение.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураПереданнаяНаХранение.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаНоменклатураПереданнаяНаКомиссию = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНоменклатураПереданнаяНаКомиссию.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НоменклатураПереданнаяНаКомиссию;
	СтрокаНоменклатураПереданнаяНаКомиссию.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьКомиссиюПриПродажах.Имя); 
	СтрокаНоменклатураПереданнаяНаКомиссию.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию);
	СтрокаНоменклатураПереданнаяНаКомиссию.ОтборДанных = ОтборДанных;
	СтрокаНоменклатураПереданнаяНаКомиссию.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаНоменклатураПереданнаяНаКомиссию.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаНоменклатураПереданнаяНаКомиссию.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаОсновныеСредства(ОбъектыБухгалтерскогоУчета)
	
	СтрокаСтоимостьОС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаСтоимостьОС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.СтоимостьОС;
	СтрокаСтоимостьОС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя); 
	СтрокаСтоимостьОС.ИсточникДанных = Метаданные.РегистрыНакопления.СтоимостьОС.Имя;
	СтрокаСтоимостьОС.РесурсыУпр.Добавить("Стоимость");
	СтрокаСтоимостьОС.РесурсыРегл.Добавить("СтоимостьРегл");
	СтрокаСтоимостьОС.РесурсыРегл.Добавить("СтоимостьЦФ");
	
	СтрокаАмортизацияОС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАмортизацияОС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АмортизацияОС;
	СтрокаАмортизацияОС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя);
	СтрокаАмортизацияОС.ИсточникДанных = Метаданные.РегистрыНакопления.АмортизацияОС.Имя;
	СтрокаАмортизацияОС.РесурсыРегл.Добавить("АмортизацияРегл");
	СтрокаАмортизацияОС.РесурсыРегл.Добавить("АмортизацияЦФ");
	
	СтрокаРезервПереоценкиСтоимостиОС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРезервПереоценкиСтоимостиОС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РезервПереоценкиСтоимостиОС;
	СтрокаРезервПереоценкиСтоимостиОС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя);
	СтрокаРезервПереоценкиСтоимостиОС.ИсточникДанных = Метаданные.РегистрыНакопления.СтоимостьОС.Имя;
	СтрокаРезервПереоценкиСтоимостиОС.РесурсыУпр.Добавить("ПриростСтоимости");
	СтрокаРезервПереоценкиСтоимостиОС.РесурсыРегл.Добавить("ПриростСтоимостиРегл");
	
	СтрокаОбесценениеОС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбесценениеОС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбесценениеОС;
	СтрокаОбесценениеОС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьОбесценениеВНА.Имя);
	СтрокаОбесценениеОС.ИсточникДанных = Метаданные.РегистрыНакопления.ОбесценениеВНА.Имя;
	ВидыВНА = Новый Массив();
	ВидыВНА.Добавить(Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
	ВидыВНА.Добавить(Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество);
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("ГруппаФинансовогоУчета.ВидАктива", ВидыВНА);
	СтрокаОбесценениеОС.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаНематериальныеАктивы(ОбъектыБухгалтерскогоУчета)
	
	СтрокаСтоимостьНМА = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаСтоимостьНМА.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.СтоимостьНМА;
	СтрокаСтоимостьНМА.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя);
	СтрокаСтоимостьНМА.ИсточникДанных = Метаданные.РегистрыНакопления.СтоимостьНМА.Имя;
	СтрокаСтоимостьНМА.РесурсыУпр.Добавить("Стоимость");
	СтрокаСтоимостьНМА.РесурсыРегл.Добавить("СтоимостьРегл");
	СтрокаСтоимостьНМА.РесурсыРегл.Добавить("СтоимостьЦФ");
	
	СтрокаАмортизацияНМА = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАмортизацияНМА.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АмортизацияНМА;
	СтрокаАмортизацияНМА.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя);
	СтрокаАмортизацияНМА.ИсточникДанных = Метаданные.РегистрыНакопления.АмортизацияНМА.Имя;
	СтрокаАмортизацияНМА.РесурсыРегл.Добавить("АмортизацияРегл");
	СтрокаАмортизацияНМА.РесурсыРегл.Добавить("АмортизацияЦФ");
	
	СтрокаРезеврПереоценкиСтоимостиНМА = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРезеврПереоценкиСтоимостиНМА.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РезервПереоценкиСтоимостиНМА;
	СтрокаРезеврПереоценкиСтоимостиНМА.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьВнеоборотныеАктивы2_4.Имя);
	СтрокаРезеврПереоценкиСтоимостиНМА.ИсточникДанных = Метаданные.РегистрыНакопления.СтоимостьНМА.Имя;
	СтрокаРезеврПереоценкиСтоимостиНМА.РесурсыУпр.Добавить("ПриростСтоимости");
	СтрокаРезеврПереоценкиСтоимостиНМА.РесурсыРегл.Добавить("ПриростСтоимостиРегл");
	
	СтрокаОбесценениеНМА = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбесценениеНМА.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбесценениеНМА;
	СтрокаОбесценениеНМА.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьОбесценениеВНА.Имя);
	СтрокаОбесценениеНМА.ИсточникДанных = Метаданные.РегистрыНакопления.ОбесценениеВНА.Имя;
	ВидыВНА = Новый Массив();
	ВидыВНА.Добавить(Перечисления.ВидыВнеоборотныхАктивов.НМА);
	ВидыВНА.Добавить(Перечисления.ВидыВнеоборотныхАктивов.НИОКР);
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("ГруппаФинансовогоУчета.ВидАктива", ВидыВНА);
	СтрокаОбесценениеНМА.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаРасчетыСКлиентами(ОбъектыБухгалтерскогоУчета)
	
	СтрокаАвансыПолученныеОтКлиентов = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАвансыПолученныеОтКлиентов.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АвансыПолученныеОтКлиентов;
	СтрокаАвансыПолученныеОтКлиентов.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Имя;
	СтрокаАвансыПолученныеОтКлиентов.РесурсыУпр.Добавить("ПредоплатаУпр");
	СтрокаАвансыПолученныеОтКлиентов.РесурсыРегл.Добавить("ПредоплатаРегл");
	СтрокаАвансыПолученныеОтКлиентов.РесурсыВал.Добавить("Предоплата");
	
	СтрокаЗадолженностьКлиентов = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаЗадолженностьКлиентов.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ЗадолженностьКлиентов;
	СтрокаЗадолженностьКлиентов.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Имя;
	СтрокаЗадолженностьКлиентов.РесурсыУпр.Добавить("ДолгУпр");
	СтрокаЗадолженностьКлиентов.РесурсыРегл.Добавить("ДолгРегл");
	СтрокаЗадолженностьКлиентов.РесурсыВал.Добавить("Долг");
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаРасчетыСПоставщиками(ОбъектыБухгалтерскогоУчета)
	
	СтрокаАвансыВыданныеПоставщикам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАвансыВыданныеПоставщикам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АвансыВыданныеПоставщикам;
	СтрокаАвансыВыданныеПоставщикам.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Имя;
	СтрокаАвансыВыданныеПоставщикам.РесурсыУпр.Добавить("ПредоплатаУпр");
	СтрокаАвансыВыданныеПоставщикам.РесурсыРегл.Добавить("ПредоплатаРегл");
	СтрокаАвансыВыданныеПоставщикам.РесурсыВал.Добавить("Предоплата");
	
	СтрокаЗадолженностьПередПоставщиками = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаЗадолженностьПередПоставщиками.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ЗадолженностьПередПоставщиками;
	СтрокаЗадолженностьПередПоставщиками.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Имя;
	СтрокаЗадолженностьПередПоставщиками.РесурсыУпр.Добавить("ДолгУпр");
	СтрокаЗадолженностьПередПоставщиками.РесурсыРегл.Добавить("ДолгРегл");
	СтрокаЗадолженностьПередПоставщиками.РесурсыВал.Добавить("Долг");
	
	СтрокаРасходыДисконтирования = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасходыДисконтирования.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПроцентныеРасходыДисконтирования;
	СтрокаРасходыДисконтирования.ИсточникДанных = Метаданные.РегистрыНакопления.ПроцентныеРасходыДисконтирования.Имя;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаКредитыИЗаймыВыданные(ОбъектыБухгалтерскогоУчета)
	
	ХарактерыДоговоров = Новый Массив();
	ХарактерыДоговоров.Добавить(Перечисления.ХарактерыДоговоровФинансовыхИнструментов.ЗаймВыданный);
	ХарактерыДоговоров.Добавить(Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Депозит);
	
	СтрокаКредитыИЗаймыВыданныеДолг = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыВыданныеДолг.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеДолг;
	СтрокаКредитыИЗаймыВыданныеДолг.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыВыданныеДолг.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", ХарактерыДоговоров);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг);
	СтрокаКредитыИЗаймыВыданныеДолг.ОтборДанных = ОтборДанных;
	
	СтрокаКредитыИЗаймыВыданныеКомиссия = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыВыданныеКомиссия.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеКомиссия;
	СтрокаКредитыИЗаймыВыданныеКомиссия.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыВыданныеКомиссия.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", ХарактерыДоговоров);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Комиссия);
	СтрокаКредитыИЗаймыВыданныеКомиссия.ОтборДанных = ОтборДанных;
	
	СтрокаКредитыИЗаймыВыданныеПроценты = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыВыданныеПроценты.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыВыданныеПроценты;
	СтрокаКредитыИЗаймыВыданныеПроценты.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыВыданныеПроценты.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", ХарактерыДоговоров);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Проценты);
	СтрокаКредитыИЗаймыВыданныеПроценты.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаКредитыИЗаймыПолученные(ОбъектыБухгалтерскогоУчета)
	
	СтрокаКредитыИЗаймыПолученныеДолг = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыПолученныеДолг.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеДолг;
	СтрокаКредитыИЗаймыПолученныеДолг.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыПолученныеДолг.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг);
	СтрокаКредитыИЗаймыПолученныеДолг.ОтборДанных = ОтборДанных;
	
	СтрокаКредитыИЗаймыПолученныеКомиссия = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыПолученныеКомиссия.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеКомиссия;
	СтрокаКредитыИЗаймыПолученныеКомиссия.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыПолученныеКомиссия.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Комиссия);
	СтрокаКредитыИЗаймыПолученныеКомиссия.ОтборДанных = ОтборДанных;
	
	СтрокаКредитыИЗаймыПолученныеПроценты = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаКредитыИЗаймыПолученныеПроценты.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.КредитыИЗаймыПолученныеПроценты;
	СтрокаКредитыИЗаймыПолученныеПроценты.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьДоговорыКредитовИДепозитов.Имя);
	СтрокаКредитыИЗаймыПолученныеПроценты.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Проценты);
	СтрокаКредитыИЗаймыПолученныеПроценты.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаРасчетыССотрудниками(ОбъектыБухгалтерскогоУчета)
	
	СтрокаРасчетыПоЗаработнойПлате = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоЗаработнойПлате.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоЗаработнойПлате;
	СтрокаРасчетыПоЗаработнойПлате.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда);
	СтрокаРасчетыПоЗаработнойПлате.ОтборДанных = ОтборДанных;
	
	СтрокаРасчетыСПодотчетнымиЛицами = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыСПодотчетнымиЛицами.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыСПодотчетнымиЛицами;
	СтрокаРасчетыСПодотчетнымиЛицами.ИсточникДанных = Метаданные.РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц.Имя;
	
	СтрокаРасчетыПоЗаймамСотрудникам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоЗаймамСотрудникам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоЗаймамСотрудникам;
	СтрокаРасчетыПоЗаймамСотрудникам.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные);
	СтрокаРасчетыПоЗаймамСотрудникам.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаАренда(ОбъектыБухгалтерскогоУчета)
	
	СтрокаОбеспечительныйПлатежПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбеспечительныйПлатежПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбеспечительныйПлатежПоАренде;
	СтрокаОбеспечительныйПлатежПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж);
	СтрокаОбеспечительныйПлатежПоАренде.ОтборДанных = ОтборДанных;
	
	СтрокаУслугиПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаУслугиПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.УслугиПоАренде;
	СтрокаУслугиПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.УслугаПоАренде);
	СтрокаУслугиПоАренде.ОтборДанных = ОтборДанных;
	
	СтрокаАрендныеОбязательства = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАрендныеОбязательства.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АрендныеОбязательства;
	СтрокаАрендныеОбязательства.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.АрендныеОбязательства);
	СтрокаАрендныеОбязательства.ОтборДанных = ОтборДанных;
	
	СтрокаВыкупнаяСтоимостьПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаВыкупнаяСтоимостьПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВыкупнаяСтоимостьПоАренде;
	СтрокаВыкупнаяСтоимостьПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.ВыкупнаяСтоимость);
	СтрокаВыкупнаяСтоимостьПоАренде.ОтборДанных = ОтборДанных;
	
	СтрокаАвансВыкупнойСтоимостиПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаАвансВыкупнойСтоимостиПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.АвансВыкупнойСтоимостиПоАренде;
	СтрокаАвансВыкупнойСтоимостиПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.ВыкупнаяСтоимостьАванс);
	СтрокаАвансВыкупнойСтоимостиПоАренде.ОтборДанных = ОтборДанных;
	
	СтрокаПроцентыПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПроцентыПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПроцентыПоАренде;
	СтрокаПроцентыПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.Проценты);
	СтрокаПроцентыПоАренде.ОтборДанных = ОтборДанных;
	
	СтрокаНДСПоАренде = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДСПоАренде.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДСПоАренде;
	СтрокаНДСПоАренде.ИсточникДанных = Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Договор.ХарактерДоговора", Перечисления.ХарактерыДоговоровФинансовыхИнструментов.Аренда);
	ОтборДанных.Вставить("ТипСуммы", Перечисления.ТипыПлатежейПоАренде.НДС);
	СтрокаНДСПоАренде.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаНезавершенноеПроизводство(ОбъектыБухгалтерскогоУчета)
	
	СтрокаМатериалыВНезавершенномПроизводстве = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаМатериалыВНезавершенномПроизводстве.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.МатериалыИРаботыВНезавершенномПроизводстве;
	СтрокаМатериалыВНезавершенномПроизводстве.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПроизводство.Имя);
	СтрокаМатериалыВНезавершенномПроизводстве.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ГруппаОтборов = Новый Массив();
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство);
	ГруппаОтборов.Добавить(ОтборДанных);
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты);
	МестаХранения = Новый Массив();
	МестаХранения.Добавить(Перечисления.ТипыМестХранения.ДоговорКонтрагента);
	МестаХранения.Добавить(Перечисления.ТипыМестХранения.Организация);
	МестаХранения.Добавить(Перечисления.ТипыМестХранения.Партнер);
	МестаХранения.Добавить(Перечисления.ТипыМестХранения.Подразделение);
	ОтборДанных.Вставить("АналитикаУчетаНоменклатуры.ТипМестаХранения", МестаХранения);
	ГруппаОтборов.Добавить(ОтборДанных);
	СтрокаМатериалыВНезавершенномПроизводстве.ОтборДанных = ГруппаОтборов;
	СтрокаМатериалыВНезавершенномПроизводстве.ПутьКДаннымОбъектНастройки = "АналитикаФинансовогоУчета";
	СтрокаМатериалыВНезавершенномПроизводстве.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаМатериалыВНезавершенномПроизводстве.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаТрудозатратыВНезавершенномПроизводстве = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаТрудозатратыВНезавершенномПроизводстве.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ТрудозатратыВНезавершенномПроизводстве;
	СтрокаТрудозатратыВНезавершенномПроизводстве.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПроизводство.Имя);
	СтрокаТрудозатратыВНезавершенномПроизводстве.ИсточникДанных = Метаданные.РегистрыНакопления.ТрудозатратыНезавершенногоПроизводства.Имя;
	
	СтрокаПостатейныеЗатратыВНезавершенномПроизводстве = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПостатейныеЗатратыВНезавершенномПроизводстве.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПостатейныеЗатратыВНезавершенномПроизводстве;
	СтрокаПостатейныеЗатратыВНезавершенномПроизводстве.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПроизводство.Имя);
	СтрокаПостатейныеЗатратыВНезавершенномПроизводстве.ИсточникДанных = Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства.Имя;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаДоходыИРасходы(ОбъектыБухгалтерскогоУчета)
	
	СтрокаВыручкаОтПродаж = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаВыручкаОтПродаж.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВыручкаОтПродаж;
	СтрокаВыручкаОтПродаж.ИсточникДанных = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	СтрокаВыручкаОтПродаж.ПутьКДаннымНаправлениеДеятельности = "НаправлениеДеятельностиКонтрагента";
	СтрокаВыручкаОтПродаж.ПутьКДаннымИдентификаторФинЗаписи = "ВЫБОР
		|		КОГДА ИсточникГФУРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
		|			ТОГДА ИсточникГФУРасчетов.УникальныйИдентификатор
		|		ИНАЧЕ ИдентификаторФинЗаписи
		|	КОНЕЦ";
	СтрокаВыручкаОтПродаж.ПутьКДаннымИдентификаторСтроки = "ИдентификаторФинЗаписи";
	СтрокаВыручкаОтПродаж.РесурсыУпр.Добавить("СуммаВыручки");
	СтрокаВыручкаОтПродаж.РесурсыРегл.Добавить("СуммаВыручкиСНДСРегл");
	СтрокаВыручкаОтПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Имя);
	
	СтрокаСебестоимостьПродаж = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаСебестоимостьПродаж.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.СебестоимостьПродаж;
	СтрокаСебестоимостьПродаж.ИсточникДанных = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("СтоимостьУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("ДопРасходыУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("ТрудозатратыУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("ПостатейныеПостоянныеУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("ПостатейныеПеременныеУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("РасходыНаПродажуУпр");
	СтрокаСебестоимостьПродаж.РесурсыУпр.Добавить("РезервПодОбесценениеУпр");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("СтоимостьРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("ДопРасходыРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("ТрудозатратыРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("ПостатейныеПостоянныеРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("ПостатейныеПеременныеРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("РасходыНаПродажуРегл");
	СтрокаСебестоимостьПродаж.РесурсыРегл.Добавить("РезервПодОбесценениеРегл");
	СтрокаСебестоимостьПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя);
	СтрокаСебестоимостьПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Имя);
	СтрокаСебестоимостьПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя);
	
	СтрокаПрочаяВыручка = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПрочаяВыручка.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПрочаяВыручка;
	СтрокаПрочаяВыручка.ИсточникДанных = Метаданные.РегистрыНакопления.ПрочаяВыручка.Имя;
	СтрокаПрочаяВыручка.ПутьКДаннымИдентификаторФинЗаписи = "ВЫБОР
		|		КОГДА ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
		|			ТОГДА ОбъектРасчетов.УникальныйИдентификатор
		|		ИНАЧЕ ИдентификаторФинЗаписи
		|	КОНЕЦ";
	СтрокаПрочаяВыручка.ПутьКДаннымИдентификаторСтроки = "ИдентификаторФинЗаписи";
	
	СтрокаРасходы = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасходы.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.Расходы;
	СтрокаРасходы.ИсточникДанных = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	СтрокаПрочиеДоходы = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПрочиеДоходы.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПрочиеДоходы;
	СтрокаПрочиеДоходы.ИсточникДанных = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	СтрокаЗакрытиеДоходов = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаЗакрытиеДоходов.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ЗакрытиеДоходовОтПродолжающихсяОпераций;
	СтрокаЗакрытиеДоходов.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки);
	ОтборДанных.Вставить("ДебетКредит", Перечисления.ВидыДвиженийПрочихАктивовПассивов.Кредит);
	СтрокаЗакрытиеДоходов.ОтборДанных = ОтборДанных;
	
	СтрокаЗакрытиеРасходов = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаЗакрытиеРасходов.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ЗакрытиеРасходовОтПродолжающихсяОпераций;
	СтрокаЗакрытиеРасходов.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки);
	ОтборДанных.Вставить("ДебетКредит", Перечисления.ВидыДвиженийПрочихАктивовПассивов.Дебет);
	СтрокаЗакрытиеРасходов.ОтборДанных = ОтборДанных;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаНДС(ОбъектыБухгалтерскогоУчета)
	
	СтрокаВходящийНДС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаВходящийНДС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВходящийНДС;
	СтрокаВходящийНДС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаВходящийНДС.ИсточникДанных = Метаданные.РегистрыНакопления.НДСПредъявленный.Имя;
	
	СтрокаРасчетыПоНДС = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоНДС.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоНДС;
	СтрокаРасчетыПоНДС.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаРасчетыПоНДС.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя;
	
	СтрокаНДССПродаж = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДССПродаж.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДССПродаж;
	СтрокаНДССПродаж.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаНДССПродаж.ИсточникДанных = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	СтрокаНДССПродаж.ПутьКДаннымОбъектНастройки = "АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета";
	СтрокаНДССПродаж.РесурсыУпр.Добавить("СуммаВыручки");
	СтрокаНДССПродаж.РесурсыУпр.Добавить("-СуммаВыручкиБезНДС");
	СтрокаНДССПродаж.РесурсыРегл.Добавить("СуммаВыручкиСНДСРегл");
	СтрокаНДССПродаж.РесурсыРегл.Добавить("-СуммаВыручкиРегл");
	СтрокаНДССПродаж.РесурсыКоличество.Добавить("0");
	СтрокаНДССПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоНДС.Имя);
	СтрокаНДССПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный.Имя);
	СтрокаНДССПродаж.КорИсточникиДанных.Добавить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя);
		
	СтрокаНДСОтгрузокБезПереходаПрава = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДСОтгрузокБезПереходаПрава.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДСПоОтгрузкамБезПереходаПраваСобственности;
	СтрокаНДСОтгрузокБезПереходаПрава.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаНДСОтгрузокБезПереходаПрава.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.НДСПоОтгрузкамБезПереходаПраваСобственности);
	СтрокаНДСОтгрузокБезПереходаПрава.ОтборДанных = ОтборДанных;
	ПутиКДаннымСубконто = Новый Соответствие();
	ПутиКДаннымСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты, "Аналитика");
	СтрокаНДСОтгрузокБезПереходаПрава.ПутиКДаннымСубконто = ПутиКДаннымСубконто;

	СтрокаНДССПрочихДоходов = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДССПрочихДоходов.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДССПрочихДоходов;
	СтрокаНДССПрочихДоходов.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаНДССПрочихДоходов.ИсточникДанных = Метаданные.РегистрыНакопления.ПрочаяВыручка.Имя;
	СтрокаНДССПрочихДоходов.ПутьКДаннымОбъектНастройки = "СтатьяДоходов.ГруппаФинансовогоУчета";
	СтрокаНДССПрочихДоходов.РесурсыУпр.Добавить("НДСУпр");
	СтрокаНДССПрочихДоходов.РесурсыРегл.Добавить("НДСРегл");
	СтрокаНДССПрочихДоходов.РесурсыКоличество.Добавить("0");
	
	СтрокаНДССАвансовПолученных = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДССАвансовПолученных.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДССАвансовПолученных;
	СтрокаНДССАвансовПолученных.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаНДССАвансовПолученных.ИсточникДанных = Метаданные.РегистрыНакопления.НДСАвансыПолученные.Имя;
	
	СтрокаНДССАвансовВыданных = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаНДССАвансовВыданных.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.НДССАвансовВыданных;
	СтрокаНДССАвансовВыданных.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьУчетНДС.Имя);
	СтрокаНДССАвансовВыданных.ИсточникДанных = Метаданные.РегистрыНакопления.НДСАвансыВыданные.Имя;
	
КонецПроцедуры

Процедура ЗаполнитьОбъектыУчетаПрочиеАктивыИОбязательства(ОбъектыБухгалтерскогоУчета)
	
	СтрокаРасчетыПоНалогамИВзносам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоНалогамИВзносам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоНалогамИВзносам;;
	СтрокаРасчетыПоНалогамИВзносам.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	СтрокаРасчетыПоНалогамИВзносам.ПутьКДаннымОбъектНастройки = "Аналитика";
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	СтрокаРасчетыПоНалогамИВзносам.ОтборДанных = ОтборДанных;
	
	СтрокаРезервыОценочныеОбязательства = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРезервыОценочныеОбязательства.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РезервыОценочныеОбязательства;
	СтрокаРезервыОценочныеОбязательства.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ФормироватьРезервыПредстоящихРасходов.Имя);
	СтрокаРезервыОценочныеОбязательства.ИсточникДанных = Метаданные.РегистрыНакопления.РезервыПредстоящихРасходов.Имя;
	
	СтрокаРезервыПоСомнительнымДолгам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРезервыПоСомнительнымДолгам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РезервыПоСомнительнымДолгам;
	СтрокаРезервыПоСомнительнымДолгам.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьРеглУчет.Имя);
	СтрокаРезервыПоСомнительнымДолгам.ИсточникДанных = Метаданные.РегистрыНакопления.РезервыПоСомнительнымДолгам.Имя;
	
	СтрокаРезервыПодОбесценение = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРезервыПодОбесценение.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РезервыПодОбесценение;
	СтрокаРезервыПодОбесценение.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ФормироватьРезервыПодОбесценениеЗапасов.Имя);
	СтрокаРезервыПодОбесценение.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	СтрокаРезервыПодОбесценение.ПутьКДаннымОбъектНастройки = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПолеВыборкиГФУНоменклатуры();
	СтрокаРезервыПодОбесценение.РесурсыУпр.Добавить("РезервПодОбесценениеУпр");
	СтрокаРезервыПодОбесценение.РесурсыРегл.Добавить("РезервПодОбесценениеРегл");
	СтрокаРезервыПодОбесценение.РесурсыКоличество.Добавить("0");
	
	СтрокаВнутрихозяйственныеРасчеты = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаВнутрихозяйственныеРасчеты.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВнутрихозяйственныеРасчеты;
	СтрокаВнутрихозяйственныеРасчеты.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс.Имя);
	СтрокаВнутрихозяйственныеРасчеты.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами);
	СтрокаВнутрихозяйственныеРасчеты.ОтборДанных = ОтборДанных;
	ПутиКДаннымСубконто = Новый Соответствие();
	ПутиКДаннымСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты, "Аналитика");
	СтрокаВнутрихозяйственныеРасчеты.ПутиКДаннымСубконто = ПутиКДаннымСубконто;
	
	СтрокаРасчетыПоВыделенномуИмуществу = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоВыделенномуИмуществу.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВнутрихозяйственныеРасчетыПоВыделенномуИмуществу;
	СтрокаРасчетыПоВыделенномуИмуществу.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс.Имя);
	СтрокаРасчетыПоВыделенномуИмуществу.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("Статья", ПланыВидовХарактеристик.СтатьиАктивовПассивов.РасчетыПоВыделенномуИмуществу);
	СтрокаРасчетыПоВыделенномуИмуществу.ОтборДанных = ОтборДанных;
	ПутиКДаннымСубконто = Новый Соответствие();
	ПутиКДаннымСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты, "Аналитика");
	СтрокаРасчетыПоВыделенномуИмуществу.ПутиКДаннымСубконто = ПутиКДаннымСубконто;
	
	СтрокаОбязательстваПоНеотфактурованнымПоставкам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПоНеотфактурованнымПоставкам;
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьНеотфактурованныеПоставки.Имя);
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.ИсточникДанных = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОтборДанных = Новый Соответствие();
	ОтборДанных.Вставить("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки);
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.ОтборДанных = ОтборДанных;
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.РесурсыУпр = РесурсыОбъектовУчетаНоменклатурыУпр();
	СтрокаОбязательстваПоНеотфактурованнымПоставкам.РесурсыРегл = РесурсыОбъектовУчетаНоменклатурыРегл();
	
	СтрокаОбязательстваПередКомитентомПоРеализованнымТоварам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбязательстваПередКомитентомПоРеализованнымТоварам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередКомитентомПоРеализованнымТоварам;
	СтрокаОбязательстваПередКомитентомПоРеализованнымТоварам.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьКомиссиюПриЗакупках.Имя);
	СтрокаОбязательстваПередКомитентомПоРеализованнымТоварам.ИсточникДанных = Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту.Имя;
	
	СтрокаОбязательстваПередПринципаломПоРеализованнымУслугам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбязательстваПередПринципаломПоРеализованнымУслугам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередПринципаломПоРеализованнымУслугам;
	СтрокаОбязательстваПередПринципаломПоРеализованнымУслугам.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьПродажуАгентскихУслуг.Имя);
	СтрокаОбязательстваПередПринципаломПоРеализованнымУслугам.ИсточникДанных = Метаданные.РегистрыНакопления.УслугиКОформлениюОтчетовПринципалу.Имя;
	
	СтрокаОбязательстваПередКомитентомПоЗакупкам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаОбязательстваПередКомитентомПоЗакупкам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ОбязательстваПередКомитентомПоЗакупкам;
	СтрокаОбязательстваПередКомитентомПоЗакупкам.ФункциональныеОпции.Добавить(Метаданные.ФункциональныеОпции.ИспользоватьОказаниеАгентскихУслугПриЗакупке.Имя);
	СтрокаОбязательстваПередКомитентомПоЗакупкам.ИсточникДанных = Метаданные.РегистрыНакопления.ТоварыУслугиКОформлениюОтчетовКомитентуОЗакупках.Имя;
	
	СтрокаПрочиеАктивыПассивы = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПрочиеАктивыПассивы.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПрочиеАктивыПассивы;
	СтрокаПрочиеАктивыПассивы.ИсточникДанных = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	СтрокаПрочиеАктивыПассивы.ПутьКДаннымОбъектНастройки = "НастройкаСчетовУчета";
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеОбъектыУчета(ОбъектыБухгалтерскогоУчета)
	
	СтрокаВводОстатков = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаВводОстатков.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ВводОстатков;
	
	СтрокаРасчетыСРозничнымиПокупателями = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыСРозничнымиПокупателями.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыСРозничнымиПокупателями;
	
	СтрокаРасчетыПоВзаимозачетам = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаРасчетыПоВзаимозачетам.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.РасчетыПоВзаимозачетамЗадолженности;
	
КонецПроцедуры

Процедура ЗаполнитьУдаляемыеОбъектыУчета(ОбъектыБухгалтерскогоУчета)
	
	СтрокаПодарочныеСертификаты = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПодарочныеСертификаты.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПодарочныеСертификаты;
	СтрокаПодарочныеСертификаты.ИсточникДанных = Метаданные.РегистрыНакопления.ПодарочныеСертификаты.Имя;
	
	СтрокаПереданнаяВозвратнаяТара = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПереданнаяВозвратнаяТара.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПереданнаяВозвратнаяТара;
	СтрокаПереданнаяВозвратнаяТара.ИсточникДанных = Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара.Имя;
	
	СтрокаПринятаяВозвратнаяТара = ОбъектыБухгалтерскогоУчета.Добавить();
	СтрокаПринятаяВозвратнаяТара.ОбъектУчета = Перечисления.ОбъектыБухгалтерскогоУчета.ПринятаяВозвратнаяТара;
	СтрокаПринятаяВозвратнаяТара.ИсточникДанных = Метаданные.РегистрыНакопления.ПринятаяВозвратнаяТара.Имя;
	
КонецПроцедуры

#КонецОбласти

Функция РесурсыОбъектовУчетаНоменклатурыУпр()
	
	РесурсыУпр = Новый Массив();
	РесурсыУпр.Добавить("СтоимостьУпр");
	РесурсыУпр.Добавить("ДопРасходыУпр");
	РесурсыУпр.Добавить("ТрудозатратыУпр");
	РесурсыУпр.Добавить("ПостатейныеПостоянныеУпр");
	РесурсыУпр.Добавить("ПостатейныеПеременныеУпр");
	
	Возврат РесурсыУпр;
	
КонецФункции

Функция РесурсыОбъектовУчетаНоменклатурыРегл()
	
	РесурсыРегл = Новый Массив();
	РесурсыРегл.Добавить("СтоимостьРегл");
	РесурсыРегл.Добавить("ДопРасходыРегл");
	РесурсыРегл.Добавить("ТрудозатратыРегл");
	РесурсыРегл.Добавить("ПостатейныеПостоянныеРегл");
	РесурсыРегл.Добавить("ПостатейныеПеременныеРегл");
	
	Возврат РесурсыРегл;
	
КонецФункции

Процедура ЗаполнитьСтатьиИзНастроекОтбора(СтатьиАктивовПассивов, ОтборДанных)
	
	ТипЗначенияОтбора = ТипЗнч(ОтборДанных);
	
	Если ТипЗначенияОтбора = Тип("Соответствие") Тогда
		Для Каждого ЭлементОтбора Из ОтборДанных Цикл
			ЗаполнитьСтатьиИзНастроекОтбора(СтатьиАктивовПассивов, ЭлементОтбора.Значение);
		КонецЦикла;
	ИначеЕсли ТипЗначенияОтбора = Тип("Массив") Тогда
		Для Каждого ЭлементОтбора Из ОтборДанных Цикл
			ЗаполнитьСтатьиИзНастроекОтбора(СтатьиАктивовПассивов, ЭлементОтбора);
		КонецЦикла;
	ИначеЕсли ТипЗначенияОтбора = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		Если СтатьиАктивовПассивов.Найти(ОтборДанных) = Неопределено Тогда
			СтатьиАктивовПассивов.Добавить(ОтборДанных);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли