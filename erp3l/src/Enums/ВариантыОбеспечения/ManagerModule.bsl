#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтгружатьЕслиДоступно") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Результат = ОбеспечениеВДокументахВызовСервера.ОбработкаПолученияДанныхВыбораВариантаОбеспечения(Параметры);
		
		Упаковка = Параметры.Упаковка;
		Если Не ЗначениеЗаполнено(Упаковка) Тогда
			Если ЗначениеЗаполнено(Результат.ЕдиницаИзмерения) Тогда
				Упаковка = Результат.ЕдиницаИзмерения;
			КонецЕсли;
		КонецЕсли;
		
		ТребуетсяУказаниеСерийВСтроке = Результат.ТребуетсяУказаниеСерийВСтроке;
		ТребуетсяВыборСклада = Параметры.Свойство("НесколькоСкладов")
			И Параметры.НесколькоСкладов
			И (Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
				Или Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"));
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Значение = Новый Структура();
		Значение.Вставить("ВариантОбеспечения");
		Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
		Значение.Вставить("РазбитьСтроку", Ложь);

		Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется");
		ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Не обеспечивать';
											|en = 'Do not supply'"));
		
		Значение = Новый Структура();
		Значение.Вставить("ВариантОбеспечения");
		Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
		Значение.Вставить("РазбитьСтроку", Ложь);
		Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Требуется");
		ДанныеВыбора.Добавить(Значение, НСтр("ru = 'К обеспечению';
											|en = 'To supply'"));
		
		Если Параметры.КоличествоУпаковок > 0 Тогда
			
			Если (Параметры.ВариантОбеспечения <> ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Требуется")
					И Параметры.ВариантОбеспечения <> ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется"))
					Или Не Параметры.ОтгружатьЕслиДоступно
					Или Параметры.КоличествоУпаковок <= Параметры.Доступно
					Или Результат.ДопустимоеОтклонение > 0
						И Параметры.Количество * Результат.КоэффициентУпаковки <= Параметры.Доступно Тогда
				
				Значение = Новый Структура();
				Значение.Вставить("ВариантОбеспечения");
				Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
				Значение.Вставить("РазбитьСтроку", Ложь);
				Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада");
				ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Резервировать на складе (все)';
													|en = 'Reserve at warehouse (all)'"));
				
				Значение = Новый Структура();
				Значение.Вставить("ВариантОбеспечения");
				Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
				Значение.Вставить("РазбитьСтроку", Ложь);
				Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить");
				ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Отгрузить (все)';
													|en = 'Ship (all)'"));
				
				Если ТребуетсяУказаниеСерийВСтроке Или ТребуетсяВыборСклада Тогда
					
					Значение = Новый Структура();
					Значение.Вставить("ВариантОбеспечения");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
					Значение.Вставить("РазбитьСтроку", Ложь);
					Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
					ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Резервировать на складе ...';
														|en = 'Reserve at warehouse ...'"));
					
					Значение = Новый Структура();
					Значение.Вставить("ВариантОбеспечения");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
					Значение.Вставить("РазбитьСтроку", Ложь);
					Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
					ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Отгрузить ...';
														|en = 'Ship ...'"));
					
				КонецЕсли;
				
			Иначе
				
				Если (Не Параметры.Свойство("ИспользоватьЧастичнуюОтгрузку") Или Параметры.ИспользоватьЧастичнуюОтгрузку)
						И Параметры.Доступно > 0 Тогда
					
					Текст = НСтр("ru = 'Резервировать на складе: %1 %2';
								|en = 'Reserve at warehouse: %1 %2'");
					Текст = СтрШаблон(Текст, Формат(Параметры.Доступно, "ЧДЦ=3"), Упаковка);
					
					Значение = Новый Структура();
					Значение.Вставить("ВариантОбеспечения");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
					Значение.Вставить("РазбитьСтроку", Ложь);
					Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада");
					Значение.Вставить("РазбитьСтроку", Истина);
					ДанныеВыбора.Добавить(Значение, Текст);
					
					Текст = НСтр("ru = 'Отгрузить: %1 %2';
								|en = 'Ship: %1 %2'");
					Текст = СтрШаблон(Текст, Формат(Параметры.Доступно, "ЧДЦ=3"), Упаковка);
					
					Значение = Новый Структура();
					Значение.Вставить("ВариантОбеспечения");
					Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
					Значение.Вставить("РазбитьСтроку", Ложь);
					Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить");
					Значение.Вставить("РазбитьСтроку", Истина);
					ДанныеВыбора.Добавить(Значение, Текст);
					
				КонецЕсли;
				
				Если ТребуетсяВыборСклада Тогда
					
						Значение = Новый Структура();
						Значение.Вставить("ВариантОбеспечения");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
						Значение.Вставить("РазбитьСтроку", Ложь);
						Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
						ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Резервировать на складе ...';
															|en = 'Reserve at warehouse ...'"));
						
						Значение = Новый Структура();
						Значение.Вставить("ВариантОбеспечения");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
						Значение.Вставить("РазбитьСтроку", Ложь);
						Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
						ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Отгрузить ...';
															|en = 'Ship ...'"));
						
				ИначеЕсли (Не Параметры.Свойство("ИспользоватьЧастичнуюОтгрузку") Или Параметры.ИспользоватьЧастичнуюОтгрузку)
								И ТребуетсяУказаниеСерийВСтроке И Параметры.Доступно > 0 Тогда
							
						Значение = Новый Структура();
						Значение.Вставить("ВариантОбеспечения");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
						Значение.Вставить("РазбитьСтроку", Ложь);
						Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
						ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Резервировать на складе ...';
															|en = 'Reserve at warehouse ...'"));
						
						Значение = Новый Структура();
						Значение.Вставить("ВариантОбеспечения");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Ложь);
						Значение.Вставить("РазбитьСтроку", Ложь);
						Значение.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить");
						Значение.Вставить("ОткрытьФормуВыбораСкладаИСерий", Истина);
						ДанныеВыбора.Добавить(Значение, НСтр("ru = 'Отгрузить ...';
															|en = 'Ship ...'"));
						
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДопустимыеДействия = Новый Массив();
	
	Если Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
			Или Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара") Тогда
			
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется"));
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Требуется"));
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.СоСклада"));
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить"));
			
	ИначеЕсли Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")
				Или Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")
					И Не Параметры.Обособленно Тогда
			
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется"));
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить"));
			
	ИначеЕсли Параметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
			
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Требуется"));
			ДопустимыеДействия.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Отгрузить"));
			
	КонецЕсли;
	
	НедопустимыеДействия = Новый Массив();
	Если Параметры.Свойство("НедопустимыеДействия") Тогда
		НедопустимыеДействия = Параметры.НедопустимыеДействия;
	КонецЕсли;
	
	КоличествоЭлементов = ДанныеВыбора.Количество();
	Для Счетчик = 1 По КоличествоЭлементов Цикл
		
		ТекущееДействие = ДанныеВыбора[КоличествоЭлементов - Счетчик].Значение.ВариантОбеспечения;
		Если ДопустимыеДействия.Найти(ТекущееДействие) = Неопределено
				Или НедопустимыеДействия.Найти(ТекущееДействие) <> Неопределено Тогда
			
			ДанныеВыбора.Удалить(ДанныеВыбора[КоличествоЭлементов - Счетчик]);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти