#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает Истина если причина нетрудоспособности является уходом за родственниками.
Функция ЭтоУходЗаРодственником(ПричинаНетрудоспособности) Экспорт
	Возврат ПричинаНетрудоспособности = ПоУходуЗаВзрослым
		Или ПричинаНетрудоспособности = ПоУходуЗаРебенком;
КонецФункции

// Возвращает Истина если в случае пересечения с отпуском должен оплачиваться отпуск.
Функция ОтпускВытесняетБольничный(ПричинаНетрудоспособности) Экспорт
	Возврат ПричинаНетрудоспособности = Карантин
		Или ПричинаНетрудоспособности = ПоУходуЗаРебенком
		Или ПричинаНетрудоспособности = ПоУходуЗаВзрослым;
КонецФункции

// Возвращает массив причин нетрудоспособности, вытесняемых отпуском.
Функция ПричиныВытесняемыеОтпуском() Экспорт
	Массив = Новый Массив;
	Массив.Добавить(Карантин);
	Массив.Добавить(ПоУходуЗаРебенком);
	Массив.Добавить(ПоУходуЗаВзрослым);
	Возврат Массив;
КонецФункции

// Возвращает массив причин нетрудоспособности по уходу за родственником.
Функция ПричиныУходаЗаРодственниками() Экспорт
	Причины = Новый Массив;
	Причины.Добавить(ПоУходуЗаРебенком);
	Причины.Добавить(ПоУходуЗаВзрослым);
	Возврат Причины;
КонецФункции

// Возвращает представление причины нетрудоспособности без кода.
Функция ПредставлениеБезКода(ПричинаНетрудоспособности) Экспорт
	ПредставлениеПричины = Строка(ПричинаНетрудоспособности);
	Возврат СокрЛ(Сред(ПредставлениеПричины, СтрНайти(ПредставлениеПричины, ")") + 1));
КонецФункции

// Возвращает категорию начисления по причине нетрудоспособности.
Функция КатегорияОплатыПособия(ПричинаНетрудоспособности) Экспорт
	Если ПричинаНетрудоспособности = ПоБеременностиИРодам Тогда
		Возврат Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам;
	ИначеЕсли ПричинаНетрудоспособности = ТравмаНаПроизводстве Тогда
		Возврат Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве;
	ИначеЕсли ПричинаНетрудоспособности = Профзаболевание Тогда
		Возврат Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание;
	Иначе
		Возврат Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает массив кодов причины нетрудоспособности.
Функция КодыПричины(ПричинаНетрудоспособности) Экспорт
	Если ПричинаНетрудоспособности = ОбщееЗаболевание Тогда
		КодыСтрокой = "01,02,10,11";
	ИначеЕсли ПричинаНетрудоспособности = ПоУходуЗаРебенком Тогда
		КодыСтрокой = "09,12,13,14,15";
	Иначе
		КодыСтрокой = КодПричины(ПричинаНетрудоспособности, Неопределено);
	КонецЕсли;
	Возврат СтрРазделить(КодыСтрокой, ",");
КонецФункции

// Возвращает код причины нетрудоспособности.
Функция КодПричины(ПричинаНетрудоспособности, СлучайУходаЗаБольнымРебенком) Экспорт
	Если ПричинаНетрудоспособности = ОбщееЗаболевание Тогда
		Возврат Неопределено;
	ИначеЕсли ПричинаНетрудоспособности = ПоБеременностиИРодам Тогда
		Возврат "05";
	ИначеЕсли ПричинаНетрудоспособности = ТравмаНаПроизводстве Тогда
		Возврат "04";
	ИначеЕсли ПричинаНетрудоспособности = Профзаболевание Тогда
		Возврат "07";
	ИначеЕсли ПричинаНетрудоспособности = ПоУходуЗаРебенком Тогда
		Возврат Перечисления.СлучаиУходаЗаБольнымиДетьми.КодПричины(СлучайУходаЗаБольнымРебенком);
	ИначеЕсли ПричинаНетрудоспособности = ПоУходуЗаВзрослым Тогда
		Возврат "09";
	ИначеЕсли ПричинаНетрудоспособности = Карантин Тогда
		Возврат "03";
	ИначеЕсли ПричинаНетрудоспособности = Протезирование Тогда
		Возврат "06";
	ИначеЕсли ПричинаНетрудоспособности = ПособиеПриДолечивании Тогда
		Возврат "08";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает таблицу для формирования списка выбора кодов причин нетрудоспособности.
//
// Возвращаемое значение:
//   ТаблицаЗначений
//       * КодПричины - Строка(2)
//       * Представление - Строка
//       * УходЗаРебенком - Булево
//       * Причина - ПеречислениеСсылка.ПричиныНетрудоспособности
//
Функция ТаблицаВыбораКодовПричин() Экспорт
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КодПричины",     ОбщегоНазначения.ОписаниеТипаСтрока(2));
	Результат.Колонки.Добавить("Представление",  Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("УходЗаРебенком", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Причина",        Новый ОписаниеТипов("ПеречислениеСсылка.ПричиныНетрудоспособности"));
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "01";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Заболевание';
										|en = 'Disease'");
	СтрокаТаблицы.Причина        = ОбщееЗаболевание;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "02";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Травма';
										|en = 'Injury'");
	СтрокаТаблицы.Причина        = ОбщееЗаболевание;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "03";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Карантин';
										|en = 'Quarantine'");
	СтрокаТаблицы.Причина        = Карантин;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "04";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Несчастный случай на производстве или его последствия';
										|en = 'Industrial accident and its consequences'");
	СтрокаТаблицы.Причина        = ТравмаНаПроизводстве;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "05";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Отпуск по беременности и родам';
										|en = 'Maternity leave'");
	СтрокаТаблицы.Причина        = ПоБеременностиИРодам;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "06";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Протезирование в стационаре';
										|en = 'Prosthesis at a hospital'");
	СтрокаТаблицы.Причина        = Протезирование;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "07";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Профессиональное заболевание или его обострение';
										|en = 'Occupational disease and its exacerbation'");
	СтрокаТаблицы.Причина        = Профзаболевание;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "08";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Долечивание в санатории';
										|en = 'Follow-up care in health resort'");
	СтрокаТаблицы.Причина        = ПособиеПриДолечивании;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "09";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Уход за больным ребенком';
										|en = 'Sick child care'");
	СтрокаТаблицы.УходЗаРебенком = Истина;
	СтрокаТаблицы.Причина        = ПоУходуЗаРебенком;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "09";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Уход за больным взрослым членом семьи';
										|en = 'Care of sick grown family member'");
	СтрокаТаблицы.Причина        = ПоУходуЗаВзрослым;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "10";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Иное состояние (отравление, проведение манипуляций и др.)';
										|en = 'Other state (poisoning, manipulations, etc.)'");
	СтрокаТаблицы.Причина        = ОбщееЗаболевание;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "11";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Заболевание туберкулезом';
										|en = 'Tuberculosis'");
	СтрокаТаблицы.Причина        = ОбщееЗаболевание;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "12";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Заболевание ребенка, включенное в Перечень Минздравсоцразвития';
										|en = 'Child disease included in the list of diseases defined by the Ministry of Health of the Russian Federation'");
	СтрокаТаблицы.УходЗаРебенком = Истина;
	СтрокаТаблицы.Причина        = ПоУходуЗаРебенком;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "13";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Ребенок-инвалид';
										|en = 'Disabled child'");
	СтрокаТаблицы.УходЗаРебенком = Истина;
	СтрокаТаблицы.Причина        = ПоУходуЗаРебенком;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "14";
	СтрокаТаблицы.Представление  = НСтр("ru = 'Поствакцинальное осложнение или злокачественное новообразование у ребенка';
										|en = 'Child''s postvaccinal complication or malignant tumor  '");
	СтрокаТаблицы.УходЗаРебенком = Истина;
	СтрокаТаблицы.Причина        = ПоУходуЗаРебенком;
	
	СтрокаТаблицы = Результат.Добавить();
	СтрокаТаблицы.КодПричины     = "15";
	СтрокаТаблицы.Представление  = НСтр("ru = 'ВИЧ-инфицированный ребенок';
										|en = 'HIV positive child'");
	СтрокаТаблицы.УходЗаРебенком = Истина;
	СтрокаТаблицы.Причина        = ПоУходуЗаРебенком;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли