
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокументПередЗаполнением();
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Комментарий = "";
	ДокументВДругомУчете = Неопределено;
	
	ИнициализироватьДокументПередЗаполнением();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, "КомпонентыАмортизации");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();
	ПараметрыРеквизитовОбъекта = 
		ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(ЭтотОбъект, ВспомогательныеРеквизиты);
	ОбщегоНазначенияУТ.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов);
	
	ПроверитьКомпонентыАмортизации(МассивНепроверяемыхРеквизитов, Отказ);
	ПроверитьОсновныеСредства(Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если Не Отказ И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВнеоборотныеАктивыСлужебный.ПроверитьВозможностьПринятияКУчетуОС(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ЗаполнитьРеквизитыПередЗаписью();
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, "КомпонентыАмортизации");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

Процедура ИнициализироватьДокументПередЗаполнением()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если НЕ ЗначениеЗаполнено(ГруппаФинансовогоУчета) Тогда
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
	КонецЕсли; 
	
	ОтражатьВУпрУчете = Истина;
	ОтражатьВРеглУчете = Истина;
	
	ВнеоборотныеАктивыКлиентСервер.ПриИзмененииРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(
		ЭтотОбъект, 
		ВспомогательныеРеквизиты(), 
		"Организация,ОтражатьВУпрУчете,ОтражатьВРеглУчете");
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОтбору(Основание)

	Если Основание.Свойство("Дата") Тогда
		Дата = Основание.Дата;
	КонецЕсли;
	Если Основание.Свойство("Организация") Тогда
		Организация = Основание.Организация;
	КонецЕсли;

	Если Основание.Свойство("ОсновноеСредство") Тогда
		ЗаполнитьНаОснованииОбъектаЭксплуатации(Основание.ОсновноеСредство);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииОбъектаЭксплуатации(ОсновноеСредство)
	
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоСписокОС = (ТипЗнч(ОсновноеСредство) = Тип("Массив"));
	
	Если НЕ ЭтоСписокОС Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОсновноеСредство, "ЭтоГруппа");
		
		Если РеквизитыОснования.ЭтоГруппа Тогда
			
			ТекстСообщения = НСтр("ru = 'Принятие к учету узлов и компонентов амортизации на основании группы ОС невозможен.
				|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз.';
				|en = 'Cannot recognize sub-assets and components of depreciation based on fixed assets group.
				|Select fixed assets. To expand the group, press Ctrl+Down.'");
			ВызватьИсключение(ТекстСообщения);
			
		КонецЕсли;
		
		СтрокаТабличнойЧасти = КомпонентыАмортизации.Добавить();
		ТипОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновноеСредство, "ТипОС");
		
		Если ТипОС = Перечисления.ТипыОС.Узел
			ИЛИ ТипОС = Перечисления.ТипыОС.КомпонентАмортизации Тогда
			СтрокаТабличнойЧасти.КомпонентАмортизации = ОсновноеСредство;
		Иначе
			СтрокаТабличнойЧасти.ОсновноеСредство = ОсновноеСредство;
		КонецЕсли;
		
	Иначе
		Для Каждого ЭлементМассива Из ОсновноеСредство Цикл
			СтрокаТабличнойЧасти = КомпонентыАмортизации.Добавить();
			СтрокаТабличнойЧасти.ОсновноеСредство = ЭлементМассива;
		КонецЦикла;
	КонецЕсли;
	
	Документы.ПринятиеКУчетуУзловКомпонентовАмортизации.ЗаполнитьСтоимость(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполнения

Процедура ПроверитьКомпонентыАмортизации(МассивНепроверяемыхРеквизитов, Отказ)

	ВедетсяРегламентированныйУчетВНА = ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА();
	
	ВнеоборотныеАктивы.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "КомпонентыАмортизации", "КомпонентАмортизации", Отказ);
	
	Если ВедетсяРегламентированныйУчетВНА Тогда
		ШаблонСообщенияЛиквидационнаяСтоимость = НСтр("ru = 'Ликвидационная стоимость в строке %1 должна быть меньше стоимости по упр. учету';
														|en = 'Residual value in line %1 must be less than the cost in man. accounting'");
	Иначе
		ШаблонСообщенияЛиквидационнаяСтоимость = НСтр("ru = 'Ликвидационная стоимость в строке %1 должна быть меньше стоимости в валюте упр. учета';
														|en = 'Residual value in line %1 must be less than the cost in the currency of man. accounting'");
	КонецЕсли; 
	
	ПроверятьСтоимостьБУ = (МассивНепроверяемыхРеквизитов.Найти("КомпонентыАмортизации.СтоимостьБУ") = Неопределено);
	ПроверятьСтоимостьУУ = (МассивНепроверяемыхРеквизитов.Найти("КомпонентыАмортизации.СтоимостьУУ") = Неопределено);
	
	ПредставлениеРеквизитов = Документы.ПринятиеКУчетуУзловКомпонентовАмортизации.ПредставлениеРеквизитов(Организация);
	
	ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""Основные средства""';
							|en = 'Column ""%1"" in line %2 of the ""Fixed assets"" list is not filled in'");
	
	Для каждого ДанныеСтроки Из КомпонентыАмортизации Цикл
		
		НомерСтроки = Формат(ДанныеСтроки.НомерСтроки, "ЧГ=");
		
		Если ПроверятьСтоимостьБУ
			И ДанныеСтроки.СтоимостьБУ = 0 Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеРеквизитов.Получить("КомпонентыАмортизации.СтоимостьБУ"), НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КомпонентыАмортизации", ДанныеСтроки.НомерСтроки, "СтоимостьБУ");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "", Отказ);
		КонецЕсли;
		
		Если ПроверятьСтоимостьУУ
			И ДанныеСтроки.СтоимостьУУ = 0 Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеРеквизитов.Получить("КомпонентыАмортизации.СтоимостьУУ"), НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КомпонентыАмортизации", ДанныеСтроки.НомерСтроки, "СтоимостьУУ");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "", Отказ);
		КонецЕсли;
		
		Если ДанныеСтроки.ЛиквидационнаяСтоимость >= ДанныеСтроки.СтоимостьУУ 
			И ДанныеСтроки.СтоимостьУУ <> 0
			И ОтражатьВУпрУчете Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщенияЛиквидационнаяСтоимость, НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КомпонентыАмортизации", ДанныеСтроки.НомерСтроки, "ЛиквидационнаяСтоимость");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "", Отказ);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	МассивНепроверяемыхРеквизитов.Добавить("КомпонентыАмортизации.СтоимостьБУ");
	МассивНепроверяемыхРеквизитов.Добавить("КомпонентыАмортизации.СтоимостьУУ");
	
КонецПроцедуры

Процедура ПроверитьОсновныеСредства(Отказ)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъектыЭксплуатации.Ссылка КАК ОсновноеСредство,
		|	МестонахождениеОС.Организация КАК Организация
		|ПОМЕСТИТЬ МестонахождениеОС
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ОсновноеСредство В (&МассивОС)) КАК
		|			МестонахождениеОС
		|		ПО ОбъектыЭксплуатации.Ссылка = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка В (&МассивОС)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(МестонахождениеОС.ОсновноеСредство) КАК ОсновноеСредство,
		|	ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК Состояние
		|ИЗ
		|	МестонахождениеОС КАК МестонахождениеОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&Период, (ОсновноеСредство, Организация) В
		|			(ВЫБРАТЬ
		|				МестонахождениеОС.ОсновноеСредство,
		|				МестонахождениеОС.Организация
		|			ИЗ
		|				МестонахождениеОС КАК МестонахождениеОС)) КАК ПорядокУчетаОСУУ
		|		ПО МестонахождениеОС.ОсновноеСредство = ПорядокУчетаОСУУ.ОсновноеСредство
		|		И МестонахождениеОС.Организация = ПорядокУчетаОСУУ.Организация";
	
	Запрос.УстановитьПараметр("МассивОС", КомпонентыАмортизации.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Период",   Дата - 1); // Для корректного закрития месяца необходимо, чтобы ОС-владельцы были заведены раньше узлов и компонентов амортизации
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние = Перечисления.СостоянияОС.НеПринятоКУчету Тогда
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Основное средство ""%1"" не принято к учету в управленческом учете.';
																|en = 'The ""%1"" fixed asset is not recognized in management accounting.'"),
				Выборка.ОсновноеСредство),,,, Отказ);
			
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияОС.СнятоСУчета Тогда
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Основное средство ""%1"" снято с учета в управленческом учете.';
																|en = 'The ""%1"" fixed asset is derecognized in management accounting.'"),
				Выборка.ОсновноеСредство),,,, Отказ);
			
		КонецЕсли; 
	КонецЦикла;
	
	Если ОтражатьВРеглУчете Тогда
		ПринятиеКУчетуУзловКомпонентовАмортизацииЛокализация.ПроверитьОсновныеСредства(Запрос, Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗаполнитьРеквизитыПередЗаписью()

	ОчиститьНеиспользуемыеРеквизиты();
	
	Если ОтражатьВУпрУчете И ОтражатьВРеглУчете Тогда
		ДокументВДругомУчете = Неопределено;
	КонецЕсли;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	
	Для каждого ДанныеСтроки Из КомпонентыАмортизации Цикл
		
		Если НЕ ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА()
			И ВалютаУпр = ВалютаРегл Тогда
		
			ДанныеСтроки.СтоимостьУУ = ДанныеСтроки.СтоимостьБУ;
		
		КонецЕсли; 
	
		Если ВалютаУпр = ВалютаРегл Тогда
			ДанныеСтроки.ЛиквидационнаяСтоимость = ДанныеСтроки.ЛиквидационнаяСтоимостьРегл;
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизиты()
	
	ВспомогательныеРеквизиты = ВспомогательныеРеквизиты();
	
	ПараметрыРеквизитовОбъекта = ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуУзловКомпонентовАмортизации(
					ЭтотОбъект, ВспомогательныеРеквизиты);
					
	ОбщегоНазначенияУТКлиентСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ПараметрыРеквизитовОбъекта, "КомпонентыАмортизации");

КонецПроцедуры

Функция ВспомогательныеРеквизиты()
	
	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", РеглУчетСервер.ВедетсяРеглУчет(Дата));
	ВспомогательныеРеквизиты.Вставить("ИспользоватьОбъектыСтроительства", ПолучитьФункциональнуюОпцию("ИспользоватьОбъектыСтроительства"));
	ВспомогательныеРеквизиты.Вставить("ОтражатьВРеглУчете", ОтражатьВРеглУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУпрУчете", ОтражатьВУпрУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУ", ОтражатьВРеглУчете);
	ВспомогательныеРеквизиты.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	ВспомогательныеРеквизиты.Вставить("ВалютыСовпадают", ВалютаУпр = ВалютаРегл);
	
	ВспомогательныеРеквизиты.Вставить(
		"ЕстьУчетСебестоимости", 
		РасчетСебестоимостиПовтИсп.ФормироватьДвиженияПоРегистрамСебестоимости(Дата, Ложь));
	
	Возврат ВспомогательныеРеквизиты;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
