#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Ответственный = Пользователи.ТекущийПользователь();
	Статус = Перечисления.СтатусыЗаявокСотрудников.Подготовлена;
	#Область УХ_Встраивание
	ВстраиваниеУХЗаявкаНаКомандировку.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	#КонецОбласти 

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если СписокФизЛиц Тогда
		НепроверяемыеРеквизиты.Добавить("Сотрудник");
		НепроверяемыеРеквизиты.Добавить("ЛицевойСчет");
	Иначе
		НепроверяемыеРеквизиты.Добавить("ВыдачаПодОтчет.Сотрудник");
		НепроверяемыеРеквизиты.Добавить("ВыдачаПодОтчет.ЛицевойСчет");
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыЗаявокСотрудников.Подготовлена
		Или Статус = Перечисления.СтатусыЗаявокСотрудников.Отклонена
		Или Статус = Перечисления.СтатусыЗаявокСотрудников.Отозвана Тогда
		
		НепроверяемыеРеквизиты.Добавить("ВыдачаПодОтчет.СтатьяДвиженияДенежныхСредств");
		#Область УХ_Встраивание
		НепроверяемыеРеквизиты.Добавить("ЦФО");
		#КонецОбласти

	КонецЕсли;
	
	Если Не ВыдачаПодОтчет.Количество() Тогда
		НепроверяемыеРеквизиты.Добавить("ЖелательнаяДатаПлатежа");
	КонецЕсли;
	
	Если ФормаОплатыЗаявки <> Перечисления.ФормыОплаты.Безналичная Тогда
		НепроверяемыеРеквизиты.Добавить("БанковскийСчет");
		НепроверяемыеРеквизиты.Добавить("ЛицевойСчет");
		НепроверяемыеРеквизиты.Добавить("ВыдачаПодОтчет.ЛицевойСчет");
	КонецЕсли;
	
	Если ФормаОплатыЗаявки <> Перечисления.ФормыОплаты.Наличная Тогда
		НепроверяемыеРеквизиты.Добавить("Касса");
	КонецЕсли;
	
	Дополнительно = Новый Структура;
	НастройкиПолей = ДенежныеСредстваСервер.ИнициализироватьНастройкиПолейФормы();
	Документы.ЗаявкаНаКомандировку.ЗаполнитьНастройкиПолейФормы(НастройкиПолей);
	СвойстваЭлементов = ДенежныеСредстваКлиентСервер.СвойстваЭлементовФормы(ЭтотОбъект, НастройкиПолей,,, Дополнительно);
	ДенежныеСредстваСервер.ОтключитьПроверкуЗаполненияРеквизитовОбъекта(СвойстваЭлементов, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	#Область УХ_Встраивание
	ВстраиваниеУХЗаявкаНаКомандировку.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	#КонецОбласти

	Если Статус = Перечисления.СтатусыЗаявокСотрудников.Согласована
		И Не ПраваПользователяПовтИсп.СогласованиеЗаявокНаКомандировку() Тогда
		
		ТекстОшибки = НСтр("ru = 'Нет права согласования заявок на командировки';
							|en = 'No right to approve applications for business trips'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
	КонецЕсли;
	
	ПроверитьНаличиеОплатыЗаявки(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	СписокСотрудниковСтрокой = "";
	
	Если Не СписокФизЛиц Тогда
		КомандируемыеСотрудники.Очистить();
		КомандируемыеСотрудники.Добавить().Сотрудник = Сотрудник;
		Для каждого СтрокаТЧ Из ВыдачаПодОтчет Цикл
			СтрокаТЧ.Сотрудник = Сотрудник;
			СтрокаТЧ.ЛицевойСчет = ЛицевойСчет;
		КонецЦикла;
	Иначе
		Сотрудник = Неопределено;
		ЛицевойСчет = Неопределено;
		РеквизитыСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
			КомандируемыеСотрудники.ВыгрузитьКолонку("Сотрудник"), "Наименование");
		СотрудникиСтрокой = Новый Массив;
		Для каждого КлючИЗначение Из РеквизитыСотрудников Цикл
			СотрудникиСтрокой.Добавить(КлючИЗначение.Значение);
		КонецЦикла;
		СписокСотрудниковСтрокой = СтрСоединить(СотрудникиСтрокой, "; ");
	КонецЕсли;
	
	МассивСтатейДДС = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(
		ВыдачаПодОтчет.ВыгрузитьКолонку("СтатьяДвиженияДенежныхСредств"));
	Если МассивСтатейДДС.Количество() = 1 Тогда
		СтатьяДвиженияДенежныхСредств = МассивСтатейДДС[0];
	ИначеЕсли МассивСтатейДДС.Количество() > 1 Тогда
		СтатьяДвиженияДенежныхСредств = Неопределено;
	КонецЕсли;
	
	СуммаДокумента = ВыдачаПодОтчет.Итог("Сумма");
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	#Область УХ_Встраивание
	ВстраиваниеУХЗаявкаНаКомандировку.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	#КонецОбласти

	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	#Область УХ_Встраивание
	ПроведениеСерверОПК.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ЗаявкиНаОперации.ИнициализироватьДанныеЗаявки(ЭтотОбъект, ДополнительныеСвойства);
	
	КонтрольЛимитовУХ.ВыполнитьПроверкуНаличияПериодов(Ссылка, ДополнительныеСвойства, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по регистру ОперативныйПланПоБюджетам
	КонтрольЛимитовУХ.ОтразитьОперативныйПланПоБюджету(ДополнительныеСвойства, Движения, Отказ);
	КонтрольЛимитовУХ.ОтразитьЛимитыПоБюджетам(ДополнительныеСвойства, Движения, Отказ);
	
	Если Движения.Найти("ЛимитыПоБюджетам") <> неопределено Тогда
		ДополнительныеСвойства.ДляПроведения.Вставить(
			"РегистрыДляКонтроля", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Движения.ЛимитыПоБюджетам));
	КонецЕсли;
	
	ПроведениеСерверОПК.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверОПК.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСерверОПК.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	ВстраиваниеОПКПереопределяемый.ОтправитьНаСогласованиеПриПроведенииДокумента(ЭтотОбъект, Отказ);
	ВстраиваниеОПКПереопределяемый.ОбновитьПоказателиПроектовПриПроведенииДокумента(ЭтотОбъект);
	
	#КонецОбласти
	

	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	#Область УХ_Встраивание
	ВстраиваниеУХЗаявкаНаКомандировку.ПриЗаписи(ЭтотОбъект, Отказ);
	#КонецОбласти

	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	
КонецПроцедуры

Функция УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаявокСотрудников[НовыйСтатус];
	
	Если ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаявокСотрудников.Согласована Тогда
		КтоРешил = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Статус = ЗначениеНовогоСтатуса;
	
	Возврат ПроверитьЗаполнение();
	
КонецФункции

Процедура ПроверитьНаличиеОплатыЗаявки(Отказ)
	
	Если Не ЭтоНовый() И Статус <> Перечисления.СтатусыЗаявокСотрудников.Согласована Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДенежныеСредства.СуммаРасход КАК Оплачено
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКВыплате.Обороты(,,Период,
		|		ЗаявкаНаРасходованиеДенежныхСредств = &Заявка
		|	) КАК ДенежныеСредства
		|ГДЕ
		|	ДенежныеСредства.СуммаРасход > 0
		|");
		Запрос.УстановитьПараметр("Заявка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Текст = НСтр("ru = 'Заявка оплачена. Нельзя изменять статус заявки ""Согласована""';
						|en = 'Request is paid up. Cannot change ""Approved"" request status'");
			ОбщегоНазначения.СообщитьПользователю(Текст, ЭтотОбъект, "Статус",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли