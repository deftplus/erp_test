
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СуммыДокументовВВалютахУчета");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	
	ЗаключениеДоговораАрендыЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
	#Область УХ_Встраивание
	МеханизмыДокумента.Добавить("ГрафикиРасчетовУХ");
	#КонецОбласти
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		
		ЗаключениеДоговораАрендыЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	    #Область УХ_Встраивание
		ВстраиваниеУХДоговорыАренды.ТекстЗапросаВерсииРасчетов(ТекстыЗапроса, Регистры);
		ВстраиваниеУХДоговорыАренды.ТекстЗапросаТаблицаРасчетыСКонтрагентамиГрафики(ТекстыЗапроса, Регистры, "ЗаключениеДоговораАренды");
		#КонецОбласти
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область УчетНДС

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект		- ДокументОбъект.ЗаключениеДоговораАренды, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "НаправлениеДеятельности,Балансодержатель");
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = РеквизитыДоговора.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПриобретениеНаСтатьи = Истина;
	ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе =
		(РеквизитыДоговора.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендатор);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект		- ДокументОбъект.ЗаключениеДоговораАренды, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки().
//
Функция ПараметрыЗаполненияНалогообложенияНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки();
	ПараметрыЗаполнения.Контрагент = Объект.Контрагент;
	ПараметрыЗаполнения.Договор = Объект.Договор;
	
	ПараметрыЗаполнения.УслугаПоАренде = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения налогообложения НДС закупки
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки().
//
Функция ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "ОС";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Инициализирует параметры проверки заполнения документа по виду деятельности НДС
//
// Параметры:
//  Объект		- ДокументОбъект.ПоступлениеУслугПоАренде, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС().
//
Функция ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыЗаполнения.ИмяТабличнойЧасти = "ОС";
	ПараметрыЗаполнения.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыЗаполнения.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ПринятиеКУчетуОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, 2);
	
	ЗаключениеДоговораАрендыЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);
	
КонецПроцедуры

// Добавляет команду создания документа "Заключение договора аренды".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Порядок	- Число	- Порядок команды.
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаключениеДоговораАренды) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаключениеДоговораАренды.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаключениеДоговораАренды);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4"; 
		//++ Локализация
		КомандаСоздатьНаОсновании.ФункциональныеОпции = 
			КомандаСоздатьНаОсновании.ФункциональныеОпции 
			+ ",ИспользоватьВнеоборотныеАктивы2_2"; 
		//-- Локализация
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
		
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Определяет стоимость предметов аренды в налоговом учете
//
// Параметры:
//  СписокОС	 - Массив						 - ОС, для которых требуется получить стоимость.
//  Организация	 - СправочникСсылка.Организации	 - Организация в которой ОС принимаются к учету.
//  Дата		 - Дата							 - Дата принятия к учету.
//
// Возвращаемое значение:
//  Соответствие - Ключ - ОС, Значение - Стоимость.
//
Функция СтоимостьПредметовАренды(СписокОС, Организация, Дата) Экспорт

	СтоимостьОС = Новый Соответствие;
	Для каждого ОсновноеСредство Из СписокОС Цикл
		СтоимостьОС.Вставить(ОсновноеСредство, 0);
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АрендованныеОС.Стоимость КАК Стоимость
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Дата, 
	|			ОсновноеСредство В(&СписокОС)
	|			И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды)) КАК АрендованныеОС";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", КонецДня(?(Дата <> '000101010000', Дата, ТекущаяДатаСеанса())));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтоимостьОС.Вставить(Выборка.ОсновноеСредство, Выборка.Стоимость);
	КонецЦикла;

	Возврат СтоимостьОС;
	
КонецФункции

// Возвращает параметры механизма взаиморасчетов.
//
// Параметры:
// 	ДанныеЗаполнения - ДокументОбъект, СправочникОбъект, Структура, ДанныеФормыСтруктура - Объект или коллекция для
//              расчета параметров взаиморасчетов.
//
// Возвращаемое значение:
// 	Структура - Структура параметров функций механизма взаиморасчетов (См. ВзаиморасчетыСервер.ПараметрыМеханизма)
//
Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения = Неопределено) Экспорт
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Договор = Неопределено;
	Иначе
		Договор = ДанныеЗаполнения.Договор;
	КонецЕсли;
	
	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();
	
	СтруктураПараметров.ЭтоПродажаЗакупка                = Истина;
	СтруктураПараметров.ИзменяетПланОплаты               = Ложь;
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Ложь;

	#Область НеобязательныеПараметры
	
	//Отличные от валюты и суммы документа реквизиты. Если не заполнен, то для чтения будет взята валюта документа.
	СтруктураПараметров.ВалютаВзаиморасчетов             = "Объект.ВалютаВзаиморасчетов";
	СтруктураПараметров.СуммаВзаиморасчетов              = "Объект.СуммаВзаиморасчетов";
	СтруктураПараметров.НаправлениеДеятельности          = "";
	СтруктураПараметров.ПорядокРасчетов                  = "";
	СтруктураПараметров.ПутьКДаннымТЧ                    = "Объект.ОС";
	СтруктураПараметров.Соглашение                       = "";
	СтруктураПараметров.БанковскийСчетОрганизации        = "";
	СтруктураПараметров.БанковскийСчетКонтрагента        = "";
	СтруктураПараметров.Касса                            = "";
	СтруктураПараметров.ФормаОплаты                      = "";
	СтруктураПараметров.ОплатаВВалюте                    = "";
	СтруктураПараметров.ИдентификаторПлатежа             = "";
	СтруктураПараметров.Договор                          = "";
	
	//Реквизиты для объекта расчетов, используются в проведении.
	СтруктураПараметров.ГруппаФинансовогоУчета           = "";
	СтруктураПараметров.Подразделение                    = "";
	СтруктураПараметров.КурсЧислитель                    = "Объект.КурсЧислитель";
	СтруктураПараметров.КурсЗнаменатель                  = "Объект.КурсЗнаменатель";
	
	СтруктураПараметров.ЭлементыФормы.НадписьВалюты = "ДекорацияВалюты";
	СтруктураПараметров.ВалютыИКурсДокументаТолькоПросмотр = Ложь;
	Если Договор <> Неопределено Тогда
		Балансодержатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "Балансодержатель");
		СтруктураПараметров.ВалютаДокументаТолькоПросмотр = (Балансодержатель = ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендодатель"));
	КонецЕсли;
	СтруктураПараметров.ВалютаВзаиморасчетовТолькоПросмотр = Истина;
	
	#КонецОбласти
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Возвращает массив допустимых наименований входящих документов.
// 
// Возвращаемое значение:
// 	Массив - массив наименований.
Функция НаименованияВходящихДокументов() Экспорт
	МассивНаименований = Новый Массив();
	МассивНаименований.Добавить(НСтр("ru = 'Договор аренды';
									|en = 'Lease contract'"));
	МассивНаименований.Добавить(НСтр("ru = 'Договор лизинга';
									|en = 'Lease contract'"));
	Возврат МассивНаименований
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.Партнер                        КАК Партнер,
	|	ДанныеДокумента.Контрагент                     КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО ДанныеДокумента.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|			И ДанныеДокумента.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|			И ДанныеДокумента.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Договор
	|			И ДанныеДокумента.Договор.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL";
	
	ЗапросАналитик = Новый Запрос(ТекстЗапроса);
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	РезультатЗапроса = ЗапросАналитик.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ЗаключениеДоговораАренды";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("Балансодержатель",
		"ДанныеДокумента.Договор.Балансодержатель");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "АрендованныеОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса, Регистры = Неопределено) Экспорт
	
	ТекстЗапросаДанных =
	"ВЫБРАТЬ
	|	""ОС"" КАК ИсточникДанных,
	|	ЛОЖЬ КАК РаспределятьОбщуюСумму,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Валюта КАК ВалютаДокумента,
	|	ТаблицаДокумента.Ссылка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаДокумента.Ссылка.Дата КАК ПериодБазыНДС,
	|
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаБУ КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБУ КАК СуммаВзаиморасчетов,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДСВзаиморасчетов,
	|
	|	ЛОЖЬ КАК ОтражаетсяВРасчетах,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	ЛОЖЬ КАК ПересчитыватьПоДаннымРасчетов
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|";
	
	РегистрыСведений.СуммыДокументовВВалютахУчета.СформироватьПоДаннымДокумента(
		Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанных);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                     КАК Ссылка,
	|	ДанныеДокумента.Дата                                       КАК Период,
	|	ДанныеДокумента.Номер                                      КАК Номер,
	|	ДанныеДокумента.Организация                                КАК Организация,
	|	ДанныеДокумента.Подразделение                              КАК Подразделение,
	|	ДанныеДокумента.Партнер                                    КАК Партнер,
	|	ДанныеДокумента.Контрагент                                 КАК Контрагент,
	|	ДанныеДокумента.Договор                                    КАК Договор,
	|	ДанныеДокумента.Договор.ТипДоговора                        КАК ТипДоговора,
	|	ДанныеДокумента.Договор.Балансодержатель                   КАК Балансодержатель,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.УчитыватьПредметыАрендыВРеглУчете, ЛОЖЬ) КАК УчитыватьПредметыАрендыВРеглУчете,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.УчитыватьПредметыАрендыВУпрУчете, ЛОЖЬ) КАК УчитыватьПредметыАрендыВУпрУчете,
	|	ДанныеДокумента.СчетУчета                                  КАК СчетУчета,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                     КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.ВалютаВзаиморасчетов                       КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВзаиморасчетов                        КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента                             КАК СуммаДокумента,
	|	ДанныеДокумента.Валюта                                     КАК Валюта,
	|	ДанныеДокумента.Ответственный                              КАК Ответственный,
	|	ДанныеДокумента.Комментарий                                КАК Комментарий,
	|	ДанныеДокумента.Проведен                                   КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                            КАК ПометкаУдаления,
	|	ДанныеДокумента.НомерВходящегоДокумента                    КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента                     КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.НаименованиеВходящегоДокумента             КАК НаименованиеВходящегоДокумента,
	|	ДанныеДокумента.Сумма                                      КАК Сумма,
	|	ДанныеДокумента.СуммаОбеспечительногоПлатежа               КАК СуммаОбеспечительногоПлатежа,
	|	ДанныеДокумента.СуммаУслугПоАренде                         КАК СуммаУслугПоАренде,
	|	ДанныеДокумента.СуммаВыкупаПредметовАренды                 КАК СуммаВыкупаПредметовАренды,
	|	ДанныеДокумента.СуммаНДСВыкупаПредметовАренды              КАК СуммаНДСВыкупаПредметовАренды,
	|	ДанныеДокумента.СуммаПроцентов                             КАК СуммаПроцентов,
	|	ДанныеДокумента.СуммаСНДС                                  КАК СуммаСНДС,
	|	ДанныеДокумента.СуммаНДС                                   КАК СуммаНДС,
	|	ДанныеДокумента.СтавкаНДС                                  КАК СтавкаНДС,
	|	ЕСТЬNULL(ДанныеДокумента.СтавкаНДС.Ставка, 0)              КАК ЗначениеСтавкиНДС,
	|	ДанныеДокумента.СрокЛет                                    КАК СрокЛет,
	|	ДанныеДокумента.СрокМес                                    КАК СрокМес,
	|	ДанныеДокумента.СрокДней                                   КАК СрокДней,
	|	ДанныеДокумента.ДатаНачалаАренды                           КАК ДатаНачалаАренды,
	|	ДанныеДокумента.ДатаПервогоПлатежа                         КАК ДатаПервогоПлатежа,
	|	ДанныеДокумента.ДатаПервогоОбеспечительногоПлатежа         КАК ДатаПервогоОбеспечительногоПлатежа,
	|	ДанныеДокумента.ДатаВыкупа                                 КАК ДатаВыкупа,
	|	ДанныеДокумента.ПроцентнаяСтавка                           КАК ПроцентнаяСтавка,
	|	ДанныеДокумента.ПериодичностьОплат                         КАК ПериодичностьОплат,
	|	ДанныеДокумента.ПериодичностьНачислений                    КАК ПериодичностьНачислений,
	|	ДанныеДокумента.СтоимостьПредметовАренды                   КАК СтоимостьПредметовАренды,
	|	ДанныеДокумента.ОплатаУслугиПоАренде                       КАК ОплатаУслугиПоАренде,
	|	ДанныеДокумента.НачислениеУслугиПоАренде                   КАК НачислениеУслугиПоАренде,
	|	ДанныеДокумента.СтатьяРасходов                             КАК СтатьяРасходов,
	|	//++УХ_Встраивание
	|	ЕСТЬNULL(ДанныеДокумента.Договор.ОсновнойЦФО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ЦФО,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.ОсновнойПроект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчет, ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)) КАК БанковскийСчет,
	|	ЕСТЬNULL(ДанныеДокумента.Договор.БанковскийСчетКонтрагента, ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)) КАК БанковскийСчетКонтрагента,
	|	//--УХ_Встраивание
	|	ДанныеДокумента.АналитикаРасходов                          КАК АналитикаРасходов,
	|	ДанныеДокумента.СтатьяДоходов                              КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов                           КАК АналитикаДоходов,
	|	ДанныеДокумента.ЗакупкаПодДеятельность                     КАК ЗакупкаПодДеятельность,
	|	ДанныеДокумента.ИдентификаторДокумента                     КАК ИдентификаторДокумента,
	|	ДанныеДокумента.ГрафикНачисленияПроцентовВведенВручную     КАК ГрафикНачисленияПроцентовВведенВручную,
	|	ДанныеДокумента.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	ЗначенияПараметровПроведения = Новый Структура;
	ВнеоборотныеАктивы.ДополнитьЗначенияПараметровПроведенияДокументаАренды(ЗначенияПараметровПроведения);

	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ЗаключениеДоговораАренды"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ЗаключениеДоговораАренды);
	ЗначенияПараметровПроведения.Вставить("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.ЗаключениеДоговораАренды);
	
	ЗначенияПараметровПроведения.Вставить("ХО_ФормированиеСтоимостиАрендованныхОС", Перечисления.ХозяйственныеОперации.ФормированиеСтоимостиАрендованныхОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_ФормированиеСтоимостиАрендованныхОС", Справочники.НастройкиХозяйственныхОпераций.ФормированиеСтоимостиАрендованныхОС);
	
	ЗначенияПараметровПроведения.Вставить("ХО_КорректировкаАрендныхОбязательств", Перечисления.ХозяйственныеОперации.КорректировкаАрендныхОбязательств);
	ЗначенияПараметровПроведения.Вставить("НастройкаХО_КорректировкаАрендныхОбязательств", Справочники.НастройкиХозяйственныхОпераций.КорректировкаАрендныхОбязательств);
	ЗначенияПараметровПроведения.Вставить("ПрименяетсяУСН", Ложь);
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период));
		
		ЗначенияПараметровПроведения.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018",
			ВнеоборотныеАктивы.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
	
		ЗначенияПараметровПроведения.Вставить("СозданДляПерехода",
			КонецДня(Реквизиты.Период) + 1 = ВнеоборотныеАктивы.НачалоУчетаАрендыПоФСБУ25_2018(Реквизиты.Организация));
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта, Неопределено, Реквизиты.Период, Реквизиты.Организация);
		ЗначенияПараметровПроведения.Вставить("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		ЗначенияПараметровПроведения.Вставить("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		
		//
		ОтразитьУслугиВРасходахРегл = 
			НЕ ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И НЕ ЗначенияПараметровПроведения.СозданДляПерехода
				И Реквизиты.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендодатель
			ИЛИ (ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018
					ИЛИ ЗначенияПараметровПроведения.СозданДляПерехода)
				И НЕ Реквизиты.УчитыватьПредметыАрендыВРеглУчете;
		ЗначенияПараметровПроведения.Вставить("ОтразитьУслугиВРасходахРегл", ОтразитьУслугиВРасходахРегл);

		//
		ОтразитьУслугиВРасходахУпр = 
			НЕ ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И НЕ ЗначенияПараметровПроведения.СозданДляПерехода
				И Реквизиты.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендодатель
			ИЛИ (ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018
					ИЛИ ЗначенияПараметровПроведения.СозданДляПерехода)
				И НЕ Реквизиты.УчитыватьПредметыАрендыВУпрУчете;
		ЗначенияПараметровПроведения.Вставить("ОтразитьУслугиВРасходахУпр", ОтразитьУслугиВРасходахУпр);
		
		//
		ПараметрыУчетаПредметовАренды = ВнеоборотныеАктивыКлиентСервер.ПараметрыУчетаПредметовАренды(
			ЗначенияПараметровПроведения.ИспользуетсяУчетАрендыПоФСБУ25_2018, Реквизиты);
		
		ЗначенияПараметровПроведения.Вставить("ЕстьУчетУУ", ПараметрыУчетаПредметовАренды.ЕстьУчетУУ);
		ЗначенияПараметровПроведения.Вставить("ЕстьУчетБУ", ПараметрыУчетаПредметовАренды.ЕстьУчетБУ);
		ЗначенияПараметровПроведения.Вставить("ЕстьУчетНУ", ПараметрыУчетаПредметовАренды.ЕстьУчетНУ);
		
	КонецЕсли;
	
	ЗаключениеДоговораАрендыЛокализация.ДополнитьЗначенияПараметровПроведения(ЗначенияПараметровПроведения, Реквизиты);
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

#Область ТекстыЗапросаДляПроведения

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	&Договор                                КАК Договор,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&НаименованиеВходящегоДокумента         КАК НаименованиеПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                  КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	&СчетУчета                   КАК СчетУчета,
	|	&НаправлениеДеятельности     КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|	И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|	И НЕ &СозданДляПерехода";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                       КАК Регистратор,
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.Подразделение       КАК Местонахождение,
	|	ИСТИНА                        КАК ОтражатьВРеглУчете,
	|	ИСТИНА                        КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|	И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|	И НЕ &СозданДляПерехода";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СтоимостьОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтОсновныеСредства(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтАрендованныеОС(ТекстыЗапроса, "Документ.ЗаключениеДоговораАренды");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОС(ТекстыЗапроса, "Документ.ЗаключениеДоговораАренды");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса, "Документ.ЗаключениеДоговораАренды");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	ТаблицаОС.Подразделение                КАК Подразделение,
	|	&Контрагент                            КАК Контрагент,
	|	ТаблицаОС.ОсновноеСредство             КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.СуммаБУ                      КАК ЗалоговаяСтоимость,
	|	ИСТИНА                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                   КАК ОтражатьВУпрУчете,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗаключениеДоговораАренды) КАК ХозяйственнаяОперация,
	|
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтОсновныеСредства КАК ТаблицаОС
	|ГДЕ
	|	&Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|	И &ИспользуетсяУправлениеВНА_2_4
	|	И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|	И НЕ &СозданДляПерехода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&Организация                              КАК Организация,
	|	ВтМестонахождениеОС.Местонахождение       КАК Подразделение,
	|	&Контрагент                               КАК Контрагент,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	ВтПорядокУчетаОС.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	ВтАрендованныеОС.Стоимость                КАК ЗалоговаяСтоимость,
	|	ИСТИНА                                    КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                      КАК ОтражатьВУпрУчете,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗаключениеДоговораАренды) КАК ХозяйственнаяОперация,
	|
	|	ТаблицаОС.ИдентификаторСтроки             КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации           КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтАрендованныеОС КАК ВтАрендованныеОС
	|		ПО ВтАрендованныеОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПорядокУчетаОС КАК ВтПорядокУчетаОС
	|		ПО ВтПорядокУчетаОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтМестонахождениеОС КАК ВтМестонахождениеОС
	|		ПО ВтПорядокУчетаОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|	И &ИспользуетсяУправлениеВНА_2_4
	|	И &СозданДляПерехода";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);

	ТекстЗапросаТаблицаВтОсновныеСредства(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтСуммаПроцентов(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтСуммаНДС(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтКорректировкаАрендныхОбязательств(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	
	#Область ФормированиеСтоимостиАрендованныхОС // Дт 08.04 - Кт 76.07.1
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВЫБОР
	|		КОГДА &ПрименяетсяУСН
	|			ТОГДА ТаблицаОС.СуммаБУ + ТаблицаОС.СуммаНДС
	|		ИНАЧЕ ТаблицаОС.СуммаБУ
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ПрименяетсяУСН
	|			ТОГДА ТаблицаОС.СуммаУУ_СНДС_Упр
	|		ИНАЧЕ ТаблицаОС.СуммаУУ_БезНДС_Упр
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ПрименяетсяУСН
	|			ТОГДА ТаблицаОС.СуммаБУ_СНДС_Регл
	|		ИНАЧЕ ТаблицаОС.СуммаБУ_БезНДС_Регл
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	ТаблицаОС.ИдентификаторСтроки                                                КАК ИдентификаторСтроки,
	|	ТаблицаОС.ИдентификаторСтроки                                                КАК ИдентификаторФинЗаписи,
	|	&ХО_ФормированиеСтоимостиАрендованныхОС                                      КАК ХозяйственнаяОперация,
	|	&НастройкаХО_ФормированиеСтоимостиАрендованныхОС                             КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтОсновныеСредства КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	(НЕ &ОтразитьУслугиВРасходахУпр ИЛИ НЕ &ОтразитьУслугиВРасходахРегл)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеПроцентовПоАренде // Дт 76.07.5 - Кт 76.07.1
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)                         КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВтСуммаПроцентов.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ВтСуммаПроцентов.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаПроцентов.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ВтСуммаПроцентов.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаПроцентов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_УвеличениеПроцентовПоАренде                                              КАК ХозяйственнаяОперация,
	|	&НастройкаХО_УвеличениеПроцентовПоАренде                                     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтСуммаПроцентов КАК ВтСуммаПроцентов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВтСуммаПроцентов.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ВтСуммаПроцентов.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаПроцентов.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ВтСуммаПроцентов.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаПроцентов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_УвеличениеПроцентовПоАренде                                              КАК ХозяйственнаяОперация,
	|	&НастройкаХО_УвеличениеПроцентовПоАренде                                     КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтСуммаПроцентов КАК ВтСуммаПроцентов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеНДСПоАренде // Дт 76.07.9 - Кт 76.07.1
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)                              КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВтСуммаНДС.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ВтСуммаНДС.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаНДС.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ВтСуммаНДС.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаНДС.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_УвеличениеНДСПоАренде                                                    КАК ХозяйственнаяОперация,
	|	&НастройкаХО_УвеличениеНДСПоАренде                                           КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтСуммаНДС КАК ВтСуммаНДС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО
	|			АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	(НЕ &ОтразитьУслугиВРасходахУпр ИЛИ НЕ &ОтразитьУслугиВРасходахРегл)
	|	И НЕ &ПрименяетсяУСН
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВтСуммаНДС.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ВтСуммаНДС.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаНДС.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ВтСуммаНДС.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтСуммаНДС.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_УвеличениеНДСПоАренде                                                    КАК ХозяйственнаяОперация,
	|	&НастройкаХО_УвеличениеНДСПоАренде                                           КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтСуммаНДС КАК ВтСуммаНДС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	(НЕ &ОтразитьУслугиВРасходахУпр ИЛИ НЕ &ОтразитьУслугиВРасходахРегл)
	|	И НЕ &ПрименяетсяУСН";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область КорректировкаАрендныхОбязательств // Дт 91.02 - Кт 76.07.1
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	ВтКорректировкаАрендныхОбязательств.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ВтКорректировкаАрендныхОбязательств.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтКорректировкаАрендныхОбязательств.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ВтКорректировкаАрендныхОбязательств.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ВтКорректировкаАрендныхОбязательств.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_КорректировкаАрендныхОбязательств                                        КАК ХозяйственнаяОперация,
	|	&НастройкаХО_КорректировкаАрендныхОбязательств                               КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтКорректировкаАрендныхОбязательств КАК ВтКорректировкаАрендныхОбязательств
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО
	|			АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ВтКорректировкаАрендныхОбязательств.Сумма > 0
	|	И (НЕ &ОтразитьУслугиВРасходахУпр ИЛИ НЕ &ОтразитьУслугиВРасходахРегл)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область КорректировкаАрендныхОбязательств // Дт 76.07.1 - Кт 91.01
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                                                     КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	&ВалютаВзаиморасчетов                                                        КАК Валюта,
	|	
	|	-ВтКорректировкаАрендныхОбязательств.Сумма КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахУпр
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА -ВтКорректировкаАрендныхОбязательств.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(-ВтКорректировкаАрендныхОбязательств.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА &ОтразитьУслугиВРасходахРегл
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА -ВтКорректировкаАрендныхОбязательств.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(-ВтКорректировкаАрендныхОбязательств.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ТипГрафика,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК СтатьяАналитики,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК ИдентификаторСтроки,
	|	&ИдентификаторДокумента                                                      КАК ИдентификаторФинЗаписи,
	|	&ХО_КорректировкаАрендныхОбязательств                                        КАК ХозяйственнаяОперация,
	|	&НастройкаХО_КорректировкаАрендныхОбязательств                               КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтКорректировкаАрендныхОбязательств КАК ВтКорректировкаАрендныхОбязательств
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО
	|			АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ВтКорректировкаАрендныхОбязательств.Сумма < 0
	|	И (НЕ &ОтразитьУслугиВРасходахУпр ИЛИ НЕ &ОтразитьУслугиВРасходахРегл)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|	&Организация                 КАК Организация,
	|	&Контрагент                  КАК Контрагент,
	|	&Договор                     КАК Договор,
	|	ТаблицаОС.Стоимость          КАК ПервоначальнаяСтоимостьБУ,
	|	&Период                      КАК ДатаВводаВЭксплуатациюБУ,
	|	&Ссылка                      КАК ДокументВводаВЭксплуатациюБУ
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|	И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АрендованныеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.Стоимость           КАК Стоимость,
	|	&Партнер                      КАК Партнер,
	|	&Контрагент                   КАК Контрагент,
	|	&Договор                      КАК Договор,
	|
	|	ВЫБОР
	|		КОГДА &Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|					И &ИспользуетсяУправлениеВНА_2_4
	|					И НЕ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|					И НЕ &СозданДляПерехода
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды)
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры)

	ИмяРегистра = "УсловияДоговоровАренды";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	&Период                                КАК Период,
	|	&Договор                               КАК Договор,
	|	&СуммаОбеспечительногоПлатежа          КАК СуммаОбеспечительногоПлатежа,
	|	&СуммаУслугПоАренде                    КАК СуммаУслугПоАренде,
	|	&СуммаВыкупаПредметовАренды            КАК СуммаВыкупаПредметовАренды,
	|	&СуммаПроцентов                        КАК СуммаПроцентов,
	|	&СуммаНДС                              КАК СуммаНДС,
	|	&СтавкаНДС                             КАК СтавкаНДС,
	|	&СрокЛет                               КАК СрокЛет,
	|	&СрокМес                               КАК СрокМес,
	|	&СрокДней                              КАК СрокДней,
	|	&ДатаНачалаАренды                      КАК ДатаНачалаАренды,
	|	&ДатаПервогоПлатежа                    КАК ДатаПервогоПлатежа,
	|	&ДатаПервогоОбеспечительногоПлатежа    КАК ДатаПервогоОбеспечительногоПлатежа,
	|	&ДатаВыкупа                            КАК ДатаВыкупа,
	|	&ПроцентнаяСтавка                      КАК ПроцентнаяСтавка,
	|	&ПериодичностьОплат                    КАК ПериодичностьОплат,
	|	&ПериодичностьНачислений               КАК ПериодичностьНачислений,
	|	&СтоимостьПредметовАренды              КАК СтоимостьПредметовАренды,
	|	&ОплатаУслугиПоАренде                  КАК ОплатаУслугиПоАренде,
	|	&НачислениеУслугиПоАренде              КАК НачислениеУслугиПоАренде,
	|	&ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|	&Ссылка                                КАК АктуальныеУсловияДоговора,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует) КАК Состояние
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
КонецПроцедуры

Функция ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОплатУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж    КАК ОбеспечительныйПлатеж,
	|	ТаблицаГрафика.ОбеспечительныйПлатежНДС КАК ОбеспечительныйПлатежНДС,
	|	ТаблицаГрафика.ВыкупнаяСтоимостьНДС     КАК ВыкупнаяСтоимостьНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата >= &ДатаВыкупа
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата < &ДатаВыкупа
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьАванс
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|	ТаблицаГрафика.ОбеспечительныйПлатеж    КАК ОбеспечительныйПлатеж,
	|	ТаблицаГрафика.ОбеспечительныйПлатежНДС КАК ОбеспечительныйПлатежНДС,
	|	ВЫБОР 
	|		КОГДА &ДатаВыкупа = ТаблицаГрафика.Дата
	|			ТОГДА &СуммаВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|	ВЫБОР 
	|		КОГДА &ДатаВыкупа = ТаблицаГрафика.Дата
	|			ТОГДА &СуммаНДСВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	&Договор                                КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	&ДатаВыкупа                             КАК Дата,
	|	0                                       КАК УслугаПоАренде,
	|	0                                       КАК УслугаПоАрендеНДС,
	|	0                                       КАК ОбеспечительныйПлатеж,
	|	0                                       КАК ОбеспечительныйПлатежНДС,
	|	&СуммаВыкупаПредметовАренды             КАК ВыкупнаяСтоимость,
	|	&СуммаНДСВыкупаПредметовАренды          КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ПО ТаблицаГрафика.Ссылка = ДанныеДокумента.Ссылка
	|			И ТаблицаГрафика.Дата = ДанныеДокумента.ДатаВыкупа
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ТаблицаГрафика.Ссылка ЕСТЬ NULL
	|	И &СуммаВыкупаПредметовАренды <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияПроцентовПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК ДатаИзменения,
	|	&Договор                   КАК Договор,
	|	&Ссылка                    КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата        КАК Дата,
	|	ТаблицаГрафика.Проценты    КАК Проценты
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапросаТаблицаВтКорректировкаАрендныхОбязательств(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	&Подразделение                                    КАК Подразделение,
	|	&НаправлениеДеятельности                          КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                                    КАК СтатьяДоходов,
	|	&АналитикаДоходов                                 КАК АналитикаДоходов,
	|
	|	-ТаблицаДоходы.Сумма                              КАК Сумма,
	|	-ТаблицаДоходы.СуммаУпр                           КАК СуммаУпр,
	|	-ТаблицаДоходы.СуммаРегл                          КАК СуммаРегл,
	|
	|	&ИдентификаторДокумента                           КАК ИдентификаторФинЗаписи,
	|	&ХО_КорректировкаАрендныхОбязательств             КАК ХозяйственнаяОперация,
	|	&НастройкаХО_КорректировкаАрендныхОбязательств    КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтКорректировкаАрендныхОбязательств КАК ТаблицаДоходы
	|ГДЕ
	|	ТаблицаДоходы.Сумма < 0";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Лизинг) КАК Статья,
	|	&Договор КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаОС.Подразделение КАК КорПодразделение,
	|	&НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.СтатьяРасходов КАК КорСтатья,
	|	ТаблицаОС.ОсновноеСредство КАК КорАналитикаРасходов,
	|	
	|	ТаблицаОС.СуммаУУ_СНДС_Упр КАК Сумма,
	|	ТаблицаОС.СуммаУУ_БезНДС_Упр КАК СуммаУпр,
	|	ТаблицаОС.СуммаБУ_СНДС_Регл КАК СуммаРегл,
	|	
	|	&Валюта КАК Валюта,
	|	ТаблицаОС.СуммаБУ КАК СуммаВВалюте,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперацииПоЗарплате
	|ИЗ
	|	ВтОсновныеСредства КАК ТаблицаОС
	|ГДЕ
	|	&Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|	ИЛИ &ИспользуетсяУчетАрендыПоФСБУ25_2018
	|	ИЛИ &СозданДляПерехода";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеВременныхТаблицыДляПроведения

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ТекстЗапросаТаблицаВтОсновныеСредства(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтКорректировкаАрендныхОбязательств(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы());
	
	ТекстЗапроса = ЗаключениеДоговораАрендыЛокализация.ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы();
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	
		|	&Организация КАК Организация,
		|	ТаблицаОС.Подразделение КАК Подразделение,
		|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаОС.ОсновноеСредство КАК АналитикаРасходов,
		|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
		|	
		|	ВЫБОР
		|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаОС.СуммаУУ_СНДС_Упр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаСНДС,
		|
		|	ВЫБОР
		|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаОС.СуммаУУ_БезНДС_Упр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДС,
		|
		|	ВЫБОР
		|		КОГДА НЕ &ОтразитьУслугиВРасходахУпр
		|			ТОГДА ТаблицаОС.СуммаУУ_БезНДС_Упр
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДСУпр,
		|
		|	ВЫБОР
		|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
		|			ТОГДА ТаблицаОС.СуммаБУ_СНДС_Регл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаСНДСРегл,
		|
		|	ВЫБОР
		|		КОГДА НЕ &ОтразитьУслугиВРасходахРегл
		|			ТОГДА ТаблицаОС.СуммаБУ_БезНДС_Регл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДСРегл,
		|
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	
		|	&ХО_ФормированиеСтоимостиАрендованныхОС КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|
		|	ТаблицаОС.ИдентификаторСтроки   КАК ИдентификаторФинЗаписи,
		|	&НастройкаХО_ФормированиеСтоимостиАрендованныхОС КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	ВтОсновныеСредства КАК ТаблицаОС
		|ГДЕ
		|	(НЕ &ОтразитьУслугиВРасходахРегл ИЛИ НЕ &ОтразитьУслугиВРасходахУпр)";
		
	КонецЕсли;
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтОсновныеСредства(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтОсновныеСредства";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ИдентификаторСтроки,
	|	ТаблицаОС.Подразделение КАК Подразделение,
	|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаОС.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) КАК РаспределениеНаВНА,
	|	ТаблицаОС.СуммаБУ КАК СуммаБУ,
	|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаОС.СуммаБУ + ТаблицаОС.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаОС.СуммаБУ + ТаблицаОС.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУУ_СНДС_Упр,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаОС.СуммаБУ
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.СуммаБУ * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУУ_БезНДС_Упр,
	|	
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаОС.СуммаБУ + ТаблицаОС.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаОС.СуммаБУ + ТаблицаОС.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаБУ_СНДС_Регл,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаОС.СуммаБУ
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.СуммаБУ * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаБУ_БезНДС_Регл,
	|	
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаОС.СуммаНУ
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.СуммаНУ * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНУ_БезНДС_Регл,
	|	
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаОС.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДС_Упр,
	|
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ТаблицаОС.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаОС.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаНДС_Регл
	|
	|ПОМЕСТИТЬ ВтОсновныеСредства
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|	
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСуммаПроцентов(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтСуммаПроцентов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	Текст = 
	"ВЫБРАТЬ
	|	СУММА(ГрафикНачисленияПроцентов.Проценты) КАК Сумма
	|ПОМЕСТИТЬ ВтСуммаПроцентов
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияПроцентов КАК ГрафикНачисленияПроцентов
	|	
	|ГДЕ
	|	ГрафикНачисленияПроцентов.Ссылка = &Ссылка
	|	И (НЕ &СозданДляПерехода
	|		ИЛИ ГрафикНачисленияПроцентов.Дата > КОНЕЦПЕРИОДА(&Период, МЕСЯЦ))";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСуммаНДС(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтСуммаНДС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.СуммаНДС КАК Сумма
	|ПОМЕСТИТЬ ВтСуммаНДС
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ &СозданДляПерехода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫРАЗИТЬ(ГрафикНачисленияУслуг.УслугаПоАренде - 100 * ГрафикНачисленияУслуг.УслугаПоАренде / (100 + &ЗначениеСтавкиНДС) КАК ЧИСЛО(31, 2)))
	| 
	|		+ СУММА(ВЫРАЗИТЬ(ГрафикНачисленияУслуг.ОбеспечительныйПлатеж - 100 * ГрафикНачисленияУслуг.ОбеспечительныйПлатеж / (100 + &ЗначениеСтавкиНДС) КАК ЧИСЛО(31, 2)))
	| 
	|		+ ВЫБОР
	|			КОГДА &ДатаВыкупа > КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|				ТОГДА ВЫРАЗИТЬ(&СуммаВыкупаПредметовАренды - 100 * &СуммаВыкупаПредметовАренды / (100 + &ЗначениеСтавкиНДС) КАК ЧИСЛО(31, 2))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ГрафикНачисленияУслуг
	|	
	|ГДЕ
	|	ГрафикНачисленияУслуг.Ссылка = &Ссылка
	|	И &СозданДляПерехода
	|	И ГрафикНачисленияУслуг.Дата > КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтКорректировкаАрендныхОбязательств(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтКорректировкаАрендныхОбязательств";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьУчетУУ
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА СУММА(ВложенныйЗапрос.Сумма)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.Сумма) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ЕстьУчетБУ
	|			ТОГДА 0
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА СУММА(ВложенныйЗапрос.Сумма)
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.Сумма) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл
	|
	|ПОМЕСТИТЬ ВтКорректировкаАрендныхОбязательств
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГрафикНачисленияУслуг.УслугаПоАренде 
	|		+ ГрафикНачисленияУслуг.ОбеспечительныйПлатеж 
	|		- ВЫРАЗИТЬ(ГрафикНачисленияУслуг.УслугаПоАренде - 100 * ГрафикНачисленияУслуг.УслугаПоАренде / (100 + &ЗначениеСтавкиНДС) КАК ЧИСЛО(31, 2))
	| 		- ВЫРАЗИТЬ(ГрафикНачисленияУслуг.ОбеспечительныйПлатеж - 100 * ГрафикНачисленияУслуг.ОбеспечительныйПлатеж / (100 + &ЗначениеСтавкиНДС) КАК ЧИСЛО(31, 2)) КАК Сумма
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ГрафикНачисленияУслуг
	|	ГДЕ
	|		ГрафикНачисленияУслуг.Ссылка = &Ссылка
	|		И &СозданДляПерехода
	|		И ГрафикНачисленияУслуг.Дата > КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		-ГрафикНачисленияПроцентов.Проценты
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ГрафикНачисленияПроцентов КАК ГрафикНачисленияПроцентов
	|	ГДЕ
	|		ГрафикНачисленияПроцентов.Ссылка = &Ссылка
	|		И &СозданДляПерехода
	|		И ГрафикНачисленияПроцентов.Дата > КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		-ТаблицаОС.ОстаточнаяСтоимость
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ОС КАК ТаблицаОС
	|	ГДЕ
	|		ТаблицаОС.Ссылка = &Ссылка
	|		И &СозданДляПерехода
	|
	|	) КАК ВложенныйЗапрос";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат ЗаключениеДоговораАрендыЛокализация.ТекстОтраженияВРеглУчете();
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ЗаключениеДоговораАрендыЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();
	
КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = Справочники.ДоговорыАренды.ДобавитьКомандуРасшифровкиРасчетаПроцентов(КомандыПечати);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ГрафикНачисленияПроцентовВведенВручную", Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Возвращает представление реквизитов.
// 
// Параметры:
// 	Балансодержатель - ПеречислениеСсылка.БалансодержательПредметовАренды -
// 	ТипДоговора - ПеречислениеСсылка.ТипыДоговоровАренды -
// 	ИспользуетсяУчетАрендыПоФСБУ25_2018 - Булево -
// 	
// Возвращаемое значение:
// 	Соответствие - Содержит представление реквизитов.
Функция ПредставлениеРеквизитов(Балансодержатель, ТипДоговора, ИспользуетсяУчетАрендыПоФСБУ25_2018) Экспорт
	
	ПредставлениеРеквизитов = Новый Соответствие;
	
	Если ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
		
		Если ТипДоговора = Перечисления.ТипыДоговоровАренды.Лизинг Тогда
			
			ОССумма_Заголовок = НСтр("ru = 'Сумма вложений лизингодателя (без НДС)';
									|en = 'Amount of lessor''s investments (excluding VAT)'");
			ОССумма_Подсказка = "";

		Иначе
			
			ОССумма_Заголовок = НСтр("ru = 'Стоимость (без НДС)';
									|en = 'Cost (excluding VAT)'"); 
			ОССумма_Подсказка = НСтр("ru = 'Стоимость предметов аренды, которая рассчитывается на основании справедливой и негарантированной стоимости';
									|en = 'The cost of the leased objects, which is calculated based on the fair and non-guaranteed value'");

		КонецЕсли;
			
	Иначе
		
		Если Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендодатель Тогда
			
			ОССумма_Заголовок = НСтр("ru = 'Залоговая стоимость';
									|en = 'Deposit value'");
			ОССумма_Подсказка = НСтр("ru = 'Залоговая стоимость предмета аренды';
									|en = 'Collateral leased object value'");
		Иначе
			
			ОССумма_Заголовок = НСтр("ru = 'Сумма вложений лизингодателя (без НДС)';
									|en = 'Amount of lessor''s investments (excluding VAT)'");
			ОССумма_Подсказка = "";
			
		КонецЕсли;	

	КонецЕсли;
	
	ПредставлениеРеквизитов.Вставить("ОС.Стоимость_Заголовок", ОССумма_Заголовок);
	ПредставлениеРеквизитов.Вставить("ОС.Стоимость_Подсказка", ОССумма_Подсказка);
	
	Возврат ПредставлениеРеквизитов;
	
КонецФункции

// Описание параметров выбора статей и аналитик в документе.
// 
// Возвращаемое значение:
// 	Структура из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики - 
Функция ПараметрыВыбораСтатейИАналитик() Экспорт

	СписокПараметров = Новый Массив;

	#Область Расходы
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	
	СписокПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти

	#Область Доходы
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";

	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	СписокПараметров.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
	Возврат СписокПараметров;
	
КонецФункции

Процедура РассчитатьСтавкуСтоимостьПроценты(Объект, РеквизитыДоговора) Экспорт

	ПараметрыРасчета = ВнеоборотныеАктивы.ПараметрыРасчетаСтавкиСтоимостиПроцентов(Объект, РеквизитыДоговора);
	ПараметрыРасчета.ТаблицаОС = Объект.ОС;
	
	Если РеквизитыДоговора.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоровАренды.Аренда")
		И РеквизитыДоговора.СпособОпределенияСтоимостиАктивов = ПредопределенноеЗначение("Перечисление.СпособыОпределенияСтоимостиПредметовАренды.ПоФактическойСтоимости") Тогда
		ПараметрыРасчета.СтоимостьПредметовАренды = Объект.ОС.Итог("СправедливаяСтоимость") - Объект.ОС.Итог("НегарантированнаяСтоимость");
	Иначе
		ПараметрыРасчета.СтоимостьПредметовАренды = Объект.ОС.Итог("Стоимость");
	КонецЕсли;
	
	ВнеоборотныеАктивы.РассчитатьСтавкуСтоимостьПроценты(ПараметрыРасчета);
	
	Объект.ПроцентнаяСтавка = ПараметрыРасчета.ПроцентнаяСтавка;
	Объект.СуммаПроцентов = ПараметрыРасчета.СуммаПроцентов;
	Объект.ПриведеннаяСтоимость = ПараметрыРасчета.ПриведеннаяСтоимость;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ЗаключениеДоговораАренды.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.7.271";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d04c5330-4a46-4078-8a32-d2af23b85053");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаключениеДоговораАренды.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Заключение договора аренды"":
								  |- Заполняет реквизит ""Ставка НДС""
								  |- Заполняет суммы НДС в графике оплат и начислений
								  |- Заполняет приведенную стоимость';
								  |en = 'Updates the ""Lease term commitment"" documents:
								  |- Fills in the ""VAT rate"" attribute
								  |- Fills in VAT amounts in the schedule of payments and accruals
								  |- Fills in the present value'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ЗаключениеДоговораАренды.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ЗаключениеДоговораАренды.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "МультиязычностьСервер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//++ Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.Патенты.ДобавитьПродажаПоПатентуВСтавкуБезНДС";
	НоваяСтрока.Порядок = "Любой";
	//-- Локализация

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ЗаключениеДоговораАренды";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаключениеДоговораАрендыОС.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ОС КАК ЗаключениеДоговораАрендыОС
	|	ГДЕ
	|		НЕ ЗаключениеДоговораАрендыОС.УдалитьСтавкаНДС = &ПустаяСтавкаНДС
	|		И ЗаключениеДоговораАрендыОС.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И (ДанныеДокумента.Сумма = 0
	|				И ДанныеДокумента.СуммаВзаиморасчетов <> 0
	|			ИЛИ ДанныеДокумента.ПриведеннаяСтоимость = 0
	|				И ДанныеДокумента.СуммаПроцентов <> 0)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ГрафикОплатУслуг.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ГрафикОплатУслуг
	|	ГДЕ
	|		ГрафикОплатУслуг.Ссылка.Проведен
	|		И ГрафикОплатУслуг.Ссылка.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		И (ГрафикОплатУслуг.УслугаПоАренде <> 0
	|				И ГрафикОплатУслуг.УслугаПоАрендеНДС = 0
	|			ИЛИ ГрафикОплатУслуг.ОбеспечительныйПлатеж <> 0
	|				И ГрафикОплатУслуг.ОбеспечительныйПлатежНДС = 0
	|			ИЛИ ГрафикОплатУслуг.ВыкупнаяСтоимость <> 0
	|				И ГрафикОплатУслуг.ВыкупнаяСтоимостьНДС = 0)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ГрафикНачисленияУслуг.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ГрафикНачисленияУслуг
	|	ГДЕ
	|		ГрафикНачисленияУслуг.Ссылка.Проведен
	|		И ГрафикНачисленияУслуг.Ссылка.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		И (ГрафикНачисленияУслуг.УслугаПоАренде <> 0
	|				И ГрафикНачисленияУслуг.УслугаПоАрендеНДС = 0
	|			ИЛИ ГрафикНачисленияУслуг.ОбеспечительныйПлатеж <> 0
	|				И ГрафикНачисленияУслуг.ОбеспечительныйПлатежНДС = 0)
	|
	|	) КАК СписокДокументов";
	
	УчетНДСЛокализация.УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ЗаключениеДоговораАренды";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для Каждого Выборка Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект(); // ДокументОбъект.ЗаключениеДоговораАренды - 
			Если ДокументОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
 			КонецЕсли;
			
			//
			МассивТЧ = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ОС");
			УчетНДСЛокализация.ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, Ложь);
			
			//
			Если НЕ ЗначениеЗаполнено(ДокументОбъект.ИдентификаторДокумента) Тогда
				ДокументОбъект.ВерсияДокумента24 = Истина;
				ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, "ОС");
				ЗаполнитьРасчетыИГрафик(ДокументОбъект);
			КонецЕсли;
			
			//
			ВнеоборотныеАктивы.ЗаполнитьСуммыНДСПриОбновлении(ДокументОбъект);
			ВнеоборотныеАктивы.ЗаполнитьПриведеннуюСтоимостьПриОбновлении(ДокументОбъект);
			
			//
			Если ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьРасчетыИГрафик(Знач ДокументОбъект)
	
	Если НЕ ДокументОбъект.Проведен Тогда
		Возврат; // Корректно заполнить расчеты можно только для проведенного документа.
	КонецЕсли;
	
	СписокРеквизитов = "Балансодержатель,ЕстьОбеспечительныйПлатеж,ЕстьВыкупПредметовАренды";
	Если ЗначениеЗаполнено(ДокументОбъект.Договор) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Договор, СписокРеквизитов);
	Иначе
		РеквизитыДоговора = Новый Структура(СписокРеквизитов);
		РеквизитыДоговора.ЕстьОбеспечительныйПлатеж = Ложь;
		РеквизитыДоговора.ЕстьВыкупПредметовАренды = Ложь;
	КонецЕсли;
	УчетЗаБалансом = (РеквизитыДоговора.Балансодержатель = Перечисления.БалансодержательПредметовАренды.Арендодатель);
		
	ДокументОбъект.Валюта = ДокументОбъект.ВалютаВзаиморасчетов;

	Если ДокументОбъект.Сумма = 0 
		И ДокументОбъект.СуммаВзаиморасчетов <> 0 Тогда
		
		ДокументОбъект.Сумма = ДокументОбъект.СуммаВзаиморасчетов;
		ДокументОбъект.СуммаСНДС = ДокументОбъект.СуммаВзаиморасчетов;
	КонецЕсли;

	ДокументОбъект.СуммаНДС = 0;
	ДокументОбъект.СтоимостьПредметовАренды = 0;
	
	СтавкаНДС = Неопределено;
	Для Каждого ДанныеСтроки Из ДокументОбъект.ОС Цикл
		
		Если ДанныеСтроки.СуммаНУ <> 0 Тогда
			ДанныеСтроки.Стоимость = ДанныеСтроки.СуммаНУ;
		Иначе
			ДанныеСтроки.Стоимость = 
				ДанныеСтроки.УдалитьСуммаВзаиморасчетов
				- ДанныеСтроки.УдалитьСуммаНДСВзаиморасчетов;
		КонецЕсли;
			
		ДанныеСтроки.Подразделение = ДокументОбъект.Подразделение;
		
		ДокументОбъект.СуммаНДС = 
			ДокументОбъект.СуммаНДС
			+ ДанныеСтроки.УдалитьСуммаНДСВзаиморасчетов;
			
		ДокументОбъект.СтоимостьПредметовАренды = 
			ДокументОбъект.СтоимостьПредметовАренды
			+ ДанныеСтроки.Стоимость;
		
		Если СтавкаНДС = Неопределено
			И ЗначениеЗаполнено(ДанныеСтроки.СтавкаНДС) Тогда
			СтавкаНДС = ДанныеСтроки.СтавкаНДС;
		ИначеЕсли ЗначениеЗаполнено(СтавкаНДС)
			И ЗначениеЗаполнено(ДанныеСтроки.СтавкаНДС)
			И СтавкаНДС <> ДанныеСтроки.СтавкаНДС Тогда
			СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.СтавкаНДС) Тогда
		ДокументОбъект.СтавкаНДС = СтавкаНДС;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ПеренестиГрафики(ДокументОбъект, ДокументОбъект);
		
	Если НЕ УчетЗаБалансом Тогда
		ДокументОбъект.СуммаУслугПоАренде = 
			ДокументОбъект.Сумма
			- ДокументОбъект.СуммаОбеспечительногоПлатежа
			- ДокументОбъект.СуммаВыкупаПредметовАренды;
	КонецЕсли;			
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область УХ_Встраивание

#Область УХ_КонтрольНаличияПериодов
	
// Функция возвращает текст запроса, который формирует временную таблицу запроса ВТ_ДатыОпераций с колонками
//   Дата 		- Дата - Дата операции по документу
//	 ВидБюджета - ПеречислениеСсылка.ПредназначенияЭлементовСтруктурыОтчета - Вид бюджета, по которому будет операция
// Текст запроса уникален для каждого вида документа
//
Функция ТексЗапроса_ДатыОперацийДокумента() экспорт
	
	Возврат
	
	"ВЫБРАТЬ
	|	ЗаключениеДоговораАрендыГрафикОплатУслуг.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета
	|	ПОМЕСТИТЬ ВТ_ДатыОпераций
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикОплатУслуг КАК ЗаключениеДоговораАрендыГрафикОплатУслуг
	|ГДЕ
	|	ЗаключениеДоговораАрендыГрафикОплатУслуг.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаключениеДоговораАрендыГрафикНачисленияУслуг.Дата,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов)
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды.ГрафикНачисленияУслуг КАК ЗаключениеДоговораАрендыГрафикНачисленияУслуг
	|ГДЕ
	|	ЗаключениеДоговораАрендыГрафикНачисленияУслуг.Ссылка = &Ссылка";
	
КонецФункции

#КонецОбласти 

#Область УХ_ИсточникиДляКонтроляДокумента

Функция ИсточникиДокумента(Объект, ДопПараметры = неопределено) Экспорт
	
	Источники = Новый Соответствие;
	
	// 1. Источник для контроля бюджетных лимитов и резервов
	КонтрольУХ.ДобавитьИсточник(
		Источники, 
		КонтрольУХБюджетныеЛимиты, 
		Источник_БюджетныеЛимитыРезервы(Объект, ДопПараметры));
		
	//// 2. Планы по взаиморасчетам с контрагентом
	//КонтрольУХ.ДобавитьИсточник(
	//	Источники, 
	//	КонтрольУХВзаиморасчетыПоКонтрагенту, 
	//	Источник_ВзаиморасчетыПоКонтрагенту(Объект));
		
	Возврат Источники;
	
КонецФункции

Функция Источник_БюджетныеЛимитыРезервы(Объект, ДопПараметры) Экспорт
	
	// Доп.параметры
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Дата", 				Объект.Дата);
	ДопПараметры.Вставить("Ссылка", 			Объект.Ссылка);
	ДопПараметры.Вставить("ЭтоНовый", 			НЕ ЗначениеЗаполнено(Объект.Ссылка));
	ДопПараметры.Вставить("ДатаКонтроляЛимита", Объект.Дата);
	
	Если Объект.РежимИспользованияГрафика = Перечисления.РежимыИспользованияГрафика.КонтрольЛимитовИСозданиеПозиций Тогда
		ДанныеДляПроверки = ПланыДокумента(Объект);
	Иначе
		ДанныеДляПроверки = КонтрольЛимитовУХ.Новый_ТаблицаПланыДокумента();
	КонецЕсли;
	
	//
	ДанныеДляПроверки.Колонки.Сумма.Имя = "Заявлено";
	ДанныеДляПроверки.Колонки.Добавить("Лимит", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	ДанныеДляПроверки.Колонки.Добавить("Зарезервировано", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	ДанныеДляПроверки.Колонки.Добавить("Исполнено", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	ДанныеДляПроверки.ЗаполнитьЗначения(Объект.Дата, "Период");
	
	//
	Источник = Новый Структура;
	Источник.Вставить("Параметры",		ДопПараметры);
	Источник.Вставить("ПланыДокумента", ДанныеДляПроверки);
	
	Возврат Источник;
	
КонецФункции

Функция Источник_ВзаиморасчетыПоКонтрагенту(Объект)
	
	// Если незаполнен контрагент, то контроль не выполняется
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Возврат неопределено;
	КонецЕсли;
	
	// Если роль определить не удалось, то контроль не выполняется
	РольКонтрагента = Перечисления.РолиКонтрагентов.Поставщики;
	Если РольКонтрагента = неопределено Тогда
		Возврат неопределено;
	КонецЕсли;
	
	//
	Результат = Новый Структура;
	Результат.Вставить("Заявка", Объект.Ссылка);
	Результат.Вставить("Контрагент", Объект.Контрагент);
	Результат.Вставить("СуммаПлатежа", Объект.Сумма);
	Результат.Вставить("Валюта", Объект.ВалютаВзаиморасчетов);
	Результат.Вставить("РольКонтрагента", РольКонтрагента);
	
	Возврат Результат;
	
КонецФункции

#Область УХ_ПланыДокумента

// Процедура возвращает таблицу планов документа
//
// Параметры:
//  Источник  - ДокументСсылка, ДокументОбъект, Форма.Объект - Документ планирования
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица планов документа
//
Функция ПланыДокумента(Источник) Экспорт
	Возврат ВстраиваниеУХДоговорыАренды.ПланыДокумента(Источник);	
КонецФункции

Функция ДанныеОбъектаПоСсылке(Источник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Источник);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаключениеДоговораАренды.Ссылка КАК Ссылка,
	|	ЗаключениеДоговораАренды.Дата КАК Дата,
	|	ЗаключениеДоговораАренды.Организация КАК Организация,
	|	ЗаключениеДоговораАренды.Партнер КАК Партнер,
	|	ЗаключениеДоговораАренды.Контрагент КАК Контрагент,
	|	ЗаключениеДоговораАренды.Договор КАК Договор,
	|	ЗаключениеДоговораАренды.Валюта КАК Валюта,
	|	ЗаключениеДоговораАренды.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЗаключениеДоговораАренды.Курс КАК Курс,
	|	ЗаключениеДоговораАренды.Кратность КАК Кратность,
	|	ЗаключениеДоговораАренды.СуммаДокумента КАК СуммаДокумента,
	|	ЗаключениеДоговораАренды.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ЗаключениеДоговораАренды.Сумма КАК Сумма,
	|	ЗаключениеДоговораАренды.СуммаСНДС КАК СуммаСНДС,
	|	ЗаключениеДоговораАренды.СуммаНДС КАК СуммаНДС,
	|	ЗаключениеДоговораАренды.СтавкаНДС КАК СтавкаНДС,
	|	ЗаключениеДоговораАренды.СрокЛет КАК СрокЛет,
	|	ЗаключениеДоговораАренды.СрокМес КАК СрокМес,
	|	ЗаключениеДоговораАренды.СрокДней КАК СрокДней,
	|	ЗаключениеДоговораАренды.СтоимостьПредметовАренды КАК СтоимостьПредметовАренды,
	|	ЗаключениеДоговораАренды.СуммаОбеспечительногоПлатежа КАК СуммаОбеспечительногоПлатежа,
	|	ЗаключениеДоговораАренды.СуммаУслугПоАренде КАК СуммаУслугПоАренде,
	|	ЗаключениеДоговораАренды.СуммаВыкупаПредметовАренды КАК СуммаВыкупаПредметовАренды,
	|	ЗаключениеДоговораАренды.СуммаПроцентов КАК СуммаПроцентов,
	|	ЗаключениеДоговораАренды.ПроцентнаяСтавка КАК ПроцентнаяСтавка,
	|	ЗаключениеДоговораАренды.ПериодичностьОплат КАК ПериодичностьОплат,
	|	ЗаключениеДоговораАренды.ПериодичностьНачислений КАК ПериодичностьНачислений,
	|	ЗаключениеДоговораАренды.ОплатаУслугиПоАренде КАК ОплатаУслугиПоАренде,
	|	ЗаключениеДоговораАренды.НачислениеУслугиПоАренде КАК НачислениеУслугиПоАренде,
	|	ЗаключениеДоговораАренды.ДатаНачалаАренды КАК ДатаНачалаАренды,
	|	ЗаключениеДоговораАренды.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ЗаключениеДоговораАренды.ДатаПервогоОбеспечительногоПлатежа КАК ДатаПервогоОбеспечительногоПлатежа,
	|	ЗаключениеДоговораАренды.ДатаВыкупа КАК ДатаВыкупа,
	|	ЗаключениеДоговораАренды.Комментарий КАК Комментарий,
	|	ЗаключениеДоговораАренды.УдалитьЦенаВключаетНДС КАК УдалитьЦенаВключаетНДС,
	|	ЗаключениеДоговораАренды.РежимИспользованияГрафика КАК РежимИспользованияГрафика,
	|	ЗаключениеДоговораАренды.ИсточникЛимитовБДДС КАК ИсточникЛимитовБДДС,
	|	ЗаключениеДоговораАренды.ИсточникЛимитовИсполнение КАК ИсточникЛимитовИсполнение,
	|	ЗаключениеДоговораАренды.РежимАктуализацииЗаявок КАК РежимАктуализацииЗаявок,
	|	ЗаключениеДоговораАренды.ЕстьПревышениеЛимитов КАК ЕстьПревышениеЛимитов,
	|	ЗаключениеДоговораАренды.ГрафикОплатУслуг.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Дата КАК Дата,
	|		УслугаПоАренде КАК УслугаПоАренде,
	|		ОбеспечительныйПлатеж КАК ОбеспечительныйПлатеж,
	|		ВыкупнаяСтоимость КАК ВыкупнаяСтоимость
	|	) КАК ГрафикОплатУслуг,
	|	ЗаключениеДоговораАренды.ГрафикНачисленияУслуг.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Дата КАК Дата,
	|		УслугаПоАренде КАК УслугаПоАренде,
	|		ОбеспечительныйПлатеж КАК ОбеспечительныйПлатеж
	|	) КАК ГрафикНачисленияУслуг,
	|	ЗаключениеДоговораАренды.ПараметрыОпераций.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ОперацияГрафика КАК ОперацияГрафика,
	|		СтатьяБюджета КАК СтатьяБюджета,
	|		Аналитика1 КАК Аналитика1,
	|		Аналитика2 КАК Аналитика2,
	|		Аналитика3 КАК Аналитика3,
	|		Аналитика4 КАК Аналитика4,
	|		Аналитика5 КАК Аналитика5,
	|		Аналитика6 КАК Аналитика6
	|	) КАК ПараметрыОпераций
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	|ГДЕ
	|	ЗаключениеДоговораАренды.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка,, "ГрафикОплатУслуг, ГрафикНачисленияУслуг, ПараметрыОпераций");
		Результат.ГрафикОплатУслуг = Выборка.ГрафикОплатУслуг.Выгрузить();
		Результат.ГрафикНачисленияУслуг = Выборка.ГрафикНачисленияУслуг.Выгрузить();
		Результат.ПараметрыОпераций = Выборка.ПараметрыОпераций.Выгрузить();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 


#КонецОбласти 


#КонецОбласти

#КонецЕсли
