
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = ПолучитьРеквизиты(Запрос, Отказ);
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты);	
	ДополнитьПараметрамиВНА(Запрос, Реквизиты);

	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;	
		
	ТекстЗапроса.Добавить(ТекстЗапросаФИ(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаПараметровУчетаФИ(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_ДолгосрочныеИнтервалы(НомераТаблиц));
	
	#Область ФинАренда
	ТекстЗапроса.Добавить(ТекстЗапроса_втИспользуемыеВНА(НомераТаблиц));//для расчета ПараметрыВНА
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПараметрыВНА(НомераТаблиц, "ВЫБРАТЬ т.ВНА ИЗ втИспользуемыеВНА КАК т"));//для проводок увеличение, уменьшение ВНА
	ТекстЗапроса.Добавить(ТекстЗапроса_СуммыВНА(НомераТаблиц));//для проводок увеличение, уменьшение ВНА
	ТекстЗапроса.Добавить(ТекстЗапроса_втСуммаИзмененияВНА(НомераТаблиц));//для проводок реструктуризации ВНА
		 
	ТекстЗапроса.Добавить(ТекстЗапроса_УменьшениеВНА(НомераТаблиц, Реквизиты));//запросы документа ВыбытиеВНА	
	ТекстЗапроса.Добавить(ТекстЗапроса_втКурсыВводаВНА(НомераТаблиц));//для ТаблицаВводВНА	
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаВводВНА(НомераТаблиц));//Параметры ВНА при вводе в эксплуатацию
	ТекстЗапроса.Добавить(ТекстЗапроса_втТаблицаВНА_Ввод(НомераТаблиц));// для ТекстЗапроса_ТаблицаОшибокВНА
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_втСтоимостьВНА(НомераТаблиц, "втТаблицаВНА_Ввод"));// для ТекстЗапроса_ТаблицаОшибокВНА 
	#КонецОбласти
	
	ТекстЗапроса.Добавить(ТекстЗапроса_втГрафикиФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ОбъектыПоФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ЗадолженностьПоИнтервалам(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиДоРеструктуризации(НомераТаблиц));
	
	ТекстЗапроса.Добавить(ТекстЗапроса_Проводки(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_КурсыВалют(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводки(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ОшибкиПроводок(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаОшибокВНА(НомераТаблиц));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	Результат = Запрос.ВыполнитьПакет();

	ПроверитьОшибки(Результат, НомераТаблиц, Отказ);
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", 	Запрос.МенеджерВременныхТаблиц);
	
	Возврат ДополнительныеСвойства;

КонецФункции

Функция ПолучитьРеквизиты(Запрос, Отказ)
	
	ДопРеквизиты = "ПериодОтчета, ДатаНачала, ВидОтчета, ПроводкиНаКаждуюДатуОперации, АлгоритмРСБУ";
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, ДопРеквизиты, "ПериодОтчета", Отказ);
	
	Реквизиты.Вставить("ГраницыПериода", 					МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты,,Истина));
	Реквизиты.Вставить("ГраницаДоДокумента", 				МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Реквизиты.Дата, Запрос.Параметры.Ссылка));
	Реквизиты.Вставить("ГраницыПредыдущегоПериода", 		МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты,-1,Истина));
	Реквизиты.Вставить("ГраницыГодаДляКраткосрочнойЧасти",	МСФОКлиентСерверУХ.ПолучитьГраницыГодаДляКраткосрочнойЧасти(Реквизиты.ГраницыПериода.ДатаОкончания));	
	Реквизиты.Вставить("Период", 							КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));	
	Реквизиты.Вставить("ПериодСторно",						НачалоДня(ОбщегоНазначенияУХ.ДобавитьДень(Реквизиты.ГраницыПериода.ДатаОкончания, 1)));	
	Реквизиты.Вставить("ИсточникКорректировки",				"РасчетныеДанныеФИ");
	
	Реквизиты.Вставить("ГраницыКраткосрочнойЧастиПредыдущегоГода", 
	МСФОКлиентСерверУХ.ПолучитьГраницыГодаДляКраткосрочнойЧасти(Реквизиты.ГраницыПредыдущегоПериода.ДатаОкончания));
	
	Возврат Реквизиты;

КонецФункции

Процедура ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты)
	
	СубконтоПоОбъектам = ПолучитьСубконтоПоТипам();
	
	Запрос.УстановитьПараметр("Ссылка",					Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ПериодОтчета", 			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО", 		Реквизиты.ФормироватьПроводкиМСФО);
	Запрос.УстановитьПараметр("ПроводкиНаКаждуюДатуОперации",	Реквизиты.ПроводкиНаКаждуюДатуОперации);
	
	Запрос.УстановитьПараметр("Период",							Реквизиты.ГраницыПериода.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаГраница",					Новый Граница(Реквизиты.Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДоДокумента",				МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Реквизиты.Период, Реквизиты.Ссылка));
	Запрос.УстановитьПараметр("ГраницаКонецПериода",			КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ПланСчетовМСФО",					Справочники.ПланыСчетовБД.ПолучитьПланСчетовБД("МСФО"));
	Запрос.УстановитьПараметр("ДатаНачалаСледующегоПериода",	Реквизиты.ПериодСторно);
	Запрос.УстановитьПараметр("ДатаОкончанияКраткосрочнойЧастиПредыдущегоГода",	Реквизиты.ГраницыКраткосрочнойЧастиПредыдущегоГода.ДатаОкончания);
	
	Запрос.УстановитьПараметр("ДатаНачалаПериода",						Реквизиты.ГраницыПериода.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода",					Реквизиты.ГраницыПериода.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНачалаГодаКраткосрочнойЧасти",		Реквизиты.ГраницыГодаДляКраткосрочнойЧасти.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияГодаКраткосрочнойЧасти",	Реквизиты.ГраницыГодаДляКраткосрочнойЧасти.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНачалаПредыдущегоПериода",			Реквизиты.ГраницыПредыдущегоПериода.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияПредыдущегоПериода",		Реквизиты.ГраницыПредыдущегоПериода.ДатаОкончания);
	
	Запрос.УстановитьПараметр("ВидыСубконтоВНА",			СубконтоПоОбъектам.ВНА);
	Запрос.УстановитьПараметр("ВидыСубконтоФИ",				СубконтоПоОбъектам.ФИ);
	Запрос.УстановитьПараметр("ВидыСубконтоИнтервалы",		СубконтоПоОбъектам.ИнтервалыЗадолженностей);
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагенты",	СубконтоПоОбъектам.Контрагенты);

КонецПроцедуры

Процедура ПроверитьОшибки(Результат, НомераТаблиц, Отказ)
	
	//ошибки проводок(например, заполнение счетов)
	Если Не Результат.Получить(НомераТаблиц.ОшибкиПроводок).Пустой() Тогда
		
		Отказ = Истина;
		
		ШаблонОшибки = НСтр("ru = 'При формтировании операции <%1> не удалось заполнить счет <%2> по финансовому инструменту <%3>(%4)'");
		Выборка = Результат.Получить(НомераТаблиц.ОшибкиПроводок).Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ОшибкаСчетаДт Тогда
				ОбщегоНазначенияКлиентСерверУХ.СообщитьПользователю(
				СтрШаблон(ШаблонОшибки, Выборка.ВидОперации, Выборка.СчетДт, Выборка.ФИ, Выборка.Регистратор), Выборка.Регистратор);
				
			КонецЕсли;
			
			Если Выборка.ОшибкаСчетаКт Тогда
				ОбщегоНазначенияКлиентСерверУХ.СообщитьПользователю(
				СтрШаблон(ШаблонОшибки, Выборка.ВидОперации, Выборка.СчетКт, Выборка.ФИ, Выборка.Регистратор), Выборка.Регистратор);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	// ошибки ввода ВНА лизинга
	ПараметрыПроведения = Новый Структура("ОшибкиПроведения", Результат.Получить(НомераТаблиц.ОшибкиПроведения).Выгрузить());
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(Новый Структура("ПараметрыПроведения", ПараметрыПроведения), Отказ) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьПараметрамиВНА(Запрос, Реквизиты)
	
	Запрос.УстановитьПараметр("АлгоритмРСБУ",	Реквизиты.АлгоритмРСБУ);	
	Запрос.УстановитьПараметр("ЕстьМСФО", 		Истина);
	Запрос.УстановитьПараметр("ЕстьНСБУ", 		Ложь);	
	Запрос.УстановитьПараметр("ВидыУчета", 		Перечисления.ВидыУчета.ВидыУчета(Ложь, Истина));
	Запрос.УстановитьПараметр("ВсеОрганизации", Ложь);
	
	Запрос.УстановитьПараметр("ДатаНачалаПериодаДокумента", Запрос.Параметры.ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаРасчета", 				Запрос.Параметры.ДатаОкончанияПериода);
	
	Если Реквизиты.АлгоритмРСБУ Тогда
		
		Запрос.УстановитьПараметр("ВсеВНА", Ложь); //Список ВНА определяется в предыдущем запросе
		
	Иначе 
		
		Запрос.УстановитьПараметр("ВсеВНА", Истина);//список ВНА определяется остатками стоимости
		Запрос.УстановитьПараметр("ВНА", 	Неопределено);// параметр не влияет на расчет 
		
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;	
	ТаблицаПроводки 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводки;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаВводВНА 			= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВводВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;
			
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	МСФОВызовСервераУХ.ОтразитьДвиженияПоТаблицеПроводок(Движения, ТаблицаПроводки, Реквизиты, Отказ);
	
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();	
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", Истина);
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	
	НастройкиОтражения.Вставить("ПервоначальныеСведенияВНАМСФО", Истина);
	НастройкиОтражения.Вставить("ПараметрыУчетаВНАМСФО", Истина);
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВводВНА, НастройкиОтражения);
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, Неопределено);
	
	МСФОВызовСервераУХ.ЗаписатьДвижения(Движения);// ТК должна видеть движения
	
	Если Не Реквизиты.ФормироватьПроводкиМСФО Тогда
		
		ТаблицаПроводки.Колонки.СуммаВФункциональнойВалюте.Имя = "Значение";
		ТаблицаПроводки.Колонки.СуммаВВалюте.Имя = "ЗначениеВВалютеДт";
		ТаблицаПроводки.Колонки.Добавить("ЗначениеВВалютеКт");
		ТаблицаПроводки.ЗагрузитьКолонку(ТаблицаПроводки.ВыгрузитьКолонку("ЗначениеВВалютеДт"), "ЗначениеВВалютеКт");
		
		МодульТК = ОбщегоНазначения.ОбщийМодуль("ТрансформационныеКорректировкиУХ");
		МодульТК.СформироватьКорректировку(Реквизиты, Отказ, ТаблицаПроводки);
		Реквизиты.Вставить("ВидОперации",			Справочники.ВидыОпераций.ПринятиеКУчетуВНА);		
		МодульТК.СформироватьКорректировку(Реквизиты, Отказ, ТаблицаПроводкиВНА);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтразитьПринятиеКУчетуВНА(Движения, Реквизиты, ТаблицаВНА, Отказ)
	
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();
	НастройкиОтражения.Вставить("ПервоначальныеСведенияВНАМСФО", 	Истина);
	НастройкиОтражения.Вставить("ПараметрыУчетаВНАМСФО", 			Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", 		Истина);
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", 				Истина);
	НастройкиОтражения.Вставить("АрендованныеВНА",					Истина);
		
	// в учете ВНА период отчета зависит ПроводкиМСФО, в учете ФИ периодотчета обязателен
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда	
		РеквизитыВНА = ОбщегоНазначенияУХ.СкопироватьУниверсальнуюКоллекцию(Реквизиты);
		РеквизитыВНА.ПериодОтчета = Неопределено;
	Иначе 
		РеквизитыВНА = Реквизиты;
	КонецЕсли; 
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, РеквизитыВНА, ТаблицаВНА, НастройкиОтражения);
	
КонецПроцедуры

Функция ПолучитьСубконтоПоТипам()

	ТипыДляПоиска = Новый Массив;
	ТипыПоОбъектам = Новый Структура("ВНА,ФИ,Контрагенты,ИнтервалыЗадолженностей", Новый Массив, Новый Массив, Новый Массив, Новый Массив);
	
	Для каждого ТекущийТип Из Метаданные.ОпределяемыеТипы.ВНА.Тип.Типы() Цикл
		ТипыПоОбъектам.ВНА.Добавить(ТекущийТип);
		ТипыДляПоиска.Добавить(ТекущийТип);
	КонецЦикла;
	
	Для каждого ТекущийТип Из Метаданные.ОпределяемыеТипы.ФинансовыйИнструмент.Тип.Типы() Цикл
		ТипыПоОбъектам.ФИ.Добавить(ТекущийТип);
		ТипыДляПоиска.Добавить(ТекущийТип);
	КонецЦикла;
	
	ТипыПоОбъектам.Контрагенты.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипыДляПоиска.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТипыПоОбъектам.ИнтервалыЗадолженностей.Добавить(Тип("СправочникСсылка.ИнтервалыЗадолженностей"));
	ТипыДляПоиска.Добавить(Тип("СправочникСсылка.ИнтервалыЗадолженностей"));
	
	СубконтоПоТипам = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ПолучитьПоТипам(ТипыДляПоиска);
	
	Результат = Новый Структура;
	
	Для каждого ТекущийОбъект Из ТипыПоОбъектам Цикл
		СубконтоОбъекта = Новый Массив;
		Для каждого ТекущийТип Из ТекущийОбъект.Значение Цикл			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СубконтоОбъекта, СубконтоПоТипам.Получить(ТекущийТип));			
		КонецЦикла;
		Результат.Вставить(ТекущийОбъект.Ключ, СубконтоОбъекта);
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти

#Область ДанныеВНА

Функция ТекстЗапроса_втИспользуемыеВНА(НомераТаблиц)

	НомераТаблиц.Вставить("втИспользуемыеВНА", НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВНА.Дата) КАК ДатаВНА,
	|	ТаблицаВНА.ВНА КАК ВНА
	|ПОМЕСТИТЬ втИспользуемыеВНА
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК ТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ТаблицаВНА.Ссылка = втФИ.Регистратор
	|			И ТаблицаВНА.ФИ = втФИ.ФИ
	|ГДЕ
	|	втФИ.ЭтоЛизинг
	|	И ТаблицаВНА.Дата МЕЖДУ втФИ.ДатаПризнания И втФИ.ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВНА.ВНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА";

КонецФункции

Функция ТекстЗапроса_СуммыВНА(НомераТаблиц)
	
	НомераТаблиц.Вставить("втСуммыВНА", НомераТаблиц.Количество());
	
	//ТаблицаВНА.СуммаМСФО - без знака, знак определяется по операции
	//втСуммыВНА.СуммаМСФО - Сумма со знаком
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.Дата КАК Дата,
	|	ТаблицаВНА.ФИ КАК ФИ,
	|	ТаблицаВНА.ВНА КАК ВНА,
	|	втФИ.Валюта КАК Валюта,
	|	ТаблицаВНА.ВидОперации КАК ВидОперации,
	|	втФИ.ЭтоАктив КАК ЭтоАктив,
	|	ВЫБОР ТаблицаВНА.ВидОперации
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию)
	|			ТОГДА ТаблицаВНА.СуммаМСФО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга)
	|			ТОГДА ТаблицаВНА.СуммаМСФО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВозвратОбъектаЛизинга)
	|			ТОГДА -ВЫБОР
	|					КОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) > ТаблицаВНА.СуммаМСФО
	|						ТОГДА ТаблицаВНА.СуммаМСФО
	|					ИНАЧЕ ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0)
	|				КОНЕЦ
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УменьшениеЛизинга)
	|			ТОГДА -ВЫБОР
	|					КОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) > ТаблицаВНА.СуммаМСФО
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаВНА.СписатьНаВНА
	|									ТОГДА ТаблицаВНА.СуммаМСФО
	|								КОГДА ТаблицаВНА.СуммаМСФО >= ТаблицаВНА.СуммаСписанияВНА
	|									ТОГДА ТаблицаВНА.СуммаСписанияВНА
	|								ИНАЧЕ ТаблицаВНА.СуммаМСФО
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТаблицаВНА.СписатьНаВНА
	|								ТОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0)
	|							КОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) >= ТаблицаВНА.СуммаСписанияВНА
	|								ТОГДА ТаблицаВНА.СуммаСписанияВНА
	|							ИНАЧЕ ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВНА,
	|	ВЫБОР ТаблицаВНА.ВидОперации
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию)
	|			ТОГДА ТаблицаВНА.СуммаМСФО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга)
	|			ТОГДА ТаблицаВНА.СуммаМСФО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВозвратОбъектаЛизинга)
	|			ТОГДА -ВЫБОР
	|					КОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) > ТаблицаВНА.СуммаМСФО
	|						ТОГДА ТаблицаВНА.СуммаМСФО
	|					ИНАЧЕ ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0)
	|				КОНЕЦ
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УменьшениеЛизинга)
	|			ТОГДА -ВЫБОР
	|					КОГДА ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) > ТаблицаВНА.СуммаМСФО
	|						ТОГДА ТаблицаВНА.СуммаМСФО
	|					ИНАЧЕ ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0)
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаФИ,
	|	ЕСТЬNULL(втТаблицаРасчетВНА.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(втТаблицаРасчетВНА.Амортизация, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) КАК БалансоваяСтоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаВНА.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВозвратОбъектаЛизинга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(втТаблицаРасчетВНА.БалансоваяСтоимость, 0) > ТаблицаВНА.СуммаСписанияВНА
	|	КОНЕЦ КАК ЧастичноеВыбытие,
	|	ЕСТЬNULL(втТаблицаРасчетВНА.ГруппаВНА, ТаблицаВНА.ПараметрыУчетаВНА) КАК ПараметрыУчетаВНА,
	|	ВЫБОР
	|		КОГДА втФИ.ДатаПризнания <> втФИ.ДатаПризнанияДоРекласса
	|			ТОГДА втФИ.ДатаПризнания = ТаблицаВНА.Дата
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОперацияРеструктуризации,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ТаблицаВНА.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВозвратОбъектаЛизинга))
	|		ИНАЧЕ ТаблицаВНА.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга))
	|	КОНЕЦ КАК УвеличениеВНА,
	|	ТаблицаВНА.СрокПолезногоИспользованияМСФО КАК СрокПолезногоИспользованияМСФО,
	|	ТаблицаВНА.СпособНачисленияАмортизацииМСФО КАК СпособНачисленияАмортизацииМСФО,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьМСФО КАК ЛиквидационнаяСтоимостьМСФО,
	|	ТаблицаВНА.СпособОтраженияРасходовПоАмортизацииМСФО КАК СпособОтраженияРасходовПоАмортизацииМСФО,
	|	ТаблицаВНА.КоэффициентУскоренияМСФО КАК КоэффициентУскоренияМСФО,
	|	ТаблицаВНА.ПараметрыАмортизацииВНАМСФО КАК ПараметрыАмортизацииВНАМСФО,
	|	ТаблицаВНА.ПараметрВыработкиМСФО КАК ПараметрВыработкиМСФО,
	|	ТаблицаВНА.ОбъемВыработкиМСФО КАК ОбъемВыработкиМСФО
	|ПОМЕСТИТЬ втСуммыВНА
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК ТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ТаблицаВНА.Ссылка = втФИ.Регистратор
	|			И ТаблицаВНА.ФИ = втФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИспользуемыеВНА КАК втИспользуемыеВНА
	|			ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК втТаблицаРасчетВНА
	|			ПО втИспользуемыеВНА.ВНА = втТаблицаРасчетВНА.ВНА
	|		ПО ТаблицаВНА.ВНА = втИспользуемыеВНА.ВНА
	|			И ТаблицаВНА.Дата = втИспользуемыеВНА.ДатаВНА
	|ГДЕ
	|	втФИ.ЭтоЛизинг
	|	И ТаблицаВНА.Дата МЕЖДУ втФИ.ДатаПризнания И втФИ.ДатаОкончания
	|	И ТаблицаВНА.Дата МЕЖДУ &ДатаНачалаПериода И КОНЕЦПЕРИОДА(&ДатаОкончанияПериода, ДЕНЬ)";

КонецФункции

Функция ТекстЗапроса_втСуммаИзмененияВНА(НомераТаблиц)

	НомераТаблиц.Вставить("втСуммаИзмененияВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.ФИ КАК ФИ,
	|	СУММА(т.СуммаВНА) КАК СуммаВНА,
	|	СУММА(т.СуммаФИ) КАК СуммаФИ
	|ПОМЕСТИТЬ втСуммаИзмененияВНА
	|ИЗ
	|	втСуммыВНА КАК т
	|ГДЕ
	|	т.ОперацияРеструктуризации
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ФИ";

КонецФункции

Функция ТекстЗапроса_УменьшениеВНА(НомераТаблиц, Реквизиты)

	//в случае досрочного возврата:
	//1. доначислить амортизацию если начисление по дням(АлгоритмМСФО)
	//2. проводки по выбытию ВНА
	
	//Выбытие ПС = Выбытие БС * (ПС/БС)
	//Выбытие БС - выбытие по графику при частичном выбытии
	
	НомераТаблиц.Вставить("втТаблицаВыбытияВНА", НомераТаблиц.Количество());
	
	ТекстЗапроса = Новый Массив;
	
	ТекстТаблицаВыбытияВНА = 
	"ВЫБРАТЬ
	|	т.Дата КАК ДатаВыбытияВНА,
	|	т.ВНА КАК ВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВыбытиеВНА) КАК ВидОперации,
	|	т.ЧастичноеВыбытие КАК ЧастичноеВыбытиеНСБУ,
	|	т.ЧастичноеВыбытие КАК ЧастичноеВыбытиеМСФО,
	|	ВЫБОР
	|		КОГДА т.ЧастичноеВыбытие
	|			ТОГДА -т.СуммаВНА
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыбытиеСтоимостиНСБУ,
	|	ВЫБОР
	|		КОГДА т.ЧастичноеВыбытие
	|			ТОГДА -т.СуммаВНА * ВЫБОР
	|					КОГДА &АлгоритмРСБУ
	|							И ЕСТЬNULL(т.БалансоваяСтоимость, 0) <> 0
	|						ТОГДА т.ПервоначальнаяСтоимость / т.БалансоваяСтоимость
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыбытиеСтоимостиМСФО,
	|	ВЫБОР
	|		КОГДА т.ЧастичноеВыбытие
	|			ТОГДА 0
	|		КОГДА т.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВыбытиеВНА))
	|				И т.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧистаяИнвестицияВЛизинг,
	|	втСчетФИ.Счет КАК СчетРасходаМСФО,
	|	втСчетФИ.Субконто1 КАК СчетРасходаСубконто1МСФО,
	|	втСчетФИ.Субконто2 КАК СчетРасходаСубконто2МСФО,
	|	втСчетФИ.Субконто3 КАК СчетРасходаСубконто3МСФО,
	|	ЛОЖЬ КАК СторнироватьДанныеНСБУ
	|ПОМЕСТИТЬ втТаблицаВыбытияВНА
	|ИЗ
	|	втСуммыВНА КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетФИ
	|		ПО т.ФИ = втСчетФИ.ФИ
	|			И (втСчетФИ.СчетУчета В (""СчетЗадолженности""))
	|ГДЕ
	|	НЕ т.УвеличениеВНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА";
		
	ТекстЗапроса.Добавить(ТекстТаблицаВыбытияВНА);	
	Документы.ВыбытиеВНАМСФО.ДополнитьЗапросТаблицамиВыбытия(ТекстЗапроса, НомераТаблиц);	
	Возврат СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
КонецФункции

Функция ТекстЗапроса_втКурсыВводаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("втДатыВалютВНА", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втКурсыВалютВНА",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втПериодыКурсовВНА",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втФИ.ФИ КАК ФИ,
	|	втФИ.Валюта КАК Валюта,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	НАЧАЛОПЕРИОДА(втТаблицаВНА.Дата, ДЕНЬ) КАК Дата
	|ПОМЕСТИТЬ втДатыВалютВНА
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК втТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО втТаблицаВНА.ФИ = втФИ.ФИ
	|			И (НЕ втФИ.ЭтоАктив)
	|			И втТаблицаВНА.Ссылка = втФИ.Регистратор
	|			И (втТаблицаВНА.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|			И (втФИ.Валюта <> &ФункциональнаяВалюта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалют.Период КАК Период,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалютВНА
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаНачалаПериода,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					т.Валюта
	|				ИЗ
	|					втДатыВалютВНА КАК т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					&ФункциональнаяВалюта)) КАК КурсыВалют
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода
	|	И КурсыВалют.Валюта В
	|			(ВЫБРАТЬ
	|				т.Валюта
	|			ИЗ
	|				втДатыВалютВНА КАК т
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				&ФункциональнаяВалюта)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДатыВалютВНА.ФИ КАК ФИ,
	|	втДатыВалютВНА.Валюта КАК Валюта,
	|	втДатыВалютВНА.ВНА КАК ВНА,
	|	втДатыВалютВНА.Дата КАК Дата,
	|	МАКСИМУМ(КурсВД.Период) КАК ПериодВД,
	|	МАКСИМУМ(КурсФВ.Период) КАК ПериодФВ
	|ПОМЕСТИТЬ втПериодыКурсовВНА
	|ИЗ
	|	втДатыВалютВНА КАК втДатыВалютВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютВНА КАК КурсФВ
	|		ПО (КурсФВ.Валюта = &ФункциональнаяВалюта)
	|			И (КурсФВ.Период <= втДатыВалютВНА.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютВНА КАК КурсВД
	|		ПО (КурсВД.Валюта = втДатыВалютВНА.Валюта)
	|			И (КурсВД.Период <= втДатыВалютВНА.Дата)
	|
	|СГРУППИРОВАТЬ ПО
	|	втДатыВалютВНА.ВНА,
	|	втДатыВалютВНА.Дата,
	|	втДатыВалютВНА.ФИ,
	|	втДатыВалютВНА.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА,
	|	ФИ"; 

КонецФункции

Функция ТекстЗапроса_ТаблицаВводВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВводВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втТаблицаВНА.Дата КАК Период,
	|	втТаблицаВНА.ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга) КАК ПоступилВПериоде,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ПараметрыУчетаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	втТаблицаВНА.Дата КАК ДатаСостояния,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.МодернизацияВНА)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию)
	|	КОНЕЦ КАК ВидОперации,
	|	втТаблицаВНА.ПараметрыУчетаВНА.КлассВНА КАК КлассВНА,
	|	втТаблицаВНА.ВНА.ПервоначальныйИнвентарныйНомерМСФО КАК ИнвентарныйНомер,
	|	NULL КАК ИсточникВНА,
	|	NULL КАК ИсточникГруппаВНА,
	|	ЛОЖЬ КАК СписатьИсточник,
	|	NULL КАК ИсточникСостояние,
	|	&Период КАК ИсточникДатаПартии,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА 1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ИсточникКоличество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КурсФВ.Курс * КурсВД.Кратность, 0) = 0
	|			ТОГДА втТаблицаВНА.СуммаВНА
	|		ИНАЧЕ втТаблицаВНА.СуммаВНА * КурсВД.Курс * КурсФВ.Кратность / (КурсФВ.Курс * КурсВД.Кратность)
	|	КОНЕЦ КАК СуммаВВалютеУчета,
	|	втТаблицаВНА.БалансоваяСтоимость + ВЫБОР
	|		КОГДА ЕСТЬNULL(КурсФВ.Курс * КурсВД.Кратность, 0) = 0
	|			ТОГДА втТаблицаВНА.СуммаВНА
	|		ИНАЧЕ втТаблицаВНА.СуммаВНА * КурсВД.Курс * КурсФВ.Кратность / (КурсФВ.Курс * КурсВД.Кратность)
	|	КОНЕЦ КАК ПервоначальнаяСтоимость,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияОбъектовВНА.ПоДоговоруЛизинга) КАК СпособПоступления,
	|	втТаблицаВНА.СпособНачисленияАмортизацииМСФО <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВНА.ПустаяСсылка) КАК НачислятьАмортизацию,
	|	втТаблицаВНА.СпособНачисленияАмортизацииМСФО КАК СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПараметрыАмортизацииВНАМСФО КАК ПараметрыАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользованияМСФО КАК СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокПолезногоИспользованияМСФО КАК СрокИспользованияДляВычисленияАмортизации,
	|	втТаблицаВНА.БалансоваяСтоимость + ВЫБОР
	|		КОГДА ЕСТЬNULL(КурсФВ.Курс * КурсВД.Кратность, 0) = 0
	|			ТОГДА втТаблицаВНА.СуммаВНА
	|		ИНАЧЕ втТаблицаВНА.СуммаВНА * КурсВД.Курс * КурсФВ.Кратность / (КурсФВ.Курс * КурсВД.Кратность)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.ЛиквидационнаяСтоимостьМСФО КАК ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.СпособОтраженияРасходовПоАмортизацииМСФО КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизации КАК СчетНакопленнойАмортизации,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто1 КАК СчетНакопленнойАмортизацииСубконто1,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто2 КАК СчетНакопленнойАмортизацииСубконто2,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто3 КАК СчетНакопленнойАмортизацииСубконто3,
	|	втТаблицаВНА.КоэффициентУскоренияМСФО КАК КоэффициентУскорения,
	|	втТаблицаВНА.ПараметрВыработкиМСФО КАК ПараметрВыработки,
	|	втТаблицаВНА.ОбъемВыработкиМСФО КАК ОбъемПродукцииРабот
	|ИЗ
	|	втСуммыВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыКурсовВНА КАК втПериодыКурсов
	|			ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютВНА КАК КурсФВ
	|			ПО (КурсФВ.Валюта = &ФункциональнаяВалюта)
	|				И (КурсФВ.Период = втПериодыКурсов.ПериодФВ)
	|			ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютВНА КАК КурсВД
	|			ПО (КурсВД.Валюта = втПериодыКурсов.Валюта)
	|				И (КурсВД.Период = втПериодыКурсов.ПериодВД)
	|		ПО втТаблицаВНА.ВНА = втПериодыКурсов.ВНА
	|			И втТаблицаВНА.ФИ = втПериодыКурсов.ФИ
	|ГДЕ
	|	втТаблицаВНА.СуммаВНА <> 0
	|	И НЕ втТаблицаВНА.ЭтоАктив
	|	И втТаблицаВНА.УвеличениеВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаВНА.ДатаНСБУ,
	|	ИСТИНА,
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.ПараметрыУчетаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ),
	|	втТаблицаВНА.ДатаНСБУ,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию),
	|	втТаблицаВНА.ПараметрыУчетаВНА.КлассВНА,
	|	втТаблицаВНА.ВНА.ИнвентарныйНомерМСФО,
	|	NULL,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	втТаблицаВНА.ДатаНСБУ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.СчетУчетаМСФО.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА 1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	втТаблицаВНА.СуммаНСБУ,
	|	втТаблицаВНА.СуммаНСБУ,
	|	NULL,
	|	втТаблицаВНА.СпособНачисленияАмортизацииНСБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВНА.ПустаяСсылка),
	|	втТаблицаВНА.СпособНачисленияАмортизацииНСБУ,
	|	NULL,
	|	втТаблицаВНА.СрокПолезногоИспользованияНСБУ,
	|	втТаблицаВНА.СрокПолезногоИспользованияНСБУ,
	|	втТаблицаВНА.СуммаНСБУ,
	|	втТаблицаВНА.ЛиквидационнаяСтоимостьНСБУ,
	|	втТаблицаВНА.СпособОтраженияРасходовПоАмортизацииНСБУ,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизации,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто1,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто2,
	|	втТаблицаВНА.ПараметрыУчетаВНА.СчетНакопленнойАмортизацииСубконто3,
	|	втТаблицаВНА.КоэффициентУскоренияНСБУ,
	|	втТаблицаВНА.ПараметрВыработкиНСБУ,
	|	втТаблицаВНА.ОбъемВыработкиНСБУ
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК втТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО втТаблицаВНА.ФИ = втФИ.ФИ
	|			И (НЕ втФИ.ЭтоАктив)
	|			И (втТаблицаВНА.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВэксплуатацию)))
	|			И втТаблицаВНА.Ссылка = втФИ.Регистратор
	|			И (втТаблицаВНА.ДатаНСБУ МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|ГДЕ
	|	втТаблицаВНА.СуммаНСБУ <> 0";
	
КонецФункции

#КонецОбласти

#Область Проводки

#Область ТаблицыДляПроводок

Функция ТекстЗапросаФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втФИ", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Лизинг КАК ЭтоЛизинг,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Задолженность КАК ЭтоДКЗ,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПереводВКраткосрочную КАК ПереводВКраткосрочную,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив) КАК ЭтоАктив,
	|	ВЫБОР
	|		КОГДА СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВидСтавкиРасчетаПроцентов = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокОбъектовФинансовогоХарактера.ЭффективнаяСтавка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПорядокУчетаДисконта
	|	КОНЕЦ КАК ДисконтНаБалансе,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ФинансовыеИнструменты.ДатаПризнанияДоРекласса, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА СведенияФИ.ДатаПризнания
	|		ИНАЧЕ ФинансовыеИнструменты.ДатаПризнанияДоРекласса
	|	КОНЕЦ КАК ДатаПризнанияДоРекласса,
	|	СведенияФИ.Регистратор КАК Регистратор,
	|	СведенияФИ.ФИ КАК ФИ,
	|	СведенияФИ.Контрагент КАК Контрагент,
	|	СведенияФИ.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	СведенияФИ.Валюта КАК Валюта,
	|	СведенияФИ.ДатаПризнания КАК ДатаПризнания,
	|	СведенияФИ.ДатаОкончания КАК ДатаОкончания,
	|	СведенияФИ.ЭффективнаяПроцентнаяСтавка КАК ЭффективнаяПроцентнаяСтавка,
	|	СведенияФИ.ЧистаяПриведеннаяСтоимость КАК ЧистаяПриведеннаяСтоимость,
	|	ФинансовыеИнструменты.ПризнатьНовыйФинансовыйИнструментМСФО КАК ПризнатьНовыйФИ,
	|	СведенияФИ.Подразделение КАК Подразделение,
	|	СведенияФИ.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втФИ
	|ИЗ
	|	РегистрСведений.СведенияОФИ.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий) КАК СведенияФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводСведенийОФинансовыхИнструментах.ФинансовыеИнструменты КАК ФинансовыеИнструменты
	|		ПО СведенияФИ.Регистратор = ФинансовыеИнструменты.Ссылка
	|			И СведенияФИ.ФИ = ФинансовыеИнструменты.ФИ
	|ГДЕ
	|	СведенияФИ.ДатаОкончания >= &ДатаНачалаПериода
	|	И СведенияФИ.ДатаПризнания <= &ДатаОкончанияПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ,
	|	Регистратор";

КонецФункции

Функция ТекстЗапроса_СчетаПараметровУчетаФИ(НомераТаблиц)
	
	НомераТаблиц.Вставить("втСчетаФИ", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	СчетаУчетаФИ.ФИ КАК ФИ,
	|	СчетаУчетаФИ.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	СчетаУчетаФИ.СчетУчета КАК СчетУчета,
	|	СчетаУчетаФИ.Счет КАК Счет,
	|	ВЫБОР 
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоИнтервалы)
	|			ТОГДА 1
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоИнтервалы)
	|			ТОГДА 2
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоИнтервалы)
	|			ТОГДА 3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерСубконтоИнтервалы,
	|	ВЫБОР 
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА СчетаУчетаФИ.Контрагент
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоФИ)
	|			ТОГДА СчетаУчетаФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР 
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА СчетаУчетаФИ.Контрагент
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоФИ)
	|			ТОГДА СчетаУчетаФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР 
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА СчетаУчетаФИ.Контрагент
	|		КОГДА (ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО)) В (&ВидыСубконтоФИ)
	|			ТОГДА СчетаУчетаФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	СчетаУчетаФИ.Подразделение КАК Подразделение,
	|	СчетаУчетаФИ.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втСчетаФИ
	|ИЗ
	|	(ВЫБРАТЬ
	|		втФИ.ФИ КАК ФИ,
	|		втФИ.Подразделение КАК Подразделение,
	|		втФИ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		втФИ.Контрагент КАК Контрагент,
	|		СчетаПараметровФИ.Ссылка КАК ПараметрыУчетаФИ,
	|		СчетаПараметровФИ.СчетУчета КАК СчетУчета,
	|		СчетаПараметровФИ.Счет КАК Счет,
	|		СчетаПараметровФИ.Субконто1 КАК Субконто1,
	|		СчетаПараметровФИ.Субконто2 КАК Субконто2,
	|		СчетаПараметровФИ.Субконто3 КАК Субконто3
	|	ИЗ
	|		Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК СчетаПараметровФИ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|			ПО СчетаПараметровФИ.Ссылка = втФИ.ПараметрыУчетаФИ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втФИ.ФИ,
	|		втФИ.Подразделение,
	|		втФИ.НаправлениеДеятельности,
	|		втФИ.Контрагент,
	|		СчетаПараметровФИ.Ссылка,
	|		""СчетЗадолженности"",
	|		СчетаПараметровФИ.Счет,
	|		СчетаПараметровФИ.Субконто1,
	|		СчетаПараметровФИ.Субконто2,
	|		СчетаПараметровФИ.Субконто3
	|	ИЗ
	|		Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК СчетаПараметровФИ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|			ПО СчетаПараметровФИ.Ссылка = втФИ.ПараметрыУчетаФИ
	|	ГДЕ
	|		ВЫБОР СчетаПараметровФИ.СчетУчета
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|					ТОГДА НЕ втФИ.ЭтоАктив
	|							И ЛОЖЬ
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|					ТОГДА НЕ втФИ.ЭтоАктив
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|					ТОГДА втФИ.ЭтоАктив
	|							И ЛОЖЬ
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|					ТОГДА втФИ.ЭтоАктив
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втФИ.ФИ,
	|		втФИ.Подразделение,
	|		втФИ.НаправлениеДеятельности,
	|		втФИ.Контрагент,
	|		СчетаПараметровФИ.Ссылка,
	|		""СчетТрансляции"",
	|		СчетаПараметровФИ.Счет,
	|		СчетаПараметровФИ.Субконто1,
	|		СчетаПараметровФИ.Субконто2,
	|		СчетаПараметровФИ.Субконто3
	|	ИЗ
	|		Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК СчетаПараметровФИ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|			ПО СчетаПараметровФИ.Ссылка = втФИ.ПараметрыУчетаФИ
	|	ГДЕ
	|		ВЫБОР СчетаПараметровФИ.СчетУчета
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|					ТОГДА втФИ.ЭтоЛизинг
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|					ТОГДА НЕ втФИ.ЭтоАктив
	|							И втФИ.ЭтоДКЗ
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|					ТОГДА втФИ.ЭтоАктив
	|							И втФИ.ЭтоДКЗ
	|				КОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|					ТОГДА НЕ втФИ.ЭтоДКЗ
	|							И НЕ втФИ.ЭтоЛизинг
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК СчетаУчетаФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто1
	|		ПО СчетаУчетаФИ.Счет = СчетаБДВидыСубконто1.Ссылка
	|			И (СчетаБДВидыСубконто1.Номер = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто2
	|		ПО СчетаУчетаФИ.Счет = СчетаБДВидыСубконто2.Ссылка
	|			И (СчетаБДВидыСубконто2.Номер = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто3
	|		ПО СчетаУчетаФИ.Счет = СчетаБДВидыСубконто3.Ссылка
	|			И (СчетаБДВидыСубконто3.Номер = 3)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетаУчетаФИ.ФИ";

КонецФункции

Функция ТекстЗапроса_ДолгосрочныеИнтервалы(НомераТаблиц)
	
	НомераТаблиц.Вставить("втДолгосрочныеИнтервалы", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.ФИ КАК ФИ
	|ПОМЕСТИТЬ втДолгосрочныеИнтервалы
	|ИЗ
	|	втСчетаФИ КАК т
	|ГДЕ
	|	т.СчетУчета В (ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный), ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный))
	|	И т.НомерСубконтоИнтервалы > 0";

КонецФункции

Функция ТекстЗапроса_втГрафикиФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втГрафики", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ГрафикиФИ.Период КАК Период,
	|	втФИ.ЭтоАктив КАК ЭтоАктив,
	|	втФИ.ЭтоЛизинг КАК ЭтоЛизинг,
	|	втФИ.ЭтоДКЗ КАК ЭтоДКЗ,
	|	втФИ.ДисконтНаБалансе КАК ДисконтНаБалансе,
	|	втФИ.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ГрафикиФИ.Период < втФИ.ДатаПризнанияДоРекласса
	|			ТОГДА -1
	|		КОГДА ГрафикиФИ.Период <= &ДатаОкончанияПредыдущегоПериода
	|			ТОГДА 1
	|		КОГДА ГрафикиФИ.Период <= &ДатаОкончанияПериода
	|			ТОГДА 2
	|		КОГДА ГрафикиФИ.Период <= &ДатаОкончанияГодаКраткосрочнойЧасти
	|			ТОГДА 3
	|		КОГДА ГрафикиФИ.Период <= втФИ.ДатаОкончания
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодПериодаОперации,
	|	ГрафикиФИ.Регистратор КАК Регистратор,
	|	ГрафикиФИ.ФИ КАК ФИ,
	|	ГрафикиФИ.АмортизацияПоправки КАК АмортизацияПоправки,
	|	ГрафикиФИ.ДенежныйПоток КАК ДенежныйПоток,
	|	ГрафикиФИ.Дисконт_Амортизация КАК Дисконт_Амортизация,
	|	ГрафикиФИ.Дисконт_Начисление КАК Дисконт_Начисление,
	|	ГрафикиФИ.Дисконт_Остаток КАК Дисконт_Остаток,
	|	ГрафикиФИ.НДС КАК НДС,
	|	ГрафикиФИ.НеарендныйПлатеж КАК НеарендныйПлатеж,
	|	ГрафикиФИ.ОсновнойДолг_Возврат КАК ОсновнойДолг_Возврат,
	|	ГрафикиФИ.ОсновнойДолг_ДолгосрочнаяЗадолженность КАК ОсновнойДолг_ДолгосрочнаяЗадолженность,
	|	ГрафикиФИ.ОсновнойДолг_Задолженность КАК ОсновнойДолг_Задолженность,
	|	ГрафикиФИ.ОсновнойДолг_Получение КАК ОсновнойДолг_Получение,
	|	ГрафикиФИ.ОсновнойДолг_Поправка КАК ОсновнойДолг_Поправка,
	|	ГрафикиФИ.ПереводВКраткосрочную КАК ПереводВКраткосрочную,
	|	ГрафикиФИ.Проценты_Задолженность КАК Проценты_Задолженность,
	|	ГрафикиФИ.Проценты_Начисление КАК Проценты_Начисление,
	|	ГрафикиФИ.Проценты_Уплата КАК Проценты_Уплата,
	|	ГрафикиФИ.ЭСП_ОсновнойДолг_Задолженность КАК ЭСП_ОсновнойДолг_Задолженность,
	|	ГрафикиФИ.ЭСП_Проценты_Задолженность КАК ЭСП_Проценты_Задолженность,
	|	ГрафикиФИ.ЭСП_Проценты_Начисление КАК ЭСП_Проценты_Начисление,
	|	ГрафикиФИ.ЭСП_Проценты_Уплата КАК ЭСП_Проценты_Уплата
	|ПОМЕСТИТЬ втГрафикиФИ
	|ИЗ
	|	РегистрСведений.ГрафикиФИ КАК ГрафикиФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ГрафикиФИ.Регистратор = втФИ.Регистратор
	|			И ГрафикиФИ.ФИ = втФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДолгосрочныеИнтервалы КАК втДолгосрочныеИнтервалы
	|		ПО (втФИ.ФИ = втДолгосрочныеИнтервалы.ФИ)";
	
КонецФункции

Функция ТекстЗапроса_ОбъектыПоФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втОбъектыПоФИ",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втСчета",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втОстатки",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втРаспределение",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ОбъектыПоФИ.ФИ КАК ФИ,
	|	ОбъектыПоФИ.Объект КАК Объект
	|ПОМЕСТИТЬ втОбъектыПоФИ
	|ИЗ
	|	РегистрСведений.ОбъектыПоФИ КАК ОбъектыПоФИ
	|ГДЕ
	|	ОбъектыПоФИ.ФИ В
	|			(ВЫБРАТЬ
	|				т.ФИ
	|			ИЗ
	|				втФИ КАК т)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектыПоФИ.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.Ссылка) КАК Счет,
	|	СчетаБД.Ссылка КАК СчетБД
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	ПланСчетов.МСФО.ВидыСубконто КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СчетаБД КАК СчетаБД
	|		ПО т.Ссылка = СчетаБД.СчетСсылка
	|ГДЕ
	|	т.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ОбъектыСтроительства), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ОС), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.НМА), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.СправочникНоменклатура))
	|	И СчетаБД.Владелец = &ПланСчетовМСФО
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаБД.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МСФООстатки.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА МСФООстатки.Субконто1 В
	|				(ВЫБРАТЬ
	|					т.Объект
	|				ИЗ
	|					втОбъектыПоФИ КАК т)
	|			ТОГДА МСФООстатки.Субконто1
	|		КОГДА МСФООстатки.Субконто2 В
	|				(ВЫБРАТЬ
	|					т.Объект
	|				ИЗ
	|					втОбъектыПоФИ КАК т)
	|			ТОГДА МСФООстатки.Субконто2
	|		КОГДА МСФООстатки.Субконто3 В
	|				(ВЫБРАТЬ
	|					т.Объект
	|				ИЗ
	|					втОбъектыПоФИ КАК т)
	|			ТОГДА МСФООстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Объект,
	|	МСФООстатки.Субконто1 КАК Субконто1,
	|	МСФООстатки.Субконто2 КАК Субконто2,
	|	МСФООстатки.Субконто3 КАК Субконто3,
	|	ВЫБОР
	|		КОГДА МСФООстатки.Счет.Валютный
	|			ТОГДА МСФООстатки.СуммаВВалютеОстаток
	|		ИНАЧЕ МСФООстатки.СуммаВВалютеУчетаОстаток
	|	КОНЕЦ КАК СуммаВВалюте,
	|	МСФООстатки.Валюта КАК Валюта
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&ГраницаДоДокумента,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И ВЫБОР
	|					КОГДА Субконто1 В
	|							(ВЫБРАТЬ
	|								т.Объект
	|							ИЗ
	|								втОбъектыПоФИ КАК т)
	|						ТОГДА ИСТИНА
	|					КОГДА Субконто2 В
	|							(ВЫБРАТЬ
	|								т.Объект
	|							ИЗ
	|								втОбъектыПоФИ КАК т)
	|						ТОГДА ИСТИНА
	|					КОГДА Субконто3 В
	|							(ВЫБРАТЬ
	|								т.Объект
	|							ИЗ
	|								втОбъектыПоФИ КАК т)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК МСФООстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА МСФООстатки.Счет.Валютный
	|				ТОГДА МСФООстатки.СуммаВВалютеОстаток
	|			ИНАЧЕ МСФООстатки.СуммаВВалютеУчетаОстаток
	|		КОНЕЦ > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСчета.СчетБД КАК Счет,
	|	втОстатки.Валюта КАК Валюта,
	|	втОстатки.Объект КАК Объект,
	|	втОстатки.Субконто1 КАК Субконто1,
	|	втОстатки.Субконто2 КАК Субконто2,
	|	втОстатки.Субконто3 КАК Субконто3,
	|	втОбъектыПоФИ.ФИ КАК ФИ,
	|	(втОстатки.Счет, ЕСТЬNULL(втОстатки.Валюта, НЕОПРЕДЕЛЕНО), ЕСТЬNULL(втОстатки.Субконто1, НЕОПРЕДЕЛЕНО), ЕСТЬNULL(втОстатки.Субконто2, НЕОПРЕДЕЛЕНО), ЕСТЬNULL(втОстатки.Субконто3, НЕОПРЕДЕЛЕНО)) В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			т.Счет,
	|			ЕСТЬNULL(т.Валюта, НЕОПРЕДЕЛЕНО),
	|			ЕСТЬNULL(т.Субконто1, НЕОПРЕДЕЛЕНО),
	|			ЕСТЬNULL(т.Субконто2, НЕОПРЕДЕЛЕНО),
	|			ЕСТЬNULL(т.Субконто3, НЕОПРЕДЕЛЕНО)
	|		ИЗ
	|			втОстатки КАК т
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыПоФИ КАК втОбъекты
	|				ПО
	|					т.Объект = втОбъекты.Объект
	|						И втОбъекты.ФИ = втОбъектыПоФИ.ФИ) КАК СтрокаОстатка,
	|	втОстатки.СуммаВВалюте КАК СуммаВВалюте
	|ПОМЕСТИТЬ втРаспределение
	|ИЗ
	|	втОстатки КАК втОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыПоФИ КАК втОбъектыПоФИ
	|		ПО втОстатки.Объект = втОбъектыПоФИ.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчета КАК втСчета
	|		ПО втОстатки.Счет = втСчета.Счет";
		
КонецФункции

Функция ТекстЗапроса_ЗадолженностьПоИнтервалам(НомераТаблиц)

	НомераТаблиц.Вставить("втИнтервалыВозможныПересечения",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИнтервалы",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втДатыИнтерваловПоГрафику", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втОперацииИнтервалов",			НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	Интервалы.Ссылка КАК Интервал,
	|	ВЫБОР
	|		КОГДА Интервалы.ДоМесяц = 0
	|			ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, ДЕНЬ, Интервалы.До), ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, МЕСЯЦ, Интервалы.ДоМесяц), ДЕНЬ)
	|	КОНЕЦ КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА Интервалы.ОтМесяц = 0
	|			ТОГДА КОНЕЦПЕРИОДА(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, ДЕНЬ, Интервалы.От), ДАТАВРЕМЯ(1, 1, 1)), ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, МЕСЯЦ, Интервалы.ОтМесяц), ДАТАВРЕМЯ(1, 1, 1)), ДЕНЬ)
	|	КОНЕЦ КАК ДатаНачала
	|ПОМЕСТИТЬ втИнтервалыВозможныПересечения
	|ИЗ
	|	Справочник.ИнтервалыЗадолженностей КАК Интервалы
	|ГДЕ
	|	Интервалы.ВидИнтервала = ЗНАЧЕНИЕ(Перечисление.ВидыИнтервалов.СрокПогашенияПоФИ)
	|	И НЕ Интервалы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Интервалы.Интервал КАК Интервал,
	|	Интервалы.ДатаОкончания КАК ДатаОкончания,
	|	МАКСИМУМ(ЕСТЬNULL(ПересекающийНачалоИнтервал.ДатаОкончания, Интервалы.ДатаНачала)) КАК ДатаНачала
	|ПОМЕСТИТЬ втИнтервалы
	|ИЗ
	|	втИнтервалыВозможныПересечения КАК Интервалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнтервалыВозможныПересечения КАК ПересекающийНачалоИнтервал
	|		ПО Интервалы.Интервал <> ПересекающийНачалоИнтервал.Интервал
	|			И Интервалы.ДатаНачала < ПересекающийНачалоИнтервал.ДатаОкончания
	|			И Интервалы.ДатаНачала > ПересекающийНачалоИнтервал.ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	Интервалы.Интервал,
	|	Интервалы.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втГрафикиФИ.ФИ КАК ФИ,
	|	втИнтервалы.Интервал КАК Интервал,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втГрафикиФИ.Период <= втИнтервалы.ДатаНачала
	|				ТОГДА втГрафикиФИ.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаНачала,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втГрафикиФИ.Период <= втИнтервалы.ДатаОкончания
	|				ТОГДА втГрафикиФИ.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаОкончания
	|ПОМЕСТИТЬ втДатыИнтерваловПоГрафику
	|ИЗ
	|	втГрафикиФИ КАК втГрафикиФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнтервалы КАК втИнтервалы
	|		ПО втГрафикиФИ.Период <= втИнтервалы.ДатаОкончания
	|			И (втГрафикиФИ.КодПериодаОперации В (1, 2, 3, 4))
	|			И (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	втГрафикиФИ.ФИ,
	|	втИнтервалы.Интервал
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втГрафикиФИ.Период >= втИнтервалы.ДатаНачала
	|				ТОГДА втГрафикиФИ.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДатыГрафикаДляИнтервалов.ФИ КАК ФИ,
	|	втДатыГрафикаДляИнтервалов.Интервал КАК Интервал,
	|	втДатыГрафикаДляИнтервалов.ДатаНачала КАК ДатаНачалаИнтервала,
	|	втДатыГрафикаДляИнтервалов.ДатаОкончания КАК ДатаОкончанияИнтервала,
	|	СтрокаГрафикаНачало.Валюта КАК Валюта,
	|	СтрокаГрафикаНачало.ЭтоАктив КАК ЭтоАктив,
	|	ЕСТЬNULL(СтрокаГрафикаНачало.ОсновнойДолг_Задолженность, 0) - ЕСТЬNULL(СтрокаГрафикаОкончание.ОсновнойДолг_Задолженность, 0) КАК ИзменениеЗадолженности,
	|	ВЫБОР
	|		КОГДА втФИ.ПереводВКраткосрочную
	|			ТОГДА ДОБАВИТЬКДАТЕ(втФИ.ДатаОкончания, ГОД, -1) >= &ДатаОкончанияПериода
	|		ИНАЧЕ втДатыГрафикаДляИнтервалов.ДатаОкончания > &ДатаОкончанияГодаКраткосрочнойЧасти
	|	КОНЕЦ КАК ЭтоДолгосрочнаяЧасть,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА втФИ.ПереводВКраткосрочную
	|					ТОГДА ДОБАВИТЬКДАТЕ(втФИ.ДатаОкончания, ГОД, -1) >= &ДатаОкончанияПериода
	|				ИНАЧЕ втДатыГрафикаДляИнтервалов.ДатаОкончания > &ДатаОкончанияГодаКраткосрочнойЧасти
	|			КОНЕЦ
	|			ТОГДА ВЫБОР
	|					КОГДА СтрокаГрафикаНачало.ЭтоАктив
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СтрокаГрафикаНачало.ЭтоАктив
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетЗадолженности
	|ПОМЕСТИТЬ втОперацииИнтервалов
	|ИЗ
	|	втДатыИнтерваловПоГрафику КАК втДатыГрафикаДляИнтервалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втГрафикиФИ КАК СтрокаГрафикаНачало
	|		ПО втДатыГрафикаДляИнтервалов.ФИ = СтрокаГрафикаНачало.ФИ
	|			И втДатыГрафикаДляИнтервалов.ДатаНачала = СтрокаГрафикаНачало.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ втГрафикиФИ КАК СтрокаГрафикаОкончание
	|		ПО втДатыГрафикаДляИнтервалов.ФИ = СтрокаГрафикаОкончание.ФИ
	|			И втДатыГрафикаДляИнтервалов.ДатаОкончания = СтрокаГрафикаОкончание.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО втДатыГрафикаДляИнтервалов.ФИ = втФИ.ФИ";

КонецФункции

Функция ТекстЗапроса_ОстаткиДоРеструктуризации(НомераТаблиц)

	НомераТаблиц.Вставить("втПредыдущиеСведенияФИ",						НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втДатаОстатковДоРеструктуризации",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втОстаткиНаСчетахУчетаДоРеструктуризации",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втФИ.ДатаПризнания КАК ДатаПризнанияФИ,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Лизинг КАК ЭтоЛизинг,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Задолженность КАК ЭтоДКЗ,
	|	СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив) КАК ЭтоАктив,
	|	ВЫБОР
	|		КОГДА СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВидСтавкиРасчетаПроцентов = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокОбъектовФинансовогоХарактера.ЭффективнаяСтавка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СведенияФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПорядокУчетаДисконта
	|	КОНЕЦ КАК ДисконтНаБалансе,
	|	СведенияФИ.Регистратор КАК Регистратор,
	|	СведенияФИ.ФИ КАК ФИ,
	|	СведенияФИ.Контрагент КАК Контрагент,
	|	СведенияФИ.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	СведенияФИ.Валюта КАК Валюта,
	|	СведенияФИ.ДатаПризнания КАК ДатаПризнания,
	|	СведенияФИ.ДатаОкончания КАК ДатаОкончания,
	|	СведенияФИ.ЭффективнаяПроцентнаяСтавка КАК ЭффективнаяПроцентнаяСтавка,
	|	СведенияФИ.ЧистаяПриведеннаяСтоимость КАК ЧистаяПриведеннаяСтоимость
	|ПОМЕСТИТЬ втПредыдущиеСведенияФИ
	|ИЗ
	|	РегистрСведений.СведенияОФИ.СрезПоследних(
	|			ДОБАВИТЬКДАТЕ(&ДатаНачалаПериода, СЕКУНДА, -1),
	|			Организация = &Организация
	|				И Сценарий = &Сценарий) КАК СведенияФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО СведенияФИ.ФИ = втФИ.ФИ
	|			И (втФИ.ПризнатьНовыйФИ)
	|			И (втФИ.ДатаПризнания >= &ДатаНачалаПериода)
	|			И (втФИ.ДатаПризнания <= &ДатаОкончанияПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ГрафикиФИ.Период) КАК ДатаОстатков,
	|	ГрафикиФИ.Регистратор КАК Регистратор,
	|	ГрафикиФИ.ФИ КАК ФИ,
	|	втПредыдущиеСведенияФИ.ЭтоАктив КАК ЭтоАктив,
	|	втПредыдущиеСведенияФИ.ДатаПризнанияФИ КАК ДатаПризнанияФИ,
	|	втПредыдущиеСведенияФИ.Валюта КАК Валюта,
	|	втПредыдущиеСведенияФИ.Контрагент КАК Контрагент,
	|	втПредыдущиеСведенияФИ.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	втПредыдущиеСведенияФИ.ДисконтНаБалансе КАК ДисконтНаБалансе
	|ПОМЕСТИТЬ втДатаОстатковДоРеструктуризации
	|ИЗ
	|	втПредыдущиеСведенияФИ КАК втПредыдущиеСведенияФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиФИ КАК ГрафикиФИ
	|		ПО втПредыдущиеСведенияФИ.ДатаПризнанияФИ >= ГрафикиФИ.Период
	|			И втПредыдущиеСведенияФИ.ФИ = ГрафикиФИ.ФИ
	|			И втПредыдущиеСведенияФИ.Регистратор = ГрафикиФИ.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикиФИ.ФИ,
	|	ГрафикиФИ.Регистратор,
	|	втПредыдущиеСведенияФИ.Контрагент,
	|	втПредыдущиеСведенияФИ.ЭтоАктив,
	|	втПредыдущиеСведенияФИ.ДатаПризнанияФИ,
	|	втПредыдущиеСведенияФИ.Валюта,
	|	втПредыдущиеСведенияФИ.ПараметрыУчетаФИ,
	|	втПредыдущиеСведенияФИ.ДисконтНаБалансе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредыдущиеСведенияФИ.ДатаПризнанияФИ КАК ДатаПризнанияФИ,
	|	втПредыдущиеСведенияФИ.Валюта КАК Валюта,
	|	ГрафикиФИ.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СчетаУчетаФИ.СчетУчета = ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|				ТОГДА ВЫБОР
	|						КОГДА втПредыдущиеСведенияФИ.ДисконтНаБалансе = ИСТИНА
	|							ТОГДА ГрафикиФИ.ЭСП_Проценты_Задолженность
	|						ИНАЧЕ ГрафикиФИ.Проценты_Задолженность
	|					КОНЕЦ
	|			КОГДА СчетаУчетаФИ.СчетУчета В (ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный), ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный))
	|				ТОГДА 0
	|			КОГДА СчетаУчетаФИ.СчетУчета В (ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный), ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный))
	|				ТОГДА ГрафикиФИ.ОсновнойДолг_Задолженность
	|			КОГДА СчетаУчетаФИ.СчетУчета = ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДисконтаБалансовый)
	|				ТОГДА ГрафикиФИ.Дисконт_Остаток
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(18, 2)) КАК Сумма,
	|	ГрафикиФИ.ФИ КАК ФИ,
	|	СчетаУчетаФИ.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА втПредыдущиеСведенияФИ.Контрагент
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоФИ)
	|			ТОГДА втПредыдущиеСведенияФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА втПредыдущиеСведенияФИ.Контрагент
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоФИ)
	|			ТОГДА втПредыдущиеСведенияФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоКонтрагенты)
	|			ТОГДА втПредыдущиеСведенияФИ.Контрагент
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоФИ)
	|			ТОГДА втПредыдущиеСведенияФИ.ФИ
	|		ИНАЧЕ СчетаУчетаФИ.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	втПредыдущиеСведенияФИ.ЭтоАктив КАК ЭтоАктив
	|ПОМЕСТИТЬ втОстаткиНаСчетахУчетаДоРеструктуризации
	|ИЗ
	|	втДатаОстатковДоРеструктуризации КАК втПредыдущиеСведенияФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиФИ КАК ГрафикиФИ
	|		ПО втПредыдущиеСведенияФИ.ДатаОстатков = ГрафикиФИ.Период
	|			И втПредыдущиеСведенияФИ.ФИ = ГрафикиФИ.ФИ
	|			И втПредыдущиеСведенияФИ.Регистратор = ГрафикиФИ.Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК СчетаУчетаФИ
	|		ПО втПредыдущиеСведенияФИ.ПараметрыУчетаФИ = СчетаУчетаФИ.Ссылка
	|			И (СчетаУчетаФИ.СчетУчета В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.АктивыОбязательства)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто1
	|		ПО (СчетаУчетаФИ.Счет = СчетаБДВидыСубконто1.Ссылка)
	|			И (СчетаБДВидыСубконто1.Номер = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто2
	|		ПО (СчетаУчетаФИ.Счет = СчетаБДВидыСубконто2.Ссылка)
	|			И (СчетаБДВидыСубконто2.Номер = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто3
	|		ПО (СчетаУчетаФИ.Счет = СчетаБДВидыСубконто3.Ссылка)
	|			И (СчетаБДВидыСубконто3.Номер = 3)" 

КонецФункции

#КонецОбласти

Функция ТекстЗапроса_Проводки(НомераТаблиц)
		
	ТекстПроводки = Новый Массив;	
	НомераТаблиц.Вставить("ТаблицаПроводок", НомераТаблиц.Количество());
	
	#Область Проводки_Начисление
	ТекстПроводки.Добавить(ТекстЗапроса_НачислениеПроцентов(НомераТаблиц));
	#КонецОбласти
	
	#Область Проводки_ДопРасходы
	// проводки по переносу доп.расходов на счет ФИ отражаются стандартно СторноФИ
	ТекстПроводки.Добавить(ТекстЗапроса_ДопРасходСуммаБезНДС(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ДопРасходНДС(НомераТаблиц));	
	#КонецОбласти
	
	#Область Проводки_Реструктуризация
	ТекстПроводки.Добавить(ТекстЗапроса_СписаниеПриРеструктуризации(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ПризнаниеПриРеструктуризации(НомераТаблиц));
	#КонецОбласти
		
	#Область Проводки_Погашение
	ТекстПроводки.Добавить(ТекстЗапроса_ПолучениеДолга(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ПогашениеДолга(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ПогашениеПроцентов(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ПогашениеНеарендногоПлатежа(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ПогашениеНДС(НомераТаблиц));
	#КонецОбласти
	
	#Область Проводки_Дисконт
	ТекстПроводки.Добавить(ТекстЗапроса_НачислениеДисконта(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_АмортизацияДисконтаНаБалансе(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_АмортизацияДисконта(НомераТаблиц));
	#КонецОбласти
	
	#Область Проводки_СрокиЗадолженности
	//ТекстПроводки.Добавить(ТекстЗапроса_ПереводВКраткосрочную(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_РеклассПоИнтервалам(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_РаскрытиеМАП(НомераТаблиц));
	#КонецОбласти
	
	#Область Проводки_ДКЗ
	ТекстПроводки.Добавить(ТекстЗапроса_ПризнаниеДКЗ(НомераТаблиц));	
	ТекстПроводки.Добавить(ТекстЗапроса_СписаниеАвансаПоНДС(НомераТаблиц));
	#КонецОбласти
	
	#Область Проводки_ВНА
	ТекстПроводки.Добавить(ТекстЗапроса_УвеличениеВНА(НомераТаблиц));
	ТекстПроводки.Добавить(ТекстЗапроса_ЗачетАвансовогоПлатежа(НомераТаблиц));
	//ТекстПроводки.Добавить(ТекстЗапроса_НДСПоАвансовомуПлатежу(НомераТаблиц));
	#КонецОбласти

	Разделитель = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	Возврат СтрСоединить(ТекстПроводки, Разделитель);
	
КонецФункции

#Область Проводки_Начисление

Функция ТекстЗапроса_НачислениеПроцентов(НомераТаблиц)

	//** распределение по договорам

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	ВЫБОР
	|		КОГДА т.ДисконтНаБалансе = ИСТИНА
	|			ТОГДА т.ЭСП_Проценты_Начисление
	|		ИНАЧЕ т.Проценты_Начисление
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаПоПроцентам)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаПоПроцентам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеПроцентов) КАК ВидОперации
	|ПОМЕСТИТЬ втТаблицаПроводок
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2";
	
КонецФункции

#КонецОбласти

#Область Проводки_Реструктуризация

Функция ТекстЗапроса_СписаниеПриРеструктуризации(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.ДатаПризнанияФИ КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбесценения)
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ""Счет""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбесценения)
	|	КОНЕЦ КАК СчетКт,
	|	т.Счет КАК Счет,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноПриРеструктуризации) КАК ВидОперации	
	|ИЗ
	|	втОстаткиНаСчетахУчетаДоРеструктуризации КАК т";
	
КонецФункции

Функция ТекстЗапроса_ПризнаниеПриРеструктуризации(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.ОсновнойДолг_Получение - ЕСТЬNULL(втСуммаИзмененияВНА.СуммаВНА, 0) КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ""СчетЗадолженности""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбесценения)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбесценения)
	|		ИНАЧЕ ""СчетЗадолженности""
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеПриРеструктуризации) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО т.ФИ = втФИ.ФИ
	|			И т.Период = втФИ.ДатаПризнания
	|			И (втФИ.ПризнатьНовыйФИ)
	|			И (втФИ.ДатаПризнания >= &ДатаНачалаПериода)
	|			И (втФИ.ДатаПризнания <= &ДатаОкончанияПериода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСуммаИзмененияВНА КАК втСуммаИзмененияВНА
	|		ПО (втФИ.ФИ = втСуммаИзмененияВНА.ФИ)";
	
КонецФункции

#КонецОбласти

#Область Проводки_ДопРасходы

Функция ТекстЗапроса_ДопРасходСуммаБезНДС(НомераТаблиц)
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДополнительныеРасходы.Дата < втФИ.ДатаПризнания
	|			ТОГДА втФИ.ДатаПризнания
	|		ИНАЧЕ ДополнительныеРасходы.Дата
	|	КОНЕЦ КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	ДополнительныеРасходы.ФИ КАК ФИ,
	|	ДополнительныеРасходы.СуммаВВалюте КАК Сумма,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ""СчетЗадолженности""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА НЕ втФИ.ЭтоАктив
	|			ТОГДА ""СчетЗадолженности""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ДополнительныеРасходыСумма) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ДополнительныеРасходы КАК ДополнительныеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ДополнительныеРасходы.ФИ = втФИ.ФИ
	|			И ДополнительныеРасходы.Ссылка = втФИ.Регистратор
	|			И (ДополнительныеРасходы.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|			И (ДополнительныеРасходы.СуммаВВалюте <> 0)
	|			И (втФИ.ЭтоЛизинг)";
	
КонецФункции

Функция ТекстЗапроса_ДопРасходНДС(НомераТаблиц)
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДополнительныеРасходы.Дата < втФИ.ДатаПризнания
	|			ТОГДА втФИ.ДатаПризнания
	|		ИНАЧЕ ДополнительныеРасходы.Дата
	|	КОНЕЦ КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	ДополнительныеРасходы.ФИ КАК ФИ,
	|	ДополнительныеРасходы.НДСВВалюте КАК Сумма,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ""СчетТрансляции""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА НЕ втФИ.ЭтоАктив
	|			ТОГДА ""СчетТрансляции""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЗачетПервоначальногоАвансаНДС) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ДополнительныеРасходы КАК ДополнительныеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ДополнительныеРасходы.ФИ = втФИ.ФИ
	|			И ДополнительныеРасходы.Ссылка = втФИ.Регистратор
	|			И (ДополнительныеРасходы.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|			И (ДополнительныеРасходы.НДСВВалюте <> 0)";
	
КонецФункции

#КонецОбласти

#Область Проводки_Погашение

//Распределение оплат(для обязательств):	
//
//1. ФИ
//	Дт СчетПроцентов 				Кт СчетаТрансляцииОплат 	- (признание расходов) перенос оплаты (на СчетПроцентов) со счетов трансляции оплат(проценты+задолженность)
//	Дт АвансПоНДС 					Кт СчетаТрансляцииНДС 		- (признание расходов) погашение НДС ФИ(если дебиторская/кредиторская задолженность)
//	Дт СчетЗадолженности 			Кт СчетПроцентов 			- (Регл ФИ) погашение основного долга ФИ	
//
//в результате на СчетПроцентов перенесена оплата
//
//2. Лизинг
//	Дт СчетНачисленияПлатежа 		Кт СчетаТрансляцииОплат 	- (признание расходов) перенос оплаты (на СчетНачисленияПлатежа) со счетов трансляции оплат(проценты+задолженность+НачислениеНДС)	
//	Дт СчетЗадолженности 			Кт СчетНачисленияПлатежа 	- (Регл ФИ) погашение основного долга ФИ
//	Дт СчетПроцентов 				Кт СчетНачисленияПлатежа 	- (Регл ФИ) погашение процентов ФИ
//	Дт СчетНеарендногоПлатежа 		Кт СчетНачисленияПлатежа 	- (Регл ФИ) погашение неарендного компонента ФИ
//	Дт АвансПоНДС 					Кт СчетНачисленияПлатежа 	- (Регл ФИ) погашение НДС ФИ(если дебиторская/кредиторская задолженность)
//
//в результате СчетНачисленияПлатежа закрыт(остаток стал равен 0)

Функция ТекстЗапроса_ПолучениеДолга(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.ОсновнойДолг_Получение КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|		КОГДА т.ЭтоЛизинг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ВЫБОР
	|					КОГДА т.ЭтоЛизинг
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.ОсновнойДолг_Получение <> 0
	|	И НЕ т.ЭтоДКЗ
	|	И НЕ т.ЭтоЛизинг";
	
КонецФункции

Функция ТекстЗапроса_ПогашениеДолга(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.ОсновнойДолг_Возврат - т.Дисконт_Начисление КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ВЫБОР
	|					КОГДА т.ЭтоЛизинг
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|		КОГДА т.ЭтоЛизинг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПогашениеОсновногоДолга) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.ОсновнойДолг_Возврат <> 0
	|	И НЕ т.ЭтоДКЗ";
	
КонецФункции

Функция ТекстЗапроса_ПогашениеПроцентов(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	ВЫБОР
	|		КОГДА т.ДисконтНаБалансе = ИСТИНА
	|			ТОГДА т.ЭСП_Проценты_Уплата
	|		ИНАЧЕ т.Проценты_Уплата
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА НЕ т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|		КОГДА т.ЭтоЛизинг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКраткосрочныхПроцентов)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПогашениеПроцентов) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.ЭтоЛизинг";
	
КонецФункции

Функция ТекстЗапроса_ПогашениеНеарендногоПлатежа(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.НеарендныйПлатеж КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетСписанияНеарендногоПлатежа)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетСписанияНеарендногоПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВыделениеНеарендногоКомпонента) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.ЭтоЛизинг
	|	И т.НеарендныйПлатеж <> 0";
	
КонецФункции

Функция ТекстЗапроса_ПогашениеНДС(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.НДС КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.НачислениеПлатежаПоНДС) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.ЭтоЛизинг
	|	И т.НДС <> 0";
	
КонецФункции

#КонецОбласти

#Область Проводки_Дисконт

Функция ТекстЗапроса_НачислениеДисконта(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	ВЫБОР
	|		КОГДА т.Дисконт_Начисление > 0
	|			ТОГДА т.Дисконт_Начисление
	|		ИНАЧЕ -т.Дисконт_Начисление
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоРасход
	|			ТОГДА т.СчетФР
	|		ИНАЧЕ т.СчетФИ
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоРасход
	|			ТОГДА т.СчетФИ
	|		ИНАЧЕ т.СчетФР
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.НачислениеДисконтаФИ) КАК ВидОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		т.Период КАК Период,
	|		т.Валюта КАК Валюта,
	|		т.ФИ КАК ФИ,
	|		т.Дисконт_Начисление КАК Дисконт_Начисление,
	|		т.ЭтоАктив = (т.Дисконт_Начисление > 0) КАК ЭтоРасход,
	|		ВЫБОР
	|			КОГДА т.ДисконтНаБалансе = ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДисконтаБалансовый)
	|			ИНАЧЕ ""СчетЗадолженности""
	|		КОНЕЦ КАК СчетФИ,
	|		ВЫБОР
	|			КОГДА т.ЭтоАктив = (т.Дисконт_Начисление > 0)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОсновной)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОсновной)
	|		КОНЕЦ КАК СчетФР
	|	ИЗ
	|		втГрафикиФИ КАК т
	|	ГДЕ
	|		т.КодПериодаОперации = 2
	|		И т.Дисконт_Начисление <> 0) КАК т";
	
КонецФункции

Функция ТекстЗапроса_АмортизацияДисконтаНаБалансе(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.Дисконт_Амортизация КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДисконтаБалансовый)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОсновной)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОсновной)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДисконтаБалансовый)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.АмортизацияПоправки) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.Дисконт_Амортизация <> 0
	|	И т.ДисконтНаБалансе = ИСТИНА";
	
КонецФункции

Функция ТекстЗапроса_АмортизацияДисконта(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.Дисконт_Амортизация КАК Сумма,
	|	""Счет"" КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАмортизацииПоправки) КАК СчетКт,
	|	СчетВспомогательныйЗабалансовый.Счет КАК Счет,
	|	СчетВспомогательныйЗабалансовый.Субконто1 КАК Субконто1,
	|	СчетВспомогательныйЗабалансовый.Субконто2 КАК Субконто2,
	|	СчетВспомогательныйЗабалансовый.Субконто3 КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.АмортизацияПоправки) КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетВспомогательныйЗабалансовый
	|		ПО (СчетВспомогательныйЗабалансовый.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ВспомогательныйЗабалансовый))
	|ГДЕ
	|	т.КодПериодаОперации = 2
	|	И т.Дисконт_Амортизация <> 0
	|	И НЕ т.ЭтоЛизинг
	|	И т.ДисконтНаБалансе = ЛОЖЬ";
	
КонецФункции

#КонецОбласти

#Область Проводки_СрокиЗадолженности

Функция ТекстЗапроса_РеклассПоИнтервалам(НомераТаблиц)
	
	//срочность задолженности(ЭтоДолгосрочнаяЧасть) определяется по "ВидФИ.ПереводВКраткосрочную"
	//срочность задолженности определяется из 
	//если на счете длгФИ есть субконто интервалы - рекласс интервалов с крФИ на длгФИ(по интервалам)
	//если на счете длгФИ нет субконто интервалы - рекласс с крФИ на длгФИ(рекласс долгосрочной задолженности)
	//если на счете крФИ и длгФИ есть субконто интервалы - рекласс интервалов c крФИ на длгФИ
	//если на счете крФИ нет субконто интервалы - рекласс не делаем(с крФИ на крФИ)
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассПоИнтервалам)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, ЧАС, 23)
	|		ИНАЧЕ &ДатаНачалаГодаКраткосрочнойЧасти
	|	КОНЕЦ КАК Период,
	|	втОперацииИнтервалов.Валюта КАК Валюта,
	|	втОперацииИнтервалов.ФИ КАК ФИ,
	|	ВЫБОР
	|		КОГДА ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассПоИнтервалам)
	|			ТОГДА втОперацииИнтервалов.ИзменениеЗадолженности
	|		ИНАЧЕ -втОперацииИнтервалов.ИзменениеЗадолженности
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""Счет""
	|		ИНАЧЕ ""СчетЗадолженности""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""СчетЗадолженности""
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетКт,
	|	втСчетаФИ.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 1
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 2
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 3
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 0
	|				И ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассПоИнтервалам)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассификацияДолгосрочнойЗадолженности)
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 0
	|				И ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРеклассаПоИнтервалам)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРеклассификацииДолгосрочнойЗадолженности)
	|		ИНАЧЕ ВидыОпераций.Ссылка
	|	КОНЕЦ КАК ВидОперации
	|ИЗ
	|	втОперацииИнтервалов КАК втОперацииИнтервалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыОпераций КАК ВидыОпераций
	|		ПО (ВидыОпераций.Ссылка В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассПоИнтервалам), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРеклассаПоИнтервалам)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетаФИ
	|		ПО втОперацииИнтервалов.ФИ = втСчетаФИ.ФИ
	|			И втОперацииИнтервалов.СчетЗадолженности = втСчетаФИ.СчетУчета
	|ГДЕ
	|	втОперацииИнтервалов.ИзменениеЗадолженности <> 0
	|	И ВЫБОР
	|			КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 0
	|				ТОГДА втОперацииИнтервалов.ЭтоДолгосрочнаяЧасть
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
КонецФункции

Функция ТекстЗапроса_РаскрытиеМАП(НомераТаблиц)
	 
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РаскрытиеМинимальныхПлатежей)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончанияПериода, ЧАС, 23)
	|		ИНАЧЕ &ДатаНачалаГодаКраткосрочнойЧасти
	|	КОНЕЦ КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыОпераций.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РаскрытиеМинимальныхПлатежей)
	|				ТОГДА т.ДенежныйПоток
	|			ИНАЧЕ -т.ДенежныйПоток
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""Счет""
	|		ИНАЧЕ ""ЗабалансовыйКорр""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""ЗабалансовыйКорр""
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетКт,
	|	втСчетаФИ.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 1
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 2
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 3
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	ВидыОпераций.Ссылка КАК ВидОперации
	|ИЗ
	|	втГрафикиФИ КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОперацииИнтервалов КАК втОперацииИнтервалов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыОпераций КАК ВидыОпераций
	|			ПО (ВидыОпераций.Ссылка В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РаскрытиеМинимальныхПлатежей), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРаскрытияМинимальныхПлатежей)))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетаФИ
	|			ПО втОперацииИнтервалов.ФИ = втСчетаФИ.ФИ
	|				И (втСчетаФИ.СчетУчета В (ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРаскрытияМинимальныхПлатежей)))
	|				И (втСчетаФИ.Счет <> ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка))
	|				И втСчетаФИ.НомерСубконтоИнтервалы > 0
	|		ПО т.ФИ = втОперацииИнтервалов.ФИ
	|			И (т.Период МЕЖДУ втОперацииИнтервалов.ДатаНачалаИнтервала И втОперацииИнтервалов.ДатаОкончанияИнтервала)
	|			И (т.ЭтоЛизинг)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ФИ,
	|	ВидыОпераций.Ссылка,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 1
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 3
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втСчетаФИ.НомерСубконтоИнтервалы = 2
	|			ТОГДА втОперацииИнтервалов.Интервал
	|		ИНАЧЕ втСчетаФИ.Субконто2
	|	КОНЕЦ,
	|	т.Валюта,
	|	втСчетаФИ.Счет,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""Счет""
	|		ИНАЧЕ ""ЗабалансовыйКорр""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втОперацииИнтервалов.ЭтоАктив
	|			ТОГДА ""ЗабалансовыйКорр""
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ";
	
КонецФункции

#КонецОбласти

#Область Проводки_ДКЗ

Функция ТекстЗапроса_ПризнаниеДКЗ(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	ОсновнойДолгФИ.Дата КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	втФИ.ФИ КАК ФИ,
	|	ОсновнойДолгФИ.Получение КАК Сумма,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|		КОГДА ОсновнойДолгФИ.Счет = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОсновной)
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА НЕ втФИ.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|		КОГДА ОсновнойДолгФИ.Счет = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОсновной)
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетКт,
	|	ОсновнойДолгФИ.Счет КАК Счет,
	|	ОсновнойДолгФИ.Субконто1 КАК Субконто1,
	|	ОсновнойДолгФИ.Субконто2 КАК Субконто2,
	|	ОсновнойДолгФИ.Субконто3 КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ОсновнойДолг КАК ОсновнойДолгФИ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ОсновнойДолгФИ.ФИ = втФИ.ФИ
	|			И ОсновнойДолгФИ.Ссылка = втФИ.Регистратор
	|			И (втФИ.ЭтоДКЗ)
	|			И (ОсновнойДолгФИ.Получение <> 0)
	|			И (ОсновнойДолгФИ.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)";
	
КонецФункции

Функция ТекстЗапроса_СписаниеАвансаПоНДС(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	ОсновнойДолг.Дата КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	втФИ.ФИ КАК ФИ,
	|	ОсновнойДолг.НДС КАК Сумма,
	|	ВЫБОР
	|		КОГДА ОсновнойДолг.Счет = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОсновной)
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса) КАК СчетКт,
	|	ОсновнойДолг.Счет КАК Счет,
	|	ОсновнойДолг.Субконто1 КАК Субконто1,
	|	ОсновнойДолг.Субконто2 КАК Субконто2,
	|	ОсновнойДолг.Субконто3 КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СписаниеАвансаПоНДС) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ОсновнойДолг КАК ОсновнойДолг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ОсновнойДолг.ФИ = втФИ.ФИ
	|			И (втФИ.ЭтоДКЗ)
	|			И ОсновнойДолг.Ссылка = втФИ.Регистратор
	|			И (ОсновнойДолг.НДС <> 0)
	|			И (ОсновнойДолг.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)";
	
КонецФункции

#КонецОбласти

#Область Проводки_ВНА

Функция ТекстЗапроса_УвеличениеВНА(НомераТаблиц)
	
	Возврат
	"ВЫБРАТЬ
	|	т.Дата КАК Период,
	|	т.Валюта КАК Валюта,
	|	т.ФИ КАК ФИ,
	|	т.СуммаВНА КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваКраткосрочный)
	|		ИНАЧЕ ""Счет""
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ""Счет""
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваКраткосрочный)
	|	КОНЕЦ КАК СчетКт,
	|	т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости КАК Счет,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто1.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоВНА)
	|			ТОГДА т.ВНА
	|		ИНАЧЕ т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто2.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоВНА)
	|			ТОГДА т.ВНА
	|		ИНАЧЕ т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СчетаБДВидыСубконто3.ВидСубконтоСсылка, НЕОПРЕДЕЛЕНО) В (&ВидыСубконтоВНА)
	|			ТОГДА т.ВНА
	|		ИНАЧЕ т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3
	|	КОНЕЦ КАК Субконто3,
	|	ВЫБОР
	|		КОГДА т.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеИнвестицийВАренду)
	|		КОГДА т.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УвеличениеЛизинга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.МодернизацияВНА)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию)
	|	КОНЕЦ КАК ВидОперации
	|ИЗ
	|	втСуммыВНА КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто1
	|		ПО т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости = СчетаБДВидыСубконто1.Ссылка
	|			И (СчетаБДВидыСубконто1.Номер = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто2
	|		ПО т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости = СчетаБДВидыСубконто2.Ссылка
	|			И (СчетаБДВидыСубконто2.Номер = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто3
	|		ПО т.ПараметрыУчетаВНА.СчетУчетаПервоначальнойСтоимости = СчетаБДВидыСубконто3.Ссылка
	|			И (СчетаБДВидыСубконто3.Номер = 3)
	|ГДЕ
	|	т.УвеличениеВНА";
	
КонецФункции

Функция ТекстЗапроса_ЗачетАвансовогоПлатежа(НомераТаблиц)
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежи.Дата < втФИ.ДатаПризнания
	|			ТОГДА втФИ.ДатаПризнания
	|		ИНАЧЕ АвансовыеПлатежи.Дата
	|	КОНЕЦ КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	АвансовыеПлатежи.ФИ КАК ФИ,
	|	АвансовыеПлатежи.СуммаВВалюте - АвансовыеПлатежи.НДСВВалюте - АвансовыеПлатежи.НеарендныйПлатеж КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа) КАК СчетДт,
	|	""СчетЗадолженности"" КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЗачетПервоначальногоАвансаСуммаБезНДС) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.АвансовыеПлатежи КАК АвансовыеПлатежи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО АвансовыеПлатежи.ФИ = втФИ.ФИ
	|			И АвансовыеПлатежи.Ссылка = втФИ.Регистратор
	|			И (АвансовыеПлатежи.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|			И (втФИ.ЭтоЛизинг)
	|			И (втФИ.ЭтоАктив)";
	
КонецФункции

Функция ТекстЗапроса_НДСПоАвансовомуПлатежу(НомераТаблиц)
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежи.Дата < втФИ.ДатаПризнания
	|			ТОГДА втФИ.ДатаПризнания
	|		ИНАЧЕ АвансовыеПлатежи.Дата
	|	КОНЕЦ КАК Период,
	|	втФИ.Валюта КАК Валюта,
	|	АвансовыеПлатежи.ФИ КАК ФИ,
	|	АвансовыеПлатежи.НДСВВалюте КАК Сумма,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втФИ.ЭтоАктив
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияАванса)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетНачисленияПлатежа)
	|	КОНЕЦ КАК СчетКт,
	|	NULL КАК Счет,
	|	NULL КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЗачетПервоначальногоАвансаНДС) КАК ВидОперации
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.АвансовыеПлатежи КАК АвансовыеПлатежи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО АвансовыеПлатежи.ФИ = втФИ.ФИ
	|			И АвансовыеПлатежи.Ссылка = втФИ.Регистратор
	|			И (АвансовыеПлатежи.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)
	|			И (втФИ.ЭтоЛизинг)";
	
КонецФункции

#КонецОбласти

#Область ПроверкиУвеличениеВНА

Функция ТекстЗапроса_втТаблицаВНА_Ввод(НомераТаблиц)

	НомераТаблиц.Вставить("втТаблицаВНА_Ввод", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ПараметрыУчетаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникВНА
	|ПОМЕСТИТЬ втТаблицаВНА_Ввод
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК втТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО втТаблицаВНА.ФИ = втФИ.ФИ
	|			И (НЕ втФИ.ЭтоАктив)
	|			И втТаблицаВНА.Ссылка = втФИ.Регистратор
	|			И (втТаблицаВНА.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВэксплуатацию)))
	|			И (втТаблицаВНА.Дата МЕЖДУ &ДатаНачалаПериода И &ДатаОкончанияПериода)";	

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибокВНА(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА(НомераТаблиц, "втТаблицаВНА_Ввод"));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ОбъектыНеДолжныБытьПринятыКУчету(НомераТаблиц));
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

#КонецОбласти

#Область ПреобразованиеПроводок

Функция ТекстЗапроса_КурсыВалют(НомераТаблиц)
	
	НомераТаблиц.Вставить("втТребуемыеКурсыФИ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втПериодыКурсовФИ", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втКурсыВалютФИ", 	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(т.Период, ДЕНЬ) КАК Период,
	|	ЕСТЬNULL(ПарыВалют.Валюта, т.Валюта) КАК Валюта
	|ПОМЕСТИТЬ втТребуемыеКурсыФИ
	|ИЗ
	|	втТаблицаПроводок КАК т,
	|	(ВЫБРАТЬ
	|		ВЫРАЗИТЬ(&ФункциональнаяВалюта КАК Справочник.Валюты) КАК Валюта
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫРАЗИТЬ(&ФункциональнаяВалюта КАК Справочник.Валюты)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		NULL) КАК ПарыВалют
	|ГДЕ
	|	т.Валюта <> &ФункциональнаяВалюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(КурсыВалют.Период), МАКСИМУМ(КурсыВалютНаНачало.Период)) КАК ПериодКурса,
	|	втТребуемыеКурсы.Валюта КАК Валюта,
	|	втТребуемыеКурсы.Период КАК Период
	|ПОМЕСТИТЬ втПериодыКурсовФИ
	|ИЗ
	|	втТребуемыеКурсыФИ КАК втТребуемыеКурсы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втТребуемыеКурсы.Валюта = КурсыВалют.Валюта
	|			И втТребуемыеКурсы.Период >= КурсыВалют.Период
	|			И (КурсыВалют.Период > &ДатаНачалаПериода)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаНачалаПериода, ) КАК КурсыВалютНаНачало
	|		ПО втТребуемыеКурсы.Валюта = КурсыВалютНаНачало.Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	втТребуемыеКурсы.Период,
	|	втТребуемыеКурсы.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	ПериодКурса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПериодыКурсов.ПериодКурса КАК ПериодКурса,
	|	втПериодыКурсов.Валюта КАК Валюта,
	|	втПериодыКурсов.Период КАК Период,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалютФИ
	|ИЗ
	|	втПериодыКурсовФИ КАК втПериодыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втПериодыКурсов.Валюта = КурсыВалют.Валюта
	|			И втПериодыКурсов.ПериодКурса = КурсыВалют.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта,
	|	Период";

КонецФункции

Функция ТекстЗапроса_ТаблицаПроводки(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПроводки", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаПроводок.Период КАК Период,
	|	ТаблицаПроводок.ФИ КАК ФИ,
	|	ЕСТЬNULL(втСчетДт.Подразделение, втСчетКт.Подразделение) КАК ПодразделениеДт,
	|	ЕСТЬNULL(втСчетДт.НаправлениеДеятельности, втСчетКт.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|	ЕСТЬNULL(втСчетКт.Подразделение, втСчетДт.Подразделение) КАК ПодразделениеКт,
	|	ЕСТЬNULL(втСчетКт.НаправлениеДеятельности, втСчетДт.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|	ТаблицаПроводок.Валюта КАК Валюта,
	|	ТаблицаПроводок.Сумма КАК СуммаВВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.Валюта В (&ФункциональнаяВалюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|				ИЛИ КотировкаВД.Валюта ЕСТЬ NULL
	|				ИЛИ КотировкаФВ.Валюта ЕСТЬ NULL
	|			ТОГДА ТаблицаПроводок.Сумма
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаПроводок.Сумма * КотировкаВД.Курс * КотировкаФВ.Кратность / (КотировкаФВ.Курс * КотировкаВД.Кратность) КАК ЧИСЛО(18, 2))
	|	КОНЕЦ КАК СуммаВФункциональнойВалюте,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Счет
	|		ИНАЧЕ ЕСТЬNULL(втСчетДт.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка))
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто1
	|		ИНАЧЕ втСчетДт.Субконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто2
	|		ИНАЧЕ втСчетДт.Субконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто3
	|		ИНАЧЕ втСчетДт.Субконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Счет
	|		ИНАЧЕ ЕСТЬNULL(втСчетКт.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка))
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто1
	|		ИНАЧЕ втСчетКт.Субконто1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто2
	|		ИНАЧЕ втСчетКт.Субконто2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|			ТОГДА ТаблицаПроводок.Субконто3
	|		ИНАЧЕ втСчетКт.Субконто3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ТаблицаПроводок.ВидОперации КАК ВидОперации,
	|	ТаблицаПроводок.ВидОперации КАК Событие
	|ИЗ
	|	втТаблицаПроводок КАК ТаблицаПроводок
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетДт
	|		ПО ТаблицаПроводок.ФИ = втСчетДт.ФИ
	|			И ТаблицаПроводок.СчетДт = втСчетДт.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетКт
	|		ПО ТаблицаПроводок.ФИ = втСчетКт.ФИ
	|			И ТаблицаПроводок.СчетКт = втСчетКт.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютФИ КАК КотировкаВД
	|		ПО НАЧАЛОПЕРИОДА(ТаблицаПроводок.Период, ДЕНЬ) = КотировкаВД.Период
	|			И ТаблицаПроводок.Валюта = КотировкаВД.Валюта
	|			И (ТаблицаПроводок.Валюта <> &ФункциональнаяВалюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалютФИ КАК КотировкаФВ
	|		ПО НАЧАЛОПЕРИОДА(ТаблицаПроводок.Период, ДЕНЬ) = КотировкаФВ.Период
	|			И (КотировкаФВ.Валюта = &ФункциональнаяВалюта)
	|			И (ТаблицаПроводок.Валюта <> &ФункциональнаяВалюта)
	|ГДЕ
	|	ТаблицаПроводок.Сумма <> 0
	|	И ВЫБОР
	|			КОГДА ТаблицаПроводок.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассПоИнтервалам), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРеклассаПоИнтервалам), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РаскрытиеМинимальныхПлатежей), ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРаскрытияМинимальныхПлатежей))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЕСТЬNULL(ВЫБОР
	|						КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|							ТОГДА ТаблицаПроводок.Счет
	|						ИНАЧЕ втСчетДт.Счет
	|					КОНЕЦ, НЕОПРЕДЕЛЕНО) <> ЕСТЬNULL(ВЫБОР
	|						КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|							ТОГДА ТаблицаПроводок.Счет
	|						ИНАЧЕ втСчетКт.Счет
	|					КОНЕЦ, НЕОПРЕДЕЛЕНО)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПроводок.Период,
	|	ТаблицаПроводок.ВидОперации";

КонецФункции

Функция ТекстЗапроса_ОшибкиПроводок(НомераТаблиц)

	НомераТаблиц.Вставить("ОшибкиПроводок", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	ТаблицаПроводок.СчетДт КАК СчетДт,
	|	ТаблицаПроводок.СчетКт КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|			ТОГДА ЕСТЬNULL(ТаблицаПроводок.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|		ИНАЧЕ втСчетДт.ФИ ЕСТЬ NULL
	|	КОНЕЦ КАК ОшибкаСчетаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|			ТОГДА ЕСТЬNULL(ТаблицаПроводок.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|		ИНАЧЕ втСчетКт.ФИ ЕСТЬ NULL
	|	КОНЕЦ КАК ОшибкаСчетаКт,
	|	ТаблицаПроводок.ФИ КАК ФИ,
	|	ТаблицаПроводок.ВидОперации КАК ВидОперации,
	|	втФИ.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	втФИ.Регистратор КАК Регистратор,
	|	ТаблицаПроводок.Период КАК Период
	|ИЗ
	|	втТаблицаПроводок КАК ТаблицаПроводок
	|		ЛЕВОЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО ТаблицаПроводок.ФИ = втФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетДт
	|		ПО ТаблицаПроводок.ФИ = втСчетДт.ФИ
	|			И ТаблицаПроводок.СчетДт = втСчетДт.СчетУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетКт
	|		ПО ТаблицаПроводок.ФИ = втСчетКт.ФИ
	|			И ТаблицаПроводок.СчетКт = втСчетКт.СчетУчета
	|ГДЕ
	|	(ВЫБОР
	|				КОГДА ТаблицаПроводок.СчетДт = ""Счет""
	|					ТОГДА ЕСТЬNULL(ТаблицаПроводок.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|				КОГДА ТаблицаПроводок.СчетДт = ""ЗабалансовыйКорр""
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ втСчетДт.ФИ ЕСТЬ NULL
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ТаблицаПроводок.СчетКт = ""Счет""
	|					ТОГДА ЕСТЬNULL(ТаблицаПроводок.Счет, ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|				КОГДА ТаблицаПроводок.СчетКт = ""ЗабалансовыйКорр""
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ втСчетКт.ФИ ЕСТЬ NULL
	|			КОНЕЦ)";
	
КонецФункции

#КонецОбласти 

#КонецОбласти 

#КонецЕсли