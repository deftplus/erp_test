#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("НематериальныеАктивы");
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ФинансовыеИнструменты");
	МеханизмыДокумента.Добавить("ОбесценениеВНА");
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, Регистры);
		
		// ОС
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса, Регистры);
		
		// НМА
		ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМестоУчетаНМА(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаНМА(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаНМАУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПараметрыАмортизацииНМАУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСтоимостьНМА(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаАмортизацияНМА(ТекстыЗапроса, Регистры);
		
		// Аренда
		ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
		
		// Общее
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА
		ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		
		//Обесценение ВНА
		ТекстЗапросаСоставЕГДС(ТекстыЗапроса, Регистры);
		ТекстЗапросаОбесценениеВНА(ТекстыЗапроса, Регистры);
		
		ВводОстатковВнеоборотныхАктивовЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Команда = Документы.ИзменениеПараметровОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		СписокОпераций = Новый Массив;
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе);
		СписокОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда, "ХозяйственнаяОперация", СписокОпераций, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

// Возвращает таблицу значения для заполнения документа ввода остатков данными, полученными по данным оперативного учета.
// 
// Параметры:
// 	Дата - Дата - Дата, на которую формируются остатки.
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой выбираются остатки
// 	Организации - Массив - Массив, содержащий элементы типа СправочникСсылка.Организации, для которых выбираются остатки.
// 	ДополнительныйОтбор - Структура - Структура, содержащая ключ и значение дополнительного отбора.
// 	ПараметрыЗаполненияОстатков - Структура - Структура, содержащая дополнительные параметры необходимые, для заполнения остатков.
// Возвращаемое значение:
// 	ТаблицаЗначений, Неопределено - Если для данной хозяйственной операции есть данные, для нее возвращается таблица значений с значениями заполнения.
//
Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт
	
	Результат = ВводОстатковВнеоборотныхАктивовЛокализация.ОстаткиПоТипуОперации(
					Дата, 
					ХозяйственнаяОперация, 
					Организации, 
					ДополнительныйОтбор, 
					ПараметрыЗаполненияОстатков);

	Возврат Результат;
			
КонецФункции

// Возвращает массив в котором содержатся имена полей при изменении которых, необходимо генерировать новый документ ввода остатков.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой определяются ключевые поля.
// Возвращаемое значение:
// 	Массив - Массив содержащий имена полей.
//
Функция КлючевыеПоляРеглУчетаПоТипуОперации(ХозяйственнаяОперация) Экспорт
	
	КлючевыеРеквизиты = Новый Массив;
	КлючевыеРеквизиты.Добавить("Организация");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств Тогда
		
		КлючевыеРеквизиты.Добавить("Местонахождение");
		КлючевыеРеквизиты.Добавить("Контрагент");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		КлючевыеРеквизиты.Добавить("Местонахождение");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		КлючевыеРеквизиты.Добавить("ВидАктивов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе Тогда
		
		КлючевыеРеквизиты.Добавить("Местонахождение");
		КлючевыеРеквизиты.Добавить("Контрагент");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		КлючевыеРеквизиты.Добавить("Контрагент");
		КлючевыеРеквизиты.Добавить("РасчетыМеждуОрганизациямиАрендатор");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом Тогда
		
		КлючевыеРеквизиты.Добавить("Контрагент");
		КлючевыеРеквизиты.Добавить("Местонахождение");
		КлючевыеРеквизиты.Добавить("ГруппаФинансовогоУчета");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		КлючевыеРеквизиты.Добавить("Партнер");
		КлючевыеРеквизиты.Добавить("Контрагент");
		КлючевыеРеквизиты.Добавить("Местонахождение");
		КлючевыеРеквизиты.Добавить("ГруппаФинансовогоУчета");
		
	КонецЕсли;
	
	Возврат КлючевыеРеквизиты;
		
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = ВнеоборотныеАктивыВызовСервера.ПредставлениеВводаОстатков(Данные);
	Если Не ПустаяСтрока(Представление) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ХозяйственнаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ХозяйственнаяОперация = ВнеоборотныеАктивыВызовСервера.ОперацияВводаОстатков(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("Отбор") Тогда
		Параметры.Отбор.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ХозяйственнаяОперация = ВнеоборотныеАктивыВызовСервера.ОперацияВводаОстатков(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		ХозяйственнаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ОсновныеСредства";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "НематериальныеАктивы";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ВложенияВоВнеоборотныеАктивы";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "АрендованныеОсновныеСредства";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ПредметыЛизингаЗаБалансом";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "РасчетыПоДоговорамАренды";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ПереданныеВАрендуОсновныеСредства";
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ЗаполнитьРеквизитыВзависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизитовОбъекта) Экспорт

	ИзмененныеРеквизиты = Новый Массив;
	
	ЭтоНМА = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъекта Цикл
		
		Если ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Ложь
			ИЛИ ПараметрыРеквизита.Свойство = "ТолькоПросмотр" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Очистить";
		ИначеЕсли ПараметрыРеквизита.Свойство = "Видимость" И ПараметрыРеквизита.Значение = Истина Тогда
			Действие = "Заполнить";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Действие = "Очистить"
			И (ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьУУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьУУ"
				ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияУУ") Тогда
			
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
		
		
		Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаУУ" Тогда
			
			ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюУУ" Тогда
			
			ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				Истина,
				Ложь,
				ИзмененныеРеквизиты);
				
		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииУУ" Тогда
			
			ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.СпособыНачисленияАмортизацииНМА.Линейный, 
											Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
			ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ЗначениеРеквизита,
				Неопределено,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияУУ" Тогда
			
			ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				ОбъектИлиДанныеСтроки.СрокИспользованияБУ,
				0,
				ИзмененныеРеквизиты);

		ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияУУ" Тогда
		
			ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
				ОбъектИлиДанныеСтроки,
				ПараметрыРеквизита.ИмяРеквизита, 
				Действие, 
				1,
				0,
				ИзмененныеРеквизиты);
				
		КонецЕсли;
		
		ВводОстатковВнеоборотныхАктивовЛокализация.ЗаполнитьРеквизитыВзависимостиОтСвойств(
			ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты);
			
	КонецЦикла; 
	
	Возврат СтрСоединить(ИзмененныеРеквизиты, ",");
	
КонецФункции

// Вспомогательные реквизиты.
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 -
//  ЭтоДанныеСтроки - Булево -
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура - 
Функция ВспомогательныеРеквизиты(Объект, ЭтоДанныеСтроки) Экспорт

	ВспомогательныеРеквизиты = Новый Структура;
	ВспомогательныеРеквизиты.Вставить("ОтражатьВРеглУчете", Объект.ОтражатьВРеглУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУпрУчете", Объект.ОтражатьВУпрУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУиНУ", Объект.ОтражатьВБУиНУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВОперативномУчете", Объект.ОтражатьВОперативномУчете);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВУУ", Объект.ОтражатьВУУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУ", Объект.ОтражатьВБУ);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВНУ", Объект.ОтражатьВНУ);
	ВспомогательныеРеквизиты.Вставить("Организация", Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
	ВспомогательныеРеквизиты.Вставить("Дата", Объект.Дата);
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", '000101010000');
	ВспомогательныеРеквизиты.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", РеглУчетСервер.ВедетсяРеглУчет(Объект.Дата));
	ВспомогательныеРеквизиты.Вставить("ПорядокУчетаВНА", НастройкиНалоговУчетныхПолитик.ПорядокУчетаВНА(Объект.Организация, Объект.Дата));
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРаздельныйУчетВНАПоНалогообложению", ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетВНАПоНалогообложению"));
	ВспомогательныеРеквизиты.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018", ВнеоборотныеАктивы.ИспользуетсяУчетАрендыПоФСБУ25_2018(Объект.Организация, Объект.Дата));
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ВалютыСовпадают", ВалютаУпр = ВалютаРегл);
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДополнитьВспомогательныеРеквизиты(Объект, ЭтоДанныеСтроки, ВспомогательныеРеквизиты);
	
	ВспомогательныеРеквизиты = Новый ФиксированнаяСтруктура(ВспомогательныеРеквизиты);
	
	Если ЭтоДанныеСтроки Тогда
		Возврат ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, Объект, ВспомогательныеРеквизиты);
	КонецЕсли; 
	
	Возврат ВспомогательныеРеквизиты;
	
КонецФункции

Функция ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ИсходныеВспомогательныеРеквизиты) Экспорт

	ВспомогательныеРеквизиты = Новый Структура(ИсходныеВспомогательныеРеквизиты);
	
	СписокРеквизитовДоговора = "Балансодержатель,ЕстьОбеспечительныйПлатеж,ЕстьВыкупПредметовАренды,ЕстьАвансированиеВыкупнойСтоимости,ВалютаВзаиморасчетов";
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды
		И ЗначениеЗаполнено(ДанныеСтроки.Договор) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеСтроки.Договор, СписокРеквизитовДоговора);
	Иначе
		РеквизитыДоговора = Новый Структура(СписокРеквизитовДоговора);
		РеквизитыДоговора.ЕстьОбеспечительныйПлатеж = Ложь;
		РеквизитыДоговора.ЕстьВыкупПредметовАренды = Ложь;
		РеквизитыДоговора.ЕстьАвансированиеВыкупнойСтоимости = Ложь;
		РеквизитыДоговора.ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	ВспомогательныеРеквизиты.Вставить("РеквизитыДоговора", РеквизитыДоговора);
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ВспомогательныеРеквизиты);
	
	Возврат Новый ФиксированнаяСтруктура(ВспомогательныеРеквизиты);
	
КонецФункции

// Формирование списка доступных типов операций ввода начальных остатков.
//
// Параметры:
// 		СписокТиповОпераций - СписокЗначений - Возврат, Список значений операций документа.
//
Процедура ЗаполнитьСписокТиповОперацийДокумента(СписокТиповОпераций) Экспорт
	
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы);
	
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
	
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда	
		
		ВидАктива = ?(ДанныеСтроки.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР, 
						Перечисления.ВидыВнеоборотныхАктивов.НИОКР, 
						Перечисления.ВидыВнеоборотныхАктивов.НМА);
				
		ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(ВидАктива);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ПериодичностьОплат) Тогда
			ДанныеСтроки.ПериодичностьОплат = Перечисления.ПериодичностьГрафика.Месяц;
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ПериодичностьНачислений) Тогда
			ДанныеСтроки.ПериодичностьНачислений = Перечисления.ПериодичностьГрафика.Месяц;
		КонецЕсли;	
		
	КонецЕсли; 
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ГруппаФинансовогоУчета) Тогда
			ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(
													Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
		КонецЕсли;
		
		ДанныеСтроки.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
		Если Не ЗначениеЗаполнено(ДанныеСтроки.НалогообложениеНДС) Тогда
			ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Объект.Организация, Объект.Дата); 
			ДанныеСтроки.НалогообложениеНДС = ПараметрыУчетаПоОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		КонецЕсли;
		
	КонецЕсли; 
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатковВнеоборотныхАктивов2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	ВЗапросеЕстьИсточник = Истина;
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	ТекстЗапроса = Неопределено;
	СинонимТаблицыДокумента = Неопределено;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
				
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
				
	ИначеЕсли ИмяРегистра = "ДокументыПоНМА" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "АрендованныеОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		
		ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.АдаптированныйТекстЗапросаДвиженийПоРегистру(
							ИмяРегистра, ПереопределениеРасчетаПараметров, СинонимТаблицыДокумента);
		
	КонецЕсли;
				
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС"
		ИЛИ ИмяРегистра = "ДокументыПоНМА" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                               КАК Ссылка,
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.Номер                                КАК Номер,
	|	ДанныеДокумента.Организация                          КАК Организация,
	|	ДанныеДокумента.Местонахождение                      КАК Местонахождение,
	|	ДанныеДокумента.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Ответственный                        КАК Ответственный,
	|	ДанныеДокумента.Комментарий                          КАК Комментарий,
	|	ДанныеДокумента.Проведен                             КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                      КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете                   КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете                    КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ОтражатьВБУ                          КАК ОтражатьВБУ,
	|	ДанныеДокумента.ОтражатьВНУ                          КАК ОтражатьВНУ,
	|	ДанныеДокумента.ОтражатьВБУиНУ                       КАК ОтражатьВБУиНУ,
	|	ДанныеДокумента.ОтражатьВОперативномУчете            КАК ОтражатьВОперативномУчете,
	|	ДанныеДокумента.ОтражатьВУУ                          КАК ОтражатьВУУ,
	|	ДанныеДокумента.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.ВидАктивов                           КАК ВидАктивов,
	|	ДанныеДокумента.Партнер                              КАК Партнер,
	|	ДанныеДокумента.Контрагент                           КАК Контрагент,
	|	ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор   КАК РасчетыМеждуОрганизациямиАрендатор,
	|	НастройкиХозяйственныхОпераций.Ссылка                КАК НастройкаХозяйственнойОперации,
	|	&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ДобавитьВТекстЗапросаРеквизитыШапки(ТекстЗапроса, "ДанныеДокумента");
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВводОстатковВнеоборотныхАктивов2_4"));
	ЗначенияПараметровПроведения.Вставить("ДатаНачалаУчета", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Ввод остатков внеоборотных активов';
																	|en = 'OB entry: Fixed assets cost and depreciation'"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
		ЗначенияПараметровПроведения.Вставить("ИспользуетсяУчетАрендыПоФСБУ25_2018",
			ВнеоборотныеАктивы.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
			
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Контрагент                             КАК Контрагент,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                   КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	ТаблицаДокумента.Подразделение          КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.ВнеоборотныйАктив      КАК ОсновноеСредство
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И &ВидАктивов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОбъектыСтроительства))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоНМА(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоНМА";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.НематериальныйАктив    КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Местонахождение                        КАК Подразделение,
	|	&Проведен                               КАК Проведен,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	ТаблицаДокумента.ВнеоборотныйАктив      КАК НематериальныйАктив
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И &ВидАктивов = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                         КАК Регистратор,
		|	&Период                         КАК Период,
		|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
		|	&Организация                    КАК Организация,
		|	ТаблицаОС.ДатаПринятияКУчетуУУ  КАК ДатаВводаВЭксплуатациюУУ,
		|	&Ссылка                         КАК ДокументВводаВЭксплуатациюУУ,
		|	ТаблицаОС.ПорядокУчетаУУ        КАК ПорядокУчетаУУ,
		|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ТаблицаОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Ссылка                         КАК Регистратор,
		|	&Период                         КАК Период,
		|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
		|	&Организация                    КАК Организация,
		|	ТаблицаОС.ДатаПринятияКУчету    КАК ДатаВводаВЭксплуатациюУУ,
		|	&Ссылка                         КАК ДокументВводаВЭксплуатациюУУ,
		|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаУУ,
		|	ТаблицаОС.ЗалоговаяСтоимость    КАК ПервоначальнаяСтоимостьБУ,
		|	0                               КАК ПервоначальнаяСтоимостьУУ
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                                КАК Регистратор,
		|	&Период                                КАК Период,
		|	ТаблицаДокумента.НематериальныйАктив   КАК НематериальныйАктив,
		|	&Организация                           КАК Организация,
		|
		|	ТаблицаДокумента.ДатаПриобретения      КАК ДатаПриобретения,
		|	ТаблицаДокумента.ДатаПринятияКУчетуУУ  КАК ДатаПринятияКУчетуУУ,
		|
		|	&Ссылка                                КАК ДокументПринятияКУчетуУУ,
		|
		|	ТаблицаДокумента.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ТаблицаДокумента.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаМестонахождениеОС();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                        КАК Регистратор,
		|	&Период                        КАК Период,
		|	&Организация                   КАК Организация,
		|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
		|	ТаблицаОС.МОЛ                  КАК МОЛ,
		|	&Местонахождение               КАК Местонахождение,
		|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения,
		|	ТаблицаОС.АдресМестонахожденияЗначение КАК АдресМестонахожденияЗначение,
		|	&ОтражатьВРеглУчете            КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете             КАК ОтражатьВУпрУчете
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестоУчетаНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестоУчетаНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                       КАК Регистратор,
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	Таблица.НематериальныйАктив   КАК НематериальныйАктив,
	|	&Местонахождение              КАК Подразделение,
	|	&ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаПорядокУчетаОС();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                                 КАК Регистратор,
		|	&Период                                 КАК Период,
		|	&Организация                            КАК Организация,
		|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
		|	ТаблицаОС.ГруппаФинансовогоУчета        КАК ГруппаФинансовогоУчета,
		|	ТаблицаОС.НаправлениеДеятельности       КАК НаправлениеДеятельности,
		|	ТаблицаОС.ПоказательНаработки           КАК ПоказательНаработки,
		|	ТаблицаОС.ОбъемНаработки                КАК ОбъемНаработки,
		|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	Таблица.НематериальныйАктив             КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета,
	|	Таблица.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Таблица.ОбъемНаработки                  КАК ОбъемНаработки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаПорядокУчетаОСУУ();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                                          КАК Регистратор,
		|	&Период                                          КАК Период,
		|	&Организация                                     КАК Организация,
		|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
		|	ТаблицаОС.НачислятьАмортизациюУУ                 КАК НачислятьАмортизациюУУ,
		|	ТаблицаОС.СтатьяРасходовУУ                       КАК СтатьяРасходов,
		|	ТаблицаОС.АналитикаРасходовУУ                    КАК АналитикаРасходов,
		|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВУпрУчете
		|	И &ОтражатьВОперативномУчете
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Ссылка                                          КАК Регистратор,
		|	&Период                                          КАК Период,
		|	&Организация                                     КАК Организация,
		|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние,
		|	ЛОЖЬ                                             КАК НачислятьАмортизациюУУ,
		|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
		|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
		|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
		
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМАУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМАУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаПорядокУчетаНМАУУ();
	
	Если ТекстЗапроса = Неопределено Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                                          КАК Регистратор,
		|	&Период                                          КАК Период,
		|	&Организация                                     КАК Организация,
		|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету) КАК Состояние,
		|	Таблица.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) КАК НачислятьАмортизациюУУ,
		|	Таблица.СтатьяРасходовУУ                         КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходовУУ                      КАК АналитикаРасходов,
		|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
		|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
	
	КонецЕсли;

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровУУ
	|		КОГДА &Период < &ДатаНачалаУчета
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ДЕНЬ, 1)
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуУУ 
	|	КОНЕЦ                                        КАК ДатаПоследнегоИзменения,
	|	&Организация                                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.СрокИспользованияУУ                КАК СрокИспользования,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.СрокИспользованияУУОстаточный
	|		ИНАЧЕ ТаблицаОС.СрокИспользованияУУ 
	|	КОНЕЦ                                        КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ОбъемНаработкиОстаточныйУУ 
	|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
	|	КОНЕЦ                                        КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияУУ             КАК КоэффициентУскорения,
	|	ТаблицаОС.МетодНачисленияАмортизацииУУ       КАК МетодНачисленияАмортизации,
	|	ТаблицаОС.ЛиквидационнаяСтоимость            КАК ЛиквидационнаяСтоимость,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл        КАК ЛиквидационнаяСтоимостьРегл,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьУУ
	|	КОНЕЦ                                        КАК СтоимостьДляВычисленияАмортизации,
	|	ВЫБОР 
	|		КОГДА &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА 0
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииУУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУ
	|	КОНЕЦ                                        КАК СтоимостьДляВычисленияАмортизацииРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииНМАУУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииНМАУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.СрокИспользованияУУ                  КАК СрокИспользования,
	|	Таблица.КоэффициентУскоренияУУ               КАК КоэффициентУскорения,
	|	Таблица.МетодНачисленияАмортизацииУУ         КАК МетодНачисленияАмортизации,
	|	Таблица.ЛиквидационнаяСтоимость              КАК ЛиквидационнаяСтоимость,
	|	Таблица.ЛиквидационнаяСтоимостьРегл          КАК ЛиквидационнаяСтоимостьРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СтоимостьОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаСтоимостьОС();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	&Местонахождение                             КАК Подразделение,
		|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
		|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
		|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
		|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
		|	ТаблицаОС.ТекущаяСтоимостьУУ                 КАК Стоимость,
		|	ТаблицаОС.ТекущаяСтоимостьБУ                 КАК СтоимостьРегл,
		|	ТаблицаОС.РезервПереоценкиСтоимости          КАК РезервПереоценкиСтоимости,
		|	ТаблицаОС.РезервПереоценкиСтоимостиРегл      КАК РезервПереоценкиСтоимостиРегл,
		|
		|	0 КАК ПриростСтоимости,
		|	0 КАК ПриростСтоимостиРегл,
		|
		|	ВЫБОР
		|		КОГДА &РасчетыМеждуОрганизациямиАрендатор
		|			ТОГДА ТаблицаОС.ЗалоговаяСтоимость
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЗалоговаяСтоимость,
		|
		|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиОС) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
		|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУ <> 0
		|		ИЛИ ТаблицаОС.РезервПереоценкиСтоимости <> 0
		|		ИЛИ ТаблицаОС.РезервПереоценкиСтоимостиРегл <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                 КАК Подразделение,
		|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
		|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
		|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
		|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
		|	0                                            КАК Стоимость,
		|	0                                            КАК СтоимостьРегл,
		|	0                                            КАК РезервПереоценкиСтоимости,
		|	0                                            КАК РезервПереоценкиСтоимостиРегл,
		|
		|	ВЫБОР 
		|		КОГДА (ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации) > 0
		|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПриростСтоимости,
		|
		|	ВЫБОР 
		|		КОГДА (ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл) > 0
		|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПриростСтоимостиРегл,
		|
		|	0                                             КАК ЗалоговаяСтоимость,
		|
		|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиОС) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И ((ТаблицаОС.РезервПереоценкиСтоимости - ТаблицаОС.РезервПереоценкиАмортизации) > 0
		|		ИЛИ (ТаблицаОС.РезервПереоценкиСтоимостиРегл - ТаблицаОС.РезервПереоценкиАмортизацииРегл) > 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	&Местонахождение                             КАК Подразделение,
		|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
		|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
		|	НЕОПРЕДЕЛЕНО                                 КАК НаправлениеДеятельности,
		|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
		|	0                                            КАК Стоимость,
		|	0                                            КАК СтоимостьРегл,
		|	0                                            КАК РезервПереоценкиСтоимости,
		|	0                                            КАК РезервПереоценкиСтоимостиРегл,
		|	0                                            КАК ПриростСтоимости,
		|	0                                            КАК ПриростСтоимостиРегл,
		|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
		|
		|	&ИдентификаторНеиспользуемойФинЗаписи        КАК ИдентификаторФинЗаписи,
		|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО                                 КАК НастройкаХозяйственнойОперации
		|
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете";
	
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АмортизацияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаАмортизацияОС();
	
	Если ТекстЗапроса = Неопределено Тогда
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
		|	&Ссылка                                      КАК Регистратор,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	&Местонахождение                             КАК Подразделение,
		|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
		|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
		|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
		|	ТаблицаОС.НакопленнаяАмортизацияУУ           КАК Амортизация,
		|	ТаблицаОС.НакопленнаяАмортизацияБУ           КАК АмортизацияРегл,
		|	ТаблицаОС.РезервПереоценкиАмортизации        КАК РезервПереоценкиАмортизации,
		|	ТаблицаОС.РезервПереоценкиАмортизацииРегл    КАК РезервПереоценкиАмортизацииРегл,
		|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковАмортизацииОС) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
		|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
		|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0
		|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0)";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СтоимостьНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаСтоимостьНМА();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	&Местонахождение                             КАК Подразделение,
		|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
		|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
		|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
		|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
		|	Таблица.ТекущаяСтоимостьУУ                   КАК Стоимость,
		|	Таблица.ТекущаяСтоимостьБУ                   КАК СтоимостьРегл,
		|	Таблица.РезервПереоценкиСтоимости            КАК РезервПереоценкиСтоимости,
		|	Таблица.РезервПереоценкиСтоимостиРегл        КАК РезервПереоценкиСтоимостиРегл,
		|
		|	0 КАК ПриростСтоимости,
		|	0 КАК ПриростСтоимостиРегл,
		|
		|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И (Таблица.ТекущаяСтоимостьУУ <> 0
		|		ИЛИ Таблица.ТекущаяСтоимостьБУ <> 0
		|		ИЛИ Таблица.РезервПереоценкиСтоимости <> 0
		|		ИЛИ Таблица.РезервПереоценкиСтоимостиРегл <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                 КАК Подразделение,
		|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
		|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
		|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
		|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
		|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
		|	0                                            КАК Стоимость,
		|	0                                            КАК СтоимостьРегл,
		|	0                                            КАК РезервПереоценкиСтоимости,
		|	0                                            КАК РезервПереоценкиСтоимостиРегл,
		|
		|	ВЫБОР 
		|		КОГДА (Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации) > 0
		|			ТОГДА Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПриростСтоимости,
		|
		|	ВЫБОР 
		|		КОГДА (Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл) > 0
		|			ТОГДА Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПриростСтоимостиРегл,
		|
		|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И ((Таблица.РезервПереоценкиСтоимости - Таблица.РезервПереоценкиАмортизации) > 0
		|		ИЛИ (Таблица.РезервПереоценкиСтоимостиРегл - Таблица.РезервПереоценкиАмортизацииРегл) > 0)";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияНМА(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АмортизацияНМА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаТаблицаАмортизацияНМА();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
		|	&Ссылка                                      КАК Регистратор,
		|	&Период                                      КАК Период,
		|	&Организация                                 КАК Организация,
		|	&Местонахождение                             КАК Подразделение,
		|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
		|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
		|	Таблица.НаправлениеДеятельности              КАК НаправлениеДеятельности,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР)  КАК ХозяйственнаяОперация,
		|	Таблица.НакопленнаяАмортизацияУУ             КАК Амортизация,
		|	Таблица.НакопленнаяАмортизацияБУ             КАК АмортизацияРегл,
		|	Таблица.РезервПереоценкиАмортизации          КАК РезервПереоценкиАмортизации,
		|	Таблица.РезервПереоценкиАмортизацииРегл      КАК РезервПереоценкиАмортизацииРегл,
		|	Таблица.ИдентификаторСтроки                  КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковАмортизацииНМАиРасходовНаНИОКР) КАК НастройкаХозяйственнойОперации
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И &ОтражатьВОперативномУчете
		|	И (Таблица.НакопленнаяАмортизацияУУ <> 0
		|		ИЛИ Таблица.НакопленнаяАмортизацияБУ <> 0
		|		ИЛИ Таблица.РезервПереоценкиАмортизации <> 0
		|		ИЛИ Таблица.РезервПереоценкиАмортизацииРегл <> 0)";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаАрендованныеОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "АрендованныеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ КАК Стоимость,
	|	ТаблицаОС.Договор.Партнер     КАК Партнер,
	|	ТаблицаОС.Договор.Контрагент  КАК Контрагент,
	|	ТаблицаОС.Договор             КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде) КАК Состояние
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе)
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.ЗалоговаяСтоимость  КАК Стоимость,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	&Контрагент                   КАК Контрагент,
	|	ТаблицаОС.Договор             КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСЗаБалансом),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПереданныеВАрендуОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                         КАК Период,
	|	&Период                         КАК ДатаПередачи,
	|	&Организация                    КАК Организация,
	|	&Контрагент                     КАК Контрагент,
	|	ТаблицаОС.Договор               КАК Договор,
	|	ТаблицаОС.ЗалоговаяСтоимость    КАК ЗалоговаяСтоимость,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду) КАК Состояние
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаУсловияДоговоровАренды(ТекстыЗапроса, Регистры)

	ИмяРегистра = "УсловияДоговоровАренды";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                       КАК Регистратор,
	|	&Период                                       КАК Период,
	|	Расчеты.Договор                               КАК Договор,
	|	Расчеты.СуммаОбеспечительногоПлатежа          КАК СуммаОбеспечительногоПлатежа,
	|	Расчеты.СуммаУслугПоАренде                    КАК СуммаУслугПоАренде,
	|	Расчеты.СуммаВыкупаПредметовАренды            КАК СуммаВыкупаПредметовАренды,
	|	Расчеты.СуммаПроцентов                        КАК СуммаПроцентов,
	|	Расчеты.СуммаНДС                              КАК СуммаНДС,
	|	Расчеты.СтавкаНДС                             КАК СтавкаНДС,
	|	Расчеты.СрокЛет                               КАК СрокЛет,
	|	Расчеты.СрокМес                               КАК СрокМес,
	|	Расчеты.СрокДней                              КАК СрокДней,
	|	Расчеты.ДатаНачалаАренды                      КАК ДатаНачалаАренды,
	|	Расчеты.ДатаПервогоПлатежа                    КАК ДатаПервогоПлатежа,
	|	Расчеты.ДатаПервогоОбеспечительногоПлатежа    КАК ДатаПервогоОбеспечительногоПлатежа,
	|	Расчеты.ДатаВыкупа                            КАК ДатаВыкупа,
	|	Расчеты.ПроцентнаяСтавка                      КАК ПроцентнаяСтавка,
	|	Расчеты.ПериодичностьОплат                    КАК ПериодичностьОплат,
	|	Расчеты.ПериодичностьНачислений               КАК ПериодичностьНачислений,
	|	Расчеты.СтоимостьПредметовАренды              КАК СтоимостьПредметовАренды,
	|	Расчеты.ОплатаУслугиПоАренде                  КАК ОплатаУслугиПоАренде,
	|	Расчеты.НачислениеУслугиПоАренде              КАК НачислениеУслугиПоАренде,
	|	&Ссылка                                       КАК АктуальныеУсловияДоговора,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует) КАК Состояние
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
КонецПроцедуры

Функция ТекстЗапросаТаблицаГрафикОплатУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОплатУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	Расчеты.Договор                         КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.Договор.ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатеж
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатеж,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.Договор.ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатежНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатежНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата >= Расчеты.ДатаВыкупа
	|				И Расчеты.Договор.ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаГрафика.Дата < Расчеты.ДатаВыкупа
	|				И Расчеты.Договор.ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьАванс,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.Договор.ЕстьВыкупПредметовАренды
	|			ТОГДА ТаблицаГрафика.ВыкупнаяСтоимостьНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ГрафикОплатУслуг КАК ТаблицаГрафика
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		ПО Расчеты.Ссылка = ТаблицаГрафика.Ссылка
	|			И Расчеты.КодСтроки = ТаблицаГрафика.КодСтроки
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияУслугПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияУслугПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	Расчеты.Договор                         КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                     КАК Дата,
	|	ТаблицаГрафика.УслугаПоАренде           КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС        КАК УслугаПоАрендеНДС,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.Договор.ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатеж
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатеж,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.Договор.ЕстьОбеспечительныйПлатеж
	|			ТОГДА ТаблицаГрафика.ОбеспечительныйПлатежНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбеспечительныйПлатежНДС,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.ДатаВыкупа = ТаблицаГрафика.Дата
	|				И Расчеты.Договор.ЕстьВыкупПредметовАренды
	|			ТОГДА Расчеты.СуммаВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимость,
	|
	|	ВЫБОР 
	|		КОГДА Расчеты.ДатаВыкупа = ТаблицаГрафика.Дата
	|				И Расчеты.Договор.ЕстьВыкупПредметовАренды
	|			ТОГДА Расчеты.СуммаНДСВыкупаПредметовАренды
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		ПО Расчеты.Ссылка = ТаблицаГрафика.Ссылка
	|			И Расчеты.КодСтроки = ТаблицаГрафика.КодСтроки
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК ДатаИзменения,
	|	Расчеты.Договор                         КАК Договор,
	|	&Ссылка                                 КАК АктуальныеУсловияДоговора,
	|	Расчеты.ДатаВыкупа                      КАК Дата,
	|	0                                       КАК УслугаПоАренде,
	|	0                                       КАК УслугаПоАрендеНДС,
	|	0                                       КАК ОбеспечительныйПлатеж,
	|	0                                       КАК ОбеспечительныйПлатежНДС,
	|	Расчеты.СуммаВыкупаПредметовАренды      КАК ВыкупнаяСтоимость,
	|	Расчеты.СуммаНДСВыкупаПредметовАренды   КАК ВыкупнаяСтоимостьНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ГрафикНачисленияУслуг КАК ТаблицаГрафика
	|		ПО ТаблицаГрафика.Ссылка = Расчеты.Ссылка
	|			И ТаблицаГрафика.Дата = Расчеты.ДатаВыкупа
	|			И ТаблицаГрафика.КодСтроки = Расчеты.КодСтроки
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И ТаблицаГрафика.Ссылка ЕСТЬ NULL
	|	И Расчеты.СуммаВыкупаПредметовАренды <> 0
	|	И Расчеты.Договор.ЕстьВыкупПредметовАренды
	|	И Расчеты.ДатаВыкупа <> ДАТАВРЕМЯ(1, 1, 1)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоАренде(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикНачисленияПроцентовПоАренде";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК ДатаИзменения,
	|	Расчеты.Договор            КАК Договор,
	|	&Ссылка                    КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата        КАК Дата,
	|	ТаблицаГрафика.Проценты    КАК Проценты
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		ПО Расчеты.Ссылка = ТаблицаГрафика.Ссылка
	|			И Расчеты.КодСтроки = ТаблицаГрафика.КодСтроки
	|ГДЕ
	|	ТаблицаГрафика.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И &ИспользуетсяУчетАрендыПоФСБУ25_2018";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.АрендныеОбязательстваСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)            КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.АрендныеОбязательстваОстаток                                 КАК Сумма,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокУпр                              КАК СуммаУпр,
	|	ДанныеДокумента.АрендныеОбязательстваОстатокРегл                             КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.АрендныеОбязательстваОстаток <> 0
	|		ИЛИ ДанныеДокумента.АрендныеОбязательстваОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.АрендныеОбязательстваОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВыкупнаяСтоимостьСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)                КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстаток                                     КАК Сумма,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокУпр                                  КАК СуммаУпр,
	|	ДанныеДокумента.ВыкупнаяСтоимостьОстатокРегл                                 КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.ВыкупнаяСтоимостьОстаток <> 0
	|		ИЛИ ДанныеДокумента.ВыкупнаяСтоимостьОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.ВыкупнаяСтоимостьОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.НДССальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)                              КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.НДСОстаток                                                   КАК Сумма,
	|	ДанныеДокумента.НДСОстатокУпр                                                КАК СуммаУпр,
	|	ДанныеДокумента.НДСОстатокРегл                                               КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.НДСОстаток <> 0
	|		ИЛИ ДанныеДокумента.НДСОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.НДСОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПроцентыСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)                         КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.ПроцентыОстаток                                              КАК Сумма,
	|	ДанныеДокумента.ПроцентыОстатокУпр                                           КАК СуммаУпр,
	|	ДанныеДокумента.ПроцентыОстатокРегл                                          КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.ПроцентыОстаток <> 0
	|		ИЛИ ДанныеДокумента.ПроцентыОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.ПроцентыОстатокРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.УслугаПоАрендеСальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Договор                                                      КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)                   КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК РасчетныйДокумент,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов                                 КАК Валюта,
	|	
	|	ДанныеДокумента.УслугаПоАрендеОстаток                                        КАК Сумма,
	|	ДанныеДокумента.УслугаПоАрендеОстатокУпр                                     КАК СуммаУпр,
	|	ДанныеДокумента.УслугаПоАрендеОстатокРегл                                    КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.УслугаПоАрендеОстаток <> 0
	|		ИЛИ ДанныеДокумента.УслугаПоАрендеОстатокУпр <> 0
	|		ИЛИ ДанныеДокумента.УслугаПоАрендеОстатокРегл <> 0)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.Договор                                                              КАК Договор,
	|	ДанныеДокумента.ТипПлатежа                                                   КАК ТипСуммы,
	|	ДанныеДокумента.РасчетныйДокумент                                            КАК РасчетныйДокумент,
	|	Расчеты.Договор.ВалютаВзаиморасчетов                                         КАК Валюта,
	|	
	|	ДанныеДокумента.Сумма                                                        КАК Сумма,
	|	ДанныеДокумента.СуммаУпр                                                     КАК СуммаУпр,
	|	ДанныеДокумента.СуммаРегл                                                    КАК СуммаРегл,
	|	
	|	ДанныеДокумента.ИдентификаторСтроки                                          КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                                              КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АвансыПоДоговорамАренды КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		ПО Расчеты.Ссылка = ДанныеДокумента.Ссылка
	|			И Расчеты.КодСтроки = ДанныеДокумента.КодСтроки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = Расчеты.Договор.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды)
	|	И (ДанныеДокумента.Сумма <> 0
	|		ИЛИ ДанныеДокумента.СуммаУпр <> 0
	|		ИЛИ ДанныеДокумента.СуммаРегл <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                    КАК Период,
	|	ВтДанныеРасходы.Организация             КАК Организация,
	|	ВтДанныеРасходы.Подразделение           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	|	ВтДанныеРасходы.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|
	|	ВтДанныеРасходы.Сумма                   КАК СуммаСНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаБезНДС             КАК СуммаБезНДСУпр,
	|
	|	ВтДанныеРасходы.СуммаРегл               КАК СуммаСНДСРегл,
	|	ВтДанныеРасходы.СуммаРегл
	|		- ВтДанныеРасходы.НДСРегл           КАК СуммаБезНДСРегл,
	|	ВтДанныеРасходы.СуммаПР                 КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                 КАК ВременнаяРазница,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.Дата < &ДатаНачалаУчета
	|				И (ВтДанныеРасходы.Сумма < 0 ИЛИ ВтДанныеРасходы.СуммаБезНДС < 0 ИЛИ ВтДанныеРасходы.СуммаРегл < 0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|		ИНАЧЕ &ХозяйственнаяОперация                  
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаНоменклатуры,
	|	ВтДанныеРасходы.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	ВтДанныеРасходы.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|	
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Организация                                       КАК Организация,
	|	&Период                                            КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                 КАК НомерСтроки,
	|	ДанныеДокументаРасходы.Подразделение               КАК Подразделение,
	|	ДанныеДокументаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ДанныеДокументаРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.ВнеоборотныйАктив           КАК АналитикаРасходов,
	|	ДанныеДокументаРасходы.Ссылка                      КАК ДокументПоступленияРасходов,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    КАК АналитикаУчетаПартий,
	|
	|	ДанныеДокументаРасходы.Сумма                       КАК Сумма,
	|	ДанныеДокументаРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ДанныеДокументаРасходы.СуммаРегл                   КАК СуммаРегл,
	|	0                                                  КАК НДСРегл,
	|	ДанныеДокументаРасходы.СуммаПР                     КАК СуммаПР,
	|	ДанныеДокументаРасходы.СуммаВР                     КАК СуммаВР,
	|
	|	ДанныеДокументаРасходы.ИдентификаторСтроки         КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                    КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки = ДанныеДокументаРасходы.НомерСтроки
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ПрочиеРасходы""														КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)								КАК Поставщик,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)                           КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО 												            КАК СтавкаНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) =
	|	  ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	Статьи.ВидЦенностиНДС 													КАК ВидЦенности,
	|	0																		КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТКА

Функция ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                        КАК Период,
	|	&Организация                   КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)   КАК ДатаОтражения,
	|	&ХозяйственнаяОперация         КАК ХозяйственнаяОперация
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                КАК Период,
	|	&Контрагент            КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)   КАК ДатаОтражения,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТКА

Функция ТекстЗапросаСоставЕГДС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СоставЕГДС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка               КАК Регистратор,
	|	ТаблицаОС.Ссылка.Дата          КАК Период,
	|	ТаблицаОС.Ссылка.Организация   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ВнеоборотныйАктив,
	|	ТаблицаОС.ЕГДС                 КАК ЕГДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ЕГДС <> ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНМА.Ссылка              КАК Регистратор,
	|	ТаблицаНМА.Ссылка.Дата         КАК Период,
	|	ТаблицаНМА.Ссылка.Организация  КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив КАК ВнеоборотныйАктив,
	|	ТаблицаНМА.ЕГДС                КАК ЕГДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И ТаблицаНМА.ЕГДС <> ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбесценениеВНА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбесценениеВНА";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаОС.Ссылка                       КАК Регистратор,
	|	ТаблицаОС.Ссылка.Дата                  КАК Период,
	|	ТаблицаОС.Ссылка.Организация           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство             КАК ВнеоборотныйАктив,
	|	ТаблицаОС.ЕГДС                         КАК ЕГДС,
	|	&Местонахождение                       КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОбесценениеБУ                КАК ОбесценениеРегл,
	|	ТаблицаОС.ОбесценениеУУ                КАК ОбесценениеУпр,
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковОбесцененияОС) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (ТаблицаОС.ОбесценениеБУ <> 0
	|		ИЛИ ТаблицаОС.ОбесценениеУУ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаНМА.Ссылка                      КАК Регистратор,
	|	ТаблицаНМА.Ссылка.Дата                 КАК Период,
	|	ТаблицаНМА.Ссылка.Организация          КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив         КАК ВнеоборотныйАктив,
	|	ТаблицаНМА.ЕГДС                        КАК ЕГДС,
	|	&Местонахождение                       КАК Подразделение,
	|	ТаблицаНМА.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТаблицаНМА.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	ТаблицаНМА.ОбесценениеБУ               КАК ОбесценениеРегл,
	|	ТаблицаНМА.ОбесценениеУУ               КАК ОбесценениеУпр,
	|	ТаблицаНМА.ИдентификаторСтроки         КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковОбесцененияНМА) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И (ТаблицаНМА.ОбесценениеБУ <> 0
	|		ИЛИ ТаблицаНМА.ОбесценениеУУ <> 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                           КАК Организация,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности                 КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК Расчеты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыАренды КАК ДанныеДоговора
	|		ПО Расчеты.Договор = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Аналитика.Организация = &Организация
	|			И Аналитика.Контрагент = &Контрагент
	|			И Аналитика.Партнер = &Партнер
	|			И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И Аналитика.НаправлениеДеятельности = ДанныеДоговора.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Партнер",     Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Контрагент",  Запрос.Параметры.Контрагент);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ВводОстатковВнеоборотныхАктивовЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ВводОстатковВнеоборотныхАктивовЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатейИАналитик = Новый Массив;
	
	#Область ОС
	
	// СтатьяРасходовУУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.ОС";
	ПараметрыВыбора.Статья = "СтатьяРасходовУУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовУУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовУУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовУУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	#КонецОбласти
	
	#Область НМА
	
	// СтатьяРасходовУУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект.НМА";
	ПараметрыВыбора.Статья = "СтатьяРасходовУУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовУУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовУУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовУУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	#КонецОбласти
	
	//
	ВводОстатковВнеоборотныхАктивовЛокализация.ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик);
	
	Возврат ПараметрыВыбораСтатейИАналитик;
	
КонецФункции

Процедура ОбновитьДанныеВСвязаннойТаблице(ТЧ, НовыеДанные, КодСтроки) Экспорт
	
	ПоискСтрок = Новый Структура("КодСтроки", КодСтроки);
	СтрокиКУдалению = ТЧ.НайтиСтроки(ПоискСтрок);
	
	Для Каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
		ТЧ.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из НовыеДанные Цикл
		НоваяСтрока = ТЧ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.КодСтроки = КодСтроки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСуммуНДСРасчетовПоДоговорамАренды(Объект) Экспорт
	
	Для Каждого ДанныеСтроки Из Объект.РасчетыПоДоговорамАренды Цикл
		
		ПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(ДанныеСтроки.СтавкаНДС);

		ДанныеСтроки.СуммаНДСВыкупаПредметовАренды = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
			ДанныеСтроки.СуммаВыкупаПредметовАренды, ПроцентНДС, Истина);
	
		СтруктураПоиска = Новый Структура("КодСтроки", ДанныеСтроки.КодСтроки);
		СписокСтрок = Объект.ГрафикНачисленияУслуг.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаГрафика Из СписокСтрок Цикл
			СтрокаГрафика.УслугаПоАрендеНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаГрафика.УслугаПоАренде, ПроцентНДС, Истина);
			СтрокаГрафика.ОбеспечительныйПлатежНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаГрафика.ОбеспечительныйПлатеж, ПроцентНДС, Истина);
		КонецЦикла;
		
		СтруктураПоиска = Новый Структура("КодСтроки", ДанныеСтроки.КодСтроки);
		СписокСтрок = Объект.ГрафикОплатУслуг.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаГрафика Из СписокСтрок Цикл
			СтрокаГрафика.УслугаПоАрендеНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаГрафика.УслугаПоАренде, ПроцентНДС, Истина);
			СтрокаГрафика.ОбеспечительныйПлатежНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаГрафика.ОбеспечительныйПлатеж, ПроцентНДС, Истина);
			СтрокаГрафика.ВыкупнаяСтоимостьНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаГрафика.ВыкупнаяСтоимость, ПроцентНДС, Истина);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ВводОстатковВнеоборотныхАктивов2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.7.271";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("aeb2c15d-5193-4318-91d2-cf1a047e2e03");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВводОстатковВнеоборотныхАктивов2_4.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Ввод остатков внеоборотных активов"":
	|- Заполняет новые реквизиты ""ПР для вычисления амортизации"", ""Адрес местонахождения (значение)"", ""Направление деятельности"", ""Амортизационная группа"".
	|- Заполняет реквизит ""Идентификатор строки"" в табличных частях.
	|- Заполняет сведения об аренде';
	|en = 'Updates the ""OB entry: Fixed assets cost and depreciation"" documents:
	|-Fills in the new attributes ""PD for depreciation calculation"", ""Location address (value)"", ""Line of business"", ""Depreciation group"".
	|- Populates ""Line ID"" attribute in tables.
	|- Populates lease details'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.НематериальныеАктивы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ОбъектыЭксплуатации.ПолноеИмя());
	//++ Локализация
	Читаемые.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ.ПолноеИмя());
	//-- Локализация
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.ОбъектыЭксплуатации.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//++ Локализация
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.ПараметрыАмортизацииОСБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";
	//-- Локализация

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ВводОстатковВнеоборотныхАктивов2_4";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.АдресМестонахождения <> """"
	|		И (ВЫРАЗИТЬ(ДанныеДокумента.АдресМестонахожденияЗначение КАК СТРОКА(100))) = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И ТабличнаяЧасть.ОсновноеСредство.УдалитьНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ИЛИ ТабличнаяЧасть.ИдентификаторСтроки = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.ИдентификаторСтроки = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.ИдентификаторСтроки = """"
	|			ИЛИ ТабличнаяЧасть.УдалитьТипЗадолженности2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.ИдентификаторСтроки = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И ТабличнаяЧасть.НематериальныйАктив.УдалитьНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ИЛИ ТабличнаяЧасть.ИдентификаторСтроки = """"
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|	ГДЕ
	|		(НЕ ДанныеДокумента.ОтражатьВОперативномУчете
	|			И НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			И НЕ ДанныеДокумента.ОтражатьВУУ
	|
	|		ИЛИ НЕ ДанныеДокумента.ОтражатьВБУ
	|			И НЕ ДанныеДокумента.ОтражатьВНУ
	|			И ДанныеДокумента.ОтражатьВРеглУчете
	|			И ДанныеДокумента.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|			ПО (ПараметрыАмортизацииОСУУ.Регистратор = ДанныеДокумента.Ссылка)
	|				И (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство)
	|	ГДЕ
	|		(ДанныеДокумента.ЕстьИзменениеПараметровАмортизацииУУ
	|			И ДанныеДокумента.СрокИспользованияУУОстаточный <> ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации
	|		ИЛИ ДанныеДокумента.СрокИспользованияУУ <> ПараметрыАмортизацииОСУУ.СрокИспользования)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ТабличнаяЧасть
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ГрафикНачисленияУслуг КАК ГрафикНачисленияУслуг
	|			ПО (ГрафикНачисленияУслуг.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ГрафикНачисленияУслуг.КодСтроки = ТабличнаяЧасть.КодСтроки)
	|	ГДЕ
	|		ТабличнаяЧасть.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		И НЕ ТабличнаяЧасть.СтавкаНДС В (&СписокНезначащихСтавок)
	|		И (ГрафикНачисленияУслуг.УслугаПоАрендеНДС = 0
	|				И ГрафикНачисленияУслуг.УслугаПоАренде <> 0
	|			ИЛИ ГрафикНачисленияУслуг.ОбеспечительныйПлатежНДС = 0
	|				И ГрафикНачисленияУслуг.ОбеспечительныйПлатеж <> 0)
	|
	|	) КАК СписокДокументов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокНезначащихСтавок", УчетНДСУП.СписокНезначащихСтавок());
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВводОстатковВнеоборотныхАктивов2_4";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСУУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.СрокИспользования КАК СрокИспользования,
	|	ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|ГДЕ
	|	ПараметрыАмортизацииОСУУ.Регистратор = &Регистратор";
	ЗапросПараметрыАмортизацииОСУУ = Новый Запрос(ТекстЗапроса);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДанных.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДляОбработки
	|ИЗ
	|	&ТаблицаОбновляемыхДанных КАК ТаблицаДанных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	ТаблицаОбъекта.ВерсияДанных КАК ВерсияДанных
	|ПОМЕСТИТЬ ВсеОбъекты
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ТаблицаОбъекта
	|		ПО (ТаблицаОбъекта.Ссылка = СсылкиДляОбработки.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеОбъекты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТЗаблокированныеСсылки
	|ИЗ
	|	ВсеОбъекты КАК ВсеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ВсеОбъекты.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ВТЗаблокированныеДанные.Ссылка
	|			ИЗ
	|				ВТЗаблокированныеДанные КАК ВТЗаблокированныеДанные)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВсеОбъекты.Ссылка
	|ИЗ
	|	ВсеОбъекты КАК ВсеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ВсеОбъекты.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.НематериальныйАктив В
	|			(ВЫБРАТЬ
	|				ВТЗаблокированныеДанные.Ссылка
	|			ИЗ
	|				ВТЗаблокированныеДанные КАК ВТЗаблокированныеДанные)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВсеОбъекты.Ссылка
	|ИЗ
	|	ВсеОбъекты КАК ВсеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамАренды КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ВсеОбъекты.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Договор В
	|			(ВЫБРАТЬ
	|				ВТЗаблокированныеДанные.Ссылка
	|			ИЗ
	|				ВТЗаблокированныеДанные КАК ВТЗаблокированныеДанные)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	ТабличнаяЧасть.ОсновноеСредство.УдалитьНаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ТабличнаяЧасть.ОсновноеСредство.УдалитьНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка В
	|			(ВЫБРАТЬ
	|				ВсеОбъекты.Ссылка
	|			ИЗ
	|				ВсеОбъекты КАК ВсеОбъекты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НематериальныйАктив КАК НематериальныйАктив,
	|	ТабличнаяЧасть.НематериальныйАктив.УдалитьНаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ТабличнаяЧасть.НематериальныйАктив.УдалитьНаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка В
	|			(ВЫБРАТЬ
	|				ВсеОбъекты.Ссылка
	|			ИЗ
	|				ВсеОбъекты КАК ВсеОбъекты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеОбъекты.Ссылка КАК Ссылка,
	|	ВсеОбъекты.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	ВсеОбъекты КАК ВсеОбъекты
	|ГДЕ
	|	НЕ ВсеОбъекты.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТЗаблокированныеСсылки.Ссылка
	|				ИЗ
	|					ВТЗаблокированныеСсылки КАК ВТЗаблокированныеСсылки)";
	
	ЧитаемыеДанные = Новый Массив;
	ЧитаемыеДанные.Добавить("Справочник.ОбъектыЭксплуатации");
	ЧитаемыеДанные.Добавить("Справочник.НематериальныеАктивы");
	ЧитаемыеДанные.Добавить("Справочник.ДоговорыАренды");
	ДополнительныеПараметрыПроцедуры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыПроцедуры.ИмяВременнойТаблицы = "ВТЗаблокированныеДанные";
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
			Параметры.Очередь, 
			ЧитаемыеДанные, 
			МенеджерВременныхТаблиц, 
			ДополнительныеПараметрыПроцедуры);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаОбновляемыхДанных", ОбновляемыеДанные);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДопПараметрыЛокализация = ВводОстатковВнеоборотныхАктивовЛокализация.ДопПараметрыДляПереходаНаНовуюВерсию(МенеджерВременныхТаблиц);
	
	МенеджерВременныхТаблиц.Закрыть();
	
	ЗначенияРеквизитовОС  = Результат[Результат.ВГраница()-2].Выгрузить();
	ЗначенияРеквизитовНМА = Результат[Результат.ВГраница()-1].Выгрузить();
	
	ЗначенияРеквизитовОС.Индексы.Добавить("ОсновноеСредство");
	ЗначенияРеквизитовНМА.Индексы.Добавить("НематериальныйАктив");
	
	ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
	
	ДатаНачалаУчета = '000101010000';
	//++ Локализация
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	//-- Локализация
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
 	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			//++ Локализация
 			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБУ.НаборЗаписей");
 			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			//-- Локализация
			
			Блокировка.Заблокировать();
 			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект(); // ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - 
			Если ДокументОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
 			КонецЕсли;
			
			Если НЕ ДокументОбъект.ОтражатьВОперативномУчете
				И НЕ ДокументОбъект.ОтражатьВБУиНУ
				И НЕ ДокументОбъект.ОтражатьВУУ Тогда
				
				ДокументОбъект.ОтражатьВОперативномУчете = Истина;
				
				ДокументОбъект.ОтражатьВБУиНУ = 
					ДокументОбъект.ОтражатьВРеглУчете 
					И ИспользоватьРеглУчет
					И ДокументОбъект.Дата >= ДатаНачалаУчета;
				
				ДокументОбъект.ОтражатьВУУ = 
					ДокументОбъект.ОтражатьВРеглУчете 
					И ИспользоватьРеглУчет 
					И ВестиУУНаПланеСчетовХозрасчетный
					И ДокументОбъект.Дата >= ДатаНачалаУчета;
				
			КонецЕсли; 
			
			Если ДокументОбъект.ОтражатьВРеглУчете
				И НЕ ДокументОбъект.ОтражатьВБУ
				И НЕ ДокументОбъект.ОтражатьВНУ
				И (ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
					ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе
					ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
					ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе) Тогда
				
				ДокументОбъект.ОтражатьВБУ = Истина;
				ДокументОбъект.ОтражатьВНУ = Истина;
			КонецЕсли;

			ЗапросПараметрыАмортизацииОСУУ.УстановитьПараметр("Регистратор", Выборка.Ссылка);
			ПараметрыАмортизацииОСУУ = ЗапросПараметрыАмортизацииОСУУ.Выполнить().Выгрузить();
			ПараметрыАмортизацииОСУУ.Индексы.Добавить("ОсновноеСредство");
			
			Для каждого ДанныеСтроки Из ДокументОбъект.ОС Цикл
				
				Если ЗначениеЗаполнено(ДанныеСтроки.АдресМестонахождения)
					И НЕ ЗначениеЗаполнено(ДанныеСтроки.АдресМестонахожденияЗначение) Тогда
					
					ДанныеСтроки.АдресМестонахожденияЗначение = 
						УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
							ДанныеСтроки.АдресМестонахождения,
							Перечисления.ТипыКонтактнойИнформации.Адрес);
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
					ЗначенияРеквизитов = ЗначенияРеквизитовОС.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
					Если ЗначенияРеквизитов <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ДанныеСтроки, ЗначенияРеквизитов);
					КонецЕсли; 
				КонецЕсли;
				
				ЗаписьРегистра = ПараметрыАмортизацииОСУУ.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
				
				Если ЗаписьРегистра <> Неопределено
					И ДанныеСтроки.СрокИспользованияУУ <> ЗаписьРегистра.СрокИспользования Тогда
					
					ДанныеСтроки.СрокИспользованияУУ = ЗаписьРегистра.СрокИспользования;
				КонецЕсли;
				
				Если ЗаписьРегистра <> Неопределено
					И ДанныеСтроки.ЕстьИзменениеПараметровАмортизацииУУ
					И ДанныеСтроки.СрокИспользованияУУОстаточный <> ЗаписьРегистра.СрокИспользованияДляВычисленияАмортизации Тогда
					
					ДанныеСтроки.СрокИспользованияУУОстаточный = ЗаписьРегистра.СрокИспользованияДляВычисленияАмортизации;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ДатаПринятияКУчетуНУ)
					И ДокументОбъект.ОтражатьВНУ Тогда
					ДанныеСтроки.ДатаПринятияКУчетуНУ = ДанныеСтроки.ДатаПринятияКУчетуБУ;
				КонецЕсли;
				
				ВводОстатковВнеоборотныхАктивовЛокализация.ОбработатьСтрокуОСДляПереходаНаНовуюВерсию(ДанныеСтроки, ДопПараметрыЛокализация);
				
			КонецЦикла; 
			
			Для каждого ДанныеСтроки Из ДокументОбъект.НМА Цикл
				
				Если ЗначениеЗаполнено(ДанныеСтроки.НематериальныйАктив) Тогда
					ЗначенияРеквизитов = ЗначенияРеквизитовНМА.Найти(ДанныеСтроки.НематериальныйАктив, "НематериальныйАктив");
					Если ЗначенияРеквизитов <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ДанныеСтроки, ЗначенияРеквизитов);
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЦикла; 
			
			ОбновитьРасчетыПоДоговорамАренды(ДокументОбъект);
			
			Для Каждого ДанныеСтроки Из ДокументОбъект.РасчетыПоДоговорамАренды Цикл
				
				Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СтавкаНДС)
					ИЛИ УчетНДСУП.НезначащаяСтавка(ДанныеСтроки.СтавкаНДС) Тогда
					Продолжить;
				КонецЕсли;
				
				ПроцентНДС = УчетНДСУПКлиентСервер.ЗначениеСтавкиНДС(ДанныеСтроки.СтавкаНДС);
				
				Если ДанныеСтроки.СуммаНДСВыкупаПредметовАренды = 0
					И ДанныеСтроки.СуммаВыкупаПредметовАренды <> 0 Тогда
					
					ДанныеСтроки.СуммаНДСВыкупаПредметовАренды = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
						ДанныеСтроки.СуммаВыкупаПредметовАренды, ПроцентНДС, Истина);
						
				КонецЕсли;
				
				СтруктураПоиска = Новый Структура("КодСтроки", ДанныеСтроки.КодСтроки);
				СписокСтрок = ДокументОбъект.ГрафикНачисленияУслуг.НайтиСтроки(СтруктураПоиска);
				
				Для Каждого СтрокаГрафика Из СписокСтрок Цикл
					
					Если СтрокаГрафика.УслугаПоАрендеНДС = 0
						И СтрокаГрафика.УслугаПоАренде <> 0 Тогда
							
						СтрокаГрафика.УслугаПоАрендеНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
							СтрокаГрафика.УслугаПоАренде, ПроцентНДС, Истина);
							
					КонецЕсли;
						
					Если СтрокаГрафика.ОбеспечительныйПлатежНДС = 0
						И СтрокаГрафика.ОбеспечительныйПлатеж <> 0 Тогда
							
						СтрокаГрафика.ОбеспечительныйПлатежНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
								СтрокаГрафика.ОбеспечительныйПлатеж, ПроцентНДС, Истина);
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ВводОстатковВнеоборотныхАктивовЛокализация.ОбработатьДанныеДляПереходаНаНовуюВерсию(ДокументОбъект);
			
			ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект,
				"ОС,НМА,АрендованныеОС,РасчетыПоДоговорамАренды,АвансыПоДоговорамАренды,ПрочиеРасходы");
			
			Если ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ОбъектовОбработано = ОбъектовОбработано + 1;

			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%';
									|en = 'Cannot process the object: %Ссылка%. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 	
 	ВнеоборотныеАктивыСлужебный.ПроверитьВыполнениеОбработчика(
 		ПроблемныхОбъектов, 
 		ОбъектовОбработано, 
 		Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ОбновитьРасчетыПоДоговорамАренды(Знач ДокументОбъект)
	
	Если ДокументОбъект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамАренды Тогда
		Возврат;
	КонецЕсли;
	
	РасчетыПоДоговорамАренды = Новый Соответствие();
	АвансыПоДоговорамАренды = Новый Соответствие();
	
	Для Каждого ДанныеСтроки Из ДокументОбъект.РасчетыПоДоговорамАренды Цикл
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.УдалитьТипЗадолженности2) Тогда
			Продолжить;
		КонецЕсли;
				
		СведенияОРасчетах = РасчетыПоДоговорамАренды.Получить(ДанныеСтроки.Договор);
		СведенияОбАвансах = АвансыПоДоговорамАренды.Получить(ДанныеСтроки.Договор);
		
		Если СведенияОРасчетах = Неопределено Тогда
			СведенияОРасчетах = Новый Структура;
			СведенияОРасчетах.Вставить("АрендныеОбязательстваОстаток", 0);
			СведенияОРасчетах.Вставить("АрендныеОбязательстваОстатокРегл", 0);
			СведенияОРасчетах.Вставить("АрендныеОбязательстваОстатокУпр", 0);
			СведенияОРасчетах.Вставить("АрендныеОбязательстваСальдоДебетовое", Ложь);
			СведенияОРасчетах.Вставить("УслугаПоАрендеОстаток", 0);
			СведенияОРасчетах.Вставить("УслугаПоАрендеОстатокРегл", 0);
			СведенияОРасчетах.Вставить("УслугаПоАрендеОстатокУпр", 0);
			СведенияОРасчетах.Вставить("УслугаПоАрендеСальдоДебетовое", Ложь);
			СведенияОРасчетах.Вставить("ВыкупнаяСтоимостьОстаток", 0);
			СведенияОРасчетах.Вставить("ВыкупнаяСтоимостьОстатокРегл", 0);
			СведенияОРасчетах.Вставить("ВыкупнаяСтоимостьОстатокУпр", 0);
			СведенияОРасчетах.Вставить("ВыкупнаяСтоимостьСальдоДебетовое", Ложь);
		КонецЕсли;
		
		Если СведенияОбАвансах = Неопределено Тогда
			СведенияОбАвансах = Новый Структура;
			СведенияОбАвансах.Вставить("ТипПлатежа", Перечисления.ТипыПлатежейПоАренде.ПустаяСсылка());
			СведенияОбАвансах.Вставить("РасчетныйДокумент", Документы.СписаниеБезналичныхДенежныхСредств.ПустаяСсылка());
			СведенияОбАвансах.Вставить("Сумма", 0);
			СведенияОбАвансах.Вставить("СуммаРегл", 0);
			СведенияОбАвансах.Вставить("СуммаУпр", 0);
		КонецЕсли;
			
		Если ДанныеСтроки.УдалитьТипЗадолженности2 = Перечисления.ТипыПлатежейПоАренде.АрендныеОбязательства Тогда
			
			СведенияОРасчетах.АрендныеОбязательстваОстаток = ДанныеСтроки.УдалитьСумма;
			СведенияОРасчетах.АрендныеОбязательстваОстатокРегл = ДанныеСтроки.УдалитьСуммаРегл;
			СведенияОРасчетах.АрендныеОбязательстваОстатокУпр = ДанныеСтроки.УдалитьСуммаУпр;
			СведенияОРасчетах.АрендныеОбязательстваСальдоДебетовое = ДанныеСтроки.УдалитьСальдоДебетовое;
			
		ИначеЕсли ДанныеСтроки.УдалитьТипЗадолженности2 = Перечисления.ТипыПлатежейПоАренде.УслугаПоАренде Тогда
			
			СведенияОРасчетах.УслугаПоАрендеОстаток = ДанныеСтроки.УдалитьСумма;
			СведенияОРасчетах.УслугаПоАрендеОстатокРегл = ДанныеСтроки.УдалитьСуммаРегл;
			СведенияОРасчетах.УслугаПоАрендеОстатокУпр = ДанныеСтроки.УдалитьСуммаУпр;
			СведенияОРасчетах.УслугаПоАрендеСальдоДебетовое = ДанныеСтроки.УдалитьСальдоДебетовое;
			
		ИначеЕсли ДанныеСтроки.УдалитьТипЗадолженности2 = Перечисления.ТипыПлатежейПоАренде.ВыкупнаяСтоимость Тогда
			
			СведенияОРасчетах.ВыкупнаяСтоимостьОстаток = ДанныеСтроки.УдалитьСумма;
			СведенияОРасчетах.ВыкупнаяСтоимостьОстатокРегл = ДанныеСтроки.УдалитьСуммаРегл;
			СведенияОРасчетах.ВыкупнаяСтоимостьОстатокУпр = ДанныеСтроки.УдалитьСуммаУпр;
			СведенияОРасчетах.ВыкупнаяСтоимостьСальдоДебетовое = ДанныеСтроки.УдалитьСальдоДебетовое;
			
		КонецЕсли;
		
		Если ДанныеСтроки.УдалитьТипЗадолженности2 = Перечисления.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж Тогда
			
			СведенияОбАвансах.ТипПлатежа = ДанныеСтроки.УдалитьТипЗадолженности2;
			СведенияОбАвансах.РасчетныйДокумент = ДанныеСтроки.УдалитьДокументАванса;
			СведенияОбАвансах.Сумма = ДанныеСтроки.УдалитьСумма;
			СведенияОбАвансах.СуммаРегл = ДанныеСтроки.УдалитьСуммаРегл;
			СведенияОбАвансах.СуммаУпр = ДанныеСтроки.УдалитьСуммаУпр;
			
		КонецЕсли;

		РасчетыПоДоговорамАренды.Вставить(ДанныеСтроки.Договор, СведенияОРасчетах);
		АвансыПоДоговорамАренды.Вставить(ДанныеСтроки.Договор, СведенияОбАвансах);
		
	КонецЦикла;
	
	Если РасчетыПоДоговорамАренды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.РасчетыПоДоговорамАренды.Очистить();
	ДокументОбъект.АвансыПоДоговорамАренды.Очистить();
	ДокументОбъект.МаксимальныйКодСтроки = 0;
	
	КодыСтрокПоДоговорам = Новый Соответствие();
	Для Каждого КлючИЗначение Из РасчетыПоДоговорамАренды Цикл
		
		СведенияОРасчетах = КлючИЗначение.Значение;
		
		ДанныеСтроки = ДокументОбъект.РасчетыПоДоговорамАренды.Добавить();
		ДанныеСтроки.Договор = КлючИЗначение.Ключ;
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, СведенияОРасчетах);
		
		ДокументОбъект.МаксимальныйКодСтроки = ДокументОбъект.МаксимальныйКодСтроки + 1;
		ДанныеСтроки.КодСтроки = ДокументОбъект.МаксимальныйКодСтроки;
		
		КодыСтрокПоДоговорам.Вставить(ДанныеСтроки.Договор, ДанныеСтроки.КодСтроки);
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из АвансыПоДоговорамАренды Цикл
		
		СведенияОбАвансах = КлючИЗначение.Значение;
		
		ДанныеСтроки = ДокументОбъект.АвансыПоДоговорамАренды.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, СведенияОбАвансах);
		
		ДанныеСтроки.КодСтроки = КодыСтрокПоДоговорам.Получить(КлючИЗначение.Ключ);
		
	КонецЦикла;
	
	Если ДокументОбъект.Проведен Тогда
		
		Для Каждого ДанныеСтроки Из ДокументОбъект.РасчетыПоДоговорамАренды Цикл
			ВнеоборотныеАктивыСлужебный.ПеренестиГрафики(ДокументОбъект, ДанныеСтроки);
		КонецЦикла;
		
		ЗаполнитьСуммуНДСРасчетовПоДоговорамАренды(ДокументОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
