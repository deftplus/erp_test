#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "РежимЗаполнения",, Отказ);
	Реквизиты.Вставить("ДанныеРежимаЗаполнения",	УчетМСФОПовтИспУХ.ПолучитьВидыУчетаРежимаЗаполнения(Реквизиты.РежимЗаполнения));
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Запрос.УстановитьПараметр("Ссылка",				ДополнительныеСвойства.ДляПроведения.Ссылка);
	Запрос.УстановитьПараметр("Период",				Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаГраница",		Новый Граница(Реквизиты.Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДоДокумента",	МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Реквизиты.Период, Реквизиты.Ссылка));
	Запрос.УстановитьПараметр("Организация",		Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",			Реквизиты.Сценарий);

	Запрос.УстановитьПараметр("ЕстьНСБУ", 					Реквизиты.ДанныеРежимаЗаполнения.ЕстьНСБУ);
	Запрос.УстановитьПараметр("ЕстьМСФО", 					Реквизиты.ДанныеРежимаЗаполнения.ЕстьМСФО);
	Запрос.УстановитьПараметр("ВидУчетаНСБУ", 				Реквизиты.ДанныеРежимаЗаполнения.НСБУ);
	Запрос.УстановитьПараметр("ВидУчетаМСФО", 				Реквизиты.ДанныеРежимаЗаполнения.МСФО);
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО", 	Реквизиты.ФормироватьПроводкиМСФО);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта",		Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ТипыВНА",					УчетМСФОПовтИспУХ.ПолучитьОписаниеТиповВНА().Типы());
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_втТаблицаВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_втСтоимостьВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_втПараметрыУчетаВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаОшибок(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводки(НомераТаблиц));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	Результат = Запрос.ВыполнитьПакет();

	МСФОУХ.ДополнитьПараметрыПроведенияИзРезультата(ДополнительныеСвойства.ТаблицыДляДвижений, Результат, НомераТаблиц);

	Возврат ДополнительныеСвойства;

КонецФункции

Функция ТекстЗапроса_втТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("втТаблицаВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВНА.ВНА.ИнвентарныйНомерМСФО КАК ИнвентарныйНомер,
	|	ТаблицаВНА.ВНА.Представление КАК ВНАПредставление,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	ТаблицаВНА.ВНА КАК ВНА,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетПоступленияСубконто1МСФО) В (&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетПоступленияСубконто1МСФО
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетПоступленияСубконто2МСФО) В (&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетПоступленияСубконто2МСФО
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетПоступленияСубконто3МСФО) В (&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетПоступленияСубконто3МСФО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсточникВНА,
	|	ТаблицаВНА.СчетПоступленияСубконто2МСФО КАК СчетПоступленияСубконто2МСФО,
	|	ТаблицаВНА.СчетПоступленияСубконто3МСФО КАК СчетПоступленияСубконто3МСФО,
	|	ТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ТаблицаВНА.ПараметрыАмортизацииВНАМСФО КАК ПараметрыАмортизацииВНАМСФО,
	|	ТаблицаВНА.СпособПоступления КАК СпособПоступления,
	|	ТаблицаВНА.ПервоначальнаяСтоимостьНСБУ КАК ПервоначальнаяСтоимостьНСБУ,
	|	ТаблицаВНА.ПервоначальнаяСтоимостьМСФО КАК ПервоначальнаяСтоимостьМСФО,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьНСБУ КАК ЛиквидационнаяСтоимостьНСБУ,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьМСФО КАК ЛиквидационнаяСтоимостьМСФО,
	|	ТаблицаВНА.СпособНачисленияАмортизацииНСБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВНА.ПустаяСсылка) КАК НачислятьАмортизациюНСБУ,
	|	ТаблицаВНА.ГруппаВНА.НачислятьАмортизацию КАК НачислятьАмортизациюМСФО,
	|	ТаблицаВНА.СпособНачисленияАмортизацииНСБУ КАК СпособНачисленияАмортизацииНСБУ,
	|	ТаблицаВНА.СпособНачисленияАмортизацииМСФО КАК СпособНачисленияАмортизацииМСФО,
	|	ТаблицаВНА.СрокПолезногоИспользованияНСБУ КАК СрокПолезногоИспользованияНСБУ,
	|	ТаблицаВНА.СрокПолезногоИспользованияМСФО КАК СрокПолезногоИспользованияМСФО,
	|	ТаблицаВНА.СпособОтраженияРасходовПоАмортизацииНСБУ КАК СпособОтраженияРасходовПоАмортизацииНСБУ,
	|	ТаблицаВНА.СпособОтраженияРасходовПоАмортизацииМСФО КАК СпособОтраженияРасходовПоАмортизацииМСФО,
	|	ТаблицаВНА.СчетУчетаНСБУ КАК СчетУчетаНСБУ,
	|	ТаблицаВНА.СчетУчетаСубконто1НСБУ КАК СчетУчетаСубконто1НСБУ,
	|	ТаблицаВНА.СчетУчетаСубконто2НСБУ КАК СчетУчетаСубконто2НСБУ,
	|	ТаблицаВНА.СчетУчетаСубконто3НСБУ КАК СчетУчетаСубконто3НСБУ,
	|	ТаблицаВНА.СчетУчетаМСФО КАК СчетУчетаМСФО,
	|	ТаблицаВНА.СчетУчетаСубконто1МСФО КАК СчетУчетаСубконто1МСФО,
	|	ТаблицаВНА.СчетУчетаСубконто2МСФО КАК СчетУчетаСубконто2МСФО,
	|	ТаблицаВНА.СчетУчетаСубконто3МСФО КАК СчетУчетаСубконто3МСФО,
	|	ТаблицаВНА.СчетАмортизацииНСБУ КАК СчетАмортизацииНСБУ,
	|	ТаблицаВНА.СчетАмортизацииСубконто1НСБУ КАК СчетАмортизацииСубконто1НСБУ,
	|	ТаблицаВНА.СчетАмортизацииСубконто2НСБУ КАК СчетАмортизацииСубконто2НСБУ,
	|	ТаблицаВНА.СчетАмортизацииСубконто3НСБУ КАК СчетАмортизацииСубконто3НСБУ,
	|	ТаблицаВНА.СчетАмортизацииМСФО КАК СчетАмортизацииМСФО,
	|	ТаблицаВНА.СчетАмортизацииСубконто1МСФО КАК СчетАмортизацииСубконто1МСФО,
	|	ТаблицаВНА.СчетАмортизацииСубконто2МСФО КАК СчетАмортизацииСубконто2МСФО,
	|	ТаблицаВНА.СчетАмортизацииСубконто3МСФО КАК СчетАмортизацииСубконто3МСФО,
	|	ТаблицаВНА.СчетПоступленияНСБУ КАК СчетПоступленияНСБУ,
	|	ТаблицаВНА.СчетПоступленияСубконто1НСБУ КАК СчетПоступленияСубконто1НСБУ,
	|	ТаблицаВНА.СчетПоступленияСубконто2НСБУ КАК СчетПоступленияСубконто2НСБУ,
	|	ТаблицаВНА.СчетПоступленияСубконто3НСБУ КАК СчетПоступленияСубконто3НСБУ,
	|	ТаблицаВНА.СчетПоступленияМСФО КАК СчетПоступленияМСФО,
	|	ТаблицаВНА.СчетПоступленияСубконто1МСФО КАК СчетПоступленияСубконто1МСФО,
	|	ТаблицаВНА.СчетПоступленияСубконто2МСФО КАК СчетПоступленияСубконто2МСФО1,
	|	ТаблицаВНА.СчетПоступленияСубконто3МСФО КАК СчетПоступленияСубконто3МСФО1,
	|	ТаблицаВНА.КоэффициентУскоренияНСБУ КАК КоэффициентУскоренияНСБУ,
	|	ТаблицаВНА.КоэффициентУскоренияМСФО КАК КоэффициентУскоренияМСФО,
	|	ТаблицаВНА.ПараметрВыработкиНСБУ КАК ПараметрВыработкиНСБУ,
	|	ТаблицаВНА.ПараметрВыработкиМСФО КАК ПараметрВыработкиМСФО,
	|	ТаблицаВНА.ОбъемВыработкиНСБУ КАК ОбъемВыработкиНСБУ,
	|	ТаблицаВНА.ОбъемВыработкиМСФО КАК ОбъемВыработкиМСФО,
	|	ТаблицаВНА.СторнироватьДанныеНСБУ КАК СторнироватьДанныеНСБУ,
	|	ТаблицаВНА.Подразделение КАК Подразделение,
	|	ТаблицаВНА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втТаблицаВНА
	|ИЗ
	|	Документ.ВводВНАВЭксплуатациюМСФО.ВНА КАК ТаблицаВНА
	|ГДЕ
	|	ТаблицаВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА";
	
КонецФункции

Функция ТекстЗапроса_втПараметрыУчетаВНА(НомераТаблиц)
	
	НомераТаблиц.Вставить("втПараметрыУчетаВНА",	НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	ПараметрыУчетаВНАМСФОСрезПоследних.ВНА КАК ВНА,
	|	ПараметрыУчетаВНАМСФОСрезПоследних.ВидУчета КАК ВидУчета,
	|	ПараметрыУчетаВНАМСФОСрезПоследних.Подразделение КАК Подразделение,
	|	ПараметрыУчетаВНАМСФОСрезПоследних.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПараметрыУчетаВНАМСФОСрезПоследних.ГруппаВНА КАК ГруппаВНА
	|ПОМЕСТИТЬ втПараметрыУчетаВНА
	|ИЗ
	|	РегистрСведений.ПараметрыУчетаВНАМСФО.СрезПоследних(
	|			&ГраницаДоДокумента,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И ВНА В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						т.ИсточникВНА
	|					ИЗ
	|						втТаблицаВНА КАК т
	|					ГДЕ
	|						т.ИсточникВНА <> НЕОПРЕДЕЛЕНО)) КАК ПараметрыУчетаВНАМСФОСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА,
	|	ВидУчета,
	|	ГруппаВНА"

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ОбъектыНеДолжныБытьПринятыКУчету(НомераТаблиц));
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВНА", 	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ИСТИНА КАК ПоступилВПериоде,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	&ВидУчетаНСБУ КАК ВидУчета,
	|	&Период КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию) КАК ВидОперации,
	|	втТаблицаВНА.ГруппаВНА.КлассВНА КАК КлассВНА,
	|	втТаблицаВНА.ВНА.ИнвентарныйНомерМСФО КАК ИнветарныйНомер,
	|	втТаблицаВНА.ИсточникВНА КАК ИсточникВНА,
	|	втСтоимостьВНА.ГруппаВНА КАК ИсточникГруппаВНА,
	|	втТаблицаВНА.ИсточникВНА В
	|		(ВЫБРАТЬ
	|			т.ВНА
	|		ИЗ
	|			втСтоимостьВНА КАК т
	|		ГДЕ
	|			т.ВидУчета = &ВидУчетаНСБУ
	|			И НЕ т.ВведенВЭксплуатацию) КАК СписатьИсточник,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ >= ЕСТЬNULL(втСтоимостьВНА.Стоимость, 0) - ЕСТЬNULL(втСтоимостьВНА.НакопленнаяАмортизация, 0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияВНА.СнятоСУчета)
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ИсточникСостояние,
	|	&Период КАК ИсточникДатаПартии,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.СчетПоступленияНСБУ.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА 1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ИсточникКоличество,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ КАК СуммаВВалютеУчета,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ КАК ПервоначальнаяСтоимость,
	|	втТаблицаВНА.СпособПоступления КАК СпособПоступления,
	|	втТаблицаВНА.НачислятьАмортизациюНСБУ КАК НачислятьАмортизацию,
	|	втТаблицаВНА.СпособНачисленияАмортизацииНСБУ КАК СпособНачисленияАмортизации,
	|	NULL КАК ПараметрыАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользованияНСБУ КАК СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокПолезногоИспользованияНСБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ КАК СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.ЛиквидационнаяСтоимостьНСБУ КАК ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.СпособОтраженияРасходовПоАмортизацииНСБУ КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.СчетУчетаНСБУ КАК СчетУчетаПервоначальнойСтоимости,
	|	втТаблицаВНА.СчетУчетаСубконто2НСБУ КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	втТаблицаВНА.СчетУчетаСубконто3НСБУ КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	втТаблицаВНА.СчетАмортизацииНСБУ КАК СчетНакопленнойАмортизации,
	|	втТаблицаВНА.СчетАмортизацииСубконто1НСБУ КАК СчетНакопленнойАмортизацииСубконто1,
	|	втТаблицаВНА.СчетАмортизацииСубконто2НСБУ КАК СчетНакопленнойАмортизацииСубконто2,
	|	втТаблицаВНА.СчетАмортизацииСубконто3НСБУ КАК СчетНакопленнойАмортизацииСубконто3,
	|	втТаблицаВНА.КоэффициентУскоренияНСБУ КАК КоэффициентУскорения,
	|	втТаблицаВНА.ПараметрВыработкиНСБУ КАК ПараметрВыработки,
	|	втТаблицаВНА.ОбъемВыработкиНСБУ КАК ОбъемПродукцииРабот,
	|	втТаблицаВНА.Подразделение КАК Подразделение,
	|	втТаблицаВНА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьВНА КАК втСтоимостьВНА
	|		ПО втТаблицаВНА.ИсточникВНА = втСтоимостьВНА.ВНА
	|			И (&ВидУчетаНСБУ = втСтоимостьВНА.ВидУчета)
	|ГДЕ
	|	втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ <> 0
	|	И &ЕстьНСБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ИСТИНА,
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.ГруппаВНА,
	|	&ВидУчетаМСФО,
	|	&Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию),
	|	втТаблицаВНА.ГруппаВНА.КлассВНА,
	|	втТаблицаВНА.ВНА.ПервоначальныйИнвентарныйНомерМСФО,
	|	втТаблицаВНА.ИсточникВНА,
	|	втСтоимостьВНА.ГруппаВНА,
	|	втТаблицаВНА.ИсточникВНА В
	|		(ВЫБРАТЬ
	|			т.ВНА
	|		ИЗ
	|			втСтоимостьВНА КАК т
	|		ГДЕ
	|			т.ВидУчета = &ВидУчетаМСФО
	|			И НЕ т.ВведенВЭксплуатацию),
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ПервоначальнаяСтоимостьМСФО >= ЕСТЬNULL(втСтоимостьВНА.Стоимость, 0) - ЕСТЬNULL(втСтоимостьВНА.НакопленнаяАмортизация, 0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияВНА.СнятоСУчета)
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	&Период,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.СчетПоступленияМСФО.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА 1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьМСФО,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьМСФО,
	|	втТаблицаВНА.СпособПоступления,
	|	втТаблицаВНА.НачислятьАмортизациюМСФО,
	|	втТаблицаВНА.СпособНачисленияАмортизацииМСФО,
	|	втТаблицаВНА.ПараметрыАмортизацииВНАМСФО,
	|	втТаблицаВНА.СрокПолезногоИспользованияМСФО,
	|	втТаблицаВНА.СрокПолезногоИспользованияМСФО,
	|	втТаблицаВНА.ПервоначальнаяСтоимостьМСФО - втТаблицаВНА.ЛиквидационнаяСтоимостьМСФО,
	|	втТаблицаВНА.ЛиквидационнаяСтоимостьМСФО,
	|	втТаблицаВНА.СпособОтраженияРасходовПоАмортизацииМСФО,
	|	втТаблицаВНА.СчетУчетаМСФО,
	|	втТаблицаВНА.СчетУчетаСубконто2МСФО,
	|	втТаблицаВНА.СчетУчетаСубконто3МСФО,
	|	втТаблицаВНА.СчетАмортизацииМСФО,
	|	втТаблицаВНА.СчетАмортизацииСубконто1МСФО,
	|	втТаблицаВНА.СчетАмортизацииСубконто2МСФО,
	|	втТаблицаВНА.СчетАмортизацииСубконто3МСФО,
	|	втТаблицаВНА.КоэффициентУскоренияМСФО,
	|	втТаблицаВНА.ПараметрВыработкиМСФО,
	|	втТаблицаВНА.ОбъемВыработкиМСФО,
	|	втТаблицаВНА.Подразделение,
	|	втТаблицаВНА.НаправлениеДеятельности
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьВНА КАК втСтоимостьВНА
	|		ПО втТаблицаВНА.ИсточникВНА = втСтоимостьВНА.ВНА
	|			И (&ВидУчетаМСФО = втСтоимостьВНА.ВидУчета)
	|ГДЕ
	|	втТаблицаВНА.ПервоначальнаяСтоимостьМСФО <> 0
	|	И &ЕстьМСФО";
	
КонецФункции

Функция ТекстЗапроса_ТаблицаПроводки(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроводкиВНА",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИсточникВНА = НЕОПРЕДЕЛЕНО
	|			ТОГДА втТаблицаВНА.ВНА
	|		ИНАЧЕ втТаблицаВНА.ИсточникВНА
	|	КОНЕЦ КАК ИсточникВНА,
	|	втСтоимостьВНА.ГруппаВНА КАК ИсточникГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВводВЭксплуатацию) КАК ВидОперации,
	|	втТаблицаВНА.СчетУчетаМСФО КАК СчетДт,
	|	втТаблицаВНА.СчетУчетаМСФО.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.СчетУчетаСубконто1МСФО КАК СубконтоДт1,
	|	втТаблицаВНА.СчетУчетаСубконто2МСФО КАК СубконтоДт2,
	|	втТаблицаВНА.СчетУчетаСубконто3МСФО КАК СубконтоДт3,
	|	втТаблицаВНА.СчетПоступленияМСФО КАК СчетКт,
	|	втТаблицаВНА.СчетПоступленияМСФО.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.СчетПоступленияСубконто1МСФО КАК СубконтоКт1,
	|	втТаблицаВНА.СчетПоступленияСубконто2МСФО КАК СубконтоКт2,
	|	втТаблицаВНА.СчетПоступленияСубконто3МСФО КАК СубконтоКт3,
	|	1 КАК КоличествоКт,
	|	втТаблицаВНА.Подразделение КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	втПараметрыУчетаВНА.Подразделение КАК ПодразделениеКт,
	|	втПараметрыУчетаВНА.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ВЫБОР
	|		КОГДА &ЕстьНСБУ
	|				И НЕ &ФормироватьПроводкиМСФО
	|				И втТаблицаВНА.СторнироватьДанныеНСБУ
	|			ТОГДА втТаблицаВНА.ПервоначальнаяСтоимостьНСБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацииНСБУ,
	|	ВЫБОР
	|		КОГДА &ЕстьМСФО
	|			ТОГДА втТаблицаВНА.ПервоначальнаяСтоимостьМСФО
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацииМСФО
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьВНА КАК втСтоимостьВНА
	|		ПО втТаблицаВНА.ИсточникВНА = втСтоимостьВНА.ВНА
	|			И (&ВидУчетаМСФО = втСтоимостьВНА.ВидУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыУчетаВНА КАК втПараметрыУчетаВНА
	|		ПО втТаблицаВНА.ИсточникВНА = втПараметрыУчетаВНА.ВНА
	|			И (&ВидУчетаМСФО = втПараметрыУчетаВНА.ВидУчета)
	|ГДЕ
	|	&ЕстьМСФО"

КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;
	
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();
	НастройкиОтражения.Вставить("ПервоначальныеСведенияВНАМСФО", 	Истина);
	НастройкиОтражения.Вставить("ПараметрыУчетаВНАМСФО", 			Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", 		Истина);
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", 				Истина);
	НастройкиОтражения.Вставить("СписатьИсточник", 					Истина);
		
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	
	НастройкиОтражения = Новый Структура("ИспользоватьКлючевыеСубконтоИсточника", Истина);
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, НастройкиОтражения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

//КоллекцияСтрок - ТабличнаяЧасть,ТаблицаЗначений,ДанныеФормыКоллекция, СтрокаТабличнойЧасти
//Источник - ДокументОбъект, ДанныеФормыСтруктура, УправляемаяФорма
//ПараметрыЗаполнения - Структура(ЗаполнитьРеквизиты = Ложь,  ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь)
Процедура ЗаполнитьСтроки(КоллекцияСтрок, Источник, ПараметрыЗаполненияТЧ = Неопределено) Экспорт

	Перем РезультатВыполнения;
	
	Отказ = Ложь;
	
	ОбъектИсточник = ?(ТипЗнч(Источник) = Тип("УправляемаяФорма"), Источник.Объект, Источник);
	ЗаполнениеФормы = (ТипЗнч(Источник) = Тип("УправляемаяФорма"));
	
	ЗаполняемыеРеквизитыТаблицыФормы = МСФОУХ.ПолучитьЗаполняемыеРеквизитыТаблицыФормы(Источник);
	
	ТипыВНА = УчетМСФОПовтИспУХ.ПолучитьОписаниеТиповВНА();
	
	Если ПараметрыЗаполненияТЧ.ЗаполнитьНСБУ Или ПараметрыЗаполненияТЧ.ЗаполнитьМСФО Тогда
		
		МасВНА = Новый Массив;
		Для каждого СтрокаВНА Из КоллекцияСтрок Цикл
			
			МасВНА.Добавить(СтрокаВНА.ВНА);
			
			ИсточникВНА = ПолучитьИсточникВНА(СтрокаВНА, ТипыВНА);
			Если ЗначениеЗаполнено(ИсточникВНА) Тогда
				МасВНА.Добавить(ИсточникВНА);
			КонецЕсли;
			
		КонецЦикла;
		
		Граница = МСФОВНАВызовСервераУХ.ПолучитьГраницуДокумента(ОбъектИсточник);
		ВидыУчета = Перечисления.ВидыУчета.ВидыУчета(ПараметрыЗаполненияТЧ.ЗаполнитьНСБУ, ПараметрыЗаполненияТЧ.ЗаполнитьМСФО);
		РезультатВыполнения = МСФОВНАВызовСервераУХ.ПолучитьРеквизитыВНА(
								Граница, 
								МасВНА, 
								ОбъектИсточник.Организация, 
								ВидыУчета, 
								ОбъектИсточник.Сценарий,
								"ВНА,ГруппаВНА,ВидУчета,Количество,ПервоначальнаяСтоимость");
	
	КонецЕсли;
	
	РеквизитыУП = МСФОВызовСервераУХ.РеквизитыДляФормыУП(ОбъектИсточник.Организация, ОбъектИсточник.Дата, ОбъектИсточник.Сценарий);
	ПланСчетовНСБУ = РеквизитыУП.ПланСчетов;
		
	Для каждого СтрокаДляЗаполнения Из КоллекцияСтрок Цикл
		
		ИсточникВНА = Неопределено;
		Если ПараметрыЗаполненияТЧ.ЗаполнитьМСФО Тогда
			
			ИсточникВНА = ПолучитьИсточникВНА(СтрокаДляЗаполнения, ТипыВНА);
			Если ЗначениеЗаполнено(ИсточникВНА) Тогда
			
				ПараметрыВНА = РезультатВыполнения.МСФО.Получить(ИсточникВНА);
				Если ПараметрыВНА <> Неопределено Тогда				
					СтрокаДляЗаполнения.ПервоначальнаяСтоимостьМСФО = ?(ЗначениеЗаполнено(ПараметрыВНА.Количество), ПараметрыВНА.ПервоначальнаяСтоимость / ПараметрыВНА.Количество, ПараметрыВНА.ПервоначальнаяСтоимость);				
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ СтрокаДляЗаполнения.ГруппаВНА.Пустая() Тогда
			
			ГруппаВНА = СтрокаДляЗаполнения.ГруппаВНА;
			
			Если СтрокаДляЗаполнения.СчетУчетаМСФО.Пустая() Тогда
			    СтрокаДляЗаполнения.СчетУчетаМСФО 			= ГруппаВНА.СчетУчетаПервоначальнойСтоимости;
				СтрокаДляЗаполнения.СчетУчетаСубконто1МСФО 	= ГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1;
				СтрокаДляЗаполнения.СчетУчетаСубконто2МСФО 	= ГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2;
				СтрокаДляЗаполнения.СчетУчетаСубконто3МСФО 	= ГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3;
				
			КонецЕсли;
			
			Если СтрокаДляЗаполнения.СчетАмортизацииМСФО.Пустая() Тогда
				
				СтрокаДляЗаполнения.СчетАмортизацииМСФО				= ГруппаВНА.СчетНакопленнойАмортизации;
				СтрокаДляЗаполнения.СчетАмортизацииСубконто1МСФО	= ГруппаВНА.СчетНакопленнойАмортизацииСубконто1;
				СтрокаДляЗаполнения.СчетАмортизацииСубконто2МСФО 	= ГруппаВНА.СчетНакопленнойАмортизацииСубконто2;
				СтрокаДляЗаполнения.СчетАмортизацииСубконто3МСФО 	= ГруппаВНА.СчетНакопленнойАмортизацииСубконто3;
				
			КонецЕсли;
		
		КонецЕсли;
		
		Если СтрокаДляЗаполнения.СпособОтраженияРасходовПоАмортизацииМСФО.Пустая() Тогда
			
			СтрокаДляЗаполнения.СпособОтраженияРасходовПоАмортизацииМСФО 
									= Справочники.СпособыОтраженияРасходовПоАмортизацииМСФО.ПолучитьСоздатьПрофильПоНСБУ(
											СтрокаДляЗаполнения.СпособОтраженияРасходовПоАмортизацииНСБУ, 
											ПланСчетовНСБУ, 
											Отказ);
		
		КонецЕсли;
		
		Если ПараметрыЗаполненияТЧ.ЗаполнитьНСБУ Тогда
			
			ИсточникВНА = ПолучитьИсточникВНА(СтрокаДляЗаполнения, ТипыВНА);
			Если ЗначениеЗаполнено(ИсточникВНА) Тогда
				ПараметрыВНА = РезультатВыполнения.НСБУ.Получить(ИсточникВНА);
				Если ПараметрыВНА <> Неопределено Тогда				
					СтрокаДляЗаполнения.ПервоначальнаяСтоимостьНСБУ = ?(ЗначениеЗаполнено(ПараметрыВНА.Количество), ПараметрыВНА.СуммаВВалютеУчета / ПараметрыВНА.Количество, ПараметрыВНА.СуммаВВалютеУчета);				
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли; 
		
		Если ЗаполняемыеРеквизитыТаблицыФормы <> Неопределено Тогда
			МСФОКлиентСерверУХ.ЗаполнитьРасчетныеРеквизитыСтроки(СтрокаДляЗаполнения, ЗаполняемыеРеквизитыТаблицыФормы);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьИсточникВНА(СтрокаВНА, ТипыВНА)
	
	Если ЗначениеЗаполнено(ТипыВНА.ПривестиЗначение(СтрокаВНА.СчетПоступленияСубконто1МСФО)) Тогда
		Возврат СтрокаВНА.СчетПоступленияСубконто1МСФО;
	ИначеЕсли ЗначениеЗаполнено(ТипыВНА.ПривестиЗначение(СтрокаВНА.СчетПоступленияСубконто2МСФО)) Тогда
		Возврат СтрокаВНА.СчетПоступленияСубконто2МСФО;
	ИначеЕсли ЗначениеЗаполнено(ТипыВНА.ПривестиЗначение(СтрокаВНА.СчетПоступленияСубконто3МСФО)) Тогда
		Возврат СтрокаВНА.СчетПоступленияСубконто3МСФО;
	Иначе
		Возврат Неопределено		
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьЗависимостиРеквизитовДокумента(ФормаДокумента) Экспорт 
	
	ЗависимостиРеквизитов = Новый Массив;
	
	Реквизиты = Новый Структура;	
	
	Реквизиты.Вставить("СчетУчетаМСФО", 			"СчетУчетаПервоначальнойСтоимости");
	Реквизиты.Вставить("СчетУчетаСубконто1МСФО", 	"СчетУчетаПервоначальнойСтоимостиСубконто1");
	Реквизиты.Вставить("СчетУчетаСубконто2МСФО", 	"СчетУчетаПервоначальнойСтоимостиСубконто2");
	Реквизиты.Вставить("СчетУчетаСубконто3МСФО", 	"СчетУчетаПервоначальнойСтоимостиСубконто3");
	
	Реквизиты.Вставить("СчетАмортизацииМСФО", 			"СчетНакопленнойАмортизации");
	Реквизиты.Вставить("СчетАмортизацииСубконто1МСФО", 	"СчетНакопленнойАмортизацииСубконто1");
	Реквизиты.Вставить("СчетАмортизацииСубконто2МСФО", 	"СчетНакопленнойАмортизацииСубконто2");
	Реквизиты.Вставить("СчетАмортизацииСубконто3МСФО", 	"СчетНакопленнойАмортизацииСубконто3");
	
	Реквизиты.Вставить("НачислятьАмортизациюМСФО", 	"НачислятьАмортизацию");
	
	Для каждого Реквизит Из Реквизиты Цикл
	
		НоваяСтрока = Новый Структура;
		НоваяСтрока.Вставить("РеквизитГруппы", Реквизит.Значение);
		НоваяСтрока.Вставить("Приемник", Реквизит.Ключ);
		НоваяСтрока.Вставить("Источник", "ГруппаВНА");
		
		ЗависимостиРеквизитов.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("СпособНачисленияАмортизацииМСФО", 			"СпособНачисленияАмортизации");
	Реквизиты.Вставить("СрокПолезногоИспользованияМСФО", 			"СрокПолезногоИспользования");
	Реквизиты.Вставить("СпособОтраженияРасходовПоАмортизацииМСФО", 	"СпособОтраженияРасходовПоАмортизации");
	Реквизиты.Вставить("КоэффициентУскоренияМСФО", 					"КоэффициентУскорения");	
	Реквизиты.Вставить("ПараметрВыработкиМСФО", 					"ПараметрВыработки");
	Реквизиты.Вставить("ОбъемВыработкиМСФО", 						"ПредполагаемыйОбъемПродукции");
	
	Для каждого Реквизит Из Реквизиты Цикл
	
		НоваяСтрока = Новый Структура;
		НоваяСтрока.Вставить("РеквизитГруппы", Реквизит.Значение);
		НоваяСтрока.Вставить("Приемник", Реквизит.Ключ);
		НоваяСтрока.Вставить("Источник", "ПараметрыАмортизацииВНАМСФО");
		
		ЗависимостиРеквизитов.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ФормаДокумента.КэшируемыеЗначения.Вставить("ЗависимостиРеквизитов", ЗависимостиРеквизитов);
	
КонецПроцедуры

Функция ПолучитьИменаСубконто() Экспорт 

	Результат = Новый Структура;
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетУчетаСубконто1НСБУ");
	Субконто.Вставить(2, "СчетУчетаСубконто2НСБУ");
	Субконто.Вставить(3, "СчетУчетаСубконто3НСБУ");
	
	Результат.Вставить("СчетУчетаНСБУ", Субконто);
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетУчетаСубконто1МСФО");
	Субконто.Вставить(2, "СчетУчетаСубконто2МСФО");
	Субконто.Вставить(3, "СчетУчетаСубконто3МСФО");
	
	Результат.Вставить("СчетУчетаМСФО", Субконто);

	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетАмортизацииСубконто1НСБУ");
	Субконто.Вставить(2, "СчетАмортизацииСубконто2НСБУ");
	Субконто.Вставить(3, "СчетАмортизацииСубконто3НСБУ");
	
	Результат.Вставить("СчетАмортизацииНСБУ", Субконто);

	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетАмортизацииСубконто1МСФО");
	Субконто.Вставить(2, "СчетАмортизацииСубконто2МСФО");
	Субконто.Вставить(3, "СчетАмортизацииСубконто3МСФО");
	
	Результат.Вставить("СчетАмортизацииМСФО", Субконто);
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетПоступленияСубконто1НСБУ");
	Субконто.Вставить(2, "СчетПоступленияСубконто2НСБУ");
	Субконто.Вставить(3, "СчетПоступленияСубконто3НСБУ");
	
	Результат.Вставить("СчетПоступленияНСБУ", Субконто);

	//Субконто = Новый Соответствие;
	//Результат.Вставить("КорСчетТрансляцияМСФО", Субконто);

	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетПоступленияСубконто1МСФО");
	Субконто.Вставить(2, "СчетПоступленияСубконто2МСФО");
	Субконто.Вставить(3, "СчетПоступленияСубконто3МСФО");
	
	Результат.Вставить("СчетПоступленияМСФО", Субконто);
	
	Результат.Вставить("ИсключенияСкрытияСубконто", Новый Структура("СчетПоступленияМСФО,СчетПоступленияНСБУ"));

	Возврат Результат;
	
КонецФункции

Функция ПолучитьСтруктуруДействий(ДляФормы = Ложь, ЗаполнитьПоКолонкамИсточникам = Ложь) Экспорт
	
	Если ЗаполнитьПоКолонкамИсточникам Тогда
		
		СоответствиеКолонок = Новый Структура;		
		СоответствиеКолонок.Вставить("ПервоначальнаяСтоимостьНСБУ",		"ПервоначальнаяСтоимостьМСФО");
		СоответствиеКолонок.Вставить("СрокПолезногоИспользованияНСБУ",	"СрокПолезногоИспользованияМСФО");
		СоответствиеКолонок.Вставить("СпособНачисленияАмортизацииНСБУ",	"СпособНачисленияАмортизацииМСФО");
		СоответствиеКолонок.Вставить("КоэффициентУскоренияНСБУ",		"КоэффициентУскоренияМСФО");
		СоответствиеКолонок.Вставить("ПараметрВыработкиНСБУ",			"ПараметрВыработкиМСФО");
		СоответствиеКолонок.Вставить("ОбъемВыработкиНСБУ",				"ОбъемВыработкиМСФО");
			
		ЗаполнитьПоКолонкамИсточникам = Новый Структура("ТолькоНезаполненные,ЗаполнитьКолонкуИзменения,СоответствиеКолонок", Ложь, Ложь, СоответствиеКолонок);
		
	Иначе 
		
		ЗаполнитьПоКолонкамИсточникам = Новый Структура;
	
	КонецЕсли;
	
	ЗависимостиРеквизитов = Новый Структура("ИсточникГруппаВНАМСФО", "ГруппаВНА");
	ЗаполнитьИсточникГруппаВНАНаДату = Новый Структура("ЗависимостиРеквизитов", ЗависимостиРеквизитов);
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьПоКолонкамИсточникам",		ЗаполнитьПоКолонкамИсточникам);
	СтруктураДействий.Вставить("ЗаполнитьИсточникГруппаВНАНаДату",  ЗаполнитьИсточникГруппаВНАНаДату);
	СтруктураДействий.Вставить("ЗаполнитьИсточникГруппаВНАНаДату",  ЗаполнитьИсточникГруппаВНАНаДату);
		
	Возврат СтруктураДействий;

КонецФункции

#КонецОбласти

#КонецЕсли
