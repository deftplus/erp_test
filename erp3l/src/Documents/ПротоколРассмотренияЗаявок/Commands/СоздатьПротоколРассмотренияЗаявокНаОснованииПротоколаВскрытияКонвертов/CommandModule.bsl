
// Возвращает документ Протокол вскрытия конвертов по закупочной процедуре ЗакупочнаяПроцедураВход.
&НаСервере
Функция НайтиПротоколРассмотренияЗаявокПоПротоколуВскрытияКонвертов(ПротоколВскрытияКонвертов)
	РезультатФункции = Документы.ПротоколРассмотренияЗаявок.ПустаяСсылка();
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ПротоколВскрытияКонвертов", ПротоколВскрытияКонвертов);
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	мДокументов = ЦентрализованныеЗакупкиУХ.ПолучитьДокументыПоОтбору("ПротоколРассмотренияЗаявок", СтруктураОтбора);
	Если мДокументов.Количество() > 0 Тогда
		ПерваяСтрока = мДокументов[0];
		РезультатФункции = ПерваяСтрока.Ссылка;
	Иначе
		РезультатФункции = Документы.ПротоколРассмотренияЗаявок.ПустаяСсылка();
	КонецЕсли;
	Возврат РезультатФункции;
КонецФункции		 // НайтиПротоколРассмотренияЗаявокПоПротоколуВскрытияКонвертов()

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	НайденныйПротокол = НайтиПротоколРассмотренияЗаявокПоПротоколуВскрытияКонвертов(ПараметрКоманды);
	Если ЗначениеЗаполнено(НайденныйПротокол) Тогда
		// Откроем существующий документ.
		ПоказатьЗначение(, НайденныйПротокол);
	Иначе
		// Откроем форму нового документа.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Основание", ПараметрКоманды);
		ОткрытьФорму("Документ.ПротоколРассмотренияЗаявок.ФормаОбъекта",
		ПараметрыФормы, 
		ПараметрыВыполненияКоманды.Источник, 
		ПараметрыВыполненияКоманды.Уникальность, 
		ПараметрыВыполненияКоманды.Окно, 
		ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	КонецЕсли;
КонецПроцедуры
