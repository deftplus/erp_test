#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Функция МожноВвестиНаОснованииЗакупки(ЗакупочнаяПроцедура) Экспорт
	Если НЕ ЗначениеЗаполнено(ЗакупочнаяПроцедура) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Справочники.ЗакупочныеПроцедуры.ЭтоФЗ223(ЗакупочнаяПроцедура)
			И Перечисления.СпособыВыбораПоставщика.ЭтоАукцион(
								ЗакупочнаяПроцедура.СпособВыбораПоставщика);
КонецФункции

Функция ТребуетсяДляЕИС(ЗакупочнаяПроцедура) Экспорт
	Если НЕ ЗначениеЗаполнено(ЗакупочнаяПроцедура) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Справочники.ЗакупочныеПроцедуры.ЭтоФЗ223(ЗакупочнаяПроцедура)
			И (Перечисления.СпособыВыбораПоставщика.ЭтоАукцион(
								ЗакупочнаяПроцедура.СпособВыбораПоставщика)
				ИЛИ ЗакупочнаяПроцедура.СпособВыбораПоставщика =
							Перечисления.СпособыВыбораПоставщика.Конкурс);
КонецФункции
									
// Добавить строку в ТЧ "ПредложенияПоставщиков" документ ПредложениеПоставщика.
// Проверка того, что предложение поставщика уже есть в ТЧ не производится.
// Параметры:
//	ПредложенияПоставщиков - Документ.ПротоколВскрытияКонвертов.ПредложенияПоставщиков -
//			табличная часть.
//  ПредложениеПоставщика - ДокументСсылка.ПредложениеПоставщика - предложение поставщика для добавления.
//
// Возвращает:
//	Строка табличной части "ПредложенияПоставщиков" - заполненная по документу предложения поставщика.
//
Функция ДобавитьСтрокуПредложенияПоставщика(ПредложенияПоставщиков,	ПредложениеПоставщика) Экспорт
	Если НЕ ЗначениеЗаполнено(ПредложениеПоставщика) Тогда
		Возврат Неопределено;
	КонецЕсли;
	мСтроки = ПредложенияПоставщиков.НайтиСтроки(
		Новый Структура("ПредложениеПоставщика", ПредложениеПоставщика));
	Если мСтроки.Количество() > 0 Тогда
		Возврат мСтроки[0];
	КонецЕсли;
	НоваяСтрока = ПредложенияПоставщиков.Добавить();
	НоваяСтрока.ПредложениеПоставщика	 = ПредложениеПоставщика;
	НоваяСтрока.ДопущенКУчастию			 = ПредложениеПоставщика.ДопущенКУчастию;
	НоваяСтрока.ПричинаОтказа			 = ПредложениеПоставщика.ПричинаОтказаВДоступе;
	Возврат НоваяСтрока;
КонецФункции

#КонецЕсли