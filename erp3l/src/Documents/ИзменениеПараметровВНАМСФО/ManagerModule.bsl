
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "РежимЗаполнения, АлгоритмРСБУ", , Отказ);
	Реквизиты.Вставить("ДанныеРежимаЗаполнения", УчетМСФОПовтИспУХ.ПолучитьВидыУчетаРежимаЗаполнения(Реквизиты.РежимЗаполнения));
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	ДатаРасчета = Реквизиты.Период;
	Граница = Новый Граница(Новый МоментВремени(ДатаРасчета, Реквизиты.Ссылка), ВидГраницы.Исключая);
	
	Отчеты.ПараметрыВНА.ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты.Период, Реквизиты.Ссылка, Реквизиты.АлгоритмРСБУ); 
	Запрос.УстановитьПараметр("ВсеВНА", Ложь);
	Запрос.УстановитьПараметр("ВНА", 	Неопределено);// параметр не влияет на расчет	
	
	Запрос.УстановитьПараметр("Период",			Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",		Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("ВидыУчета", 		Перечисления.ВидыУчета.ВидыУчетаПоДаннымРежима(Реквизиты.ДанныеРежимаЗаполнения));
	Запрос.УстановитьПараметр("ВсеОрганизации", Ложь);
	Запрос.УстановитьПараметр("ЕстьМСФО", 		Реквизиты.ДанныеРежимаЗаполнения.ЕстьМСФО);
	Запрос.УстановитьПараметр("АлгоритмРСБУ", 	Реквизиты.АлгоритмРСБУ);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ПараметрыВНА(НомераТаблиц)			);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_втТаблицаВНА(НомераТаблиц)			);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаВНА(НомераТаблиц)			);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ПараметрыУчетаВНАМСФО(НомераТаблиц));
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)	);	
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("втТаблицаДокумента", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.ВНА КАК ВНА,
	|	ТаблицаВНА.ГруппаВНАМСФО КАК ГруппаВНАМСФО,
	|	ТаблицаВНА.НоваяГруппаВНАМСФО КАК НоваяГруппаВНАМСФО,
	|	ТаблицаВНА.КоэффициентУскоренияМСФО КАК КоэффициентУскоренияМСФО,
	|	ТаблицаВНА.КоэффициентУскоренияНСБУ КАК КоэффициентУскоренияНСБУ,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьНСБУ КАК ЛиквидационнаяСтоимостьНСБУ,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьМСФО КАК ЛиквидационнаяСтоимостьМСФО,
	|	ТаблицаВНА.НовыеПараметрыАмортизацииВНАМСФО КАК НовыеПараметрыАмортизацииВНАМСФО,
	|	ТаблицаВНА.СпособНачисленияАмортизацииМСФО КАК СпособНачисленияАмортизацииМСФО,
	|	ТаблицаВНА.СпособНачисленияАмортизацииНСБУ КАК СпособНачисленияАмортизацииНСБУ,
	|	ТаблицаВНА.СпособОтраженияРасходовПоАмортизацииМСФО КАК СпособОтраженияРасходовПоАмортизацииМСФО,
	|	ТаблицаВНА.СпособОтраженияРасходовПоАмортизацииНСБУ КАК СпособОтраженияРасходовПоАмортизацииНСБУ,
	|	ТаблицаВНА.СрокПолезногоИспользованияМСФО КАК СрокПолезногоИспользованияМСФО,
	|	ТаблицаВНА.СрокПолезногоИспользованияНСБУ КАК СрокПолезногоИспользованияНСБУ,
	|	ТаблицаВНА.ПараметрВыработкиНСБУ КАК ПараметрВыработкиНСБУ,
	|	ТаблицаВНА.ПараметрВыработкиМСФО КАК ПараметрВыработкиМСФО,
	|	ТаблицаВНА.ПредполагаемыйОбъемПродукцииНСБУ КАК ПредполагаемыйОбъемПродукцииНСБУ,
	|	ТаблицаВНА.ПредполагаемыйОбъемПродукцииМСФО КАК ПредполагаемыйОбъемПродукцииМСФО,
	|	ТаблицаВНА.Подразделение КАК Подразделение,
	|	ТаблицаВНА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	Документ.ИзменениеПараметровВНАМСФО.ВНА КАК ТаблицаВНА
	|ГДЕ
	|	ТаблицаВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаВНА.ВНА";	

КонецФункции

Функция ТекстЗапроса_ПараметрыВНА(НомераТаблиц)

	ПоляВыбораСтрокой = 
	"ВНА,
	|ГруппаВНА,
	|ПрофильРаспределения,
	|ВидУчета,
	|ПервоначальнаяСтоимость,	
	|Амортизация,
	|АмортизацияРасчет,
	|Переоценка,
	|Обесценение,
	|РезервПереоценки,	
	|ПереоценкаАмортизации,
	|Количество,
	|РезервПереоценкиРасчет,
	
	|Подразделение,
	|НаправлениеДеятельности,	
	
	|ДатаВвода,
	|ЛиквидационнаяСтоимость,
	|КоэффициентУскорения,
	|ЛиквидационнаяСтоимость,
	|НачислятьАмортизацию,
	|ОбъемПродукцииРабот,
	|ПараметрВыработки,
	|СпособНачисленияАмортизации,
	|ПрофильРаспределения,
	
	|СчетУчетаПервоначальнойСтоимости,
	|СчетУчетаПервоначальнойСтоимостиСубконто1,
	|СчетУчетаПервоначальнойСтоимостиСубконто2, 
	|СчетУчетаПервоначальнойСтоимостиСубконто3,	
	|СчетНакопленнойАмортизации,
	|СчетНакопленнойАмортизацииСубконто1,
	|СчетНакопленнойАмортизацииСубконто2, 
	|СчетНакопленнойАмортизацииСубконто3";
	
	ЗапросПараметрыВНА = УчетМСФОПовтИспУХ.ПолучитьКэшированныйТекстЗапросаВНА(ПоляВыбораСтрокой, "втТаблицаРасчетВНА"); 
	
	ТекущийНомер = НомераТаблиц.Количество();	
	Для каждого НомерТаблицы Из ЗапросПараметрыВНА.НомераТаблиц Цикл		
		НомераТаблиц.Вставить(НомерТаблицы.Ключ, ТекущийНомер + НомерТаблицы.Значение);	
	КонецЦикла;
	
	Возврат СтрЗаменить(ЗапросПараметрыВНА.Текст, "&ВНА", "ВЫБРАТЬ т.ВНА ИЗ втТаблицаДокумента КАК т");
	
КонецФункции

Функция ТекстЗапроса_втТаблицаВНА(НомераТаблиц)
		
	НомераТаблиц.Вставить("втТаблицаВНА", НомераТаблиц.Количество());
	
	//АлгоритмМСФО - начисляем с даты предыдущего события по дату документа
	//АлгоритмРСБУ - начисляем за текущий месяц документом(а регламентное начисление пропускаем)
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВНА КАК ВНА,
	|	р.ГруппаВНА <> т.НоваяГруппаВНАМСФО КАК ИзменениеПараметровУчета,
	|	т.НоваяГруппаВНАМСФО КАК НоваяГруппаВНА,
	|	р.ГруппаВНА КАК ГруппаВНА,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА р.АмортизацияРасчет
	|		ИНАЧЕ р.АмортизацияРасчет
	|	КОНЕЦ КАК ИзменениеАмортизации,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА р.РезервПереоценкиРасчет
	|		ИНАЧЕ р.РезервПереоценкиРасчет
	|	КОНЕЦ КАК РезервПереоценкиРасчет,
	|	р.ВидУчета КАК ВидУчета,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА р.АмортизацияРасчет
	|		ИНАЧЕ р.АмортизацияРасчет
	|	КОНЕЦ КАК АмортизацияРасчет,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СпособОтраженияРасходовПоАмортизацииНСБУ
	|		ИНАЧЕ т.СпособОтраженияРасходовПоАмортизацииМСФО
	|	КОНЕЦ КАК ПрофильРаспределения,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.КоэффициентУскоренияНСБУ
	|		ИНАЧЕ т.КоэффициентУскоренияМСФО
	|	КОНЕЦ КАК КоэффициентУскорения,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА т.ЛиквидационнаяСтоимостьМСФО
	|		ИНАЧЕ т.ЛиквидационнаяСтоимостьНСБУ
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СпособНачисленияАмортизацииНСБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВНА.ПустаяСсылка)
	|		ИНАЧЕ т.НоваяГруппаВНАМСФО.НачислятьАмортизацию
	|				И т.СпособНачисленияАмортизацииМСФО <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииВНА.ПустаяСсылка)
	|	КОНЕЦ КАК НачислятьАмортизацию,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.ПредполагаемыйОбъемПродукцииНСБУ
	|		ИНАЧЕ т.ПредполагаемыйОбъемПродукцииМСФО
	|	КОНЕЦ КАК ОбъемПродукцииРабот,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.ПараметрВыработкиНСБУ
	|		ИНАЧЕ т.ПараметрВыработкиМСФО
	|	КОНЕЦ КАК ПараметрВыработки,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СпособНачисленияАмортизацииНСБУ
	|		ИНАЧЕ т.СпособНачисленияАмортизацииМСФО
	|	КОНЕЦ КАК СпособНачисленияАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СпособОтраженияРасходовПоАмортизацииНСБУ
	|		ИНАЧЕ т.СпособОтраженияРасходовПоАмортизацииМСФО
	|	КОНЕЦ КАК СпособОтраженияРасходовПоАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СрокПолезногоИспользованияНСБУ
	|		ИНАЧЕ т.СрокПолезногоИспользованияМСФО
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СрокПолезногоИспользованияНСБУ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА т.СрокПолезногоИспользованияМСФО - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		ИНАЧЕ ВЫРАЗИТЬ(т.СрокПолезногоИспользованияМСФО - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, ДЕНЬ) * 12 / 365 КАК ЧИСЛО(18, 3))
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.ПервоначальнаяСтоимость - р.Амортизация - р.АмортизацияРасчет
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА р.ПервоначальнаяСтоимость + р.Переоценка - т.ЛиквидационнаяСтоимостьМСФО - р.Амортизация - р.АмортизацияРасчет
	|		ИНАЧЕ р.ПервоначальнаяСтоимость + р.Переоценка - т.ЛиквидационнаяСтоимостьМСФО - р.Амортизация - р.АмортизацияРасчет
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	р.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	р.Амортизация КАК Амортизация,
	|	р.Переоценка КАК Переоценка,
	|	р.Обесценение КАК Обесценение,
	|	р.РезервПереоценки КАК РезервПереоценки,
	|	р.ПереоценкаАмортизации КАК ПереоценкаАмортизации,
	|	р.Количество КАК Количество,
	|	р.РезервПереоценкиРасчет КАК РезервПереоценкиРасчет1,
	|	р.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	р.СчетНакопленнойАмортизации КАК СчетНакопленнойАмортизации,
	|	р.СчетНакопленнойАмортизацииСубконто1 КАК СчетНакопленнойАмортизацииСубконто1,
	|	р.СчетНакопленнойАмортизацииСубконто2 КАК СчетНакопленнойАмортизацииСубконто2,
	|	р.СчетНакопленнойАмортизацииСубконто3 КАК СчетНакопленнойАмортизацииСубконто3,
	|	т.Подразделение КАК ПодразделениеДт,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	р.Подразделение КАК ПодразделениеКт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиКт	
	|ПОМЕСТИТЬ втТаблицаВНА
	|ИЗ
	|	втТаблицаДокумента КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК р
	|		ПО т.ВНА = р.ВНА";

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВНА", НомераТаблиц.Количество());	
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ИзменениеПараметровАмортизации) КАК ВидОперации,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.НоваяГруппаВНА КАК ГруппаВНА,
	|	втТаблицаВНА.ВидУчета КАК ВидУчета,
	|	втТаблицаВНА.ПодразделениеДт КАК Подразделение,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельности,
	|	втТаблицаВНА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.КоэффициентУскорения КАК КоэффициентУскорения,
	|	втТаблицаВНА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	втТаблицаВНА.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	втТаблицаВНА.ПараметрВыработки КАК ПараметрВыработки,
	|	втТаблицаВНА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.ПервоначальнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВВалютеУчета,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.Амортизация
	|		ИНАЧЕ 0
	|	КОНЕЦ + втТаблицаВНА.АмортизацияРасчет КАК Амортизация,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.Переоценка
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Переоценка,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.Обесценение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Обесценение,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.РезервПереоценки
	|		ИНАЧЕ 0
	|	КОНЕЦ - втТаблицаВНА.РезервПереоценкиРасчет КАК РезервПереоценки,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.ПереоценкаАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПереоценкаАмортизации,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ИзменениеПараметровУчета
	|			ТОГДА втТаблицаВНА.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ИзменениеПараметровАмортизации),
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.ГруппаВНА,
	|	втТаблицаВНА.ВидУчета,
	|	втТаблицаВНА.ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт,
	|	втТаблицаВНА.ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.КоэффициентУскорения,
	|	ЛОЖЬ,
	|	втТаблицаВНА.ОбъемПродукцииРабот,
	|	втТаблицаВНА.ПараметрВыработки,
	|	втТаблицаВНА.СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПрофильРаспределения,
	|	втТаблицаВНА.СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокИспользованияДляВычисленияАмортизации,
	|	-втТаблицаВНА.ПервоначальнаяСтоимость,
	|	-втТаблицаВНА.Амортизация,
	|	-втТаблицаВНА.Переоценка,
	|	-втТаблицаВНА.Обесценение,
	|	-втТаблицаВНА.РезервПереоценки,
	|	-втТаблицаВНА.ПереоценкаАмортизации,
	|	-втТаблицаВНА.Количество
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПараметровУчета";
	
КонецФункции

Функция ТекстЗапроса_ПараметрыУчетаВНАМСФО(НомераТаблиц)

	НомераТаблиц.Вставить("ПараметрыУчетаВНАМСФО", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ВидУчета КАК ВидУчета,
	|	втТаблицаВНА.НоваяГруппаВНА КАК ГруппаВНА,
	|	втТаблицаВНА.НоваяГруппаВНА.КлассВНА КАК КлассВНА,
	|	втТаблицаВНА.ПодразделениеДт КАК Подразделение,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельности,	
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияОбъектовВНА.Рекласс) КАК СпособПоступления,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,	
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизации
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СчетНакопленнойАмортизации,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СчетНакопленнойАмортизацииСубконто1,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СчетНакопленнойАмортизацииСубконто2,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СчетНакопленнойАмортизацииСубконто3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПараметровУчета";	

КонецФункции

Функция ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)
	
	Возврат 
	МСФОВНАУХ.ТекстЗапроса_НачислениеАмортизацииМСФО()	
	+ " ОБЪЕДИНИТЬ ВСЕ " 
	+ МСФОВНАУХ.ТекстЗапроса_НачислениеРезерваПереоценкиМСФО()
	+ " ОБЪЕДИНИТЬ ВСЕ " 
	+ ТекстЗапроса_ПроводкиПеревода(НомераТаблиц);	

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаНаБалансе(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА());	
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Функция ТекстЗапроса_ПроводкиПеревода(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроводкиВНА", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.НоваяГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ИзменениеПараметровАмортизации) КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	втТаблицаВНА.ПервоначальнаяСтоимость КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости КАК СчетДт,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимости КАК СчетКт,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимости.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПараметровУчета
	|	И втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости <> втТаблицаВНА.СчетУчетаПервоначальнойСтоимости
	|	И втТаблицаВНА.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|	И втТаблицаВНА.ПервоначальнаяСтоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.НоваяГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ИзменениеПараметровАмортизации),
	|	0,
	|	втТаблицаВНА.Амортизация + втТаблицаВНА.АмортизацияРасчет,
	|	втТаблицаВНА.ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт,
	|	втТаблицаВНА.СчетНакопленнойАмортизации,
	|	втТаблицаВНА.СчетНакопленнойАмортизации.СчетСсылка,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто1,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто2,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто3,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизации
	|		ИНАЧЕ втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизации.СчетСсылка
	|		ИНАЧЕ втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости.СчетСсылка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто1
	|		ИНАЧЕ втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто2
	|		ИНАЧЕ втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|			ТОГДА втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто3
	|		ИНАЧЕ втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизацииСубконто3
	|	КОНЕЦ
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПараметровУчета
	|	И втТаблицаВНА.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|	И ВЫБОР
	|			КОГДА втТаблицаВНА.НоваяГруппаВНА.НачислятьАмортизацию
	|				ТОГДА втТаблицаВНА.СчетНакопленнойАмортизации <> втТаблицаВНА.НоваяГруппаВНА.СчетНакопленнойАмортизации
	|			ИНАЧЕ втТаблицаВНА.СчетНакопленнойАмортизации <> втТаблицаВНА.НоваяГруппаВНА.СчетУчетаПервоначальнойСтоимости
	|		КОНЕЦ
	|	И втТаблицаВНА.Амортизация + втТаблицаВНА.АмортизацияРасчет <> 0";

КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;
		
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;

	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();
	НастройкиОтражения.Вставить("ПараметрыУчетаВНАМСФО", Истина);	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ДополнительныеСвойства.ТаблицыДляДвижений.ПараметрыУчетаВНАМСФО, НастройкиОтражения);
	
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", Истина);
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, Неопределено);

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

//КоллекцияСтрок - ТабличнаяЧасть,ТаблицаЗначений,ДанныеФормыКоллекция, СтрокаТабличнойЧасти
//Источник - ДокументОбъект, ДанныеФормыСтруктура, УправляемаяФорма
//ПараметрыЗаполнения - Структура(ЗаполнитьРеквизиты = Ложь,  ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь)
Процедура ЗаполнитьСтроки(КоллекцияСтрок, Источник, ПараметрыЗаполненияТЧ = Неопределено) Экспорт

	ПараметрыЗаполнения = МСФОУХ.ПолучитьПараметрыЗаполнения(Источник,,,Ложь);
	ЗаполняемыеРеквизитыТаблицыФормы = МСФОУХ.ПолучитьЗаполняемыеРеквизитыТаблицыФормы(Источник);	
	
	Если ПараметрыЗаполненияТЧ.ЗаполнитьМСФО Или ПараметрыЗаполненияТЧ.ЗаполнитьНСБУ Тогда
		
		Граница = ПараметрыЗаполнения.ГраницыПериода.ДатаНачала;
		ОбъектыВНА = Новый Массив;
		Для каждого СтрокаВНА Из КоллекцияСтрок Цикл
			ОбъектыВНА.Добавить(СтрокаВНА.ВНА);
		КонецЦикла;
		
		ПоляВыбора = "ВНА,ГруппаВНА,ВидУчета,ЛиквидационнаяСтоимость,
						|СпособНачисленияАмортизации,ПрофильРаспределения,СПИ,КоэффициентУскорения,
						|ПараметрВыработки,ОбъемПродукцииРабот";
		
		РеквизитыВНА = МСФОВНАВызовСервераУХ.ПолучитьРеквизитыВНА(Граница, ОбъектыВНА, ПараметрыЗаполнения.Организация,
							Неопределено, ПараметрыЗаполнения.Сценарий, ПоляВыбора, Ложь);
		
	Иначе 
		РеквизитыВНА = Неопределено;
	КонецЕсли;
		
	Для каждого СтрокаВНА Из КоллекцияСтрок Цикл
		
		Если ПараметрыЗаполненияТЧ.ЗаполнитьМСФО Тогда			
			ПараметрыВНА = РеквизитыВНА.МСФО.Получить(СтрокаВНА.ВНА);
			Если ПараметрыВНА <> Неопределено Тогда

				СтрокаВНА.ГруппаВНАМСФО									= ПараметрыВНА.ГруппаВНА;
				СтрокаВНА.ЛиквидационнаяСтоимостьМСФО 					= ПараметрыВНА.ЛиквидационнаяСтоимость;
				СтрокаВНА.СрокПолезногоИспользованияМСФО				= ПараметрыВНА.СПИ;
				СтрокаВНА.КоэффициентУскоренияМСФО 						= ПараметрыВНА.КоэффициентУскорения;
				СтрокаВНА.СпособНачисленияАмортизацииМСФО				= ПараметрыВНА.СпособНачисленияАмортизации;
				СтрокаВНА.СпособОтраженияРасходовПоАмортизацииМСФО		= ПараметрыВНА.ПрофильРаспределения;
				СтрокаВНА.ПараметрВыработкиМСФО							= ПараметрыВНА.ПараметрВыработки;
				СтрокаВНА.ПредполагаемыйОбъемПродукцииМСФО				= ПараметрыВНА.ОбъемПродукцииРабот;
				
				УстановитьНезаполненное(СтрокаВНА.НоваяГруппаВНАМСФО, ПараметрыВНА.ГруппаВНА);
				УстановитьНезаполненное(СтрокаВНА.НовыеПараметрыАмортизацииВНАМСФО, ПараметрыВНА.ГруппаВНА.ПараметрыАмортизации); 
								
			КонецЕсли;			
		КонецЕсли;
		
		Если ПараметрыЗаполненияТЧ.ЗаполнитьНСБУ Тогда		
			ПараметрыВНА = РеквизитыВНА.НСБУ.Получить(СтрокаВНА.ВНА);
			Если ПараметрыВНА <> Неопределено Тогда
				
				СтрокаВНА.СрокПолезногоИспользованияНСБУ				= ПараметрыВНА.СПИ;				
				СтрокаВНА.КоэффициентУскоренияНСБУ						= ПараметрыВНА.КоэффициентУскорения;
				СтрокаВНА.СпособНачисленияАмортизацииНСБУ				= ПараметрыВНА.СпособНачисленияАмортизации;
				СтрокаВНА.СпособОтраженияРасходовПоАмортизацииНСБУ		= ПараметрыВНА.ПрофильРаспределения;
				СтрокаВНА.ПараметрВыработкиНСБУ							= ПараметрыВНА.ПараметрВыработки;
				СтрокаВНА.ПредполагаемыйОбъемПродукцииНСБУ				= ПараметрыВНА.ОбъемПродукцииРабот;
				
			КонецЕсли;					
		КонецЕсли; 
		
		Если ЗаполняемыеРеквизитыТаблицыФормы <> Неопределено Тогда
			МСФОКлиентСерверУХ.ЗаполнитьРасчетныеРеквизитыСтроки(СтрокаВНА, ЗаполняемыеРеквизитыТаблицыФормы);			
		КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры

Процедура ЗаполнитьЗависимостиРеквизитовДокумента(ФормаДокумента) Экспорт

	//ФормаДокумента.ЗависимостиРеквизитов.Очистить();
	
	ЗависимостиРеквизитов = Новый Массив;
	
	ФормаДокумента.КэшируемыеЗначения.Вставить("ЗависимостиРеквизитов", ЗависимостиРеквизитов);
	
КонецПроцедуры

Процедура УстановитьНезаполненное(СтароеЗначение, НовоеЗначение)

	Если Не ЗначениеЗаполнено(СтароеЗначение) Тогда
		СтароеЗначение = НовоеЗначение;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьСтруктуруДействий(ДляФормы = Ложь, ЗаполнитьПоКолонкамИсточникам = Ложь) Экспорт
	
	Если ЗаполнитьПоКолонкамИсточникам Тогда
		
		СоответствиеКолонок = Новый Структура;
		СоответствиеКолонок.Вставить("ГруппаВНАМСФО", 									"НоваяГруппаВНАМСФО");
		СоответствиеКолонок.Вставить("ПараметрыАмортизацииВНАМСФО", 					"НовыеПараметрыАмортизацииВНАМСФО");		
		СоответствиеКолонок.Вставить("СпособНачисленияАмортизацииНСБУ", 				"СпособНачисленияАмортизацииМСФО");
		СоответствиеКолонок.Вставить("СпособОтраженияРасходовПоАмортизацииНСБУ", 		"СпособОтраженияРасходовПоАмортизацииМСФО");		
		СоответствиеКолонок.Вставить("СрокПолезногоИспользованияНСБУ", 					"СрокПолезногоИспользованияМСФО");
		СоответствиеКолонок.Вставить("ПараметрВыработкиНСБУ", 							"ПараметрВыработкиМСФО");
		СоответствиеКолонок.Вставить("ПредполагаемыйОбъемПродукцииНСБУ", 				"ПредполагаемыйОбъемПродукцииМСФО");
		
		ЗаполнитьПоКолонкамИсточникам = Новый Структура("ТолькоНезаполненные,ЗаполнитьКолонкуИзменения,СоответствиеКолонок", Ложь, Ложь, СоответствиеКолонок);
		
	Иначе 
		
		ЗаполнитьПоКолонкамИсточникам = Новый Структура;
	
	КонецЕсли;
	
	ЗаполнитьИсточникГруппаВНАНаДату = Новый Структура("ЗависимостиРеквизитов", Новый Структура("ГруппаВНАМСФО", "ГруппаВНА"));
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьПоКолонкамИсточникам",		ЗаполнитьПоКолонкамИсточникам);
	СтруктураДействий.Вставить("ЗаполнитьИсточникГруппаВНАНаДату",  ЗаполнитьИсточникГруппаВНАНаДату);
		
	Возврат СтруктураДействий;

КонецФункции

#КонецОбласти

#КонецЕсли
