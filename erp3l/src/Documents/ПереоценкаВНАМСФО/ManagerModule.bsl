#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "РежимЗаполнения, АлгоритмРСБУ",, Отказ);
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	//Реквизиты.АлгоритмРСБУ не используется, т.к. требуются ПараметрыВНА на дату документа (АмортизацияРасчет - не требуется, т.к. уже посчитана в ТЧ)
	АлгоритмРСБУ = Ложь;
	
	Отчеты.ПараметрыВНА.ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты.Период, Реквизиты.Ссылка, АлгоритмРСБУ);
	
	Запрос.УстановитьПараметр("ВсеВНА", Ложь);
	Запрос.УстановитьПараметр("ВНА", 	Неопределено);
	
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("ВидыУчета", 				ПредопределенноеЗначение("Перечисление.ВидыУчета.МСФО"));
	Запрос.УстановитьПараметр("ВсеОрганизации", 		Ложь);
	Запрос.УстановитьПараметр("АлгоритмРСБУ", 			АлгоритмРСБУ);
	Запрос.УстановитьПараметр("АлгоритмРСБУ_РасчетСПИ",	Реквизиты.АлгоритмРСБУ);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)					);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ПараметрыВНА(НомераТаблиц)						);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_втТаблицаВНА(НомераТаблиц)						);
	ТекстЗапроса.Добавить(	ТекстЗапроса_втСторноНакопленнойПереоценки(НомераТаблиц)	);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)					);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаВНА(НомераТаблиц)						);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)				);
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("втТаблицаДокумента", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.ВНА,
	|	ТаблицаВНА.ГруппаВНА,
	|	ТаблицаВНА.ГруппаВНА.ПараметрыПереоценки.МетодПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПриПереоценкеВНА.ПропорциональныйПересчет) КАК ПропорциональныйПересчет,
	|	ТаблицаВНА.ГруппаВНА.ПараметрыПереоценки КАК ПараметрыПереоценки,	
	|	ТаблицаВНА.АмортизацияРасчет,
	|	ТаблицаВНА.БалансоваяСтоимость,
	|	ТаблицаВНА.СправедливаяСтоимость,
	|	ТаблицаВНА.ИзменениеПереоценки
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	Документ.ПереоценкаВНАМСФО.ВНА КАК ТаблицаВНА
	|ГДЕ
	|	ТаблицаВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаВНА.ВНА";	

КонецФункции

Функция ТекстЗапроса_ПараметрыВНА(НомераТаблиц)

	ПоляВыбораСтрокой = 
	"ВНА,
	|ГруппаВНА,
	|ПрофильРаспределения,
	|ВидУчета,
	|ПервоначальнаяСтоимость,
	|БалансоваяСтоимость,
	|Амортизация,
	|Переоценка,
	|Обесценение,
	|РезервПереоценки,
	|РезервПереоценкиРасчет,

	|Подразделение,
	|НаправлениеДеятельности,
	
	|ДатаВвода,
	|ЛиквидационнаяСтоимость,
	|КоэффициентУскорения,
	|ЛиквидационнаяСтоимость,
	|НачислятьАмортизацию,
	|ОбъемПродукцииРабот,
	|ПараметрВыработки,
	|СПИ,
	|СпособНачисленияАмортизации,
	|ПрофильРаспределения,
	
	|СчетУчетаПервоначальнойСтоимости,
	|СчетУчетаПервоначальнойСтоимостиСубконто1,
	|СчетУчетаПервоначальнойСтоимостиСубконто2, 
	|СчетУчетаПервоначальнойСтоимостиСубконто3,	
	|СчетНакопленнойАмортизации,
	|СчетНакопленнойАмортизацииСубконто1,
	|СчетНакопленнойАмортизацииСубконто2, 
	|СчетНакопленнойАмортизацииСубконто3";
	
	ЗапросПараметрыВНА = УчетМСФОПовтИспУХ.ПолучитьКэшированныйТекстЗапросаВНА(ПоляВыбораСтрокой, "втТаблицаРасчетВНА"); 
	
	ТекущийНомер = НомераТаблиц.Количество();	
	Для каждого НомерТаблицы Из ЗапросПараметрыВНА.НомераТаблиц Цикл		
		НомераТаблиц.Вставить(НомерТаблицы.Ключ, ТекущийНомер + НомерТаблицы.Значение);	
	КонецЦикла;
	
	Возврат СтрЗаменить(ЗапросПараметрыВНА.Текст, "&ВНА", "ВЫБРАТЬ т.ВНА ИЗ втТаблицаДокумента КАК т");
	
КонецФункции

Функция ТекстЗапроса_втТаблицаВНА(НомераТаблиц)
		
	НомераТаблиц.Вставить("втТаблицаВНА", НомераТаблиц.Количество());
	
	//Способы учета НА(IAS 16.35):
	//1.Пропорциональный: ИзмПС = СпрС-ПС(БС=СпрС,НА и ПС увеличиваем пропорционально - коэф - СпрС/БС, ИзмПереоценки=СпрС-БС)
	//2. Списание: ИзмПС = СпрС-ПС(НА списываем, поэтому БС=СпрС и ПС=СпрС)
	//с помощью ИзмПС вначале сторнируется накопленная переоценка
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВНА КАК ВНА,
	|	ВЫБОР
	|		КОГДА т.ПропорциональныйПересчет
	|			ТОГДА ВЫБОР
	|					КОГДА т.БалансоваяСтоимость = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ((р.Амортизация + т.АмортизацияРасчет) * (т.СправедливаяСтоимость - т.БалансоваяСтоимость) / т.БалансоваяСтоимость КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ -(р.Амортизация + т.АмортизацияРасчет)
	|	КОНЕЦ КАК ИзменениеНакопленнойАмортизации,
	|	ВЫБОР
	|		КОГДА т.ПропорциональныйПересчет
	|				И т.БалансоваяСтоимость <> 0
	|			ТОГДА ВЫРАЗИТЬ((р.Амортизация + т.АмортизацияРасчет) * (т.СправедливаяСтоимость - т.БалансоваяСтоимость) / т.БалансоваяСтоимость КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ + т.ИзменениеПереоценки КАК ИзменениеПервоначальнойСтоимости,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		ИНАЧЕ ВЫРАЗИТЬ(р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, ДЕНЬ) * 12 / 365 КАК ЧИСЛО(18, 3))
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	т.ИзменениеПереоценки КАК ИзменениеПереоценки,
	|	т.БалансоваяСтоимость КАК БалансоваяСтоимость,
	|	т.ПараметрыПереоценки КАК ПараметрыПереоценки,
	|	т.ПропорциональныйПересчет КАК ПропорциональныйПересчет,
	|	т.АмортизацияРасчет КАК АмортизацияРасчет,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА 0
	|		ИНАЧЕ р.РезервПереоценкиРасчет
	|	КОНЕЦ КАК РезервПереоценкиРасчет,
	|	р.ГруппаВНА КАК ГруппаВНА,
	|	р.Подразделение КАК ПодразделениеДт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	р.Подразделение КАК ПодразделениеКт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	р.Переоценка КАК НакопленнаяПереоценка,
	|	р.РезервПереоценки - ВЫБОР
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА 0
	|		ИНАЧЕ р.РезервПереоценкиРасчет
	|	КОНЕЦ КАК РезервПереоценки,
	|	р.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	р.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	р.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	р.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	р.СПИ КАК СрокПолезногоИспользования,
	|	р.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	р.ПрофильРаспределения КАК ПрофильРаспределения,
	|	р.КоэффициентУскорения КАК КоэффициентУскорения,
	|	р.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	р.ПараметрВыработки КАК ПараметрВыработки,
	|	р.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	р.СчетНакопленнойАмортизации КАК СчетНакопленнойАмортизации,
	|	р.СчетНакопленнойАмортизацииСубконто1 КАК СчетНакопленнойАмортизацииСубконто1,
	|	р.СчетНакопленнойАмортизацииСубконто2 КАК СчетНакопленнойАмортизацииСубконто2,
	|	р.СчетНакопленнойАмортизацииСубконто3 КАК СчетНакопленнойАмортизацииСубконто3
	|ПОМЕСТИТЬ втТаблицаВНА
	|ИЗ
	|	втТаблицаДокумента КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК р
	|		ПО т.ВНА = р.ВНА
	|			И (р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА";

КонецФункции

Функция ТекстЗапроса_втСторноНакопленнойПереоценки(НомераТаблиц)
	
	НомераТаблиц.Вставить("СторноРезервовПереоценки", НомераТаблиц.Количество());
	
	//СторноНакопленнойПереоценки = МИН(МОДУЛЬ(НакопленнаяПереоценка),МОДУЛЬ(ИзменениеПервоначальнойСтоимости))
	
	Возврат
	"ВЫБРАТЬ
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.РезервПереоценки > 0
	|					И втТаблицаВНА.ИзменениеПервоначальнойСтоимости < 0 КАК УценкаДооценки,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.РезервПереоценки > 0
	|				И втТаблицаВНА.ИзменениеПервоначальнойСтоимости < 0
	|			ТОГДА ВЫБОР
	|					КОГДА втТаблицаВНА.РезервПереоценки > -втТаблицаВНА.ИзменениеПервоначальнойСтоимости
	|						ТОГДА -втТаблицаВНА.ИзменениеПервоначальнойСтоимости
	|					ИНАЧЕ втТаблицаВНА.РезервПереоценки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА -втТаблицаВНА.РезервПереоценки > втТаблицаВНА.ИзменениеПервоначальнойСтоимости
	|					ТОГДА втТаблицаВНА.ИзменениеПервоначальнойСтоимости
	|				ИНАЧЕ -втТаблицаВНА.РезервПереоценки
	|			КОНЕЦ
	|	КОНЕЦ КАК СторноНакопленнойПереоценки
	|ПОМЕСТИТЬ втСторноНакопленнойПереоценки
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	ВЫБОР
	|			КОГДА втТаблицаВНА.РезервПереоценки > 0
	|					И втТаблицаВНА.ИзменениеПервоначальнойСтоимости < 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ втТаблицаВНА.РезервПереоценки < 0
	|					И втТаблицаВНА.ИзменениеПервоначальнойСтоимости > 0
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА";

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВНА", НомераТаблиц.Количество());	
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаВНА) КАК ВидОперации,
		
	|	втТаблицаВНА.ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.КоэффициентУскорения,	
	|	втТаблицаВНА.НачислятьАмортизацию,
	|	втТаблицаВНА.ОбъемПродукцииРабот,
	|	втТаблицаВНА.ПараметрВыработки,
	|	втТаблицаВНА.СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.БалансоваяСтоимость + втТаблицаВНА.ИзменениеПервоначальнойСтоимости - втТаблицаВНА.ИзменениеНакопленнойАмортизации - втТаблицаВНА.ЛиквидационнаяСтоимость КАК СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокИспользованияДляВычисленияАмортизации,
	
	|	0 КАК СуммаВВалютеУчета,
	|	втТаблицаВНА.ИзменениеНакопленнойАмортизации КАК Амортизация,
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости КАК Переоценка,
	|	0 КАК ПереоценкаАмортизации,
	|	втТаблицаВНА.ИзменениеПереоценки-втТаблицаВНА.РезервПереоценкиРасчет КАК РезервПереоценки,	
	|	0 КАК Обесценение
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПереоценки <> 0";
	
КонецФункции

Функция ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПроводкиВНА", НомераТаблиц.Количество());
	
	//СчетНакопленнойПереоценки - 01
	//СчетУчетаРезерва - 83
	//СчетРасходовПоПереоценке - 84 или 91.2
	//СчетДоходовПоПереоценке - 84 или 91.1
	
	Результат = Новый Массив;
	Результат.Добавить(МСФОВНАУХ.ТекстЗапроса_НачислениеАмортизацииМСФО());
	Результат.Добавить(МСФОВНАУХ.ТекстЗапроса_НачислениеРезерваПереоценкиМСФО());
	Результат.Добавить(ТекстЗапроса_СторноНакопленнойПереоценки());		// УценкаДооценки(Дт 83 Кт 01) или ДооценкаУценки(Дт 01 Кт 91.1)
	Результат.Добавить(ТекстЗапроса_ДооценкаПС()); 		// Дт 01 Кт 83
	Результат.Добавить(ТекстЗапроса_УценкаПС()); 		// Дт 91.2 Кт 01
	Результат.Добавить(ТекстЗапроса_ДооценкаНА()); 		// Дт 02 Кт 83
	Результат.Добавить(ТекстЗапроса_УценкаНА());		// Дт 91.2 Кт 02
	
	Возврат СтрСоединить(Результат, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаНаБалансе(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА());
	ТекстЗапроса.Добавить(ТекстЗапроса_ПроверкаПараметровПереоценкиВНА());
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Функция ТекстЗапроса_ПроверкаПараметровПереоценкиВНА(НомераТаблиц = Неопределено, ИмяТаблицы = Неопределено) Экспорт

	Если НомераТаблиц <> Неопределено Тогда
		НомераТаблиц.Вставить("ОшибкиПроведения", НомераТаблиц.Количество());
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Для параметров учета ВНА <"" + ЕстьNULL(ТаблицаВНА.ГруппаВНА.Наименование, ""..."") + ""> (для ВНА <"" + ТаблицаВНА.ВНА.Наименование + "">) не указаны параметры переоценки"" КАК ТекстОшибки,
	|	ТаблицаВНА.ВНА КАК ВНА
	|ИЗ
	|	втТаблицаВНА КАК ТаблицаВНА
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаВНА.ВидУчета, ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)) В (ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО), ЗНАЧЕНИЕ(Перечисление.ВидыУчета.ПустаяСсылка))
	|	И ЕСТЬNULL(ТаблицаВНА.ГруппаВНА.ПараметрыПереоценки, ЗНАЧЕНИЕ(Справочник.ПараметрыПереоценкиВНАМСФО.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ПараметрыПереоценкиВНАМСФО.ПустаяСсылка)";
	
	Если ИмяТаблицы = Неопределено Тогда	
		Возврат ТекстЗапроса;
	Иначе 
		Возврат СтрЗаменить(ТекстЗапроса, "втТаблицаРасчетВНА", ИмяТаблицы);
	КонецЕсли;	
	
КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;
	
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;
		
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();	
	
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", Истина);
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область Переоценка

Функция ТекстЗапроса_СторноНакопленнойПереоценки()

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаКорректировкаДооценки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаКорректировкаУценки)
	|	КОНЕЦ КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,	
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва.СчетСсылка
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки.СчетСсылка
	|	КОНЕЦ КАК СчетДтМСФО,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто1
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто2
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто3
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетДоходовПоПереоценке
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки.СчетСсылка
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетДоходовПоПереоценке.СчетСсылка
	|	КОНЕЦ КАК СчетКтМСФО,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто1
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетДоходовПоПереоценкеСубконто1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто2
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетДоходовПоПереоценкеСубконто2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА втСторноНакопленнойПереоценки.УценкаДооценки
	|			ТОГДА втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто3
	|		ИНАЧЕ втТаблицаВНА.ПараметрыПереоценки.СчетДоходовПоПереоценкеСубконто3
	|	КОНЕЦ КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСторноНакопленнойПереоценки КАК втСторноНакопленнойПереоценки
	|		ПО втТаблицаВНА.ВНА = втСторноНакопленнойПереоценки.ВНА
	|			И (втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки <> 0)";

КонецФункции

Функция ТекстЗапроса_ДооценкаПС()

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаДооценка) КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости - ЕСТЬNULL(втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки, 0) КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,	
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки КАК СчетДт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва КАК СчетКт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСторноНакопленнойПереоценки КАК втСторноНакопленнойПереоценки
	|		ПО втТаблицаВНА.ВНА = втСторноНакопленнойПереоценки.ВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости > 0
	|	И втТаблицаВНА.ИзменениеПервоначальнойСтоимости > ЕСТЬNULL(втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки, 0)";

КонецФункции

Функция ТекстЗапроса_УценкаПС()

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаУценка) КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	-втТаблицаВНА.ИзменениеПервоначальнойСтоимости - ЕСТЬNULL(втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки, 0) КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,	
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценке КАК СчетДт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценке.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки КАК СчетКт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценки.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетНакопленнойПереоценкиСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСторноНакопленнойПереоценки КАК втСторноНакопленнойПереоценки
	|		ПО втТаблицаВНА.ВНА = втСторноНакопленнойПереоценки.ВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости < 0
	|	И -втТаблицаВНА.ИзменениеПервоначальнойСтоимости > ЕСТЬNULL(втСторноНакопленнойПереоценки.СторноНакопленнойПереоценки, 0)";

КонецФункции

Функция ТекстЗапроса_ДооценкаНА()

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ПропорциональныйПересчет
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаАмортизацииПропорционально)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаСписаниеАмортизации)
	|	КОНЕЦ КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	втТаблицаВНА.ИзменениеНакопленнойАмортизации КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,	
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва КАК СчетДт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерва.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетУчетаРезерваСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.СчетНакопленнойАмортизации КАК СчетКт,
	|	втТаблицаВНА.СчетНакопленнойАмортизации.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости > 0";

КонецФункции

Функция ТекстЗапроса_УценкаНА()

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ПропорциональныйПересчет
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаАмортизацииПропорционально)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаСписаниеАмортизации)
	|	КОНЕЦ КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	-втТаблицаВНА.ИзменениеНакопленнойАмортизации КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,	
	|	втТаблицаВНА.СчетНакопленнойАмортизации КАК СчетДт,
	|	втТаблицаВНА.СчетНакопленнойАмортизации.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.СчетНакопленнойАмортизацииСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценке КАК СчетКт,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценке.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.ПараметрыПереоценки.СчетРасходовПоПереоценкеСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПервоначальнойСтоимости < 0";
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ЗаполнитьДокумент(ДокументОбъект) Экспорт

	АлгоритмРСБУ = Константы.АлгоритмНачиcленияАмортизацииАналогичноРСБУ.Получить();
	
	НомераТаблиц = Новый Структура;	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",	ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Сценарий",		ДокументОбъект.Сценарий);	
	Запрос.УстановитьПараметр("Период",			КонецДня(ДокументОбъект.Дата));	
	Запрос.УстановитьПараметр("ВидыУчета", 		ПредопределенноеЗначение("Перечисление.ВидыУчета.МСФО"));
	Запрос.УстановитьПараметр("ВсеОрганизации", Ложь);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	Если АлгоритмРСБУ Тогда
		
		ТекстЗапроса.Добавить(ТекстЗапроса_СписокВНААлгоритмНСБУ(НомераТаблиц));		
		
		ДатаРасчета = КонецМесяца(ДобавитьМесяц(ДокументОбъект.Дата, -1));
		Запрос.УстановитьПараметр("ВсеВНА", Ложь); //Список ВНА определяется в предыдущем запросе
				
	Иначе 
		
		ДатаРасчета = ДокументОбъект.Дата;		
		Запрос.УстановитьПараметр("ВсеВНА", Истина);//список ВНА определяется остатками стоимости
		Запрос.УстановитьПараметр("ВНА", 	Неопределено);// параметр не влияет на расчет 
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ГраницаДоДокумента",		МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(ДатаРасчета, ДокументОбъект.Ссылка));
	Запрос.УстановитьПараметр("ДатаРасчета", 			ДатаРасчета);
	Запрос.УстановитьПараметр("ДатаНачалаНачисления", 	НачалоМесяца(ДатаРасчета));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца",	КонецМесяца(ДобавитьМесяц(ДатаРасчета, -1)));
		
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаВНА_Заполнение(НомераТаблиц, АлгоритмРСБУ));	
		
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Отчеты.ПараметрыВНА.ЗаполнитьПараметрыЗапроса(Запрос, ДокументОбъект.Дата, ДокументОбъект.Ссылка, АлгоритмРСБУ);
	
	ДокументОбъект.ВНА.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

Функция ТекстЗапроса_СписокВНААлгоритмНСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("втСписокВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втСтоимость.ВНА КАК ВНА,
	|	втСтоимость.ГруппаВНА КАК ГруппаВНА,
	|	втСтоимость.СуммаВВалютеУчетаОборот КАК СуммаВВалютеУчета
	|ПОМЕСТИТЬ втСписокВНА
	|ИЗ
	|	РегистрНакопления.СтоимостьВНАМСФО.Обороты(
	|			,
	|			&Период,
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация
	|				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)) КАК втСтоимость
	|ГДЕ
	|	втСтоимость.СуммаВВалютеУчетаОборот <> 0
	|	И втСтоимость.ГруппаВНА.МодельУчетаВНА = ЗНАЧЕНИЕ(Перечисление.МоделиУчетаВНАМСФО.УчетПоПереоцененнойСтоимости)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВНА,
	|	ГруппаВНА";

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА_Заполнение(НомераТаблиц, АлгоритмРСБУ = Ложь)
	
	ПоляВыбораСтрокой = 
	"ВНА,
	|ГруппаВНА,	
	|ВидУчета,	
	|БалансоваяСтоимость" + ?(АлгоритмРСБУ, "", ",АмортизацияРасчет");
	
	ЗапросПараметрыВНА = УчетМСФОПовтИспУХ.ПолучитьКэшированныйТекстЗапросаВНА(ПоляВыбораСтрокой, Неопределено);
	
	Если АлгоритмРСБУ Тогда
		Возврат СтрЗаменить(ЗапросПараметрыВНА, "&ВНА", "ВЫБРАТЬ т.ВНА ИЗ втСписокВНА КАК т");
	Иначе	
		Возврат ЗапросПараметрыВНА;
	КонецЕсли;
	
КонецФункции

//КоллекцияСтрок - ТабличнаяЧасть,ТаблицаЗначений,ДанныеФормыКоллекция, СтрокаТабличнойЧасти
//Источник - ДокументОбъект, ДанныеФормыСтруктура, УправляемаяФорма
//ПараметрыЗаполнения - Структура(ЗаполнитьРеквизиты = Ложь,  ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь)
Процедура ЗаполнитьСтроки(КоллекцияСтрок, Источник, СтруктураДействий = Неопределено) Экспорт

	Если СтруктураДействий = Неопределено Тогда
		СтруктураДействий = ПолучитьСтруктуруДействий();	
	КонецЕсли;
	
	ЗаполняемыеРеквизитыТаблицыФормы = МСФОУХ.ПолучитьЗаполняемыеРеквизитыТаблицыФормы(Источник);	
	ОбъектИсточник = ?(ТипЗнч(Источник)= Тип("УправляемаяФорма"), Источник.Объект, Источник);	
	ДатаРасчета = ОбъектИсточник.Дата;
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Организация", 	ОбъектИсточник.Организация);
	КэшированныеЗначения.Вставить("Сценарий", 		ОбъектИсточник.Сценарий);
	КэшированныеЗначения.Вставить("ВидыУчета", 		ПредопределенноеЗначение("Перечисление.ВидыУчета.МСФО"));
	
	КэшированныеЗначения.Вставить("ДатаДокумента", 			ОбъектИсточник.Дата);
	КэшированныеЗначения.Вставить("Ссылка", 				ОбъектИсточник.Ссылка);
	КэшированныеЗначения.Вставить("ДатаРасчета", 			ДатаРасчета);
	КэшированныеЗначения.Вставить("ДатаНачалаНачисления", 	НачалоМесяца(ДатаРасчета));
	КэшированныеЗначения.Вставить("КонецПредыдущегоМесяца",	КонецМесяца(ДобавитьМесяц(ДатаРасчета, -1)));		
	КэшированныеЗначения.Вставить("Ссылка",					ОбъектИсточник.Ссылка);
	КэшированныеЗначения.Вставить("Период",					ДатаРасчета);
	КэшированныеЗначения.Вставить("АлгоритмРСБУ",			ЛОЖЬ);//использовать текущие параметры ВНА для Алгоритма РСБУ
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ВНА(КоллекцияСтрок, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры 
                                                                   
Функция ПолучитьСтруктуруДействий() Экспорт

	СтруктураДействий = Новый Структура;
	
	ПараметрыВНА = Новый Структура;
	ПараметрыВНА.Вставить("ГруппаВНА", 				"ГруппаВНА");	
	ПараметрыВНА.Вставить("БалансоваяСтоимость", 	"БалансоваяСтоимость");
	
	Если Константы.АлгоритмНачиcленияАмортизацииАналогичноРСБУ.Получить() Тогда
		ПараметрыВНА.Вставить("АмортизацияРасчет", "ПрофильРаспределения");//Очистит поле "АмортизацияРасчет" если оно было заполнено
	Иначе
		ПараметрыВНА.Вставить("АмортизацияРасчет", "АмортизацияРасчет");
	КонецЕсли;	
	
	СтруктураДействий.Вставить("ЗаполнитьБалансовуюСтоимость");
	СтруктураДействий.Вставить("ЗаполнитьПараметрыВНА", Новый Структура("МСФО", ПараметрыВНА));
	СтруктураДействий.Вставить("ЗаполнитьПереоценку");
	
	Возврат СтруктураДействий;
	
КонецФункции

Процедура ЗаполнитьЗависимостиРеквизитовДокумента(Форма) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#Область Обновление

Процедура ОбновитьДанные() Экспорт

	Выборка = Документы.ПереоценкаВНАМСФО.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.ПолучитьОбъект();
		
		Для каждого стр Из Объект.ВНА Цикл		
			стр.БалансоваяСтоимость = стр.Удалить_ПервоначальнаяСтоимостьМСФО - стр.Удалить_НакопленнаяАмортизацияМСФО - стр.АмортизацияРасчет;
			стр.ИзменениеПереоценки = стр.СправедливаяСтоимость - стр.БалансоваяСтоимость;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли