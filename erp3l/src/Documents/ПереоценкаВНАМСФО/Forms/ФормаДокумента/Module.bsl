
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	МСФОУХ.ОбновитьУсловноеОформлениеФормы(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если СтрНайти(ИсточникВыбора.ИмяФормы, "ПодборВНА") > 0 Тогда
		ЗаполнитьИзПодбора(ВыбранноеЗначение);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
			
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьПодробноВНА(Команда)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Истина, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДанными(Команда)
	ЗаполнитьТекущимиДаннымиСервер(Неопределено, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНЗС(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМА(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМПЗ(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыФормы = Новый Структура("Ссылка,Сценарий,Организация,Дата");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, Объект); 
	ОткрытьФорму("Обработка.ПодборВНА.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТабличнойЧасти

&НаКлиенте
Процедура УстановитьЗначениеВКолонкеПоВыделенным(Команда)
	МСФОКлиентУХ.УстановитьЗначениеВКолонкеПоВыделеннымСтрокам(ЭтаФорма, "ВНА");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ВНАПослеУдаления(Элемент)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	
	Если Элементы.ПоказатьПодробно.Пометка Тогда
		МСФОКлиентСерверУХ.ОбновитьВидимостьСубконтоГруппыПодробно(ЭтаФорма, ТекущаяСтрока, "ВНА");		
	КонецЕсли;	
		
	МСФОКлиентСерверУХ.ОбновитьДоступностьЗависимыхРеквизитов(ЭтаФорма, ТекущаяСтрока, "ВНА");	
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАПриИзменении(Элемент)
	ЗаполнитьТекущимиДаннымиСервер(Неопределено, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВНАСправедливаяСтоимостьПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, Новый Структура("ЗаполнитьПереоценку"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
			
	МСФОКлиентСерверУХ.ОбновитьВыборТипаВНА(ЭтаФорма, НоваяСтрока, Копирование);

КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеРеквизитовСтрокиТЧ

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)
	
	ЭтаФорма.КэшируемыеЗначения = Новый Структура;
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", Новый Структура);
		
	//МСФОУХ.ПодготовитьФормуНаСервере(ЭтаФорма,"ВНА", ЭтаФорма.Объект, Истина, Ложь);
	
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "ВНА");
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);
	
	ЭтаФорма.КэшируемыеЗначения.Вставить("СтруктураДействий", Документы.ПереоценкаВНАМСФО.ПолучитьСтруктуруДействий());
	ЭтаФорма.КэшируемыеЗначения.Вставить("ЗависимостиРеквизитов", Новый Массив);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	МСФОКлиентСерверУХ.ОбновитьРеквизитыУП(Форма);
	Форма.Элементы.ВНААмортизацияРасчет.Видимость = Не МСФОВНАВызовСервераУХ.АлгоритмРСБУ();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзПодбора(АдресВНА)

	ТабВНА = ПолучитьИзВременногоХранилища(АдресВНА);
	
	СтрокиДляЗаполнения = Новый Массив;
	
	Для каждого СтрокаВНА Из ТабВНА Цикл
		
		НоваяСтрока = Объект.ВНА.Добавить();
		НоваяСтрока.ВНА = СтрокаВНА.ВНА;
		СтрокиДляЗаполнения.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	Документы.ПереоценкаВНАМСФО.ЗаполнитьСтроки(СтрокиДляЗаполнения, ЭтаФорма);	

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеТЧ

&НаСервере
Процедура ЗаполнитьДокументСервер(ПараметрыЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ПараметрыЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущимиДаннымиСервер(СтруктураДействийСтрока = Неопределено, СтрокаВНА = Ложь) 
	
	Перем РеквизитыДействия;
	
	Если НЕ СтрокаВНА Тогда		
		СтрокиДляЗаполнения = Объект.ВНА;
	Иначе
		СтрокиДляЗаполнения = Новый Массив;
		СтрокиДляЗаполнения.Добавить(Объект.ВНА.НайтиПоИдентификатору(Элементы.ВНА.ТекущаяСтрока));	
	КонецЕсли;
	
	Если СтруктураДействийСтрока = Неопределено Тогда
		СтруктураДействий = Неопределено;
	Иначе		
		СтруктураДействий = Новый Структура(СтруктураДействийСтрока);				
	КонецЕсли;

	Документы.ПереоценкаВНАМСФО.ЗаполнитьСтроки(СтрокиДляЗаполнения, ЭтаФорма, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)
	ЗаполнитьДокументСервер(Новый Структура("ЗаполнитьДокумент", Истина));
КонецПроцедуры

#КонецОбласти

#КонецОбласти

