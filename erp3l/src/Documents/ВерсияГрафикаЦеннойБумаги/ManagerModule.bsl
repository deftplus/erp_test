
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПолноеИмяДокумента = ОбщегоНазначения.ИмяТаблицыПоСсылке(ДокументСсылка);
	ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
			
	ТаблицыДляДвижений = Новый Структура;		
	ДополнительныеСвойства = Новый Структура;
	НомераТаблиц = Новый Структура;
	
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", ТаблицыДляДвижений);
	
	Возврат ДополнительныеСвойства;

КонецФункции

Процедура ЗаполнитьГрафикЛинейный(График, ГрафикЛинейный) Экспорт
	
	ГрафикЛинейный.Очистить();
	
	СписокКолонок = ПолучитьСписокКолонокГрафика();
	
	Для Каждого ТекСтрокаГрафика из График Цикл
		
		Для Каждого ТекКолонка Из СписокКолонок Цикл
			
			Если ТекСтрокаГрафика[ТекКолонка.Представление] <> 0 Тогда
				ДобавитьСтрокуГрафикаЛинейного(ГрафикЛинейный, ТекСтрокаГрафика.Дата, ТекКолонка.Значение, ТекСтрокаГрафика[ТекКолонка.Представление]);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если (ВидФормы = "ФормаОбъекта") И Параметры.Свойство("Ключ") Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "Справочник.ЦенныеБумаги.ФормаОбъекта";
		Параметры.Вставить("ВерсияСсылка", Параметры.Ключ);
		Параметры.Вставить("Ключ", ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(Параметры.ВерсияСсылка, "ФинансовыйИнструмент"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСписокКолонокГрафика()
	
	Результат = Новый СписокЗначений;
	
	Результат.Добавить(Перечисления.КолонкиГрафика.ОсновнойДолгПоступление, "ОсновнойДолгПолучение");
	Результат.Добавить(Перечисления.КолонкиГрафика.ОсновнойДолгСписание, "ОсновнойДолгВозврат");
	Результат.Добавить(Перечисления.КолонкиГрафика.ПроцентыКупоныНачисление, "ПроцентыНачислено");
	Результат.Добавить(Перечисления.КолонкиГрафика.ПроцентыКупоныСписание, "ПроцентыУплачено");
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьСтрокуГрафикаЛинейного(ГрафикЛинейный, ДатаОперации, КолонкаГрафика, Сумма)
	
	НоваяСтрокаГрафика = ГрафикЛинейный.Добавить();
	НоваяСтрокаГрафика.ДатаОперации = ДатаОперации;
	НоваяСтрокаГрафика.КолонкаГрафика = КолонкаГрафика;
	НоваяСтрокаГрафика.Сумма = Сумма;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОбновленияВерсииИнформационнойБазы

Процедура ЗаполнитьЛинейныеГрафики() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 

	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВерсияГрафикаЦеннойБумагиГрафик.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВерсияГрафикаЦеннойБумаги.График КАК ВерсияГрафикаЦеннойБумагиГрафик
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВерсияГрафикаЦеннойБумаги.ГрафикНоминалаЛинейный КАК ВерсияГрафикаЦеннойБумагиГрафикНоминалаЛинейный
	|		ПО ВерсияГрафикаЦеннойБумагиГрафик.Ссылка = ВерсияГрафикаЦеннойБумагиГрафикНоминалаЛинейный.Ссылка
	|ГДЕ
	|	ВерсияГрафикаЦеннойБумагиГрафикНоминалаЛинейный.Ссылка ЕСТЬ NULL
	|";

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Документы.ВерсияГрафикаЦеннойБумаги.ЗаполнитьГрафикЛинейный(ДокОбъект.График, ДокОбъект.ГрафикНоминалаЛинейный);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
		
	КонецЦикла

КонецПроцедуры

#КонецОбласти

#КонецЕсли