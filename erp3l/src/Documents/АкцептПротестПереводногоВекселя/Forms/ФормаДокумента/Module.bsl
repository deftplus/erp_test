#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ЗаполнитьПараметрыОперацийПоУмолчанию();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВексельПриИзменении(Элемент)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОПротестеПоВекселю") Тогда
		ОбновитьРасходНаСервере();
	КонецЕсли;
	
	ЗаполнитьСчетВзаиморасчетовСПлательщиком();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорАкцептаПриИзменении(Элемент)
	ЗаполнитьСчетВзаиморасчетовСПлательщиком();		
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовПриИзменении(Элемент)
	ЗаполнитьСчетВзаиморасчетовСПлательщиком()
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	 ЗаполнитьСчетВзаиморасчетовСПлательщиком()
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подбор(Команда)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВексельНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Организация", 		Объект.Организация);
	ПараметрыОтбора.Вставить("Должник", 			Объект.Контрагент);
	ПараметрыОтбора.Вставить("Дата", 				Объект.Дата);
	ПараметрыОтбора.Вставить("Документ", 			Объект.Ссылка);
	ПараметрыОтбора.Вставить("ФормаВекселя", 		ПредопределенноеЗначение("Перечисление.ФормаВекселя.Переводной"));
	ПараметрыОтбора.Вставить("СтатусАкцепта", 		ПредопределенноеЗначение("Перечисление.СтатусыАкцептаВекселя.НеАкцептован"));
	//ПараметрыОтбора.Вставить("ЭтоВыданныйВексель", Истина);
	
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
	ОткрытьФорму("Справочник.ЦенныеБумаги.Форма.ФормаПодбораВекселей", ПараметрыФормы, Элементы.Вексель)

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафик(Команда)
	ПараметрыФормы = Новый Структура("Объект", Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьГрафикЗавершение",ЭтотОбъект);
	ОткрытьФорму("Документ.ПоступлениеВекселя.Форма.ФормаГрафик", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикЗавершение(Результат, Параметры) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьГрафикНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГрафикНаСервере(АдресТаблицыГрафик)
	
	Объект.График.Загрузить(ПолучитьИзВременногоХранилища(АдресТаблицыГрафик));
	Объект.ОжидаемыйРасход = Объект.График.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчета(Команда)
	ФинансовыеИнструментыФормыКлиент.ОткрытьФормуВыбораСчетов(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	// Принципиально различаются предъявление векселя к акцепту (документ вводится на стороне векселедержателя) 
	// и уведомления (на стороне векселедателя);
	ЭтоПредъявлениеКАкцепту =  Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.ПредъявлениеВекселяКАкцепту");
	
	Если ЭтоПредъявлениеКАкцепту Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедержатель'");
	Иначе
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедатель'");
	КонецЕсли;
	
	Элементы.СтатусАкцепта.Видимость = ЭтоПредъявлениеКАкцепту;
	
	Элементы.ГруппаРасчетыСПлательщиком.Видимость = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОбАкцептеВекселя"));
	Элементы.ГруппаУведомлениеОПротесте.Видимость = (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОПротестеПоВекселю"));
	
	ФинансовыеИнструментыФормыКлиентСервер.УправлениеФормой_СчетаУчета(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ФинансовыеИнструментыФормы.ПриСозданииНаСервере_СчетаУчета(ЭтаФорма);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРасходНаСервере()
	// Обновим текущую задолженность.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетыСКонтрагентамиФактОстатки.СуммаОстаток > 0
	|			ТОГДА РасчетыСКонтрагентамиФактОстатки.СуммаОстаток
	|		ИНАЧЕ -РасчетыСКонтрагентамиФактОстатки.СуммаОстаток
	|	КОНЕЦ КАК СуммаОперации,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.Номинал КАК Номинал,
	|	ВЫБОР
	|		КОГДА ЦенныеБумаги.ПараметрыЦеннойБумаги.ПредусмотренПроцентныйДоход
	|			ТОГДА ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаОкончанияНачисленияПроцентов
	|		ИНАЧЕ ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаПлатежа
	|	КОНЕЦ КАК ДатаПлатежа,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаНачалаНачисленияПроцентов КАК ДатаНачалаНачисленияПроцентов,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаОкончанияНачисленияПроцентов КАК ДатаОкончанияНачисленияПроцентов,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ПроцентнаяСтавка КАК ПроцентнаяСтавка,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ПредусмотренПроцентныйДоход КАК ПредусмотренПроцентныйДоход
	|ИЗ
	|	Справочник.ЦенныеБумаги КАК ЦенныеБумаги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентамиФакт.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОбъектРасчетов = &Вексель) КАК РасчетыСКонтрагентамиФактОстатки
	|		ПО ЦенныеБумаги.Ссылка = РасчетыСКонтрагентамиФактОстатки.ОбъектРасчетов
	|ГДЕ
	|	ЦенныеБумаги.Ссылка = &Вексель";

	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Вексель", Объект.ФинансовыйИнструмент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	
	Если Объект.ПредусмотренПроцентныйДоход Тогда
		Объект.НачисленныйРасход = ФинансоваяМатематикаКлиентСервер.СуммаПроцентовЗаПериод(
			Объект.ДатаНачалаНачисленияПроцентов,
			НачалоДня(Объект.Дата),
			Объект.Номинал,
			Объект.СтавкаДоходности);
	КонецЕсли;
	
	ТабГрафик = УправлениеЦеннымиБумагами.ПолучитьГрафикНачисленияДоходаВексель(Объект, Объект.Дата);
	Объект.График.Загрузить(ТабГрафик);
	Объект.ОжидаемыйРасход = Объект.График.Итог("Сумма");
	Если Объект.ПредусмотренПроцентныйДоход Тогда
		Объект.СуммаПлатежа = Объект.Номинал + Объект.ОжидаемыйРасход;
	Иначе
		Объект.СуммаПлатежа = Объект.Номинал;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСчетВзаиморасчетовСПлательщиком()

	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.ПредъявлениеВекселяКАкцепту") Тогда		
		ТекущийСчет = ФинансовыеИнструментыФормыВызовСервера.ПолучитьСчетУчетаФИ(Объект.Организация, Объект.Дата, Объект.ФинансовыйИнструмент);	
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОбАкцептеВекселя") Тогда		
		ТекущийСчет = ВстраиваниеУХВызовСервера.ПолучитьСчетВзаиморасчетов(Объект.ДоговорАкцепта, "РасчетыСПокупателем");
	Иначе 
		ТекущийСчет = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
	КонецЕсли;	
	
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетПоВиду(ЭтаФорма, "СчетВзаиморасчетовСПлательщиком", ТекущийСчет);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОперацийГрафика
&НаКлиенте
Процедура НастроитьПараметрыОпераций(Команда)
	
	ПараметрыКоманды = ДанныеОткрытияПараметровОперацийГрафика();			
	ДоговорыКонтрагентовФормыУХКлиент.ОткрытьПараметрыОперацийГрафика(ЭтотОбъект, ПараметрыКоманды);	
	
КонецПроцедуры

&НаСервере
Функция ДанныеОткрытияПараметровОперацийГрафика()	
	
	НастройкиОпераций = Объект.ПараметрыОпераций.Выгрузить();
	АдресНастроек = ПоместитьВоВременноеХранилище(НастройкиОпераций, ЭтотОбъект.УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресНастроек", АдресНастроек);
	ПараметрыОткрытия.Вставить("ГруппаОперацийГрафика", ГруппаОперацийГрафика());
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", Ложь);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаСервере
Функция ГруппаОперацийГрафика()
	
	МассивГрупп = Новый Массив;
	МассивГрупп.Добавить(Справочники.ОперацииГрафиковДоговоров.ВексельПолученный);
	Если Объект.ВидОперации = Перечисления.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОПротестеПоВекселю Тогда
		МассивГрупп.Добавить(Справочники.ОперацииГрафиковДоговоров.ВексельВыданный);
	КонецЕсли;
	
	Возврат МассивГрупп;
	
КонецФункции	

&НаКлиенте
Процедура ЗавершитьНастройкуОпераций(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗагрузитьНастройкиОпераций(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОпераций(Адрес)	
	
	ТаблицаНастроек = ПолучитьИзВременногоХранилища(Адрес);
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыОперацийПоУмолчанию()	
	
	ТаблицаНастроек = РаботаСДоговорамиКонтрагентовУХ.ПараметрыОперацийГрафикаПоУмолчанию(ГруппаОперацийГрафика());
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти