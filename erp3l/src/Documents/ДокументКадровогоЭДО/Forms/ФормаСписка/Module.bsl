#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КомандыСпискаГруппа;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗапрещенныеРасширения = РаботаСФайламиСлужебный.СписокЗапрещенныхРасширений();
	
	Если Параметры.ДокументыНаПодпись
		Или Не ПравоДоступа("Просмотр", Метаданные.РегистрыНакопления.НачисленияУдержанияПоСотрудникам) Тогда
		
		Заголовок = НСтр("ru = 'Документы на подпись';
						|en = 'Documents for signature'");
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Список, "Исполнители", Пользователи.ТекущийПользователь(), Истина);
		
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	Иначе
		Элементы.Список.РежимВыбора = Ложь;
	КонецЕсли;
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Список.ЭлектронныйДокумент");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Список.ОснованиеДокумента"));
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ЭлектронныйДокумент");
	ОформляемоеПоле.Использование = Истина;
	
	Если Параметры.РасчетныеЛисты Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "КатегорияДокумента", Перечисления.КатегорииДокументовКадровогоЭДО.РасчетныйЛисток, ВидСравненияКомпоновкиДанных.Равно, ,
			Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Период",
		"Видимость",
		Параметры.РасчетныеЛисты);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаПубликации",
		"Видимость",
		Параметры.РасчетныеЛисты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Если Строки.Количество() > 0 Тогда
		
		ЭлектронныеДокументы = Новый Массив;
		СтрокиЭлектронныхДокументов = Новый Соответствие;
		Для Каждого СтрокаСписка Из Строки Цикл
			ЭлектронныеДокументы.Добавить(СтрокаСписка.Значение.Данные.ЭлектронныйДокумент);
			СтрокиЭлектронныхДокументов.Вставить(СтрокаСписка.Значение.Данные.ЭлектронныйДокумент, СтрокаСписка);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Исполнитель", Пользователи.ТекущийПользователь());
		Запрос.УстановитьПараметр("ПрисоединенныеФайлы", ЭлектронныеДокументы);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗапланированныеДействияСПечатнымиФормами.ПрисоединенныйФайл КАК ПрисоединенныйФайл
			|ИЗ
			|	РегистрСведений.ЗапланированныеДействияСПечатнымиФормами КАК ЗапланированныеДействияСПечатнымиФормами
			|ГДЕ
			|	ЗапланированныеДействияСПечатнымиФормами.ПрисоединенныйФайл В(&ПрисоединенныеФайлы)
			|	И ЗапланированныеДействияСПечатнымиФормами.Исполнитель = &Исполнитель
			|	И ЗапланированныеДействияСПечатнымиФормами.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСПечатнымиФормами.Подписать)";
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		
		Пока Выборка.Следующий() Цикл
			СтрокаСписка = СтрокиЭлектронныхДокументов.Получить(Выборка.ПрисоединенныйФайл);
			Если СтрокаСписка <> Неопределено Тогда
				СтрокаСписка.Значение.Данные.ОжидаетПодписания = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Просмотреть(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(
			ТекущиеДанные.ЭлектронныйДокумент, УникальныйИдентификатор, Ложь);
		
		Если ЗапрещенныеРасширения.НайтиПоЗначению(ДанныеФайла.Расширение) <> Неопределено Тогда
			ДополнительныеПараметры = Новый Структура("ЭлектронныйДокумент", ТекущиеДанные.ЭлектронныйДокумент);
			Оповещение = Новый ОписаниеОповещения("ОткрытьЭлектронныйДокументПослеПодтверждения", ЭтотОбъект);
			ПараметрыФормы = Новый Структура("Ключ", "ПередОткрытиемФайла");
			ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", ПараметрыФормы, , , , , Оповещение);
			Возврат;
		КонецЕсли;
		
		ОткрытьЭлектронныйДокумент(ТекущиеДанные.ЭлектронныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныйДокументПослеПодтверждения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат = "Продолжить" Тогда
		ОткрытьЭлектронныйДокумент(ДополнительныеПараметры.ЭлектронныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлектронныйДокумент(ЭлектронныйДокумент)
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(
		ЭлектронныйДокумент, Неопределено, УникальныйИдентификатор);
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленыДанныеДокументовКЭДО" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


