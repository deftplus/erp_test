#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Конец СтандартныеПодсистемы.УправлениеДоступом

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта();
	ОписаниеСостава.ЗаполнятьФизическиеЛицаПоСотрудникам = Ложь;
	ОписаниеСостава.ИспользоватьКраткийСостав = Истина;
	ОписаниеСостава.ИспользоватьОграничениеДоступа = Ложь;
	ОписаниеСостава.ЗаполнятьТабличнуюЧастьФизическиеЛицаДокумента = Ложь;
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		,
		"ФизическоеЛицо",
		"Сотрудник");
	
	ЗарплатаКадрыСоставДокументов.ДобавитьОписаниеХраненияСотрудниковФизическихЛиц(
		ОписаниеСостава.ОписаниеХраненияСотрудниковФизическихЛиц,
		"ВнешниеПодписанты",
		"ФизическоеЛицо");
	
	Возврат ОписаниеСостава;
	
КонецФункции

Функция Добавить(Объект, ЭлектронныйДокумент, Организация, ФизическоеЛицо, Сотрудник) Экспорт
	
	Если КадровыйЭДО.ЭтоОбъектСПечатнымиФормами(Объект)
		И ТипЗнч(Объект) <> Тип("ДокументСсылка.СправкаНДФЛ") Тогда
		КатегорияДокумента = Перечисления.КатегорииДокументовКадровогоЭДО.КадровыйДокумент;
	Иначе
		КатегорияДокумента = Перечисления.КатегорииДокументовКадровогоЭДО.СправкаСотруднику;
	КонецЕсли;
	
	ДокументЭДО = Документы.ДокументКадровогоЭДО.СоздатьДокумент();
	ДокументЭДО.Дата = ТекущаяДатаСеанса();
	ДокументЭДО.ОснованиеДокумента = Объект;
	ДокументЭДО.ИдентификаторДокумента = Строка(ДокументЭДО.ОснованиеДокумента.УникальныйИдентификатор());
	ДокументЭДО.ЭлектронныйДокумент = ЭлектронныйДокумент;
	ДокументЭДО.Организация = Организация;
	ДокументЭДО.ФизическоеЛицо = ФизическоеЛицо;
	ДокументЭДО.Сотрудник = Сотрудник;
	ДокументЭДО.КатегорияДокумента = КатегорияДокумента;
	
	Если Не ЗначениеЗаполнено(ДокументЭДО.ОснованиеДокумента) Тогда
		СсылкаНового = Документы.ДокументКадровогоЭДО.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ДокументЭДО.ОснованиеДокумента = СсылкаНового;
		ДокументЭДО.ДополнительныеСвойства.Вставить("СсылкаНового", ДокументЭДО.ОснованиеДокумента)
	КонецЕсли;
	
	ДокументЭДО.Записать();
	
	Возврат ДокументЭДО.Ссылка;
	
КонецФункции

Процедура УдалитьДокументыПечатныхФормОбъекта(СсылкаНаОбъект) Экспорт
	
	ФайлыПоОбъектам = КадровыйЭДО.ФайлыПечатныхФормПоОбъектам(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СсылкаНаОбъект), , Истина, Истина);
	
	ФайлыПечатныхФорм = Новый Массив;
	Для Каждого ОписаниеФайловОбъекта Из ФайлыПоОбъектам Цикл
		Для Каждого ОписаниеФайловИдентификатора Из ОписаниеФайловОбъекта.Значение Цикл
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФайлыПечатныхФорм, ОписаниеФайловИдентификатора.Значение);
		КонецЦикла;
	КонецЦикла;
	
	Если ФайлыПечатныхФорм.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЭлектронныеДокументы", ФайлыПечатныхФорм);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ДокументКадровогоЭДО.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
			|ГДЕ
			|	ДокументКадровогоЭДО.ЭлектронныйДокумент В(&ЭлектронныеДокументы)
			|	И НЕ ДокументКадровогоЭДО.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектДокумента.ДополнительныеСвойства.Вставить("РазрешенаПометкаУдаления", Истина);
			ОбъектДокумента.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

Процедура ПометитьНаУдалениеДокументыУдаленныхОснований(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОбновления = Неопределено Тогда
		МассивОбновленных = Новый Массив;
	Иначе
		
		Если ПараметрыОбновления.Свойство("МассивОбновленных") Тогда
			МассивОбновленных = ПараметрыОбновления.МассивОбновленных;
		Иначе
			МассивОбновленных = Новый Массив;
			ПараметрыОбновления.Вставить("МассивОбновленных", МассивОбновленных);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбновленных", МассивОбновленных);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКадровогоЭДО.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ДокументКадровогоЭДО КАК ДокументКадровогоЭДО
		|ГДЕ
		|	НЕ ДокументКадровогоЭДО.Ссылка В (&МассивОбновленных)
		|	И НЕ ДокументКадровогоЭДО.ПометкаУдаления
		|	И ДокументКадровогоЭДО.ЭлектронныйДокумент.ПометкаУдаления";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Пока Выборка.Следующий() Цикл
		
		МассивОбновленных.Добавить(Выборка.Ссылка);
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДокументКадровогоЭДО", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления = Истина;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
