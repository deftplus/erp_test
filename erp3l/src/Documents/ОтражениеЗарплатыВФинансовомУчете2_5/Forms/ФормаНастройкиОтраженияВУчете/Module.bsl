
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("НастройкиОтражения", НастройкиОтражения);
	Если НастройкиОтражения = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого Вариант Из НастройкиОтражения.ДоступныеВарианты Цикл
		Если НЕ Вариант.Значение.Используется Тогда
			Продолжить;
		КонецЕсли;
		Элементы.ВариантОтражения.СписокВыбора.Добавить(Вариант.Ключ);
	КонецЦикла;
	
	Параметры.Свойство("Организация",     Организация);
	Параметры.Свойство("ДатаДокумента",   ДатаДокумента);
	Параметры.Свойство("ВалютаДокумента", ВалютаДокумента);
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяРасходов, Элементы.АналитикаРасходов.Имя);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяДоходов, Элементы.АналитикаДоходов.Имя);
	
	// Выбор статей и аналитик
	ПараметрыВыбораСтатейИАналитик =
		Документы.ОтражениеЗарплатыВФинансовомУчете2_5.ПараметрыВыбораСтатейИАналитикВФормеНастройкиОтражения(ВариантОтражения);
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	// Конец Выбор статей и аналитик
	
	// Настройка счетов учета
	ПараметрыНастройкиСчетовУчета =
		Документы.ОтражениеЗарплатыВФинансовомУчете2_5.ПараметрыНастройкиСчетовУчетаВФормеНастройкиОтражения(КлючНазначенияИспользования);
	НастройкаСчетовУчетаСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыНастройкиСчетовУчета);
	// Конец Настройка счетов учета
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Принять(Команда)
	
	ПринятьНаСервере();
	
	Вариант = НастройкиОтражения.ДоступныеВарианты[ВариантОтражения];
	
	РеквизитыОтражения = НастройкиОтражения.РеквизитыСтроки;
	ЗаполнитьЗначенияСвойств(РеквизитыОтражения, ЭтотОбъект, "ВариантОтражения");
	
	Если НЕ Вариант = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыОтражения, ЭтотОбъект, Вариант.СписокРеквизитов);
	КонецЕсли;
	
	Закрыть(РеквизитыОтражения);
	
КонецПроцедуры

&НаСервере
Процедура ПринятьНаСервере()
	
	Если ВариантОтражения = Перечисления.ВариантыОтраженияНачисленийУдержаний.ОтнестиНаПрочиеАктивыПассивы Тогда
		НастройкаСчетовУчетаСервер.ЗаписатьНастройкиСчетовУчетаФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтраженияПриИзменении(Элемент)
	ВариантОтраженияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВариантОтраженияПриИзмененииНаСервере()
	
	// Выбор статей и аналитик
	ПараметрыВыбораСтатейИАналитик =
		Документы.ОтражениеЗарплатыВФинансовомУчете2_5.ПараметрыВыбораСтатейИАналитикВФормеНастройкиОтражения(ВариантОтражения);
	ДоходыИРасходыСервер.ПриИзмененииПараметровВыбораСтатей(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	// Конец Выбор статей и аналитик
	
	// Настройка счетов учета
	ПараметрыНастройкиСчетовУчета =
		Документы.ОтражениеЗарплатыВФинансовомУчете2_5.ПараметрыНастройкиСчетовУчетаВФормеНастройкиОтражения(КлючНазначенияИспользования);
	НастройкаСчетовУчетаСервер.ПриИзмененииПараметровНастройки(ЭтотОбъект, ПараметрыНастройкиСчетовУчета);
	// Конец Настройка счетов учета
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовИРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяРасходов, Элементы.АналитикаРасходов.Имя);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	УстановитьПодсказкуАвтоподбораАналитики(СтатьяДоходов, Элементы.АналитикаДоходов.Имя);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаДоходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаДоходовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаАктивовПассивовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.АналитикаАктивовПассивовПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСчетовУчетаПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияОтбора = Новый Структура;
	ЗначенияОтбора.Вставить("ТипРасчетов",
		ПредопределенноеЗначение("Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом"));
	ЗначенияОтбора.Вставить("Организация", Организация);
	ЗначенияОтбора.Вставить("Контрагент",  Контрагент);
	
	НастройкиВыбора = Новый Структура;
	НастройкиВыбора.Вставить("ПодборДебиторскойЗадолженности", Истина);
	НастройкиВыбора.Вставить("Валюта", ВалютаДокумента);
	НастройкиВыбора.Вставить("Отбор", ЗначенияОтбора);
	НастройкиВыбора.Вставить("ТекущаяСтрока", ОбъектРасчетов);
	
	ОткрытьФорму("Справочник.ОбъектыРасчетов.ФормаВыбора", НастройкиВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	Вариант = НастройкиОтражения.ДоступныеВарианты[ВариантОтражения];
	
	Если НЕ Вариант = Неопределено Тогда
		
		Элементы.ВариантОтражения.Подсказка = Вариант.Подсказка;
		
		Элементы.НаправлениеДеятельности.Видимость =
			Вариант.Реквизиты.Свойство("НаправлениеДеятельности")
			И Вариант.Реквизиты.НаправлениеДеятельности.Используется;
		
		Элементы.НачисленияПостатейноеОтражение.Видимость        = Вариант.Группа = "ПостатейноеОтражениеНачислений";
		Элементы.НачисленияРаспределениеНаПроизводство.Видимость = Вариант.Группа = "РаспределениеСдельныхНачислений";
		Элементы.УдержанияПостатейноеОтражение.Видимость         = Вариант.Группа = "ПостатейноеОтражениеУдержаний";
		Элементы.УдержанияПогашенияВзаиморасчетов.Видимость      = Вариант.Группа = "ПогашениеВзаиморасчетов";
		Элементы.УдержанияРасчетыСПодотчетниками.Видимость       = Вариант.Группа = "Подотчетники";
		
	Иначе
		
		Элементы.ВариантОтражения.Подсказка = "";
		Элементы.НаправлениеДеятельности.Видимость = Ложь;
		
		Элементы.НачисленияПостатейноеОтражение.Видимость        = Ложь;
		Элементы.НачисленияРаспределениеНаПроизводство.Видимость = Ложь;
		Элементы.УдержанияПостатейноеОтражение.Видимость         = Ложь;
		Элементы.УдержанияПогашенияВзаиморасчетов.Видимость      = Ложь;
		Элементы.УдержанияРасчетыСПодотчетниками.Видимость       = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуАвтоподбораАналитики(Статья, ЭлементАналитики)
	
	СвойстваСтатьи = Документы.ОтражениеЗарплатыВФинансовомУчете2_5.СвойстваСтатьиОтражения(Статья);
	
	Если СвойстваСтатьи.ДоступноАвтозаполнение Тогда
		Элементы[ЭлементАналитики].ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>';
														|en = '<selected automatically>'");
	Иначе
		Элементы[ЭлементАналитики].ПодсказкаВвода = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбъектРасчетовОбработкаПолученияДанныхВыбора(ДанныеВыбора, Организация, Контрагент, Текст)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ТипРасчетов",
		Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом);
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("Контрагент", Контрагент);
	СтруктураПараметров.Вставить("Текст", Текст);
	
	ВзаиморасчетыСервер.ЗаполнитьДанныеВыбораОснованияПлатежа(ДанныеВыбора, СтруктураПараметров, Истина,, Истина);
	
КонецПроцедуры

#КонецОбласти