
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ИмяТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ИмяТаблицы = "Начисления" Тогда
		ТаблицаНалогов = "НалогиВзносыОрганизации";
	Иначе
		Элементы.ТаблицаНалогов.Видимость = Ложь;
		ТаблицаНалогов = Параметры.ИмяТаблицы;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоВыделенныеСтроки")
		И Параметры.ТолькоВыделенныеСтроки Тогда
		ТолькоВыделенныеСтроки = 1;
	КонецЕсли;
	
	ЗаполнитьСпособыРасчета();
	ЗаполнитьВидыНалогов();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаНалоговПриИзменении(Элемент)
	ЗаполнитьВидыНалогов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыНалогов

&НаКлиенте
Процедура ВидыНалоговЗначениеПриИзменении(Элемент)
	Элементы.ВидыНалогов.ТекущиеДанные.Пометка = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Принять(Команда)
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ТаблицаНалогов", ТаблицаНалогов);
	ПараметрыРасчета.Вставить("ТолькоВыделенныеСтроки", ТолькоВыделенныеСтроки);
	
	ПараметрыРасчета.Вставить("ВидыНалогов", Новый Соответствие);
	
	Для Каждого СтрокаТаблицы Из ВидыНалогов Цикл
		
		Если НЕ СтрокаТаблицы.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыРасчетаНалога = Новый Структура("СпособРасчета, Значение");
		ЗаполнитьЗначенияСвойств(ПараметрыРасчетаНалога, СтрокаТаблицы);
		ПараметрыРасчета.ВидыНалогов.Вставить(СтрокаТаблицы.ВидНалога, ПараметрыРасчетаНалога);
		
	КонецЦикла;
	
	Закрыть(ПараметрыРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Представления способов расчетов
	
	Для Каждого СпособРасчета Из СпособыРасчета Цикл
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидыНалоговСпособРасчета.Имя);
		
		ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидыНалогов.СпособРасчета");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = СпособРасчета.Значение;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", СпособРасчета.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпособыРасчета()
	
	СпособыРасчета.Очистить();
	
	СпособыРасчета.Добавить("Процентом", НСтр("ru = 'Ставка налога, %';
												|en = 'Tax rate, %'"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыНалогов()
	
	ВидыНалогов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПлательщикСотрудник", ТаблицаНалогов = "НалогиВзносыСотрудников");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНалогов.Ссылка КАК ВидНалога
	|ИЗ
	|	Справочник.ВидыНалоговВзносов КАК ВидыНалогов
	|ГДЕ
	|	ВидыНалогов.ПлательщикСотрудник = &ПлательщикСотрудник";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ВидыНалогов.Добавить();
		НоваяСтрока.ВидНалога = Выборка.ВидНалога;
		НоваяСтрока.СпособРасчета = "Процентом";
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти