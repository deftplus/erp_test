
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	МСФОУХ.ОбновитьУсловноеОформлениеФормы(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ДокументыОснованияПараллельногоУчета"
	 И ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ДокументыОснования.Очистить();
		Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
			Если СтрокаСписка.Значение.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
			СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
		КонецЦикла;
		
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументМСФО(Команда)
	МСФОКлиентУХ.СоздатьДокументМСФО(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодробноВНА(Команда)
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Истина, "ВНА");
	ОбновитьОтображениеГруппыПодробно();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМА(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Заполнение

&НаКлиенте
Процедура ЗаполнитьПоОснованиям(Команда)
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДокументыОснования");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемы(Команда)
	
	Если Не МСФОВНАВызовСервераУХ.ИспользоватьДанныеУчетнойСистемы(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДанныеНСБУ");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДаннымиНСБУ(Команда)
	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДаннымиМСФО(Команда)
	ЗаполнитьТекущимиДаннымиСервер(Ложь, Ложь, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКолонкамНСБУ(Команда)
	ЗаполнитьПоКолонкамНСБУСервер();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВКолонкеПоВыделенным(Команда)
	МСФОКлиентУХ.УстановитьЗначениеВКолонкеПоВыделеннымСтрокам(ЭтаФорма, "ВНА");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);	
	Объект.ВНА.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНеУказанГиперссылкаНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДобавитьДокументОснованиеНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
		
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА", СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТабличнойЧасти_Общие

&НаКлиенте
Процедура ОтобратьСтрокиРасхождений(Команда)
	
	Если (Элементы.ВНА.ОтборСтрок = Неопределено) ИЛИ НЕ Элементы.ВНА.ОтборСтрок.Свойство("ЕстьРасхождения") Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРасхождения", Истина);
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Истина;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтрокиИзменений(Команда)
	
	Если Элементы.ВНА.ОтборСтрок = Неопределено Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьИзменение", Истина);
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Истина;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДанными(Команда)
	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧасти

&НаКлиенте
Процедура ВНАПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	МСФОКлиентСерверУХ.ОбновитьВидимостьСубконтоГруппыПодробно(ЭтаФорма, ТекущаяСтрока, "ВНА");
	МСФОКлиентСерверУХ.ОбновитьДоступностьЗависимыхРеквизитов(ЭтаФорма, ТекущаяСтрока, "ВНА");
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	ОбновитьОтображениеГруппыПодробно();
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МСФОКлиентСерверУХ.ОбновитьВыборТипаВНА(ЭтаФорма, НоваяСтрока, Копирование);
		
	Если КэшируемыеЗначения.Свойство("ИспользуютсяТК") И КэшируемыеЗначения.ИспользуютсяТК Тогда
		ТекущаяСтрока.СторнироватьДанныеНСБУ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАОчистка(Элемент, СтандартнаяОбработка)	
	Элементы.ВНАВНА.ВыбиратьТип = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетРасходаНСБУПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;	
	
    СтруктураДействий = Новый Структура;	
    СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетРасходаМСФО", "СчетРасходаНСБУ"));    
	
	Кэш = Новый Структура("ШаблонТрансляции", КэшируемыеЗначения.ШаблонТрансляции);	
    ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, СтруктураДействий, Кэш);

	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.ВНАСчетРасходаМСФО, "ВНА");
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетРасходаМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетВыбытияВНАНСБУПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;	
	
    СтруктураДействий = Новый Структура;	
    СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетВыбытияВНАМСФО", "СчетВыбытияВНАНСБУ"));    
	
	Кэш = Новый Структура("ШаблонТрансляции", КэшируемыеЗначения.ШаблонТрансляции);	
    ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, СтруктураДействий, Кэш);

	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.ВНАСчетВыбытияВНАМСФО, "ВНА");
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетВыбытияВНАМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАГруппаВНАПриИзменении(Элемент)
	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Истина, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВНАПослеУдаления(Элемент)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ВНАПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	МСФОКлиентУХ.ТабличнаяЧастьПриОкончанииРедактирования(ЭтаФорма, Элемент, НоваяСтрока, ОтменаРедактирования);
КонецПроцедуры

&НаКлиенте
Процедура ВНАПередНачаломИзменения(Элемент, Отказ)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	ИменаСубконто = Этаформа.КэшируемыеЗначения.ИменаСубконто;
	
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчетаТЧ(Этаформа, ТекущаяСтрока, "СчетСписанияПриВыбытииМСФО", "ВНА", ИменаСубконто);
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАПриИзменении(Элемент)
	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Истина, Истина);
	ОбновитьОтображениеГруппыПодробно();
КонецПроцедуры

&НаКлиенте
Процедура ВНАЧастичноеВыбытиеНСБУПриИзменении(Элемент)
	ОбновитьОтображениеГруппыПодробно();
КонецПроцедуры

&НаКлиенте
Процедура ВНАЧастичноеВыбытиеМСФОПриИзменении(Элемент)
	ОбновитьОтображениеГруппыПодробно();
КонецПроцедуры

#КонецОбласти
 
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеТЧ

&НаКлиенте
Процедура Подключаемый_ЗаполнитьДокумент(РезультатВопроса = Неопределено, ДанныеЗаполнения) Экспорт
	
	Если (РезультатВопроса <> Неопределено) И (РезультатВопроса <> КодВозвратаДиалога.Да) Тогда
		Возврат;	
	КонецЕсли;
    
    ЗаполнитьДокумент(ДанныеЗаполнения);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ДанныеЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);
	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Истина);
	МСФОКлиентСерверУХ.ОбновитьВидимостьДокументыОснования(ЭтаФорма);	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_Общие

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)

	Если ЭтаФорма.КэшируемыеЗначения = Неопределено Тогда
		ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	КонецЕсли;
	
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", 		Документы.ВыбытиеВНАМСФО.ПолучитьИменаСубконто());	
		
	МСФОУХ.ПодготовитьФормуНаСервере(ЭтаФорма, "ВНА");
	
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "ВНА");
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	МСФОКлиентСерверУХ.УправлениеФормой(Форма, , Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоКолонкамНСБУСервер()
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);
КонецПроцедуры    

&НаСервере
Процедура ЗаполнитьТекущимиДаннымиСервер(ЗаполнитьРеквизиты = Ложь, ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь, СтрокаВНА = Ложь) 
	
	Если НЕ СтрокаВНА Тогда		
		СтрокиДляЗаполнения = Объект.ВНА;
	Иначе
		СтрокиДляЗаполнения = Новый Массив;
		СтрокиДляЗаполнения.Добавить(Объект.ВНА.НайтиПоИдентификатору(Элементы.ВНА.ТекущаяСтрока));	
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура("ЗаполнитьРеквизиты,ЗаполнитьНСБУ,ЗаполнитьМСФО", ЗаполнитьРеквизиты, ЗаполнитьНСБУ, ЗаполнитьМСФО);
	Документы.ВыбытиеВНАМСФО.ЗаполнитьСтроки(СтрокиДляЗаполнения, ЭтаФорма, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеГруппыПодробно()

	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Элементы.ВНАВыбытиеСтоимостиНСБУ.Видимость = ТекущаяСтрока.ЧастичноеВыбытиеНСБУ;
	Элементы.ВНАВыбытиеСтоимостиМСФО.Видимость = ТекущаяСтрока.ЧастичноеВыбытиеМСФО;

	Если Не Элементы.ГруппаПодробно.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	//ПараметрыУчетаВНА = ПолучитьПараметрыУчетаВНА(ТекущаяСтрока.ВНА, Объект.Дата, Объект.Организация, Объект.Сценарий, Объект.Ссылка);	
	//Элементы.ПараметрыУчетаВНАПараметрыВыбытияСчетВыбытияВНА.Видимость = ЗначениеЗаполнено(Элементы.ПараметрыУчетаВНАПараметрыВыбытияСчетВыбытияВНА.ТекстРедактирования);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыУчетаВНА(ОбъектВНА, ДатаАктуальности, Организация, Сценарий, ДокументСсылка)

	ПоляВНА = Новый Структура;
	ПоляВНА.Вставить("ВНА",				"ВНА");	
	ПоляВНА.Вставить("ВидУчета",		"ВидУчета");
	ПоляВНА.Вставить("ПараметрыУчета", 	"ГруппаВНА");
	ПоляВНА.Вставить("СчетУчета", 		"СчетУчетаПервоначальнойСтоимости");
	ПоляВНА.Вставить("СчетВыбытияВНА", 		"ГруппаВНА.ПараметрыВыбытия.СчетВыбытияВНА");
	
	РеквизитыВНА = МСФОВНАВызовСервераУХ.ПолучитьРеквизитыВНА(
					МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(ДатаАктуальности, ДокументСсылка),
					ОбъектВНА, 
					Организация, 
					Перечисления.ВидыУчета.МСФО, 
					Сценарий, 
					ПоляВНА);
	
	РеквизитыМСФО = РеквизитыВНА.МСФО.Получить(ОбъектВНА);
	
	Если РеквизитыМСФО = Неопределено Тогда
		Возврат РеквизитыМСФО.ПараметрыУчетаВНА;
	Иначе
		Возврат Справочники.ГруппыВНАМСФО.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

