#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьФактическиеДанные() Экспорт
	
	ГраницаФактическихДанных = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РасчетыСКонтрагентамиФакт.Период, ДЕНЬ) КАК Дата,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСКонтрагентамиФакт.СтатьяБюджета ССЫЛКА Справочник.СтатьиДвиженияДенежныхСредств
	|				ТОГДА РасчетыСКонтрагентамиФакт.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОплата,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСКонтрагентамиФакт.СтатьяБюджета ССЫЛКА Справочник.СтатьиДвиженияДенежныхСредств
	|				ТОГДА 0
	|			ИНАЧЕ РасчетыСКонтрагентамиФакт.Сумма
	|		КОНЕЦ) КАК СуммаНачисление
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентамиФакт КАК РасчетыСКонтрагентамиФакт
	|ГДЕ
	|	РасчетыСКонтрагентамиФакт.Организация = &Организация
	|	И РасчетыСКонтрагентамиФакт.Контрагент = &Контрагент
	|	И РасчетыСКонтрагентамиФакт.ОбъектРасчетов = &ОбъектРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РасчетыСКонтрагентамиФакт.Период, ДЕНЬ)";
	
	Запрос.УстановитьПараметр("ОбъектРасчетов", ОбъектРасчетов);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ИмяРеквизитаКонтрагент = ?(ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыКонтрагентов"), "Владелец", "Контрагент");
	
	Запрос.УстановитьПараметр("Контрагент", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектРасчетов, ИмяРеквизитаКонтрагент));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтрокиКУдалению = Новый Массив;
	Для Каждого ТекСтрокаГрафика Из График Цикл
		Если ТекСтрокаГрафика.Дата < ГраницаФактическихДанных Тогда
			СтрокиКУдалению.Добавить(ТекСтрокаГрафика);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из СтрокиКУдалению Цикл
		График.Удалить(ТекСтрока);
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		СуществующаяСтрокаГрафика = График.Найти(Выборка.Дата, "Дата");
		Если СуществующаяСтрокаГрафика = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(График.Добавить(), Выборка);
		Иначе
			СуществующаяСтрокаГрафика.СуммаНачисление	= Макс(СуществующаяСтрокаГрафика.СуммаНачисление, Выборка.СуммаНачисление);
			СуществующаяСтрокаГрафика.СуммаОплата		= Макс(СуществующаяСтрокаГрафика.СуммаОплата, Выборка.СуммаОплата);
		КонецЕсли;
	КонецЦикла;
	
	График.Свернуть("Дата","СуммаНачисление,СуммаОплата,СуммаЗадолженность");
	
	ОбновитьКолонкуЗадолженности();
	
КонецПроцедуры

Процедура ОбновитьКолонкуЗадолженности() Экспорт
	
	График.Сортировать("Дата");
	Задолженность = 0;
	Для Каждого ТекСтрока Из График Цикл
		Задолженность = Задолженность + ТекСтрока.СуммаНачисление - ТекСтрока.СуммаОплата;
		ТекСтрока.СуммаЗадолженность = Задолженность;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
			
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Перем Реквизиты;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ТипЗнчДанныеЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипЗнчДанныеЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнчДанныеЗаполнения = ТипЗнч(Ссылка) Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнчДанныеЗаполнения = Тип("СправочникСсылка.ДоговорыКонтрагентов")
		ИЛИ ТипЗнчДанныеЗаполнения = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ОбъектРасчетов = ДанныеЗаполнения;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектРасчетов) Тогда
		
		СтруктураРеквизитовШапки = Новый Структура("Организация,УсловиеОплаты,СуммаДокумента,ВалютаДокумента,ДоговорКонтрагента");
		
		Если ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СтруктураРеквизитовШапки.Организация		= "Организация";
			СтруктураРеквизитовШапки.УсловиеОплаты		= "УсловиеОплаты";
			СтруктураРеквизитовШапки.ДоговорКонтрагента	= "Ссылка";
			СтруктураРеквизитовШапки.СуммаДокумента		= "Сумма";
			СтруктураРеквизитовШапки.ВалютаДокумента	= "ВалютаВзаиморасчетов";
		ИначеЕсли ТипЗнч(ОбъектРасчетов) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			СтруктураРеквизитовШапки.Организация		= "Организация";
			СтруктураРеквизитовШапки.УсловиеОплаты		= "УсловиеОплаты";
			СтруктураРеквизитовШапки.ДоговорКонтрагента	= "Договор";
			СтруктураРеквизитовШапки.СуммаДокумента		= "СуммаДокумента";
			СтруктураРеквизитовШапки.ВалютаДокумента	= "Валюта";
			СтруктураРеквизитовШапки.Вставить("ДатаПоступления", "ДатаПоступления");
			
		КонецЕсли;
		
		РеквизитыШапки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектРасчетов, СтруктураРеквизитовШапки);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
		
		Если Не ЗначениеЗаполнено(ДокументОснование) Тогда
			ДокументОснование = РегистрыСведений.ВерсииРасчетов.ПолучитьАктуальнуюВерсиюФинансовогоИнструмента(ОбъектРасчетов);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Если Не ЗначениеЗаполнено(ОбъектРасчетов) Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование,, "Ссылка,Проведен,Номер,Дата,ПометкаУдаления,ДокументОснование");
		КонецЕсли;
		
		Для Каждого ТабЧасть Из Метаданные().ТабличныеЧасти Цикл
			ЭтотОбъект[ТабЧасть.Имя].Загрузить(ДокументОснование[ТабЧасть.Имя].Выгрузить());
		КонецЦикла;
		
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбъектРасчетов) Тогда
		ОбъектРасчетов = ДоговорКонтрагента;
	КонецЕсли;
	
	Если Не График.Количество() Тогда
		Если РеквизитыШапки <> Неопределено И РеквизитыШапки.Свойство("ДатаПоступления") 
			И ЗначениеЗаполнено(РеквизитыШапки.ДатаПоступления) Тогда
			БазоваяДата = РеквизитыШапки.ДатаПоступления;
			НовыйГрафик = РасчетГрафиковОперацийУХ.РассчитатьГрафикПоУсловиюОплаты(УсловиеОплаты, 
																					БазоваяДата, 
																					СуммаДокумента, 
																					Неопределено, 
																					Истина);
			Начисление = НовыйГрафик.Добавить();
			Начисление.Дата = БазоваяДата;
			Начисление.СуммаНачисление = СуммаДокумента;
			НовыйГрафик.Сортировать("Дата");
		Иначе
			Если ЗначениеЗаполнено(ДоговорКонтрагента.ДатаНачалаДействия) Тогда
				БазоваяДата = НачалоДня(ДоговорКонтрагента.ДатаНачалаДействия);
			Иначе	
				БазоваяДата = НачалоДня(ТекущаяДатаСеанса()) + 86400;
			КонецЕсли;
			НовыйГрафик = РасчетГрафиковОперацийУХ.РассчитатьГрафикПоУсловиюОплаты(УсловиеОплаты, 
																					БазоваяДата, 
																					СуммаДокумента, 
																					Неопределено, 
																					Ложь, 
																					0);
		КонецЕсли;
		
																		
		График.Загрузить(НовыйГрафик);
		ОбновитьКолонкуЗадолженности();
		
	КонецЕсли;
	
	// Не будем загружать факт для самой первой версии графика.
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ЗагрузитьФактическиеДанные();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ПараметрыПроведения = Документы.ГрафикРасчетовСПокупателемПоставщиком.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ПараметрыПроведения", ПараметрыПроведения);
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Для каждого ТаблицаДвижения Из ПараметрыПроведения.ТаблицыДляДвижений Цикл
		Движения[ТаблицаДвижения.Ключ].Загрузить(ТаблицаДвижения.Значение);
		Движения[ТаблицаДвижения.Ключ].Записывать = Истина;
	КонецЦикла;
		
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

	// Зеркалирование графика
	Если Не ДополнительныеСвойства.Свойство("НеОбновлятьЗеркально") Тогда
		ВстречныйДоговор = РегистрыСведений.СвязанныеДоговоры.ПолучитьВстречныйДоговор(ДоговорКонтрагента);
		Если ЗначениеЗаполнено(ВстречныйДоговор) Тогда
			
			ГрафикКопия = Документы.ГрафикРасчетовСПокупателемПоставщиком.СоздатьДокумент();
			ГрафикКопия.Заполнить(Ссылка);
			ГрафикКопия.Дата = Дата;
			ГрафикКопия.ОбъектРасчетов = ВстречныйДоговор;
			ГрафикКопия.ДополнительныеСвойства.Вставить("НеОбновлятьЗеркально");
			ГрафикКопия.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли