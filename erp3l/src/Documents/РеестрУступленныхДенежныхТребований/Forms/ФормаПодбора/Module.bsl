#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	Дата1 = ТекущаяДатаСеанса();
	ОбновитьНаСевере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Дерево
&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Выбрать(Неопределено);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	Если Элементы.Дерево.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Элементы.Дерево.ТекущиеДанные.ДокументРасчета) Тогда
		СтруктураВозврата = Новый Структура();
		СтруктураВозврата.Вставить("Контрагент", Элементы.Дерево.ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя().КонтрагентДоговор);
		СтруктураВозврата.Вставить("ДоговорКонтрагента", Элементы.Дерево.ТекущиеДанные.ПолучитьРодителя().КонтрагентДоговор);
		СтруктураВозврата.Вставить("ДокументРасчетов", Элементы.Дерево.ТекущиеДанные.ДокументРасчета);
		СтруктураВозврата.Вставить("СрокПогашения", Элементы.Дерево.ТекущиеДанные.СрокПогашения);
		СтруктураВозврата.Вставить("Сумма", Элементы.Дерево.ТекущиеДанные.Сумма);
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЭлементыСписка = Дерево.ПолучитьЭлементы();
	ЭлементыСписка.Очистить();
	ОбновитьНаСевере();
	ЭлементыСписка = Дерево.ПолучитьЭлементы();
	Для каждого Стр Из ЭлементыСписка Цикл
		Элементы.Дерево.Развернуть(Стр.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ОбновитьНаСевере()
	
	ДеревоЗначений = РеквизитФормыВЗначение("Дерево");
	//ДеревоЗначений = Новый ДеревоЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = ВзаиморасчетыВстраиваниеУХ.ТекстЗапросаОбновлениеРеестрУступленныхДенежныхСредств();	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
	    СтрокаКонтрагент = ДеревоЗначений.Строки.Добавить();
		СтрокаКонтрагент.КонтрагентДоговор = ВыборкаКонтрагент.Контрагент;
		ВыборкаДоговорКонтрагента = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаДоговорКонтрагента.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДоговорКонтрагента
			СтрокаДоговор = СтрокаКонтрагент.Строки.Добавить();
			СтрокаДоговор.КонтрагентДоговор = ВыборкаДоговорКонтрагента.ДоговорКонтрагента;
			ВыборкаДетальныеЗаписи = ВыборкаДоговорКонтрагента.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтрокаДетали = СтрокаДоговор.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДетали, ВыборкаДетальныеЗаписи);
				СтрокаДетали.КонтрагентДоговор = Неопределено;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "Дерево");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтбора(Элемент)
	Обновить(Неопределено);
КонецПроцедуры

#КонецОбласти

