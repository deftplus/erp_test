
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ЗаписанОбъектТрансляция" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ИсходныйДокумент.Видимость=Константы.ПодокументнаяТрансляция.Получить();
	Элементы.НаправлениеТрансляции.Видимость=ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом();
	Элементы.ТребуетсяПерезаполнение.Видимость=Константы.КонтролироватьСостояниеДокументаТрансляции.Получить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДокументыНаСервере()
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначений = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ОбработатьМассивДокументовНаСервере(ТаблицаЗначений.ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДокументы(Команда)
	
	ОписаниеОЗакрытии = Новый ОписаниеОповещения("ОбработкаДокументов_Завершение", ЭтотОбъект);
	ОткрытьФорму("Документ.Трансляция.Форма.ФормаНастройкиОбработки",,ЭтаФорма , , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаДокументов_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ВыбранноеЗначение.СпособОбработки="Все" Тогда
		
		ОбновитьДокументыНаСервере();
		
	Иначе
		
		ОбновитьВыделенныеДокументы();
		
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьМассивДокументовНаСервере(МассивДокументов)
	
	Обработки.КорректировкиЗначенийПоказателей.ОбновитьДокументыТрансляции(МассивДокументов);
	
КонецПроцедуры // ОбработатьМассивДокументовНаСервере() 

&НаКлиенте
Процедура ОбновитьВыделенныеДокументы()
	
	МассивДокументов=Новый Массив;
	
	Для Каждого Строка ИЗ Элементы.Список.ВыделенныеСтроки Цикл
		
		МассивДокументов.Добавить(Строка);
		
	КонецЦикла;
	
	ОбработатьМассивДокументовНаСервере(Новый ФиксированныйМассив(МассивДокументов));
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюОРасхожденияхНаСервере()
		
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	Трансляция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Трансляция КАК Трансляция
	|ГДЕ
	|	Трансляция.Проведен
	|	И НЕ Трансляция.Сторнирование
	|	И Трансляция.НаправлениеТрансляции = ЗНАЧЕНИЕ(Перечисление.НаправленияТрансляцииДанных.РегистрБухгалтерииВРегистрБухгалтерии)";
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Обработки.КорректировкиЗначенийПоказателей.ПроверитьУстановитьНаличиеРасхождений(Результат.Ссылка);
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОРасхождениях(Команда)
		
	ОбновитьИнформациюОРасхожденияхНаСервере();
	
КонецПроцедуры
