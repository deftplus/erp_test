#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначенияЗаполнения.Свойство("УОП") 
		И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.УОП)
		И ТипЗнч(Параметры.ЗначенияЗаполнения.УОП) = Тип("ДокументСсылка.УправлениеПериодомСценария") Тогда
		ДанныеДляЗаполнения = Новый Структура;
		ДанныеДляЗаполнения.Вставить("УОП", Параметры.ЗначенияЗаполнения.УОП);
		ДанныеДляЗаполнения.Вставить("Сценарий", Параметры.ЗначенияЗаполнения.УОП.Сценарий);
		ЗаполнитьУОПДляВыбранныхПозиций(ДанныеДляЗаполнения);
	КонецЕсли;
	
	УстановитьУсловноеОФормление();
	
	УправлениеФормой(ЭтотОбъект);
	
	УстановитьЗапретИзмененияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписанДокументУправлениеЛимитами");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьСценарийДляВсехСтрок(Команда)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("НачалоПериода", НачалоГода(Объект.НачалоГода));
	ДопПараметры.Вставить("ОкончаниеПериода", КонецГода(Объект.НачалоГода));
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьСценарийДляВсехСтрокЗавершение", ЭтотОбъект, ДопПараметры);
	
	ОткрытьФорму("Документ.УправлениеЛимитами.Форма.ФормаВыбораСценарияУОП", ДопПараметры, ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДанные

&НаКлиенте
Процедура ДанныеСценарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТД = Элементы.Данные.ТекущиеДанные;
	
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТД.ВидБюджета)
		ИЛИ НЕ ЗначениеЗаполнено(ТД.ПериодЛимитирования)Тогда
		Возврат;
	КонецЕсли;
	
	//
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("НачалоПериода", НачалоГода(Объект.НачалоГода));
	ДопПараметры.Вставить("ОкончаниеПериода", КонецГода(Объект.НачалоГода));
	
	ЗаполнитьЗначенияСвойств(ДопПараметры, ЭтотОбъект);
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьУОПДляСтрокиЗавершение", ЭтотОбъект, ДопПараметры);
	
	ОткрытьФорму("Документ.УправлениеЛимитами.Форма.ФормаВыбораСценарияУОП", ДопПараметры, ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеСценарийОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.Данные.ТекущиеДанные.УОП = ПредопределенноеЗначение("Документ.УправлениеПериодомСценария.ПустаяСсылка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборСписка(Список, СтруктураОтбора)
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Видимость колонки УОП
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.ДанныеУОП.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.ДанныеСценарий.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "Объект.ВидОперации", 
		ВидСравненияКомпоновкиДанных.НеРавно, Перечисления.ВидыОперацийУправлениеЛимитами.УстановкаЛимитовПоИсточнику,,Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСценарийДляВсехСтрокЗавершение(Результат, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ЗаполнитьУОПДляВыбранныхПозиций(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУОПДляВыбранныхПозиций(Результат)
	
	ДанныеУОП = ПолучитьДанныеУОП(Результат.УОП);
	Для Каждого Строка Из Объект.Данные Цикл
		ЗаполнитьУОПСценарийДляСтроки(Строка, Результат, ДанныеУОП);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУОПСценарийДляСтроки(Строка, Результат, ДанныеУОП)
	
	Если ЦФОПроектПериодЕстьВУОП(Строка.ЦФО, Строка.Проект, Строка.ПериодЛимитирования, ДанныеУОП) Тогда
		Строка.УОП = Результат.УОП;
		Строка.Сценарий = Результат.Сценарий;
	Иначе
		Строка.УОП = Документы.УправлениеПериодомСценария.ПустаяСсылка();
		Строка.Сценарий = Справочники.Сценарии.ПустаяСсылка();
		ШаблонСообщения = НСтр("ru = 'В строке %1 сценарий не установлен, так как в нем отсутствуют данные по ЦФО, Проекту и Периоду лимитирования'");
		ШаблонПутиПоля = "Объект.Данные[%1]";
		ПутьКПолю = СтрШаблон(ШаблонПутиПоля, Строка.НомерСтроки-1);
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщения, Строка.НомерСтроки), , ПутьКПолю + ".Сценарий");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеУОП(УОП)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УОП", УОП);
	Запрос.УстановитьПараметр("НачалоГода", Объект.НачалоГода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка КАК УОП,
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка.Сценарий КАК Сценарий,
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.ВидОтчета КАК ВидОтчета,
	|	ВидыОтчетовПараметрыУстановкиЛимитов.Ссылка.ОбъектДляСогласованияЗначений КАК ОбъектДляСогласования,
	|	ВидыБюджетов.Ссылка КАК ВидБюджета,
	|	ВидыОтчетовПараметрыУстановкиЛимитов.Предназначение КАК Предназначение,
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка.ПериодСценария.ДатаНачала КАК ДатаНачала,
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка.ПериодСценарияОкончание.ДатаОкончания КАК ДатаОкончания,
	|	ПараметрыЛимитированияСрезПоследних.ПериодичностьЛимитирования КАК ПериодичностьЛимитирования
	|ПОМЕСТИТЬ ВТ_ДанныеУОП
	|ИЗ
	|	Документ.УправлениеПериодомСценария.ВидыОтчетовДляУстановкиЛимитов КАК УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыОтчетов.ПараметрыУстановкиЛимитов КАК ВидыОтчетовПараметрыУстановкиЛимитов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыБюджетов КАК ВидыБюджетов
	|			ПО ВидыОтчетовПараметрыУстановкиЛимитов.Предназначение = ВидыБюджетов.Предназначение
	|		ПО УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.ВидОтчета = ВидыОтчетовПараметрыУстановкиЛимитов.Ссылка
	|			И (ВидыОтчетовПараметрыУстановкиЛимитов.Ссылка.МожетИспользоватьсяДляУстановкиЛимитов = ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЛимитирования.СрезПоследних(&НачалоГода, ) КАК ПараметрыЛимитированияСрезПоследних
	|		ПО (ВидыБюджетов.Ссылка = ПараметрыЛимитированияСрезПоследних.ВидБюджета)
	|			И (ПараметрыЛимитированияСрезПоследних.ИспользоватьЛимитирование = ИСТИНА)
	|ГДЕ
	|	УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка = &УОП
	|	И УправлениеПериодомСценарияВидыОтчетовДляУстановкиЛимитов.Ссылка.УстанавливатьЛимиты = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеУОП.УОП КАК УОП,
	|	ВТ_ДанныеУОП.Сценарий КАК Сценарий,
	|	ВТ_ДанныеУОП.ВидОтчета КАК ВидОтчета,
	|	ВТ_ДанныеУОП.ОбъектДляСогласования КАК ОбъектДляСогласования,
	|	ВТ_ДанныеУОП.ВидБюджета КАК ВидБюджета,
	|	ВТ_ДанныеУОП.Предназначение КАК Предназначение,
	|	ВТ_ДанныеУОП.ДатаНачала КАК ДатаНачала,
	|	ВТ_ДанныеУОП.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.Ссылка КАК ПериодЛимитирования
	|ПОМЕСТИТЬ ВТ_ДанныеУОППериоды
	|ИЗ
	|	ВТ_ДанныеУОП КАК ВТ_ДанныеУОП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Периоды КАК Периоды
	|		ПО ВТ_ДанныеУОП.ПериодичностьЛимитирования = Периоды.Периодичность
	|			И (Периоды.Произвольный = ЛОЖЬ)
	|			И (Периоды.ДатаНачала МЕЖДУ ВТ_ДанныеУОП.ДатаНачала И ВТ_ДанныеУОП.ДатаОкончания)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеУОППериоды.УОП КАК УОП,
	|	ВТ_ДанныеУОППериоды.Сценарий КАК Сценарий,
	|	ВТ_ДанныеУОППериоды.ВидОтчета КАК ВидОтчета,
	|	ВТ_ДанныеУОППериоды.ОбъектДляСогласования КАК ОбъектДляСогласования,
	|	ВТ_ДанныеУОППериоды.ВидБюджета КАК ВидБюджета,
	|	ВТ_ДанныеУОППериоды.Предназначение КАК Предназначение,
	|	ВТ_ДанныеУОППериоды.ДатаНачала КАК ДатаНачала,
	|	ВТ_ДанныеУОППериоды.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ДанныеУОППериоды.ПериодЛимитирования КАК ПериодЛимитирования,
	|	НастраиваемыйОтчет.Организация КАК ЦФО,
	|	НастраиваемыйОтчет.Проект КАК Проект
	|ИЗ
	|	ВТ_ДанныеУОППериоды КАК ВТ_ДанныеУОППериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ПО ВТ_ДанныеУОППериоды.УОП = НастраиваемыйОтчет.УправлениеПериодом
	|			И ВТ_ДанныеУОППериоды.ВидОтчета = НастраиваемыйОтчет.ВидОтчета
	|			И (ВТ_ДанныеУОППериоды.ОбъектДляСогласования = ЗНАЧЕНИЕ(Перечисление.ОбъектыСогласованияЗначенийПоказателейОтчетов.ЭкземплярОтчета))
	|ГДЕ
	|	НастраиваемыйОтчет.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеУОППериоды.УОП,
	|	ВТ_ДанныеУОППериоды.Сценарий,
	|	ВТ_ДанныеУОППериоды.ВидОтчета,
	|	ВТ_ДанныеУОППериоды.ОбъектДляСогласования,
	|	ВТ_ДанныеУОППериоды.ВидБюджета,
	|	ВТ_ДанныеУОППериоды.Предназначение,
	|	ВТ_ДанныеУОППериоды.ДатаНачала,
	|	ВТ_ДанныеУОППериоды.ДатаОкончания,
	|	ВТ_ДанныеУОППериоды.ПериодЛимитирования,
	|	РакурсДанных.Организация,
	|	РакурсДанных.Проект
	|ИЗ
	|	ВТ_ДанныеУОППериоды КАК ВТ_ДанныеУОППериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РакурсДанных КАК РакурсДанных
	|		ПО ВТ_ДанныеУОППериоды.ВидОтчета = РакурсДанных.Область.Владелец
	|			И (ВТ_ДанныеУОППериоды.ОбъектДляСогласования = ЗНАЧЕНИЕ(Перечисление.ОбъектыСогласованияЗначенийПоказателейОтчетов.Ракурс))
	|			И ВТ_ДанныеУОППериоды.ДатаНачала = РакурсДанных.ПериодНачалоДата
	|			И ВТ_ДанныеУОППериоды.ДатаОкончания = РакурсДанных.ПериодОкончаниеДата
	|ГДЕ
	|	РакурсДанных.ПометкаУдаления = ЛОЖЬ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЦФОПроектПериодЕстьВУОП(ЦФО, Проект, ПериодЛимитирования, ДанныеУОП)
	
	СтруктураПоиска = Новый Структура("ЦФО, Проект, ПериодЛимитирования", ЦФО, Проект, ПериодЛимитирования);
	Возврат ДанныеУОП.НайтиСтроки(СтруктураПоиска).Количество() > 0;
	
КонецФункции

&НаСервере
Процедура УстановитьЗапретИзмененияФормы()
	
	Элементы.ГруппаТолькоПросмотр.Видимость = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Или НЕ Объект.Проведен Тогда
		// Это новый или это непроведенный документ, то редактирование разрешено
		Возврат;
	КонецЕсли; 
	
	ТаблицаПоследующихДокументов = Документы.УправлениеЛимитами.ПоследующиеДокументы(Объект.Ссылка);
	Если ТаблицаПоследующихДокументов.Количество() > 0 Тогда
		
		Элементы.НадписьТолькоПросмотр.Заголовок = 
			НСтр("ru = 'Существуют документы, установившие лимиты после текущего документа. Документ открыт только для чтения.'");
		Элементы.ГруппаТолькоПросмотр.Видимость = Истина;
		ТолькоПросмотр = Истина;
		
		Элементы.ДанныеВыбратьСценарийДляВсехСтрок.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоУстановкаЛимитов = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийУправлениеЛимитами.УстановкаЛимитовПоИсточнику");
	
	Элементы.ДанныеВыбратьСценарийДляВсехСтрок.Видимость = ЭтоУстановкаЛимитов;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьУОПДляСтрокиЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьУОПДляТекущейСтрокиНаСервере(Результат);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУОПДляТекущейСтрокиНаСервере(Результат)
	ДанныеУОП = ПолучитьДанныеУОП(Результат.УОП);
	ТекущаяСтрока = Объект.Данные.НайтиПоИдентификатору(Элементы.Данные.ТекущаяСтрока);
	ЗаполнитьУОПСценарийДляСтроки(ТекущаяСтрока, Результат, ДанныеУОП);
КонецПроцедуры

#КонецОбласти

