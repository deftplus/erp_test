#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураСохраняемыхРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	#Область СтандартныеПодсистемы
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
	ПараметрыВыбораСтатейИАналитик = Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтруктураСохраняемыхРеквизитов = Новый Структура;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьЗначенияРеквизитовФормы();
	
	ДоходыИРасходыСервер.ПослеЗаписиНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество", ПараметрыЗаписи, Объект.Ссылка);
	ОбщегоНазначенияУТКлиент.ОповеститьОЗаписиДокументаВЖурнал();
	ВнеоборотныеАктивыКлиент.ОповеститьОЗаписиДокументаВЖурналОС();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если Объект.Дата >= '201901010000'
		И Объект.ВидОбъектаНалогаНаИмущество <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество") Тогда
		
		ТекстВопроса = НСтр("ru = 'С 2019 года налогом на имущество облагается только недвижимое имущество.
                             |Будет изменен вид имущества и очищен список выбранных основных средств.
                             |Продолжить?';
                             |en = 'Starting from 2019, only real estate is subject to property tax.
                             |The type of property will be changed and the list of selected fixed assets will be cleared. 
                             |Continue?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ДатаПриИзмененииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ДатаПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаНалогаНаИмуществоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидОбъектаНалогаНаИмущество)
		И СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество <> Объект.ВидОбъектаНалогаНаИмущество
		
		И ((СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество")
					ИЛИ СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ПустаяСсылка"))
				И (Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013")
					ИЛИ Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеДо2013"))
			ИЛИ (Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество")
					ИЛИ Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ПустаяСсылка"))
				И (СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013")
					ИЛИ СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеДо2013")))
				
		И Объект.ОС.Количество() <> 0 Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ВидОбъектаНалогаНаИмуществоПриИзмененииВопросЗавершение", ЭтаФорма),
			НСтр("ru = 'Таблица объектов налогообложения будет очищена. Продолжить?';
				|en = 'Taxation object table will be cleared. Continue?'"),
			РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		ВидОбъектаНалогаНаИмуществоПриИзмененииЗавершение(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаНалогаНаИмуществоПриИзмененииВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ВидОбъектаНалогаНаИмуществоПриИзмененииЗавершение(Истина);
	Иначе
		Объект.ВидОбъектаНалогаНаИмущество = СохраненныеЗначенияРеквизитов.ВидОбъектаНалогаНаИмущество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаНалогаНаИмуществоПриИзмененииЗавершение(ОчиститьТЧ)

	ВидОбъектаНалогаНаИмуществоПриИзмененииНаКлиенте(ОчиститьТЧ);
	
	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектаНалогаНаИмуществоПриИзмененииНаКлиенте(ОчиститьТЧ)
	
	СписокРеквизитов = "ВидОбъектаНалогаНаИмущество";
	
	Если ОчиститьТЧ Тогда
		Объект.ОС.Очистить();
	КонецЕсли; 
	
	ОбновитьПорядокНалогообложения(ЭтаФорма, СписокРеквизитов);
	
	Если Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "2010257"
		И Объект.ВидОбъектаНалогаНаИмущество <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") Тогда
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	КонецЕсли;
	
	Если Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = ""
		И Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") 
		И Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "2010257";
	КонецЕсли;

	НастроитьЗависимыеЭлементыФормы(СписокРеквизитов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПорядокНалогообложения(Форма, СписокРеквизитов)

	Объект = Форма.Объект;
	
	Если Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") Тогда
		
		Если Объект.Дата >= '201801010000' Тогда
			
			Если Форма.ОсвобождениеОтНалогообложенияДвижимогоИмущества 
				И Объект.ПорядокНалогообложения <> ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
				Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения");
				СписокРеквизитов = СписокРеквизитов + ",ПорядокНалогообложения";
			ИначеЕсли НЕ Форма.ОсвобождениеОтНалогообложенияДвижимогоИмущества 
				И Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены") Тогда
				Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСтавкеДляДвижимогоИмущества");
				СписокРеквизитов = СписокРеквизитов + ",ПорядокНалогообложения";
			КонецЕсли;
			
		ИначеЕсли Объект.ПорядокНалогообложения <> ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
			
			Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения");
			СписокРеквизитов = СписокРеквизитов + ",ПорядокНалогообложения";
			
		КонецЕсли;
		
	Иначе
		
		Если Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСтавкеДляДвижимогоИмущества") Тогда
			Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены");
			СписокРеквизитов = СписокРеквизитов + ",ПорядокНалогообложения";
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПорядокНалогообложенияПриИзменении(Элемент)
	
	СписокРеквизитов = "ПорядокНалогообложения";
	
	Если Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения") Тогда
		Если Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") Тогда
			Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "2010257";
		КонецЕсли; 
	Иначе
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
		СписокРеквизитов = СписокРеквизитов + ",КодНалоговойЛьготыОсвобождениеОтНалогообложения";
	КонецЕсли; 
	
	Если Объект.ПорядокНалогообложения <> ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке") Тогда
		Объект.СниженнаяНалоговаяСтавка = 0;
		СписокРеквизитов = СписокРеквизитов + ",СниженнаяНалоговаяСтавка";
	КонецЕсли; 
	
	Если Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению") Тогда
		Объект.ОтражениеРасходов.Очистить();
	КонецЕсли; 
	
	НастроитьЗависимыеЭлементыФормы(СписокРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговаяБазаПриИзменении(Элемент)
	
	Если Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость") Тогда
		Объект.КодВидаИмущества = "11";
	Иначе
		Объект.КодВидаИмущества = "03";
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы("НалоговаяБаза,КодВидаИмущества");
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыОсвобождениеОтНалогообложенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта", "РегистрСведений");
	ПараметрыФормы.Вставить("НазваниеОбъекта", "СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам");
	ПараметрыФормы.Вставить("НазваниеМакета", "ЛьготыПоНалогуНаИмущество");
	ПараметрыФормы.Вставить("ТекущийПериод", Объект.Дата);
	ПараметрыФормы.Вставить("ТекущийКод", Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормаВыбораКода",
		ПараметрыФормы,,,,,
		Новый ОписаниеОповещения("КодНалоговойЛьготыОсвобождениеОтНалогообложенияНачалоВыбораЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КодНалоговойЛьготыОсвобождениеОтНалогообложенияПриИзменении(Элемент)
	
	ПроверитьКодЛьготы(Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ПостановкаНаУчетВНалоговомОрганеПриИзменении(Элемент)
	
	Если Объект.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане") Тогда
		
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("НалоговыйОрган", Объект, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("НалоговаяСтавка", Объект, СтруктураСохраняемыхРеквизитов);
		
		Если Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСтавкеДляДвижимогоИмущества") Тогда
			Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены");
		КонецЕсли;
		
	ИначеЕсли Объект.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО") Тогда
		
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		ВосстановитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтаФорма, Объект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговаяСтавка", ЭтаФорма, Объект, СтруктураСохраняемыхРеквизитов);
		
	Иначе
		
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойКод", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойКод", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговыйОрган", ЭтаФорма, Объект, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКАТО_ДругойНалоговыйОрган", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("КодПоОКТМО_ДругойНалоговыйОрган", ЭтаФорма, ЭтаФорма, СтруктураСохраняемыхРеквизитов);
		СохранитьЗначениеРеквизитаФормы("НалоговаяСтавка", ЭтаФорма, Объект, СтруктураСохраняемыхРеквизитов);
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы("ПостановкаНаУчетВНалоговомОргане");
	
КонецПроцедуры

&НаКлиенте
Процедура НалоговыйОрганПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.НалоговыйОрган) Тогда
		НалоговыйОрганПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НалоговыйОрганПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.НалоговыйОрган) Тогда
		РеквизитыНалоговогоОргана = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.НалоговыйОрган, "КодПоОКТМО, КодПоОКАТО");
		КодПоОКТМО_ДругойНалоговыйОрган = РеквизитыНалоговогоОргана.КодПоОКТМО;
		КодПоОКАТО_ДругойНалоговыйОрган = РеквизитыНалоговогоОргана.КодПоОКАТО;
		
		Объект.КодПоОКТМО = КодПоОКТМО_ДругойНалоговыйОрган;
		Объект.КодПоОКАТО = КодПоОКАТО_ДругойНалоговыйОрган;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМО_ДругойКодПриИзменении(Элемент)
	
	Объект.КодПоОКТМО = КодПоОКТМО_ДругойКод;
	
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойКодПриИзменении(Элемент)
	Объект.КодПоОКАТО = КодПоОКАТО_ДругойКод;
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМО_ДругойНалоговыйОрганПриИзменении(Элемент)
	Объект.КодПоОКТМО = КодПоОКТМО_ДругойНалоговыйОрган;
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТО_ДругойНалоговыйОрганПриИзменении(Элемент)
	Объект.КодПоОКАТО = КодПоОКАТО_ДругойНалоговыйОрган;
КонецПроцедуры

&НаКлиенте
Процедура КодВидаИмуществаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость") Тогда
		НазваниеМакета = "КодыВидаИмуществаРаздел3";
	Иначе
		НазваниеМакета = "КодыВидаИмуществаРаздел2";
	КонецЕсли;
	
	ВыборКода("КодВидаИмущества", НазваниеМакета);

КонецПроцедуры

&НаКлиенте
Процедура КБКНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборКода("КБК", "КБК");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтражениеРасходов

&НаКлиенте
Процедура ОтражениеРасходовСтатьяРасходовПриИзменении(Элемент)
	
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеРасходовСтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеРасходовАналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеРасходовАналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеРасходовАналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

&НаКлиенте
Процедура ОСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВнеоборотныеАктивыКлиентСервер.ОбработкаВыбораЭлемента(Объект.ОС, "ОсновноеСредство", ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыПодбора = ВнеоборотныеАктивыКлиентСервер.ПараметрыПодбора(Элементы.ОСОсновноеСредство, ЭтаФорма);
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаВыбора", 
					ПараметрыПодбора, Элементы.ОС,,,,, 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборКода(ИмяКода, НазваниеМакета)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"РегистрСведений");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам");
	ПараметрыФормы.Вставить("НазваниеМакета",	НазваниеМакета);
	ПараметрыФормы.Вставить("ТекущийПериод",	Объект.Дата);
	ПараметрыФормы.Вставить("ТекущийКод",		Объект[ИмяКода]);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКода", ИмяКода);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборКодаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораКода", ПараметрыФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКодаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ИмяКода = ДополнительныеПараметры.ИмяКода;
	
	ВыбранныйКод = РезультатЗакрытия;
	
	Если ВыбранныйКод <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Объект[ИмяКода] = ВыбранныйКод;
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ИмяКода);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	#Область ОтноситсяКТерриторииСубъектаРФВДоле
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляСтоимостиЧислитель.Имя);
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляСтоимостиЗнаменатель.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОС.ОтноситсяКТерриторииСубъектаРФВДоле");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	#КонецОбласти
	
	#Область ОтноситсяКТерриторииСубъектаРФВДоле
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляВПравеОбщейСобственностиЧислитель.Имя);
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляВПравеОбщейСобственностиЗнаменатель.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОС.ОбщаяСобственность");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	#КонецОбласти

	#Область ОтноситсяКТерриторииСубъектаРФВДоле
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляПлощадиЧислитель.Имя);
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДоляПлощадиЗнаменатель.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОС.КадастроваяСтоимостьОпределенаПоДолеПлощади");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	#КонецОбласти
	
	#Область НалогообложениеПоКадастровойСтоимости
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСКадастровыйНомер.Имя);
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСКадастроваяСтоимость.Имя);
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСДатаРегистрацииПраваСобственности.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалоговаяБаза");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	#КонецОбласти
	
	#Область ОтражениеРасходовПодразделение
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтражениеРасходовПодразделение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтражениеРасходов.Подразделение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Местонахождение ОС>';
																|en = '<FA location>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	#КонецОбласти
	
	#Область ОтражениеРасходовНаправлениеДеятельности
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтражениеРасходовНаправлениеДеятельности.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтражениеРасходов.НаправлениеДеятельности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Направление деятельности ОС>';
																|en = '<FA line of business>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	КодыВидовИмущества = ПолучитьКодыВидовИмущества();
	КБК = ПолучитьКБК();
	ПолучитьСтавкуНалогаНаИмущество();
	
	ЗаполнитьЗначенияРеквизитовФормы();
	НастроитьЗависимыеЭлементыФормыНаСервере();
	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияРеквизитовФормы()
	
	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
	СовмещениеОСНОиЕНВД = ЕстьСовмещениеОСНОиЕНВД(Объект.Организация, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
	
	Если Объект.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО Тогда
		КодПоОКТМО_ДругойКод = Объект.КодПоОКТМО;
		КодПоОКАТО_ДругойКод = Объект.КодПоОКАТО;
	ИначеЕсли Объект.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		КодПоОКТМО_ДругойНалоговыйОрган = Объект.КодПоОКТМО;
		КодПоОКАТО_ДругойНалоговыйОрган = Объект.КодПоОКАТО;
	КонецЕсли;
	КодПоОКТМО_Исходный = Объект.КодПоОКТМО;
	КодПоОКАТО_Исходный = Объект.КодПоОКАТО;
	
	ПараметрыДокумента = Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ПараметрыДокумента();
	ДоступныеАмортизационныеГруппы = Новый ФиксированныйМассив(ПараметрыДокумента.ДоступныеАмортизационныеГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(ИзмененныеРеквизиты = Неопределено)

	Если ТребуетсяВызовСервераДляНастройкиЭлементовФормы(ИзмененныеРеквизиты) Тогда
		НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныеРеквизиты)
	Иначе
		НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтаФорма, ИзмененныеРеквизиты);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(ИзмененныеРеквизиты)
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);

	Если СтруктураИзмененныхРеквизитов.Количество() = 0
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("КодВидаИмущества")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПостановкаНаУчетВНалоговомОргане") Тогда
			
		Возврат Истина;
	КонецЕсли; 
	
	Возврат Ложь;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(Форма, ИзмененныеРеквизиты = Неопределено)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = (ИзмененныеРеквизиты = Неопределено);
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокНалогообложения") Тогда
		
		ОсвобождениеОтНалогообложения = (Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения"));
		
		Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.Доступность = ОсвобождениеОтНалогообложения;
		Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.АвтоОтметкаНезаполненного = ОсвобождениеОтНалогообложения;
		Элементы.КодНалоговойЛьготыОсвобождениеОтНалогообложения.ОтметкаНезаполненного = ОсвобождениеОтНалогообложения И ПустаяСтрока(Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ОблагаетсяПоСниженнойСтавке = (Объект.ПорядокНалогообложения = ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке"));
		
		Элементы.СниженнаяНалоговаяСтавка.Доступность = ОблагаетсяПоСниженнойСтавке;
		Элементы.СниженнаяНалоговаяСтавка.АвтоОтметкаНезаполненного = ОблагаетсяПоСниженнойСтавке;
		Элементы.СниженнаяНалоговаяСтавка.ОтметкаНезаполненного = ОблагаетсяПоСниженнойСтавке И Объект.СниженнаяНалоговаяСтавка = 0;
		
		ПодлежитНалогообложению = (Объект.ПорядокНалогообложения <> ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению"));
		Элементы.СтраницаНалоговыйОрган.Доступность = ПодлежитНалогообложению;
		Элементы.СтраницаОтражениеРасходов.Доступность = ПодлежитНалогообложению;
		
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("ПостановкаНаУчетВНалоговомОргане") Тогда
		
		ПостановкаНаУчетСДругимКодомПоОКАТО = (Объект.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО"));
		
		Элементы.КодПоОКТМО_ДругойКод.Доступность = ПостановкаНаУчетСДругимКодомПоОКАТО;
		Элементы.КодПоОКТМО_ДругойКод.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
		Элементы.КодПоОКТМО_ДругойКод.ОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(Форма.КодПоОКТМО_ДругойКод);
		
		Элементы.КодПоОКАТО_ДругойКод.Доступность = ПостановкаНаУчетСДругимКодомПоОКАТО;
		Элементы.КодПоОКАТО_ДругойКод.АвтоОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО;
		Элементы.КодПоОКАТО_ДругойКод.ОтметкаНезаполненного = ПостановкаНаУчетСДругимКодомПоОКАТО И ПустаяСтрока(Форма.КодПоОКАТО_ДругойКод);
		
		ПостановкаНаУчетВДругомНалоговомОргане = 
			(Объект.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане"));
		
		Элементы.НалоговыйОрган.Доступность = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.НалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.НалоговыйОрган.ОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане И Объект.НалоговыйОрган.Пустая();
		
		Элементы.КодПоОКТМО_ДругойНалоговыйОрган.Доступность = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.КодПоОКТМО_ДругойНалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.КодПоОКТМО_ДругойНалоговыйОрган.ОтметкаНезаполненного = 
			ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(Форма.КодПоОКТМО_ДругойНалоговыйОрган);
		
		Элементы.КодПоОКАТО_ДругойНалоговыйОрган.Доступность = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.КодПоОКАТО_ДругойНалоговыйОрган.АвтоОтметкаНезаполненного = ПостановкаНаУчетВДругомНалоговомОргане;
		Элементы.КодПоОКАТО_ДругойНалоговыйОрган.ОтметкаНезаполненного = 
			ПостановкаНаУчетВДругомНалоговомОргане И ПустаяСтрока(Форма.КодПоОКАТО_ДругойНалоговыйОрган);
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("НалоговаяБаза") Тогда
		
		ОпределениеНалоговойБазыПоКадастровойСтоимости = 
			(Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость"));
		
		Элементы.НалоговаяСтавкаКадастроваяСтоимость.Доступность = ОпределениеНалоговойБазыПоКадастровойСтоимости;
		Элементы.НалоговаяСтавкаКадастроваяСтоимость.АвтоОтметкаНезаполненного = Элементы.НалоговаяСтавкаКадастроваяСтоимость.Доступность;
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("НалоговаяБаза") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ПостановкаНаУчетВНалоговомОргане") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") Тогда
		
		ЭтоДвижимоеИмущество = 
			(Объект.ВидОбъектаНалогаНаИмущество <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество"));
		
		ПостановкаНаУчетВДругомНалоговомОргане = 
			(Объект.ПостановкаНаУчетВНалоговомОргане = ПредопределенноеЗначение("Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане"));
		
		ОпределениеНалоговойБазыПоКадастровойСтоимости = 
			(Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость"));
		
		Элементы.НалоговаяСтавкаДругойНалоговыйОрган.Видимость = 
			Не ОпределениеНалоговойБазыПоКадастровойСтоимости Или ЭтоДвижимоеИмущество;
		
		Элементы.НалоговаяСтавкаДругойНалоговыйОрганДекорацияЕдиницаИзмерения.Видимость = 
			Не ОпределениеНалоговойБазыПоКадастровойСтоимости Или ЭтоДвижимоеИмущество;
			
		Элементы.НалоговаяСтавкаДругойНалоговыйОрган.Доступность = 
			(Не ОпределениеНалоговойБазыПоКадастровойСтоимости Или ЭтоДвижимоеИмущество) 
			И ПостановкаНаУчетВДругомНалоговомОргане;
				
		Элементы.НалоговаяСтавкаДругойНалоговыйОрган.АвтоОтметкаНезаполненного = 
			(Не ОпределениеНалоговойБазыПоКадастровойСтоимости Или ЭтоДвижимоеИмущество) 
			И ПостановкаНаУчетВДругомНалоговомОргане;
			
		Элементы.НалоговаяСтавкаДругойНалоговыйОрган.ОтметкаНезаполненного = 
			(Не ОпределениеНалоговойБазыПоКадастровойСтоимости Или ЭтоДвижимоеИмущество) 
			И ПостановкаНаУчетВДругомНалоговомОргане 
			И Не ЗначениеЗаполнено(Объект.НалоговаяСтавка);
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или СтруктураИзмененныхРеквизитов.Свойство("НалоговаяБаза") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") Тогда
		
		ЭтоНедвижимоеИмущество = (Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество"));
		ОпределениеНалоговойБазыПоКадастровойСтоимости = (Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость"));
		Элементы.ГруппаИспользуетсяТолькоВДеятельностиОблагаемойЕНВД.Видимость = (Форма.СовмещениеОСНОиЕНВД И ЭтоНедвижимоеИмущество И ОпределениеНалоговойБазыПоКадастровойСтоимости);
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокНалогообложения") Тогда
		
		ПодлежитНалогообложению = (Объект.ПорядокНалогообложения <> ПредопределенноеЗначение("Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению"));
		ЭтоНедвижимоеИмущество = (Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество"));
		
		Элементы.ГруппаКолонокОС.Видимость = ПодлежитНалогообложению И ЭтоНедвижимоеИмущество;
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("КБК") Тогда
		
		Элементы.КБК.Подсказка = Форма.КБК.Получить(Объект.КБК);
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") Тогда
		
		Если Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество") Тогда
			
			ТекстПодсказки = НСтр("ru = 'Недвижимое имущество, по умолчанию подлежит налогообложению';
									|en = 'Real estate, subject to taxation by default'");
			
		ИначеЕсли Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеДо2013") Тогда
			
			ТекстПодсказки = НСтр("ru = 'Движимое имущество, принятое на учет до 2013 года, по умолчанию подлежит налогообложению';
									|en = 'Movable property that was put into operation before 2013 is subject to property tax.'");
			
		ИначеЕсли Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") Тогда
			
			Если Объект.Дата < '201801010000' И Объект.Дата <> '000101010000'
				ИЛИ Форма.ОсвобождениеОтНалогообложенияДвижимогоИмущества Тогда
				ТекстПодсказки = НСтр("ru = 'Движимое имущество, принятое на учет с 1 января 2013 года, по умолчанию освобождается от налогообложения';
										|en = 'Movable property that was put into operation after January 1, 2013 is not subject to property tax.'");
			Иначе
				ТекстПодсказки = НСтр("ru = 'Движимое имущество, принятое на учет с 1 января 2013 года, по умолчанию подлежит налогообложению';
										|en = 'Movable property that was put into operation before January 1, 2013 is subject to taxation'");
			КонецЕсли;
			
		Иначе
			
			ТекстПодсказки = "";
			
		КонецЕсли;
		
		Элементы.ВидОбъектаНалогаНаИмущество.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(Знач ИзмененныеРеквизиты = Неопределено)

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Или СтруктураИзмененныхРеквизитов.Свойство("Дата") Тогда
		
		До2014 = (Объект.Дата <> Дата(1, 1, 1, 0, 0, 0) И Год(Объект.Дата) < 2014);
		Элементы.КодПоОКАТО_ДругойКод.Видимость = До2014;
		Элементы.КодПоОКАТО_ДругойНалоговыйОрган.Видимость = До2014;
		
		Элементы.НалоговаяБаза_СреднегодоваяСтоимость.ТолькоПросмотр = До2014;
		Элементы.НалоговаяБаза_КадастроваяСтоимость.ТолькоПросмотр = До2014;
		
		СовмещениеОСНОиЕНВД = ЕстьСовмещениеОСНОиЕНВД(Объект.Организация, Объект.Дата);
		
		Элементы.ВидОбъектаНалогаНаИмущество.Видимость = (Объект.Дата < '201901010000' И Объект.Дата <> '000101010000');
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаНалогаНаИмущество") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата")
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПостановкаНаУчетВНалоговомОргане") Тогда
		
		ЭтоНедвижимоеИмущество = (Объект.ВидОбъектаНалогаНаИмущество = Перечисления.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество);
		
		Элементы.СтраницаОсновныеСредства.Заголовок = ?(
			ЭтоНедвижимоеИмущество,
			НСтр("ru = 'Недвижимое имущество';
				|en = 'Real estate'"),
			НСтр("ru = 'Движимое имущество';
				|en = 'Movable property'"));
		
		Элементы.ГруппаНалоговаяБаза.Видимость = ЭтоНедвижимоеИмущество;
		
		Элементы.ПорядокНалогообложения_ОсобыеЛьготыНеУстановлены.СписокВыбора[0].Представление = НСтр("ru = 'Особые льготы не установлены';
																										|en = 'Special benefits are not set'");
		Элементы.ПорядокНалогообложения_НеПодлежитНалогообложению.Видимость = Истина;
		
		Элементы.ПорядокНалогообложения_ПоСтавкеДляДвижимогоИмущества.Видимость = Ложь;
		
		СвязиПараметровВыбораОС = Новый Массив;
		СвязиПараметровВыбораОС.Добавить(Новый СвязьПараметраВыбора("ДатаСведений", "Объект.Дата", РежимИзмененияСвязанногоЗначения.НеИзменять));
		СвязиПараметровВыбораОС.Добавить(Новый СвязьПараметраВыбора("ТекущийРегистратор", "Объект.Ссылка"));
		
		ПараметрыВыбораОС = Новый Массив;
		
		ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Отбор.ВидНалога", Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество));
		ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Контекст", "БУ, МФУ, УУ"));
		
		Если Объект.Дата < '201901010000' И Объект.Дата <> '000101010000' Тогда
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Отбор.АмортизационнаяГруппа", ДоступныеАмортизационныеГруппы));
		КонецЕсли;
		
		Если Объект.ВидОбъектаНалогаНаИмущество = Перечисления.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество Тогда
			
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Отбор.НедвижимоеИмущество", Истина));
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("ЗаголовокФормы", НСтр("ru = 'Недвижимое имущество';
																					|en = 'Real estate'")));
			
		ИначеЕсли Объект.ВидОбъектаНалогаНаИмущество = Перечисления.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеДо2013 Тогда
			
			СвязиПараметровВыбораОС.Добавить(Новый СвязьПараметраВыбора("Отбор.БУОрганизация", "Объект.Организация", РежимИзмененияСвязанногоЗначения.Очищать));
			
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Отбор.БУСостояние", ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")));
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("ДвижимоеИмуществоПринятоеДо2013", Истина));
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("ЗаголовокФормы", НСтр("ru = 'Движимое имущество принятое к учету до 2013 г';
																					|en = 'Movable property recognized before 2013'")));
			
		ИначеЕсли Объект.ВидОбъектаНалогаНаИмущество = Перечисления.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013 Тогда
			
			СвязиПараметровВыбораОС.Добавить(Новый СвязьПараметраВыбора("Отбор.БУОрганизация", "Объект.Организация",  РежимИзмененияСвязанногоЗначения.Очищать));
			
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("Отбор.БУСостояние", Перечисления.СостоянияОС.ПринятоКУчету));
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("ДвижимоеИмуществоПринятоеС2013", Истина));
			ПараметрыВыбораОС.Добавить(Новый ПараметрВыбора("ЗаголовокФормы", НСтр("ru = 'Движимое имущество принятое к учету с 2013 г';
																					|en = 'Movable property recognized since 2013'")));
			
			Если ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()) >= '201801010000' 
				И Объект.ПостановкаНаУчетВНалоговомОргане <> Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
				
				Если ОбщаяНалоговаяСтавка <> 0 Тогда
					ТекстВыбора = СтрШаблон(НСтр("ru = 'Подлежит налогообложению, применяется общая ставка %1%%';
												|en = 'Subject to taxation, total rate of %1%% is used'"), ОбщаяНалоговаяСтавка);
				Иначе
					ТекстВыбора = НСтр("ru = 'Подлежит налогообложению, применяется общая ставка';
										|en = 'Subject to taxation, total rate is used'");
				КонецЕсли;
				Элементы.ПорядокНалогообложения_ПоСтавкеДляДвижимогоИмущества.Видимость = Истина;
				
			Иначе	
				ТекстВыбора = НСтр("ru = 'Подлежит налогообложению';
									|en = 'Subject to taxation'");
			КонецЕсли; 
			Элементы.ПорядокНалогообложения_ОсобыеЛьготыНеУстановлены.СписокВыбора[0].Представление = ТекстВыбора;
			
			Элементы.ПорядокНалогообложения_НеПодлежитНалогообложению.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ОСОсновноеСредство.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораОС);
		Элементы.ОСОсновноеСредство.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбораОС);
		
	КонецЕсли;
	
	Если ОбновитьВсе 
		Или СтруктураИзмененныхРеквизитов.Свойство("КодВидаИмущества") Тогда
		
		Элементы.КодВидаИмущества.Подсказка = КодыВидовИмущества.Получить(Объект.КодВидаИмущества);
		Элементы.КБК.Видимость = Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ТребуетсяУказаниеКБК(Объект.КодВидаИмущества);
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормыНаКлиентеНаСервере(ЭтаФорма, ИзмененныеРеквизиты);

КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ЕстьСовмещениеОСНОиЕНВД(Организация, Период)
	
	Если Дата('20140701') <= Период И Период < Дата('20150101') Тогда
		Возврат УчетнаяПолитика.СистемаНалогообложения(Организация, Период) = Перечисления.СистемыНалогообложения.Общая
			И УчетнаяПолитика.ПлательщикЕНВД(Организация, Период);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СохранитьЗначениеРеквизитаФормы(ИмяРеквизита, Форма, Данные, СтруктураРеквизитов)
	
	СтруктураРеквизитов.Вставить(ИмяРеквизита, Данные[ИмяРеквизита]);
	
	Данные[ИмяРеквизита] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Данные[ИмяРеквизита]));
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьЗначениеРеквизитаФормы(ИмяРеквизита, Данные, СтруктураРеквизитов)

	Если СтруктураРеквизитов.Свойство(ИмяРеквизита) Тогда
		Данные[ИмяРеквизита] = СтруктураРеквизитов[ИмяРеквизита];
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьГоловнуюОрганизацию(ЭтаФорма);
	ПолучитьСтавкуНалогаНаИмущество();
	
	НастроитьЗависимыеЭлементыФормыНаСервере("Организация");

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Объект.Дата = СохраненныеЗначенияРеквизитов.Дата;
		Возврат;
	КонецЕсли;
	
	Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество");
	
	ВидОбъектаНалогаНаИмуществоПриИзмененииНаКлиенте(Истина);
	
	ДатаПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	Если Объект.Дата <> Дата(1, 1, 1, 0, 0, 0) И Объект.Дата < '20140101' Тогда
		Объект.НалоговаяБаза = ПредопределенноеЗначение("Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость");
	КонецЕсли;
	
	ПолучитьСтавкуНалогаНаИмущество();
	
	СписокРеквизитов = "Дата";
	
	ОбновитьПорядокНалогообложения(ЭтаФорма, СписокРеквизитов);
	
	НастроитьЗависимыеЭлементыФормыНаСервере(СписокРеквизитов);

	СохранитьЗначенияРеквизитов(ЭтаФорма);
	
КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьГоловнуюОрганизацию(Форма)
	
	Форма.ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Форма.Объект.Организация);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодыВидовИмущества()

	КодыВидовИмущества = Новый Соответствие;
	
	Для Сч = 2 По 3 Цикл
		
		ИмяМакета = "КодыВидаИмуществаРаздел" + Строка(Сч);
		
		Макет = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПолучитьМакет(ИмяМакета);
		ТекущаяОбласть = Макет.Области.Найти("Область2017");
	
		Если ТекущаяОбласть = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				КодыВидовИмущества.Вставить(КодПоказателя, Название);
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(КодыВидовИмущества);

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКБК()

	КБК = Новый Соответствие;
	
	Макет = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПолучитьМакет("КБК");
	ТекущаяОбласть = Макет.Области.Найти("Область2008");
	
	Если ТекущаяОбласть <> Неопределено Тогда
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			КБК.Вставить(КодПоказателя, Название);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Новый ФиксированноеСоответствие(КБК);
	
КонецФункции

&НаКлиенте
Процедура КодНалоговойЛьготыОсвобождениеОтНалогообложенияНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьКодЛьготы(РезультатЗакрытия, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКодЛьготы(НовыйКодЛьготы, ЗначениеПоУмолчанию)

	Если НовыйКодЛьготы = "2010257"
		И Объект.ВидОбъектаНалогаНаИмущество <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013") Тогда
		ТекстВопроса = НСтр("ru = 'Код льготы 2010257 может применяться только для движимого имущества принятого с 2013 г.
                             |Изменить вид имущества на ""Движимое имущество принятое к учету с 2013 г""?';
                             |en = 'Benefit code 2010257 can be applied only for movable property recognized since 2013.
                             |Change the property kind to Movable property recognized since 2013?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьВидОбъектаНалогаНаИмуществоЗавершение", ЭтотОбъект, ЗначениеПоУмолчанию);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	Иначе
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = НовыйКодЛьготы;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидОбъектаНалогаНаИмуществоЗавершение(РезультатВопроса, ЗначениеПоУмолчанию) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = "2010257";
		ОчиститьТЧ = (Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.НедвижимоеИмущество"));
		Объект.ВидОбъектаНалогаНаИмущество = ПредопределенноеЗначение("Перечисление.ВидыОбъектовНалогаНаИмущество.ДвижимоеИмуществоПринятоеС2013");
		ВидОбъектаНалогаНаИмуществоПриИзмененииЗавершение(ОчиститьТЧ);
	ИначеЕсли ЗначениеПоУмолчанию <> Неопределено Тогда
		Объект.КодНалоговойЛьготыОсвобождениеОтНалогообложения = ЗначениеПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСтавкуНалогаНаИмущество()

	ДатаДок = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	
	Если ДатаДок < '201801010000' Тогда
		ОсвобождениеОтНалогообложенияДвижимогоИмущества = Истина;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтавкиНалога.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	СтавкиНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалога.НалоговаяСтавкаДвижимоеИмущество КАК НалоговаяСтавкаДвижимоеИмущество
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Дата, Организация = &Организация) КАК СтавкиНалога";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", ДатаДок);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОсвобождениеОтНалогообложенияДвижимогоИмущества = Выборка.ОсвобождениеОтНалогообложенияДвижимогоИмущества;
		НалоговаяСтавкаДляДвижимогоИмущества = Выборка.НалоговаяСтавкаДвижимоеИмущество;
		ОбщаяНалоговаяСтавка = Выборка.НалоговаяСтавка;
	Иначе
		ОсвобождениеОтНалогообложенияДвижимогоИмущества = Ложь;
		НалоговаяСтавкаДляДвижимогоИмущества = 0;
		ОбщаяНалоговаяСтавка = 0;
	КонецЕсли; 

	ТекстВыбора = СтрШаблон(НСтр("ru = 'Подлежит налогообложению, применяется ставка для движимого имущества %1%%';
								|en = 'Subject to taxation, %1%% tax rate for movable property is used'"), НалоговаяСтавкаДляДвижимогоИмущества);
	Элементы.ПорядокНалогообложения_ПоСтавкеДляДвижимогоИмущества.СписокВыбора[0].Представление = ТекстВыбора;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьЗначенияРеквизитов(Форма)

	СохраненныеЗначенияРеквизитов = Новый Структура("Дата,ВидОбъектаНалогаНаИмущество");
	ЗаполнитьЗначенияСвойств(СохраненныеЗначенияРеквизитов, Форма.Объект);
	Форма.СохраненныеЗначенияРеквизитов = Новый ФиксированнаяСтруктура(СохраненныеЗначенияРеквизитов);
	
КонецПроцедуры

#КонецОбласти
