#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
#Область ОбработчикиСобытийОбъекта


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ПроверитьПередЗаписью(Отказ, РежимЗаписи, РежимПроведения);
	// Установим код на ЕИС.
	ЭтоПроведение = (РежимЗаписи = РежимЗаписиДокумента.Проведение);
	ТребуетсяУстановкаКода = ((ЭтоПроведение) И (НЕ ЗначениеЗаполнено(УИД_ЕИС)));
	Если ТребуетсяУстановкаКода Тогда
		УИД_ЕИС = Строка(Ссылка.УникальныйИдентификатор());
	Иначе
		// Установка кода не требуется. Ничего не делаем.
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	Если ЭтоФЗ223() Тогда
		ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Константы.ВалютаУчетаЦентрализованныхЗакупок.Получить();
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПрограммаЗакупок") Тогда
		// Заполнение шапки.
		ДокументОснование = ДанныеЗаполнения;
		ЗакупкаИнновационнойВысокотехнологичнойПродукцииИЛекарственныхСредств 
			= ДокументОснование.ЗакупкаИнновационнойВысокотехнологичнойПродукцииИЛекарственныхСредств;
		ОрганизацияДляЗаключенияДоговора	 = ДокументОснование.ОрганизацияДляЗаключенияДоговора;
		ПериодЗакупок						 = ДокументОснование.ПериодЗакупок;
		УИД_ЕИС								 = Строка(Новый УникальныйИдентификатор);
		РегистрационныйНомер				 = ДокументОснование.РегистрационныйНомер;
		// Заполнение табличной части СтрокиПланаЗакупок.
		СтрокиПланаЗакупок.Очистить();
		Для Каждого ТекСтрокиПланаЗакупок Из ДокументОснование.СтрокиПланаЗакупок Цикл
			НоваяСтрока = СтрокиПланаЗакупок.Добавить();
			СтараяСтрокаПлана = ТекСтрокиПланаЗакупок.СтрокаПланаЗакупок;
			НоваяСтрокаПлана = Документы.СтрокаПланаЗакупок.ПолучитьАктуальнуюСтрокуПлана(СтараяСтрокаПлана);
			НоваяСтрока.СтрокаПланаЗакупок = НоваяСтрокаПлана;
		КонецЦикла;
		// Заполнение табличной части СтрокиПланаВалютные.
		СтрокиПланаВалютные.Очистить();
		Для Каждого ТекСтрокиПланаВалютные Из ДокументОснование.СтрокиПланаВалютные Цикл
			НоваяСтрока = СтрокиПланаВалютные.Добавить();
			СтараяСтрокаПлана = ТекСтрокиПланаЗакупок.СтрокаПланаЗакупок;
			НоваяСтрокаПлана = Документы.СтрокаПланаЗакупок.ПолучитьАктуальнуюСтрокуПлана(СтараяСтрокаПлана);
			НоваяСтрока.СтрокаПланаЗакупок = НоваяСтрокаПлана;
		КонецЦикла;
	Иначе
		// Неизвестный вариант. Не требуется дополнительной обработки. 
	КонецЕсли;
	УстановитьНомерВерсии();	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
	УИД_ЕИС = "";
	РегистрационныйНомерЕИС = 0;
	НомерВерсии = 1;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Инициализация.
	СтатусЧерновик = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Черновик;
	СтатусРазмещен = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Размещен;
	СтатусОбъекта = УправлениеПроцессамиСогласованияУХ.ВернутьСтатусОбъекта(Ссылка, СтатусЧерновик);
	ОбъектРазмещен = (СтатусОбъекта = СтатусРазмещен);
	// Регистр Версии ЕИС.
	НаборЗаписей = РегистрыСведений.ВерсииОбъектовДляЕИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Ссылка); 
	НаборЗаписей.Отбор.НомерВерсии.Установить(НомерВерсии); 
	НоваяЗапись = НаборЗаписей.Добавить(); 
	НоваяЗапись.Объект					 = Ссылка; 
	НоваяЗапись.НомерВерсии				 = НомерВерсии; 
	Если (НЕ ЗначениеЗаполнено(ДокументОснование)) И (СокрЛП(ОбоснованиеИзменений) = "") Тогда
		НоваяЗапись.ОбоснованиеИзменений	 = "-";
	Иначе
		НоваяЗапись.ОбоснованиеИзменений	 = ОбоснованиеИзменений; 
	КонецЕсли;
	НоваяЗапись.Дата					 = Дата; 
	НоваяЗапись.ГУИДВерсии				 = Ссылка.УникальныйИдентификатор(); 
	НоваяЗапись.Размещен				 = ОбъектРазмещен; 
	НаборЗаписей.Записать(); 
	// Регистр ВерсииПрограммыЗакупок.
	Движения.ВерсииПрограммыЗакупок.Записывать = Истина;
	Движения.ВерсииПрограммыЗакупок.Очистить();
	Движение = Движения.ВерсииПрограммыЗакупок.Добавить();
	Движение.Период				 = Дата;
	Движение.Регистратор		 = Ссылка;
	Движение.ПериодЗакупки		 = ПериодЗакупок;
	Движение.Организация		 = ОрганизацияДляЗаключенияДоговора;
	Движение.ИнновационныйПлан	 = ЗакупкаИнновационнойВысокотехнологичнойПродукцииИЛекарственныхСредств;
	Движение.НомерВерсии		 = НомерВерсии;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ЭтоФЗ223() Тогда
		ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
		Если ВалютаДокумента <> ВалютаРегл Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя записать план закупок по ФЗ-223 с валютой отличной от регламентированой.'");
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения,	Отказ, , СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	// Проверим заполнение Обоснования.
	Если (ЗначениеЗаполнено(ДокументОснование)) И (НЕ ЗначениеЗаполнено(ОбоснованиеИзменений)) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено Обоснование изменений для версии программы закупки. Запись отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Отказ = Истина;
	Иначе
		// Проверка пройдена успешно.
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроверитьПередЗаписью(Отказ, РежимЗаписиДокумента.ОтменаПроведения, РежимПроведенияДокумента.Оперативный);
КонецПроцедуры

#КонецОбласти


#Область ПрограмныйИнтерфейс


Функция ЭтоФЗ223()
	Возврат Документы.ПрограммаЗакупок.ЭтоФЗ223(ЭтотОбъект);
КонецФункции

Процедура ПроверитьПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Проверим существование документов с аналогичными реквизитами.
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение ИЛИ НЕ ПометкаУдаления Тогда
		СсылкаНаАналог = Документы.ПрограммаЗакупок.ПолучитьАналогичныйДокумент(ЭтотОбъект);
		Если ЗначениеЗаполнено(СсылкаНаАналог) Тогда
			ТекстСообщения = НСтр("ru = 'По данному набору реквизитов уже введен документ %СсылкаНаАналог%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СсылкаНаАналог%", Строка(СсылкаНаАналог));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения,	Отказ, , СтатусСообщения.Важное);
		КонецЕсли;
	КонецЕсли;
	// Запретим перезапись размещенной программы.
	СтатусЧерновик = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Черновик;
	СтатусРазмещен = Перечисления.СтатусыВыгружаемыхОбъектовЕИС.Размещен;
	СтатусДокумента = УправлениеПроцессамиСогласованияУХ.ВернутьСтатусОбъекта(Ссылка, СтатусЧерновик);
	Если СтатусДокумента = СтатусРазмещен Тогда
		ТекстСообщения = НСтр("ru = 'Документ ""%Документ%"" размещён. Запись отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Строка(Ссылка));
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Отказ = Истина;
	Иначе
		// Разрешаем в прочих случаях.
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьНомерВерсии()
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		НомерВерсии = ДокументОснование.НомерВерсии + 1;
	Иначе
		НомерВерсии = 1;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#КонецЕсли