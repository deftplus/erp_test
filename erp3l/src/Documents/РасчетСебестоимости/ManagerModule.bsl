#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ, ДопПараметры = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = ПолучитьРеквизиты(Запрос, ДопПараметры, Отказ);
	ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты);
	Реквизиты.Вставить("ФормулыНаглядно",  ФормулыНаглядно(Реквизиты));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапроса_НачальноеРаспределение(Реквизиты, НомераТаблиц);
	
	ЧислоРаспределений	= ПолучитьЧислоРаспределений(Запрос.Выполнить(), НомераТаблиц.втРаспределение_1);
	НомерИтерации 		= 1;
		
	Пока (ЧислоРаспределений > 0) И (НомерИтерации < Реквизиты.ЧислоИтераций) Цикл
		
		НомерИтерацииПредыдущий = НомерИтерации;
		НомерИтерации = НомерИтерации + 1;
		
		Запрос.Текст = ТекстЗапроса_Распределение(НомерИтерацииПредыдущий, НомерИтерации, Не Реквизиты.РежимОтладки);		
		ЧислоРаспределений = ПолучитьЧислоРаспределений(Запрос.Выполнить(), 2);
				
	КонецЦикла; 
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапроса_Движения(НомераТаблиц, НомерИтерации, Реквизиты);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Возврат ПолучитьПараметрыПроведения(ДополнительныеСвойства, Реквизиты, РезультатПакета, НомераТаблиц, Запрос.МенеджерВременныхТаблиц);
		
КонецФункции

// Функция - Формулы наглядно
//
// Параметры:
//  Реквизиты	 - <Структура> - используемые реквизиты документа(ЭлиминирующаяОрганизация, КорректировкиЗапасов, ЗакрытиеЗатрат, КорректировкиАмортизации)
// 
// Возвращаемое значение:
//   -  Структура(ОстатокБезНСБУ, ОстатокСНСБУ, ЦенаСписанияМПЗ, БазаЗнаменательИтераций)
//где
//
//ОстатокБезНСБУ 
//		- остаток для распределения (сколько нужно списать из узла - для МПЗ и ВНА - по средней, для НЗП - остаток МСФО)
//		см. ШаблонЗапроса_УзлыФормулы, ТекстЗапроса_РаспределениеНачальное(ОстатокДляРаспределения КАК СуммаБаза)
//
// ОстатокСНСБУ  
//		- остаток для распределения (сколько нужно списать из узла для НЗП - остаток МСФО+НСБУ)
//		см. ШаблонЗапроса_УзлыФормулы, ТекстЗапроса_РаспределениеНачальное(ОстатокДляРаспределения КАК СуммаБаза)
//
// ЦенаСписанияМПЗ 	
//		- (для МПЗ) Цена списания МПЗ, до которой дб скорректировано каждое списание 
//		из узла (у каждого списания может быть свое отклонение от цены)
//  	- (для АВНА) Сумма списания накопленной амортизации при выбытии ВНА 
//		(см. ТекстЗапроса_РаспределениеНачальное - втСписаниеНА.СписаниеАВНА)
//		см. ТекстЗапроса_ОборотыУзлов
//
// БазаЗнаменательИтераций 
//		- знаменатель формулы при вычислении доли последующих (после первого) распределений
//      	(для МПЗ - количество СНД+ДО, для НЗП/ВНА - сумма СНД+ДО)
//		см. ТекстЗапроса_ОборотыУзлов
//
Функция ФормулыНаглядно(Реквизиты) Экспорт
	
	Формулы = Новый Структура("ОстатокБезНСБУ, ОстатокСНСБУ, ЦенаСписанияМПЗ, БазаЗнаменательИтераций",
		Новый Структура("НЗП, МПЗ, ВНА, АВНА"), Новый Структура("НЗП, МПЗ, ВНА, АВНА"),
		Новый Структура("НЗП, МПЗ, ВНА, АВНА"), Новый Структура("НЗП, МПЗ, ВНА, АВНА"));

	Если Реквизиты.КорректировкиЗапасов Тогда
		
		ЦенаСписанияМПЗ 	= "(Сумма_СНД + Сумма_ДО) / (Кол_СНД + Кол_ДО)";//ЦенаСписанияМПЗ
		ОстатокСписанияМПЗ 	= СтрЗаменить("Кол_КО * Цена - Сумма_КО", "Цена", ЦенаСписанияМПЗ);//ранее ФормулаМПЗ,ФормулаВГОМПЗ		
		
		Формулы.ОстатокБезНСБУ.МПЗ = ВыборКогда(ОстатокСписанияМПЗ, "(Кол_КО <> 0) И (Кол_СНД + Кол_ДО <> 0)");//корр по цене МПЗ
		Формулы.ЦенаСписанияМПЗ.МПЗ = ВыборКогда(ЦенаСписанияМПЗ, "&Делитель");
		Формулы.БазаЗнаменательИтераций.МПЗ = "Кол_СНД + Кол_ДО"; // ранее ФормулаДоляМПЗ
		
	КонецЕсли;
	
	Если Реквизиты.ЗакрытиеЗатрат Тогда
		Формула = "Сумма_Э_МСФО_СНД + Сумма_Э_МСФО_ДО - Сумма_Э_МСФО_КО";
		Формулы.ОстатокБезНСБУ.НЗП = ВыборКогда(Формула, "НЕ (Сумма_Э_МСФО_КО > 0 И (&Формула) < 0)");//списываем остаток МСФО
		Формулы.ОстатокСНСБУ.НЗП = "Сумма_Э_СНД + Сумма_Э_ДО - Сумма_Э_КО";//ранее ФормулаОстатки
		Формулы.БазаЗнаменательИтераций.НЗП = "Сумма_НСБУ_СНД + Сумма_НСБУ_ДО";
	КонецЕсли;
	
	Если Реквизиты.КорректировкиАмортизации Тогда
		
		//например: ПСНСБУ=100, НАНСБУ=20, АНСБУ=10, ВыбНАНСБУ=30, ПСМСФО=10, НАМСФО=2, тогда при полном выбытии 
		//АМСФО(ОстатокБезНСБУ.АВНА) = АНСБУ * ПСМСФО / ПСНСБУ - АМСФО = 10 * 10 / 100 - 0 = 1
		//ВыбНАМСФО(ЦенаСписанияМПЗ.АВНА) = (-НАМСФО-АМСФО) * (ВыбНАНСБУ / (-НАНСБУ-АНСБУ)) = (-2-1) * (30/(-20-10)) = 3
		
		Формула = "Сумма_НСБУ_КО * Доля_НСБУ_БС - Сумма_Э_МСФО_КО";
		Формулы.ОстатокБезНСБУ.АВНА = ВыборКогда(Формула, "Доля_НСБУ_БС <> 0");//Корр. АВНА списываем в доле КоррПСМСФО / ПСНСБУ
		Формулы.БазаЗнаменательИтераций.АВНА = "0";//не распределеятся
		
		//ЦенаСписанияМПЗ - используем для списания накопленной амортизации 
		//если остаток ВНА НСБУ = 0 то в МСФО тоже все списать
		ОстатокМСФО = "Сумма_Э_МСФО_СНД + Сумма_Э_МСФО_ДО - Сумма_Э_МСФО_КО";//остаток МСФО
		ДоляСписания = ВыборКогда("Сумма_НСБУ_ДО / (Сумма_НСБУ_СНД - Сумма_НСБУ_КО)", "&Делитель");
		Формулы.ЦенаСписанияМПЗ.АВНА = СтрШаблон("(%1 - %2) * %3", ОстатокМСФО, Формулы.ОстатокБезНСБУ.АВНА, ДоляСписания);
		
		Формула = "Сумма_НСБУ_КО * (Сумма_Э_МСФО_СНД + Сумма_Э_МСФО_ДО) / (Сумма_НСБУ_СНД + Сумма_НСБУ_ДО) - Сумма_Э_МСФО_КО";
		Формулы.ОстатокБезНСБУ.ВНА = ВыборКогда(Формула, "(Сумма_НСБУ_СНД + Сумма_НСБУ_ДО) <> 0");//Корр. ПСВНА списываем в доле КоррПСМСФО / ПСНСБУ
		Формулы.БазаЗнаменательИтераций.ВНА = "Сумма_СНД + Сумма_ДО";
		
	КонецЕсли;
	
	Если Не Реквизиты.ЭлиминирующаяОрганизация Тогда
		
		Для каждого ф Из Формулы Цикл
			Для каждого ТипЗакрытия Из ф.Значение Цикл
				ф.Значение[ТипЗакрытия.Ключ] = СтрЗаменить(ТипЗакрытия.Значение, "_Э", "");
			КонецЦикла;
		КонецЦикла;
			
	КонецЕсли;
	
	Возврат Формулы;

КонецФункции

#Область ПодготовитьПараметрыПроведения
			
#Область ПодготовкаПараметровПроведенияДокумента

Функция ПолучитьРеквизиты(Запрос, ДопПараметры = Неопределено, Отказ = Неопределено)
	
	ДопРеквизиты = "ПериодОтчета, ДатаНачала, ДатаОкончания, ВидОтчета, ЭлиминирующаяОрганизация, 
					|КорректировкиАмортизации, КорректировкиЗапасов, ЗакрытиеЗатрат, ЧислоИтераций, РегистрУчета";
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, ДопРеквизиты, "ПериодОтчета", Отказ);
	
	РежимОтладки = Не ОбщегоНазначенияКлиентСервер.РежимОтладки();
	ОписаниеРегистра = МСФОВызовСервераУХ.ОписаниеРегистра(Реквизиты.РегистрУчета);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Реквизиты, ОписаниеРегистра, Истина);
	
	Реквизиты.Вставить("ВидОперации", 		ПредопределенноеЗначение("Справочник.ВидыОпераций._03РасчетСебестоимости"));
	Реквизиты.Вставить("РежимОтладки", 		РежимОтладки);
	Реквизиты.Вставить("ПланСчетовМСФО",	ОписаниеРегистра.ПланСчетов);//имя в тч для движенийТК
	Реквизиты.Вставить("ПредПериод",		ОбщегоНазначенияУХ.глОтносительныйПериод(Реквизиты.ПериодОтчета, -1, Истина));
	Реквизиты.Вставить("РеквизитыОшибки", 	Новый Структура("СчетДт,СчетКт", НСтр("ru = 'Счет Дт'"), НСтр("ru = 'Счет Кт'")));
	Реквизиты.Вставить("ОрганизацииМПЗ",	Реквизиты.Организация);
	
	Если Реквизиты.ЭлиминирующаяОрганизация Тогда
		Периметр = УправлениеРабочимиПроцессамиУХ.ПолучитьСоставПериметраКонсолидации(
						Реквизиты.Сценарий, Реквизиты.ПериодОтчета, Реквизиты.Организация);
		Реквизиты.Вставить("ОрганизацииМПЗ", 	Периметр.ВыгрузитьКолонку("ИндивидуальнаяОрганизация"));		
	КонецЕсли;
	
	Если ДопПараметры <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, ДопПараметры);
	КонецЕсли;
	
	Возврат Реквизиты;

КонецФункции

Процедура ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты)
	
	Запрос.УстановитьПараметр("Ссылка",						Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Сценарий",					Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ВидОперации",				Реквизиты.ВидОперации);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацииМПЗ",				Реквизиты.ОрганизацииМПЗ);
	Запрос.УстановитьПараметр("ЭлиминирующаяОрганизация",	Реквизиты.ЭлиминирующаяОрганизация);
	Запрос.УстановитьПараметр("ПланСчетовМСФО",				Реквизиты.ПланСчетовМСФО);
	Запрос.УстановитьПараметр("ЭтоМСФО",					Реквизиты.ЭтоМСФО);
	
	Запрос.УстановитьПараметр("КорректировкиАмортизации",	Реквизиты.КорректировкиАмортизации);
	Запрос.УстановитьПараметр("КорректировкиЗапасов",		Реквизиты.КорректировкиЗапасов);
	Запрос.УстановитьПараметр("ЗакрытиеЗатрат",				Реквизиты.ЗакрытиеЗатрат);	
	
	Запрос.УстановитьПараметр("ПредПериод",					Реквизиты.ПредПериод);		
	Запрос.УстановитьПараметр("Период",						Реквизиты.Период);//дата проводок	
	Запрос.УстановитьПараметр("ПериодОтчета",				Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("НачалоПериода",				Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				КонецДня(Реквизиты.ДатаОкончания));//обороты за весь месяц включительно
	
	Запрос.УстановитьПараметр("ВидОтчета",					Справочники.ВидыОтчетов.ПолучитьВидОтчетаОСВ(Реквизиты.ПланСчетовМСФО));
	
	Запрос.УстановитьПараметр("ЭлементЗатрат_Амортизация", 					ВстраиваниеУХКлиентСервер.ЭлементЗатрат_Амортизация());
	Запрос.УстановитьПараметр("ЭлементЗатрат_МатериальныеЗатраты",			ВстраиваниеУХКлиентСервер.ЭлементЗатрат_МатериальныеЗатраты());
	Запрос.УстановитьПараметр("ЭлементЗатрат_ОплатаТруда",					ВстраиваниеУХКлиентСервер.ЭлементЗатрат_ОплатаТруда());
	Запрос.УстановитьПараметр("ЭлементЗатрат_ОтчисленияНаСоциальныеНужды", 	ВстраиваниеУХКлиентСервер.ЭлементЗатрат_ОтчисленияНаСоциальныеНужды());
	Запрос.УстановитьПараметр("ЭлементЗатрат_ПрочиеЗатраты", 				ВстраиваниеУХКлиентСервер.ЭлементЗатрат_ПрочиеЗатраты());
	
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("РаспределитьТолькоМСФО", Истина);
	
	РолиВидовСубконто = Новый Структура("СтатьиЗатрат,ЭлементыЗатрат", ВстраиваниеУХКлиентСервер.ТипыСтатьиЗатрат(), ВстраиваниеУХКлиентСервер.ТипыЭлементыЗатрат());
	
	Запрос.УстановитьПараметр("СтатьяЗатратПоУмолчанию", 	Новый(РолиВидовСубконто.СтатьиЗатрат[0]));
	Запрос.УстановитьПараметр("ЭлементЗатратПоУмолчанию", 	Новый(РолиВидовСубконто.ЭлементыЗатрат[0]));
	Запрос.УстановитьПараметр("ТипыСтатьяЗатрат", 			РолиВидовСубконто.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ТипыЭлементЗатрат", 			РолиВидовСубконто.ЭлементыЗатрат);
	
	Запрос.УстановитьПараметр("пвхВидДвижений", 			ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.ВидыДвижений);
	
	НомераТаблиц = Новый Структура;	
	
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_Элиминирующие(		НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ВидыСубконтоАВНА(	НомераТаблиц, Реквизиты.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_РазделыПланаСчетов(	НомераТаблиц, Реквизиты.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаУчета(			НомераТаблиц, Реквизиты.ЭтоМСФО));	
	ТекстЗапроса.Добавить(ТекстЗапроса_ВидыСубконто(		НомераТаблиц, Реквизиты.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_ВариантыОтборов(		НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_БазыЗапросамиПустая(	НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ЗапросыПравил(		НомераТаблиц));
	      
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	ТипЗначенияСубконто = РезультатПакет[НомераТаблиц.ВидыСубконто].Выгрузить().ВыгрузитьКолонку("ТипЗначенияСубконто");
	
	Запрос.УстановитьПараметр("ПустыеТипы",		ПолучитьЗначенияПустыхСубконто(ТипЗначенияСубконто));
	Запрос.УстановитьПараметр("Элиминирующие",	РезультатПакет[НомераТаблиц.Элиминирующие].Выгрузить().ВыгрузитьКолонку("Организация"));
	
	Реквизиты.Вставить("ВариантыОтборов", РезультатПакет[НомераТаблиц.ВариантыОтборов].Выгрузить());
	
	Если Не РезультатПакет[НомераТаблиц.ЗапросыПравил].Пустой() Тогда
		
		ВыборкаПравилТаблицами = РезультатПакет[НомераТаблиц.ЗапросыПравил].Выбрать();
		НомераТаблиц = Новый Структура;
		Подготовить_БазыРаспределенияЗапросами(Запрос, ВыборкаПравилТаблицами, НомераТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЗначенияПустыхСубконто(ОписанияТиповИзСубконто)

	Результат = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Неопределено);
	Результат.Добавить(ПредопределенноеЗначение("Справочник.ПроизвольныйКлассификаторУХ.ПустаяСсылка"));
	Результат.Добавить(ПредопределенноеЗначение("Справочник.Субконто.ПустаяСсылка"));
	
	Для каждого ТекущееОписаниеТипа Из ОписанияТиповИзСубконто Цикл
		Для каждого ТекущийТип Из ТекущееОписаниеТипа.Типы() Цикл
			Результат.Добавить(Новый(ТекущийТип));
		КонецЦикла;
	КонецЦикла;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(Результат);
	
КонецФункции

Процедура Подготовить_БазыРаспределенияЗапросами(Запрос, ВыборкаПравилТаблицами, НомераТаблиц)

	ТаблицыПоПравилам = Новый Соответствие;
	ТекстЗапроса = Новый Массив;
	ИмяТаблицыПравила = "втБазаРаспределенияПриемника";
	
	Пока ВыборкаПравилТаблицами.Следующий() Цикл
		
		НомерПравила = СокрЛП(ВыборкаПравилТаблицами.Код);
		Запрос.УстановитьПараметр("Правило" + НомерПравила, ВыборкаПравилТаблицами.Правило);
		ТаблицыПоПравилам.Вставить("Правило" + НомерПравила, ИмяТаблицыПравила + НомерПравила);
	
		ТекстЗапросаПравило = СтрЗаменить(ВыборкаПравилТаблицами.Запрос, "&Правило", "&Правило" + НомерПравила);
		ТекстЗапросаПравило = СтрЗаменить(ТекстЗапросаПравило, ИмяТаблицыПравила, ИмяТаблицыПравила + НомерПравила);
		
		ТекстЗапроса.Добавить(ТекстЗапросаПравило);
		
	КонецЦикла;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "БазыРаспределенияЗапросами"));
	ТекстЗапроса.Добавить(ТекстЗапроса_БазыЗапросамиСвод(ТаблицыПоПравилам));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	РезультатЗапроса = Запрос.Выполнить();

КонецПроцедуры

#Область СчетаУчета

Функция ТекстЗапроса_РазделыПланаСчетов(НомераТаблиц, ЭтоМСФО = Истина)
	
	Если Не ЭтоМСФО Тогда
		Возврат ТекстЗапроса_РазделыПланаСчетовНСБУ(НомераТаблиц);
	КонецЕсли;
	
	НомераТаблиц.Вставить("втРазделыПланаСчетов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Раздел,
	|	ВЫБОР
	|		КОГДА &КорректировкиАмортизации
	|			ТОГДА ""ВНА""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТипЗакрытияРаздела
	|ПОМЕСТИТЬ втРазделыПланаСчетов
	|ИЗ
	|	Справочник.РазделыПланаСчетов КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнеоборотныеАктивы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Ссылка,
	|	ВЫБОР
	|		КОГДА &КорректировкиЗапасов
	|			ТОГДА ""МПЗ""
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|ИЗ
	|	Справочник.РазделыПланаСчетов КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Запасы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Ссылка,
	|	ВЫБОР
	|		КОГДА &ЗакрытиеЗатрат
	|				И т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.НезавершенныеОперации))
	|			ТОГДА ""НЗП""
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|ИЗ
	|	Справочник.РазделыПланаСчетов КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.НезавершенныеОперации), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Себестоимость), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.КоммерческиеАдминистративныеРасходы), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнереализационныеДоходыИРасходы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Раздел";

КонецФункции

Функция ТекстЗапроса_РазделыПланаСчетовНСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("втРазделыПланаСчетов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Счет,
	|	ВЫБОР ПОДСТРОКА(т.Код, 0, 1)
	|		КОГДА ""0""
	|			ТОГДА ""ВНА""
	|		КОГДА ""1""
	|			ТОГДА ""МПЗ""
	|		КОГДА ""2""
	|			ТОГДА ""НЗП""
	|		КОГДА ""3""
	|			ТОГДА ""НЗП""
	|		КОГДА ""4""
	|			ТОГДА ""НЗП""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТипЗакрытияРаздела
	|ПОМЕСТИТЬ втРазделыПланаСчетов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК т
	|ГДЕ
	|	НЕ т.Забалансовый
	|	И НЕ т.ЗапретитьИспользоватьВПроводках
	|	И ПОДСТРОКА(т.Код, 0, 1) В (""0"", ""1"", ""2"", ""3"", ""4"", ""9"")
	|	И НЕ ПОДСТРОКА(т.Код, 0, 2) В (""00"", ""19"", ""42"", ""99"")";

КонецФункции

Функция ТекстЗапроса_ВидыСубконтоАВНА(НомераТаблиц, ЭтоМСФО = Истина)

	НомераТаблиц.Вставить("втВидыСубконтоАВНА", НомераТаблиц.Количество());
	
	Если ЭтоМСФО Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	т.Ссылка КАК ВидСубконто
		|ПОМЕСТИТЬ втВидыСубконтоАВНА
		|ИЗ
		|	ПланВидовХарактеристик.ВидыСубконтоКорпоративные КАК т
		|ГДЕ
		|	&КорректировкиАмортизации
		|	И (т.ПредставлениеТипа ПОДОБНО ""%Справочник.ОсновныеСредства%""
		|			ИЛИ т.ПредставлениеТипа ПОДОБНО ""%Справочник.НематериальныеАктивы%""
		|			ИЛИ т.ПредставлениеТипа ПОДОБНО ""%Справочник.РасходыБудущихПериодов%"")";
		
		ИмяОС 	= ОбщегоНазначения.ИмяТаблицыПоСсылке(ВстраиваниеУХКлиентСервер.ПолучитьПустуюСсылкуОС());
		ИмяРБП 	= ОбщегоНазначения.ИмяТаблицыПоСсылке(ВстраиваниеУХКлиентСервер.ПолучитьПустуюСсылкуРБП());
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ОсновныеСредства", ИмяОС);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.РасходыБудущихПериодов", ИмяРБП);

	Иначе 
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	т.Ссылка КАК ВидСубконто
		|ПОМЕСТИТЬ втВидыСубконтоАВНА
		|ИЗ
		|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК т
		|ГДЕ
		|	&КорректировкиАмортизации
		|	И т.Ссылка В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов))";
	
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_СчетаУчета(НомераТаблиц = Неопределено, ЭтоМСФО = Истина)

	Если НомераТаблиц = Неопределено Тогда
		НомераТаблиц = Новый Структура;
	КонецЕсли;
	
	НомераТаблиц.Вставить("СчетаУчета", 	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СчетаМПЗ", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СчетаНЗП", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СчетаЗакрытия", 	НомераТаблиц.Количество());//счета, которые будем "закрывать"	
		
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	т.Ссылка КАК СчетИБ,
	|	т.СчетСсылка КАК СчетСсылка,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(втРазделыПланаСчетов.ТипЗакрытияРаздела) = """"
	|			ТОГДА """"
	|		КОГДА МАКСИМУМ(т.СчетСсылка.Количественный)
	|				И МАКСИМУМ(втРазделыПланаСчетов.ТипЗакрытияРаздела) <> """"
	|			ТОГДА ""МПЗ""
	|		КОГДА НЕ МАКСИМУМ(т.СчетСсылка.Количественный)
	|				И МАКСИМУМ(втРазделыПланаСчетов.ТипЗакрытияРаздела) = ""МПЗ""
	|			ТОГДА ""ВНА""
	|		КОГДА МАКСИМУМ(т.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовБД.Пассивный))
	|			ТОГДА ""АВНА""
	|		ИНАЧЕ МАКСИМУМ(втРазделыПланаСчетов.ТипЗакрытияРаздела)
	|	КОНЕЦ КАК ТипЗакрытия,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НЕ СчетаБДВидыСубконто.ТолькоОбороты
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК КоличествоОстаточныхСубконто,
	|	ЕСТЬNULL(КОЛИЧЕСТВО(СчетаБДВидыСубконто.Ссылка), 0) КАК КоличествоСубконто,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 1
	|				ТОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидСубконто1,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 2
	|				ТОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидСубконто2,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 3
	|				ТОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ВидСубконто3,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 1
	|				ТОГДА СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Оборотное1,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 2
	|				ТОГДА СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Оборотное2,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 3
	|				ТОГДА СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК Оборотное3,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ВидыДвижений)
	|				ТОГДА СчетаБДВидыСубконто.Номер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НомерСубконтоВидыДвижений,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ втВидыСубконтоАВНА.ВидСубконто ЕСТЬ NULL
	|				ТОГДА СчетаБДВидыСубконто.Номер
	|		КОНЕЦ) КАК НомерСубконтоАВНА,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА т.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовБД.Пассивный)
	|					И НЕ втВидыСубконтоАВНА.ВидСубконто ЕСТЬ NULL
	|				ТОГДА СчетаБДВидыСубконто.Номер
	|		КОНЕЦ) КАК НомерСубконтоНАВНА,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ЭлементыЗатрат)
	|				ТОГДА СчетаБДВидыСубконто.Номер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НомерСубконтоЭлементыЗатрат,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.ВидСубконтоСсылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.СправочникСтатьиЗатрат)
	|				ТОГДА СчетаБДВидыСубконто.Номер
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НомерСубконтоСтатьиЗатрат
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРазделыПланаСчетов КАК втРазделыПланаСчетов
	|		ПО (&СоединениеРазделов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто
	|			ЛЕВОЕ СОЕДИНЕНИЕ втВидыСубконтоАВНА КАК втВидыСубконтоАВНА
	|			ПО СчетаБДВидыСубконто.ВидСубконтоСсылка = втВидыСубконтоАВНА.ВидСубконто
	|		ПО (СчетаБДВидыСубконто.Ссылка = т.Ссылка)
	|ГДЕ
	|	т.Владелец = &ПланСчетовМСФО
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Ссылка,
	|	т.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчета.СчетСсылка КАК Счет,
	|	СчетаУчета.СчетИБ КАК СчетИБ
	|ПОМЕСТИТЬ СчетаМПЗ
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.ТипЗакрытия = ""МПЗ""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетаУчета.СчетСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчета.СчетСсылка КАК Счет,
	|	СчетаУчета.СчетИБ КАК СчетИБ
	|ПОМЕСТИТЬ СчетаНЗП
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.ТипЗакрытия = ""НЗП""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетаУчета.СчетСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчета.СчетСсылка КАК Счет,
	|	СчетаУчета.СчетИБ КАК СчетИБ,
	|	СчетаУчета.ТипЗакрытия КАК ТипЗакрытия,
	|	СчетаУчета.КоличествоСубконто КАК КоличествоСубконто,
	|	СчетаУчета.НомерСубконтоАВНА КАК НомерСубконтоАВНА,
	|	СчетаУчета.НомерСубконтоНАВНА КАК НомерСубконтоНАВНА,
	|	СчетаУчета.ТипЗакрытия = ""МПЗ"" КАК СчетМПЗ,
	|	СчетаУчета.Оборотное1 КАК Оборотное1,
	|	СчетаУчета.Оборотное2 КАК Оборотное2,
	|	СчетаУчета.Оборотное3 КАК Оборотное3
	|ПОМЕСТИТЬ СчетаЗакрытия
	|ИЗ
	|	СчетаУчета КАК СчетаУчета
	|ГДЕ
	|	СчетаУчета.ТипЗакрытия <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетаУчета.СчетСсылка,
	|	КоличествоСубконто";
	
	Если ЭтоМСФО Тогда
		Возврат СтрЗаменить(ТекстЗапроса, "&СоединениеРазделов", "т.РазделПланаСчетов = втРазделыПланаСчетов.Раздел");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидыСубконтоКорпоративные.ЭлементыЗатрат", "ВидыСубконтоХозрасчетные.ЭлементыЗатрат");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидыСубконтоКорпоративные.СправочникСтатьиЗатрат", "ВидыСубконтоХозрасчетные.СтатьиЗатрат");
	
	Возврат СтрЗаменить(ТекстЗапроса, "&СоединениеРазделов", "т.СчетСсылка = втРазделыПланаСчетов.Счет");;
	
КонецФункции

Функция ТекстЗапроса_ВидыСубконто(НомераТаблиц, ЭтоМСФО = Истина)
	
	НомераТаблиц.Вставить("ВидыСубконто", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВидыСубконто.ВидСубконто КАК ПланВидовХарактеристик.ВидыСубконтоКорпоративные).ТипЗначения КАК ТипЗначенияСубконто
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		т.ВидСубконто1 КАК ВидСубконто
	|	ИЗ
	|		СчетаУчета КАК т
	|	ГДЕ
	|		НЕ т.ВидСубконто1 ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		т.ВидСубконто2
	|	ИЗ
	|		СчетаУчета КАК т
	|	ГДЕ
	|		НЕ т.ВидСубконто2 ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		т.ВидСубконто3
	|	ИЗ
	|		СчетаУчета КАК т
	|	ГДЕ
	|		НЕ т.ВидСубконто3 ЕСТЬ NULL) КАК ВидыСубконто
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(ВидыСубконто.ВидСубконто КАК ПланВидовХарактеристик.ВидыСубконтоКорпоративные).ТипЗначения ЕСТЬ NULL";

	Если Не ЭтоМСФО Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидыСубконтоКорпоративные", "ВидыСубконтоХозрасчетные");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_Элиминирующие(НомераТаблиц)

	НомераТаблиц.Вставить("Элиминирующие", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ЭлиминирующаяОрганизация
	|	И Организации.Ссылка В(&ОрганизацииМПЗ)";

КонецФункции

Функция ТекстЗапроса_ВариантыОтборов(НомераТаблиц)

	НомераТаблиц.Вставить("ВариантыОтборов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(НЕ т.Оборотное1, ЛОЖЬ) КАК Отбор1,
	|	ЕСТЬNULL(НЕ т.Оборотное2, ЛОЖЬ) КАК Отбор2,
	|	ЕСТЬNULL(НЕ т.Оборотное3, ЛОЖЬ) КАК Отбор3
	|ИЗ
	|	СчетаЗакрытия КАК т";

КонецФункции

Функция ТекстЗапроса_БазыЗапросамиПустая(НомераТаблиц)

	НомераТаблиц.Вставить("БазыРаспределенияЗапросами", НомераТаблиц.Количество());
	
	//запрос-пустышка, если не используются БазыЗапросами 
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК ПравилоСсылка,
	|	ЕстьNULL(т.Счет, т.Счет.СчетСсылка) КАК Счет,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	т.Подразделение КАК Подразделение,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	т.Доля КАК Доля
	|ПОМЕСТИТЬ БазыРаспределенияЗапросами
	|ИЗ
	|	Справочник.НастройкиРаспределенияЗатратМСФО.БазаРаспределенияПриемника КАК т
	|ГДЕ
	|	ЛОЖЬ";

КонецФункции

Функция ТекстЗапроса_ЗапросыПравил(НомераТаблиц)
	
	НомераТаблиц.Вставить("ЗапросыПравил", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Правило,
	|	т.Запрос КАК Запрос,
	|	т.Код КАК Код
	|ИЗ
	|	Справочник.НастройкиРаспределенияЗатратМСФО КАК т
	|ГДЕ
	|	т.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноДолямЗапроса)
	|	И НЕ т.ПометкаУдаления
	|	И т.Сценарий В (&Сценарий, ЗНАЧЕНИЕ(Справочник.Сценарии.ПустаяСсылка))
	|	И т.Организация В (&Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|	И т.ПериодСценария В (&ПериодОтчета, ЗНАЧЕНИЕ(Справочник.Периоды.ПустаяСсылка))" ;   
	
КонецФункции

Функция ТекстЗапроса_БазыЗапросамиСвод(ТаблицыПоПравилам)
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	&Правило КАК ПравилоСсылка,
	|	т.Счет КАК Счет,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	т.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(т.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(т.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ЕСТЬNULL(т.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
	|	т.Доля КАК Доля
	|ПОМЕСТИТЬ БазыРаспределенияЗапросами
	|ИЗ
	|	&Таблица КАК т";
	
	ТекстЗапроса = Новый Массив;
	Для каждого ПравилоИТаблица Из ТаблицыПоПравилам Цикл
		
		ТекстЗапросаПравила = СтрЗаменить(ШаблонЗапроса, "&Правило", "&" + ПравилоИТаблица.Ключ);
		ТекстЗапроса.Добавить(СтрЗаменить(ТекстЗапросаПравила, "&Таблица", ПравилоИТаблица.Значение));
		
		Если ТекстЗапроса.Количество()=1 Тогда
			ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "ПОМЕСТИТЬ БазыРаспределенияЗапросами", "");
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");
	
КонецФункции

#КонецОбласти

Функция ПолучитьПараметрыПроведения(ДополнительныеСвойства, Реквизиты, РезультатПакета, НомераТаблиц, МенеджерВременныхТаблиц)
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	Если Реквизиты.РежимОтладки Тогда
		ДополнительныеСвойства.ДляПроведения.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	КонецЕсли;
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ИмяРегистра = ИмяРегистраУчета(Реквизиты.ЭтоМСФО);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить(ИмяРегистра, РезультатПакета[НомераТаблиц[ИмяРегистра]].Выгрузить());
	Иначе	
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПроводок", РезультатПакета[НомераТаблиц.ТаблицаПроводки].Выгрузить());
	КонецЕсли;
	
	Возврат ДополнительныеСвойства;

КонецФункции

#КонецОбласти

#Область ТекстЗапроса_НачальноеРаспределение

Функция ТекстЗапроса_НачальноеРаспределение(Реквизиты, НомераТаблиц)
	
	ЭтоМСФО = Реквизиты.ЭтоМСФО;
	УничтожитьТаблицы = Не Реквизиты.РежимОтладки;
	
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_НастройкиРаспределения(НомераТаблиц, ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиНаНачалоСтруктураСтоимости(НомераТаблиц));
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиНаНачалоТУ(НомераТаблиц, ЭтоМСФО));
		ТекстЗапроса.Добавить(ТекстЗапроса_ОборотыТУ(НомераТаблиц, ЭтоМСФО));
	Иначе	
		ТекстЗапроса.Добавить(ТекстЗапроса_ВЗП(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ПоказателиОтчетов(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ЗначенияПоказателей(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиНаНачалоТК(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ОборотыТК(НомераТаблиц));
	КонецЕсли;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_БСАВНА(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ОборотыАналитики(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "ОборотыСчетов", УничтожитьТаблицы));
	
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыБезПравил(НомераТаблиц, Реквизиты));
	ТекстЗапроса.Добавить(ТекстЗапроса_втЗнаменательПравилаУзла(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "ОстаткиНаНачало", УничтожитьТаблицы));
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыКакИсточникиПравил(НомераТаблиц, УничтожитьТаблицы));
	ТекстЗапроса.Добавить(ТекстЗапроса_Узлы(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыИсточники(НомераТаблиц));
	
	ТекстЗапроса.Добавить(ТекстЗапроса_ОборотыУзлов(НомераТаблиц, Реквизиты));
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "ОборотыАналитики", УничтожитьТаблицы));
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "УзлыИсточники", УничтожитьТаблицы));
	ТекстЗапроса.Добавить(ТекстЗапроса_СписаниеНА(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыКакПриемникиСпособ1(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыКакПриемникиСпособ2(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "УзлыКакИсточникиПравил", УничтожитьТаблицы));
	
	ТекстЗапроса.Добавить(ТекстЗапроса_ДолиПриемниковПравил(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_БазыДляДолей(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ДолиПриемниковПравила(НомераТаблиц));//для распределений	
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "ОборотыУзлов", УничтожитьТаблицы));
	
	ТекстЗапроса.Добавить(ТекстЗапроса_РаспределениеНачальное(НомераТаблиц));//до корректировки "копеек"
	ТекстЗапроса.Добавить(ТекстЗапроса_КорректировкаРаспределения(НомераТаблиц, "1", УничтожитьТаблицы));//втРаспределение_НомерТекущий - проводки с узлами
	
	Если Не УничтожитьТаблицы Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ТекстЗапроса, "");//удалим пустые
	КонецЕсли;
	
	Возврат СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());

КонецФункции

#Область НастройкиРаспределения

Функция ТекстЗапроса_НастройкиРаспределения(НомераТаблиц, ЭтоМСФО = Истина)

	НомераТаблиц.Вставить("ИсточникиПравилБезПриоритетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ИсточникиПравил", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПриемникиПравил", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("БазыТаблицами", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПравилаЗапросы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВнешниеСчетаДляСпособаОборотыДт", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втПравилаСпособ1", НомераТаблиц.Количество());
	
	//КодПравила - Код справочник.НастройкиРаспределенияЗатратМСФО, 
	//если для узла есть несколько правил - выбирается правило с максимальным приоритетом
	//КодПравила - Код справочник.НастройкиРаспределенияЗатратМСФО, 
	//ПриоритетПравила - приоритет(число) правила над другими("-1" -максимальный приоритет)
	//приоритеты(с -) и номера узлов(с +) образуют НомерПравила
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	т.Ссылка КАК ПравилоСсылка,
	|	т.Код КАК КодПравила,
	|	т.СчетИсточник.СчетСсылка КАК Счет,
	|	ВЫБОР
	|		КОГДА т.СчетИсточникСубконто1 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетИсточникСубконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетИсточникСубконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА т.СчетИсточникСубконто2 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетИсточникСубконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетИсточникСубконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА т.СчетИсточникСубконто3 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетИсточникСубконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетИсточникСубконто3
	|	КОНЕЦ КАК Субконто3,
	|	т.СчетИсточникНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПодразделенияДляРСБУ.Ссылка, т.СчетИсточникПодразделение) КАК Подразделение,
	|	т.CписыватьЗатратыНСБУ КАК CписыватьЗатратыНСБУ,
	|	т.СпособЗакрытия КАК СпособЗакрытия
	|ПОМЕСТИТЬ ИсточникиПравилБезПриоритетов
	|ИЗ
	|	Справочник.НастройкиРаспределенияЗатратМСФО КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияДляРСБУ
	|		ПО т.СчетИсточникПодразделение = ПодразделенияДляРСБУ.ЦФО
	|			И (НЕ &ЭтоМСФО)
	|ГДЕ
	|	НЕ т.ПометкаУдаления
	|	И т.Сценарий В (&Сценарий, ЗНАЧЕНИЕ(Справочник.Сценарии.ПустаяСсылка))
	|	И т.Организация В (&Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|	И т.ПериодСценария В (&ПериодОтчета, ЗНАЧЕНИЕ(Справочник.Периоды.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодПравила
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ПравилоСсылка) КАК ПравилоСсылка,
	|	т.КодПравила КАК КодПравила,
	|	МАКСИМУМ(т.Счет) КАК Счет,
	|	МАКСИМУМ(т.Субконто1) КАК Субконто1,
	|	МАКСИМУМ(т.Субконто2) КАК Субконто2,
	|	МАКСИМУМ(т.Субконто3) КАК Субконто3,
	|	МАКСИМУМ(т.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|	МАКСИМУМ(т.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(т.CписыватьЗатратыНСБУ) КАК CписыватьЗатратыНСБУ,
	|	МАКСИМУМ(т.СпособЗакрытия) КАК СпособЗакрытия,
	|	-КОЛИЧЕСТВО(БолееПриоритетные.ПравилоСсылка) КАК ПриоритетПравила,
	|	МИНИМУМ(БолееПриоритетные.КодПравила) КАК ПредыдущееПравило
	|ПОМЕСТИТЬ ИсточникиПравил
	|ИЗ
	|	ИсточникиПравилБезПриоритетов КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсточникиПравилБезПриоритетов КАК БолееПриоритетные
	|		ПО т.КодПравила <= БолееПриоритетные.КодПравила
	|
	|СГРУППИРОВАТЬ ПО
	|	т.КодПравила
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсточникиПравил.ПравилоСсылка КАК ПравилоСсылка,
	|	ИсточникиПравил.КодПравила КАК КодПравила,
	|	ИсточникиПравил.ПриоритетПравила КАК ПриоритетПравила,
	|	т.СчетПриемник.СчетСсылка КАК Счет,
	|	ВЫБОР
	|		КОГДА т.СчетПриемникСубконто1 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто1.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетПриемникСубконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА т.СчетПриемникСубконто2 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто2.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетПриемникСубконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА т.СчетПриемникСубконто3 = НЕОПРЕДЕЛЕНО
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА т.СчетПриемникСубконто2.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.СчетПриемникСубконто3
	|	КОНЕЦ КАК Субконто3,
	|	т.СчетПриемникНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПодразделенияДляРСБУ.Ссылка, т.СчетПриемникПодразделение) КАК Подразделение,
	|	т.СпособЗакрытия КАК СпособЗакрытия
	|ПОМЕСТИТЬ ПриемникиПравил
	|ИЗ
	|	ИсточникиПравил КАК ИсточникиПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиРаспределенияЗатратМСФО КАК т
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияДляРСБУ
	|			ПО т.СчетПриемникПодразделение = ПодразделенияДляРСБУ.ЦФО
	|				И (НЕ &ЭтоМСФО)
	|		ПО ИсточникиПравил.ПравилоСсылка = т.Ссылка
	|			И (ИсточникиПравил.СпособЗакрытия В (ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт), ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДт)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсточникиПравил.ПравилоСсылка КАК ПравилоСсылка,
	|	ИсточникиПравил.КодПравила КАК КодПравила,
	|	ИсточникиПравил.ПриоритетПравила КАК ПриоритетПравила,
	|	СчетаЗакрытия.ТипЗакрытия КАК ТипСчетаЗакрытия,
	|	т.Счет.СчетСсылка КАК Счет,
	|	ВЫБОР
	|		КОГДА т.Счет.СчетСсылка.УчетПоНаправлениямДеятельности
	|			ТОГДА т.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА т.Счет.СчетСсылка.УчетПоПодразделениям
	|			ТОГДА ЕСТЬNULL(ПодразделенияДляРСБУ.Ссылка, т.Подразделение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	т.Доля / 100 КАК Доля
	|ПОМЕСТИТЬ БазыТаблицами
	|ИЗ
	|	ИсточникиПравил КАК ИсточникиПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиРаспределенияЗатратМСФО.БазаРаспределенияПриемника КАК т
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияДляРСБУ
	|			ПО т.Подразделение = ПодразделенияДляРСБУ.ЦФО
	|				И (НЕ &ЭтоМСФО)
	|		ПО ИсточникиПравил.ПравилоСсылка = т.Ссылка
	|			И (ИсточникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноДолямТаблицы))
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО (т.Счет.СчетСсылка = СчетаЗакрытия.Счет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникиПравил.ПравилоСсылка,
	|	ИсточникиПравил.КодПравила,
	|	ИсточникиПравил.ПриоритетПравила,
	|	СчетаЗакрытия.ТипЗакрытия,
	|	т.Счет,
	|	ВЫБОР
	|		КОГДА т.Счет.УчетПоНаправлениямДеятельности
	|			ТОГДА т.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА т.Счет.УчетПоПодразделениям
	|			ТОГДА ЕСТЬNULL(ПодразделенияДляРСБУ.Ссылка, т.Подразделение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ,
	|	т.Субконто1,
	|	т.Субконто2,
	|	т.Субконто3,
	|	т.Доля / 100
	|ИЗ
	|	ИсточникиПравил КАК ИсточникиПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БазыРаспределенияЗапросами КАК т
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияДляРСБУ
	|			ПО т.Подразделение = ПодразделенияДляРСБУ.ЦФО
	|				И (НЕ &ЭтоМСФО)
	|		ПО ИсточникиПравил.ПравилоСсылка = т.ПравилоСсылка
	|			И (ИсточникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноДолямЗапроса))
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО (т.Счет = СчетаЗакрытия.Счет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриемникиПравил.Счет КАК Счет
	|ПОМЕСТИТЬ ВнешниеСчетаДляСпособаОборотыДт
	|ИЗ
	|	ПриемникиПравил КАК ПриемникиПравил
	|ГДЕ
	|	ПриемникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДт)
	|	И НЕ ПриемникиПравил.Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаЗакрытия КАК т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.ПриоритетПравила КАК ПриоритетПравила
	|ПОМЕСТИТЬ втПравилаСпособ1
	|ИЗ
	|	ПриемникиПравил КАК т
	|ГДЕ
	|	т.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПриоритетПравила";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ПодразделенияОрганизаций", 
		ВстраиваниеУХКлиентСервер.ИмяСправочникаПодразделения());
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОстаткиНаНачалоМСФО

Функция ТекстЗапроса_ОстаткиНаНачалоСтруктураСтоимости(НомераТаблиц)

	НомераТаблиц.Вставить("СтруктураСтоимости", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	СтруктураСтоимостиЗапасовМСФО.Организация КАК Организация,
	|	СтруктураСтоимостиЗапасовМСФО.Счет КАК СчетИБ,
	|	СтруктураСтоимостиЗапасовМСФО.Счет.Ссылка КАК Счет,
	|	СтруктураСтоимостиЗапасовМСФО.Субконто1 КАК Субконто1,
	|	СтруктураСтоимостиЗапасовМСФО.Субконто2 КАК Субконто2,
	|	СтруктураСтоимостиЗапасовМСФО.Субконто3 КАК Субконто3,
	|	СтруктураСтоимостиЗапасовМСФО.Подразделение КАК Подразделение,
	|	СтруктураСтоимостиЗапасовМСФО.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СтруктураСтоимостиЗапасовМСФО.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СтруктураСтоимостиЗапасовМСФО.ЭлементЗатрат КАК ЭлементЗатрат,
	|	СтруктураСтоимостиЗапасовМСФО.Сальдо КАК Сумма,
	|	СтруктураСтоимостиЗапасовМСФО.Выпуск КАК Количество
	|ПОМЕСТИТЬ СтруктураСтоимости
	|ИЗ
	|	РегистрСведений.СтруктураСтоимостиЗапасовМСФО КАК СтруктураСтоимостиЗапасовМСФО
	|ГДЕ
	|	СтруктураСтоимостиЗапасовМСФО.Регистратор В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				т.Ссылка
	|			ИЗ
	|				Документ.РасчетСебестоимости КАК т
	|			ГДЕ
	|				т.Проведен
	|				И т.Дата МЕЖДУ &ПредПериод И &НачалоПериода
	|				И т.Организация В (&ОрганизацииМПЗ)
	|				И т.Сценарий = &Сценарий
	|			УПОРЯДОЧИТЬ ПО
	|				т.Дата УБЫВ)";	

КонецФункции

#КонецОбласти

#Область Обороты_Остатки_ТУ

Функция ТекстЗапроса_ОстаткиНаНачалоТУ(НомераТаблиц, ЭтоМСФО = Истина)

	НомераТаблиц.Вставить("ОстаткиНаНачало", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_СтруктураСтоимости", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МСФООборотыДтКт.Организация КАК Организация,
	|	МСФООборотыДтКт.СуммаВВалютеУчетаОстаток КАК Сумма,
	|	МСФООборотыДтКт.СуммаВВалютеОтчетностиОстаток КАК СуммаВО,
	|	МСФООборотыДтКт.КоличествоОстаток КАК Количество,
	|	МСФООборотыДтКт.Счет КАК Счет,
	|	СчетаЗакрытия.ТипЗакрытия КАК ТипСчетаЗакрытия,
	|	ВЫБОР
	|		КОГДА &КорректировкиАмортизации
	|			ТОГДА НЕ МСФООборотыДтКт.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция))
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РазделМСФО,
	|	ВЫБОР СчетаЗакрытия.НомерСубконтоАВНА
	|		КОГДА 1
	|			ТОГДА МСФООборотыДтКт.Субконто1
	|		КОГДА 2
	|			ТОГДА МСФООборотыДтКт.Субконто2
	|		КОГДА 3
	|			ТОГДА МСФООборотыДтКт.Субконто3
	|	КОНЕЦ КАК АВНА,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.Субконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.Субконто1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.Субконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.Субконто2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.Субконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.Субконто3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто3,
	|	ЕСТЬNULL(МСФООборотыДтКт.Подразделение, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(МСФООборотыДтКт.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	NULL КАК СтатьяЗатрат,
	|	NULL КАК ЭлементЗатрат
	|ПОМЕСТИТЬ ОстаткиНаНачало
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаЗакрытия КАК т
	|				ГДЕ
	|					НЕ т.Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								т.Счет
	|							ИЗ
	|								СтруктураСтоимости КАК т)),
	|			,
	|			Организация В (&ОрганизацииМПЗ)
	|				И Сценарий = &Сценарий) КАК МСФООборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО МСФООборотыДтКт.Счет = СчетаЗакрытия.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктураСтоимости.Организация,
	|	СтруктураСтоимости.Сумма,
	|	СтруктураСтоимости.Сумма,
	|	СтруктураСтоимости.Количество,
	|	СтруктураСтоимости.Счет,
	|	СчетаЗакрытия.ТипЗакрытия,
	|	ЛОЖЬ,
	|	NULL,
	|	СтруктураСтоимости.Субконто1,
	|	СтруктураСтоимости.Субконто2,
	|	СтруктураСтоимости.Субконто3,
	|	СтруктураСтоимости.Подразделение,
	|	СтруктураСтоимости.НаправлениеДеятельности,
	|	СтруктураСтоимости.СтатьяЗатрат,
	|	СтруктураСтоимости.ЭлементЗатрат
	|ИЗ
	|	СтруктураСтоимости КАК СтруктураСтоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО СтруктураСтоимости.Счет = СчетаЗакрытия.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтруктураСтоимости";

	Если Не ЭтоМСФО Тогда
		ТекстЗапроса = МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "МСФООборотыДтКт");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_ОборотыТУ(НомераТаблиц, ЭтоМСФО = Истина)
	
	НомераТаблиц.Вставить("ОборотыСчетов", НомераТаблиц.Количество());
			
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВнешниеСписанияВнутренниеОбороты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ЭлиминирующаяОрганизация
	|			ТОГДА ВнешниеСписанияВнутренниеОбороты.Организация В (&Элиминирующие)
	|		ИНАЧЕ НЕ ВнешниеСписанияВнутренниеОбороты.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция))
	|	КОНЕЦ КАК РазделМСФО,
	|	ВнешниеСписанияВнутренниеОбороты.СуммаВВалютеУчетаОборот КАК Сумма,
	|	ВнешниеСписанияВнутренниеОбороты.СуммаВВалютеОтчетностиОборот КАК СуммаВО,
	|	ВнешниеСписанияВнутренниеОбороты.КоличествоОборотДт КАК КоличествоДт,
	|	ВнешниеСписанияВнутренниеОбороты.КоличествоОборотКт КАК КоличествоКт,
	|	ВнешниеСписанияВнутренниеОбороты.СчетДт КАК СчетДт,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоДт1 КАК СубконтоДт1,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоДт2 КАК СубконтоДт2,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоДт3 КАК СубконтоДт3,
	|	ВнешниеСписанияВнутренниеОбороты.СчетКт КАК СчетКт,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоКт1 КАК СубконтоКт1,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоКт2 КАК СубконтоКт2,
	|	ВнешниеСписанияВнутренниеОбороты.СубконтоКт3 КАК СубконтоКт3,
	|	ЕСТЬNULL(ВнешниеСписанияВнутренниеОбороты.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВнешниеСписанияВнутренниеОбороты.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	ЕСТЬNULL(ВнешниеСписанияВнутренниеОбороты.НаправлениеДеятельностиКт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	ЕСТЬNULL(ВнешниеСписанияВнутренниеОбороты.ПодразделениеКт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ПодразделениеКт
	|ПОМЕСТИТЬ ОборотыСчетов
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаЗакрытия КАК т),
	|			,
	|			Организация В (&ОрганизацииМПЗ)
	|				И Сценарий = &Сценарий
	|				И &УсловиеВидОперацииНеДокумент) КАК ВнешниеСписанияВнутренниеОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнешниеПоступления.Организация,
	|	ВЫБОР
	|		КОГДА &ЭлиминирующаяОрганизация
	|			ТОГДА ВнешниеПоступления.Организация В (&Элиминирующие)
	|		ИНАЧЕ НЕ ВнешниеПоступления.ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция))
	|	КОНЕЦ,
	|	ВнешниеПоступления.СуммаВВалютеУчетаОборот,
	|	ВнешниеПоступления.СуммаВВалютеОтчетностиОборот,
	|	ВнешниеПоступления.КоличествоОборотДт,
	|	NULL,
	|	ВнешниеПоступления.СчетДт,
	|	ВнешниеПоступления.СубконтоДт1,
	|	ВнешниеПоступления.СубконтоДт2,
	|	ВнешниеПоступления.СубконтоДт3,
	|	ВнешниеПоступления.СчетКт,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ВнешниеПоступления.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ЕСТЬNULL(ВнешниеПоступления.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			СчетДт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаЗакрытия КАК т),
	|			,
	|			НЕ СчетКт В
	|					(ВЫБРАТЬ
	|						т.Счет
	|					ИЗ
	|						СчетаЗакрытия КАК т),
	|			,
	|			Организация В (&ОрганизацииМПЗ)
	|				И Сценарий = &Сценарий
	|				И &УсловиеВидОперацииНеДокумент) КАК ВнешниеПоступления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнешниеПоступления.Организация,
	|	ЛОЖЬ,
	|	ВнешниеПоступления.СуммаВВалютеУчетаОборот,
	|	ВнешниеПоступления.СуммаВВалютеОтчетностиОборот,
	|	ВнешниеПоступления.КоличествоОборотДт,
	|	NULL,
	|	ВнешниеПоступления.СчетДт,
	|	ВнешниеПоступления.СубконтоДт1,
	|	ВнешниеПоступления.СубконтоДт2,
	|	ВнешниеПоступления.СубконтоДт3,
	|	ВнешниеПоступления.СчетКт,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЕСТЬNULL(ВнешниеПоступления.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ЕСТЬNULL(ВнешниеПоступления.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			СчетДт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					ВнешниеСчетаДляСпособаОборотыДт КАК т),
	|			,
	|			НЕ СчетКт В
	|					(ВЫБРАТЬ
	|						т.Счет
	|					ИЗ
	|						СчетаЗакрытия КАК т),
	|			,
	|			Организация В (&ОрганизацииМПЗ)
	|				И Сценарий = &Сценарий
	|				И &УсловиеВидОперацииНеДокумент
	|				И &УсловиеВидОперацииТрансляция) КАК ВнешниеПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт";

	УсловиеВидОперацииТрансляция = "ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция))";
	УсловиеВидОперацииНеДокумент = "НЕ ВидОперации В (&ВидОперации)";
	
	Если Не ЭтоМСФО Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВнешниеСписанияВнутренниеОбороты.ВидОперации", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВнешниеПоступления.ВидОперации", "ИСТИНА");
		
		ТекстЗапроса = МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "ВнешниеСписанияВнутренниеОбороты");
		ТекстЗапроса = МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "ВнешниеПоступления");		
		
		УсловиеВидОперацииТрансляция = "НЕ Организация.ЭлиминирующаяОрганизация";
		УсловиеВидОперацииНеДокумент = "НЕ Организация.ЭлиминирующаяОрганизация";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидОперацииТрансляция", УсловиеВидОперацииТрансляция);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидОперацииНеДокумент", УсловиеВидОперацииНеДокумент);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Обороты_Остатки_ТК

Функция ТекстЗапроса_ВЗП(НомераТаблиц)

	Возврат 
	"ВЫБРАТЬ
	|	т.Ссылка КАК Версия,
	|	т.Регистратор КАК Регистратор,
	|	т.ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция) КАК РазделМСФО,
	|	т.Организация КАК Организация
	|ПОМЕСТИТЬ Версии
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК т
	|ГДЕ
	|	т.Сценарий = &Сценарий
	|	И т.ВидОтчета = &ВидОтчета
	|	И т.Организация В(&ОрганизацииМПЗ)
	|	И т.ПериодОтчета = &ПериодОтчета
	|	И т.Валюта = &ФункциональнаяВалюта
	|	И НЕ т.Регистратор В (&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.Ссылка,
	|	РазделМСФО";	

КонецФункции

Функция ТекстЗапроса_ПоказателиОтчетов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПоказателиОтчета_СКД", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	т.ПоказательОтчета КАК ПоказательОтчета,
	|	т.СчетБД.СчетСсылка КАК Счет,
	|	т.ВидИтогаПоСчету КАК ВидИтогаПоСчету,
	|	СчетаЗакрытия.ТипЗакрытия КАК ТипСчетаЗакрытия,
	|	т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.КО)) КАК ЭтоОборот,
	|	ВЫБОР &пвхВидДвижений
	|		КОГДА НЕ т.СчетБД.ИспользоватьВидыДвижений
	|			ТОГДА 0
	|		КОГДА НЕ т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.КО))
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР &пвхВидДвижений
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики1
	|					ТОГДА 1
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики2
	|					ТОГДА 2
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики3
	|					ТОГДА 3
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики4
	|					ТОГДА 4
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики5
	|					ТОГДА 5
	|				КОГДА т.ГруппаРаскрытия.ВидАналитики6
	|					ТОГДА 6
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерАналитикиВидДвижений,
	|	ВЫБОР ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики1
	|			ТОГДА 0
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики2
	|			ТОГДА 1
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики3
	|			ТОГДА 2
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики4
	|			ТОГДА 3
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики5
	|			ТОГДА 4
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики6
	|			ТОГДА 5
	|		ИНАЧЕ 6
	|	КОНЕЦ КАК НомерРегистра,
	|	ВЫБОР
	|		КОГДА т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СНД), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО))
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ПоказателиОтчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		т.Ссылка КАК ПоказательОтчета,
	|		т.СчетБД КАК СчетБД,
	|		т.ВидИтогаПоСчету КАК ВидИтогаПоСчету,
	|		т.ГруппаРаскрытия КАК ГруппаРаскрытия
	|	ИЗ
	|		Справочник.ПоказателиОтчетов КАК т
	|	ГДЕ
	|		т.Владелец = &ВидОтчета
	|		И т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СНД), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СНК), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО), ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.КО))
	|		И т.СчетБД В
	|				(ВЫБРАТЬ
	|					т.СчетИБ
	|				ИЗ
	|					СчетаЗакрытия КАК т)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		т.Ссылка,
	|		т.СчетБД,
	|		т.ВидИтогаПоСчету,
	|		т.ГруппаРаскрытия
	|	ИЗ
	|		Справочник.ПоказателиОтчетов КАК т
	|	ГДЕ
	|		т.Владелец = &ВидОтчета
	|		И т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.ДО))
	|		И т.СчетБД.ИспользоватьВидыДвижений
	|		И НЕ т.СчетБД В
	|					(ВЫБРАТЬ
	|						т.СчетИБ
	|					ИЗ
	|						СчетаЗакрытия КАК т)) КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО т.СчетБД = СчетаЗакрытия.СчетИБ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоказательОтчета,
	|	НомерРегистра"
	
КонецФункции

Функция ТекстЗапроса_ЗначенияПоказателей(НомераТаблиц)

	НомераТаблиц.Вставить("ЗначенияПоказателей_СКД", НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ КАК ВидДвижения,
	|	Версии.Организация КАК Организация,
	|	Версии.Регистратор КАК Регистратор,
	|	Версии.РазделМСФО КАК РазделМСФО,
	|	п.ЭтоОборот КАК ЭтоОборот,
	|	т.Значение * п.Коэффициент КАК Значение,
	|	п.Счет КАК Счет,
	|	п.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	т.Аналитика1 КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	NULL КАК Субконто4,
	|	NULL КАК Субконто5,
	|	NULL КАК Субконто6
	|ПОМЕСТИТЬ ЗначенияПоказателей
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов1 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		КОГДА 2
	|			ТОГДА т.Аналитика2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ,
	|	Версии.Организация,
	|	Версии.Регистратор,
	|	Версии.РазделМСФО,
	|	п.ЭтоОборот,
	|	т.Значение * п.Коэффициент,
	|	п.Счет,
	|	п.ТипСчетаЗакрытия,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов2 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 2)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		КОГДА 2
	|			ТОГДА т.Аналитика2
	|		КОГДА 3
	|			ТОГДА т.Аналитика3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ,
	|	Версии.Организация,
	|	Версии.Регистратор,
	|	Версии.РазделМСФО,
	|	п.ЭтоОборот,
	|	т.Значение * п.Коэффициент,
	|	п.Счет,
	|	п.ТипСчетаЗакрытия,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов3 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 3)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		КОГДА 2
	|			ТОГДА т.Аналитика2
	|		КОГДА 3
	|			ТОГДА т.Аналитика3
	|		КОГДА 4
	|			ТОГДА т.Аналитика4
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ,
	|	Версии.Организация,
	|	Версии.Регистратор,
	|	Версии.РазделМСФО,
	|	п.ЭтоОборот,
	|	т.Значение * п.Коэффициент,
	|	п.Счет,
	|	п.ТипСчетаЗакрытия,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов4 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 4)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		КОГДА 2
	|			ТОГДА т.Аналитика2
	|		КОГДА 3
	|			ТОГДА т.Аналитика3
	|		КОГДА 4
	|			ТОГДА т.Аналитика4
	|		КОГДА 5
	|			ТОГДА т.Аналитика5
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ,
	|	Версии.Организация,
	|	Версии.Регистратор,
	|	Версии.РазделМСФО,
	|	п.ЭтоОборот,
	|	т.Значение * п.Коэффициент,
	|	п.Счет,
	|	п.ТипСчетаЗакрытия,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	т.Аналитика5,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов5 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 5)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР п.НомерАналитикиВидДвижений
	|		КОГДА 1
	|			ТОГДА т.Аналитика1
	|		КОГДА 2
	|			ТОГДА т.Аналитика2
	|		КОГДА 3
	|			ТОГДА т.Аналитика3
	|		КОГДА 4
	|			ТОГДА т.Аналитика4
	|		КОГДА 5
	|			ТОГДА т.Аналитика5
	|		КОГДА 6
	|			ТОГДА т.Аналитика6
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|	КОНЕЦ,
	|	Версии.Организация,
	|	Версии.Регистратор,
	|	Версии.РазделМСФО,
	|	п.ЭтоОборот,
	|	т.Значение * п.Коэффициент,
	|	п.Счет,
	|	п.ТипСчетаЗакрытия,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	т.Аналитика5,
	|	т.Аналитика6
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 6)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение";

КонецФункции

Функция ТекстЗапроса_ОстаткиНаНачалоТК(НомераТаблиц)
	
	НомераТаблиц.Вставить("ОстаткиНаНачало", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_СтруктураСтоимости", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Организация КАК Организация,
	|	т.Значение КАК Сумма,
	|	т.Значение КАК СуммаВО,
	|	0 КАК Количество,
	|	т.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА &КорректировкиАмортизации
	|			ТОГДА т.РазделМСФО
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РазделМСФО,
	|	ВЫБОР СчетаЗакрытия.НомерСубконтоАВНА
	|		КОГДА 1
	|			ТОГДА т.Субконто1
	|		КОГДА 2
	|			ТОГДА т.Субконто2
	|		КОГДА 3
	|			ТОГДА т.Субконто3
	|	КОНЕЦ КАК АВНА,
	|	т.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	ВЫБОР
	|		КОГДА т.Субконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(т.Субконто1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА т.Субконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(т.Субконто2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА т.Субконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(т.Субконто3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	NULL КАК СтатьяЗатрат,
	|	NULL КАК ЭлементЗатрат
	|ПОМЕСТИТЬ ОстаткиНаНачало
	|ИЗ
	|	ЗначенияПоказателей КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО т.Счет = СчетаЗакрытия.Счет
	|ГДЕ
	|	НЕ т.ЭтоОборот
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктураСтоимости.Организация,
	|	СтруктураСтоимости.Сумма,
	|	СтруктураСтоимости.Сумма,
	|	СтруктураСтоимости.Количество,
	|	СтруктураСтоимости.Счет,
	|	ЛОЖЬ,
	|	NULL,
	|	ВЫБОР
	|		КОГДА СтруктураСтоимости.Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаМПЗ КАК т)
	|			ТОГДА ИСТИНА
	|		КОГДА СтруктураСтоимости.Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					СчетаНЗП КАК т)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	СтруктураСтоимости.Субконто1,
	|	СтруктураСтоимости.Субконто2,
	|	СтруктураСтоимости.Субконто3,
	|	СтруктураСтоимости.Подразделение,
	|	СтруктураСтоимости.НаправлениеДеятельности,
	|	СтруктураСтоимости.СтатьяЗатрат,
	|	СтруктураСтоимости.ЭлементЗатрат
	|ИЗ
	|	СтруктураСтоимости КАК СтруктураСтоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтруктураСтоимости";

КонецФункции

Функция ТекстЗапроса_ОборотыТК(НомераТаблиц)
	
	НомераТаблиц.Вставить("КредитВидовДвижений",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДебетВидовДвижений", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("БазыВидовДвижений",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОборотыДоОстатков",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОстаткиДляРаспределения",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОборотыСчетов", 					НомераТаблиц.Количество());
	
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_КредитВидовДвижений",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_ДебетВидовДвижений",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_БазыВидовДвижений",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_ОборотыДоОстатков",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_ОстаткиДляРаспределения",	НомераТаблиц.Количество());
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	т.Значение КАК Значение,
	|	т.Организация КАК Организация,
	|	т.РазделМСФО КАК РазделМСФО,
	|	т.Счет КАК Счет,
	|	т.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	т.ВидДвижения КАК ВидДвижения,
	|	т.Регистратор КАК Регистратор,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	АВТОНОМЕРЗАПИСИ() КАК Номер
	|ПОМЕСТИТЬ КредитВидовДвижений
	|ИЗ
	|	ЗначенияПоказателей КАК т
	|ГДЕ
	|	НЕ т.ТипСчетаЗакрытия ЕСТЬ NULL
	|	И т.ЭтоОборот
	|	И НЕ т.ВидДвижения <> ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Значение КАК Значение,
	|	т.Счет КАК Счет,
	|	т.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	т.ВидДвижения КАК ВидДвижения,
	|	т.Регистратор КАК Регистратор,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	АВТОНОМЕРЗАПИСИ() КАК Номер
	|ПОМЕСТИТЬ ДебетВидовДвижений
	|ИЗ
	|	ЗначенияПоказателей КАК т
	|ГДЕ
	|	т.ЭтоОборот
	|	И т.ВидДвижения В
	|			(ВЫБРАТЬ
	|				т.ВидДвижения
	|			ИЗ
	|				КредитВидовДвижений КАК т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(т.Значение) КАК База,
	|	т.ВидДвижения КАК ВидДвижения,
	|	т.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ БазыВидовДвижений
	|ИЗ
	|	ДебетВидовДвижений КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ВидДвижения,
	|	т.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Кт.Регистратор КАК Регистратор,
	|	Кт.ВидДвижения КАК ВидДвижения,
	|	Кт.Организация КАК Организация,
	|	Кт.РазделМСФО КАК РазделМСФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БазыДт.База, 0) <> 0
	|			ТОГДА ВЫРАЗИТЬ(Кт.Значение * Дт.Значение / БазыДт.База КАК ЧИСЛО(18, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	БазыДт.База КАК База,
	|	Дт.Счет КАК СчетДт,
	|	Дт.ТипСчетаЗакрытия КАК ТипСчетаЗакрытияДт,
	|	ВЫБОР
	|		КОГДА Дт.Субконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Дт.Субконто1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Дт.Субконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Дт.Субконто2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Дт.Субконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Дт.Субконто3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт3,
	|	Кт.Счет КАК СчетКт,
	|	Кт.ТипСчетаЗакрытия КАК ТипСчетаЗакрытияКт,
	|	ВЫБОР
	|		КОГДА Кт.Субконто1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Кт.Субконто1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Кт.Субконто2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Кт.Субконто2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Кт.Субконто3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Кт.Субконто3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт3,
	|	Кт.Номер КАК НомерКт,
	|	Кт.Номер КАК НомерДт
	|ПОМЕСТИТЬ ОборотыДоОстатков
	|ИЗ
	|	КредитВидовДвижений КАК Кт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДебетВидовДвижений КАК Дт
	|		ПО (Дт.ВидДвижения = Кт.ВидДвижения)
	|			И (Дт.Регистратор = Кт.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ БазыВидовДвижений КАК БазыДт
	|		ПО Кт.ВидДвижения = БазыДт.ВидДвижения
	|			И Кт.Регистратор = БазыДт.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКт,
	|	НомерДт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыДоОстатков.НомерКт КАК НомерКт,
	|	МАКСИМУМ(ОборотыДоОстатков.База) - СУММА(ОборотыДоОстатков.Сумма) КАК ОстатокДляРаспределения,
	|	МАКСИМУМ(ОборотыДоОстатков.НомерДт) КАК НомерДт
	|ПОМЕСТИТЬ ОстаткиДляРаспределения
	|ИЗ
	|	ОборотыДоОстатков КАК ОборотыДоОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыДоОстатков.НомерКт
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОборотыДоОстатков.Сумма) <> МАКСИМУМ(ОборотыДоОстатков.База)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКт,
	|	НомерДт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыДоОстатков.Организация КАК Организация,
	|	ОборотыДоОстатков.РазделМСФО КАК РазделМСФО,
	|	ОборотыДоОстатков.Сумма + ЕСТЬNULL(ОстаткиДляРаспределения.ОстатокДляРаспределения, 0) КАК Сумма,
	|	ОборотыДоОстатков.Сумма + ЕСТЬNULL(ОстаткиДляРаспределения.ОстатокДляРаспределения, 0) КАК СуммаВО,
	|	0 КАК КоличествоДт,
	|	0 КАК КоличествоКт,
	|	ОборотыДоОстатков.СчетДт КАК СчетДт,
	|	ОборотыДоОстатков.ТипСчетаЗакрытияДт КАК ТипСчетаЗакрытияДт,
	|	ОборотыДоОстатков.СубконтоДт1 КАК СубконтоДт1,
	|	ОборотыДоОстатков.СубконтоДт2 КАК СубконтоДт2,
	|	ОборотыДоОстатков.СубконтоДт3 КАК СубконтоДт3,
	|	ОборотыДоОстатков.СчетКт КАК СчетКт,
	|	ОборотыДоОстатков.ТипСчетаЗакрытияКт КАК ТипСчетаЗакрытияКт,
	|	ОборотыДоОстатков.СубконтоКт1 КАК СубконтоКт1,
	|	ОборотыДоОстатков.СубконтоКт2 КАК СубконтоКт2,
	|	ОборотыДоОстатков.СубконтоКт3 КАК СубконтоКт3,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ПодразделениеКт
	|ПОМЕСТИТЬ ОборотыСчетов
	|ИЗ
	|	ОборотыДоОстатков КАК ОборотыДоОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиДляРаспределения КАК ОстаткиДляРаспределения
	|		ПО ОборотыДоОстатков.НомерКт = ОстаткиДляРаспределения.НомерКт
	|			И ОборотыДоОстатков.НомерДт = ОстаткиДляРаспределения.НомерДт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Организация,
	|	т.РазделМСФО,
	|	т.Значение,
	|	т.Значение,
	|	0,
	|	0,
	|	СчетСписания.Счет,
	|	NULL,
	|	СчетСписания.Субконто1,
	|	СчетСписания.Субконто2,
	|	СчетСписания.Субконто3,
	|	т.Счет,
	|	т.ТипСчетаЗакрытия,
	|	т.Субконто1,
	|	т.Субконто2,
	|	т.Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|ИЗ
	|	ЗначенияПоказателей КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетСписания
	|		ПО (СчетСписания.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ТекущийФинансовыйРезультат))
	|ГДЕ
	|	НЕ т.ТипСчетаЗакрытия ЕСТЬ NULL
	|	И т.ЭтоОборот
	|	И т.ВидДвижения = ЗНАЧЕНИЕ(Справочник.ВидыДвиженийМСФО.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КредитВидовДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДебетВидовДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ БазыВидовДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОборотыДоОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиДляРаспределения";
	
	Возврат Документы.УчетнаяПолитикаМСФО.ЗаменитьФиксированныеСчетаУчетаБД(ТекстЗапроса);
	
КонецФункции

#КонецОбласти

#Область Узлы

Функция ТекстЗапроса_БСАВНА(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Организация КАК Организация,
	|	т.АВНА КАК АВНА,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА 0
	|					ИНАЧЕ т.Сумма
	|				КОНЕЦ) <= 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА т.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ) / СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА 0
	|					ИНАЧЕ т.Сумма
	|				КОНЕЦ)
	|	КОНЕЦ КАК ДоляБС,
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА 0
	|					ИНАЧЕ т.СуммаВО
	|				КОНЕЦ) <= 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА т.СуммаВО
	|					ИНАЧЕ 0
	|				КОНЕЦ) / СУММА(ВЫБОР
	|					КОГДА т.РазделМСФО
	|						ТОГДА 0
	|					ИНАЧЕ т.СуммаВО
	|				КОНЕЦ)
	|	КОНЕЦ КАК ДоляБСВО,
	|	СУММА(ВЫБОР
	|			КОГДА т.РазделМСФО
	|				ТОГДА т.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БСМСФО,
	|	СУММА(ВЫБОР
	|			КОГДА т.РазделМСФО
	|				ТОГДА 0
	|			ИНАЧЕ т.Сумма
	|		КОНЕЦ) КАК БСНСБУ,
	|	СУММА(ВЫБОР
	|			КОГДА т.РазделМСФО
	|				ТОГДА т.СуммаВО
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БСМСФО_ВО,
	|	СУММА(ВЫБОР
	|			КОГДА т.РазделМСФО
	|				ТОГДА 0
	|			ИНАЧЕ т.СуммаВО
	|		КОНЕЦ) КАК БСНСБУ_ВО
	|ПОМЕСТИТЬ БСАВНА
	|ИЗ
	|	ОстаткиНаНачало КАК т
	|ГДЕ
	|	НЕ т.АВНА ЕСТЬ NULL
	|	И т.ТипСчетаЗакрытия = ""ВНА""
	|	И НЕ т.АВНА В (&ПустыеТипы)
	|	И &КорректировкиАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Организация,
	|	т.АВНА
	|
	|ИМЕЮЩИЕ
	|	(СУММА(т.Сумма) > 0
	|		ИЛИ СУММА(т.СуммаВО) > 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АВНА";
	
КонецФункции

Функция ТекстЗапроса_ИсключенияВНА(НомераТаблиц)

	Возврат
	"ВЫБРАТЬ
	|	т.Организация КАК Организация,
	|	т.АВНА КАК АВНА,
	|	т.РазделМСФО КАК РазделМСФО,
	|	ВЫБОР
	|		КОГДА СУММА(т.Сумма) > 0
	|			ТОГДА СУММА(т.Сумма)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БС,
	|	ВЫБОР
	|		КОГДА СУММА(т.СуммаВО) > 0
	|			ТОГДА СУММА(т.СуммаВО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БСВО
	|ПОМЕСТИТЬ ИсключенияВНА
	|ИЗ
	|	ОстаткиНаНачало КАК т
	|ГДЕ
	|	НЕ т.АВНА ЕСТЬ NULL
	|	И НЕ т.АВНА В (&ПустыеТипы)
	|	И &КорректировкиАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Организация,
	|	т.АВНА,
	|	т.РазделМСФО
	|
	|ИМЕЮЩИЕ
	|	(СУММА(т.Сумма) > 0
	|		ИЛИ СУММА(т.СуммаВО) > 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АВНА";
	
КонецФункции

Функция ТекстЗапроса_ОборотыАналитики(НомераТаблиц)

	НомераТаблиц.Вставить("ОборотыАналитики", НомераТаблиц.Количество());
	Возврат
	"ВЫБРАТЬ
	|	МСФООборотыДтКт.Организация КАК Организация,
	|	МСФООборотыДтКт.РазделМСФО КАК РазделМСФО,
	|	МСФООборотыДтКт.Сумма КАК Сумма,
	|	МСФООборотыДтКт.СуммаВО КАК СуммаВО,
	|	МСФООборотыДтКт.КоличествоДт КАК КоличествоДт,
	|	МСФООборотыДтКт.КоличествоКт КАК КоличествоКт,
	|	МСФООборотыДтКт.СчетДт КАК СчетДт,
	|	СчетаДт.ТипЗакрытия КАК ТипСчетаЗакрытияДт,
	|	ВЫБОР СчетаДт.НомерСубконтоНАВНА
	|		КОГДА 1
	|			ТОГДА МСФООборотыДтКт.СубконтоДт1
	|		КОГДА 2
	|			ТОГДА МСФООборотыДтКт.СубконтоДт2
	|		КОГДА 3
	|			ТОГДА МСФООборотыДтКт.СубконтоДт3
	|	КОНЕЦ КАК ДтАВНА,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоДт1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаДт.Оборотное1
	|				И СчетаДт.ТипЗакрытия В (""ВНА"", ""АВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоДт2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаДт.Оборотное2
	|				И СчетаДт.ТипЗакрытия В (""ВНА"", ""АВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоДт3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаДт.Оборотное3
	|				И СчетаДт.ТипЗакрытия В (""ВНА"", ""АВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт3,
	|	МСФООборотыДтКт.СчетКт КАК СчетКт,
	|	СчетаКт.ТипЗакрытия КАК ТипСчетаЗакрытияКт,
	|	ВЫБОР СчетаКт.НомерСубконтоНАВНА
	|		КОГДА 1
	|			ТОГДА МСФООборотыДтКт.СубконтоКт1
	|		КОГДА 2
	|			ТОГДА МСФООборотыДтКт.СубконтоКт2
	|		КОГДА 3
	|			ТОГДА МСФООборотыДтКт.СубконтоКт3
	|	КОНЕЦ КАК КтАВНА,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоКт1 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаКт.Оборотное1
	|				И СчетаКт.ТипЗакрытия В (""ВНА"", ""АВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт1, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоКт2 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаКт.Оборотное2
	|				И СчетаКт.ТипЗакрытия В (""ВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт2, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.СубконтоКт3 В (&ПустыеТипы)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СчетаКт.Оборотное3
	|				И СчетаКт.ТипЗакрытия В (""ВНА"", ""МПЗ"")
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт3, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоКт3,
	|	СчетаКт.Оборотное1 КАК ОборотноеКт1,
	|	СчетаКт.Оборотное2 КАК ОборотноеКт2,
	|	СчетаКт.Оборотное3 КАК ОборотноеКт3,
	|	ЕСТЬNULL(МСФООборотыДтКт.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ПодразделениеДт,
	|	ЕСТЬNULL(МСФООборотыДтКт.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	ЕСТЬNULL(МСФООборотыДтКт.НаправлениеДеятельностиКт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	ЕСТЬNULL(МСФООборотыДтКт.ПодразделениеКт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ПодразделениеКт
	|ПОМЕСТИТЬ ОборотыАналитики
	|ИЗ
	|	ОборотыСчетов КАК МСФООборотыДтКт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаДт
	|		ПО МСФООборотыДтКт.СчетДт = СчетаДт.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаКт
	|		ПО МСФООборотыДтКт.СчетКт = СчетаКт.Счет
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СчетаДт.Счет = СчетаКт.Счет
	|					И ЕСТЬNULL(МСФООборотыДтКт.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) = ЕСТЬNULL(МСФООборотыДтКт.ПодразделениеКт, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|					И ЕСТЬNULL(МСФООборотыДтКт.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) = ЕСТЬNULL(МСФООборотыДтКт.НаправлениеДеятельностиКт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|					И ВЫБОР
	|						КОГДА ЕСТЬNULL(СчетаДт.Оборотное1, ИСТИНА)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт1, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт1, НЕОПРЕДЕЛЕНО)
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА ЕСТЬNULL(СчетаДт.Оборотное2, ИСТИНА)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт2, НЕОПРЕДЕЛЕНО)
	|					КОНЕЦ
	|					И ВЫБОР
	|						КОГДА ЕСТЬNULL(СчетаДт.Оборотное2, ИСТИНА)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЕСТЬNULL(МСФООборотыДтКт.СубконтоДт2, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(МСФООборотыДтКт.СубконтоКт2, НЕОПРЕДЕЛЕНО)
	|					КОНЕЦ
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	ПодразделениеДт,
	|	НаправлениеДеятельностиДт";

КонецФункции

Функция ТекстЗапроса_УзлыБезПравил(НомераТаблиц, Реквизиты)

	Формулы = Новый СписокЗначений;
	Для каждого Ф Из Реквизиты.ФормулыНаглядно Цикл
		Формулы.Добавить(ФормулаПоТипам(ф.Значение), ф.Ключ);
	КонецЦикла;
	
	ФормулыТекстом = СтрСоединить(Формулы.ВыгрузитьЗначения(), ";");	
	ФормулыДляЗапроса = СтрРазделить(ПреобразоватьФормулу(ФормулыТекстом, Реквизиты.ЭлиминирующаяОрганизация), ";");
	
	ШаблонЗапроса = ШаблонЗапроса_УзлыФормулы(НомераТаблиц);
	Для н = 1 По ФормулыДляЗапроса.Количество() Цикл
		
		//ФВ
		ЧтоЗаменяем = Формулы[н-1].Представление;
		НаЧтоЗаменяем = ФормулыДляЗапроса[н-1];
		
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&" + ЧтоЗаменяем, НаЧтоЗаменяем);
		
		//ВО
		НаЧтоЗаменяем = СтрЗаменить(НаЧтоЗаменяем, "СуммаДО", "СуммаДОВО");
		НаЧтоЗаменяем = СтрЗаменить(НаЧтоЗаменяем, "СуммаКО", "СуммаКОВО");
		НаЧтоЗаменяем = СтрЗаменить(НаЧтоЗаменяем, "СуммаСНД", "СуммаСНДВО");
		
		ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "&ВО" + ЧтоЗаменяем, НаЧтоЗаменяем);
				
	КонецЦикла;
	
	Возврат ШаблонЗапроса; 
		
КонецФункции

Функция ШаблонЗапроса_УзлыФормулы(НомераТаблиц)
	
	НомераТаблиц.Вставить("УзлыБезПравил", НомераТаблиц.Количество());
	
	//ОстатокДляРаспределения, ОстатокДляРаспределенияСНСБУ, ЦенаСписанияМПЗ, БазаЗнаменательИтераций - см. ФормулыНаглядно
	
	Возврат
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерУзла,
	|	т.Счет КАК Счет,
	|	т.Подразделение КАК Подразделение,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ т.РазделМСФО
	|					И ЕСТЬNULL(т.СуммаДО, 0) <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОборотНСБУ,
	|	СУММА(т.КоличествоДО) КАК КоличествоДО,
	|	СУММА(т.КоличествоКО) КАК КоличествоКО,
	|	СУММА(т.КоличествоСНД) КАК КоличествоСНД,
	|	СУММА(т.СуммаДО) КАК СуммаДО,
	|	СУММА(т.СуммаКО) КАК СуммаКО,
	|	СУММА(т.СуммаСНД) КАК СуммаСНД,
	|	СУММА(т.СуммаДОВО) КАК СуммаДОВО,
	|	СУММА(т.СуммаКОВО) КАК СуммаКОВО,
	|	СУММА(т.СуммаСНДВО) КАК СуммаСНДВО,
	|	&ОстатокБезНСБУ КАК ОстатокДляРаспределения,
	|	&ОстатокСНСБУ КАК ОстатокДляРаспределенияСНСБУ,
	|	&ЦенаСписанияМПЗ КАК ЦенаСписанияМПЗ,
	|	&БазаЗнаменательИтераций КАК БазаЗнаменательИтераций,
	|	&ВООстатокБезНСБУ КАК ОстатокДляРаспределенияВО,
	|	&ВООстатокСНСБУ КАК ОстатокДляРаспределенияСНСБУВО,
	|	&ВОЦенаСписанияМПЗ КАК ЦенаСписанияМПЗВО,
	|	&ВОБазаЗнаменательИтераций КАК БазаЗнаменательИтерацийВО,
	|	МАКСИМУМ(т.ТипСчетаЗакрытия) КАК ТипСчетаЗакрытия
	|ПОМЕСТИТЬ УзлыБезПравил
	|ИЗ
	|	(ВЫБРАТЬ
	|		т.Организация КАК Организация,
	|		т.РазделМСФО КАК РазделМСФО,
	|		т.СчетДт КАК Счет,
	|		т.ТипСчетаЗакрытияДт КАК ТипСчетаЗакрытия,
	|		т.СубконтоДт1 КАК Субконто1,
	|		т.СубконтоДт2 КАК Субконто2,
	|		т.СубконтоДт3 КАК Субконто3,
	|		т.ПодразделениеДт КАК Подразделение,
	|		т.НаправлениеДеятельностиДт КАК НаправлениеДеятельности,
	|		0 КАК ДоляБС,
	|		0 КАК ДоляБСВО,
	|		т.Сумма КАК СуммаДО,
	|		т.СуммаВО КАК СуммаДОВО,
	|		т.КоличествоДт КАК КоличествоДО,
	|		0 КАК СуммаКО,
	|		0 КАК СуммаКОВО,
	|		0 КАК КоличествоКО,
	|		0 КАК СуммаСНД,
	|		0 КАК СуммаСНДВО,
	|		0 КАК КоличествоСНД
	|	ИЗ
	|		ОборотыАналитики КАК т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		т.Организация,
	|		т.РазделМСФО,
	|		т.СчетКт,
	|		т.ТипСчетаЗакрытияКт,
	|		т.СубконтоКт1,
	|		т.СубконтоКт2,
	|		т.СубконтоКт3,
	|		т.ПодразделениеКт,
	|		т.НаправлениеДеятельностиКт,
	|		ЕстьNULL(БСАВНА.ДоляБС, 0),
	|		ЕстьNULL(БСАВНА.ДоляБСВО, 0),
	|		0,
	|		0,
	|		0,
	|		т.Сумма,
	|		т.СуммаВО,
	|		т.КоличествоКт,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ОборотыАналитики КАК т
	|			ЛЕВОЕ СОЕДИНЕНИЕ БСАВНА КАК БСАВНА
	|			ПО т.КтАВНА = БСАВНА.АВНА
	|				И т.Организация = БСАВНА.Организация
	|				И (НЕ т.РазделМСФО)
	|	ГДЕ
	|		НЕ т.СчетКт ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		т.Организация,
	|		т.РазделМСФО,
	|		т.Счет,
	|		т.ТипСчетаЗакрытия,
	|		т.Субконто1,
	|		т.Субконто2,
	|		т.Субконто3,
	|		т.Подразделение,
	|		т.НаправлениеДеятельности,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		т.Сумма,
	|		т.СуммаВО,
	|		т.Количество
	|	ИЗ
	|		ОстаткиНаНачало КАК т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Организация,
	|		ЛОЖЬ,
	|		т.Счет,
	|		т.ТипСчетаЗакрытия,
	|		т.Субконто1,
	|		т.Субконто2,
	|		т.Субконто3,
	|		т.Подразделение,
	|		т.НаправлениеДеятельности,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		БазыТаблицами КАК т) КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Счет,
	|	т.Субконто1,
	|	т.Субконто2,
	|	т.Субконто3,
	|	т.Подразделение,
	|	т.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3";

КонецФункции

Функция ТекстЗапроса_втЗнаменательПравилаУзла(НомераТаблиц)

	НомераТаблиц.Вставить("втЗнаменательПравилаУзла", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(*) < 1000
	|			ТОГДА 1000
	|		КОГДА КОЛИЧЕСТВО(*) < 1000000
	|			ТОГДА 1000000
	|		КОГДА КОЛИЧЕСТВО(*) < 1000000000
	|			ТОГДА 1000000000
	|		ИНАЧЕ КОЛИЧЕСТВО(*)
	|	КОНЕЦ КАК РазрядностьУзла
	|ПОМЕСТИТЬ втЗнаменательПравилаУзла
	|ИЗ
	|	УзлыБезПравил КАК т";	
	
КонецФункции

Функция ТекстЗапроса_УзлыКакИсточникиПравил(НомераТаблиц, УничтожитьТаблицы = Истина)

	НомераТаблиц.Вставить("УзлыКакИсточникиПравил", НомераТаблиц.Количество());
	
	//ОстатокДляРаспределения - Сумма для распределения доступная в УзелИсточник, см. ФормулыНаглядно
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ИсточникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт)
	|			ТОГДА ИсточникиПравил.ПриоритетПравила - УзлыБезПравил.НомерУзла / втЗнаменательПравилаУзла.РазрядностьУзла
	|		ИНАЧЕ ИсточникиПравил.ПриоритетПравила
	|	КОНЕЦ КАК ПриоритетПравила,
	|	ВЫБОР
	|		КОГДА ИсточникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт)
	|			ТОГДА ИсточникиПравил.ПриоритетПравила
	|	КОНЕЦ КАК ПриоритетПравилаСпособ1,
	|	ИсточникиПравил.СпособЗакрытия КАК СпособЗакрытия,
	|	УзлыБезПравил.НомерУзла КАК Узел,
	|	УзлыБезПравил.Счет КАК Счет,
	|	УзлыБезПравил.Подразделение КАК Подразделение,
	|	УзлыБезПравил.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	УзлыБезПравил.Субконто1 КАК Субконто1,
	|	УзлыБезПравил.Субконто2 КАК Субконто2,
	|	УзлыБезПравил.Субконто3 КАК Субконто3,
	|	УзлыБезПравил.ЕстьОборотНСБУ КАК ЕстьОборотНСБУ,
	|	УзлыБезПравил.КоличествоДО КАК КоличествоДО,
	|	УзлыБезПравил.КоличествоКО КАК КоличествоКО,
	|	УзлыБезПравил.КоличествоСНД КАК КоличествоСНД,
	|	УзлыБезПравил.СуммаДО КАК СуммаДО,
	|	УзлыБезПравил.СуммаКО КАК СуммаКО,
	|	УзлыБезПравил.СуммаСНД КАК СуммаСНД,
	|	УзлыБезПравил.СуммаДОВО КАК СуммаДОВО,
	|	УзлыБезПравил.СуммаКОВО КАК СуммаКОВО,
	|	УзлыБезПравил.СуммаСНДВО КАК СуммаСНДВО,
	|	ВЫБОР
	|		КОГДА ИсточникиПравил.CписыватьЗатратыНСБУ
	|			ТОГДА УзлыБезПравил.ОстатокДляРаспределенияСНСБУ
	|		ИНАЧЕ УзлыБезПравил.ОстатокДляРаспределения
	|	КОНЕЦ КАК ОстатокДляРаспределения,
	|	УзлыБезПравил.ЦенаСписанияМПЗ КАК ЦенаСписанияМПЗ,
	|	УзлыБезПравил.БазаЗнаменательИтераций КАК БазаЗнаменательИтераций,
	|	ВЫБОР
	|		КОГДА ИсточникиПравил.CписыватьЗатратыНСБУ
	|			ТОГДА УзлыБезПравил.ОстатокДляРаспределенияСНСБУВО
	|		ИНАЧЕ УзлыБезПравил.ОстатокДляРаспределенияВО
	|	КОНЕЦ КАК ОстатокДляРаспределенияВО,
	|	УзлыБезПравил.ЦенаСписанияМПЗВО КАК ЦенаСписанияМПЗВО,
	|	УзлыБезПравил.БазаЗнаменательИтерацийВО КАК БазаЗнаменательИтерацийВО,
	|	УзлыБезПравил.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия
	|ПОМЕСТИТЬ УзлыКакИсточникиПравил
	|ИЗ
	|	УзлыБезПравил КАК УзлыБезПравил
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсточникиПравил КАК ИсточникиПравил
	|		ПО (УзлыБезПравил.ТипСчетаЗакрытия = ""НЗП"")
	|			И (ИсточникиПравил.Счет = УзлыБезПравил.Счет)
	|			И (ИсточникиПравил.Субконто1 В (НЕОПРЕДЕЛЕНО, УзлыБезПравил.Субконто1))
	|			И (ИсточникиПравил.Субконто2 В (НЕОПРЕДЕЛЕНО, УзлыБезПравил.Субконто2))
	|			И (ИсточникиПравил.Субконто3 В (НЕОПРЕДЕЛЕНО, УзлыБезПравил.Субконто3))
	|			И (ИсточникиПравил.НаправлениеДеятельности В (ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка), УзлыБезПравил.НаправлениеДеятельности))
	|			И (ИсточникиПравил.Подразделение В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), УзлыБезПравил.Подразделение))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗнаменательПравилаУзла КАК втЗнаменательПравилаУзла
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Узел";
		
	Если УничтожитьТаблицы Тогда
	
		МассивТекста = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
		МассивТекста.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "УзлыБезПравил"));
		
		ТекстЗапроса = СтрСоединить(МассивТекста, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_Узлы(НомераТаблиц)

	//Узлы.СпособЗакрытия - колонка(NULL - если не закрывается, ПустаяСсылка- способ0)
	//Узлы.ПравилоПриемник - Колонка, содержится номер правила по которому надо закрывать данный узел
	//Узлы.СпособПоУмолчанию - Колонка, содержится признак что узел надо закрывать по умолчанию, правило не настроено
		
	НомераТаблиц.Вставить("Узлы", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(т.ПриоритетПравила), т.Узел) КАК ПравилоПриемник,
	|	МАКСИМУМ(т.ПриоритетПравилаСпособ1) КАК ПриоритетПравилаСпособ1,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(т.ТипСчетаЗакрытия) ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ЕСТЬNULL(МАКСИМУМ(т.СпособЗакрытия), ЗНАЧЕНИЕ(Справочник.НастройкиРаспределенияЗатратМСФО.ПустаяСсылка))
	|	КОНЕЦ КАК СпособЗакрытия,
	|	т.Узел КАК Узел,
	|	МАКСИМУМ(т.Счет) КАК Счет,
	|	МАКСИМУМ(т.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(т.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|	МАКСИМУМ(т.Субконто1) КАК Субконто1,
	|	МАКСИМУМ(т.Субконто2) КАК Субконто2,
	|	МАКСИМУМ(т.Субконто3) КАК Субконто3,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ВЫРАЗИТЬ(т.Счет КАК ПланСчетов.МСФО).РазделПланаСчетов В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.НезавершенныеОперации), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.КоммерческиеАдминистративныеРасходы))
	|				ТОГДА NULL
	|			КОГДА ТИПЗНАЧЕНИЯ(т.Субконто1) В (&ТипыСтатьяЗатрат)
	|				ТОГДА т.Субконто1
	|			КОГДА ТИПЗНАЧЕНИЯ(т.Субконто2) В (&ТипыСтатьяЗатрат)
	|				ТОГДА т.Субконто2
	|			КОГДА ТИПЗНАЧЕНИЯ(т.Субконто3) В (&ТипыСтатьяЗатрат)
	|				ТОГДА т.Субконто3
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СтатьяЗатрат,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(т.Счет КАК ПланСчетов.МСФО).РазделПланаСчетов В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Запасы))
	|				ТОГДА &ЭлементЗатрат_МатериальныеЗатраты
	|			КОГДА ВЫРАЗИТЬ(т.Счет КАК ПланСчетов.МСФО).РазделПланаСчетов В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ОплатаТруда))
	|				ТОГДА &ЭлементЗатрат_ОплатаТруда
	|			КОГДА ВЫРАЗИТЬ(т.Счет КАК ПланСчетов.МСФО).РазделПланаСчетов В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнеоборотныеАктивы))
	|				ТОГДА &ЭлементЗатрат_Амортизация
	|			ИНАЧЕ &ЭлементЗатрат_ПрочиеЗатраты
	|		КОНЕЦ) КАК ЭлементЗатрат,
	|	МАКСИМУМ(т.ЕстьОборотНСБУ) КАК ЕстьОборотНСБУ,
	|	МАКСИМУМ(т.КоличествоДО) КАК КоличествоДО,
	|	МАКСИМУМ(т.КоличествоКО) КАК КоличествоКО,
	|	МАКСИМУМ(т.КоличествоСНД) КАК КоличествоСНД,
	|	МАКСИМУМ(т.СуммаДО) КАК СуммаДО,
	|	МАКСИМУМ(т.СуммаКО) КАК СуммаКО,
	|	МАКСИМУМ(т.СуммаСНД) КАК СуммаСНД,
	|	МАКСИМУМ(т.СуммаДОВО) КАК СуммаДОВО,
	|	МАКСИМУМ(т.СуммаКОВО) КАК СуммаКОВО,
	|	МАКСИМУМ(т.СуммаСНДВО) КАК СуммаСНДВО,
	|	МАКСИМУМ(т.ОстатокДляРаспределения) КАК ОстатокДляРаспределения,
	|	МАКСИМУМ(т.ЦенаСписанияМПЗ) КАК ЦенаСписанияМПЗ,
	|	МАКСИМУМ(т.БазаЗнаменательИтераций) КАК БазаЗнаменательИтераций,
	|	МАКСИМУМ(т.ОстатокДляРаспределенияВО) КАК ОстатокДляРаспределенияВО,
	|	МАКСИМУМ(т.ЦенаСписанияМПЗВО) КАК ЦенаСписанияМПЗВО,
	|	МАКСИМУМ(т.БазаЗнаменательИтерацийВО) КАК БазаЗнаменательИтерацийВО,
	|	МАКСИМУМ(т.ТипСчетаЗакрытия) КАК ТипСчетаЗакрытия
	|ПОМЕСТИТЬ Узлы
	|ИЗ
	|	УзлыКакИсточникиПравил КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Узел
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3,
	|	Подразделение";
	
КонецФункции

Функция ТекстЗапроса_УзлыИсточники(НомераТаблиц)

	НомераТаблиц.Вставить("УзлыИсточники", НомераТаблиц.Количество());
	
	//учитывает оборотность субконто
	
	Возврат
	"ВЫБРАТЬ
	|	т.Узел КАК Узел,
	|	т.СпособЗакрытия КАК СпособЗакрытия,
	|	т.ПриоритетПравилаСпособ1 КАК ПриоритетПравилаСпособ1,
	|	т.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	т.ПравилоПриемник КАК ПравилоПриемник,
	|	т.БазаЗнаменательИтераций КАК БазаЗнаменательИтераций,
	|	т.БазаЗнаменательИтерацийВО КАК БазаЗнаменательИтерацийВО,
	|	т.ЦенаСписанияМПЗ КАК ЦенаСписанияМПЗ,
	|	т.ЦенаСписанияМПЗВО КАК ЦенаСписанияМПЗВО,
	|	т.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА СчетаЗакрытия.Оборотное1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА СчетаЗакрытия.Оборотное2
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА СчетаЗакрытия.Оборотное3
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ т.Субконто3
	|	КОНЕЦ КАК Субконто3,
	|	т.Подразделение КАК Подразделение,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ УзлыИсточники
	|ИЗ
	|	Узлы КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЗакрытия КАК СчетаЗакрытия
	|		ПО т.Счет = СчетаЗакрытия.Счет
	|ГДЕ
	|	НЕ т.ТипСчетаЗакрытия ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3,
	|	Подразделение,
	|	НаправлениеДеятельности";

КонецФункции

#КонецОбласти

#Область БазыРаспределения

Функция ТекстЗапроса_ОборотыУзлов(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ОборотыУзлов", НомераТаблиц.Количество());// Обороты переведем в ОборотыУзлов
	
	//УзлыКакПриемникиПравил.ПравилоИсточник - в каком правиле узел участвует как приемник.
	//УзлыКакПриемникиПравил.ПравилоПриемник - правило, которое следует применить далее к УзелПриемник(см. Узлы.ПравилоПриемник)
	//УзлыКакПриемникиПравил.УзелПриемник - узел выступает как приемник в правиле ПравилоИсточник
	//ОборотыУзлов.ДоляСписания - доля списания первого распределения, которая списывается по УзлыИсточники.ПравилоПриемник из УзлыИсточники.Узел
	//ОборотыУзлов.Доля - доля следующих распределений, которая списывается по УзлыИсточники.ПравилоПриемник из УзлыИсточники.Узел
	//ОборотыУзлов.СписаниеАВНА - Сумма списания корректировок АВНА МСФО, при выбытии ВНА(см. ФормулыНаглядно)
	//ПравилоИсточникПриоритетСпособа1 - ПравилоПриемник для способ1 содержит и приоритет правила и узел.
	
	//Особенности поиска узла источника по оборотности субконто:
	//не оборотное - правило приемник для узла по оборотной аналитике 
	//оборотное(есть списания по оборотной аналитике) - правило приемник для узла по оборотной аналитике
	//оборотное(нет списания по оборотной аналитике) - правило(если есть) по пустой оборотной аналитике
	
	Возврат
	"ВЫБРАТЬ
	|	ОборотыАналитики.РазделМСФО КАК РазделМСФО,
	|	УзлыИсточники.ПриоритетПравилаСпособ1 КАК ИсточникПриоритетПравилаСпособ1,
	|	УзлыИсточники.ПравилоПриемник КАК ПравилоИсточник,
	|	УзлыПриемники.ПравилоПриемник КАК ПравилоПриемник,
	|	УзлыИсточники.Узел КАК УзелИсточник,
	|	УзлыПриемники.Узел КАК УзелПриемник,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""МПЗ""
	|			ТОГДА УзлыИсточники.ЦенаСписанияМПЗ * ОборотыАналитики.КоличествоКт - ОборотыАналитики.Сумма
	|		ИНАЧЕ ОборотыАналитики.Сумма
	|	КОНЕЦ КАК ДоляСписания,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.БазаЗнаменательИтераций = 0
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""МПЗ""
	|			ТОГДА ОборотыАналитики.КоличествоКт / УзлыИсточники.БазаЗнаменательИтераций
	|		ИНАЧЕ ОборотыАналитики.Сумма / УзлыИсточники.БазаЗнаменательИтераций
	|	КОНЕЦ КАК Доля,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА УзлыПриемники.ЦенаСписанияМПЗ
	|	КОНЕЦ КАК СписаниеАВНА,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""МПЗ""
	|			ТОГДА УзлыИсточники.ЦенаСписанияМПЗВО * ОборотыАналитики.КоличествоКт - ОборотыАналитики.СуммаВО
	|		ИНАЧЕ ОборотыАналитики.СуммаВО
	|	КОНЕЦ КАК ДоляСписанияВО,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.БазаЗнаменательИтерацийВО = 0
	|			ТОГДА 0
	|		КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""МПЗ""
	|			ТОГДА ОборотыАналитики.КоличествоКт / УзлыИсточники.БазаЗнаменательИтерацийВО
	|		ИНАЧЕ ОборотыАналитики.СуммаВО / УзлыИсточники.БазаЗнаменательИтерацийВО
	|	КОНЕЦ КАК ДоляВО,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.ТипСчетаЗакрытия = ""АВНА""
	|			ТОГДА УзлыПриемники.ЦенаСписанияМПЗВО
	|	КОНЕЦ КАК СписаниеАВНАВО,
	|	УзлыИсточники.СпособЗакрытия КАК СпособЗакрытия
	|ПОМЕСТИТЬ ОборотыУзлов
	|ИЗ
	|	ОборотыАналитики КАК ОборотыАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Узлы КАК УзлыПриемники
	|		ПО ОборотыАналитики.СчетДт = УзлыПриемники.Счет
	|			И ОборотыАналитики.СубконтоДт1 = УзлыПриемники.Субконто1
	|			И ОборотыАналитики.СубконтоДт2 = УзлыПриемники.Субконто2
	|			И ОборотыАналитики.СубконтоДт3 = УзлыПриемники.Субконто3
	|			И ОборотыАналитики.ПодразделениеДт = УзлыПриемники.Подразделение
	|			И ОборотыАналитики.НаправлениеДеятельностиДт = УзлыПриемники.НаправлениеДеятельности
	|		ЛЕВОЕ СОЕДИНЕНИЕ УзлыИсточники КАК УзлыИсточники
	|		ПО ОборотыАналитики.СчетКт = УзлыИсточники.Счет
	|			И ОборотыАналитики.СубконтоКт1 = УзлыИсточники.Субконто1
	|			И ОборотыАналитики.СубконтоКт2 = УзлыИсточники.Субконто2
	|			И ОборотыАналитики.СубконтоКт3 = УзлыИсточники.Субконто3
	|			И ОборотыАналитики.ПодразделениеКт = УзлыИсточники.Подразделение
	|			И ОборотыАналитики.НаправлениеДеятельностиКт = УзлыИсточники.НаправлениеДеятельности
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЭлиминирующаяОрганизация
	|				ТОГДА НЕ ОборотыАналитики.РазделМСФО
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособЗакрытия,
	|	УзелПриемник,
	|	УзелИсточник";
 
КонецФункции

Функция ТекстЗапроса_СписаниеНА(НомераТаблиц)

	НомераТаблиц.Вставить("втСписаниеНА", НомераТаблиц.Количество());// Обороты переведем в ОборотыУзлов
	
	Возврат
	"ВЫБРАТЬ
	|	т.РазделМСФО КАК РазделМСФО,
	|	т.ПравилоИсточник КАК ПравилоИсточник,
	|	т.ПравилоПриемник КАК ПравилоПриемник,
	|	т.УзелПриемник КАК УзелПриемник,
	|	т.УзелИсточник КАК УзелИсточник,
	|	т.СписаниеАВНА КАК СписаниеАВНА,
	|	т.СписаниеАВНАВО КАК СписаниеАВНАВО
	|ПОМЕСТИТЬ втСписаниеНА
	|ИЗ
	|	ОборотыУзлов КАК т
	|ГДЕ
	|	НЕ т.РазделМСФО
	|	И (т.СписаниеАВНА <> 0
	|			ИЛИ т.СписаниеАВНАВО <> 0)";
	
КонецФункции

Функция ТекстЗапроса_УзлыКакПриемникиСпособ1(НомераТаблиц)

	НомераТаблиц.Вставить("УзлыКакПриемникиСпособ1", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ПриемникиПравил.ПриоритетПравила КАК ПравилоИсточник,
	|	Узлы.Узел КАК УзелПриемник
	|ПОМЕСТИТЬ УзлыКакПриемникиСпособ1
	|ИЗ
	|	ПриемникиПравил КАК ПриемникиПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Узлы КАК Узлы
	|		ПО ПриемникиПравил.Счет = Узлы.Счет
	|			И (ПриемникиПравил.Субконто1 В (Узлы.Субконто1, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.Субконто2 В (Узлы.Субконто2, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.Субконто3 В (Узлы.Субконто3, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.НаправлениеДеятельности В (Узлы.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)))
	|			И (ПриемникиПравил.Подразделение В (Узлы.Подразделение, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|ГДЕ
	|	Узлы.СуммаДО <> 0
	|	И Узлы.ЕстьОборотНСБУ
	|	И ПриемникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравилоИсточник,
	|	УзелПриемник";

КонецФункции

Функция ТекстЗапроса_УзлыКакПриемникиСпособ2(НомераТаблиц)

	НомераТаблиц.Вставить("УзлыКакПриемникиСпособ2", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ПриемникиПравил.ПриоритетПравила КАК ПравилоИсточник,
	|	ПриемникиПравил.СпособЗакрытия КАК СпособЗакрытия,
	|	Узлы.ПравилоПриемник КАК ПравилоПриемник,
	|	Узлы.Узел КАК УзелПриемник
	|ПОМЕСТИТЬ УзлыКакПриемникиСпособ2
	|ИЗ
	|	ПриемникиПравил КАК ПриемникиПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Узлы КАК Узлы
	|		ПО ПриемникиПравил.Счет = Узлы.Счет
	|			И (ПриемникиПравил.Субконто1 В (Узлы.Субконто1, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.Субконто2 В (Узлы.Субконто2, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.Субконто3 В (Узлы.Субконто3, НЕОПРЕДЕЛЕНО))
	|			И (ПриемникиПравил.НаправлениеДеятельности В (Узлы.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)))
	|			И (ПриемникиПравил.Подразделение В (Узлы.Подразделение, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|ГДЕ
	|	Узлы.СуммаДО <> 0
	|	И Узлы.ЕстьОборотНСБУ
	|	И ПриемникиПравил.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДт)";

КонецФункции

Функция ТекстЗапроса_ДолиПриемниковПравил(НомераТаблиц, УничтожитьТаблицы = Истина)
	
	//ПравилоПриемник 	- правило, которое будет использовано для приемника(МАКСИМУМ - по приоритетам правил)
	//ПравилоИсточник 	- правило, для которого расчитываются доли
	//УзелПриемник 		- узел базы распределения с долей
	//ДоляСписания 		- доля, которую следует списать на первой итерации
	//Доля 				- доля, которую следует списать на второй и последующих итерациях
	
	НомераТаблиц.Вставить("ДолиПриемниковПравил", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	МАКСИМУМ(Доли.ПравилоПриемник) КАК ПравилоПриемник,
	|	Доли.ПравилоИсточник КАК ПравилоИсточник,
	|	Доли.УзелПриемник КАК УзелПриемник,
	|	ВЫБОР
	|		КОГДА СУММА(Доли.ДоляСписания) = 0
	|			ТОГДА МАКСИМУМ(Доли.ДоляСписания)
	|		ИНАЧЕ СУММА(Доли.ДоляСписания)
	|	КОНЕЦ КАК ДоляСписания,
	|	ВЫБОР
	|		КОГДА СУММА(Доли.Доля) = 0
	|			ТОГДА МАКСИМУМ(Доли.Доля)
	|		ИНАЧЕ СУММА(Доли.Доля)
	|	КОНЕЦ КАК Доля,
	|	ВЫБОР
	|		КОГДА СУММА(Доли.ДоляСписанияВО) = 0
	|			ТОГДА МАКСИМУМ(Доли.ДоляСписанияВО)
	|		ИНАЧЕ СУММА(Доли.ДоляСписанияВО)
	|	КОНЕЦ КАК ДоляСписанияВО,
	|	ВЫБОР
	|		КОГДА СУММА(Доли.ДоляВО) = 0
	|			ТОГДА МАКСИМУМ(Доли.ДоляВО)
	|		ИНАЧЕ СУММА(Доли.ДоляВО)
	|	КОНЕЦ КАК ДоляВО
	|ПОМЕСТИТЬ ДолиПриемниковПравил
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыУзлов.ПравилоПриемник КАК ПравилоПриемник,
	|		ОборотыУзлов.ПравилоИсточник КАК ПравилоИсточник,
	|		ОборотыУзлов.УзелПриемник КАК УзелПриемник,
	|		ОборотыУзлов.ДоляСписания КАК ДоляСписания,
	|		ОборотыУзлов.Доля КАК Доля,
	|		ОборотыУзлов.ДоляСписанияВО КАК ДоляСписанияВО,
	|		ОборотыУзлов.ДоляВО КАК ДоляВО
	|	ИЗ
	|		ОборотыУзлов КАК ОборотыУзлов
	|	ГДЕ
	|		ОборотыУзлов.СпособЗакрытия = ЗНАЧЕНИЕ(Справочник.НастройкиРаспределенияЗатратМСФО.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыУзлов.ПравилоПриемник,
	|		ОборотыУзлов.ПравилоИсточник,
	|		ОборотыУзлов.УзелПриемник,
	|		ОборотыУзлов.ДоляСписания,
	|		ОборотыУзлов.Доля,
	|		ОборотыУзлов.ДоляСписанияВО,
	|		ОборотыУзлов.ДоляВО
	|	ИЗ
	|		ОборотыУзлов КАК ОборотыУзлов
	|	ГДЕ
	|		НЕ ОборотыУзлов.РазделМСФО
	|		И ОборотыУзлов.СпособЗакрытия = ЗНАЧЕНИЕ(Перечисление.СпособыЗакрытияСчетовЗатрат.ПропорциональноОборотуНсбуДтКт)
	|		И (ОборотыУзлов.ИсточникПриоритетПравилаСпособ1, ОборотыУзлов.УзелПриемник) В
	|				(ВЫБРАТЬ
	|					т.ПравилоИсточник,
	|					т.УзелПриемник
	|				ИЗ
	|					УзлыКакПриемникиСпособ1 КАК т)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УзлыКакПриемникиСпособ2.ПравилоПриемник,
	|		УзлыКакПриемникиСпособ2.ПравилоИсточник,
	|		УзлыКакПриемникиСпособ2.УзелПриемник,
	|		ОборотыУзлов.ДоляСписания,
	|		ОборотыУзлов.Доля,
	|		ОборотыУзлов.ДоляСписанияВО,
	|		ОборотыУзлов.ДоляВО
	|	ИЗ
	|		ОборотыУзлов КАК ОборотыУзлов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ УзлыКакПриемникиСпособ2 КАК УзлыКакПриемникиСпособ2
	|			ПО ОборотыУзлов.ПравилоПриемник = УзлыКакПриемникиСпособ2.ПравилоПриемник
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Узлы.ПравилоПриемник,
	|		ПриемникиПравил.ПриоритетПравила,
	|		Узлы.Узел,
	|		ПриемникиПравил.Доля,
	|		ПриемникиПравил.Доля,
	|		ПриемникиПравил.Доля,
	|		ПриемникиПравил.Доля
	|	ИЗ
	|		БазыТаблицами КАК ПриемникиПравил
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Узлы КАК Узлы
	|			ПО ПриемникиПравил.Счет = Узлы.Счет
	|				И ПриемникиПравил.Субконто1 = Узлы.Субконто1
	|				И ПриемникиПравил.Субконто2 = Узлы.Субконто2
	|				И ПриемникиПравил.Субконто3 = Узлы.Субконто3
	|				И ПриемникиПравил.НаправлениеДеятельности = Узлы.НаправлениеДеятельности
	|				И ПриемникиПравил.Подразделение = Узлы.Подразделение) КАК Доли
	|
	|СГРУППИРОВАТЬ ПО
	|	Доли.ПравилоИсточник,
	|	Доли.УзелПриемник";
	
КонецФункции	

Функция ТекстЗапроса_БазыДляДолей(НомераТаблиц)

	НомераТаблиц.Вставить("БазыДляДолей", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ДолиПриемниковПравил.ПравилоИсточник КАК ПравилоИсточник,
	|	ВЫБОР
	|		КОГДА СУММА(ДолиПриемниковПравил.ДоляСписания) <> 0
	|			ТОГДА СУММА(ДолиПриемниковПравил.ДоляСписания)
	|		КОГДА МАКСИМУМ(ДолиПриемниковПравил.ДоляСписания) = 0
	|				И МИНИМУМ(ДолиПриемниковПравил.ДоляСписания) = 0
	|			ТОГДА NULL
	|		ИНАЧЕ МАКСИМУМ(ДолиПриемниковПравил.ДоляСписания)
	|	КОНЕЦ КАК БазаСписания,
	|	ВЫБОР
	|		КОГДА СУММА(ДолиПриемниковПравил.Доля) <> 0
	|			ТОГДА СУММА(ДолиПриемниковПравил.Доля)
	|		КОГДА МАКСИМУМ(ДолиПриемниковПравил.Доля) = 0
	|				И МИНИМУМ(ДолиПриемниковПравил.Доля) = 0
	|			ТОГДА NULL
	|		ИНАЧЕ МАКСИМУМ(ДолиПриемниковПравил.Доля)
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА СУММА(ДолиПриемниковПравил.ДоляСписанияВО) <> 0
	|			ТОГДА СУММА(ДолиПриемниковПравил.ДоляСписанияВО)
	|		КОГДА МАКСИМУМ(ДолиПриемниковПравил.ДоляСписанияВО) = 0
	|				И МИНИМУМ(ДолиПриемниковПравил.ДоляСписанияВО) = 0
	|			ТОГДА NULL
	|		ИНАЧЕ МАКСИМУМ(ДолиПриемниковПравил.ДоляСписанияВО)
	|	КОНЕЦ КАК БазаСписанияВО,
	|	ВЫБОР
	|		КОГДА СУММА(ДолиПриемниковПравил.ДоляВО) <> 0
	|			ТОГДА СУММА(ДолиПриемниковПравил.ДоляВО)
	|		КОГДА МАКСИМУМ(ДолиПриемниковПравил.ДоляВО) = 0
	|				И МИНИМУМ(ДолиПриемниковПравил.ДоляВО) = 0
	|			ТОГДА NULL
	|		ИНАЧЕ МАКСИМУМ(ДолиПриемниковПравил.ДоляВО)
	|	КОНЕЦ КАК БазаВО,
	|	МАКСИМУМ(ДолиПриемниковПравил.УзелПриемник) КАК УзелПриемник
	|ПОМЕСТИТЬ БазыДляДолей
	|ИЗ
	|	ДолиПриемниковПравил КАК ДолиПриемниковПравил
	|
	|СГРУППИРОВАТЬ ПО
	|	ДолиПриемниковПравил.ПравилоИсточник";
	
КонецФункции	

Функция ТекстЗапроса_ДолиПриемниковПравила(НомераТаблиц)

	НомераТаблиц.Вставить("ДолиПриемниковПравила", НомераТаблиц.Количество());
	//в случае способов 1,2 участвуют не все списания для расчета доли
	
	Возврат
	"ВЫБРАТЬ
	|	ДолиПриемниковПравил.ПравилоПриемник КАК ПравилоПриемник,
	|	ДолиПриемниковПравил.ПравилоИсточник КАК ПравилоИсточник,
	|	ДолиПриемниковПравил.УзелПриемник КАК УзелПриемник,
	|	ВЫБОР
	|		КОГДА БазыДляДолей.БазаСписания ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА БазыДляДолей.БазаСписания = 0
	|			ТОГДА 1
	|		ИНАЧЕ ДолиПриемниковПравил.ДоляСписания / БазыДляДолей.БазаСписания
	|	КОНЕЦ КАК ДоляСписания,
	|	ВЫБОР
	|		КОГДА БазыДляДолей.База ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА БазыДляДолей.База = 0
	|			ТОГДА 1
	|		ИНАЧЕ ДолиПриемниковПравил.Доля / БазыДляДолей.База
	|	КОНЕЦ КАК Доля,
	|	ВЫБОР
	|		КОГДА БазыДляДолей.БазаСписанияВО ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА БазыДляДолей.БазаСписанияВО = 0
	|			ТОГДА 1
	|		ИНАЧЕ ДолиПриемниковПравил.ДоляСписанияВО / БазыДляДолей.БазаСписанияВО
	|	КОНЕЦ КАК ДоляСписанияВО,
	|	ВЫБОР
	|		КОГДА БазыДляДолей.БазаВО ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА БазыДляДолей.БазаВО = 0
	|			ТОГДА 1
	|		ИНАЧЕ ДолиПриемниковПравил.ДоляВО / БазыДляДолей.БазаВО
	|	КОНЕЦ КАК ДоляВО,
	|	ДолиПриемниковПравил.ПравилоПриемник = ДолиПриемниковПравил.ПравилоИсточник КАК ЭтоУзелОстатка
	|ПОМЕСТИТЬ ДолиПриемниковПравила
	|ИЗ
	|	ДолиПриемниковПравил КАК ДолиПриемниковПравил
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БазыДляДолей КАК БазыДляДолей
	|		ПО ДолиПриемниковПравил.ПравилоИсточник = БазыДляДолей.ПравилоИсточник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравилоИсточник";

КонецФункции

#КонецОбласти

Функция ТекстЗапроса_РаспределениеНачальное(НомераТаблиц)

	НомераТаблиц.Вставить("втРаспределение_1_До", НомераТаблиц.Количество());

	//СуммаБаза - Сумма долей для распределения Сумма(учитывает остатки на конец периода)
	//Сумма - Сумма распределения 
	
	Возврат
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	Распределение1.УзелНачальный КАК НомерИсточникаЗаписи,
	|	Распределение1.УзелПриемник КАК УзелПриемник,
	|	Распределение1.ПравилоПриемник КАК ПравилоПриемник,
	|	Распределение1.СуммаБаза КАК СуммаБаза,
	|	Распределение1.Сумма КАК Сумма,
	|	Распределение1.СуммаБазаВО КАК СуммаБазаВО,
	|	Распределение1.СуммаВО КАК СуммаВО,
	|	Распределение1.ПравилоТекущее КАК ПравилоТекущее,
	|	Распределение1.УзелИсточник КАК УзелИсточник,
	|	Распределение1.УзелНачальный КАК УзелНачальный,
	|	Распределение1.Распределять КАК Распределять
	|ПОМЕСТИТЬ втРаспределение_1_До
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДолиПриемниковПравила.УзелПриемник КАК УзелПриемник,
	|		ДолиПриемниковПравила.ПравилоПриемник КАК ПравилоПриемник,
	|		Источники.ОстатокДляРаспределения КАК СуммаБаза,
	|		ВЫРАЗИТЬ(Источники.ОстатокДляРаспределения * ДолиПриемниковПравила.ДоляСписания КАК ЧИСЛО(18, 2)) КАК Сумма,
	|		Источники.ОстатокДляРаспределенияВО КАК СуммаБазаВО,
	|		ВЫРАЗИТЬ(Источники.ОстатокДляРаспределенияВО * ДолиПриемниковПравила.ДоляСписанияВО КАК ЧИСЛО(18, 2)) КАК СуммаВО,
	|		Источники.ПравилоПриемник КАК ПравилоТекущее,
	|		Источники.Узел КАК УзелИсточник,
	|		Источники.Узел КАК УзелНачальный,
	|		Источники.Узел <> ДолиПриемниковПравила.УзелПриемник КАК Распределять
	|	ИЗ
	|		Узлы КАК Источники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиПриемниковПравила КАК ДолиПриемниковПравила
	|			ПО Источники.ПравилоПриемник = ДолиПриемниковПравила.ПравилоИсточник
	|	ГДЕ
	|		((ВЫРАЗИТЬ(Источники.ОстатокДляРаспределения * ДолиПриемниковПравила.ДоляСписания КАК ЧИСЛО(18, 2))) <> 0
	|				ИЛИ (ВЫРАЗИТЬ(Источники.ОстатокДляРаспределенияВО * ДолиПриемниковПравила.ДоляСписанияВО КАК ЧИСЛО(18, 2))) <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДолиПриемниковПравила.УзелПриемник,
	|		ДолиПриемниковПравила.ПравилоПриемник,
	|		втСписаниеНА.СписаниеАВНА,
	|		втСписаниеНА.СписаниеАВНА,
	|		втСписаниеНА.СписаниеАВНАВО,
	|		втСписаниеНА.СписаниеАВНАВО,
	|		-ДолиПриемниковПравила.УзелПриемник,
	|		втСписаниеНА.УзелИсточник,
	|		втСписаниеНА.УзелИсточник,
	|		втСписаниеНА.УзелИсточник <> ДолиПриемниковПравила.УзелПриемник
	|	ИЗ
	|		втСписаниеНА КАК втСписаниеНА
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиПриемниковПравила КАК ДолиПриемниковПравила
	|			ПО втСписаниеНА.ПравилоПриемник = ДолиПриемниковПравила.ПравилоПриемник
	|				И втСписаниеНА.ПравилоИсточник = ДолиПриемниковПравила.ПравилоИсточник
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДолиПриемниковПравила.УзелПриемник,
	|		ДолиПриемниковПравила.ПравилоПриемник,
	|		-Источники.СписаниеАВНА,
	|		-(ВЫРАЗИТЬ(Источники.СписаниеАВНА * ДолиПриемниковПравила.Доля КАК ЧИСЛО(18, 2))),
	|		-Источники.СписаниеАВНАВО,
	|		-(ВЫРАЗИТЬ(Источники.СписаниеАВНАВО * ДолиПриемниковПравила.ДоляВО КАК ЧИСЛО(18, 2))),
	|		Источники.ПравилоИсточник,
	|		Источники.УзелИсточник,
	|		Источники.УзелПриемник,
	|		ВЫБОР
	|			КОГДА Источники.УзелПриемник = ДолиПриемниковПравила.УзелПриемник
	|				ТОГДА NULL
	|			ИНАЧЕ Источники.УзелПриемник <> ДолиПриемниковПравила.УзелПриемник
	|		КОНЕЦ
	|	ИЗ
	|		втСписаниеНА КАК Источники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиПриемниковПравила КАК ДолиПриемниковПравила
	|			ПО Источники.ПравилоИсточник = ДолиПриемниковПравила.ПравилоИсточник
	|	ГДЕ
	|		((ВЫРАЗИТЬ(Источники.СписаниеАВНА * ДолиПриемниковПравила.Доля КАК ЧИСЛО(18, 2))) <> 0
	|				ИЛИ (ВЫРАЗИТЬ(Источники.СписаниеАВНАВО * ДолиПриемниковПравила.ДоляВО КАК ЧИСЛО(18, 2))) <> 0)) КАК Распределение1";

КонецФункции

#КонецОбласти

Функция ТекстЗапроса_Распределение(НомерПредыдущий = 1, НомерТекущий = 2, УничтожитьТаблицы = Истина)

	// "Распределять = NULL" - распределение зашло в кольцо, текущее распределение выполняем(проводка вместо остатка), цикл прерываем
	//СуммаБаза - Сумма долей для распределения Сумма(учитывает остатки на конец периода)
	//Сумма - Сумма распределения 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	Источники.НомерИсточникаЗаписи КАК НомерИсточникаЗаписи,
	|	ДолиПриемниковПравила.УзелПриемник КАК УзелПриемник,
	|	ДолиПриемниковПравила.ПравилоПриемник КАК ПравилоПриемник,
	|	Источники.Сумма КАК СуммаБаза,
	|	ВЫРАЗИТЬ(Источники.Сумма * ДолиПриемниковПравила.Доля КАК ЧИСЛО(18, 2)) КАК Сумма,
	|	Источники.СуммаВО КАК СуммаБазаВО,
	|	ВЫРАЗИТЬ(Источники.СуммаВО * ДолиПриемниковПравила.ДоляВО КАК ЧИСЛО(18, 2)) КАК СуммаВО,
	|	Источники.ПравилоПриемник КАК ПравилоТекущее,
	|	Источники.УзелПриемник КАК УзелИсточник,
	|	Источники.УзелНачальный КАК УзелНачальный,
	|	ВЫБОР
	|		КОГДА Источники.УзелНачальный = ДолиПриемниковПравила.УзелПриемник
	|			ТОГДА NULL
	|		ИНАЧЕ Источники.УзелПриемник <> ДолиПриемниковПравила.УзелПриемник
	|	КОНЕЦ КАК Распределять
	|ПОМЕСТИТЬ втРаспределение_НомерТекущий_До
	|ИЗ
	|	втРаспределение_НомерПред КАК Источники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиПриемниковПравила КАК ДолиПриемниковПравила
	|		ПО Источники.ПравилоПриемник = ДолиПриемниковПравила.ПравилоИсточник
	|ГДЕ
	|	Источники.Распределять
	|	И ((ВЫРАЗИТЬ(Источники.Сумма * ДолиПриемниковПравила.Доля КАК ЧИСЛО(18, 2))) <> 0
	|			ИЛИ (ВЫРАЗИТЬ(Источники.СуммаВО * ДолиПриемниковПравила.ДоляВО КАК ЧИСЛО(18, 2))) <> 0)";	
	
	НомерТекущийТекстом = Формат(НомерТекущий, "ЧГ=0");
	
	Возврат 
	СтрЗаменить(СтрЗаменить(ТекстЗапроса, "НомерТекущий", НомерТекущийТекстом), "НомерПред", Формат(НомерПредыдущий, "ЧГ=0"))
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
	+ ТекстЗапроса_КорректировкаРаспределения(Новый Структура, НомерТекущийТекстом, УничтожитьТаблицы);
		
КонецФункции

#Область КорректировкаРаспределения

Функция ТекстЗапроса_КорректировкаРаспределения(НомераТаблиц, НомерТекущийТекстом = "2", УничтожитьТаблицы = Истина)

	ИмяТаблицы = "втРаспределение_" + НомерТекущийТекстом;
	
	НомераТаблиц.Вставить(ИмяТаблицы + "_Корр", 				НомераТаблиц.Количество());
	НомераТаблиц.Вставить(ИмяТаблицы, 							НомераТаблиц.Количество());
	НомераТаблиц.Вставить(ИмяТаблицы + "_ЕстьРаспределения",	НомераТаблиц.Количество());
	
	//НомерИсточникаЗаписи - для корректного расчета МАКСИМУМ(т.СуммаБаза)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	т.ПравилоТекущее КАК ПравилоТекущее,
	|	т.УзелИсточник КАК УзелИсточник,
	|	т.НомерИсточникаЗаписи КАК НомерИсточникаЗаписи,
	|	МАКСИМУМ(т.НомерЗаписи) КАК НомерЗаписиКорр,
	|	МАКСИМУМ(т.СуммаБаза) - СУММА(т.Сумма) КАК Сумма,
	|	МАКСИМУМ(т.СуммаБазаВО) - СУММА(т.СуммаВО) КАК СуммаВО
	|ПОМЕСТИТЬ втРаспределение_НомерТекущий_Корр
	|ИЗ
	|	втРаспределение_НомерТекущий_До КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ПравилоТекущее,
	|	т.УзелИсточник,
	|	т.НомерИсточникаЗаписи
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(т.СуммаБаза) - СУММА(т.Сумма) <> 0
	|		ИЛИ МАКСИМУМ(т.СуммаБазаВО) - СУММА(т.СуммаВО) <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерЗаписиКорр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерИсточникаЗаписи,
	|	т.УзелПриемник КАК УзелПриемник,
	|	т.ПравилоПриемник КАК ПравилоПриемник,
	|	СУММА(т.Сумма + ЕСТЬNULL(к.Сумма, 0)) КАК Сумма,
	|	СУММА(т.СуммаВО + ЕСТЬNULL(к.СуммаВО, 0)) КАК СуммаВО,
	|	т.ПравилоТекущее КАК ПравилоТекущее,
	|	т.УзелИсточник КАК УзелИсточник,
	|	т.УзелНачальный КАК УзелНачальный,
	|	т.Распределять КАК Распределять
	|ПОМЕСТИТЬ втРаспределение_НомерТекущий
	|ИЗ
	|	втРаспределение_НомерТекущий_До КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРаспределение_НомерТекущий_Корр КАК к
	|		ПО т.НомерЗаписи = к.НомерЗаписиКорр
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ПравилоТекущее,
	|	т.УзелИсточник,
	|	т.УзелНачальный,
	|	т.ПравилоПриемник,
	|	т.УзелПриемник,
	|	т.Распределять
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.ПравилоПриемник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьРаспределения
	|ИЗ
	|	втРаспределение_НомерТекущий КАК т";
	
	Если УничтожитьТаблицы Тогда
	
		МассивТекста = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
		МассивТекста.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, ИмяТаблицы + "_До"));
		МассивТекста.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, ИмяТаблицы + "_Корр"));
		
		ТекстЗапроса = СтрСоединить(МассивТекста, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
		
	КонецЕсли;
	
	Возврат СтрЗаменить(ТекстЗапроса, "НомерТекущий", НомерТекущийТекстом);
	
КонецФункции

#КонецОбласти

#Область ТекстЗапроса_Движения

Функция ТекстЗапроса_Движения(НомераТаблиц, НомерИтерации, Реквизиты)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_Проводки(НомераТаблиц, НомерИтерации));
	ТекстЗапроса.Добавить(ТекстЗапроса_УзлыИндексПоУзел(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, "Узлы"));
	ТекстЗапроса.Добавить(ТекстЗапроса_СтруктураСтоимостиЗапасов(НомераТаблиц));
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводкиТУ(НомераТаблиц, Реквизиты));
	Иначе 
		ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводки(НомераТаблиц));	
	КонецЕсли;
	
	Возврат СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());

КонецФункции

Функция ТекстЗапроса_Проводки(НомераТаблиц, НомерИтерации = 1)

	НомераТаблиц.Вставить("Распределения", НомераТаблиц.Количество());
	
	ТекстШаблон = 
	"ВЫБРАТЬ
	|	т.УзелПриемник КАК УзелПриемник,
	|	т.Сумма КАК Сумма,
	|	т.СуммаВО КАК СуммаВО,
	|	""1"" КАК НомерРаспределения,	
	|	т.УзелИсточник КАК УзелИсточник,
	|	т.УзелНачальный КАК УзелНачальный,
	|	ЕстьNULL(НЕ т.Распределять, ЛОЖЬ) КАК Остаток
	|ИЗ
	|	втРаспределение_1 КАК т
	|";
	
	ТекстЗапроса = Новый Массив;

	Для НомерЗапроса = 1 По НомерИтерации Цикл
		ТекстЗапроса.Добавить(СтрЗаменить(ТекстШаблон, "1", Формат(НомерЗапроса, "ЧГ=")));
	КонецЦикла;
	
	ТекстЗапросаИтог = 
	"ВЫБРАТЬ
	|	т.УзелПриемник КАК УзелПриемник,
	|	т.УзелИсточник КАК УзелИсточник,
	|	т.УзелНачальный КАК УзелНачальный,
	|	т.НомерРаспределения КАК НомерРаспределения,
	|	т.Остаток КАК Остаток,
	|	СУММА(т.Сумма) КАК Сумма,
	|	СУММА(т.СуммаВО) КАК СуммаВО
	|ПОМЕСТИТЬ Распределения
	|ИЗ
	|	(%1) КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.УзелПриемник,
	|	т.Остаток,
	|	т.НомерРаспределения,
	|	т.УзелИсточник,
	|	т.УзелНачальный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.УзелПриемник,
	|	т.Остаток,
	|	т.УзелИсточник,
	|	т.УзелНачальный";
	
	Возврат СтрШаблон(ТекстЗапросаИтог, СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ "));
	
КонецФункции

Функция ТекстЗапроса_УзлыИндексПоУзел(НомераТаблиц)
	
	НомераТаблиц.Вставить("втУзлыИндексПоУзел", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	т.Узел КАК Узел,
	|	СчетаУчета.СчетИБ КАК СчетИБ,
	|	СчетаУчета.НомерСубконтоСтатьиЗатрат КАК НомерСубконтоСтатьиЗатрат,
	|	СчетаУчета.НомерСубконтоЭлементыЗатрат КАК НомерСубконтоЭлементыЗатрат,
	|	СчетаУчета.ВидСубконто1 КАК ВидСубконто1,
	|	СчетаУчета.ВидСубконто2 КАК ВидСубконто2,
	|	СчетаУчета.ВидСубконто3 КАК ВидСубконто3,
	|	т.СтатьяЗатрат КАК СтатьяЗатрат,
	|	т.ЭлементЗатрат КАК ЭлементЗатрат,
	|	СчетаУчета.НомерСубконтоСтатьиЗатрат > 1 ИЛИ СчетаУчета.НомерСубконтоЭлементыЗатрат > 1 КАК ЕстьАналитикаЗатрат,
	|	т.ТипСчетаЗакрытия КАК ТипСчетаЗакрытия,
	|	т.Счет КАК Счет,
	|	т.Подразделение КАК Подразделение,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втУзлыИндексПоУзел
	|ИЗ
	|	Узлы КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчета КАК СчетаУчета
	|		ПО т.Счет = СчетаУчета.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Узел,
	|	ЕстьАналитикаЗатрат";

КонецФункции

Функция ТекстЗапроса_СтруктураСтоимостиЗапасов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаСтруктураСтоимости", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Сценарий КАК Сценарий,
	|	СУММА(Распределение.Сумма) КАК Сальдо,
	|	СУММА(Распределение.Сумма) КАК Выпуск,
	|	СУММА(Распределение.СуммаВО) КАК СальдоВО,
	|	СУММА(Распределение.СуммаВО) КАК ВыпускВО,
	|	УзлыПриемники.СчетИБ КАК Счет,
	|	УзлыПриемники.Субконто1 КАК Субконто1,
	|	УзлыПриемники.Субконто2 КАК Субконто2,
	|	УзлыПриемники.Субконто3 КАК Субконто3,
	|	УзлыПриемники.Подразделение КАК Подразделение,
	|	УзлыПриемники.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	УзлыНачальные.СтатьяЗатрат КАК СтатьяЗатрат,
	|	УзлыНачальные.ЭлементЗатрат КАК ЭлементЗатрат
	|ИЗ
	|	Распределения КАК Распределение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыПриемники
	|		ПО Распределение.УзелПриемник = УзлыПриемники.Узел
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыНачальные
	|		ПО Распределение.УзелНачальный = УзлыНачальные.Узел
	|			И (НЕ УзлыНачальные.СтатьяЗатрат ЕСТЬ NULL)
	|ГДЕ
	|	Распределение.Остаток
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыНачальные.ЭлементЗатрат,
	|	УзлыНачальные.СтатьяЗатрат,
	|	УзлыПриемники.НаправлениеДеятельности,
	|	УзлыПриемники.Подразделение,
	|	УзлыПриемники.Субконто3,
	|	УзлыПриемники.Субконто2,
	|	УзлыПриемники.Субконто1,
	|	УзлыПриемники.СчетИБ";

КонецФункции

Функция ТекстЗапроса_ТаблицаПроводкиТУ(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить(ИмяРегистраУчета(Реквизиты.ЭтоМСФО), НомераТаблиц.Количество());	
	
	//Если в СубконтоДт тип СтатьяЗатрат или ЭлементЗатрат, то брать из начального узла, если нет из узла приемника
	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Сценарий КАК Сценарий,
	|	&ВидОперации КАК ВидОперации,
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто1, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт1,
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто2, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт2,
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто3, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт3,
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто1, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт1,
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто2, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт2,
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто3, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт3,
	|	СУММА(Распределение.Сумма) КАК СуммаВВалютеУчета,
	|	СУММА(Распределение.СуммаВО) КАК СуммаВВалютеОтчетности,
	|	УзлыПриемники.Счет КАК СчетДт,
	|	МАКСИМУМ(&Содержание) КАК Содержание,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 1
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто1 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто1
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 1
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто1 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто1
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 2
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто2 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто2
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 2
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто2 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто2
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 3
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто3 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто3
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 3
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто3 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто3
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	УзлыПриемники.Подразделение КАК ПодразделениеДт,
	|	УзлыПриемники.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	УзлыИсточники.Счет КАК СчетКт,
	|	УзлыИсточники.Субконто1 КАК СубконтоКт1,
	|	УзлыИсточники.Субконто2 КАК СубконтоКт2,
	|	УзлыИсточники.Субконто3 КАК СубконтоКт3,
	|	УзлыИсточники.Подразделение КАК ПодразделениеКт,
	|	УзлыИсточники.НаправлениеДеятельности КАК НаправлениеДеятельностиКт
	|ИЗ
	|	Распределения КАК Распределение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыПриемники
	|		ПО Распределение.УзелПриемник = УзлыПриемники.Узел
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыИсточники
	|		ПО Распределение.УзелИсточник = УзлыИсточники.Узел
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыНачальные
	|		ПО Распределение.УзелНачальный = УзлыНачальные.Узел
	|			И (УзлыНачальные.ЕстьАналитикаЗатрат)
	|			И (УзлыПриемники.ЕстьАналитикаЗатрат)
	|ГДЕ
	|	НЕ Распределение.Остаток
	|
	|СГРУППИРОВАТЬ ПО
	|	УзлыИсточники.Субконто1,
	|	УзлыИсточники.Субконто2,
	|	УзлыИсточники.Субконто3,
	|	УзлыИсточники.Счет,
	|	УзлыИсточники.Подразделение,
	|	УзлыИсточники.НаправлениеДеятельности,
	|	УзлыПриемники.Счет,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 1
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто1 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто1
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 1
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто1 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто1
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 2
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто2 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто2
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 2
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто2 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто2
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 3
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.СтатьяЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто3 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &СтатьяЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто3
	|					КОНЕЦ)
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 3
	|			ТОГДА ЕСТЬNULL(УзлыНачальные.ЭлементЗатрат, ВЫБОР
	|						КОГДА УзлыПриемники.Субконто3 = НЕОПРЕДЕЛЕНО
	|							ТОГДА &ЭлементЗатратПоУмолчанию
	|						ИНАЧЕ УзлыПриемники.Субконто3
	|					КОНЕЦ)
	|		ИНАЧЕ УзлыПриемники.Субконто3
	|	КОНЕЦ,
	|	УзлыПриемники.Подразделение,
	|	УзлыПриемники.НаправлениеДеятельности,
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто1, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)),
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто2, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)),
	|	ЕСТЬNULL(УзлыПриемники.ВидСубконто3, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)),
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто1, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)),
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто2, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)),
	|	ЕСТЬNULL(УзлыИсточники.ВидСубконто3, ЗНАЧЕНИЕ(ПланВИдовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка))";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Содержание", ТекстСодержания(Реквизиты));
	
	Если Не Реквизиты.ЭтоМСФО Тогда	
		ТекстЗапроса = МСФОВызовСервераУХ.ПреобразоватьПолучениеРСБУ(ТекстЗапроса);	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ИмяРегистраУчета(ЭтоМСФО)
	Возврат ?(ЭтоМСФО, "МСФО", "Хозрасчетный");	
КонецФункции

Функция ТекстЗапроса_ТаблицаПроводки(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПроводки", НомераТаблиц.Количество());

	Возврат 
	"ВЫБРАТЬ
	|	Распределение.Сумма КАК СуммаВФункциональнойВалюте,
	|	Распределение.СуммаВО КАК СуммаВВалютеОтчетности,
	|	0 КАК Количество,
	|	УзлыПриемники.СчетИБ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА УзлыНачальные.СтатьяЗатрат ЕСТЬ NULL
	|			ТОГДА УзлыПриемники.Субконто1
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 1
	|			ТОГДА УзлыНачальные.СтатьяЗатрат
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 1
	|			ТОГДА УзлыНачальные.ЭлементЗатрат
	|		ИНАЧЕ УзлыПриемники.Субконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА УзлыНачальные.СтатьяЗатрат ЕСТЬ NULL
	|			ТОГДА УзлыПриемники.Субконто2
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 2
	|			ТОГДА УзлыНачальные.СтатьяЗатрат
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 2
	|			ТОГДА УзлыНачальные.ЭлементЗатрат
	|		ИНАЧЕ УзлыПриемники.Субконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА УзлыНачальные.СтатьяЗатрат ЕСТЬ NULL
	|			ТОГДА УзлыПриемники.Субконто3
	|		КОГДА УзлыПриемники.НомерСубконтоСтатьиЗатрат = 3
	|			ТОГДА УзлыНачальные.СтатьяЗатрат
	|		КОГДА УзлыПриемники.НомерСубконтоЭлементыЗатрат = 3
	|			ТОГДА УзлыНачальные.ЭлементЗатрат
	|		ИНАЧЕ УзлыПриемники.Субконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	УзлыПриемники.Подразделение КАК ПодразделениеДт,
	|	УзлыПриемники.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	УзлыИсточники.СчетИБ КАК СчетКт,
	|	УзлыИсточники.Субконто1 КАК СубконтоКт1,
	|	УзлыИсточники.Субконто2 КАК СубконтоКт2,
	|	УзлыИсточники.Субконто3 КАК СубконтоКт3,
	|	УзлыИсточники.Подразделение КАК ПодразделениеКт,
	|	УзлыИсточники.НаправлениеДеятельности КАК НаправлениеДеятельностиКт
	|ИЗ
	|	Распределения КАК Распределение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыПриемники
	|		ПО Распределение.УзелПриемник = УзлыПриемники.Узел
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыИсточники
	|		ПО Распределение.УзелИсточник = УзлыИсточники.Узел
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУзлыИндексПоУзел КАК УзлыНачальные
	|		ПО Распределение.УзелНачальный = УзлыНачальные.Узел
	|			И (НЕ УзлыНачальные.СтатьяЗатрат ЕСТЬ NULL)
	|ГДЕ
	|	НЕ Распределение.Остаток";
	
КонецФункции

Функция ТекстСодержания(Реквизиты)

	Уточнение = ?(Реквизиты.РежимОтладки, " (этап "" + Распределение.НомерРаспределения + "")", "");
	Язык = ОбщегоНазначения.КодОсновногоЯзыка();
	
	НЗП 	= НСтр("ru = 'Закрытие счета затрат'", 					Язык) + Уточнение;
	МПЗ 	= НСтр("ru = 'Корректировка стоимости запасов'", 		Язык) + Уточнение;
	АВНА 	= НСтр("ru = 'Корректировка начисленной амортизации'",	Язык) + Уточнение;
	ВНА 	= НСтр("ru = 'Корректировка стоимости ВНА'", 			Язык) + Уточнение;
	
	Возврат
	СтрШаблон(
	"ВЫБОР 
	|	КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""НЗП"" 
	|		ТОГДА ""%1"" 
	|	КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""МПЗ"" 
	|		ТОГДА ""%2"" 
	|	КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""АВНА"" 
	|		ТОГДА ""%3""
	|	КОГДА УзлыИсточники.ТипСчетаЗакрытия = ""ВНА"" 
	|		ТОГДА ""%4""
	|	ИНАЧЕ NULL 
	|КОНЕЦ", НЗП, МПЗ, АВНА, ВНА);

КонецФункции

#КонецОбласти

#Область Общее

Функция ПолучитьЧислоРаспределений(РезультатЗапроса, НомерЗапроса = 0)
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции

Функция ТекстЗапроса_УничтожитьТаблицу(НомераТаблиц, ИмяТаблицы = "Обороты", УничтожитьТаблицы = Истина)
	
	Если Не УничтожитьТаблицы Тогда
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("УНИЧТОЖИТЬ_" + ИмяТаблицы, НомераТаблиц.Количество());
	
	Возврат	"УНИЧТОЖИТЬ " + ИмяТаблицы;

КонецФункции

Функция ФормулаДляЗапроса(ФормулаНаглядно, ШаблонПоля)
	
	СкобкиПоля = СтрРазделить(ШаблонПоля, "Поле", Ложь);
	Возврат	
	СтрЗаменить(
		СтрЗаменить(ФормулаНаглядно, "[", СкобкиПоля[0]),
		"]", 
		СкобкиПоля[1]
	);
	
КонецФункции

Функция ПреобразоватьФормулу(Знач ФормулаНаглядно = "(Сумма_ДО + Сумма_МСФО_КО) / Кол_Э_НСБУ_СНД", ЭлиминирующаяОрганизация = Ложь)

	Периметры = Новый Структура("Э, _", "т.Организация В (&Элиминирующие)", "");
	
	Разделы = Новый Структура("НСБУ, МСФО, _", "НЕ т.РазделМСФО", "т.РазделМСФО", "");

	Ресурсы = Новый Структура("Сумма_ДО, Сумма_КО, Сумма_СНД, Кол_ДО, Кол_КО, Кол_СНД, Доля_БС", 
							"СуммаДО", "СуммаКО", "СуммаСНД", 
							"КоличествоДО", "КоличествоКО", "КоличествоСНД",
							"ДоляБС");
	
	ЗаменаСумма = "СУММА(%1)";
	ЗаменаУсловие = "СУММА(ВЫБОР КОГДА %1 ТОГДА %2 ИНАЧЕ 0 КОНЕЦ)";
	ЗаменаУсловиеМакс = "МАКСИМУМ(ВЫБОР КОГДА %1 ТОГДА %2 ИНАЧЕ 0 КОНЕЦ)";
	
	Для каждого П Из Периметры Цикл
		Для каждого Р Из Разделы Цикл
			
			УсловиеР = ?(П.Значение = "", Р.Значение, ?(Р.Значение = "", П.Значение, П.Значение + " И " + Р.Значение));			
			УсловиеПоиск = ?(П.Ключ = "_", "", "_" + П.Ключ) + ?(Р.Ключ = "_", "", "_" + Р.Ключ) + "_";
			
			Для каждого Ресурс Из Ресурсы Цикл
				
				Если УсловиеР = "" Тогда
					Замена = СтрШаблон(ЗаменаСумма, "т." + Ресурс.Значение);
					ФормулаНаглядно = СтрЗаменить(ФормулаНаглядно, Ресурс.Ключ, Замена);					
				Иначе 
					
					Поиск = СтрЗаменить(Ресурс.Ключ, "_", УсловиеПоиск);
					Если Ресурс.Ключ = "Доля_БС" Тогда
					    Замена = СтрШаблон(ЗаменаУсловиеМакс, УсловиеР, "т." + Ресурс.Значение);
					Иначе	
						Замена = СтрШаблон(ЗаменаУсловие, УсловиеР, "т." + Ресурс.Значение);
					КонецЕсли;
					
					ФормулаНаглядно = СтрЗаменить(ФормулаНаглядно, Поиск, Замена);					
				
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ФормулаНаглядно;
	
КонецФункции

Функция ФормулаПоТипам(ТипыЗакрытия)

	Условия = Новый Массив;
	ШаблонКогда =
	"			КОГДА ""%1""
	|				ТОГДА 
	|%2";
	
	Для каждого т Из ТипыЗакрытия Цикл
		Если ЗначениеЗаполнено(т.Значение) Тогда
			Условия.Добавить(СтрШаблон(ШаблонКогда, т.Ключ, т.Значение));
		КонецЕсли;
	КонецЦикла;
	
	ТекстРезультат =
	"ВЫБОР МАКСИМУМ(т.ТипСчетаЗакрытия)
	|	%1
	|			ИНАЧЕ 0
	|		КОНЕЦ";
	
	Если Условия.Количество() Тогда
	    Возврат	СтрШаблон(ТекстРезультат, СтрСоединить(Условия, Символы.ПС));
	Иначе		
		Возврат	"0";
	КонецЕсли;
	
КонецФункции

Функция ВыборКогда(Знач ТекстТогда = "100", Знач ТекстКогда = "ИСТИНА", Элиминация = Ложь)

	Если СтрНайти(ТекстКогда, "&Делитель") > 0 Тогда
		ТекстКогда = СтрЗаменить(ТекстКогда, "&Делитель", СтрРазделить(ТекстТогда, "/")[1] + " <> 0");
	КонецЕсли;
	
	ТекстКогда = СтрЗаменить(ТекстКогда, "&Формула", ТекстТогда);
	
	ШаблонЗапроса = 
	"ВЫБОР 
	|	КОГДА %1
	|		ТОГДА %2
	|	ИНАЧЕ 0 
	|КОНЕЦ";
	
	Возврат СтрШаблон(ШаблонЗапроса, ТекстКогда, ТекстТогда);	
	
КонецФункции

#КонецОбласти

Функция ТекстЗапроса_БазаРаспределенияПриемника(РегистрБухгалтерииБД) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	т.СчетДт КАК Счет,
	|	т.НаправлениеДеятельностиДт КАК НаправлениеДеятельности,
	|	т.ПодразделениеДт КАК Подразделение,
	|	т.СубконтоДт1 КАК Субконто1,
	|	т.СубконтоДт2 КАК Субконто2,
	|	т.СубконтоДт3 КАК Субконто3,
	|	т.СуммаВВалютеУчетаОборот КАК Доля
	|ПОМЕСТИТЬ втБазаРаспределенияПриемника
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В
	|				(ВЫБРАТЬ
	|					н.СчетИсточник.СчетСсылка
	|				ИЗ
	|					Справочник.НастройкиРаспределенияЗатратМСФО КАК н
	|				ГДЕ
	|					н.Ссылка = &Правило),
	|			,
	|			Организация В (&ОрганизацииМПЗ)
	|				И Сценарий = &Сценарий
	|				И &УсловиеВидОперацииТрансляция) КАК т";
	
	Если РегистрБухгалтерииБД.Измерения.Найти("НаправлениеДеятельности", "Имя") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "т.НаправлениеДеятельностиДт", "NULL");
	КонецЕсли;
	
	СтрРесурс = РегистрБухгалтерииБД.Ресурсы.Найти(Истина, "Балансовый");
	Если ЗначениеЗаполнено(СтрРесурс) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СуммаВВалютеУчета", СтрРесурс.Имя);
	КонецЕсли;
	
	Если РегистрБухгалтерииБД.Измерения.Найти("ВидОперации", "Имя") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидОперацииТрансляция", "НЕ Организация.ЭлиминирующаяОрганизация");
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидОперацииТрансляция", "ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция))");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейсБСП

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область Обновление

Процедура ОбновитьТипыЗакрытия(Параметры = Неопределено) Экспорт 

	Выборка = Документы.РасчетСебестоимости.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЗакрытиеЗатрат Или Выборка.КорректировкиАмортизации Или Выборка.КорректировкиЗапасов Тогда
			Продолжить;//уже обновлен
		КонецЕсли;
		
		Объект = Выборка.ПолучитьОбъект();
		Объект.КорректировкиЗапасов = Истина;
		Объект.ЗакрытиеЗатрат = Истина;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
