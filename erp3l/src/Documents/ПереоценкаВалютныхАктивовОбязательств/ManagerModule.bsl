
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ДатаНачала, ДатаОкончания", "ПериодОтчета", Отказ);
	Реквизиты.Вставить("ЕстьСуммаВВалютеОтчетности", 	Истина);
	Реквизиты.Вставить("ВидОперацииИзПроводок", 		Истина);
	Реквизиты.Вставить("ВидОперации", 					ПредопределенноеЗначение("Справочник.ВидыОпераций._02ПереоценкаВалютныхАктивовИОбязательств"));
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПроводок", ПолучитьТаблицуПроводок(Реквизиты, Отказ));	
	
КонецФункции

Функция ТекстЗапроса_КурсыВалют(НомераТаблиц)

	НомераТаблиц.Вставить("КурсыВалют", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	т.Валюта КАК Валюта,
	|	т.Курс КАК Курс,
	|	т.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта";
	
КонецФункции

Функция ТекстЗапроса_Курсы(НомераТаблиц)
	
	НомераТаблиц.Вставить("Курсы", НомераТаблиц.Количество());

	Возврат "ВЫБРАТЬ
	|	Валюты.Ссылка КАК ВалютаФВВО,
	|	Валюты.Ссылка = &ФункциональнаяВалюта КАК ЭтоФВ,
	|	Валюты.Ссылка = &ВалютаПредставления КАК ЭтоВО,
	|	ЕСТЬNULL(втФВВО.Курс, 1) КАК КурсФВВО,
	|	ЕСТЬNULL(втФВВО.Кратность, 1) КАК КратностьФВВО,
	|	втВалютаСчета.Валюта КАК ВалютаСчета,
	|	втВалютаСчета.Курс КАК КурсСчета,
	|	втВалютаСчета.Кратность КАК КратностьСчета
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК втФВВО
	|		ПО Валюты.Ссылка = втФВВО.Валюта,
	|	втКурсыВалют КАК втВалютаСчета
	|ГДЕ
	|	Валюты.Ссылка В (&ФункциональнаяВалюта, &ВалютаПредставления)
	|";

КонецФункции

Функция ТекстЗапроса_Счета(НомераТаблиц)
	
	НомераТаблиц.Вставить("Счета", НомераТаблиц.Количество());

	Возврат 
	"ВЫБРАТЬ
	|	СчетаБД.СчетСсылка КАК Счет,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 1
	|				ТОГДА НЕ СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСубконто1,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 2
	|				ТОГДА НЕ СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСубконто2,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаБДВидыСубконто.Номер = 3
	|				ТОГДА НЕ СчетаБДВидыСубконто.ТолькоОбороты
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСубконто3,
	|	МАКСИМУМ(СчетаБД.Ссылка) КАК СчетБД,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаПрибыли) КАК СчетУчетаПрибыли,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаПрибылиСубконто1) КАК СчетУчетаПрибылиСубконто1,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаПрибылиСубконто2) КАК СчетУчетаПрибылиСубконто2,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаПрибылиСубконто3) КАК СчетУчетаПрибылиСубконто3,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаУбытка) КАК СчетУчетаУбытка,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаУбыткаСубконто1) КАК СчетУчетаУбыткаСубконто1,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаУбыткаСубконто2) КАК СчетУчетаУбыткаСубконто2,
	|	МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаУбыткаСубконто3) КАК СчетУчетаУбыткаСубконто3,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.ВидОперации) = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций._02ПереоценкаВалютныхАктивовИОбязательств)
	|		ИНАЧЕ МАКСИМУМ(СчетаБД.СчетаУчетаКурсовыхРазниц.ВидОперации)
	|	КОНЕЦ КАК ВидОперации
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК СчетаБДВидыСубконто
	|		ПО СчетаБД.Ссылка = СчетаБДВидыСубконто.Ссылка
	|ГДЕ
	|	СчетаБД.Валютный
	|	И СчетаБД.СчетаУчетаКурсовыхРазниц <> ЗНАЧЕНИЕ(Справочник.СчетаУчетаКурсовыхРазниц.ПустаяСсылка)
	|	И СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаПрибыли <> ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|	И СчетаБД.СчетаУчетаКурсовыхРазниц.СчетУчетаУбытка <> ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаБД.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

КонецФункции

Функция ТекстЗапроса_ОстаткиТУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("Остатки", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	Остатки.Субконто1 КАК Субконто1,
	|	Остатки.Субконто2 КАК Субконто2,
	|	Остатки.Субконто3 КАК Субконто3,
	|	СУММА(Остатки.СуммаВВалютеУчета) КАК СуммаВВалютеУчета,
	|	СУММА(Остатки.СуммаВВалютеОтчетности) КАК СуммаВВалютеОтчетности,
	|	СУММА(Остатки.СуммаВВалюте) КАК СуммаВВалюте,
	|	Остатки.Валюта КАК Валюта,
	|	Остатки.Счет КАК Счет
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		втОстатки.Субконто1 КАК Субконто1,
	|		втОстатки.Субконто2 КАК Субконто2,
	|		втОстатки.Субконто3 КАК Субконто3,
	|		втОстатки.СуммаВВалютеУчетаОстаток КАК СуммаВВалютеУчета,
	|		втОстатки.СуммаВВалютеОтчетностиОстаток КАК СуммаВВалютеОтчетности,
	|		втОстатки.СуммаВВалютеОстаток КАК СуммаВВалюте,
	|		втОстатки.Валюта КАК Валюта,
	|		втОстатки.Счет КАК Счет
	|	ИЗ
	|		РегистрБухгалтерии.МСФО.Остатки(
	|				&Дата,
	|				Счет В
	|					(ВЫБРАТЬ
	|						т.Счет
	|					ИЗ
	|						втСчета КАК т),
	|				,
	|				Сценарий = &Сценарий
	|					И Организация = &Организация
	|					И НЕ ВидОперации В (ЗНАЧЕНИЕ(Справочник.ВидыОпераций._02ПереоценкаВалютныхАктивовИОбязательств))) КАК втОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втОстатки.Субконто1,
	|		втОстатки.Субконто2,
	|		втОстатки.Субконто3,
	|		втОстатки.СуммаВВалютеУчетаОстаток,
	|		втОстатки.СуммаВВалютеОтчетностиОстаток,
	|		втОстатки.СуммаВВалютеОстаток,
	|		втОстатки.Валюта,
	|		втОстатки.Счет
	|	ИЗ
	|		РегистрБухгалтерии.МСФО.Остатки(
	|				&ДатаНачалаПериода,
	|				Счет В
	|					(ВЫБРАТЬ
	|						т.Счет
	|					ИЗ
	|						втСчета КАК т),
	|				,
	|				Сценарий = &Сценарий
	|					И Организация = &Организация
	|					И ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций._02ПереоценкаВалютныхАктивовИОбязательств)) КАК втОстатки) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Субконто1,
	|	Остатки.Субконто3,
	|	Остатки.Валюта,
	|	Остатки.Счет,
	|	Остатки.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Валюта,
	|	Остатки.Счет";

КонецФункции

#Область ОстаткиТК

Функция ТекстЗапроса_ВЗП(НомераТаблиц)

	Возврат 
	"ВЫБРАТЬ
	|	т.Ссылка КАК Версия,
	|	т.Регистратор КАК Регистратор,
	|	т.ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция) КАК РазделМСФО,
	|	т.Организация КАК Организация
	|ПОМЕСТИТЬ Версии
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК т
	|ГДЕ
	|	т.Сценарий = &Сценарий
	|	И т.ВидОтчета = &ВидОтчетаАОСВ
	|	И т.Организация В (&Организация)
	|	И т.ПериодОтчета = &ПериодОтчета
	|	И т.Валюта = &ФункциональнаяВалюта
	|	И НЕ т.Регистратор В (&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.Ссылка,
	|	РазделМСФО";	

КонецФункции

Функция ТекстЗапроса_ПоказателиОтчетов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПоказателиОтчета_СКД", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	т.ПоказательОтчета КАК ПоказательОтчета,
	|	т.СчетБД.СчетСсылка КАК Счет,
	|	ВЫБОР ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики1
	|			ТОГДА 0
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики2
	|			ТОГДА 1
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики3
	|			ТОГДА 2
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики4
	|			ТОГДА 3
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики5
	|			ТОГДА 4
	|		КОГДА т.ГруппаРаскрытия.ВидАналитики6
	|			ТОГДА 5
	|		ИНАЧЕ 6
	|	КОНЕЦ КАК НомерРегистра,
	|	ВЫБОР
	|		КОГДА т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СКД))
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ПоказателиОтчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		т.Ссылка КАК ПоказательОтчета,
	|		т.СчетБД КАК СчетБД,
	|		т.ВидИтогаПоСчету КАК ВидИтогаПоСчету,
	|		т.ГруппаРаскрытия КАК ГруппаРаскрытия
	|	ИЗ
	|		Справочник.ПоказателиОтчетов КАК т
	|	ГДЕ
	|		т.Владелец = &ВидОтчетаАОСВ
	|		И т.ВидИтогаПоСчету В (ЗНАЧЕНИЕ(Перечисление.ВидыБухгалтерскихИтогов.СКД))
	|		И т.СчетБД В
	|				(ВЫБРАТЬ
	|					т.СчетБД
	|				ИЗ
	|					втСчета КАК т)) КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоказательОтчета,
	|	НомерРегистра"
	
КонецФункции

Функция ТекстЗапроса_ЗначенияПоказателей(НомераТаблиц)

	НомераТаблиц.Вставить("ЗначенияПоказателей", НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	т.АналитикаВалюта КАК Валюта,
	|	т.ЗначениеВалюта КАК СуммаВВалюте,
	|	т.Значение * п.Коэффициент КАК СуммаВВалютеУчета,
	|	0 КАК СуммаВВалютеОтчетности,
	|	п.Счет КАК Счет,
	|	т.Аналитика1 КАК Субконто1,
	|	NULL КАК Субконто2,
	|	NULL КАК Субконто3,
	|	NULL КАК Субконто4,
	|	NULL КАК Субконто5,
	|	NULL КАК Субконто6
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов1 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.АналитикаВалюта,
	|	т.ЗначениеВалюта,
	|	т.Значение * п.Коэффициент,
	|	0,
	|	п.Счет,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов2 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 2)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.АналитикаВалюта,
	|	т.ЗначениеВалюта,
	|	т.Значение * п.Коэффициент,
	|	0,
	|	п.Счет,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов3 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 3)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.АналитикаВалюта,
	|	т.ЗначениеВалюта,
	|	т.Значение * п.Коэффициент,
	|	0,
	|	п.Счет,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов4 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 4)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.АналитикаВалюта,
	|	т.ЗначениеВалюта,
	|	т.Значение * п.Коэффициент,
	|	0,
	|	п.Счет,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	т.Аналитика5,
	|	NULL
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов5 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 5)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.АналитикаВалюта,
	|	т.ЗначениеВалюта,
	|	т.Значение * п.Коэффициент,
	|	0,
	|	п.Счет,
	|	т.Аналитика1,
	|	т.Аналитика2,
	|	т.Аналитика3,
	|	т.Аналитика4,
	|	т.Аналитика5,
	|	т.Аналитика6
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоказателиОтчета КАК п
	|		ПО т.Показатель = п.ПоказательОтчета
	|			И (п.НомерРегистра = 6)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Версии КАК Версии
	|		ПО т.Версия = Версии.Версия
	|ГДЕ
	|	НЕ т.ИтоговоеЗначение";

КонецФункции

#КонецОбласти

Функция ТекстЗапроса_ТаблицаПроводок(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВалютныеОстатки");
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Валюта
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ВалютаДт,
	|	0 КАК СуммаВВалютеДт,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетБД
	|		ИНАЧЕ втСчета.СчетУчетаУбытка
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто1
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто2
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто3
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА NULL
	|		ИНАЧЕ Остатки.Валюта
	|	КОНЕЦ КАК ВалютаКт,
	|	0 КАК СуммаВВалютеКт,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибыли
	|		ИНАЧЕ втСчета.СчетБД
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто1
	|		ИНАЧЕ Остатки.Субконто1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто2
	|		ИНАЧЕ Остатки.Субконто2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто3
	|		ИНАЧЕ Остатки.Субконто3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ВЫБОР
	|		КОГДА СУММА(Остатки.СуммаФВ) > 0
	|			ТОГДА СУММА(Остатки.СуммаФВ)
	|		ИНАЧЕ -СУММА(Остатки.СуммаФВ)
	|	КОНЕЦ КАК СуммаВФункциональнойВалюте,
	|	ВЫБОР
	|		КОГДА СУММА(Остатки.СуммаВО) > 0
	|			ТОГДА СУММА(Остатки.СуммаВО)
	|		ИНАЧЕ -СУММА(Остатки.СуммаВО)
	|	КОНЕЦ КАК СуммаВВалютеОтчетности,
	|	МАКСИМУМ(втСчета.ВидОперации) КАК ВидОперации,
	|	""Переоценка валютных активов"" КАК Комментарий
	|ИЗ
	|	(ВЫБРАТЬ
	|		втОстатки.Счет КАК СчетРБ,
	|		втКурсы.ВалютаФВВО КАК ВалютаФВВО,
	|		втОстатки.Валюта КАК Валюта,
	|		втОстатки.Субконто1 КАК Субконто1,
	|		втОстатки.Субконто2 КАК Субконто2,
	|		втОстатки.Субконто3 КАК Субконто3,
	|		ВЫБОР
	|			КОГДА втКурсы.ЭтоФВ
	|					И ЕСТЬNULL(втКурсы.КратностьСчета, 1) * ЕСТЬNULL(втКурсы.КурсФВВО, 1) <> 0
	|				ТОГДА втОстатки.СуммаВВалюте * ЕСТЬNULL(втКурсы.КурсСчета, 1) * ЕСТЬNULL(втКурсы.КратностьФВВО, 1) / (ЕСТЬNULL(втКурсы.КратностьСчета, 1) * ЕСТЬNULL(втКурсы.КурсФВВО, 1)) - втОстатки.СуммаВВалютеУчета
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаФВ,
	|		ВЫБОР
	|			КОГДА втКурсы.ЭтоВО
	|					И ЕСТЬNULL(втКурсы.КратностьСчета, 1) * ЕСТЬNULL(втКурсы.КурсФВВО, 1) <> 0
	|				ТОГДА втОстатки.СуммаВВалюте * ЕСТЬNULL(втКурсы.КурсСчета, 1) * ЕСТЬNULL(втКурсы.КратностьФВВО, 1) / (ЕСТЬNULL(втКурсы.КратностьСчета, 1) * ЕСТЬNULL(втКурсы.КурсФВВО, 1)) - втОстатки.СуммаВВалютеОтчетности
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаВО,
	|		втОстатки.СуммаВВалютеУчета КАК ОстатокФВ,
	|		втОстатки.СуммаВВалютеОтчетности КАК ОстатокВО,
	|		втОстатки.СуммаВВалюте КАК СуммаВВалюте
	|	ИЗ
	|		втОстатки КАК втОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ втКурсы КАК втКурсы
	|			ПО втОстатки.Валюта = втКурсы.ВалютаСчета) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчета КАК втСчета
	|		ПО Остатки.СчетРБ = втСчета.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Валюта
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетБД
	|		ИНАЧЕ втСчета.СчетУчетаУбытка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто1
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто2
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА Остатки.Субконто3
	|		ИНАЧЕ втСчета.СчетУчетаУбыткаСубконто3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА NULL
	|		ИНАЧЕ Остатки.Валюта
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибыли
	|		ИНАЧЕ втСчета.СчетБД
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто1
	|		ИНАЧЕ Остатки.Субконто1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто2
	|		ИНАЧЕ Остатки.Субконто2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаФВ > 0
	|				ИЛИ Остатки.СуммаФВ = 0
	|					И Остатки.СуммаВО > 0
	|			ТОГДА втСчета.СчетУчетаПрибылиСубконто3
	|		ИНАЧЕ Остатки.Субконто3
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	((ВЫРАЗИТЬ(СУММА(Остатки.СуммаФВ) КАК ЧИСЛО(18, 2))) <> 0
	|		ИЛИ (ВЫРАЗИТЬ(СУММА(Остатки.СуммаВО) КАК ЧИСЛО(18, 2))) <> 0)";

КонецФункции

Функция ПолучитьТаблицуПроводок(Реквизиты, Отказ = Ложь) Экспорт

	НомераТаблиц = Новый Структура; 
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_КурсыВалют(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_Курсы(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_Счета(НомераТаблиц));
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиТУ(НомераТаблиц));
	Иначе 
		ТекстЗапроса.Добавить(ТекстЗапроса_ВЗП(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ПоказателиОтчетов(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ЗначенияПоказателей(НомераТаблиц));
	КонецЕсли;
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводок(НомераТаблиц));
	
	Запрос = Новый Запрос(СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()));
		
	Граница = Новый Граница(КонецДня(Реквизиты.ДатаОкончания), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата", 					Граница);
	Запрос.УстановитьПараметр("ДатаНачалаПериода",		Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ПериодОтчета",			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий", 				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Ссылка", 				Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ВидОтчетаАОСВ", 			Справочники.ВидыОтчетов.ПолучитьВидОтчетаОСВ(Реквизиты.ПланСчетовМСФО));
	Запрос.УстановитьПараметр("ФункциональнаяВалюта",	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаПредставления",	Реквизиты.ВалютаПредставления);
			
	Возврат Запрос.Выполнить().Выгрузить();		
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ИнициализироватьДокумент(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт
	
	МСФОУХ.ОбработкаЗаполнения(ДокументОбъект, ДанныеЗаполнения);
	
	Если Не ДокументОбъект.ПериодОтчета.Пустая() Тогда
		ДокументОбъект.Дата = КонецДня(ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ДокументОбъект.ПериодОтчета, "ДатаОкончания"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли