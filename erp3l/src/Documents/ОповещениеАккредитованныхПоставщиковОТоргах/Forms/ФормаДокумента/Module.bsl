
#Область ОбработкаОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) 
			И НЕ ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Оповещение аккредитованных поставщиков должно создаваться на основании закупочной процедуры.'");
		Сообщение.Сообщить();
		возврат;
	КонецЕсли;
	УстановитьФлагКвалификации();
	УстановитьФлагЗакрытойЗакупки();
	ЗаполнитьДопПоляТаблицыПоставщики();
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДопПоляТаблицыПоставщики();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Повторно считываем поля отсутствующие в ТЧ Поставщики
	// и обнуляющиеся после сериализации/десериализации.
	ЗаполнитьДопПоляТаблицыПоставщики();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьКвалификацииУчастников" Тогда
		Если Параметр <> Объект.ЗакупочнаяПроцедура
				ИЛИ Источник <> Объект.Ссылка Тогда
			Возврат;
		КонецЕсли;
		ЗаполнитьДопПоляТаблицыПоставщики();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы

&НаКлиенте
Процедура ПоставщикиПоставщикПриИзменении(Элемент)
	СтрокаПоставщика = Элементы.Поставщики.ТекущиеДанные;
	Если СтрокаПоставщика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСтрокуПоставщикаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗакупочнаяПроцедураПриИзменении(Элемент)
	ЗакупочнаяПроцедураПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАккредитованнымиПоставщиками(Команда)
	ЗаполнитьАккредитованнымиПоставщикамиНаСервере();
	Элементы.Поставщики.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАккредитованнымиПоставщикамиПоТоварнойКатегории(Команда)
	ЗаполнитьАккредитованнымиПоставщикамиНаСервере(Истина);
	Элементы.Поставщики.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАккредитованнымиПоставщикамиПоЭТП(Команда)
	ЗаполнитьАккредитованнымиПоставщикамиНаСервере(, Истина);
	Элементы.Поставщики.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыКвалификации(Команда)
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Документ необходимо сохранить, прежде чем создавать подчиненные документы.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнена закупочная процедура.'");
		Сообщение.Поле = "ЗакупочнаяПроцедура";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
 	Если Элементы.Поставщики.ВыделенныеСтроки.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Нет выделенных строк.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СоздатьДокументыКвалификацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЭтоКвалификация И Поле.Имя = "ПоставщикиКвалификацияПоставщика" Тогда
		ТекДанные = Элементы.Поставщики.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Если ЗначениеЗаполнено(ТекДанные.КвалификацияПоставщика) Тогда
				ДопПараметры = Новый Структура("Ключ", ТекДанные.КвалификацияПоставщика);
			Иначе
				ДопПараметры = Новый Структура(
					"ЗначенияЗаполнения",
					Новый Структура("ЗакупочнаяПроцедура", Объект.ЗакупочнаяПроцедура));
				Если ЗначениеЗаполнено(ТекДанные.АнкетаПоставщика) Тогда
					ДопПараметры.ЗначенияЗаполнения.Вставить(
						"АнкетаПоставщика", ТекДанные.АнкетаПоставщика);
				КонецЕсли;
			КонецЕсли;
			ОткрытьФорму("Документ.КвалификацияПоставщика.ФормаОбъекта", ДопПараметры, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиенте
Процедура РазослатьОповещения(Команда)
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Необходимо записать документ перед отправкой оповещений.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	РазослатьОповещенияНаСервере();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервере
Процедура ЗакупочнаяПроцедураПриИзмененииНаСервере()
	УстановитьФлагКвалификации();
	УстановитьФлагЗакрытойЗакупки();
	ЗаполнитьАккредитованнымиПоставщикамиНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАккредитованнымиПоставщикамиНаСервере(ОтбиратьПоТоварнойКатегории = Ложь, ОтбиратьПоЭТП = Ложь)
	Объект.Поставщики.Очистить();
	Если ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) Тогда
		ТЗПоставщиков =	АккредитацияПоставщиковУХ.ПолучитьАккредитованныхПоставщиковЗакупки(Объект.ЗакупочнаяПроцедура, ОтбиратьПоТоварнойКатегории, ОтбиратьПоЭТП);
		ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначенийОтсутствующие(ТЗПоставщиков, Объект.Поставщики, "АнкетаПоставщика");
	КонецЕсли;
	ЗаполнитьДопПоляТаблицыПоставщики();
КонецПроцедуры

&НаСервере
Процедура УстановитьФлагКвалификации()
	Если ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) Тогда
		ЭтоКвалификация = Объект.ЗакупочнаяПроцедура.ТребуетсяКвалификационныйОтбор;
	Иначе
		ЭтоКвалификация = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьФлагЗакрытойЗакупки()
	Если ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) Тогда
		ЭтоЗакрытаяЗакупка = Объект.ЗакупочнаяПроцедура.ЗакрытаяЗакупка;
	Иначе
		ЭтоЗакрытаяЗакупка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыКвалификацииНаСервере()
	АккредитацияПоставщиковУХ.СоздатьКвалификацииПоПоставщикамЗакупки(
		Объект.ЗакупочнаяПроцедура,
		ПолучитьМассивВыделенныхАнкетПоставщиков());
	ЗаполнитьДопПоляТаблицыПоставщики();
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивВыделенныхАнкетПоставщиков()
	ЭлементПоставщики = Элементы.Поставщики.ВыделенныеСтроки;
	ТаблицаПоставщики = Объект.Поставщики;
	Результат = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ЭлементПоставщики Цикл
		АнкетаПоставщика = ТаблицаПоставщики.НайтиПоИдентификатору(
			ИдентификаторСтроки).АнкетаПоставщика;
		Если ЗначениеЗаполнено(АнкетаПоставщика) Тогда
			Результат.Добавить(АнкетаПоставщика);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьДопПоляТаблицыПоставщики()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПоставщиков.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПоставщиков.АнкетаПоставщика КАК АнкетаПоставщика,
		|	ТаблицаПоставщиков.АдресЭП КАК АдресЭП,
		|	ТаблицаПоставщиков.Аккредитован КАК Аккредитован,
		|	ТаблицаПоставщиков.ОповещениеОтправлено КАК ОповещениеОтправлено
		|ПОМЕСТИТЬ ТаблицаПоставщиков
		|ИЗ
		|	&ТЗПоставщики КАК ТаблицаПоставщиков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПоставщиков.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПоставщиков.АнкетаПоставщика КАК АнкетаПоставщика,
		|	ТаблицаПоставщиков.АдресЭП КАК АдресЭП,
		|	ТаблицаПоставщиков.Аккредитован КАК Аккредитован,
		|	МАКСИМУМ(КвалификацияПоставщика.Ссылка) КАК КвалификацияПоставщика,
		|	ТаблицаПоставщиков.ОповещениеОтправлено КАК ОповещениеОтправлено
		|ПОМЕСТИТЬ ТаблицаСгруппирована
		|ИЗ
		|	ТаблицаПоставщиков КАК ТаблицаПоставщиков
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КвалификацияПоставщика КАК КвалификацияПоставщика
		|		ПО ТаблицаПоставщиков.АнкетаПоставщика = КвалификацияПоставщика.АнкетаПоставщика
		|			И (КвалификацияПоставщика.ЗакупочнаяПроцедура = &ЗакупочнаяПроцедура)
		|			И (КвалификацияПоставщика.Организация = КвалификацияПоставщика.ЗакупочнаяПроцедура.ОрганизаторЗакупки)
		|			И (НЕ КвалификацияПоставщика.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПоставщиков.АдресЭП,
		|	ТаблицаПоставщиков.АнкетаПоставщика,
		|	ТаблицаПоставщиков.Аккредитован,
		|	ТаблицаПоставщиков.НомерСтроки,
		|	ТаблицаПоставщиков.ОповещениеОтправлено
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСгруппирована.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСгруппирована.АнкетаПоставщика КАК АнкетаПоставщика,
		|	ТаблицаСгруппирована.АдресЭП КАК АдресЭП,
		|	ТаблицаСгруппирована.Аккредитован КАК Аккредитован,
		|	ТаблицаСгруппирована.КвалификацияПоставщика КАК КвалификацияПоставщика,
		|	ТаблицаСгруппирована.КвалификацияПоставщика.Проведен
		|		И ТаблицаСгруппирована.КвалификацияПоставщика.РешениеПоДокументу = ЗНАЧЕНИЕ(Перечисление.ВидыРешенийПоДокументуКвалификации.ПоложительноеРешение) КАК Утвержден,
		|	ТаблицаСгруппирована.ОповещениеОтправлено КАК ОповещениеОтправлено
		|ИЗ
		|	ТаблицаСгруппирована КАК ТаблицаСгруппирована
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Запрос.УстановитьПараметр(
		"ЗакупочнаяПроцедура", 
		Объект.ЗакупочнаяПроцедура);
	Запрос.УстановитьПараметр(
		"ТЗПоставщики", 
		Объект.Поставщики.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Объект.Поставщики.Загрузить(
		РезультатЗапроса.Выгрузить(
			ОбходРезультатаЗапроса.Прямой));
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуПоставщикаНаСервере()
	ТекСтрока = Элементы.Поставщики.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПоставщика = Объект.Поставщики.НайтиПоИдентификатору(ТекСтрока);
	Если ЗначениеЗаполнено(СтрокаПоставщика.АнкетаПоставщика) Тогда
		СтрокаПоставщика.АдресЭП = СтрокаПоставщика.АнкетаПоставщика.АдресЭП;
	иначе
		СтрокаПоставщика.АдресЭП = "";
	КонецЕсли;
	
	КвалификацияПоставщика =
		АккредитацияПоставщиковВызовСервераУХ.ПолучитьДокументКвалификацииПоставщикаЗакупочнойПроцедуры(
			Объект.ЗакупочнаяПроцедура,
			СтрокаПоставщика.АнкетаПоставщика);
	Если ЗначениеЗаполнено(КвалификацияПоставщика) Тогда
		СтрокаПоставщика.КвалификацияПоставщика = КвалификацияПоставщика;
		СтрокаПоставщика.Утвержден = (КвалификацияПоставщика.РешениеПоДокументу = Перечисления.ВидыРешенийПоДокументуКвалификации.ПоложительноеРешение);
	Иначе
		СтрокаПоставщика.КвалификацияПоставщика = Неопределено;
		СтрокаПоставщика.Утвержден = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеФормы()
	Элементы.ПоставщикиСоздатьДокументыКвалификации.Видимость = ЭтоКвалификация;
	//Элементы.ДекорацияКвалификация.Видимость = ЭтоКвалификация;
	Элементы.ЗакупочнаяПроцедураТребуетсяКвалификационныйОтбор.Видимость = ЭтоКвалификация;
	Элементы.ПоставщикиКвалификацияПоставщика.Видимость = ЭтоКвалификация;
	Элементы.ПоставщикиУтвержден.Видимость = ЭтоКвалификация;
	// Оформление элементов закрытой закупки.
	Если ЗначениеЗаполнено(Объект.ЗакупочнаяПроцедура) Тогда
		ЭтоЗакрытаяЗаупка = Объект.ЗакупочнаяПроцедура.ЗакрытаяЗакупка;
		Элементы.Поставщики.ИзменятьСоставСтрок = НЕ ЭтоЗакрытаяЗакупка;
		Элементы.ДекорацияЗакрытаяЗакупка.Видимость = ЭтоЗакрытаяЗакупка;
	Иначе
		Элементы.Поставщики.ИзменятьСоставСтрок = Истина;
		Элементы.ДекорацияЗакрытаяЗакупка.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура РазослатьОповещенияНаСервере()
	мРезультатОтправки =
		АккредитацияПоставщиковУХ.ОповеститьПоставщиковОВозможностиУчаствоватьВЗакупке(
			Объект.Ссылка);
	ОбновитьОбъектИФормуПоРезультатамОтправкиОповещений(мРезультатОтправки);
КонецПроцедуры

&НаСервере
Процедура ОбновитьОбъектИФормуПоРезультатамОтправкиОповещений(мРезультатОтправки)
	мОписаниеУспехов = Новый Массив;
	Для Каждого ИндексСтроки Из мРезультатОтправки.Успехи Цикл
		СтрокаУспех = Объект.Поставщики[ИндексСтроки];
		СтрокаУспех.ОповещениеОтправлено = Истина;
		мОписаниеУспехов.Добавить(СтрШаблон(НСтр(
			"ru = 'Поставщику: %1, на адрес: %2.'"),
			СтрокаУспех.АнкетаПоставщика,
			СтрокаУспех.АдресЭП));
	КонецЦИкла;
	Если мОписаниеУспехов.Количество() > 0 Тогда
		ЦентрализованныеЗакупкиКлиентСерверУХ.СообщитьПользователюИзМассива(
			мОписаниеУспехов,
			СтрШаблон(НСтр("ru = 'Отправлено %1 приглашений поставщикам.'"),
				мОписаниеУспехов.Количество()));
	КонецЕсли;
	ЦентрализованныеЗакупкиКлиентСерверУХ.СообщитьОшибкиПользователю(
		мРезультатОтправки,
		НСтр("ru = 'Письма не были отправлены.'"));
КонецПроцедуры	

#КонецОбласти

