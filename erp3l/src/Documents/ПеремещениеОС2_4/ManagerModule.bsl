
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("ОбесценениеВНА");
	
	ПеремещениеОСЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда

		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
		
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаУзлыКомпонентыАмортизации(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСоставЕГДС(ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА
		ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		
		ПеремещениеОСЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ИзменениеПараметровОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ПеремещениеОСЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Перемещение ОС".
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//  	См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//  Порядок	- Число - Порядок команды.
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПеремещениеОС2_4) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПеремещениеОС2_4);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ПеремещениеОСЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Вычисляет значения свойств при изменении значений реквизитов.
// Используется в форме документа и при проверке заполнения.
//
// Параметры:
//  Объект					 - ДокументОбъект.ПринятиеКУчетуОС2_4, ДанныеФормыСтруктура - Данные документа.
//  ЕстьСобственныеОС        - Булево - Истина, если в документе есть собственные ОС.
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит новые значения свойств реквизитов:
//					*ИмяРеквизита	- Строка	- Имя реквизита объекта
//					*ИмяЭлемента	- Строка	- Имя элемента формы
//					*Свойство	- Строка	- Свойство, например, "Видимость", "ТолькоПросмотр"
//					*Значение	- Булево	- Значение свойства.
//
Функция ЗначенияСвойствЗависимыхРеквизитов(Объект, ЕстьСобственныеОС, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьСобственныеОС") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизации", 
			"НачислениеАмортизации", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходов", 
			"СтатьяРасходов", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходов", 
			"АналитикаРасходов", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ИзменяетсяОтражениеРасходовПоНалогу", 
			"ИзменяетсяОтражениеРасходовПоНалогу", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахожденияПолучателя", 
			"АдресМестонахожденияПолучателя", 
			"Видимость", 
			ЕстьСобственныеОС, 
			ПараметрыРеквизитовОбъекта);
		              
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислениеАмортизации") 
		ИЛИ ОбновитьВсе Тогда
		
		СтатьяРасходовДоступна = (Объект.НачислениеАмортизации = 1);
		АналитикаРасходовДоступна = (Объект.НачислениеАмортизации = 1);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходов", 
			"СтатьяРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ СтатьяРасходовДоступна, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходов", 
			"АналитикаРасходов", 
			"ТолькоПросмотр", 
			НЕ АналитикаРасходовДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ЭтоПеремещениеУзлов = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеУзлов;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛ",
			"МОЛ",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахожденияПолучателя",
			"АдресМестонахожденияПолучателя",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕГДСПолучатель",
			"ЕГДСПолучатель",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислениеАмортизации",
			"НачислениеАмортизации",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходов",
			"СтатьяРасходов",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходов",
			"АналитикаРасходов",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ИзменяетсяОтражениеРасходовПоНалогу",
			"ИзменяетсяОтражениеРасходовПоНалогу",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог",
			"СтатьяРасходовНалог",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог",
			"АналитикаРасходовНалог",
			"Видимость",
			Не ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ОсновноеСредствоВладелец",
			"ОСОсновноеСредствоВладелец",
			"Видимость",
			ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ОсновноеСредствоВладелецТекущее",
			"ОСОсновноеСредствоВладелецТекущее",
			"Видимость",
			ЭтоПеремещениеУзлов,
			ПараметрыРеквизитовОбъекта);
		
		Если ЭтоПеремещениеУзлов Тогда
			ЗаголовокОсновногоСредства = НСтр("ru = 'ОС-узел';
												|en = 'Fixed asset sub-asset'");
		Иначе
			ЗаголовокОсновногоСредства = НСтр("ru = 'Основное средство';
												|en = 'Fixed asset'");
		КонецЕсли;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ОсновноеСредство",
			"ОСОсновноеСредство",
			"Заголовок",
			ЗаголовокОсновногоСредства,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	ПеремещениеОСЛокализация.ЗначенияСвойствЗависимыхРеквизитов(Объект, ЕстьСобственныеОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта);
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка			 - ДокументСсылка.ПеремещениеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
	
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	
	// Регистры сведений для которых используется СрезПоследних
	ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Неопределено);
	
	//++ НЕ УТКА
	ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Неопределено);
	//-- НЕ УТКА
	
	ПеремещениеОСЛокализация.ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса);
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос,
																							ТекстыЗапроса,
																							Неопределено);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПеремещениеОС2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоОтправителю",  """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоПолучателю", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		
		ТекстЗапроса = ПеремещениеОСЛокализация.АдаптированныйТекстЗапросаДвиженийПоРегистру(
							ИмяРегистра, ПереопределениеРасчетаПараметров, СинонимТаблицыДокумента, ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
				
	Если ТекстЗапроса = Неопределено Тогда
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                         КАК Ссылка,
	|	ДанныеДокумента.Дата                           КАК Период,
	|	ДанныеДокумента.Номер                          КАК Номер,
	|	ДанныеДокумента.Организация                    КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель          КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.МОЛПолучатель                  КАК МОЛПолучатель,
	|	ДанныеДокумента.Ответственный                  КАК Ответственный,
	|	ДанныеДокумента.Комментарий                    КАК Комментарий,
	|	ДанныеДокумента.Проведен                       КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете             КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете              КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.НачислениеАмортизации          КАК НачислятьАмортизацию,
	|	ДанныеДокумента.СтатьяРасходов                 КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов              КАК АналитикаРасходов,
	|	ДанныеДокумента.СтатьяРасходовНалог            КАК СтатьяРасходовНалог,
	|	ДанныеДокумента.АналитикаРасходовНалог         КАК АналитикаРасходовНалог,
	|	ДанныеДокумента.Подразделение                  КАК Подразделение,
	|	ДанныеДокумента.ПодразделениеПолучатель        КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ДокументОснование              КАК ДокументОснование,
	|	ДанныеДокумента.СобытиеОС                      КАК СобытиеОС,
	|	ДанныеДокумента.ИзменяетсяОтражениеРасходовПоНалогу    КАК ИзменяетсяОтражениеРасходовПоНалогу,
	|	ДанныеДокумента.АдресМестонахожденияПолучателя         КАК АдресМестонахождения,
	|	ДанныеДокумента.АдресМестонахожденияПолучателяЗначение КАК АдресМестонахожденияЗначение,
	|	ДанныеДокумента.ЕГДСПолучатель КАК ЕГДСПолучатель
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

// Определяет необходимость дополнять таблицу ОС принадлежащими им компонентами и узлами
//  и при необходимости формирует временную таблицу.
//
// Параметры:
//  Запрос - Запрос -
//  ТекстыЗапроса - СписокЗначений из Строка -
Процедура СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса)

	Если Запрос.Параметры.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПеремещениеУзлов Тогда
		ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса);
	КонецЕсли;

КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремещениеОС2_4"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Перемещение ОС';
																	|en = 'Transfer fixed assets'"));
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ПрибыльУбытки", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки);
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		ВнеоборотныеАктивыСлужебный.УстановитьЗначенияПараметровПроведенияПриПеремещении(Реквизиты, ЗначенияПараметровПроведения);
		
		Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс Тогда
			
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Стоимость_Отправитель", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСвДругуюОрганизацию);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Стоимость_Получатель", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСизДругойОрганизации);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Амортизация_Отправитель", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Амортизация_Получатель", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСизДругойОрганизации);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Стоимость_Отправитель", Справочники.НастройкиХозяйственныхОпераций.ПеремещениеСтоимостиОСвДругуюОрганизацию);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Стоимость_Получатель", Справочники.НастройкиХозяйственныхОпераций.ПеремещениеСтоимостиОСизДругойОрганизации);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Амортизация_Отправитель", Справочники.НастройкиХозяйственныхОпераций.ПеремещениеАмортизацииОСвДругуюОрганизацию);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Амортизация_Получатель", Справочники.НастройкиХозяйственныхОпераций.ПеремещениеАмортизацииОСизДругойОрганизации);
				
		Иначе
			
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Стоимость_Отправитель", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Стоимость_Получатель", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Амортизация_Отправитель", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"ХО_Амортизация_Получатель", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Стоимость_Отправитель", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровАмортизацииОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Стоимость_Получатель", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровАмортизацииОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Амортизация_Отправитель", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровАмортизацииОС);
				
			ЗначенияПараметровПроведения.Вставить(
				"НастройкаХО_Амортизация_Получатель", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровАмортизацииОС);
				
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                          КАК Ссылка,
	|	&Период                          КАК Дата,
	|	&Организация                     КАК Организация,
	|	&Подразделение                   КАК Подразделение,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&Проведен                        КАК Проведен,
	|	ЛОЖЬ                             КАК ДополнительнаяЗапись,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеУзлов) ТОГДА
	|		ТаблицаОС.ОсновноеСредствоВладелец
	|	ИНАЧЕ
	|		ТаблицаОС.ОсновноеСредство
	|	КОНЕЦ                            КАК ОсновноеСредство
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                          КАК Ссылка,
	|	&Период                          КАК Дата,
	|	&ОрганизацияПолучатель           КАК Организация,
	|	&ПодразделениеПолучатель         КАК Подразделение,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&Проведен                        КАК Проведен,
	|	ИСТИНА                           КАК ДополнительнаяЗапись,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)";	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	&ИнформацияПоПолучателю КАК Дополнительно,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата   КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	&ИдентификаторМетаданных,
	|	ДанныеДокумента.ОрганизацияПолучатель,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ПодразделениеПолучатель,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Комментарий,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.ПометкаУдаления,
	|	ИСТИНА,
	|	&ИнформацияПоОтправителю,
	|	ДанныеДокумента.Дата,
	|	&НомерНаПечать,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|		ТОГДА &ОрганизацияПолучатель
	|		ИНАЧЕ &Организация
	|	КОНЕЦ                                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	&МОЛПолучатель                               КАК МОЛ,
	|	&ПодразделениеПолучатель                     КАК Местонахождение,
	|	ВЫБОР
	|		КОГДА &АдресМестонахождения <> """"
	|			ТОГДА &АдресМестонахождения
	|		ИНАЧЕ ТаблицаОС.АдресМестонахождения
	|	КОНЕЦ КАК АдресМестонахождения,
	|	ВЫБОР
	|		КОГДА &АдресМестонахождения <> """"
	|			ТОГДА &АдресМестонахожденияЗначение
	|		ИНАЧЕ ТаблицаОС.АдресМестонахожденияЗначение
	|	КОНЕЦ КАК АдресМестонахожденияЗначение,
	|	ТаблицаОС.Арендатор                          КАК Арендатор,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК ПодразделениеАрендатора,
	|	ТаблицаОС.МОЛАрендатора                      КАК МОЛАрендатора,
	|	ТаблицаОС.ОтражатьВРеглУчете                 КАК ОтражатьВРеглУчете,
	|	ТаблицаОС.ОтражатьВУпрУчете                  КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса = ПеремещениеОСЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период                    КАК Период,
		|	&ОрганизацияПолучатель     КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|
		|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
		|	ПервоначальныеСведенияОС.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ
		|ИЗ
		|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|		ПО ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|			И ПервоначальныеСведенияОС.Организация = &Организация
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)";
	
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК Состояние,
	|	ЛОЖЬ КАК НачислятьАмортизациюУУ,
	|	ЛОЖЬ КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВтТаблицаОС КАК Т)
	|		) КАК ПорядокУчета
	|	ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|		И ПорядокУчета.Организация = &Организация
	|ГДЕ
	|	&ОтражатьВУпрУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|		ТОГДА &ОрганизацияПолучатель
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	ВЫБОР &НачислятьАмортизацию
	|		КОГДА 0 ТОГДА ПорядокУчета.НачислятьАмортизациюУУ
	|		КОГДА 1 ТОГДА ИСТИНА
	|		КОГДА 2 ТОГДА ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизациюУУ,
	|	ВЫБОР &НачислятьАмортизацию
	|		КОГДА 0 ТОГДА ПорядокУчета.СтатьяРасходов
	|		КОГДА 1 ТОГДА &СтатьяРасходов
	|		КОГДА 2 ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР &НачислятьАмортизацию
	|		КОГДА 0 ТОГДА ПорядокУчета.АналитикаРасходов
	|		КОГДА 1 ТОГДА &АналитикаРасходов
	|		КОГДА 2 ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВтТаблицаОС КАК Т)
	|		) КАК ПорядокУчета
	|	ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|		И ПорядокУчета.Организация = &Организация
	|ГДЕ
	|	&ОтражатьВУпрУчете
	|	И (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|			ИЛИ &НачислятьАмортизацию <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокИспользования КАК СрокИспользования,
	|	ПараметрыАмортизации.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизации.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизации.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПараметрыАмортизации.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыАмортизации.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ПараметрыАмортизации.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	ПараметрыАмортизации.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизации.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизации.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ВтТаблицаОС КАК Т)) КАК ПараметрыАмортизации
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И (ПараметрыАмортизации.Организация = &Организация)
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса)

	ИмяРегистра = "СтоимостьОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_Стоимость_Отправитель                   КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	&Подразделение                              КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	ТаблицаОС.Арендатор                         КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                       КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                   КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                     КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                     КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                     КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                     КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                   КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                   КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                   КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия           КАК АмортизационнаяПремия,
	|	СтоимостьОС.ЗалоговаяСтоимость              КАК ЗалоговаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимость        КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимостьРегл    КАК ПредварительнаяСтоимостьРегл,
	|	СтоимостьОС.РезервПереоценкиСтоимости       КАК РезервПереоценкиСтоимости,
	|	СтоимостьОС.РезервПереоценкиСтоимостиРегл   КАК РезервПереоценкиСтоимостиРегл,
	|	СтоимостьОС.НеУчитываемаяСтоимостьНУ        КАК НеУчитываемаяСтоимостьНУ,
	|	0                                           КАК ПриростСтоимости,
	|	0                                           КАК ПриростСтоимостиРегл,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|			ТОГДА &ОрганизацияПолучатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорОрганизация,
	|
	|	&ПодразделениеПолучатель                    КАК КорПодразделение,
	|	ТаблицаОС.Арендатор                         КАК КорКонтрагент,
	|	ТаблицаОС.НаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	Неопределено                                КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Отправитель          КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_Стоимость_Получатель                    КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                      КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	&ПодразделениеПолучатель                    КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	ТаблицаОС.Арендатор                         КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                       КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                   КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                     КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                     КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                     КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                     КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                   КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                   КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                   КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия           КАК АмортизационнаяПремия,
	|	СтоимостьОС.ЗалоговаяСтоимость              КАК ЗалоговаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимость        КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимостьРегл    КАК ПредварительнаяСтоимостьРегл,
	|	СтоимостьОС.РезервПереоценкиСтоимости       КАК РезервПереоценкиСтоимости,
	|	СтоимостьОС.РезервПереоценкиСтоимостиРегл   КАК РезервПереоценкиСтоимостиРегл,
	|	СтоимостьОС.НеУчитываемаяСтоимостьНУ        КАК НеУчитываемаяСтоимостьНУ,
	|	0                                           КАК ПриростСтоимости,
	|	0                                           КАК ПриростСтоимостиРегл,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорОрганизация,
	|
	|	&Подразделение                              КАК КорПодразделение,
	|	ТаблицаОС.Арендатор                         КАК КорКонтрагент,
	|	ТаблицаОС.НаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	Неопределено                                КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Получатель           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_Стоимость_Получатель                    КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО                                КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК Арендатор,
	|
	|	0                                           КАК Стоимость,
	|	0                                           КАК СтоимостьРегл,
	|	0                                           КАК СтоимостьНУ,
	|	0                                           КАК СтоимостьПР,
	|	0                                           КАК СтоимостьВР,
	|	0                                           КАК СтоимостьЦФ,
	|	0                                           КАК СтоимостьНУЦФ,
	|	0                                           КАК СтоимостьПРЦФ,
	|	0                                           КАК СтоимостьВРЦФ,
	|	0                                           КАК АмортизационнаяПремия,
	|	0                                           КАК ЗалоговаяСтоимость,
	|	0                                           КАК ПредварительнаяСтоимость,
	|	0                                           КАК ПредварительнаяСтоимостьРегл,
	|	0                                           КАК РезервПереоценкиСтоимости,
	|	0                                           КАК РезервПереоценкиСтоимостиРегл,
	|	0                                           КАК НеУчитываемаяСтоимостьНУ,
	|
	|	СтоимостьОС.ПриростСтоимости                КАК ПриростСтоимости,
	|	СтоимостьОС.ПриростСтоимостиРегл            КАК ПриростСтоимостиРегл,
	|
	|	&ОрганизацияПолучатель                      КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА СтоимостьОС.ЗабалансовыйУчет
	|			ТОГДА ТаблицаОС.Арендатор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|	ТаблицаОС.НаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Получатель           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	&Организация <> &ОрганизацияПолучатель
	|	И (СтоимостьОС.ПриростСтоимости <> 0 
	|		ИЛИ СтоимостьОС.ПриростСтоимостиРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_Стоимость_Отправитель                   КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                      КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО                                КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК Арендатор,
	|
	|	0                                           КАК Стоимость,
	|	0                                           КАК СтоимостьРегл,
	|	0                                           КАК СтоимостьНУ,
	|	0                                           КАК СтоимостьПР,
	|	0                                           КАК СтоимостьВР,
	|	0                                           КАК СтоимостьЦФ,
	|	0                                           КАК СтоимостьНУЦФ,
	|	0                                           КАК СтоимостьПРЦФ,
	|	0                                           КАК СтоимостьВРЦФ,
	|	0                                           КАК АмортизационнаяПремия,
	|	0                                           КАК ЗалоговаяСтоимость,
	|	0                                           КАК ПредварительнаяСтоимость,
	|	0                                           КАК ПредварительнаяСтоимостьРегл,
	|	0                                           КАК РезервПереоценкиСтоимости,
	|	0                                           КАК РезервПереоценкиСтоимостиРегл,
	|	0                                           КАК НеУчитываемаяСтоимостьНУ,
	|
	|	СтоимостьОС.ПриростСтоимости                КАК ПриростСтоимости,
	|	СтоимостьОС.ПриростСтоимостиРегл            КАК ПриростСтоимостиРегл,
	|
	|	&Организация                                КАК КорОрганизация,
	|	&Подразделение                              КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА СтоимостьОС.ЗабалансовыйУчет
	|			ТОГДА ТаблицаОС.Арендатор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|	ТаблицаОС.НаправлениеДеятельности           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета            КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Отправитель          КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	&Организация <> &ОрганизацияПолучатель
	|	И (СтоимостьОС.ПриростСтоимости <> 0 
	|		ИЛИ СтоимостьОС.ПриростСтоимостиРегл <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Ссылка                                         КАК Регистратор,
	|	&Период                                         КАК Период,
	|	&ХО_Амортизация_Отправитель                     КАК ХозяйственнаяОперация,
	|	&Организация                                    КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                      КАК ОсновноеСредство,
	|	&Подразделение                                  КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета                КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности               КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК Контрагент,
	|	АмортизацияОС.Амортизация                       КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл                   КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ                     КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР                     КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР                     КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ                     КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ                   КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ                   КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ                   КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации       КАК РезервПереоценкиАмортизации,
	|	АмортизацияОС.РезервПереоценкиАмортизацииРегл   КАК РезервПереоценкиАмортизацииРегл,
	|	&ОрганизацияПолучатель                          КАК КорОрганизация,
	|	&ПодразделениеПолучатель                        КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности               КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                    КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета                КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос                    КАК НачислятьИзнос,
	|	
	|	ТаблицаОС.ИдентификаторСтроки                   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Амортизация_Отправитель            КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Ссылка                                         КАК Регистратор,
	|	&Период                                         КАК Период,
	|	&ХО_Амортизация_Получатель                      КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                          КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                      КАК ОсновноеСредство,
	|	&ПодразделениеПолучатель                        КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета                КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности               КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК Контрагент,
	|	АмортизацияОС.Амортизация                       КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл                   КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ                     КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР                     КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР                     КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ                     КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ                   КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ                   КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ                   КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации       КАК РезервПереоценкиАмортизации,
	|	АмортизацияОС.РезервПереоценкиАмортизацииРегл   КАК РезервПереоценкиАмортизацииРегл,
	|	&Организация                                    КАК КорОрганизация,
	|	&Подразделение                                  КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности               КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                    КАК КорАналитикаРасходов,
	|	ТаблицаОС.ГруппаФинансовогоУчета                КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос                    КАК НачислятьИзнос,
	|	
	|	ТаблицаОС.ИдентификаторСтроки                   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Амортизация_Получатель             КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"// Перемещение амортизации для отправителя
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХО_Амортизация_Отправитель       КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	АмортизацияОС.Амортизация         КАК Сумма,
	|	АмортизацияОС.Амортизация         КАК СуммаУпр,
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещение амортизации для получателя
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХО_Амортизация_Получатель        КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель            КАК Организация,
	|
	|	&ПодразделениеПолучатель          КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                    КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                      КАК КорОрганизация,
	|
	|	АмортизацияОС.Амортизация         КАК Сумма,
	|	АмортизацияОС.Амортизация         КАК СуммаУпр,
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещение стоимости для отправителя
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХО_Стоимость_Отправитель         КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	СтоимостьОС.Стоимость             КАК Сумма,
	|	СтоимостьОС.Стоимость             КАК СуммаУпр,
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещение стоимости для получателя
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХО_Стоимость_Получатель          КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель            КАК Организация,
	|
	|	&ПодразделениеПолучатель          КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                    КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                      КАК КорОрганизация,
	|
	|	СтоимостьОС.Стоимость             КАК Сумма,
	|	СтоимостьОС.Стоимость             КАК СуммаУпр,
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.ПеремещениеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыПоВыделенномуИмуществу) КАК Статья,
	|	&ОрганизацияПолучатель            КАК Аналитика,
	|	НЕОПРЕДЕЛЕНО                      КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл,
	|	СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|	СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ КАК ВременнаяРазница,
	|	СтоимостьОС.Стоимость КАК СуммаУпр,
	|	СтоимостьОС.Стоимость КАК СуммаСНДС,
	|	СтоимостьОС.Стоимость КАК СуммаБезНДС,
	|	
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Отправитель КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &Организация <> &ОрганизацияПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ОрганизацияПолучатель            КАК Организация,
	|	&ПодразделениеПолучатель          КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыПоВыделенномуИмуществу) КАК Статья,
	|	&Организация                      КАК Аналитика,
	|	НЕОПРЕДЕЛЕНО                      КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл,
	|	СтоимостьОС.СтоимостьПР + СтоимостьОС.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|	СтоимостьОС.СтоимостьВР + СтоимостьОС.СтоимостьВРЦФ КАК ВременнаяРазница,
	|	СтоимостьОС.Стоимость КАК СуммаУпр,
	|	СтоимостьОС.Стоимость КАК СуммаСНДС,
	|	СтоимостьОС.Стоимость КАК СуммаБезНДС,
	|	
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Стоимость_Получатель КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &Организация <> &ОрганизацияПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыПоВыделенномуИмуществу) КАК Статья,
	|	&ОрганизацияПолучатель            КАК Аналитика,
	|	НЕОПРЕДЕЛЕНО                      КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл,
	|	АмортизацияОС.АмортизацияПР + АмортизацияОС.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|	АмортизацияОС.АмортизацияВР + АмортизацияОС.АмортизацияВРЦФ КАК ВременнаяРазница,
	|	АмортизацияОС.Амортизация КАК СуммаУпр,
	|	АмортизацияОС.Амортизация КАК СуммаСНДС,
	|	АмортизацияОС.Амортизация КАК СуммаБезНДС,
	|	
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Амортизация_Отправитель КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &Организация <> &ОрганизацияПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ОрганизацияПолучатель            КАК Организация,
	|	&ПодразделениеПолучатель          КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыПоВыделенномуИмуществу) КАК Статья,
	|	&Организация                      КАК Аналитика,
	|	НЕОПРЕДЕЛЕНО                      КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл,
	|	АмортизацияОС.АмортизацияПР + АмортизацияОС.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|	АмортизацияОС.АмортизацияВР + АмортизацияОС.АмортизацияВРЦФ КАК ВременнаяРазница,
	|	АмортизацияОС.Амортизация КАК СуммаУпр,
	|	АмортизацияОС.Амортизация КАК СуммаСНДС,
	|	АмортизацияОС.Амортизация КАК СуммаБезНДС,
	|	
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_Амортизация_Получатель КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &Организация <> &ОрганизацияПолучатель
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасширеннаяТаблицаОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПеремещениеОС2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|	ТаблицаОС.Ссылка              КАК Ссылка,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтРасширеннаяТаблицаОС
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент       КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство         КАК ОСВладелец,
	|	ТаблицаОС.Ссылка                   КАК Ссылка,
	|	УзлыКомпоненты.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеУзлов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаУзлыКомпонентыАмортизации(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УзлыКомпонентыАмортизации";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ТаблицаОС.ОсновноеСредство КАК УзелКомпонент,
	|	ТаблицаОС.ОсновноеСредствоВладелец КАК ОсновноеСредство
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеУзлов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

//++ НЕ УТКА

Функция ТекстЗапросаТаблицаОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Документ,
	|	ПланыСчетовМеждународногоУчетаОрганизаций.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.КОтражениюВУчете) КАК Статус,
	|	ПланыСчетовМеждународногоУчетаОрганизаций.ПланСчетов КАК ПланСчетов,
	|	ПланыСчетовМеждународногоУчетаОрганизаций.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок
	|ИЗ
	|	РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(&Период, Организация = &Организация) КАК ПланыСчетовМеждународногоУчетаОрганизаций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ПланыСчетовМеждународногоУчетаОрганизаций.Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.КОтражениюВУчете),
	|	ПланыСчетовМеждународногоУчетаОрганизаций.ПланСчетов КАК ПланСчетов,
	|	ПланыСчетовМеждународногоУчетаОрганизаций.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок
	|ИЗ
	|	РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(&Период, Организация = &ОрганизацияПолучатель) КАК ПланыСчетовМеждународногоУчетаОрганизаций
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТКА

Функция ТекстЗапросаТаблицаДвиженияСоставЕГДС(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "СоставЕГДС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Ссылка                   КАК Регистратор,
	|	ОС.Ссылка.Дата              КАК Период,
	|	ВЫБОР
	|		КОГДА ОС.Ссылка.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ОС.Ссылка.Организация
	|		ИНАЧЕ ОС.Ссылка.ОрганизацияПолучатель
	|	КОНЕЦ                       КАК Организация,
	|	ОС.ОсновноеСредство         КАК ВнеоборотныйАктив,
	|	ОС.Ссылка.ЕГДСПолучатель    КАК ЕГДС
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ОС
	|ГДЕ
	|	ОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОС.Ссылка                   КАК Регистратор,
	|	ОС.Ссылка.Дата              КАК Период,
	|	ОС.Ссылка.Организация       КАК Организация,
	|	ОС.ОсновноеСредство         КАК ВнеоборотныйАктив,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыГенерирующиеДенежныеСредства.ПустаяСсылка) КАК ЕГДС
	|ИЗ
	|	Документ.ПеремещениеОС2_4.ОС КАК ОС
	|ГДЕ
	|	ОС.Ссылка = &Ссылка
	|	И ОС.Ссылка.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ПеремещениеОСЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ПеремещениеОСЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	ПеремещениеОСЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПеремещениеОСЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);

КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатейИАналитик = Новый Массив;
	
	// СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	//
	ПеремещениеОСЛокализация.ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик);
	
	Возврат ПараметрыВыбораСтатейИАналитик;
	
КонецФункции

Функция ЕстьСобственныеОС(Объект) Экспорт

	ЕстьСобственныеОС = Истина;
	
	//++ Локализация
	
	Если Объект.ОС.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И НЕ ОбъектыЭксплуатации.Ссылка В
	|				(ВЫБРАТЬ
	|					АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство
	|				ИЗ
	|					РегистрСведений.АрендованныеОС.СрезПоследних(
	|						&Дата,
	|						ОсновноеСредство В (&СписокОС)) КАК АрендованныеОС
	|				ГДЕ
	|					АрендованныеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("СписокОС", Объект.ОС.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство"));
	
	Результат = Запрос.Выполнить();
	ЕстьСобственныеОС = НЕ Результат.Пустой();
	
	//-- Локализация
	
	Возврат ЕстьСобственныеОС;
	
КонецФункции
 
#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПеремещениеОС2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.5.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("594945c9-cd32-42a3-9922-722d9e686aad");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеОС2_4.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Перемещение ОС"":
	|- Заполняет новый реквизит ""Адрес местонахождения (значение)""
	|- Заполняет новый реквизит ""Идентификатор строки"" в табличных частях.';
	|en = 'Updates the ""Transfer fixed assets"" documents:
	|- Populates the new ""Location address (value)"" attribute
	|- Populates the new ""Line ID"" attribute in tables.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ПеремещениеОС2_4";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ДанныеДокумента
	|ГДЕ
	|	(ДанныеДокумента.АдресМестонахожденияПолучателя <> """"
	|	И (ВЫРАЗИТЬ(ДанныеДокумента.АдресМестонахожденияПолучателяЗначение КАК СТРОКА(100))) = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПеремещениеОС2_4.ОС КАК ТабЧасть
	|		ГДЕ
	|			ТабЧасть.Ссылка = ДанныеДокумента.Ссылка
	|			И ТабЧасть.ИдентификаторСтроки = """")";
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Документ.ПеремещениеОС2_4";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для каждого Выборка Из ОбновляемыеДанные Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ПеремещениеОС2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахожденияПолучателя)
				И НЕ ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахожденияПолучателяЗначение) Тогда
				
				ДанныеОбъекта.АдресМестонахожденияПолучателяЗначение = 
					УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
						ДанныеОбъекта.АдресМестонахожденияПолучателя,
						Перечисления.ТипыКонтактнойИнформации.Адрес);
			КонецЕсли; 
			
			ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДанныеОбъекта, "ОС");
			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
	 			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ДанныеОбъекта);
			КонецЕсли; 
			
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%';
									|en = 'Cannot process the object: %Ссылка%. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
