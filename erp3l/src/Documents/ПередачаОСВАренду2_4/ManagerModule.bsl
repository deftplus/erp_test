#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");

	ПередачаОСВАрендуЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
	ПередачаОСВАрендуЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда

		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
		
		ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	
	
		ПередачаОСВАрендуЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ВозвратОСИзАренды2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Передача ОС в аренду".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаОСВАренду2_4) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПередачаОСВАренду2_4.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПередачаОСВАренду2_4);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка			 - ДокументСсылка.ПеремещениеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
		
	СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
	ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(
							Запрос,																					
							ТекстыЗапроса,
							Неопределено);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПередачаОСВАренду2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ТекстПоля = 
	"ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|		ТОГДА ДанныеДокумента.Арендатор
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ";
	ПереопределениеРасчетаПараметров.Вставить("ОрганизацияПолучатель", ТекстПоля);
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Дата                    КАК Период,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Арендатор               КАК Арендатор,
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.МОЛ                     КАК МОЛ,
	|	ДанныеДокумента.МОЛАрендатора           КАК МОЛАрендатора,
	|	ДанныеДокумента.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	ДанныеДокумента.АдресМестонахождения    КАК АдресМестонахождения,
	|	ДанныеДокумента.АдресМестонахожденияЗначение КАК АдресМестонахожденияЗначение,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете      КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете       КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.СтатьяРасходовБУ        КАК СтатьяРасходовБУ,
	|	ДанныеДокумента.АналитикаРасходовБУ     КАК АналитикаРасходовБУ,
	|	ДанныеДокумента.СтатьяРасходовУУ        КАК СтатьяРасходовУУ,
	|	ДанныеДокумента.АналитикаРасходовУУ     КАК АналитикаРасходовУУ,
	|	ДанныеДокумента.НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ,
	|	ДанныеДокумента.НачислениеАмортизацииУУ КАК НачислениеАмортизацииУУ,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС               КАК СобытиеОС,
	|	ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|		ТОГДА ДанныеДокумента.Арендатор
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ                                   КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор КАК РасчетыМеждуОрганизациямиАрендатор,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства) КАК СтатьяАП_ОС
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПередачаОСВАренду2_4"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru = 'Передача ОС в аренду';
																	|en = 'Provide assets to leasee'"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПередачаОСВАренду);
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперацияСтоимость", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперацияАмортизация", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперацииСтоимость", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперацииАмортизация", Справочники.НастройкиХозяйственныхОпераций.ИзменениеПараметровАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());

	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

// Определяет необходимость дополнять таблицу ОС принадлежащими им компонентами и узлами
//  и при необходимости формирует временную таблицу.
//
// Параметры:
//  Запрос - Запрос -
//  ТекстыЗапроса - СписокЗначений из Строка -
Процедура СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса)

	ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса);

КонецПроцедуры

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Период                          КАК Дата,
	|	&Ссылка                          КАК Ссылка,
	|	&Организация                     КАК Организация,
	|	&Подразделение                   КАК Подразделение,
	|	&Проведен                        КАК Проведен,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	ЛОЖЬ                             КАК ДополнительнаяЗапись
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Период                          КАК Дата,
	|	&Ссылка                          КАК Ссылка,
	|	&ОрганизацияПолучатель           КАК Организация,
	|	&ПодразделениеПолучатель         КАК Подразделение,
	|	&Проведен                        КАК Проведен,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	ИСТИНА                           КАК ДополнительнаяЗапись
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Организация <> &ОрганизацияПолучатель
	|	И &РасчетыМеждуОрганизациямиАрендатор";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Арендатор КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата   КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	&ИдентификаторМетаданных,
	|	ДанныеДокумента.Арендатор,
	|	ДанныеДокумента.Арендатор,
	|	ДанныеДокумента.Договор,
	|	&ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ПодразделениеПолучатель,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Комментарий,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.ПометкаУдаления,
	|	ИСТИНА,
	|	ДанныеДокумента.Дата,
	|	&НомерНаПечать,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	ДанныеДокумента.Дата,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|	И ДанныеДокумента.Арендатор <> ДанныеДокумента.Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса, "Документ.ПередачаОСВАренду2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                          КАК Период,
	|	&Организация                     КАК Организация,
	|	втМестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&МОЛ                             КАК МОЛ,
	|	&ПодразделениеПолучатель         КАК Местонахождение,
	|	&Арендатор                       КАК Арендатор,
	|	&ПодразделениеАрендатора         КАК ПодразделениеАрендатора,
	|	&МОЛАрендатора                   КАК МОЛАрендатора,
	|	ВЫБОР 
	|		КОГДА &РасчетыМеждуОрганизациямиАрендатор И &АдресМестонахождения <> """"	
	|			ТОГДА &АдресМестонахождения
	|		ИНАЧЕ втМестонахождениеОС.АдресМестонахождения
	|	КОНЕЦ КАК АдресМестонахождения,
	|	ВЫБОР 
	|		КОГДА &РасчетыМеждуОрганизациямиАрендатор И &АдресМестонахождения <> """"
	|			ТОГДА &АдресМестонахожденияЗначение
	|		ИНАЧЕ втМестонахождениеОС.АдресМестонахожденияЗначение
	|	КОНЕЦ КАК АдресМестонахожденияЗначение
	|ИЗ
	|	втМестонахождениеОС КАК втМестонахождениеОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаОС.ПоказательНаработки           КАК ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки                КАК ОбъемНаработки,
	|	ТаблицаОС.ОтражатьВРеглУчете            КАК ОтражатьВРеглУчете,
	|	ТаблицаОС.ОтражатьВУпрУчете             КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ОС КАК ИсходнаяТаблицаОС
	|		ПО ТаблицаОС.ОсновноеСредство = ИсходнаяТаблицаОС.ОсновноеСредство
	|ГДЕ ИсходнаяТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПередачаОСВАренду2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	&НачислениеАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует) КАК НачислятьАмортизациюУУ,
	|	&СтатьяРасходовУУ                       КАК СтатьяРасходов,
	|	&АналитикаРасходовУУ                    КАК АналитикаРасходов
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &НачислениеАмортизацииУУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Остановлено))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	УзлыКомпоненты.УзелКомпонент            КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	&НачислениеАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует) КАК НачислятьАмортизациюУУ,
	|	&СтатьяРасходовУУ                       КАК СтатьяРасходов,
	|	&АналитикаРасходовУУ                    КАК АналитикаРасходов
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &НачислениеАмортизацииУУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Действует),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.Остановлено))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПереданныеВАрендуОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПередачаОСВАренду2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                         КАК Период,
	|	&Период                         КАК ДатаПередачи,
	|	&Организация                    КАК Организация,
	|	&Арендатор                      КАК Контрагент,
	|	&Договор                        КАК Договор,
	|	ТаблицаОС.ЗалоговаяСтоимость    КАК ЗалоговаяСтоимость,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду) КАК Состояние
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                         КАК Период,
	|	&Период                         КАК ДатаПередачи,
	|	&Организация                    КАК Организация,
	|	&Арендатор                      КАК Контрагент,
	|	&Договор                        КАК Договор,
	|	0                               КАК ЗалоговаяСтоимость,
	|	УзлыКомпоненты.УзелКомпонент    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПереданоВАренду) КАК Состояние
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса, Регистры = Неопределено)

	ИмяРегистра = "СтоимостьОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаПустаяТаблицаСтоимости(ТекстыЗапроса, Запрос, "ВТ_СтоимостьВНА");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&Подразделение                                     КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                              КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                          КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                            КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                            КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                            КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                            КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                          КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                          КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                          КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия                  КАК АмортизационнаяПремия,
	|	СтоимостьОС.ПредварительнаяСтоимость               КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимостьРегл           КАК ПредварительнаяСтоимостьРегл,
	|	СтоимостьОС.РезервПереоценкиСтоимости              КАК РезервПереоценкиСтоимости,
	|	СтоимостьОС.РезервПереоценкиСтоимостиРегл          КАК РезервПереоценкиСтоимостиРегл,
	//++ Локализация
	|	0                                                  КАК ЗалоговаяСтоимость,
	//-- Локализация
	|
	|	&Арендатор                                         КАК КорОрганизация,
	|	&ПодразделениеПолучатель                           КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	НЕ СтоимостьОС.ОбъектУчета ЕСТЬ NULL               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперацииСтоимость           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО ТаблицаОС.ОсновноеСредство = СтоимостьОС.ОбъектУчета
	|		И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&ПодразделениеПолучатель                           КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК ГруппаФинансовогоУчета,
	|	&Арендатор                                         КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                              КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                          КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                            КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                            КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                            КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                            КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                          КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                          КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                          КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия                  КАК АмортизационнаяПремия,
	|	СтоимостьОС.ПредварительнаяСтоимость               КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.ПредварительнаяСтоимостьРегл           КАК ПредварительнаяСтоимостьРегл,
	|	СтоимостьОС.РезервПереоценкиСтоимости              КАК РезервПереоценкиСтоимости,
	|	СтоимостьОС.РезервПереоценкиСтоимостиРегл          КАК РезервПереоценкиСтоимостиРегл,
	//++ Локализация
	|	0                                                  КАК ЗалоговаяСтоимость,
	//-- Локализация
	|
	|	&Организация                                       КАК КорОрганизация,
	|	&Подразделение                                     КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	НЕ СтоимостьОС.ОбъектУчета ЕСТЬ NULL               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете,
	|	
	|	ТаблицаОС.ИдентификаторСтроки                      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперацииСтоимость           КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|		И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&ПодразделениеПолучатель                           КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК ГруппаФинансовогоУчета,
	|	&Арендатор                                         КАК Арендатор,
	|
	|	0                                                  КАК Стоимость,
	|	0                                                  КАК СтоимостьРегл,
	|	0                                                  КАК СтоимостьНУ,
	|	0                                                  КАК СтоимостьПР,
	|	0                                                  КАК СтоимостьВР,
	|	0                                                  КАК СтоимостьЦФ,
	|	0                                                  КАК СтоимостьНУЦФ,
	|	0                                                  КАК СтоимостьПРЦФ,
	|	0                                                  КАК СтоимостьВРЦФ,
	|	0                                                  КАК АмортизационнаяПремия,
	|	0                                                  КАК ПредварительнаяСтоимость,
	|	0                                                  КАК ПредварительнаяСтоимостьРегл,
	|	0                                                  КАК РезервПереоценкиСтоимости,
	|	0                                                  КАК РезервПереоценкиСтоимостиРегл,
	//++ Локализация
	|	ТаблицаОС.ЗалоговаяСтоимость                       КАК ЗалоговаяСтоимость,
	//-- Локализация
	|
	|	НЕОПРЕДЕЛЕНО                                       КАК КорОрганизация,
	|	&ПодразделениеАрендатора                           КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете,
	|	
	|	&ИдентификаторНеиспользуемойФинЗаписи              КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО                                       КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&ХозяйственнаяОперацияАмортизация         КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	&Подразделение                            КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	АмортизацияОС.Амортизация                 КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл             КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ               КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР               КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР               КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ               КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ             КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ             КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ             КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	&Организация                              КАК КорОрганизация,
	|	&ПодразделениеПолучатель                  КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос              КАК НачислятьИзнос,
	|	
	|	ТаблицаОС.ИдентификаторСтроки              КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперацииАмортизация КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&ХозяйственнаяОперацияАмортизация         КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	&ПодразделениеПолучатель                  КАК Подразделение,
	|	&ГруппаФинансовогоУчета                   КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	АмортизацияОС.Амортизация                 КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл             КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ               КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР               КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР               КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ               КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ             КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ             КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ             КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	&Организация                              КАК КорОрганизация,
	|	&Подразделение                            КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета          КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос              КАК НачислятьИзнос,
	|	
	|	ТаблицаОС.ИдентификаторСтроки              КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперацииАмортизация КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"// Перемещение амортизации
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХозяйственнаяОперацияАмортизация КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	АмортизацияОС.Амортизация         КАК Сумма,
	|	АмортизацияОС.Амортизация         КАК СуммаУпр,
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещение стоимости
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХозяйственнаяОперацияСтоимость   КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	СтоимостьОС.Стоимость             КАК Сумма,
	|	СтоимостьОС.Стоимость             КАК СуммаУпр,
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтРасширеннаяТаблицаОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПередачаОСВАренду2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|	ТаблицаОС.Ссылка              КАК Ссылка,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаОС.ЗалоговаяСтоимость  КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ ВтРасширеннаяТаблицаОС
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент           КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство             КАК ОСВладелец,
	|	ТаблицаОС.Ссылка                       КАК Ссылка,
	|	УзлыКомпоненты.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	0                                      КАК ЗалоговаяСтоимость
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Функция ПолноеИмяОбъекта()

	Возврат "Документ.ПередачаОСВАренду2_4";

КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ПередачаОСВАрендуЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();
	
КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат ПередачаОСВАрендуЛокализация.ТекстОтраженияВРеглУчете();
	
КонецФункции

#КонецОбласти

#Область Печать

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ПередачаОСВАрендуЛокализация.ДобавитьКомандыПечати(КомандыПечати);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Возврат ПередачаОСВАрендуЛокализация.ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, МассивОбъектов);
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатейИАналитик = Новый Массив;
	
	// СтатьяРасходовУУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходовУУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовУУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовУУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовУУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	// СтатьяРасходовБУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходовБУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовБУ";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовБУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовБУ");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	Возврат ПараметрыВыбораСтатейИАналитик;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПередачаОСВАренду2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.32";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3497c9bb-7ce7-41a0-9fd7-4b7ddd39a586");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПередачаОСВАренду2_4.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Передача ОС в аренду"":
	|- Заполняет новые реквизиты ""Начисление амортизации БУ"", ""Начисление амортизации УУ"".
	|- Заполняет реквизит ""Идентификатор строки"" в табличных частях.';
	|en = 'Updates the ""Provide assets to leasee"" documents:
	|- Populates the new ""Depreciation charge AC"", ""Depreciation charge MA"" attributes.
	|- Populates the ""Line ID"" attribute in the tables.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПередачаОСВАренду2_4.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПередачаОСВАренду2_4.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПередачаОСВАренду2_4.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ПередачаОСВАренду2_4";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПередачаОСВАренду.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ПередачаОСВАренду
	|ГДЕ
	|	(ПередачаОСВАренду.НачислениеАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.ПустаяСсылка)
	|			ИЛИ ПередачаОСВАренду.НачислениеАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ВариантыИзмененияНачисленияАмортизации.ПустаяСсылка)
	|			ИЛИ ПередачаОСВАренду.АдресМестонахождения <> """"
	|				И (ВЫРАЗИТЬ(ПередачаОСВАренду.АдресМестонахожденияЗначение КАК СТРОКА(100))) = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПередачаОСВАренду2_4.ОС КАК ТабЧасть
	|		ГДЕ
	|			ТабЧасть.Ссылка = ПередачаОСВАренду.Ссылка
	|			И ТабЧасть.ИдентификаторСтроки = """")";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Документ.ПередачаОСВАренду2_4";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для каждого Выборка Из ОбновляемыеДанные Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ПередачаОСВАренду2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.НачислениеАмортизацииБУ) Тогда
				ДанныеОбъекта.НачислениеАмортизацииБУ = 
					?(ДанныеОбъекта.УдалитьНачислятьАмортизациюБУ,
						Перечисления.ВариантыИзмененияНачисленияАмортизации.Действует,
						Перечисления.ВариантыИзмененияНачисленияАмортизации.Остановлено);
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.НачислениеАмортизацииУУ) Тогда
				ДанныеОбъекта.НачислениеАмортизацииУУ = 
					?(ДанныеОбъекта.УдалитьНачислятьАмортизациюУУ,
						Перечисления.ВариантыИзмененияНачисленияАмортизации.Действует,
						Перечисления.ВариантыИзмененияНачисленияАмортизации.Остановлено);
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахождения)
				И НЕ ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахожденияЗначение) Тогда
				
				ДанныеОбъекта.АдресМестонахожденияЗначение = 
					УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
						ДанныеОбъекта.АдресМестонахождения,
						Перечисления.ТипыКонтактнойИнформации.Адрес);
			КонецЕсли; 
			
			ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДанныеОбъекта, "ОС");
			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%';
									|en = 'Cannot process the object: %Ссылка%. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
