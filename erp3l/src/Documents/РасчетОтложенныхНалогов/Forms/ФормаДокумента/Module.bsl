
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	Объект.Дата = ОбщегоНазначенияУХ.ПолучитьКонецПериодаОтчета(Объект.ПериодОтчета);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуРасчета(Команда)
	ЗаполнитьТаблицуРасчетаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРасшифровку(Команда)
	
	Результат = ПоказатьРасшифровкуНаСервере(Объект.Организация, Объект.Сценарий, Объект.ПериодОтчета);
	Результат.ТабДок.Показать(Результат.Заголовок);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуРасчетаНаСервере()
	Документы.РасчетОтложенныхНалогов.ЗаполнитьДокумент(Объект);	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображение()
	
	Если Объект.Организация.ЭлиминирующаяОрганизация Тогда
		
		Элементы.РасчетОтложенныхНалоговОстатокНСБУ.Заголовок = Нстр("ru = 'Консолидация до корректировок'");
		Элементы.РасчетОтложенныхНалоговОстатокМСФО.Заголовок = Нстр("ru = 'Консолидация после корректировок'");
		
	Иначе
		
		Элементы.РасчетОтложенныхНалоговОстатокНСБУ.Заголовок = Нстр("ru = 'НСБУ'");
		Элементы.РасчетОтложенныхНалоговОстатокМСФО.Заголовок = Нстр("ru = 'МСФО'");
				
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоказатьРасшифровкуНаСервере(Организация, Сценарий, ПериодОтчета)
	
	Контекст = Новый Структура;
	Контекст.Вставить("Организация", 			Организация);
	Контекст.Вставить("ПериодОтчета",			ПериодОтчета);
	Контекст.Вставить("Сценарий",	 			Сценарий);
	Контекст.Вставить("ДополнительныеСвойства",	Новый Структура);
	
	ЗначенияУП = Документы.РасчетОтложенныхНалогов.ЗначенияУП(Контекст);
    Контекст.ДополнительныеСвойства.Вставить("ЗначенияУП", ЗначенияУП);
		
	Если ЗначенияУП.ЭлиминирующаяОрганизация Тогда
		
		ЗаголовокОтчета = СтрШаблон(НСтр("ru = 'Расшифровка (для элиминирующей) расчета для <%1> за период <%2>'"), Организация, ПериодОтчета);
		Таб = Документы.РасчетОтложенныхНалогов.ПолучитьОтложенныеНалогиТКПоЭлиминирующей(Контекст, Истина, ЗначенияУП);
		
	ИначеЕсли ЗначенияУП.ФормироватьПроводкиМСФО Тогда
		
		ЗаголовокОтчета = СтрШаблон(НСтр("ru = 'Расшифровка (модель: <%1>) расчета для <%2> за период <%3>'"), Организация.МодельУчетаМСФО, Организация, ПериодОтчета);
		Таб = Документы.РасчетОтложенныхНалогов.ПолучитьОтложенныеНалогиТУ(Контекст, Истина, ЗначенияУП);

	Иначе
		ЗаголовокОтчета = СтрШаблон(НСтр("ru = 'Расшифровка (модель: <%1>) расчета для <%2> за период <%3>'"), Организация.МодельУчетаМСФО, Организация, ПериодОтчета);
		Таб = Документы.РасчетОтложенныхНалогов.ПолучитьОтложенныеНалогиТКПоИндивидуальной(Контекст, Истина, ЗначенияУП);				
		
	КонецЕсли;
				
	Таб.Колонки.Удалить("ОстатокНСБУ");
	Таб.Колонки.Удалить("ОстатокМСФО");
	
	Таб.Колонки.РасшифровкаНСБУ.Имя = "ОстатокНСБУ";
	Таб.Колонки.РасшифровкаМСФО.Имя = "ОстатокМСФО";
	
	ТабДок = Новый ТабличныйДокумент;
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(Таб);
	
	Для каждого ТекКолонка Из Построитель.ИсточникДанных.Колонки Цикл
		КолонкаИсточник = Таб.Колонки.Найти(ТекКолонка.Имя);
		Если КолонкаИсточник = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		
		Если КолонкаИсточник.ТипЗначения.СодержитТип(Тип("Число")) Тогда
			ТекКолонка.Итог = СтрШаблон("СУММА(%1)", ТекКолонка.Имя);
		Иначе 
			ТекКолонка.Измерение = Истина;
		КонецЕсли;
		
	КонецЦикла;
		
	Построитель.ОформитьМакет();
	
	Построитель.ЗаполнитьНастройки();
	
	Построитель.ИзмеренияСтроки.Очистить();
	Построитель.ИзмеренияСтроки.Добавить("ВидОтложенногоНалога");
	
	Для каждого ТекПоле Из Построитель.ВыбранныеПоля Цикл
	
		ТекКолонка = Таб.Колонки.Найти(ТекПоле.Имя);
		Если ТекКолонка = Неопределено Тогда
			Продолжить;	
		КонецЕсли;
		
		ТекПоле.Представление = ТекКолонка.Заголовок;
	
	КонецЦикла;
	
	Построитель.Выполнить();
	Построитель.Вывести(ТабДок);
	
	Возврат Новый Структура("ТабДок,Заголовок", ТабДок, ЗаголовокОтчета);
	
КонецФункции

#КонецОбласти
