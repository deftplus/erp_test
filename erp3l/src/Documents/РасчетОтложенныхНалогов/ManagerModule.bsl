
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	ДопРеквизиты = "ПериодОтчета, ДатаНачала, ДатаОкончания, РегламентированнаяОрганизация, ВидОтчета";
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, ДопРеквизиты, "ПериодОтчета", Отказ);
	Реквизиты.Вставить("Период",					КонецДня(Реквизиты.ПериодОтчета.ДатаОкончания));
	Реквизиты.Вставить("ДатаНачалаСледующегоПериода", НачалоДня(ОбщегоНазначенияУХ.ДобавитьДень(Реквизиты.Период, 1)));
		
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
 	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",		Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("ДатаНачала",		Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",	КонецДня(Реквизиты.ДатаОкончания));
	Запрос.УстановитьПараметр("РегламентированнаяОрганизация",		Реквизиты.РегламентированнаяОрганизация);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаДляПроводок(НомераТаблиц);
	
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапросаТаблицаДляПроводок(НомераТаблиц)
	
	НомераТаблиц.Вставить("втТаблицаРасчета", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втТаблицаПроводки", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втТаблицаПроводкиСторно",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втРасчетныеДанные", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втВидыДвижений", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПроводок", 			НомераТаблиц.Количество());
			
    ТекстЗапроса =	
	"ВЫБРАТЬ
	|	ТаблицаРасчет.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|	ТаблицаРасчет.ОстатокНСБУ КАК ОстатокНСБУ,
	|	ТаблицаРасчет.ОстатокМСФО КАК ОстатокМСФО,
	|	ТаблицаРасчет.Разница КАК Разница,
	|	ТаблицаРасчет.СуммаОНО КАК СуммаОНО,
	|	ТаблицаРасчет.СуммаОНА КАК СуммаОНА,
	|	ТаблицаРасчет.СуммаПНО КАК СуммаПНО,
	|	ТаблицаРасчет.СуммаПНА КАК СуммаПНА
	|ПОМЕСТИТЬ втТаблицаРасчета
	|ИЗ
	|	Документ.РасчетОтложенныхНалогов.РасчетОтложенныхНалогов КАК ТаблицаРасчет
	|ГДЕ
	|	ТаблицаРасчет.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаРасчета.ВидОтложенногоНалога.СчетОтражения КАК СчетДт,
	|	NULL КАК СубконтоДт1,
	|	СчетФикс.Счет КАК СчетКт,
	|	втТаблицаРасчета.ВидОтложенногоНалога КАК СубконтоКт1,
	|	втТаблицаРасчета.СуммаОНО КАК Значение,
	|	""ОНО"" КАК Комментарий
	|ПОМЕСТИТЬ втТаблицаПроводки
	|ИЗ
	|	втТаблицаРасчета КАК втТаблицаРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетФикс
	|		ПО (СчетФикс.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ОтложенноеНалоговоеОбязательство))
	|ГДЕ
	|	втТаблицаРасчета.СуммаОНО <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФикс.Счет,
	|	втТаблицаРасчета.ВидОтложенногоНалога,
	|	втТаблицаРасчета.ВидОтложенногоНалога.СчетОтражения,
	|	NULL,
	|	втТаблицаРасчета.СуммаОНА,
	|	""ОНА""
	|ИЗ
	|	втТаблицаРасчета КАК втТаблицаРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетФикс
	|		ПО (СчетФикс.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ОтложенныйНалоговыйАктив))
	|ГДЕ
	|	втТаблицаРасчета.СуммаОНА <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаРасчета.ВидОтложенногоНалога.СчетОтражения,
	|	NULL,
	|	СчетФикс.Счет,
	|	втТаблицаРасчета.ВидОтложенногоНалога,
	|	втТаблицаРасчета.СуммаПНО,
	|	""ПНО""
	|ИЗ
	|	втТаблицаРасчета КАК втТаблицаРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетФикс
	|		ПО (СчетФикс.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ПостоянноеНалоговоеОбязательство))
	|ГДЕ
	|	втТаблицаРасчета.СуммаПНО <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФикс.Счет,
	|	втТаблицаРасчета.ВидОтложенногоНалога,
	|	втТаблицаРасчета.ВидОтложенногоНалога.СчетОтражения,
	|	NULL,
	|	втТаблицаРасчета.СуммаПНА,
	|	""ПНА""
	|ИЗ
	|	втТаблицаРасчета КАК втТаблицаРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетФикс
	|		ПО (СчетФикс.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ПостоянныйНалоговыйАктив))
	|ГДЕ
	|	втТаблицаРасчета.СуммаПНА <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеДанныеОН.СчетДт КАК СчетДт,
	|	РасчетныеДанныеОН.СубконтоДт1 КАК СубконтоДт1,
	|	РасчетныеДанныеОН.СубконтоДт2 КАК СубконтоДт2,
	|	РасчетныеДанныеОН.СубконтоДт3 КАК СубконтоДт3,
	|	РасчетныеДанныеОН.СчетКт КАК СчетКт,
	|	РасчетныеДанныеОН.СубконтоКт1 КАК СубконтоКт1,
	|	РасчетныеДанныеОН.СубконтоКт2 КАК СубконтоКт2,
	|	РасчетныеДанныеОН.СубконтоКт3 КАК СубконтоКт3,
	|	РасчетныеДанныеОН.Значение КАК Значение,
	|	РасчетныеДанныеОН.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ втТаблицаПроводкиСторно
	|ИЗ
	|	РегистрСведений.РасчетныеДанныеОН КАК РасчетныеДанныеОН
	|ГДЕ
	|	РасчетныеДанныеОН.Организация = &Организация
	|	И РасчетныеДанныеОН.Сценарий = &Сценарий
	|	И РасчетныеДанныеОН.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаДвижений.СчетДт КАК СчетДт,
	|	СчетаДвижений.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		втТаблицаПроводки.СчетДт КАК СчетДт,
	|		втТаблицаПроводки.СчетКт КАК СчетКт
	|	ИЗ
	|		втТаблицаПроводки КАК втТаблицаПроводки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втТаблицаПроводкиСторно.СчетДт,
	|		втТаблицаПроводкиСторно.СчетКт
	|	ИЗ
	|		втТаблицаПроводкиСторно КАК втТаблицаПроводкиСторно) КАК СчетаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаПроводки.СчетДт КАК СчетДт,
	|	втТаблицаПроводки.СубконтоДт1 КАК СубконтоДт1,
	|	NULL КАК СубконтоДт2,
	|	NULL КАК СубконтоДт3,
	|	втТаблицаПроводки.СчетКт КАК СчетКт,
	|	втТаблицаПроводки.СубконтоКт1 КАК СубконтоКт1,
	|	NULL КАК СубконтоКт2,
	|	NULL КАК СубконтоКт3,
	|	втТаблицаПроводки.Значение КАК СуммаВФункциональнойВалюте,
	|	втТаблицаПроводки.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА &РегламентированнаяОрганизация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций._04РасчетОтложенныхНалогов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РасчетОтложенныхНалоговКонсолидация)
	|	КОНЕЦ КАК ВидОперации
	|ИЗ
	|	втТаблицаПроводки КАК втТаблицаПроводки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втТаблицаПроводки.СчетДт = втВидыДвижений.СчетДт
	|			И втТаблицаПроводки.СчетКт = втВидыДвижений.СчетКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаПроводкиСторно.СчетДт,
	|	втТаблицаПроводкиСторно.СубконтоДт1,
	|	втТаблицаПроводкиСторно.СубконтоДт2,
	|	втТаблицаПроводкиСторно.СубконтоДт3,
	|	втТаблицаПроводкиСторно.СчетКт,
	|	втТаблицаПроводкиСторно.СубконтоКт1,
	|	втТаблицаПроводкиСторно.СубконтоКт2,
	|	втТаблицаПроводкиСторно.СубконтоКт3,
	|	втТаблицаПроводкиСторно.Значение,
	|	втТаблицаПроводкиСторно.Комментарий,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СторноРасчетаОтложенныхНалогов)
	|ИЗ
	|	втТаблицаПроводкиСторно КАК втТаблицаПроводкиСторно
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втТаблицаПроводкиСторно.СчетДт = втВидыДвижений.СчетДт
	|			И втТаблицаПроводкиСторно.СчетКт = втВидыДвижений.СчетКт";

	Документы.УчетнаяПолитикаМСФО.ЗаменитьФиксированныеСчетаУчетаБД(ТекстЗапроса);
		
	Возврат ТекстЗапроса;

КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	ТаблицаПроводок	= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводок;
	Реквизиты 		= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	
	РасчетныеДанныеОН = Движения.РасчетныеДанныеОН;
	НомерОперации = 1;
	Для каждого СтрокаПроводка Из ТаблицаПроводок Цикл
		
		Если СтрокаПроводка.ВидОперации = ПредопределенноеЗначение("Справочник.ВидыОпераций.СторноРасчетаОтложенныхНалогов") Тогда
			Продолжить; //не сторнируем проводку сторно операции предыдущего периода
		КонецЕсли;
		
		Движение = РасчетныеДанныеОН.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,СтрокаПроводка);
		
		Движение.Значение 	= - СтрокаПроводка.СуммаВФункциональнойВалюте;
		
		Движение.НомерОперации 	= НомерОперации;
		Движение.Организация 	= Реквизиты.Организация;
		Движение.Сценарий 		= Реквизиты.Сценарий;
		Движение.Период 		= Реквизиты.ДатаНачалаСледующегоПериода;
		
		НомерОперации = НомерОперации + 1;
	
	КонецЦикла;

	РасчетныеДанныеОН.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

Процедура ЗаполнитьДокумент(ДокументОбъект) Экспорт
	
	ЗначенияУП = ЗначенияУП(ДокументОбъект);
		
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСуммыОН");
	СтруктураДействий.Вставить("ЗаполнитьРазницу");
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("ВидСчетаПассивный", 	Перечисления.ВидыСчетовБД.Пассивный);
	КэшированныеЗначения.Вставить("ВидРазницыПР", 		Перечисления.ВидыРазниц.ПР);
 	КэшированныеЗначения.Вставить("СтавкаНалога", 		ЗначенияУП.СтавкаОтложенногоНалога);

	Организация = ДокументОбъект.Организация;
	
	Если ЗначенияУП.ЭлиминирующаяОрганизация Тогда
		ТабОтложенныеНалоги = ПолучитьОтложенныеНалогиТКПоЭлиминирующей(ДокументОбъект, Ложь, ЗначенияУП);
	ИначеЕсли ЗначенияУП.ФормироватьПроводкиМСФО Тогда
		ТабОтложенныеНалоги = ПолучитьОтложенныеНалогиТУ(ДокументОбъект, Ложь, ЗначенияУП);
	Иначе
		ТабОтложенныеНалоги = ПолучитьОтложенныеНалогиТКПоИндивидуальной(ДокументОбъект, Ложь, ЗначенияУП);
	КонецЕсли;
	
	ДокументОбъект.РасчетОтложенныхНалогов.Очистить();
	
	Для Каждого СтрокаТаб Из ТабОтложенныеНалоги Цикл

		ТекущаяСтрока = ДокументОбъект.РасчетОтложенныхНалогов.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТаб);
		
		ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
	КонецЦикла;

КонецПроцедуры

Функция ЗначенияУП(ДокументОбъект, ЗначенияУП = Неопределено) Экспорт
	
	Если ЗначенияУП <> Неопределено Тогда
		Возврат ЗначенияУП;
	КонецЕсли;
	
	ДатаОкончания = ДокументОбъект.ПериодОтчета.ДатаОкончания;	
	
	ИменаУП = "ЭлиминирующаяОрганизация, СтавкаОтложенногоНалога, ФормироватьПроводкиМСФО, 
				|ФункциональнаяВалюта, ВалютаПредоставленияОтчетности, ПланСчетовМСФО";
	ПутиУП = МСФОВызовСервераУХ.ПутиРеквизитовУП(ИменаУП);
	
	ТабУП = МСФОВызовСервераУХ.ЗначенияУП(ПутиУП, ДокументОбъект.Организация, ДатаОкончания, ДокументОбъект.Сценарий);
	Возврат МСФОВызовСервераУХ.ЗначенияПоОрганизацииУП(ТабУП);

КонецФункции

Функция ПолучитьОтложенныеНалогиТУ(ДокументОбъект, ДляОтображения = Ложь, ЗначенияУП = Неопределено) Экспорт

	// Заполним таблицу остатков для первоначального разнесения
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаБД.Ссылка КАК СчетБД,
	|	СчетаБД.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|	СчетаБД.СчетСсылка КАК Счет
	|ПОМЕСТИТЬ втСчетаБД
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.ВидОтложенногоНалога <> ЗНАЧЕНИЕ(Справочник.ВидыВременныхРазниц.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МСФООстатки.СуммаВВалютеУчетаОстаток КАК Остаток,
	|	МСФООстатки.Счет КАК Счет
	|ПОМЕСТИТЬ ОстаткиМСФО
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаБД КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация) КАК МСФООстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Остаток,
	|	ХозрасчетныйОстатки.Счет КАК Счет
	|ПОМЕСТИТЬ ОстаткиНСБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаБД КАК т),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Свод.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|	СУММА(Свод.ОстатокМСФО) КАК РасшифровкаМСФО,
	|	СУММА(Свод.ОстатокНСБУ) КАК РасшифровкаНСБУ,
	|	ВЫБОР
	|		КОГДА СУММА(Свод.ОстатокМСФО) >= 0
	|			ТОГДА СУММА(Свод.ОстатокМСФО)
	|		ИНАЧЕ -СУММА(Свод.ОстатокМСФО)
	|	КОНЕЦ КАК ОстатокМСФО,
	|	ВЫБОР
	|		КОГДА СУММА(Свод.ОстатокНСБУ) >= 0
	|			ТОГДА СУММА(Свод.ОстатокНСБУ)
	|		ИНАЧЕ -СУММА(Свод.ОстатокНСБУ)
	|	КОНЕЦ КАК ОстатокНСБУ,
	|	ВЫБОР
	|		КОГДА &ДляОтображения
	|			ТОГДА Свод.Счет
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Счет,
	|	ВЫБОР
	|		КОГДА &ДляОтображения
	|			ТОГДА Свод.СчетБД
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СчетБД
	|ПОМЕСТИТЬ СуммыОН
	|ИЗ
	|	(ВЫБРАТЬ
	|		втСчетаБД.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|		ОстаткиМСФО.Счет КАК Счет,
	|		втСчетаБД.СчетБД КАК СчетБД,
	|		ЕСТЬNULL(ОстаткиМСФО.Остаток, 0) КАК ОстатокМСФО,
	|		0 КАК ОстатокНСБУ
	|	ИЗ
	|		ОстаткиМСФО КАК ОстаткиМСФО
	|			ЛЕВОЕ СОЕДИНЕНИЕ втСчетаБД КАК втСчетаБД
	|			ПО ОстаткиМСФО.Счет = втСчетаБД.Счет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втСчетаБД.ВидОтложенногоНалога,
	|		ОстаткиНСБУ.Счет,
	|		втСчетаБД.СчетБД,
	|		0,
	|		ЕСТЬNULL(ОстаткиНСБУ.Остаток, 0)
	|	ИЗ
	|		ОстаткиНСБУ КАК ОстаткиНСБУ
	|			ЛЕВОЕ СОЕДИНЕНИЕ втСчетаБД КАК втСчетаБД
	|			ПО ОстаткиНСБУ.Счет = втСчетаБД.Счет) КАК Свод
	|
	|СГРУППИРОВАТЬ ПО
	|	Свод.ВидОтложенногоНалога,
	|	ВЫБОР
	|		КОГДА &ДляОтображения
	|			ТОГДА Свод.Счет
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДляОтображения
	|			ТОГДА Свод.СчетБД
	|		ИНАЧЕ NULL
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыОН.ВидОтложенногоНалога КАК ВидОтложенногоНалога,
	|	СуммыОН.СчетБД КАК СчетБД,
	|	СуммыОН.Счет КАК Счет,
	|	СуммыОН.ОстатокМСФО КАК ОстатокМСФО,
	|	СуммыОН.ОстатокНСБУ КАК ОстатокНСБУ,
	|	СуммыОН.ОстатокМСФО - СуммыОН.ОстатокНСБУ КАК Разница,
	|	(СуммыОН.ОстатокМСФО - СуммыОН.ОстатокНСБУ) * ЕСТЬNULL(&СтавкаОтложенногоНалога, 0) / 100 КАК СуммаОН,
	|	&СтавкаОтложенногоНалога КАК Ставка,
	|	СуммыОН.РасшифровкаМСФО КАК РасшифровкаМСФО,
	|	СуммыОН.РасшифровкаНСБУ КАК РасшифровкаНСБУ
	|ИЗ
	|	СуммыОН КАК СуммыОН";
	
	ЗначенияУП = ЗначенияУП(ДокументОбъект, ЗначенияУП);
	
	ДатаКонцаПериода = КонецДня(ДокументОбъект.ПериодОтчета.ДатаОкончания);
	ДатаНачалаПериода = НачалоДня(ДокументОбъект.ПериодОтчета.ДатаНачала);
	
	Запрос.УстановитьПараметр("НачалоПериода", 				ДатаНачалаПериода);
	Запрос.УстановитьПараметр("КонецПериода", 				Новый Граница(ДатаКонцаПериода+1, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", 				ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Сценарий", 					ДокументОбъект.Сценарий);
	Запрос.УстановитьПараметр("ПериодСценария", 			ДокументОбъект.ПериодОтчета);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 		ЗначенияУП.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("СтавкаОтложенногоНалога", 	ЗначенияУП.СтавкаОтложенногоНалога);
	Запрос.УстановитьПараметр("ДляОтображения", 			ДляОтображения);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьОтложенныеНалогиТКПоИндивидуальной(ДокументОбъект, ДляОтображения = Ложь, ЗначенияУП = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	ЗначенияУП = ЗначенияУП(ДокументОбъект, ЗначенияУП);

	ГраницаКонецПериода = Новый Граница(КонецДня(ДокументОбъект.ПериодОтчета.ДатаОкончания), ВидГраницы.Включая);
	
	МасВидИтогаПоСчету = Новый Массив;
	МасВидИтогаПоСчету.Добавить(Перечисления.ВидыБухгалтерскихИтогов.СКД);
	МасВидИтогаПоСчету.Добавить(Перечисления.ВидыБухгалтерскихИтогов.СКК);
	ВидИтогаКт = Перечисления.ВидыБухгалтерскихИтогов.СКК;
	ВидСчетаБДПассивный = Перечисления.ВидыСчетовБД.Пассивный;	
	
	//ЧА на конец ПериодаОтчета
	ОтборВерсий = Новый Структура;
	ОтборВерсий.Вставить("Организация",		ДокументОбъект.Организация);
	ОтборВерсий.Вставить("Сценарий", 		ДокументОбъект.Сценарий);
	ОтборВерсий.Вставить("ПериодОтчета", 	ДокументОбъект.ПериодОтчета);
	ОтборВерсий.Вставить("Валюта", 			ЗначенияУП.ФункциональнаяВалюта);
	ОтборВерсий.Вставить("ПланСчетовБД", 	ЗначенияУП.ПланСчетовМСФО);
	
	ОтборПоказателей = Новый Соответствие;
	ОтборПоказателей.Вставить("СчетБД.ВидОтложенногоНалога", 	ПолучитьУсловиеОтбораОН());
	ОтборПоказателей.Вставить("ВидИтогаПоСчету",				МасВидИтогаПоСчету);
	ОтборПоказателей.Вставить("СчетБД.ГруппирующийСчет",		Ложь);
	
	ПоляВыборки = Новый Соответствие;
	ПоляВыборки.Вставить("ВидОтложенногоНалога", 		"СчетБД.ВидОтложенногоНалога");
	ПоляВыборки.Вставить("ВидСчетаОтложенногоНалога", 	"СчетБД.ВидОтложенногоНалога.ВидСчета");
	ПоляВыборки.Вставить("СчетБД", 						"СчетБД");
	ПоляВыборки.Вставить("ВидСчетаБД", 					"СчетБД.Вид");
	ПоляВыборки.Вставить("ТипРегистратораВСписке", 		"ТипРегистратораВСписке");
	ПоляВыборки.Вставить("ВидИтогаПоСчету", 			"ВидИтогаПоСчету");
	ПоляВыборки.Вставить("Значение", 					"Значение");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПолучитьТолькоСинтетику", Истина);
	
	Запрос = Справочники.ВидыОтчетов.ПолучитьЗапросТаблицыЗначенийПоказателей(
										ОтборВерсий, 
										ОтборПоказателей, 
										Неопределено, 
										ПоляВыборки,
										ДополнительныеПараметры);
										
	Запрос.УстановитьПараметр("ТипРегистратора", Тип("ДокументСсылка.Трансляция"));
	
	ТабИсточник = Запрос.Выполнить().Выгрузить();
	
	отЧисло = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,2);
	ТабИсточник.Колонки.Добавить("ОстатокНСБУ", отЧисло);
	ТабИсточник.Колонки.Добавить("ОстатокМСФО", отЧисло);
	ТабИсточник.Колонки.Добавить("РасшифровкаНСБУ", отЧисло);
	ТабИсточник.Колонки.Добавить("РасшифровкаМСФО", отЧисло);
	
	Для каждого СтрокаТаб Из ТабИсточник Цикл
		
		ЗначениеСтроки = ?(СтрокаТаб.ВидИтогаПоСчету = ВидИтогаКт, -СтрокаТаб.Значение, СтрокаТаб.Значение);
		
		Если СтрокаТаб.ТипРегистратораВСписке Тогда
			СтрокаТаб.ОстатокНСБУ = ЗначениеСтроки;
			СтрокаТаб.ОстатокМСФО = ЗначениеСтроки;
		Иначе
			СтрокаТаб.ОстатокНСБУ = 0;
			СтрокаТаб.ОстатокМСФО = ЗначениеСтроки;		
		КонецЕсли;
		
		СтрокаТаб.РасшифровкаНСБУ = СтрокаТаб.ОстатокНСБУ;
		СтрокаТаб.РасшифровкаМСФО = СтрокаТаб.ОстатокМСФО;	
		
	КонецЦикла;
	
	Если ДляОтображения = Истина Тогда
		ТабИсточник.Свернуть("ВидОтложенногоНалога,СчетБД,ТипРегистратораВСписке", "ОстатокНСБУ,ОстатокМСФО,РасшифровкаНСБУ,РасшифровкаМСФО");
		ТабИсточник.Колонки.ТипРегистратораВСписке.Имя = "ВерсияНСБУ";
		Возврат ТабИсточник;
	КонецЕсли;
	
	ТабИсточник.Свернуть("ВидОтложенногоНалога", "ОстатокНСБУ,ОстатокМСФО,РасшифровкаНСБУ,РасшифровкаМСФО");
	
	Для каждого СтрокаТаб Из ТабИсточник Цикл
		
		Если СтрокаТаб.ОстатокНСБУ < 0 Тогда
			СтрокаТаб.ОстатокНСБУ = - СтрокаТаб.ОстатокНСБУ;
		КонецЕсли;
		
		Если СтрокаТаб.ОстатокМСФО < 0 Тогда
			СтрокаТаб.ОстатокМСФО = - СтрокаТаб.ОстатокМСФО;
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат ТабИсточник;
	
КонецФункции

Функция ПолучитьОтложенныеНалогиТКПоЭлиминирующей(ДокументОбъект, ДляОтображения = Ложь, ЗначенияУП = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	ЗначенияУП = ЗначенияУП(ДокументОбъект, ЗначенияУП);
	
	ГраницаКонецПериода = Новый Граница(КонецДня(ДокументОбъект.ПериодОтчета.ДатаОкончания), ВидГраницы.Включая);
														
	МасВидИтогаПоСчету = Новый Массив;
	МасВидИтогаПоСчету.Добавить(Перечисления.ВидыБухгалтерскихИтогов.СКД);
	МасВидИтогаПоСчету.Добавить(Перечисления.ВидыБухгалтерскихИтогов.СКК);
	ВидИтогаКт = Перечисления.ВидыБухгалтерскихИтогов.СКК;
	ВидСчетаБДПассивный = Перечисления.ВидыСчетовБД.Пассивный;
														
	//ЧА на конец ПериодаОтчета
	ОтборВерсий = Новый Структура;
	ОтборВерсий.Вставить("Организация", 	ДокументОбъект.Организация);
	ОтборВерсий.Вставить("Сценарий", 		ДокументОбъект.Сценарий);
	ОтборВерсий.Вставить("ПериодОтчета", 	ДокументОбъект.ПериодОтчета);
	ОтборВерсий.Вставить("Валюта", 			ЗначенияУП.ВалютаПредоставленияОтчетности);
	ОтборВерсий.Вставить("ПланСчетовБД", 	ЗначенияУП.ПланСчетовМСФО);
	
	УсловиеОН = Новый Структура("Значение", Справочники.ВидыВременныхРазниц.ПустаяСсылка());
	
	ОтборПоказателей = Новый Соответствие;
	ОтборПоказателей.Вставить("СчетБД.ВидОтложенногоНалога",	ПолучитьУсловиеОтбораОН());	
	ОтборПоказателей.Вставить("ВидИтогаПоСчету",				МасВидИтогаПоСчету);
	ОтборПоказателей.Вставить("СчетБД.ГруппирующийСчет",		Ложь);
	
	ПоляВыборки = Новый Соответствие;
	ПоляВыборки.Вставить("ВидОтложенногоНалога", 		"СчетБД.ВидОтложенногоНалога");
	ПоляВыборки.Вставить("ВидСчетаОтложенногоНалога",	"СчетБД.ВидОтложенногоНалога.ВидСчета");
	ПоляВыборки.Вставить("СчетБД", 						"СчетБД");
	ПоляВыборки.Вставить("ВидСчетаБД", 					"СчетБД.Вид");
	ПоляВыборки.Вставить("ВерсияЭкземпляра", 			"ВерсияЭкземпляра");
	ПоляВыборки.Вставить("ВидИтогаПоСчету", 			"ВидИтогаПоСчету");
	ПоляВыборки.Вставить("Значение", 					"Значение");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПолучитьТолькоСинтетику", Истина);
	
	Запрос = Справочники.ВидыОтчетов.ПолучитьЗапросТаблицыЗначенийПоказателей(
											ОтборВерсий, 
											ОтборПоказателей, 
											Неопределено,
											ПоляВыборки, 
											ДополнительныеПараметры);
											
	ТабИсточник = Запрос.Выполнить().Выгрузить();
	
	отЧисло = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,2);
	ТабИсточник.Колонки.Добавить("ОстатокНСБУ", отЧисло);
	ТабИсточник.Колонки.Добавить("ОстатокМСФО", отЧисло);
	ТабИсточник.Колонки.Добавить("РасшифровкаНСБУ", отЧисло);
	ТабИсточник.Колонки.Добавить("РасшифровкаМСФО", отЧисло);
	
	Для каждого СтрокаТаб Из ТабИсточник Цикл
		
	 	ЗначениеСтроки = ?(СтрокаТаб.ВидИтогаПоСчету = ВидИтогаКт, -СтрокаТаб.Значение, СтрокаТаб.Значение);
		
		СтрокаТаб.ОстатокНСБУ = 0;
		СтрокаТаб.ОстатокМСФО = ЗначениеСтроки;
		СтрокаТаб.РасшифровкаНСБУ = 0;
		СтрокаТаб.РасшифровкаМСФО = ЗначениеСтроки;
		
	КонецЦикла;	
	
	Если ДляОтображения = Истина Тогда
		
		ТабИсточник.Свернуть("ВидОтложенногоНалога,СчетБД,ВерсияЭкземпляра", "ОстатокНСБУ,ОстатокМСФО,РасшифровкаНСБУ,РасшифровкаМСФО");
		ТабИсточник.Колонки.ВерсияЭкземпляра.Имя = "ВерсияДоКонсолидации";
		
		ТабИсточник.Колонки.РасшифровкаНСБУ.Заголовок = НСтр("ru = 'Консолидация до корректировок'");
		ТабИсточник.Колонки.РасшифровкаМСФО.Заголовок = НСтр("ru = 'Консолидация после корректировок'");
		
		Возврат ТабИсточник;
		
	КонецЕсли;

	ТабИсточник.Свернуть("ВидОтложенногоНалога", "ОстатокНСБУ,ОстатокМСФО,РасшифровкаНСБУ,РасшифровкаМСФО");
	
	Для каждого СтрокаТаб Из ТабИсточник Цикл
		
		Если СтрокаТаб.ОстатокНСБУ < 0 Тогда
			СтрокаТаб.ОстатокНСБУ = - СтрокаТаб.ОстатокНСБУ;
		КонецЕсли;
		
		Если СтрокаТаб.ОстатокМСФО < 0 Тогда
			СтрокаТаб.ОстатокМСФО = - СтрокаТаб.ОстатокМСФО;
		КонецЕсли;
		
	КонецЦикла;

	Возврат ТабИсточник;
	
КонецФункции

Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения = Неопределено) Экспорт
	
	Перем СтавкаНалога;
	
	Если СтруктураДействий.Свойство("ЗаполнитьРазницу") Тогда
		ТекущаяСтрока.Разница = ТекущаяСтрока.ОстатокМСФО - ТекущаяСтрока.ОстатокНСБУ;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСуммыОН") Тогда
		
		ВидСчетаПассивный = КэшированныеЗначения.ВидСчетаПассивный;
		ВидРазницыПР = КэшированныеЗначения.ВидРазницыПР;
		
		Если КэшированныеЗначения.Свойство("СтавкаНалога", СтавкаНалога) Тогда
			СуммаОН = ТекущаяСтрока.Разница * СтавкаНалога / 100;
		Иначе
			СуммаОН = ТекущаяСтрока.СуммаОН;
		КонецЕсли;
		
		Если ТекущаяСтрока.ВидОтложенногоНалога.ВидСчета = ВидСчетаПассивный Тогда
			
			// Обязательство
			Если СуммаОН < 0 Тогда
				СуммаНА = 0;
				СуммаНО = -СуммаОН;
			Иначе
				СуммаНА = СуммаОН;
				СуммаНО = 0;
			КонецЕсли;
			
		Иначе
			
			// Актив
			Если СуммаОН < 0 Тогда
				СуммаНА = - СуммаОН;
				СуммаНО = 0;
			Иначе
				СуммаНА = 0;
				СуммаНО = СуммаОН;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТекущаяСтрока.ВидОтложенногоНалога.ВидРазницы = ВидРазницыПР Тогда
			ТекущаяСтрока.СуммаПНО = СуммаНО;
			ТекущаяСтрока.СуммаПНА = СуммаНА;
		Иначе
			ТекущаяСтрока.СуммаОНО = СуммаНО;
			ТекущаяСтрока.СуммаОНА = СуммаНА;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьУсловиеОтбораОН()

	Мас = Новый СписокЗначений;
	Мас.Добавить(Справочники.ВидыВременныхРазниц.ПустаяСсылка());
		
	Возврат Новый Структура("Значение,ВидСравнения", Мас, ВидСравнения.НеВСписке);

КонецФункции

#КонецОбласти

#КонецЕсли