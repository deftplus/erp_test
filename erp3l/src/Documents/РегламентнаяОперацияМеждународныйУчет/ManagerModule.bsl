#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьМеждународныйФинансовыйУчет";
	КонецЕсли;
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код команд
	
КонецПроцедуры

// Определяет количество всех валютных остатков для которых не расчитаны курсовые разницы.
// (ОстатокВВалюте*КурсФункциональнойВалюты <> ОстатокВфункциональнойВалюте).
//
// Параметры:
//  ПланСчетов - СправочникСсылка.ПланыСчетовМеждународногоУчета - План счетов, по которому отбираются валютные остатки.
//  Организации - Массив Из СправочникСсылка.Организации -
//              - СправочникСсылка.Организации - Отбор организаций, по которым определяются валютные остатки.
//  НаДату - Дата - Дата, на которую определяются остатки и курс функциональной валюты. Если не задана, то текущая.
//  ТолькоПервую - Булево - Истина, если нужно проверить только факт отсутствия необходимости расчета курсовых разниц.
//
// Возвращаемое значение:
//  Число - количество остатков, у которых есть расхождения между расчетными и реальными остатками в функциональной валюте.
//
Функция НезакрытыеКурсовыеРазницы(ПланСчетов, Организации, Знач НаДату = Неопределено, ТолькоПервую = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОтносительныеКурсыВалют.БазоваяВалюта КАК БазоваяВалюта,
	|	ОтносительныеКурсыВалют.Валюта КАК Валюта,
	|	ОтносительныеКурсыВалют.КурсЧислитель КАК КурсЧислитель,
	|	ОтносительныеКурсыВалют.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсыВалюты
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(
	|			&НаДату,
	|			БазоваяВалюта В (
	|				ВЫБРАТЬ
	|					Организации.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|				ИЗ
	|					Справочник.Организации КАК Организации
	|				ГДЕ
	|					Организации.Ссылка В (&Организации))) КАК ОтносительныеКурсыВалют
	|ИНДЕКСИРОВАТЬ ПО
	|	БазоваяВалюта,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.ПланСчетов,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(МеждународныйОстатки.СуммаРазвернутыйОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(МеждународныйОстатки.СуммаРазвернутыйОстатокКт) КАК СуммаОстатокКт,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток
	|ПОМЕСТИТЬ втОстаткиСчетов
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			Счет.Валютный И НЕ Счет.ИсключитьИзРасчетаКурсовыхРазниц,
	|			,
	|			ПланСчетов = &ПланСчетов И Организация В (&Организации)) КАК МеждународныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто1
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто1.Ссылка
	|			И (МеждународныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто2
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто2.Ссылка
	|			И (МеждународныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто3
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто3.Ссылка
	|			И (МеждународныйВидыСубконто3.НомерСтроки = 3)
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	МеждународныйОстатки.ПланСчетов,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОстаткиСчетов.Счет,
	|	ОстаткиСчетов.Валюта КАК Валюта,
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.ВалютнаяСуммаОстаток 
	|		* КурсыВалюты.КурсЧислитель 
	|		/ КурсыВалюты.КурсЗнаменатель 
	|		/ КурсыВалютыФункциональной.КурсЧислитель 
	|		* КурсыВалютыФункциональной.КурсЗнаменатель КАК ЧИСЛО(31,2))) - ОстаткиСчетов.СуммаОстаток КАК КурсоваяРазница,
	|	ОстаткиСчетов.ПланСчетов,
	|	ОстаткиСчетов.Организация,
	|	ОстаткиСчетов.Подразделение,
	|	ОстаткиСчетов.НаправлениеДеятельности,
	|	ОстаткиСчетов.Субконто1,
	|	ОстаткиСчетов.Субконто2,
	|	ОстаткиСчетов.Субконто3
	|ИЗ
	|	втОстаткиСчетов КАК ОстаткиСчетов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втКурсыВалюты КАК КурсыВалюты
	|	ПО
	|		ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалюты.БазоваяВалюта
	|		И ОстаткиСчетов.Валюта = КурсыВалюты.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втКурсыВалюты КАК КурсыВалютыФункциональной
	|	ПО
	|		ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалютыФункциональной.БазоваяВалюта
	|		И ВЫБОР 
	|			КОГДА ОстаткиСчетов.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл)
	|				ТОГДА ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалютыФункциональной.Валюта
	|			ИНАЧЕ &ВалютаУправленческогоУчета = КурсыВалютыФункциональной.Валюта
	|		КОНЕЦ
	|
	|ГДЕ
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.ВалютнаяСуммаОстаток 
	|		* КурсыВалюты.КурсЧислитель 
	|		/ КурсыВалюты.КурсЗнаменатель 
	|		/ КурсыВалютыФункциональной.КурсЧислитель 
	|		* КурсыВалютыФункциональной.КурсЗнаменатель КАК ЧИСЛО(31,2))) - ОстаткиСчетов.СуммаОстаток <> 0";
	
	Возврат ВсегоОсталосьКурсовыхРазниц(ТекстЗапроса, ПланСчетов, Организации, НаДату, ТолькоПервую);
	
	
КонецФункции

// Определяет количество всех остатков в функциональной валюте которые не пересчитаны в валюту представления.
// (ОстатокВФункциональнойВалюте*КоэффициентПересчетаВВалютуПредставления <> ОстатокВВалютеПредставления).
//
// Параметры:
//  ПланСчетов - СправочникСсылка.ПланыСчетовМеждународногоУчета - План счетов, по которому отбираются валютные остатки.
//  Организации - Массив Из СправочникСсылка.Организации -
//              - СправочникСсылка.Организации - Отбор организаций, по которым определяются валютные остатки.
//  НаДату - Дата - Дата, на которую определяются остатки и курс функциональной валюты. Если не задана, то текущая.
//  ТолькоПервую - Булево - Истина, если нужно проверить только факт отсутствия необходимости расчета курсовых разниц.
//
// Возвращаемое значение:
//  Число - количество остатков в функциональной валюте у которых есть расхождения между расчетными и реальными
//          остатками в валюте представления.
//
Функция НеПересчитаноВВалютуПредставления(ПланСчетов, Организации, НаДату = Неопределено, ТолькоПервую = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НастройкиНаДату.ПланСчетов КАК ПланСчетов,
	|	НастройкиНаДату.Организация КАК Организация,
	|	НастройкиНаДату.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок,
	|	УчетныеПолитики.ДоходыОтРазницПриПересчетеВП КАК ДоходыКР,
	|	УчетныеПолитики.РасходыОтРазницПриПересчетеВП КАК РасходыКР
	|ПОМЕСТИТЬ втСчетаУчетаКР
	|ИЗ
	|	РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(
	|			&НаДату,
	|			ПланСчетов = &ПланСчетов И Организация В (&Организации)) КАК НастройкиНаДату
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиФормированияПроводокМеждународногоУчета КАК УчетныеПолитики
	|		ПО НастройкиНаДату.НастройкаФормированияПроводок = УчетныеПолитики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсключитьИзПересчетаВП.Счет КАК Счет
	|ПОМЕСТИТЬ втСчетаИсключения
	|ИЗ
	|	Справочник.НастройкиФормированияПроводокМеждународногоУчета.ИсключитьИзПересчетаВП КАК ИсключитьИзПересчетаВП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаУчетаКР.ДоходыКР
	|ИЗ
	|	втСчетаУчетаКР КАК втСчетаУчетаКР
	|ГДЕ
	|	втСчетаУчетаКР.ДоходыКР <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаУчетаКР.РасходыКР
	|ИЗ
	|	втСчетаУчетаКР КАК втСчетаУчетаКР
	|ГДЕ
	|	втСчетаУчетаКР.РасходыКР <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтносительныеКурсыВалют.БазоваяВалюта КАК БазоваяВалюта,
	|	ОтносительныеКурсыВалют.Валюта КАК Валюта,
	|	ОтносительныеКурсыВалют.КурсЧислитель КАК КурсЧислитель,
	|	ОтносительныеКурсыВалют.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсыВалюты
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(
	|			&НаДату,
	|			БазоваяВалюта В (
	|				ВЫБРАТЬ
	|					Организации.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|				ИЗ
	|					Справочник.Организации КАК Организации
	|				ГДЕ
	|					Организации.Ссылка В (&Организации))) КАК ОтносительныеКурсыВалют
	|ИНДЕКСИРОВАТЬ ПО
	|	БазоваяВалюта,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет КАК Счет,
	|	МеждународныйОстатки.ПланСчетов КАК ПланСчетов,
	|	МеждународныйОстатки.Организация КАК Организация,
	|	МеждународныйОстатки.Подразделение КАК Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(МеждународныйОстатки.СуммаПредставленияОстаток) КАК СуммаПредставленияОстаток
	|ПОМЕСТИТЬ втОстаткиСчетов
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			НЕ Счет В (ВЫБРАТЬ Счет ИЗ втСчетаИсключения),
	|			,
	|			ПланСчетов = &ПланСчетов И Организация В (&Организации)) КАК МеждународныйОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаУчетаКР КАК СчетаУчетаКР
	|		ПО МеждународныйОстатки.ПланСчетов = СчетаУчетаКР.ПланСчетов
	|			И МеждународныйОстатки.Организация = СчетаУчетаКР.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто1
	|		ПО (МеждународныйВидыСубконто1.НомерСтроки = 1)
	|			И МеждународныйОстатки.Счет = МеждународныйВидыСубконто1.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто2
	|		ПО (МеждународныйВидыСубконто2.НомерСтроки = 2)
	|			И МеждународныйОстатки.Счет = МеждународныйВидыСубконто2.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто3
	|		ПО (МеждународныйВидыСубконто3.НомерСтроки = 3)
	|			И МеждународныйОстатки.Счет = МеждународныйВидыСубконто3.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	МеждународныйОстатки.ПланСчетов,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОстаткиСчетов.Счет КАК Счет,
	|	ОстаткиСчетов.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(ОстаткиСчетов.СуммаОстаток 
	|		* КурсыВалютыФункциональной.КурсЧислитель
	|		/ КурсыВалютыФункциональной.КурсЗнаменатель 
	|		/ КурсыВалютыПредставления.КурсЧислитель 
	|		* КурсыВалютыПредставления.КурсЗнаменатель КАК ЧИСЛО(31,2)) КАК СуммаВП,
	|	ОстаткиСчетов.СуммаПредставленияОстаток КАК СуммаВПОстаток,
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.СуммаОстаток 
	|		* КурсыВалютыФункциональной.КурсЧислитель 
	|		/ КурсыВалютыФункциональной.КурсЗнаменатель
	|		/ КурсыВалютыПредставления.КурсЧислитель
	|		* КурсыВалютыПредставления.КурсЗнаменатель КАК ЧИСЛО(31,2))) - ОстаткиСчетов.СуммаПредставленияОстаток КАК КурсоваяРазница,
	|	ОстаткиСчетов.ПланСчетов КАК ПланСчетов,
	|	ОстаткиСчетов.Организация КАК Организация,
	|	ОстаткиСчетов.Подразделение КАК Подразделение,
	|	ОстаткиСчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОстаткиСчетов.Субконто1 КАК Субконто1,
	|	ОстаткиСчетов.Субконто2 КАК Субконто2,
	|	ОстаткиСчетов.Субконто3 КАК Субконто3
	|ИЗ
	|	втОстаткиСчетов КАК ОстаткиСчетов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втКурсыВалюты КАК КурсыВалютыПредставления
	|	ПО
	|		ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалютыПредставления.БазоваяВалюта
	|		И ОстаткиСчетов.ПланСчетов.ВалютаПредставления = КурсыВалютыПредставления.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втКурсыВалюты КАК КурсыВалютыФункциональной
	|	ПО
	|		ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалютыФункциональной.БазоваяВалюта
	|		И ВЫБОР 
	|			КОГДА ОстаткиСчетов.ПланСчетов.УчетВФункциональнойВалюте = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл)
	|				ТОГДА ОстаткиСчетов.Организация.ВалютаРегламентированногоУчета = КурсыВалютыФункциональной.Валюта
	|			ИНАЧЕ &ВалютаУправленческогоУчета = КурсыВалютыФункциональной.Валюта
	|		КОНЕЦ
	|ГДЕ
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.СуммаОстаток 
	|		* КурсыВалютыФункциональной.КурсЧислитель 
	|		/ КурсыВалютыФункциональной.КурсЗнаменатель
	|		/ КурсыВалютыПредставления.КурсЧислитель
	|		* КурсыВалютыПредставления.КурсЗнаменатель КАК ЧИСЛО(31,2))) - ОстаткиСчетов.СуммаПредставленияОстаток <> 0";
	
	Возврат ВсегоОсталосьКурсовыхРазниц(ТекстЗапроса, ПланСчетов, Организации, НаДату, ТолькоПервую);
	
КонецФункции

// Определяет количество незакрытых счетов учета доходов и расходов на дату.
// 
// Параметры:
//  ПланСчетов - СправочникСсылка.ПланыСчетовМеждународногоУчета - План счетов, по которому выполняется проверка.
//  Организации - Массив Из СправочникСсылка.Организации -
//              - СправочникСсылка.Организации - Отбор организаций, по которым выполняется проверка.
//  НаДату - Дата - Дата, на которую выполняется проверка. Если не задана, то текущая.
// Возвращаемое значение:
// 	Число - количество незакрытых счетов
Функция ЕстьНезакрытыеСчетаУчетаДоходовРасходов(ПланСчетов, Организации, НаДату = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(НаДату) Тогда
		НаДату = КонецДня(НаДату);
	Иначе
		НаДату = КонецДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НастройкиНаДату.ПланСчетов КАК ПланСчетов,
	|	НастройкиНаДату.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок
	|ПОМЕСТИТЬ втНастройкиФормированияПроводок
	|ИЗ
	|	РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(
	|			&НаДату,
	|			ПланСчетов = &ПланСчетов И Организация В (&Организации)) КАК НастройкиНаДату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ПланСчетов КАК ПланСчетов,
	|	Т.Счет КАК Счет
	|ПОМЕСТИТЬ втСчетаЗакрытия
	|ИЗ
	|	(ВЫБРАТЬ
	|		НастройкиФормированияПроводок.ПланСчетов КАК ПланСчетов,
	|		СчетаДоходов.Счет КАК Счет
	|	ИЗ
	|		втНастройкиФормированияПроводок КАК НастройкиФормированияПроводок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаДоходов КАК СчетаДоходов
	|			ПО НастройкиФормированияПроводок.НастройкаФормированияПроводок = СчетаДоходов.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НастройкиФормированияПроводок.ПланСчетов,
	|		СчетаРасходов.Счет
	|	ИЗ
	|		втНастройкиФормированияПроводок КАК НастройкиФормированияПроводок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаРасходов КАК СчетаРасходов
	|			ПО НастройкиФормированияПроводок.НастройкаФормированияПроводок = СчетаРасходов.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НастройкиФормированияПроводок.ПланСчетов,
	|		СчетаПрибылейУбытков.Счет
	|	ИЗ
	|		втНастройкиФормированияПроводок КАК НастройкиФормированияПроводок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаПрибылейУбытков КАК СчетаПрибылейУбытков
	|			ПО НастройкиФормированияПроводок.НастройкаФормированияПроводок = СчетаПрибылейУбытков.Ссылка) КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет КАК Счет,
	|	МеждународныйОстатки.ПланСчетов КАК ПланСчетов,
	|	МеждународныйОстатки.Организация КАК Организация,
	|	МеждународныйОстатки.Подразделение КАК Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(МеждународныйОстатки.СуммаРазвернутыйОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(МеждународныйОстатки.СуммаРазвернутыйОстатокКт) КАК СуммаОстатокКт,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток
	|
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			Счет В
	|				(ВЫБРАТЬ Т.Счет ИЗ втСчетаЗакрытия КАК Т),
	|			,
	|			ПланСчетов = &ПланСчетов И Организация В (&Организации)) КАК МеждународныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто1
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто1.Ссылка
	|			И (МеждународныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто2
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто2.Ссылка
	|			И (МеждународныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто3
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто3.Ссылка
	|			И (МеждународныйВидыСубконто3.НомерСтроки = 3)
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	МеждународныйОстатки.ПланСчетов,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.НаправлениеДеятельности,
	|	МеждународныйОстатки.Валюта
	|	
	|ИМЕЮЩИЕ
	|	СУММА(МеждународныйОстатки.СуммаОстаток) <> 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Граница", Новый Граница(НаДату, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПланСчетов", ПланСчетов);
	Запрос.УстановитьПараметр("Организации", Организации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество();
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ТипОперации");
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ТипыОпераций = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет;
	Если Данные.ТипОперации = ТипыОпераций.ЗакрытиеСчетовДоходовРасходов Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеЗакрытияДоходовРасходов(),
							Данные.Номер,
							Данные.Дата);
							
	ИначеЕсли Данные.ТипОперации = ТипыОпераций.РасчетКурсовыхРазницФункциональнаяВалюта Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницФункциональнойВалюте(),
							Данные.Номер,
							Данные.Дата);
							
	ИначеЕсли Данные.ТипОперации = ТипыОпераций.РасчетКурсовыхРазницФункциональнаяВалюта Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтрШаблон(
							МеждународнаяОтчетностьВызовСервера.ПредставлениеРасчетКурсовыхРазницВалютеПредставления(),
							Данные.Номер,
							Данные.Дата);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ВсегоОсталосьКурсовыхРазниц(ТекстЗапроса, ПланСчетов, Организации, Знач НаДату, ТолькоПервую)
	
	Если ЗначениеЗаполнено(НаДату) Тогда
		НаДату = КонецДня(НаДату);
	Иначе
		НаДату = КонецДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если НЕ ТолькоПервую Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ПЕРВЫЕ 1", "");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("ПланСчетов", ПланСчетов);
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Граница", Новый Граница(НаДату, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
	Возврат Запрос.Выполнить().Выбрать().Количество();
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.РегламентнаяОперацияМеждународныйУчет.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.14";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6663d3ba-2290-4df1-958a-207420057aee");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РегламентнаяОперацияМеждународныйУчет.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет реквизит ""План счетов"".';
									|en = 'Fills in ""Chart of accounts"" attribute.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ПланыСчетовМеждународногоУчета.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.РегламентнаяОперацияМеждународныйУчет.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "МультиязычностьСервер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = ПустаяСсылка().Метаданные().ПолноеИмя();
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Дата УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка
	|ИЗ
	|	Документ.РегламентнаяОперацияМеждународныйУчет КАК Документ
	|ГДЕ
	|	Документ.ПланСчетов = ЗНАЧЕНИЕ(Справочник.ПланыСчетовМеждународногоУчета.ПустаяСсылка)";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = ПустаяСсылка().Метаданные().ПолноеИмя();
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	ПланСчетовПоУмолчанию = Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовПоУмолчанию();
	
	Для Каждого Документ Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Ссылка = Документ.Ссылка;
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Ссылка.ПолучитьОбъект();// - ДокументОбъект.РегламентнаяОперацияМеждународныйУчет - 
			
			Если ДокументОбъект <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ДокументОбъект.ПланСчетов) Тогда
					ДокументОбъект.ПланСчетов = ПланСчетовПоУмолчанию;
				КонецЕсли;
			КонецЕсли;
			
			Если ДокументОбъект <> Неопределено И ДокументОбъект.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Документ.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
