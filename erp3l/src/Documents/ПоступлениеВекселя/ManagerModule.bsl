#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных мханизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт	
				
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда		
		
		ВстраиваниеУХФинансовыеИнструменты.ПодготовитьЗапросФинансовыеИнструменты(Документ, Запрос, ТекстыЗапроса, Регистры);
		
		НомераТаблиц = Новый Структура;
		ТекстЗапроса = Новый Массив;
		ТекстЗапроса.Добавить(ТекстЗапросаРеквизитыДокумента(НомераТаблиц));
		Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВТ_ПараметрыОпераций", ТекстыЗапроса) Тогда
			ТекстЗапроса.Добавить(ТекстЗапросаПараметрыОпераций(НомераТаблиц));
		КонецЕсли;	
		ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаГрафикНачислений(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаОперацииВекселя(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапросаГрафикРасчетов(НомераТаблиц, "РасчетыСКонтрагентамиГрафики"));
		ТекстЗапроса.Добавить(ТекстЗапросаСтатусыАкцептаВекселя(НомераТаблиц, "СтатусыАкцептаПереводныхВекселей"));
		ТекстЗапроса.Добавить(ТекстЗапросаРасчетыСКонтрагентамиФакт(НомераТаблиц, "РасчетыСКонтрагентамиФакт"));
		
		ВстраиваниеУХ.ДополнитьТекстыЗапроса(ТекстыЗапроса, НомераТаблиц, ТекстЗапроса);
		
	КонецЕсли;

	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт	
	ВстраиваниеУХФинансовыеИнструменты.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента, Истина, Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц = Неопределено)

	Если НомераТаблиц <> Неопределено Тогда
		НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());	
	КонецЕсли;	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(Реквизиты.Дата, ДЕНЬ) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Номинал КАК Номинал,
	|	Реквизиты.ВалютаНоминала КАК ВалютаДокумента,
	|	Реквизиты.ВалютаНоминала КАК Валюта,
	|	Реквизиты.ФинансовыйИнструмент КАК Вексель,
	|	Реквизиты.Акцептован КАК Акцептован,
	|	Реквизиты.СуммаОперации КАК СуммаОперации,
	|	Реквизиты.ДисконтПремия КАК ФинансовыйРезультат,
	|	Реквизиты.ПредусмотренПроцентныйДоход КАК ПредусмотренПроцентныйДоход,
	|	Реквизиты.ФинансовыйИнструмент.ПараметрыЦеннойБумаги.Должник КАК Должник,
	|	Реквизиты.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	Реквизиты.СуммаПлатежа КАК СуммаПлатежа,
	|	Реквизиты.ДатаПлатежа КАК ДатаПлатежа,
	|	Реквизиты.ВидОснованияПоступления КАК ВидОснованияПоступления,
	|	Реквизиты.ОбъектРасчетовОснование КАК ОбъектРасчетовОснование,
	|	Реквизиты.ТретьяСторона КАК ТретьяСторона,
	|	Реквизиты.ДоговорАкцепта КАК ДоговорАкцепта,
	|	Реквизиты.ОбъектРасчетовСТретьейСтороной КАК ОбъектРасчетовСТретьейСтороной,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ЦФО КАК ЦФО,
	|	Реквизиты.Проект КАК Проект,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговораУХ КАК ВидДоговораУХ
	|ПОМЕСТИТЬ втРеквизиты
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;

КонецФункции

#Область ВзаиморасчетыУХ

Функция ПараметрыВзаиморасчеты(ДанныеЗаполнения) Экспорт 

	Возврат ВстраиваниеУХФинансовыеИнструменты.ПараметрыВзаиморасчетыУХ(ДанныеЗаполнения);	

КонецФункции

Функция ТекстЗапроса_ТаблицаГрафикНачислений(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаГрафикНачислений", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	втРеквизиты.ФинансовыйИнструмент КАК Вексель,
	|	ПоступлениеВекселейГрафик.Дата КАК Дата,
	|	ПоступлениеВекселейГрафик.Сумма КАК Сумма,
	|	втРеквизиты.Должник КАК Должник
	|ПОМЕСТИТЬ ТаблицаГрафикНачислений
	|ИЗ
	|	Документ.ПоступлениеВекселя.График КАК ПоступлениеВекселейГрафик
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПоступлениеВекселейГрафик.Ссылка = &Ссылка";

КонецФункции

Функция ТекстЗапроса_ТаблицаОперацииВекселя(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаОперацииВекселя", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ОперацииФинансовыхИнструментов.Ссылка КАК Операция,
	|	ОперацииФинансовыхИнструментов.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	ВЫБОР
	|		КОГДА ОперацииФинансовыхИнструментов.НаправлениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ОперацииФинансовыхИнструментов.ВидБюджета КАК ВидБюджета,
	|	ОперацииФинансовыхИнструментов.НаправлениеДвижения КАК ПриходРасход,
	|	втРеквизиты.ВидОперации КАК ВидОперацииДокумента,
	|	ОперацииФинансовыхИнструментов.ВидОперацииУХ КАК ВидОперацииУХ,
	|	ВТ_ПараметрыОпераций.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ПараметрыОпераций.Аналитика1 КАК Аналитика1,
	|	ВТ_ПараметрыОпераций.Аналитика2 КАК Аналитика2,
	|	ВТ_ПараметрыОпераций.Аналитика3 КАК Аналитика3,
	|	ВТ_ПараметрыОпераций.Аналитика4 КАК Аналитика4,
	|	ВТ_ПараметрыОпераций.Аналитика5 КАК Аналитика5,
	|	ВТ_ПараметрыОпераций.Аналитика6 КАК Аналитика6,
	|	втРеквизиты.ЦФО КАК ЦФО,
	|	втРеквизиты.Проект КАК Проект	
	|ПОМЕСТИТЬ ТаблицаОперацииВекселя
	|ИЗ
	|	Справочник.ОперацииГрафиковДоговоров КАК ОперацииФинансовыхИнструментов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыОпераций КАК ВТ_ПараметрыОпераций
	|		ПО (ВТ_ПараметрыОпераций.ОперацияГрафика = ОперацииФинансовыхИнструментов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ОперацииФинансовыхИнструментов.Родитель = ВЫБОР
	|			КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельВыданный)
	|		КОНЕЦ";

КонецФункции

Функция ТекстЗапросаГрафикРасчетов(НомераТаблиц, ИмяТаблицы)

	НомераТаблиц.Вставить(ИмяТаблицы, НомераТаблиц.Количество());
	#Область УХВстраиваиние
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втРеквизиты.Период КАК Период,
	|	втРеквизиты.Ссылка КАК ВерсияГрафика,
	|	втРеквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.Должник
	|		ИНАЧЕ втРеквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	втРеквизиты.ВалютаДокумента КАК Валюта,
	|	втРеквизиты.ФинансовыйИнструмент КАК ПредметГрафика,
	|	втРеквизиты.СуммаОперации КАК Сумма,
	|	ТаблицаОперацииВекселя.Операция КАК Операция,
	|	ТаблицаОперацииВекселя.ВидДвижения КАК ВидДвижения,
	|	ТаблицаОперацииВекселя.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	ТаблицаОперацииВекселя.СтатьяБюджета КАК СтатьяБюджета,
	|	ТаблицаОперацииВекселя.ПриходРасход КАК ПриходРасход,
	|	ТаблицаОперацииВекселя.Аналитика1,
	|	ТаблицаОперацииВекселя.Аналитика2,
	|	ТаблицаОперацииВекселя.Аналитика3,
	|	ТаблицаОперацииВекселя.Аналитика4,
	|	ТаблицаОперацииВекселя.Аналитика5,
	|	ТаблицаОперацииВекселя.Аналитика6,
	|	ТаблицаОперацииВекселя.ЦФО,
	|	втРеквизиты.ВидДоговораУХ,
	|	ТаблицаОперацииВекселя.Проект
	|ИЗ
	|	ТаблицаОперацииВекселя КАК ТаблицаОперацииВекселя
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаОперацииВекселя.ВидОперацииДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|	И ТаблицаОперацииВекселя.Операция = ВЫБОР
	|			КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_ПолучениеВекселя)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельВыданный_ВыдачаВекселя)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втРеквизиты.Период,
	|	втРеквизиты.Ссылка,
	|	втРеквизиты.Организация,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.Должник
	|		ИНАЧЕ втРеквизиты.Контрагент
	|	КОНЕЦ,
	|	втРеквизиты.ВалютаДокумента,
	|	втРеквизиты.ФинансовыйИнструмент,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ФинансовыйРезультат > 0
	|			ТОГДА втРеквизиты.ФинансовыйРезультат
	|		ИНАЧЕ -втРеквизиты.ФинансовыйРезультат
	|	КОНЕЦ,
	|	ТаблицаОперацииВекселя.Операция,
	|	ТаблицаОперацииВекселя.ВидДвижения,
	|	ТаблицаОперацииВекселя.ЭлементСтруктурыЗадолженности,
	|	ТаблицаОперацииВекселя.СтатьяБюджета,
	|	ТаблицаОперацииВекселя.ПриходРасход,
	|	ТаблицаОперацииВекселя.Аналитика1,
	|	ТаблицаОперацииВекселя.Аналитика2,
	|	ТаблицаОперацииВекселя.Аналитика3,
	|	ТаблицаОперацииВекселя.Аналитика4,
	|	ТаблицаОперацииВекселя.Аналитика5,
	|	ТаблицаОперацииВекселя.Аналитика6,
	|	ТаблицаОперацииВекселя.ЦФО,
	|	втРеквизиты.ВидДоговораУХ,
	|	ТаблицаОперацииВекселя.Проект	
	|ИЗ
	|	ТаблицаОперацииВекселя КАК ТаблицаОперацииВекселя
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаОперацииВекселя.ВидОперацииДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|	И ТаблицаОперацииВекселя.Операция = ВЫБОР
	|			КОГДА втРеквизиты.ФинансовыйРезультат > 0
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_ПрибыльОтПокупкиПродажи)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_УбытокОтПокупкиПродажи)
	|		КОНЕЦ
	|	И втРеквизиты.ПредусмотренПроцентныйДоход
	|	И втРеквизиты.ФинансовыйРезультат <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаГрафикНачислений.Дата,
	|	втРеквизиты.Ссылка,
	|	втРеквизиты.Организация,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.Должник
	|		ИНАЧЕ втРеквизиты.Контрагент
	|	КОНЕЦ,
	|	втРеквизиты.ВалютаДокумента,
	|	ТаблицаГрафикНачислений.Вексель,
	|	ТаблицаГрафикНачислений.Сумма,
	|	ТаблицаОперацииВекселя.Операция,
	|	ТаблицаОперацииВекселя.ВидДвижения,
	|	ТаблицаОперацииВекселя.ЭлементСтруктурыЗадолженности,
	|	ТаблицаОперацииВекселя.СтатьяБюджета,
	|	ТаблицаОперацииВекселя.ПриходРасход,
	|	ТаблицаОперацииВекселя.Аналитика1,
	|	ТаблицаОперацииВекселя.Аналитика2,
	|	ТаблицаОперацииВекселя.Аналитика3,
	|	ТаблицаОперацииВекселя.Аналитика4,
	|	ТаблицаОперацииВекселя.Аналитика5,
	|	ТаблицаОперацииВекселя.Аналитика6,
	|	ТаблицаОперацииВекселя.ЦФО,
	|	втРеквизиты.ВидДоговораУХ,
	|	ТаблицаОперацииВекселя.Проект	
	|ИЗ
	|	ТаблицаГрафикНачислений КАК ТаблицаГрафикНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОперацииВекселя КАК ТаблицаОперацииВекселя
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|					ТОГДА ТаблицаОперацииВекселя.Операция = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_НачислениеДохода)
	|				ИНАЧЕ ТаблицаОперацииВекселя.Операция = ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельВыданный_НачислениеРасхода)
	|			КОНЕЦ)
	|ГДЕ
	|	втРеквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втРеквизиты.ДатаПлатежа,
	|	втРеквизиты.Ссылка,
	|	втРеквизиты.Организация,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.Должник
	|		ИНАЧЕ втРеквизиты.Контрагент
	|	КОНЕЦ,
	|	втРеквизиты.ВалютаДокумента,
	|	втРеквизиты.Вексель,
	|	втРеквизиты.СуммаПлатежа,
	|	ТаблицаОперацииВекселя.Операция,
	|	ТаблицаОперацииВекселя.ВидДвижения,
	|	ТаблицаОперацииВекселя.ЭлементСтруктурыЗадолженности,
	|	ТаблицаОперацииВекселя.СтатьяБюджета,
	|	ТаблицаОперацииВекселя.ПриходРасход,
	|	ТаблицаОперацииВекселя.Аналитика1,
	|	ТаблицаОперацииВекселя.Аналитика2,
	|	ТаблицаОперацииВекселя.Аналитика3,
	|	ТаблицаОперацииВекселя.Аналитика4,
	|	ТаблицаОперацииВекселя.Аналитика5,
	|	ТаблицаОперацииВекселя.Аналитика6,
	|	ТаблицаОперацииВекселя.ЦФО,
	|	втРеквизиты.ВидДоговораУХ,
	|	ТаблицаОперацииВекселя.Проект	
	|ИЗ
	|	ТаблицаОперацииВекселя КАК ТаблицаОперацииВекселя
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|				ТОГДА втРеквизиты.Акцептован = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ТаблицаОперацииВекселя.Операция = ВЫБОР
	|			КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_ПогашениеВекселя)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельВыданный_ПогашениеВекселя)
	|		КОНЕЦ";
	#КонецОбласти 

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСтатусыАкцептаВекселя(НомераТаблиц, ИмяТаблицы)

	НомераТаблиц.Вставить(ИмяТаблицы, НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	втРеквизиты.ФинансовыйИнструмент КАК Вексель,
	|	втРеквизиты.Период КАК Период,
	|	втРеквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыАкцептаВекселя.Акцептован) КАК СтатусАкцепта
	|ИЗ
	|	втРеквизиты КАК втРеквизиты
	|ГДЕ
	|	втРеквизиты.Акцептован";
	
КонецФункции

Функция ТекстЗапросаПараметрыОпераций(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ПараметрыОпераций", НомераТаблиц.Количество());
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыОпераций.ОперацияГрафика КАК ОперацияГрафика,
	|	ПараметрыОпераций.СтатьяБюджета КАК СтатьяБюджета,
	|	ПараметрыОпераций.Аналитика1 КАК Аналитика1,
	|	ПараметрыОпераций.Аналитика2 КАК Аналитика2,
	|	ПараметрыОпераций.Аналитика3 КАК Аналитика3,
	|	ПараметрыОпераций.Аналитика4 КАК Аналитика4,
	|	ПараметрыОпераций.Аналитика5 КАК Аналитика5,
	|	ПараметрыОпераций.Аналитика6 КАК Аналитика6
	|ПОМЕСТИТЬ ВТ_ПараметрыОпераций
	|ИЗ
	|	Документ.ПоступлениеВекселя.ПараметрыОпераций КАК ПараметрыОпераций
	|ГДЕ
	|	ПараметрыОпераций.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;

КонецФункции
#КонецОбласти

#Область ПроводкиРСБУ

Функция ТекстЗапросаРасчетыСКонтрагентамиФакт(НомераТаблиц, ИмяТаблицы)

	НомераТаблиц.Вставить(ИмяТаблицы, НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	втРеквизиты.Период КАК Период,     
	|	втРеквизиты.ВидДоговораУХ КАК ВидДоговораУХ,
	|	втРеквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.Должник
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.ТретьяСторона
	|		ИНАЧЕ втРеквизиты.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	втРеквизиты.ВалютаДокумента КАК Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей)
	|				И втРеквизиты.Акцептован
	|			ТОГДА втРеквизиты.ОбъектРасчетовСТретьейСтороной
	|		ИНАЧЕ втРеквизиты.ФинансовыйИнструмент
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	втРеквизиты.СуммаОперации КАК Сумма,
	|	ТаблицаОперацииВекселя.Операция КАК Операция,
	|	ТаблицаОперацииВекселя.ВидДвижения КАК ВидДвижения,
	|	ТаблицаОперацииВекселя.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	ТаблицаОперацииВекселя.СтатьяБюджета КАК СтатьяБюджета,
	|	ТаблицаОперацииВекселя.ПриходРасход КАК ПриходРасход
	|ИЗ
	|	ТаблицаОперацииВекселя КАК ТаблицаОперацииВекселя
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРеквизиты КАК втРеквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаОперацииВекселя.Операция = ВЫБОР
	|			КОГДА ТаблицаОперацииВекселя.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельПолученный_ПолучениеВекселя)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОперацииГрафиковДоговоров.ВексельВыданный_ВыдачаВекселя)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втРеквизиты.Период,
	|	втРеквизиты.ВидДоговораУХ,
	|	втРеквизиты.Организация,
	|	втРеквизиты.Контрагент,
	|	втРеквизиты.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОснованияПоступления = ЗНАЧЕНИЕ(Перечисление.ОснованияПоступленияВекселя.ДенежныеСредства)
	|			ТОГДА втРеквизиты.ДоговорКонтрагента
	|		ИНАЧЕ втРеквизиты.ОбъектРасчетовОснование
	|	КОНЕЦ,
	|	втРеквизиты.СуммаОперации,
	|	NULL,
	|	ВЫБОР
	|		КОГДА втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход)
	|ИЗ
	|	втРеквизиты КАК втРеквизиты
	|ГДЕ
	|	втРеквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втРеквизиты.Период,
	|	втРеквизиты.ВидДоговораУХ,
	|	втРеквизиты.Организация,
	|	втРеквизиты.ТретьяСторона,
	|	втРеквизиты.ВалютаДокумента,
	|	втРеквизиты.ОбъектРасчетовСТретьейСтороной,
	|	втРеквизиты.СуммаОперации,
	|	NULL,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход)
	|ИЗ
	|	втРеквизиты КАК втРеквизиты
	|ГДЕ
	|	втРеквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_СчетаДокумента(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("втСчетаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	т.Ссылка.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Ссылка КАК Ссылка,
	|	т.ВидСчетаФИ КАК ВидСчетаФИ,
	|	т.Счет КАК Счет,
	|	т.Субконто1 КАК Субконто1,
	|	т.Субконто2 КАК Субконто2,
	|	т.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втСчетаДокумента
	|ИЗ
	|	Документ.ПоступлениеВекселя.СчетаУчета КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.ФинансовыйИнструмент,
	|	Документ.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетов),
	|	Документ.СчетВзаиморасчетов,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.ФинансовыйИнструмент,
	|	Документ.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетовСПлательщиком),
	|	Документ.СчетВзаиморасчетовСПлательщиком,
	|	Документ.ТретьяСторона,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Документ.ОбъектРасчетовСТретьейСтороной) = ТИП(Документ.ЗаказПоставщику)
	|			ТОГДА &ЗаказПоставщикуДоговор
	|		ИНАЧЕ Документ.ОбъектРасчетовСТретьейСтороной
	|	КОНЕЦ,
	|	NULL
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Ссылка.ФинансовыйИнструмент,
	|	т.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаДисконтаПлательщика),
	|	т.Счет,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(т.Субконто1)
	|		КОГДА ТИП(Справочник.Контрагенты)
	|			ТОГДА т.Ссылка.ТретьяСторона
	|		КОГДА ТИП(Справочник.ДоговорыКонтрагентов)
	|			ТОГДА т.Ссылка.ОбъектРасчетовСТретьейСтороной
	|		ИНАЧЕ т.Субконто1
	|	КОНЕЦ,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(т.Субконто2)
	|		КОГДА ТИП(Справочник.Контрагенты)
	|			ТОГДА т.Ссылка.ТретьяСторона
	|		КОГДА ТИП(Справочник.ДоговорыКонтрагентов)
	|			ТОГДА т.Ссылка.ОбъектРасчетовСТретьейСтороной
	|		ИНАЧЕ т.Субконто2
	|	КОНЕЦ,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(т.Субконто3)
	|		КОГДА ТИП(Справочник.Контрагенты)
	|			ТОГДА т.Ссылка.ТретьяСторона
	|		КОГДА ТИП(Справочник.ДоговорыКонтрагентов)
	|			ТОГДА т.Ссылка.ОбъектРасчетовСТретьейСтороной
	|		ИНАЧЕ т.Субконто3
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПоступлениеВекселя.СчетаУчета КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ВидСчетаФИ = ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаДисконта)";
	
	ТекстДоговор = "ВЫРАЗИТЬ(Документ.ОбъектРасчетовСТретьейСтороной КАК Документ.ЗаказПоставщику)." 
				+ ВстраиваниеУХКлиентСервер.ИмяРеквизитаДоговорЗаказПоставщику();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказПоставщикуДоговор", ТекстДоговор);
  
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_Проводки(НомераТаблиц) Экспорт
		
	ТекстПроводки = Новый Массив;	
	НомераТаблиц.Вставить("втТаблицаПроводок", НомераТаблиц.Количество());
	
	//ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей
	ТекстПроводки.Добавить(ТекстЗапроса_ПриобретениеФИ());
	ТекстПроводки.Добавить(ТекстЗапроса_ПриобретениеДисконт());
	ТекстПроводки.Добавить(ТекстЗапроса_Номинал());
	ТекстПроводки.Добавить(ТекстЗапроса_АкцептДержателя());
	ТекстПроводки.Добавить(ТекстЗапроса_ПереводДисконта());
	
	//ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей, ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей
	ТекстПроводки.Добавить(ТекстЗапроса_АкцептПриВыпуске());
	ТекстПроводки.Добавить(ТекстЗапроса_ВыпускФИ());
	ТекстПроводки.Добавить(ТекстЗапроса_ПремияДисконтПриВыпуске());		
	ТекстПроводки.Добавить(ТекстЗапроса_СписаниеДисконтаПриАкцептеПлательщиком());
	
	//ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей  //плательщик
	ТекстПроводки.Добавить(ТекстЗапроса_АкцептПлательщиком());
		
	Разделитель = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	Возврат СтрСоединить(ТекстПроводки, Разделитель);

КонецФункции

#Область ПриобретениеВекселей

Функция ТекстЗапроса_ПриобретениеФИ()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.СуммаОперации - т.ДисконтПремия
	|		ИНАЧЕ т.СуммаОперации
	|	КОНЕЦ КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетов) КАК СчетКт,
	|	""Поступление векселя"" КАК Комментарий
	|ПОМЕСТИТЬ втТаблицаПроводок
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)";

КонецФункции

Функция ТекстЗапроса_ПриобретениеДисконт()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	0 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.ДисконтПремия
	|		ИНАЧЕ -т.ДисконтПремия
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетРБП)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаДисконта)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетДБП)
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ""Премия по векселю""
	|		ИНАЧЕ ""Дисконт по векселю""
	|	КОНЕЦ КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)";

КонецФункции

Функция ТекстЗапроса_Номинал()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	т.Номинал КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетНоминала) КАК СчетДт,
	|	NULL КАК СчетКт,
	|	""Дисконт при поступлении векселя"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)";

КонецФункции

Функция ТекстЗапроса_АкцептДержателя()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.СуммаОперации - т.ДисконтПремия
	|		ИНАЧЕ т.СуммаОперации
	|	КОНЕЦ КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетовСПлательщиком) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ) КАК СчетКт,
	|	""Перевод задолженности с векселедателя на плательщика при акцепте"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.Акцептован
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)";

КонецФункции

Функция ТекстЗапроса_ПереводДисконта()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.ДисконтПремия
	|		ИНАЧЕ -т.ДисконтПремия
	|	КОНЕЦ КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаДисконтаПлательщика) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаДисконта) КАК СчетКт,
	|	""Перевод дисконта с векселедателя на плательщика при акцепте"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.Акцептован
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей)";

КонецФункции

#КонецОбласти

#Область ВыпускВекселя

Функция ТекстЗапроса_ВыпускФИ()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	т.СуммаОперации КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетов) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ) КАК СчетКт,
	|	""Выпуск векселя"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей))";

КонецФункции

Функция ТекстЗапроса_ПремияДисконтПриВыпуске()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	0 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.ДисконтПремия
	|		ИНАЧЕ -т.ДисконтПремия
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетРБП)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетДБП)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ)
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ""Премия при выпуске векселя""
	|		ИНАЧЕ ""Дисконт при выпуске векселя""
	|	КОНЕЦ КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.ДисконтПремия <> 0
	|	И т.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей))";

КонецФункции

Функция ТекстЗапроса_АкцептПриВыпуске()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	т.Номинал КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетовСПлательщиком) КАК СчетКт,
	|	""Зачет задолженности плательщика при акцепте векселя плательщиком"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.Акцептован
	|	И т.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей))";

КонецФункции

Функция ТекстЗапроса_СписаниеДисконтаПриАкцептеПлательщиком()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	0 КАК Количество,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА т.ДисконтПремия
	|		ИНАЧЕ -т.ДисконтПремия
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетДБП)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетНачисленияПроцентов)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА т.ДисконтПремия > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетНачисленияПроцентов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетРБП)
	|	КОНЕЦ КАК СчетКт,
	|	""Списание премии/дисконта при акцепте"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.Акцептован
	|	И т.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей))";

КонецФункции

#КонецОбласти

#Область АкцептПереводныхВекселей

Функция ТекстЗапроса_АкцептПлательщиком()

	Возврат
	"ВЫБРАТЬ
	|	т.ФинансовыйИнструмент КАК ФинансовыйИнструмент,
	|	т.Дата КАК Период,
	|	т.ВалютаНоминала КАК Валюта,
	|	1 КАК Количество,
	|	т.Номинал КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетВзаиморасчетовСПлательщиком) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.ВидыСчетовФИ.СчетУчетаФИ) КАК СчетКт,
	|	""Зачет задолженности плательщика при акцепте векселя плательщиком"" КАК Комментарий
	|ИЗ
	|	Документ.ПоступлениеВекселя КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка
	|	И т.Акцептован
	|	И т.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей)";

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

#Область Отчеты

// Заполняет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	ФинансовыеИнструментыУХ.ДобавитьКомандыОтчетовФИ(КомандыОтчетов, Параметры);
КонецПроцедуры

#КонецОбласти

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.АкцептПротестПереводногоВекселя.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.ВыбытиеВекселей.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.ПоступлениеВекселя.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ВстраиваниеУХФинансовыеИнструменты.ДобавитьКомандыСозданияНаОсновании_ВариантыОплат(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Реализация услуг и прочих активов".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	ТекущиеМД = ПустаяСсылка().Метаданные();
	
	Если ПравоДоступа("Добавление", ТекущиеМД) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = ТекущиеМД.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(ТекущиеМД);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли