#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ЦенныеБумаги") Тогда
		ЗаполнитьПоВекселю(ДанныеЗаполнения)
	Иначе 
		ФинансовыеИнструментыУХ.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВидОперации) Тогда
		ЭтотОбъект.ВидОперации = ЭтотОбъект.Метаданные().Реквизиты.ВидОперации.ЗначениеЗаполнения;
	КонецЕсли;
	
	ЗаполнитьПараметрыОперацийПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ВидОперации = Перечисления.ВидыОперацийАкцептПротестПереводногоВекселя.УведомлениеОбАкцептеВекселя Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетВзаиморасчетовСПлательщиком");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ФинансовыеИнструментыУХ.ОбработкаПроверкиЗаполнения_СчетаУчета(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей Тогда
		// По смыслу операции установим признак "Акцептован"
		Акцептован = Истина;
	КонецЕсли;
	
	ВстраиваниеУХФинансовыеИнструменты.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ВстраиваниеУХФинансовыеИнструменты.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ВстраиваниеУХ.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Процедура ЗаполнитьПараметрыОперацийПоУмолчанию() Экспорт
	
	ТаблицаНастроек = РаботаСДоговорамиКонтрагентовУХ.ПараметрыОперацийГрафикаПоУмолчанию(ГруппаОперацийГрафика());
	ЭтотОбъект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоВекселю(Вексель)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦенныеБумаги.ВидФинансовогоИнструмента КАК ВидФинансовогоИнструмента,
	|	ЦенныеБумаги.ВалютаНоминала КАК ВалютаДокумента,
	|	ЦенныеБумаги.Ссылка КАК Вексель,
	|	ЦенныеБумаги.Номинал КАК Номинал,
	|	ЦенныеБумаги.Номинал КАК СуммаДокумента,
	|	ЦенныеБумаги.Номинал КАК СуммаОперации,
	|	ВЫБОР КОГДА ЦенныеБумаги.ПараметрыЦеннойБумаги.ФормаВекселя = Значение(Перечисление.ФормаВекселя.Простой)
	|		ТОГДА Значение(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей)
	|		ИНАЧЕ Значение(Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей) КОНЕЦ КАК ВидОперации,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.Векселедатель КАК ПараметрыЦеннойБумагиВекселедатель,
	|	ЦенныеБумаги.Эмитент.ОрганизационнаяЕдиница КАК Организация,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ПроцентнаяСтавка КАК СтавкаДоходности,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаСоставления КАК Дата,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ПредусмотренПроцентныйДоход КАК ПредусмотренПроцентныйДоход,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаНачалаНачисленияПроцентов КАК ДатаНачалаНачисленияПроцентов,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаОкончанияНачисленияПроцентов КАК ДатаОкончанияНачисленияПроцентов,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ФормаВекселя КАК ФормаВекселя,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ДатаПлатежа КАК ДатаПлатежа,
	|	ЕСТЬNULL(ПоступлениеВекселейВекселя.Ссылка, ЗНАЧЕНИЕ(Документ.ПоступлениеВекселя.ПустаяСсылка)) КАК ПоступлениеВекселейСсылка,
	|	ЦенныеБумаги.ПараметрыЦеннойБумаги.ПервыйПолучатель КАК Контрагент
	|ИЗ
	|	Справочник.ЦенныеБумаги КАК ЦенныеБумаги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеВекселя КАК ПоступлениеВекселейВекселя
	|		ПО (ПоступлениеВекселейВекселя.ФинансовыйИнструмент = ЦенныеБумаги.Ссылка)
	|			И (ПоступлениеВекселейВекселя.Проведен)
	|ГДЕ
	|	ЦенныеБумаги.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Вексель);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		//Нечего заполнять.
		Возврат;
	КонецЕсли;
	
	ДанныеВекселя = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);
	
	Если ДанныеВекселя.ВидФинансовогоИнструмента <> Перечисления.ВидыФинансовыхИнструментов.Вексель Тогда
		ВызватьИсключение Нстр("ru = 'Для создания документа ""Регистрация векселей"" выберите ценную бумагу с типом ""Вексель""'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеВекселя.ПоступлениеВекселейСсылка) Тогда
		ПараметрыСообщения = Новый Структура("Вексель,Документ", Вексель, ДанныеВекселя.ПоступлениеВекселейСсылка);
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(
			НСтр("ru = 'Вексель [Вексель] уже зарегистрирован документом [Документ]'"), 
			ПараметрыСообщения);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	// Заполнение шапки документа.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеВекселя);
	
	// Расчет графика
	ТабГрафик = УправлениеЦеннымиБумагами.ПолучитьГрафикНачисленияДоходаВексель(ЭтотОбъект, Дата);
	График.Загрузить(ТабГрафик);
КонецПроцедуры

Функция ГруппаОперацийГрафика()
	
	Возврат ?(ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей,
				Справочники.ОперацииГрафиковДоговоров.ВексельПолученный,
				Справочники.ОперацииГрафиковДоговоров.ВексельВыданный);

КонецФункции

#КонецОбласти

#КонецЕсли
