
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
			
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
					
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПодготовитьФормуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ПриИзмененииДатыДокументаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей") Тогда
		Объект.Акцептован = Истина;
	КонецЕсли;
	
	ЗаполнитьПараметрыОперацийПоУмолчанию();
	
	УстановитьПараметрыВыбора(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьПараметрыВыбора(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДокументаПриИзменении(Элемент)
	УстановитьПараметрыВыбора(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВексельПриИзменении(Элемент)
	ВексельПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СуммаОперацииПриИзменении(Элемент)
	ПриИзмененииСуммыОперацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидОснованияПоступленияПриИзменении(Элемент)
	Если Объект.ВидОснованияПоступления <> ПредопределенноеЗначение("Перечисление.ОснованияПоступленияВекселя.Задолженность") Тогда
		Объект.ОбъектРасчетовОснование = Неопределено;
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура АкцептованПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетВзаиморасчетов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРасчетовСТретьейСторонойПриИзменении(Элемент)
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетВзаиморасчетовСПлательщиком(ЭтаФорма, "РасчетыСПокупателем");
КонецПроцедуры

&НаКлиенте
Процедура ТретьяСторонаПриИзменении(Элемент)
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетВзаиморасчетовСПлательщиком(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорАкцептаПриИзменении(Элемент)
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетВзаиморасчетовСПлательщиком(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьГрафик(Команда)
	ПараметрыФормы = Новый Структура("Объект", Объект);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьГрафикЗавершение",ЭтотОбъект);
	ОткрытьФорму("Документ.ПоступлениеВекселя.Форма.ФормаГрафик", ПараметрыФормы, ЭтотОбъект,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикЗавершение(Результат, Параметры) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьГрафикНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГрафикНаСервере(АдресТаблицыГрафик)
	
	Объект.График.Загрузить(ПолучитьИзВременногоХранилища(АдресТаблицыГрафик));
	Объект.ОжидаемыйДоходРасход = Объект.График.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчета(Команда)
	ФинансовыеИнструментыФормыКлиент.ОткрытьФормуВыбораСчетов(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииСуммыОперацииНаСервере()
	
	ПересчитатьСтрокуВекселя(Объект);
	ОбновитьГрафикНачисленийПоВекселю();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ВексельПриИзмененииНаСервере()
	ЗаполнитьСтрокуВекселя();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуВекселя()
	
	ПрочитатьПараметрыВекселя();
	ПересчитатьСтрокуВекселя(Объект);
	ОбновитьГрафикНачисленийПоВекселю();

КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыВекселя()
	
	РеквизитыВекселя = Новый Структура;
	РеквизитыВекселя.Вставить("Номинал", "ПараметрыЦеннойБумаги.Номинал");
	РеквизитыВекселя.Вставить("ВалютаНоминала", "ПараметрыЦеннойБумаги.ВалютаНоминала");
	РеквизитыВекселя.Вставить("ПредусмотренПроцентныйДоход", "ПараметрыЦеннойБумаги.ПредусмотренПроцентныйДоход");
	РеквизитыВекселя.Вставить("ФормаВекселя", "ПараметрыЦеннойБумаги.ФормаВекселя");
	РеквизитыВекселя.Вставить("ДатаНачалаНачисленияПроцентов", "ПараметрыЦеннойБумаги.ДатаНачалаНачисленияПроцентов");
	РеквизитыВекселя.Вставить("ДатаОкончанияНачисленияПроцентов", "ПараметрыЦеннойБумаги.ДатаОкончанияНачисленияПроцентов");
	РеквизитыВекселя.Вставить("СтавкаДоходности", "ПараметрыЦеннойБумаги.ПроцентнаяСтавка");
	РеквизитыВекселя.Вставить("ДатаПлатежа", "ПараметрыЦеннойБумаги.ДатаПлатежа");
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей Тогда
		РеквизитыВекселя.Вставить("ТретьяСторона", "ПараметрыЦеннойБумаги.Векселедатель");
	Иначе
		РеквизитыВекселя.Вставить("ТретьяСторона", "ПараметрыЦеннойБумаги.Должник");
	КонецЕсли;
	
	ДанныеВекселя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ФинансовыйИнструмент, РеквизитыВекселя);
	Если ДанныеВекселя.ПредусмотренПроцентныйДоход = Истина Тогда
		ДанныеВекселя.ДатаПлатежа = ДанныеВекселя.ДатаОкончанияНачисленияПроцентов;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеВекселя);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГрафикНачисленийПоВекселю()
	
	ТабГрафик = УправлениеЦеннымиБумагами.ПолучитьГрафикНачисленияДоходаВексель(Объект, Объект.Дата);
	Объект.График.Загрузить(ТабГрафик);
	Объект.ОжидаемыйДоходРасход = Объект.График.Итог("Сумма");
	Если Объект.ПредусмотренПроцентныйДоход Тогда
		Объект.СуммаПлатежа = Объект.Номинал + Объект.ОжидаемыйДоходРасход;
	Иначе
		Объект.СуммаПлатежа = Объект.Номинал;
	КонецЕсли;

	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьСтавкуДоходностиДисконтногоВекселя(Объект)
	
	Объект.СтавкаДоходности = ФинансоваяМатематикаКлиентСервер.СтавкаДоходностиЗаПериод(
		НачалоДня(Объект.Дата),
		Объект.ДатаПлатежа,
		Объект.СуммаОперации,
		Объект.Номинал);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьТекущуюСтоимостьПроцентногоВекселя(Объект)
	
	Объект.ТекущаяСтоимость = Объект.Номинал;
	
	Если Объект.ДатаНачалаНачисленияПроцентов < НачалоДня(Объект.Дата) Тогда
		// Добавим накопленный процентный доход.
		Объект.ТекущаяСтоимость = Объект.ТекущаяСтоимость 
			+ ФинансоваяМатематикаКлиентСервер.СуммаПроцентовЗаПериод(
				Объект.ДатаНачалаНачисленияПроцентов,
				НачалоДня(Объект.Дата),
				Объект.Номинал,
				Объект.СтавкаДоходности);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСтрокуВекселя(Объект)
	
	Если Объект.ПредусмотренПроцентныйДоход Тогда
		РассчитатьТекущуюСтоимостьПроцентногоВекселя(Объект);
	Иначе
		Объект.ТекущаяСтоимость = Объект.Номинал;
		РассчитатьСтавкуДоходностиДисконтногоВекселя(Объект);
	КонецЕсли;
	
	Объект.ДисконтПремия = Объект.СуммаОперации - Объект.ТекущаяСтоимость;
		
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДатыДокументаНаСервере()
	
	УстановитьПараметрыВыбора(ЭтаФорма);

	ПересчитатьСтрокуВекселя(Объект);
	ОбновитьГрафикНачисленийПоВекселю();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ФинансовыеИнструментыФормы.ПриСозданииНаСервере_СчетаУчета(ЭтаФорма);
	
	УправлениеФормой(ЭтаФорма);
	УстановитьКонтрагентаОрганизации();
	УстановитьПараметрыВыбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ДисконтПремия > 0 Тогда
		// Это премия.
		Элементы.ФинансовыйРезультат.Заголовок = "Премия";
		Форма.ДисконтПремияАбсолютноеЗначение = Объект.ДисконтПремия;
	Иначе
		// Это дисконт.
		Элементы.ФинансовыйРезультат.Заголовок = "Дисконт";
		Форма.ДисконтПремияАбсолютноеЗначение = -Объект.ДисконтПремия;
		
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей") Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедатель'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Векселедержатель'");
		Элементы.Договор.Заголовок = НСтр("ru = 'Договор выдачи'");
		Элементы.ВидОснованияПоступления.Заголовок = НСтр("ru = 'Выпуск'");
		Элементы.СуммаОперации.Заголовок = НСтр("ru = 'Сумма выпуска'");
		Элементы.ОжидаемыйДоходРасход.Заголовок = НСтр("ru = 'Ожидаемый расход'");
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей") Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедатель'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Векселедержатель'");
		Элементы.Договор.Заголовок = НСтр("ru = 'Договор выдачи'");
		Элементы.ВидОснованияПоступления.Заголовок = НСтр("ru = 'Выпуск'");
		Элементы.СуммаОперации.Заголовок = НСтр("ru = 'Сумма выпуска'");
		Элементы.ОжидаемыйДоходРасход.Заголовок = НСтр("ru = 'Ожидаемый расход'");
		Элементы.ТретьяСторона.Заголовок = НСтр("ru = 'Плательщик'");
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей") Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Акцептант'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Векселедержатель'");
		
		Элементы.СуммаОперации.Заголовок = НСтр("ru = 'Сумма акцепта'");
		Элементы.ОжидаемыйДоходРасход.Заголовок = НСтр("ru = 'Ожидаемый расход'");
		Элементы.ТретьяСторона.Заголовок = НСтр("ru = 'Векселедатель'");
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей") Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедержатель (индоссат)'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Векселедатель (индоссант)'");
		Элементы.Договор.Заголовок = НСтр("ru = 'Договор купли-продажи'");
		Элементы.ВидОснованияПоступления.Заголовок = НСтр("ru = 'Приобретение'");
		Элементы.СуммаОперации.Заголовок = НСтр("ru = 'Сумма приобретения'");
		Элементы.ОжидаемыйДоходРасход.Заголовок = НСтр("ru = 'Ожидаемый доход'");
		Элементы.ТретьяСторона.Заголовок = НСтр("ru = 'Плательщик'");
	КонецЕсли;
	
	// Договорных отношений между акцептантом и векселедержателем нет.
	Элементы.Договор.Видимость = (Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей"));
	Элементы.ГруппаРасчетыСКонтрагентом.Видимость = (Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей"));
	
	Элементы.Акцептован.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей")
									ИЛИ (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей")
										И Объект.ФормаВекселя = ПредопределенноеЗначение("Перечисление.ФормаВекселя.Переводной"));
	
	Элементы.ГруппаПроценты.Видимость = Объект.ПредусмотренПроцентныйДоход;
	Элементы.ГруппаДисконт.Видимость = Не Объект.ПредусмотренПроцентныйДоход;
	
	Элементы.ГруппаПроцентныйВексель.Видимость = Объект.ПредусмотренПроцентныйДоход;
	Элементы.ГруппаДоходность.Видимость = Не Объект.ПредусмотренПроцентныйДоход;
	
	Элементы.ОбъектРасчетовОснование.Видимость = (Объект.ВидОснованияПоступления = ПредопределенноеЗначение("Перечисление.ОснованияПоступленияВекселя.Задолженность"));
	
	Элементы.ГруппаТретьяСторона.Видимость = (Объект.Акцептован ИЛИ Объект.Видоперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей"));
	Элементы.ГруппаРасчетыСТретьейСтороной.Видимость = (Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей"));
	
	ФинансовыеИнструментыФормыКлиентСервер.УправлениеФормой_СчетаУчета(Форма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтрагентаОрганизации()
	
	КонтрагентыОрганизации = ИнтеграцияВИБПереопределяемыйУХ.ПолучитьКонтрагентовПоОрганизации(Объект.Организация);
	
	Если ЗначениеЗаполнено(КонтрагентыОрганизации) Тогда
		КонтрагентОрганизации = КонтрагентыОрганизации[0];
	Иначе
		КонтрагентОрганизации = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	УстановитьКонтрагентаОрганизации();
	УстановитьПараметрыВыбора(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбора(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидФинансовогоИнструмента", ПредопределенноеЗначение("Перечисление.ВидыФинансовыхИнструментов.Вексель")));
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПростыхВекселей") Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ФормаВекселя", ПредопределенноеЗначение("Перечисление.ФормаВекселя.Простой")));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Векселедатель", Форма.КонтрагентОрганизации));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПервыйПолучатель", Объект.Контрагент));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДатаВыпуска", НачалоДня(Объект.Дата)));
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.ВыпускПереводныхВекселей") Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ФормаВекселя", ПредопределенноеЗначение("Перечисление.ФормаВекселя.Переводной")));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Векселедатель", Форма.КонтрагентОрганизации));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПервыйПолучатель", Объект.Контрагент));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ДатаВыпуска", НачалоДня(Объект.Дата)));
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеВекселя.АкцептПереводныхВекселей") Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ФормаВекселя", ПредопределенноеЗначение("Перечисление.ФормаВекселя.Переводной")));
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Должник", Форма.КонтрагентОрганизации));
	КонецЕсли;
	
	Элементы.Вексель.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОперацийГрафика
&НаКлиенте
Процедура НастроитьПараметрыОпераций(Команда)
	
	ПараметрыКоманды = ДанныеОткрытияПараметровОперацийГрафика();			
	ДоговорыКонтрагентовФормыУХКлиент.ОткрытьПараметрыОперацийГрафика(ЭтотОбъект, ПараметрыКоманды);	
	
КонецПроцедуры

&НаСервере
Функция ДанныеОткрытияПараметровОперацийГрафика()	
	
	НастройкиОпераций = Объект.ПараметрыОпераций.Выгрузить();
	АдресНастроек = ПоместитьВоВременноеХранилище(НастройкиОпераций, ЭтотОбъект.УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресНастроек", АдресНастроек);
	ПараметрыОткрытия.Вставить("ГруппаОперацийГрафика", ГруппаОперацийГрафика());
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", Ложь);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаСервере
Функция ГруппаОперацийГрафика()
	
	Возврат ?(Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеВекселя.ПриобретениеВекселей,
				Справочники.ОперацииГрафиковДоговоров.ВексельПолученный,
				Справочники.ОперацииГрафиковДоговоров.ВексельВыданный);

КонецФункции	

&НаКлиенте
Процедура ЗавершитьНастройкуОпераций(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗагрузитьНастройкиОпераций(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОпераций(Адрес)	
	
	ТаблицаНастроек = ПолучитьИзВременногоХранилища(Адрес);
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыОперацийПоУмолчанию()	
	
	ТаблицаНастроек = РаботаСДоговорамиКонтрагентовУХ.ПараметрыОперацийГрафикаПоУмолчанию(ГруппаОперацийГрафика());
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры


#КонецОбласти
