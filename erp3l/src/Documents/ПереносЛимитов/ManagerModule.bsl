#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
#Область СтандартныеПодсистемыКоманды

// Добавляет команду создания объекта на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - Добавленная Команда.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	
	Если ПравоДоступа("Добавление", МетаданныеДокумента) Тогда
		
		КомандаСоздатьНаОсновании						= КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер				= МетаданныеДокумента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление			= ОбщегоНазначения.ПредставлениеОбъекта(МетаданныеДокумента);
		КомандаСоздатьНаОсновании.РежимЗаписи			= "Записывать";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// 	Параметры - Структура - параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаДвиженияЛимитовПоБюджетам(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверОПК.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЛимитирования(Объект) Экспорт
	
	ПараметрыЛимитирования = ПолучитьПараметрыЛимитирования(Объект.ВидБюджета, Объект.ГодЛимитирования);
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЛимитирования, "ИспользоватьЛимитирование, ПериодичностьЛимитирования, СпособОпределенияВалютыЛимитирования");
	
	Если Объект.СпособОпределенияВалютыЛимитирования = Перечисления.СпособыОпределенияВалютыЛимитирования.ВалютаУпрУчета Тогда
		Объект.Валюта = ВстраиваниеОПКПереопределяемый.КонстантаВалютаУправленческогоУчета();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	ПараметрыПереноса = ПолучитьПараметрыПереноса(ДокументСсылка);
	Запрос.УстановитьПараметр("ФлагЦФО",ПараметрыПереноса.ФлагЦФО);
	Запрос.УстановитьПараметр("ФлагПроект",ПараметрыПереноса.ФлагПроект);
	Запрос.УстановитьПараметр("ФлагСтатья",ПараметрыПереноса.ФлагСтатья);
	Запрос.УстановитьПараметр("ФлагПериод",ПараметрыПереноса.ФлагПериод);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.ВидБюджета КАК ВидБюджета,
	|	ДанныеДокумента.ВидБюджета.Предназначение КАК Предназначение,
	|	ДанныеДокумента.ЦФО КАК ЦФО,
	|	ДанныеДокумента.Проект КАК Проект,
	|	ДанныеДокумента.СтатьяБюджета КАК СтатьяБюджета,
	|	ДанныеДокумента.Аналитика1 КАК Аналитика1,
	|	ДанныеДокумента.Аналитика2 КАК Аналитика2,
	|	ДанныеДокумента.Аналитика3 КАК Аналитика3,
	|	ДанныеДокумента.Аналитика4 КАК Аналитика4,
	|	ДанныеДокумента.Аналитика5 КАК Аналитика5,
	|	ДанныеДокумента.Аналитика6 КАК Аналитика6,
	|	&ФлагЦФО КАК ФлагЦФО,
	|	&ФлагПроект КАК ФлагПроект,
	|	&ФлагСтатья КАК ФлагСтатья,
	|	&ФлагПериод КАК ФлагПериод,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	|	ДанныеДокумента.ПериодЛимитирования КАК ПериодЛимитирования
	|ИЗ
	|	Документ.ПереносЛимитов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	Реквизиты = ТаблицаРеквизитов[0];
	
	Для Каждого Колонка Из ТаблицаРеквизитов.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ПараметрыПереноса = ПолучитьПараметрыПереноса(ДокументСсылка);

КонецПроцедуры

Функция ПолучитьПараметрыПереноса(ДокументСсылка)
	
	Результат = Новый Структура;
	Результат.Вставить("ФлагЦФО", Ложь);
	Результат.Вставить("ФлагПроект", Ложь);
	Результат.Вставить("ФлагСтатья", Ложь);
	Результат.Вставить("ФлагПериод", Ложь);
	
	ВидОперации = ДокументСсылка.ВидОперации;
	
	// ЦФО
	Если ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФОПроект Тогда
		Результат.ФлагЦФО = Истина;
	КонецЕсли;
	
	// Проект
	Если ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФОПроект Тогда
		Результат.ФлагПроект = Истина;
	КонецЕсли;
	
	// СтатьяБюджета
	Если ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатья
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносСтатьяЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатья
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФОПроект Тогда
		Результат.ФлагСтатья = Истина;
	КонецЕсли;
	
	// ПериодЛимитирования
	Если ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериод
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодЦФОПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатья
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФО
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяПроект
		ИЛИ ВидОперации = Перечисления.ВидыОперацийПереносЛимитов.ПереносПериодСтатьяЦФОПроект Тогда
		Результат.ФлагПериод = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ТекстЗапросаДвиженияЛимитовПоБюджетам(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Предназначение КАК Предназначение,
	|	ПереносЛимитовИсточник.Ссылка.Валюта КАК Валюта,
	|	ПереносЛимитовИсточник.ПериодЛимитирования КАК ПериодЛимитирования,
	|	ПереносЛимитовИсточник.ЦФО КАК ЦФО,
	|	ПереносЛимитовИсточник.Проект КАК Проект,
	|	ПереносЛимитовИсточник.СтатьяБюджета КАК СтатьяБюджета,
	|	ПереносЛимитовИсточник.Аналитика1 КАК Аналитика1,
	|	ПереносЛимитовИсточник.Аналитика2 КАК Аналитика2,
	|	ПереносЛимитовИсточник.Аналитика3 КАК Аналитика3,
	|	ПереносЛимитовИсточник.Аналитика4 КАК Аналитика4,
	|	ПереносЛимитовИсточник.Аналитика5 КАК Аналитика5,
	|	ПереносЛимитовИсточник.Аналитика6 КАК Аналитика6,
	|	-ПереносЛимитовИсточник.Сумма КАК Корректировка
	|ИЗ
	|	Документ.ПереносЛимитов.Источник КАК ПереносЛимитовИсточник
	|ГДЕ
	|	ПереносЛимитовИсточник.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Предназначение,
	|	ПереносЛимитовПолучатель.Ссылка.Валюта,
	|	ПереносЛимитовПолучатель.ПериодЛимитирования,
	|	ПереносЛимитовПолучатель.ЦФО,
	|	ПереносЛимитовПолучатель.Проект,
	|	ПереносЛимитовПолучатель.СтатьяБюджета,
	|	ПереносЛимитовПолучатель.Аналитика1,
	|	ПереносЛимитовПолучатель.Аналитика2,
	|	ПереносЛимитовПолучатель.Аналитика3,
	|	ПереносЛимитовПолучатель.Аналитика4,
	|	ПереносЛимитовПолучатель.Аналитика5,
	|	ПереносЛимитовПолучатель.Аналитика6,
	|	ПереносЛимитовПолучатель.Сумма
	|ИЗ
	|	Документ.ПереносЛимитов.Получатель КАК ПереносЛимитовПолучатель
	|ГДЕ
	|	ПереносЛимитовПолучатель.Ссылка = &Ссылка
	|	И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПереносЛимитов.ПереносПроизвольный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Предназначение,
	|	ПереносЛимитовОбеспечитьЗаСчет.Ссылка.Валюта,
	|	ВЫБОР
	|		КОГДА &ФлагПериод
	|			ТОГДА &ПериодЛимитирования
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.ПериодЛимитирования
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагЦФО
	|			ТОГДА &ЦФО
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.ЦФО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагПроект
	|			ТОГДА &Проект
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Проект
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &СтатьяБюджета
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.СтатьяБюджета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика1
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика2
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика3
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика4
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика5
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика5
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФлагСтатья
	|			ТОГДА &Аналитика6
	|		ИНАЧЕ ПереносЛимитовОбеспечитьЗаСчет.Аналитика6
	|	КОНЕЦ,
	|	ПереносЛимитовОбеспечитьЗаСчет.Сумма
	|ИЗ
	|	Документ.ПереносЛимитов.Источник КАК ПереносЛимитовОбеспечитьЗаСчет
	|ГДЕ
	|	ПереносЛимитовОбеспечитьЗаСчет.Ссылка = &Ссылка
	|	И &ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПереносЛимитов.ПереносПроизвольный)";
	
	//
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ЛимитыПоБюджетам");
	
КонецПроцедуры

Функция ПолучитьПараметрыЛимитирования(ВидБюджета, НаДату) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидБюджета", ВидБюджета);
	Запрос.УстановитьПараметр("НаДату", НачалоГода(НаДату));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыЛимитированияСрезПоследних.ВидБюджета КАК ВидБюджета,
	|	ПараметрыЛимитированияСрезПоследних.ПериодичностьЛимитирования КАК ПериодичностьЛимитирования,
	|	ПараметрыЛимитированияСрезПоследних.ИспользоватьЛимитирование КАК ИспользоватьЛимитирование,
	|	ПараметрыЛимитированияСрезПоследних.СпособОпределенияВалютыЛимитирования КАК СпособОпределенияВалютыЛимитирования
	|ИЗ
	|	РегистрСведений.ПараметрыЛимитирования.СрезПоследних(&НаДату, ВидБюджета = &ВидБюджета) КАК ПараметрыЛимитированияСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура("ВидБюджета, ИспользоватьЛимитирование, ПериодичностьЛимитирования, СпособОпределенияВалютыЛимитирования");
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти

#КонецЕсли
