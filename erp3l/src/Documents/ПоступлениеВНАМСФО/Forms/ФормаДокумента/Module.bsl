
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	МСФОУХ.ОбновитьУсловноеОформлениеФормы(ЭтаФорма, "ВНА");
	УправлениеФормой(ЭтаФорма);
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ДокументыОснованияПараллельногоУчета"
	 И ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ДокументыОснования.Очистить();
		Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
			Если СтрокаСписка.Значение.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
			СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
		КонецЦикла;
		
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументМСФО(Команда)
	МСФОКлиентУХ.СоздатьДокументМСФО(ЭтаФорма);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Заполнение

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемы(Команда)
	
	Если Не МСФОВНАВызовСервераУХ.ИспользоватьДанныеУчетнойСистемы(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДанныеНСБУ");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованиям(Команда)
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДокументыОснования");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКолонкамНСБУ(Команда)
	ЗаполнитьПоКолонкамНСБУСервер();
КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	Для каждого СтрокаВНА Из Объект.ВНА Цикл
	    ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, СтрокаВНА, Истина, Истина);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);	
	Объект.ВНА.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНеУказанГиперссылкаНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДобавитьДокументОснованиеНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
		
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА", СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТабличнойЧасти

&НаКлиенте
Процедура ОтобратьСтрокиРасхождений(Команда)
	
	Если (Элементы.ВНА.ОтборСтрок = Неопределено) ИЛИ НЕ Элементы.ВНА.ОтборСтрок.Свойство("ЕстьРасхождения") Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРасхождения", Истина);
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Истина;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтрокиИзменений(Команда)
	
	Если Элементы.ВНА.ОтборСтрок = Неопределено Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьИзменение", Истина);
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Истина;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВКолонкеПоВыделенным(Команда)	
	МСФОКлиентУХ.УстановитьЗначениеВКолонкеПоВыделеннымСтрокам(ЭтаФорма, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодробноВНА(Команда)
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Истина, "ВНА");
	
	ВидимостьВалютныйУчет(Элементы.ВНА.ТекущиеДанные);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьВалютныйУчет(ТекущаяСтрока)
	
	Если Не Элементы.ПоказатьПодробно.Пометка Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаВалютныйУчет.Видимость = (ТекущаяСтрока <> Неопределено) 
												И ЗначениеЗаполнено(ТекущаяСтрока.КоррСчетМСФО)
												И УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(ТекущаяСтрока.КоррСчетМСФО).Валютный;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ВНАПослеУдаления(Элемент)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	МСФОКлиентУХ.ТабличнаяЧастьПриОкончанииРедактирования(ЭтаФорма, Элемент, НоваяСтрока, ОтменаРедактирования);
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВНАВНА.ВыбиратьТип = (ТекущаяСтрока.ВНА = Неопределено);

	ЗаполнитьТекущимиДаннымиСервер(Истина, Истина, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАКоррСчетМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетУчетаМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАПередНачаломИзменения(Элемент, Отказ)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	ИменаСубконто = Этаформа.КэшируемыеЗначения.ИменаСубконто;
	
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчетаТЧ(Этаформа, ТекущаяСтрока, "КоррСчетМСФО", "ВНА", ИменаСубконто);
	МСФОКлиентСерверУХ.ОбновитьСубконтоСчетаТЧ(Этаформа, ТекущаяСтрока, "СчетУчетаМСФО", "ВНА", ИменаСубконто);
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВалютаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Истина, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаНСБУПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Истина, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаМСФОПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Ложь, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаВВалютеНСБУПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.СуммаНСБУ = ПолучитьСуммуВФункциональнойВалюте(
										ТекущаяСтрока.СуммаВВалютеНСБУ, 
										ТекущаяСтрока.Валюта, 
										Объект.Дата
									);
									
	ТекущаяСтрока.СуммаМСФО = ТекущаяСтрока.СуммаНСБУ;
	ТекущаяСтрока.СуммаВВалютеМСФО = ТекущаяСтрока.СуммаВВалютеНСБУ;
		
КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаВВалютеМСФОПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.СуммаМСФО = ПолучитьСуммуВФункциональнойВалюте(
										ТекущаяСтрока.СуммаВВалютеМСФО, 
										ТекущаяСтрока.Валюта, 
										Объект.Дата
									);
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МСФОКлиентСерверУХ.ОбновитьВидимостьСубконтоГруппыПодробно(ЭтаФорма, ТекущаяСтрока, "ВНА");
	МСФОКлиентСерверУХ.ОбновитьДоступностьЗависимыхРеквизитов(ЭтаФорма, ТекущаяСтрока, "ВНА");
	
	ВидимостьВалютныйУчет(ТекущаяСтрока);	
		
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидимостьВалютныйУчет(ТекущаяСтрока);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетУчетаНСБУПриИзменении(Элемент)	
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОПоНеклассифицированным", Новый Структура("СчетУчетаНСБУ", "КоррСчетМСФО"));
	СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетУчетаНСБУ", "СчетУчетаМСФО"));
	СтруктураДействий.Вставить("ЗаполнитьДоступностьПоИменамСубконто", КэшируемыеЗначения.ИменаСубконто);
		
	КэшДокумента = Новый Структура("ШаблонТрансляции,ИменаСубконто", КэшируемыеЗначения.ШаблонТрансляции, КэшируемыеЗначения.ИменаСубконто);
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, СтруктураДействий, КэшДокумента); 
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.ВНАСчетУчетаМСФО, "ВНА");
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.ВНАКоррСчетМСФО, "ВНА");
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАКоррСчетНСБУПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеРеквизитовСтрокиТЧ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)	
	МСФОКлиентСерверУХ.УправлениеФормой(Форма, "ВНА", Ложь);
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)

	Если ЭтаФорма.КэшируемыеЗначения = Неопределено Тогда	
		ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	КонецЕсли;
	
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", Документы.ПоступлениеВНАМСФО.ПолучитьИменаСубконто());
	
	МСФОУХ.ПодготовитьФормуНаСервере(ЭтаФорма);
	
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "ВНА");
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);

КонецПроцедуры

&НаКлиенте
Процедура ВНАГруппаВНАПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	МСФОКлиентСерверУХ.ОбновитьЗависимыеРеквизиты(ТекущаяСтрока, ЭтаФорма, "ГруппаВНАМСФО");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСуммыВВалютеСтроки(Форма, СтрокаВНА, ПересчитатьСуммаНСБУ = Ложь, ПересчитатьСуммаМСФО = Ложь)

	Объект = Форма.Объект;
	
	Если ПересчитатьСуммаНСБУ Тогда
		МСФОКлиентСерверУХ.ПересчитатьСуммуВВалюте(Форма, СтрокаВНА.СуммаВВалютеНСБУ, 
		СтрокаВНА.СуммаНСБУ, СтрокаВНА.Валюта, Объект.Дата);
	КонецЕсли;
	
	Если ПересчитатьСуммаМСФО Тогда
		МСФОКлиентСерверУХ.ПересчитатьСуммуВВалюте(Форма, СтрокаВНА.СуммаВВалютеМСФО, 
		СтрокаВНА.СуммаМСФО, СтрокаВНА.Валюта, Объект.Дата);
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Функция ПолучитьСуммуВФункциональнойВалюте(СуммаВВалюте, ВалютаОперации, ДатаПересчета)
	
	Если Не ЗначениеЗаполнено(ВалютаОперации) Или (ВалютаОперации = КэшируемыеЗначения.ФункциональнаяВалюта) Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат РаботаСКурсамиВалют.ПересчитатьВВалюту(
										СуммаВВалюте,
										ВалютаОперации,
										КэшируемыеЗначения.ФункциональнаяВалюта,
										ДатаПересчета
									);

КонецФункции

&НаСервере
Процедура ЗаполнитьПоКолонкамНСБУСервер()

	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);

КонецПроцедуры    

#КонецОбласти

#Область ЗаполнениеТЧ

&НаКлиенте
Процедура Подключаемый_ЗаполнитьДокумент(РезультатВопроса = Неопределено, ДанныеЗаполнения) Экспорт
	
	Если (РезультатВопроса <> Неопределено) И (РезультатВопроса <> КодВозвратаДиалога.Да) Тогда
		Возврат;	
	КонецЕсли;
    
    ЗаполнитьДокумент(ДанныеЗаполнения);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ДанныеЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);
	МСФОКлиентСерверУХ.ОбновитьВидимостьДокументыОснования(ЭтаФорма);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущимиДаннымиСервер(ЗаполнитьРеквизиты = Ложь, ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь, СтрокаВНА = Ложь) 
	
	Если НЕ СтрокаВНА Тогда		
		СтрокиДляЗаполнения = Объект.ВНА;
	Иначе
		СтрокиДляЗаполнения = Новый Массив;
		СтрокиДляЗаполнения.Добавить(Объект.ВНА.НайтиПоИдентификатору(Элементы.ВНА.ТекущаяСтрока));	
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура("ЗаполнитьРеквизиты,ЗаполнитьНСБУ,ЗаполнитьМСФО", ЗаполнитьРеквизиты, ЗаполнитьНСБУ, ЗаполнитьМСФО);
	Документы.ПоступлениеВНАМСФО.ЗаполнитьСтроки(СтрокиДляЗаполнения, ЭтаФорма, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МСФОКлиентСерверУХ.ОбновитьВыборТипаВНА(ЭтаФорма, НоваяСтрока, Копирование);
	
	Если КэшируемыеЗначения.Свойство("ИспользуютсяТК") И КэшируемыеЗначения.ИспользуютсяТК Тогда
		ТекущаяСтрока.СторнироватьДанныеНСБУ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМА(Команда)	
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНЗС(Команда)	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМПЗ(Команда)
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ВНАВНА.ВыбиратьТип = Истина;

КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти
