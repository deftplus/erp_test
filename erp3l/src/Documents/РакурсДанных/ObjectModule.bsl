#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем МаксАналитикОтчета;
Перем ОсновнаяВалюта;

// Формирует структуру для расчета аналитик по виду отчета ВидОтчета, таблице номеров аналитик ТабНомеровАналитик
// и группе раскрытия показателя ГруппаРаскрытия. 
Функция ПодготовитьСтруктуруПеременныхДляРасчета(ВидОтчета, ТабНомеровАналитик = Неопределено, ГруппаРаскрытия = Неопределено) Экспорт
	МассивЗагруженныхГруппРаскрытия = Новый Массив;
	Если ГруппаРаскрытия <> Неопределено Тогда
		МассивЗагруженныхГруппРаскрытия.Добавить(ГруппаРаскрытия);
	Иначе
		// Нет данных по группе раскрытия.
	КонецЕсли;                
	СтруктураПеременных=Новый Структура;
	СтруктураПеременных.Вставить("ВидОтчета", ВидОтчета);
	СтруктураПеременных.Вставить("МаксАналитикОтчета", ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(ВидОтчета));
	СтруктураПеременных.Вставить("АнализЧувствительности", Ложь);
	СтруктураПеременных.Вставить("ЧислоДопАналитик", ПараметрыСеанса.ЧислоДопАналитик); 
	СтруктураПеременных.Вставить("ВсегдаЗаполнятьАналитики", Истина); 
	СтруктураПеременных.Вставить("ОсновнаяВалюта", Константы.ВалютаУправленческогоУчета.Получить()); 
	СтруктураПеременных.Вставить("ТабНомеровАналитик", ТабНомеровАналитик); 
	СтруктураПеременных.Вставить("МассивЗагруженныхГруппРаскрытия", МассивЗагруженныхГруппРаскрытия); 
	СтруктураПеременных.Вставить("глОсновнойЯзык", ОбщегоНазначенияУХ.ПолучитьЗначениеПеременной("глОсновнойЯзык", , Истина)); 
	Возврат СтруктураПеременных;
КонецФункции // ПодготовитьСтруктуруПеременныхДляРасчета() 

// Возвращает таблицу показатей по версиям СписокВерсий и виду отчета ВидОтчетаВход.
Функция ЗаполнитьТаблицуПоказателей(СписокВерсий, ВидОтчетаВход)
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	СтруктураПеременныхДляРасчета = ПодготовитьСтруктуруПеременныхДляРасчета(ВидОтчетаВход);
	РезультатФункции = УправлениеОтчетамиУХ.ЗаполнитьТаблицуПоказателей(СтруктураПеременныхДляРасчета, СписокВерсий, ВалютаУправленческогоУчета);
	Возврат РезультатФункции;
КонецФункции

// Возвращает таблицу раскрытий показателей по переданным параметрам.
Функция ЗаполнитьТаблицуРаскрытий(ГруппаРаскрытия = Неопределено, СписокВерсий = Неопределено, ВидОтчета, ВалютаЗаполнения = Неопределено, ТабНомеровАналитик = Неопределено)
	СтруктураПеременныхДляРасчета = ПодготовитьСтруктуруПеременныхДляРасчета(ВидОтчета, ТабНомеровАналитик, ГруппаРаскрытия);
	Возврат УправлениеОтчетамиУХ.ЗаполнитьТаблицуРаскрытий(СтруктураПеременныхДляРасчета, ГруппаРаскрытия, СписокВерсий, ВалютаЗаполнения);
КонецФункции

// Дополняет таблицу планов данными планов из выгрузки показателей по указанному в параметрах лимитирования виду бюджета 
// 
Процедура ЗаполнитьТаблицуПланов(ТаблицаПланов, ТаблицаПоказателей, ПараметрыЛимитирования)
	
	ИмяРеквизитаСтатья = ОбщегоНазначенияПовтИспУХ.ПолучитьИмяРеквизитаСтатьяБюджета(ПараметрыЛимитирования.ВидБюджета);
	
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	ТекДата = ТекущаяДатаСеанса();
	
	СтруктураПоискаВерсии = Новый Структура("ПериодОтчета, Организация, Проект, Сценарий");
	СписокИспользуемыхВерсий = Новый СписокЗначений;
	
	Для Каждого СтрПоказатель ИЗ ТаблицаПоказателей Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаВерсии, СтрПоказатель);
		
		//
		СтрокиНужныхВерсий = ТаблицаПоказателей.НайтиСтроки(СтруктураПоискаВерсии);
		МассивВерсий = ТаблицаПоказателей.Скопировать(СтрокиНужныхВерсий, "Версия").ВыгрузитьКолонку("Версия");
		СписокИспользуемыхВерсий.ЗагрузитьЗначения(МассивВерсий);
		
		//
		ЗаполненаСтатья = ЗначениеЗаполнено(СтрПоказатель[ИмяРеквизитаСтатья]);
		ЗаполненПриходРасход = ЗначениеЗаполнено(СтрПоказатель.ПриходРасход);
		ЕстьЗначение = ЗначениеЗаполнено(СтрПоказатель.Значение);
		Если НЕ (ЗаполненаСтатья И ЗаполненПриходРасход И ЕстьЗначение) Тогда
			Продолжить;
		Иначе
			ЭтоГрупповаяСтатья = СтрПоказатель[ИмяРеквизитаСтатья+"ЭтоГруппа"];
			Если ЭтоГрупповаяСтатья Тогда
				Продолжить;
			Иначе
				// Проверки пройдены. Выполняем далее.
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрПоказатель.ВидКурса) Тогда
			СтрПоказатель.ВидКурса = Перечисления.ВидыКурсов.СреднийКурсЗаПериод;
		КонецЕсли;
		мПоказатели = ЗаполнитьТаблицуПоказателей(СписокИспользуемыхВерсий, СтрПоказатель.ВидОтчета);
		
		ТабНомеровАналитик=УправлениеОтчетамиУХ.ВернутьТабНомеровАналитик(мПоказатели);

		ВсегдаЗаполнятьАналитики = Истина;
		мПоказателиРаскрытия = ЗаполнитьТаблицуРаскрытий(СтрПоказатель.ГруппаРаскрытия, СписокИспользуемыхВерсий, СтрПоказатель.ВидОтчета, , ТабНомеровАналитик);
		
		Если ЗначениеЗаполнено(СтрПоказатель.ГруппаРаскрытия) Тогда
			МассивРаскрытия = мПоказателиРаскрытия.НайтиСтроки(Новый Структура("Показатель",СтрПоказатель.Ссылка));
			ЕстьРаскрытие = МассивРаскрытия.Количество() > 0;
		Иначе
			ЕстьРаскрытие = Ложь;
		КонецЕсли;
		
		Если ЕстьРаскрытие Тогда
			СтруктураОбъекта = Новый Структура;
			СтруктураОбъекта.Вставить("МаксАналитикОтчета", ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(СтрПоказатель.ВидОтчета));
			СтруктураОбъекта.Вставить("ОсновнаяВалюта", СтрПоказатель.Валюта);
			
			СтруктураОбъекта.Вставить("Проект", Проект);
			Для Каждого СтрРаскрытия ИЗ МассивРаскрытия Цикл
				НоваяСтрока=ТаблицаПланов.Добавить();			
				НоваяСтрока.ВидБюджета		 = ПараметрыЛимитирования.ВидБюджета;
				ДвиженияБюджетированиеУХ.ЗаполнитьАналитикуПлановПоРаскрытию(СтруктураОбъекта, ПараметрыЛимитирования.ВидБюджета, НоваяСтрока, СтрПоказатель, СтрРаскрытия);
				
				Если СтрПоказатель.ЛимитыВВалютеОперации И ЗначениеЗаполнено(СтрРаскрытия.АналитикаВалюта) Тогда
					НоваяСтрока.Валюта = СтрРаскрытия.АналитикаВалюта;
					НоваяСтрока.Лимит  = СтрРаскрытия.ЗначениеВалюта;
				Иначе
					НоваяСтрока.Валюта = СтруктураОбъекта.ОсновнаяВалюта;
					НоваяСтрока.Лимит  = СтрРаскрытия.Значение;
				КонецЕсли;
				
				НоваяСтрока.ПриходРасход	 = СтрПоказатель.ПриходРасход;
				НоваяСтрока.Период			 = СтрПоказатель.ПериодОтчета.ДатаНачала;
				НоваяСтрока.ПериодОтчета	 = СтрПоказатель.ПериодОтчета;
				НоваяСтрока.Организация		 = СтрПоказатель.Организация;
				НоваяСтрока.ЦФО		 		 = СтрПоказатель.Организация;
				НоваяСтрока.Проект			 = СтрПоказатель.Проект;
				
			КонецЦикла;
		Иначе
			НоваяСтрока									 = ТаблицаПланов.Добавить();
			НоваяСтрока.ВидБюджета		 				 = ПараметрыЛимитирования.ВидБюджета;
			НоваяСтрока.ПоказательОтчета				 = СтрПоказатель.Ссылка;
			НоваяСтрока.СтатьяБюджета					 = СтрПоказатель[ИмяРеквизитаСтатья];
			НоваяСтрока.ПриходРасход					 = СтрПоказатель.ПриходРасход;
			НоваяСтрока.Валюта							 = СтрПоказатель.Валюта;
			НоваяСтрока.Период							 = СтрПоказатель.ПериодОтчета.ДатаНачала;
			НоваяСтрока.ПериодОтчета					 = СтрПоказатель.ПериодОтчета;
			НоваяСтрока.Организация						 = СтрПоказатель.Организация;
			НоваяСтрока.ЦФО		 		 				 = СтрПоказатель.Организация;
			НоваяСтрока.Проект							 = СтрПоказатель.Проект;
			НоваяСтрока.Лимит 							 = СтрПоказатель.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

МаксАналитикОтчета = 0;
ОсновнаяВалюта = Неопределено;

#КонецЕсли
