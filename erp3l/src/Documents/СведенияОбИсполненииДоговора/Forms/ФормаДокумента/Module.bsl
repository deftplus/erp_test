
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьЛотПоДоговоруНаСервере();
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Основание) И НЕ ЗначениеЗаполнено(Лот) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Нельзя ввести исполнение договора не связанного с лотом.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	УстановитьЛотПоДоговоруНаСервере();
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСведенийОбИсполненииПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборДокументовИсполненияПоСтрокеПозиции", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСведенийОбИсполненииЭтоАвансПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборДокументовИсполненияПоСтрокеПозиции", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСведенийОбИсполненииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ИнициализироватьСтрокуПозицииСведений(Элемент.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСведенийОбИсполненииПередУдалением(Элемент, Отказ)
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	УдалитьСтрокиДокументовИсполнения(ТекДанные.УИДПозиции);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыИсполненияПередНачаломДобавления(Элемент, 
													Отказ, 
													Копирование, 
													Родитель, 
													Группа, 
													Параметр)
	ТекДанныеПозиции = Элементы.ПозицииСведенийОбИсполнении.ТекущиеДанные;
	Если ТекДанныеПозиции = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ТекДанныеПозиции.УИДПозиции) Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыИсполненияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекДанныеПозиции = Элементы.ПозицииСведенийОбИсполнении.ТекущиеДанные;
		Если ТекДанныеПозиции = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Элемент.ТекущиеДанные.УИДПозиции = ТекДанныеПозиции.УИДПозиции;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыИсполненияНоменклатураПриИзменении(Элемент)
	ТекДанные = Элементы.ДокументыИсполнения.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		ОписаниеНоменклатуры = ПолучитьОписаниеРеквизитовСсылкиНаСеврере(
			ТекДанные.Номенклатура, "ЕдиницаИзмерения");
		ТекДанные.ЕдиницаИзмерения = ОписаниеНоменклатуры.ЕдиницаИзмерения;
	Иначе
		ТекДанные.ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьУИД(Команда)
	ЦентрализованныеЗакупкиКлиентУХ.РедактироватьУИДОбъекта(
		Объект, НСтр("ru='Введите УИД лота'"));
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСтандартныйУИД(Команда)
	ЦентрализованныеЗакупкиКлиентУХ.УстановитьСтандартныйУИД(Объект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеРеквизитовСсылкиНаСеврере(Ссылка, ИменаРеквизитов)
	ОписаниеНоменклатуры = Новый Структура(ИменаРеквизитов);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ЗаполнитьЗначенияСвойств(ОписаниеНоменклатуры, Ссылка);
	КонецЕсли;
	Возврат ОписаниеНоменклатуры;
КонецФункции

&НаКлиенте
Процедура ДокументыИсполненияДокументПриИзменении(Элемент)
	ТекДанные = Элементы.ДокументыИсполнения.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Документ) Тогда
		ОписаниеДокумента = ПолучитьОписаниеРеквизитовДокументаНаСеврере(
			ТекДанные.Документ);
		Если ЗначениеЗаполнено(ОписаниеДокумента) Тогда
			ТекДанные.ДатаДокумента = ОписаниеДокумента.Дата;
			ТекДанные.НомерДокумента = ОписаниеДокумента.Номер;
			ТекДанные.ВидДокумента = ОписаниеДокумента.ВидДокумента;
		КонецЕсли;
	Иначе
		ТекДанные.ДатаДокумента = Неопределено;
		ТекДанные.НомерДокумента = "";
		ТекДанные.ВидДокумента = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеРеквизитовДокументаНаСеврере(Документ)
	ОписаниеДокумента = ПолучитьОписаниеРеквизитовСсылкиНаСеврере(
			Документ, "Дата, Номер");
	ОписаниеДокумента.Вставить("ВидДокумента",
			ИнтеграцияЦУЗсЭТПСерверУХ.ПолучитьВидДокументаИсполнения(
				ТипЗнч(Документ)));
	Возврат ОписаниеДокумента;
КонецФункции

&НаКлиенте
Процедура НачисленыНеустойкиПриИзменении(Элемент)
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеФормы()
	Элементы.ИнформацияОНеустойках.Видимость = Объект.НачисленыНеустойки;
	Элементы.Лот.Видимость = ЗначениеЗаполнено(Лот);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДелегатОбработатьВыборСсылкиНаДоговор = Новый ОписаниеОповещения(
		"ОбработатьВыборСсылкиНаДоговор", ЭтаФорма);
	ПараметрыФормыВыбора = Новый Структура(
		"Ключ,ЗакрыватьПриВыборе,РежимВыбора",
		Объект.ДоговорКонтрагента, Истина, Истина);
	ОткрытьФорму("Справочник.Лоты.Форма.ФормаВыбораДоговораЛота", 
		ПараметрыФормыВыбора, 
		ЭтаФорма,
		,
		,
		,
		ДелегатОбработатьВыборСсылкиНаДоговор, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборСсылкиНаДоговор(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДоговорКонтрагента = Результат;
	ДоговорКонтрагентаПриИзменении(Элементы.ДоговорКонтрагента);
КонецПроцедуры

&НаСервере
Процедура УстановитьЛотПоДоговоруНаСервере()
	Лот = ЦентрализованныеЗакупкиУХ.ПолучитьЛотДоговора(Объект.ДоговорКонтрагента);
	Элементы.ДокументыИсполненияНоменклатура.СписокВыбора.ЗагрузитьЗначения(
		ЦентрализованныеЗакупкиУХ.ПолучитьМассивНоменклатурыЛота(Лот));
КонецПроцедуры


#Область СвязьТЧПозицииСТЧДокументыИсполнения


&НаКлиенте
Процедура УстановитьОтборДокументовИсполненияПоСтрокеПозиции()
	ТекДанные = Элементы.ПозицииСведенийОбИсполнении.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ДокументыИсполнения.ОтборСтрок = 
		Новый ФиксированнаяСтруктура("УИДПозиции", ТекДанные.УИДПозиции);
	Элементы.ДокументыИсполнения.Видимость = НЕ ТекДанные.ЭтоАванс;
	Элементы.ОбъяснениеПочемуНельзяРедактироватьДокументы.Видимость = ТекДанные.ЭтоАванс;
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьСтрокуПозицииСведений(ТекДанные)
	ТекДанные.УИДПозиции = Строка(Новый УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокиДокументовИсполнения(УИДПозиции)
	СтрокиИсполненияДляУдаления = Объект.ДокументыИсполнения.НайтиСтроки(
									Новый Структура("УИДПозиции", УИДПозиции));
	Для Каждого СтрокаИсполнения Из СтрокиИсполненияДляУдаления Цикл
		Объект.ДокументыИсполнения.Удалить(СтрокаИсполнения);
	КонецЦикла;
КонецПроцедуры


#КонецОбласти

