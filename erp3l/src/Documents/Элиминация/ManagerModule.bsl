#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции


// Заполняет регистр сведений проводками для элиминации.
//
// Параметры:
//  Ссылка - ДокументСсылка.Элиминация - документ элиминации
//		определяющий ее параметры.
//	флОтладка - Булево - записывать дополнительную
//		информацию в отладочные регистры.
// 
// Возвращаемое значение:
//   - Неопределено - если заполнение прошло успешно.
//	 - Массив(ОписаниеОшибки) - см. описание функции
//			ПротоколируемыеСобытияУХ.ПолучитьМассивПротоколируемыхОбъектов.
//
Функция ЗаполнитьРегистрПроводокДляЭлиминации(Ссылка, флОтладка=Ложь) Экспорт
	
	ПротоколируемыеСобытияУХ.Начать(Ссылка);
	
	СтруктураПараметров = ЭлиминацияВГОУХ.ПолучитьПустыеПараметрыЭлиминации();
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Ссылка);
	СтруктураПараметров.ДокументЭлиминации = Ссылка; 
	Если флОтладка Тогда
		СтруктураПараметров.Вставить("Отладка", Истина);
	КонецЕсли;
	
	ЭлиминацияВГОУХ.ЗаполнитьРегистрПроводкиДляЭлиминации(СтруктураПараметров);
	
	ПротоколОшибок=ПротоколируемыеСобытияУХ.Завершить(
		"Документ.Элиминация",, Ссылка);
	ПротоколируемыеСобытияУХ.ЗаписатьПротоколВРегистр(
		Ссылка,,ПротоколОшибок,, Ссылка.ПериодОтчета, Ссылка.Сценарий);
		
	Если ПротоколируемыеСобытияУХ.ЕстьПротоколыПоОбъекту(
				Ссылка,, Ссылка.ПериодОтчета, Ссылка.Сценарий) Тогда
		МассивОбъекта = Новый Массив();
		МассивОбъекта.Добавить(Ссылка);
		Возврат ПротоколируемыеСобытияУХ.ПолучитьМассивПротоколируемыхОбъектов(
					МассивОбъекта);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает ссылку на документ Элиминация по указанным реквизитам. Когда документ не найден -
// возвращает пустую ссылку.
Функция ПолучитьЭкземплярЭлиминации(ПериодВход, ОрганизацияВход, СценарийВход, ВалютаВход = Неопределено) Экспорт
	РезультатФункции = Документы.Элиминация.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Элиминация.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Элиминация КАК Элиминация
		|ГДЕ
		|	НЕ Элиминация.ПометкаУдаления
		|	И Элиминация.Сценарий = &Сценарий
		|	И Элиминация.ПериодОтчета = &ПериодОтчета
		|	И Элиминация.ОрганизацияДляЭлиминации = &ОрганизацияДляЭлиминации
		|	И ВЫБОР
		|			КОГДА &Валюта = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Элиминация.ВалютаЭлиминационныхПроводок = &Валюта
		|		КОНЕЦ";
	Запрос.УстановитьПараметр("Валюта", ВалютаВход);
	Запрос.УстановитьПараметр("ОрганизацияДляЭлиминации", ОрганизацияВход);
	Запрос.УстановитьПараметр("ПериодОтчета", ПериодВход);
	Запрос.УстановитьПараметр("Сценарий", СценарийВход);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РезультатФункции = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат РезультатФункции;
КонецФункции		 // ПолучитьЭкземплярЭлиминации() 

#КонецОбласти

#КонецЕсли