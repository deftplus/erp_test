
#Область ОбработкаОсновныхСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ЗаполнитьУправлениеПериодомСценария();
	ОбновитьФормуПоДаннымУправленияПериодомСценария(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьОформлениеФормы();
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура ПоказатьПротокол(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма",
			Новый Структура(
				"МассивПротоколируемыхОбъектов",
			ПолучитьМассивПротоколируемыхОбъектов()));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроводки(Команда)
	ВремяНачала = ТекущаяДата();
	Если НЕ ЗначениеЗаполнено(Объект.ПериодОтчета) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено поле ""Период отчета""!'");
		Сообщение.Поле = "ПериодОтчета";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено поле ""Сценарий""!'");
		Сообщение.Поле = "Сценарий";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ПериметрДляЭлиминации) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено поле ""Периметр для элиминации""!'");
		Сообщение.Поле = "ПериметрДляЭлиминации";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Документ должен быть записан!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = ЗаполнитьРегистрПроводокДляЭлиминации(Объект.Ссылка, флОтладка);
	
	ВремяКонца = ТекущаяДата();
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрШаблон(НСтр("ru = 'Время заполнения проводок %1 сек.'"), ВремяКонца - ВремяНачала);
	
	ЭтаФорма.Элементы.ПроводкиДляЭлиминации.Обновить();
	
	Если ЗначениеЗаполнено(МассивОбъектов) Тогда
		ОткрытьФорму("Обработка.ОтображениеПротоколируемыхСобытий.Форма.Форма", Новый Структура("МассивПротоколируемыхОбъектов",МассивОбъектов));
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьРегистрПроводокДляЭлиминации(Ссылка, флОтладка)
	Возврат Документы.Элиминация.ЗаполнитьРегистрПроводокДляЭлиминации(Ссылка, флОтладка)
КонецФункции

&НаКлиенте
Процедура КомандаОтладка(Команда)
	флОтладка = Не флОтладка;
	Элементы.ФормаКомандаОтладка.Пометка = флОтладка;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияДляЭлиминацииПриИзменении(Элемент)
	Если СтараяОрганизацияДляЭлиминации <> Объект.ОрганизацияДляЭлиминации Тогда
		ОрганизацияДляЭлиминацииПриИзмененииНаСервере(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	УстановитьСписокЭлиминирующихНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	УстановитьСписокЭлиминирующихНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПериметрНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачатьВыборПериметра();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыборПериметраНажатие(Элемент)
	НачатьВыборПериметра();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиенте
Процедура НачатьВыборПериметра()
	СтандартнаяОбработка = Ложь;
	ОповещениеПослеВыбораПериметра = Новый ОписаниеОповещения(
		"ПослеВыбораПериметра", 
		ЭтотОбъект);
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("ТекущаяСтрока", УправлениеПериодомСценария);
	ПараметрыФормыВыбора.Вставить("ОтобратьПериметрыСверки", Истина);
	ОткрытьФорму("Документ.УправлениеПериодомСценария.ФормаВыбора",
		ПараметрыФормыВыбора,
		ЭтаФорма,
		,
		,
		,
		ОповещениеПослеВыбораПериметра,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПериметра(НовыйПериметр, ДопПараметры) Экспорт
	Если ЗначениеЗаполнено(НовыйПериметр) Тогда
		УправлениеПериодомСценария = НовыйПериметр;
		УправлениеПериодомСценарияПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

	
#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервере
Функция ПолучитьМассивПротоколируемыхОбъектов()
	
	МассивОбъекта = Новый Массив();
	МассивОбъекта.Добавить(Объект.Ссылка);
	Возврат ПротоколируемыеСобытияУХ.ПолучитьМассивПротоколируемыхОбъектов(МассивОбъекта);
	
КонецФункции // ПолучитьМассивПротоколируемыхОбъектов() 

&НаСервере
Процедура УстановитьСписокЭлиминирующихНаСервере(флИзменитьДанные=Ложь)
	Если НЕ ЗначениеЗаполнено(Объект.ПериодОтчета) ИЛИ НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
		Объект.ОрганизацияДляЭлиминации = Справочники.Организации.ПустаяСсылка();
		Элементы.ОрганизацияДляЭлиминации.СписокВыбора.Очистить();
	Иначе
		ТЗЭлиминирующиеОрганизации = 
			УправлениеРабочимиПроцессамиУХ.ПолучитьЭлиминирующиеОрганизацииРегламента(
				Объект.ПериодОтчета, Объект.Сценарий);
		ВалютыЭлиминации.Загрузить(ТЗЭлиминирующиеОрганизации);
		мЭлиминирующихОрганизаций = 
			ТЗЭлиминирующиеОрганизации.ВыгрузитьКолонку(
				"Организация");
		Элементы.ОрганизацияДляЭлиминации.СписокВыбора.ЗагрузитьЗначения(
			мЭлиминирующихОрганизаций);
		Если флИзменитьДанные Тогда
			УстановитьЗначениеРеквизитаПоМассивуЗначений(
				Объект, 
				"ОрганизацияДляЭлиминации", 
				мЭлиминирующихОрганизаций);
		КонецЕсли;
	КонецЕсли;
	ОрганизацияДляЭлиминацииПриИзмененииНаСервере(
		флИзменитьДанные);
КонецПроцедуры

&НаСервере
Процедура ОрганизацияДляЭлиминацииПриИзмененииНаСервере(флИзменитьДанные=Ложь)
	Если НЕ ЗначениеЗаполнено(Объект.ОрганизацияДляЭлиминации)
			ИЛИ НЕ ЗначениеЗаполнено(Объект.ПериодОтчета)
			ИЛИ НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
		Объект.ПериметрДляЭлиминации = Справочники.Организации.ПустаяСсылка();
		Объект.ВалютаЭлиминационныхПроводок = Справочники.Валюты.ПустаяСсылка();
	Иначе
		мСтрокиВалюты = ВалютыЭлиминации.НайтиСтроки(
			Новый Структура("Организация", Объект.ОрганизацияДляЭлиминации));
		Если мСтрокиВалюты.Количество() > 0 
			И (флИзменитьДанные 
				ИЛИ НЕ ЗначениеЗаполнено(Объект.ВалютаЭлиминационныхПроводок)) Тогда
			Объект.ВалютаЭлиминационныхПроводок = мСтрокиВалюты[0].Валюта;
		КонецЕсли;
		Если флИзменитьДанные Тогда
			Объект.ПериметрДляЭлиминации =
				УправлениеРабочимиПроцессамиУХ.ПолучитьКонсолидирующуюОрганизацию(
					Объект.ОрганизацияДляЭлиминации,
					Объект.Сценарий,
					Объект.ПериодОтчета);
		КонецЕсли;
	КонецЕсли;
	СтараяОрганизацияДляЭлиминации = Объект.ОрганизацияДляЭлиминации;
	УстановитьОформлениеФормы();
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеРеквизитаПоМассивуЗначений(ОбъектВладелец, ИмяРеквизита, мЗначений)
	Если мЗначений.Количество() = 1 Тогда
		ОбъектВладелец[ИмяРеквизита] = мЗначений[0];
	ИначеЕсли мЗначений.Количество() > 0 Тогда
		// Обнуляем, если нет такого значения
		Если мЗначений.Найти(ОбъектВладелец[ИмяРеквизита]) = Неопределено Тогда
			ОбъектВладелец[ИмяРеквизита] = Неопределено;
		КонецЕсли;
	Иначе
		ОбъектВладелец[ИмяРеквизита] = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеФормы()
	флПериметраВыбран = ЗначениеЗаполнено(Объект.ПериодОтчета) 
		И ЗначениеЗаполнено(Объект.Сценарий);
	Элементы.ДекорацияВыборПериметра.Видимость = НЕ флПериметраВыбран;
	Элементы.Сценарий.Видимость = флПериметраВыбран;
	Элементы.ПериодОтчета.Видимость = флПериметраВыбран;
	Элементы.ОрганизацияДляЭлиминации.ТолькоПросмотр = НЕ флПериметраВыбран;
	ОтборыСписковКлиентСерверУХ.ИзменитьЭлементОтбораСписка(
		ПроводкиДляЭлиминации, 
		"ДокументЭлиминации", 
		Объект.Ссылка, 
		Истина);
	Элементы.ФормаПоказатьПротокол.Видимость = ЗначениеЗаполнено(Объект.Ссылка);
	УстановитьВидимостьПроводокПоказателей();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПроводокПоказателей()
	Если ЗначениеЗаполнено(ШаблонСверки) Тогда
		СпособыЭлиминации = 
			Справочники.ШаблоныСверкиВГО.ПроверитьСпособЭлиминацииПроводокПоказателей(
				ШаблонСверки);
		флПоказыватьПоПроводкам = СпособыЭлиминации.Проводки;
		флПоказыватьПоПоказателям = СпособыЭлиминации.Показатели;
		Элементы.ПроводкиДляЭлиминацииГруппаСчетаДтКт.Видимость = флПоказыватьПоПроводкам;
		Элементы.ПроводкиДляЭлиминацииГруппаСчетаКт.Видимость = флПоказыватьПоПроводкам;
		Элементы.ПроводкиДляЭлиминацииГруппаСубконтоДт.Видимость = флПоказыватьПоПроводкам;
		Элементы.ПроводкиДляЭлиминацииГруппаСубконтоКт.Видимость = флПоказыватьПоПроводкам;
		Элементы.ПроводкиДляЭлиминацииПоказательОтчета.Видимость = флПоказыватьПоПоказателям;
		Элементы.ПроводкиДляЭлиминацииГруппаАналитика123.Видимость = флПоказыватьПоПоказателям;
		Элементы.ПроводкиДляЭлиминацииГруппаАналитика45.Видимость = флПоказыватьПоПоказателям;
		Элементы.ПроводкиДляЭлиминации.Видимость = Истина;
		Элементы.ДекорацияНельзяРедактироватьДанныеДляЭлиминации.Видимость = Ложь;
		Элементы.ФормаЗаполнитьПроводки.Доступность = Истина;
	Иначе
		Элементы.ПроводкиДляЭлиминации.Видимость = Ложь;
		Элементы.ДекорацияНельзяРедактироватьДанныеДляЭлиминации.Видимость = Истина;
		Элементы.ФормаЗаполнитьПроводки.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУправлениеПериодомСценария()
	Если ЗначениеЗаполнено(Объект.Сценарий) И ЗначениеЗаполнено(Объект.ПериодОтчета) Тогда
		УправлениеПериодомСценария = УправлениеРабочимиПроцессамиУХ.ПолучитьДокументУправленияПериодомСценария(Объект.Сценарий, Объект.ПериодОтчета);
	Иначе
		УправлениеПериодомСценария = Документы.УправлениеПериодомСценария.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектПоУправлениюПериодомСценария()
	Если ЗначениеЗаполнено(УправлениеПериодомСценария) Тогда
		Объект.Сценарий = УправлениеПериодомСценария.Сценарий;
		Объект.ПериодОтчета = УправлениеПериодомСценария.ПериодСценария;
	Иначе
		Объект.Сценарий = Справочники.Сценарии.ПустаяСсылка();
		Объект.ПериодОтчета = Справочники.Периоды.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УправлениеПериодомСценарияПриИзмененииНаСервере()
	ЗаполнитьОбъектПоУправлениюПериодомСценария();
	ОбновитьФормуПоДаннымУправленияПериодомСценария(Ложь);
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуПоДаннымУправленияПериодомСценария(флИзменитьДанные=Ложь)
	СтараяОрганизацияДляЭлиминации = УправлениеПериодомСценария;
	СтараяОрганизацияДляЭлиминации = Объект.ОрганизацияДляЭлиминации;
	УстановитьСписокЭлиминирующихНаСервере(флИзменитьДанные);
	ШаблонСверки = СверкаВГОУХ.ПолучитьШаблонСверкиПоСценариюПериоду(
		Объект.Сценарий, 
		Объект.ПериодОтчета);
	УстановитьОформлениеФормы();
КонецПроцедуры


#КонецОбласти
