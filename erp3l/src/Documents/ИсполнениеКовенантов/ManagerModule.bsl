#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
		
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
	ТекстыЗапроса = Новый СписокЗначений;
	ДобавитьТекстЗапросаСостояниеИсполненияКовенантов(Запрос, ТекстыЗапроса);
	ДобавитьТекстЗапросаНарушенияУсловийДоговора(Запрос, ТекстыЗапроса);
	ДобавитьТекстЗапросаСтатусыПроверкиКовенантов(Запрос, ТекстыЗапроса);
	ДобавитьТекстЗапросаНапоминанияОПросрочкеКовенантов(Запрос, ТекстыЗапроса);
	
	ПроведениеСерверУХ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, 
		Истина // добавить разделитель
	);

КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизитыДокумента(ДокументОбъект) Экспорт
	Для каждого Строка Из ДокументОбъект.Ковенанты Цикл
		Если Строка.СтатусИсполнения <> Перечисления.СтатусыИсполненияКовентантов.Нарушен Тогда
			Строка.РеакцияБанкаНаНарушение = Перечисления.РеакцииБанковНаНарушенияКовенантов.ПустаяСсылка();	
		КонецЕсли;
		
		Если Строка.СтатусИсполнения = Перечисления.СтатусыИсполненияКовентантов.Нарушен 
			И Строка.РеакцияБанкаНаНарушение <> Перечисления.РеакцииБанковНаНарушенияКовенантов.Вейвер Тогда
			Строка.Вейвер = Справочники.ИсполнениеКовенантовПрисоединенныеФайлы.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	

Функция ДокументПоДоговору(ДоговорКонтрагента, ПлановаяДата, ДатаДокумента, ТекущийДокументСсылка = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИсполнениеКовенантов.Ссылка КАК Документ
	|ИЗ
	|	Документ.ИсполнениеКовенантов КАК ИсполнениеКовенантов
	|ГДЕ
	|	ИсполнениеКовенантов.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ВЫБОР
	|			КОГДА &ПлановаяДата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИсполнениеКовенантов.ПлановаяДата = &ПлановаяДата
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ИсполнениеКовенантов.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаДокумента, ДЕНЬ)
	|		КОНЕЦ
	|	И ИсполнениеКовенантов.Проведен
	|	И ИсполнениеКовенантов.Ссылка <> &ТекущийДокумент"
	);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ПлановаяДата", ПлановаяДата);
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокументСсылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Документ;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции

Функция КовенантыПоДоговору(ДоговорКонтрагента, Дата) Экспорт
	
	ВерсияСоглашения = РегистрыСведений.ВерсииРасчетов.ПолучитьАктуальнуюВерсиюФинансовогоИнструмента(ДоговорКонтрагента, Дата);
	Если НЕ ЗначениеЗаполнено(ВерсияСоглашения) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
			
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВерсияСоглашенияКредитКовенанты.Ковенант КАК Ковенант,
	|	МАКСИМУМ(ВерсияСоглашенияКредитКовенанты.Периодичность) КАК Периодичность
	|ИЗ
	|	Документ.ВерсияСоглашенияКредит.Ковенанты КАК ВерсияСоглашенияКредитКовенанты
	|ГДЕ
	|	ВерсияСоглашенияКредитКовенанты.Ссылка = &ВерсияСоглашения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВерсияСоглашенияКредитКовенанты.Ковенант"
	);
	Запрос.УстановитьПараметр("ВерсияСоглашения", ВерсияСоглашения);
	
	Возврат Запрос.Выполнить().Выгрузить();
			
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПлановаяДата <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДанныеДокумента.ПлановаяДата
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ)
	|	КОНЕЦ КАК ПлановаяДата,
	|	ДанныеДокумента.Дата КАК Период
	|ИЗ
	|	Документ.ИсполнениеКовенантов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	Реквизиты = ТаблицаРеквизитов[0];
	
	Для Каждого Колонка Из ТаблицаРеквизитов.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	АктуальнаяВерсияСоглашения = РегистрыСведений.ВерсииРасчетов.ПолучитьАктуальнуюВерсиюФинансовогоИнструмента(
		Реквизиты.ДоговорКонтрагента, Реквизиты.Дата);
	Запрос.УстановитьПараметр("АктуальнаяВерсияСоглашения", АктуальнаяВерсияСоглашения);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСостояниеИсполненияКовенантов(Запрос, ТекстыЗапроса)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИсполнениеКовенантовКовенанты.Ковенант КАК Ковенант,
	|	ИсполнениеКовенантовКовенанты.СтатусИсполнения КАК СтатусИсполнения,
	|	ИсполнениеКовенантовКовенанты.РеакцияБанкаНаНарушение КАК РеакцияБанкаНаНарушение,
	|	&Период КАК Период,
	|	&Ответственный КАК Ответственный,
	|	&ПлановаяДата КАК ПлановаяДата,
	|	&ДоговорКонтрагента КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ИсполнениеКовенантов.Ковенанты КАК ИсполнениеКовенантовКовенанты
	|ГДЕ
	|	ИсполнениеКовенантовКовенанты.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СостоянияИсполненияКовенантов");
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаНарушенияУсловийДоговора(Запрос, ТекстыЗапроса)

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ПлановаяДата КАК Период,
	|	&ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИСТИНА КАК ЕстьНарушение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНарушенийУсловийДоговоров.НарушениеКовенанта) КАК ВидНарушения,
	|	&Ссылка КАК Документ
	|ИЗ
	|	Документ.ИсполнениеКовенантов.Ковенанты КАК ИсполнениеКовенантовКовенанты
	|ГДЕ
	|	ИсполнениеКовенантовКовенанты.Ссылка = &Ссылка
	|	И ИсполнениеКовенантовКовенанты.СтатусИсполнения = ЗНАЧЕНИЕ(Перечисление.СтатусыИсполненияКовентантов.Нарушен)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "НарушенияУсловийДоговора");
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаСтатусыПроверкиКовенантов(Запрос, ТекстыЗапроса)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ИсполнениеКовенантовКовенанты.Ковенант КАК Ковенант,
	|	&ПлановаяДата КАК ПлановаяДата,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	&Ссылка КАК Документ,
	|	&Ответственный КАК Ответственный,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиКовенантов.Проверен) КАК СтатусПроверки
	|ИЗ
	|	Документ.ИсполнениеКовенантов.Ковенанты КАК ИсполнениеКовенантовКовенанты
	|ГДЕ
	|	ИсполнениеКовенантовКовенанты.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СтатусыПроверкиКовенантов");
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаНапоминанияОПросрочкеКовенантов(Запрос, ТекстыЗапроса)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НапоминанияПользователяУХ.Пользователь КАК Пользователь,
	|	НапоминанияПользователяУХ.ВремяСобытия КАК ВремяСобытия,
	|	НапоминанияПользователяУХ.Источник КАК Источник,
	|	НапоминанияПользователяУХ.ВидСобытияОповещения КАК ВидСобытияОповещения,
	|	НапоминанияПользователяУХ.СрокНапоминания КАК СрокНапоминания,
	|	НапоминанияПользователяУХ.НачалоНапоминаний КАК НачалоНапоминаний,
	|	НапоминанияПользователяУХ.Задача КАК Задача,
	|	НапоминанияПользователяУХ.ИнтервалВремениНапоминания КАК ИнтервалВремениНапоминания,
	|	НапоминанияПользователяУХ.ВремяПоследнегоНапоминания КАК ВремяПоследнегоНапоминания,
	|	НапоминанияПользователяУХ.ПараметрыСобытия КАК ПараметрыСобытия,
	|	НапоминанияПользователяУХ.Описание КАК Описание,
	|	ИсполнениеКовенантовКовенанты.Ковенант КАК Ковенант,
	|	&ПлановаяДата КАК ПлановаяДата
	|ПОМЕСТИТЬ ВТ_НапопоминанияОПросрочке
	|ИЗ
	|	Документ.ИсполнениеКовенантов.Ковенанты КАК ИсполнениеКовенантовКовенанты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НапоминанияПользователяУХ КАК НапоминанияПользователяУХ
	|		ПО ИсполнениеКовенантовКовенанты.Ковенант = НапоминанияПользователяУХ.Источник
	|			И (НапоминанияПользователяУХ.ВидСобытияОповещения = ЗНАЧЕНИЕ(Справочник.ВидыСобытийОповещений.ПросрочкаПроверкиСтатусовКовенантов))
	|			И (НапоминанияПользователяУХ.ВремяСобытия >= &ТекущаяДата)
	|ГДЕ
	|	ИсполнениеКовенантовКовенанты.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВТ_НапоминанияОПросрочкеКовенантов");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НапопоминанияОПросрочке.Пользователь КАК Пользователь,
	|	НапопоминанияОПросрочке.ВремяСобытия КАК ВремяСобытия,
	|	НапопоминанияОПросрочке.Источник КАК Источник,
	|	НапопоминанияОПросрочке.ВидСобытияОповещения КАК ВидСобытияОповещения,
	|	НапопоминанияОПросрочке.СрокНапоминания КАК СрокНапоминания,
	|	НапопоминанияОПросрочке.НачалоНапоминаний КАК НачалоНапоминаний,
	|	НапопоминанияОПросрочке.Задача КАК Задача,
	|	НапопоминанияОПросрочке.ИнтервалВремениНапоминания КАК ИнтервалВремениНапоминания,
	|	НапопоминанияОПросрочке.ВремяПоследнегоНапоминания КАК ВремяПоследнегоНапоминания,
	|	НапопоминанияОПросрочке.ПараметрыСобытия КАК ПараметрыСобытия,
	|	НапопоминанияОПросрочке.Описание КАК Описание
	|ИЗ
	|	ВТ_НапопоминанияОПросрочке КАК НапопоминанияОПросрочке";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "НапоминанияОПросрочкеКовенантов");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтатусыПроверкиКовенантов.Период КАК Период,
	|	СтатусыПроверкиКовенантов.Ковенант КАК Ковенант,
	|	СтатусыПроверкиКовенантов.ПлановаяДата КАК ПлановаяДата,
	|	СтатусыПроверкиКовенантов.Организация КАК Организация,
	|	СтатусыПроверкиКовенантов.Контрагент КАК Контрагент,
	|	СтатусыПроверкиКовенантов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СтатусыПроверкиКовенантов.Документ КАК Документ,
	|	СтатусыПроверкиКовенантов.СтатусПроверки КАК СтатусПроверки,
	|	СтатусыПроверкиКовенантов.Ответственный КАК Ответственный,
	|	СтатусыПроверкиКовенантов.Комментарий КАК Комментарий
	|ИЗ
	|	ВТ_НапопоминанияОПросрочке КАК НапопоминанияОПросрочке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПроверкиКовенантов КАК СтатусыПроверкиКовенантов
	|		ПО НапопоминанияОПросрочке.Ковенант = СтатусыПроверкиКовенантов.Ковенант
	|			И НапопоминанияОПросрочке.ПлановаяДата = СтатусыПроверкиКовенантов.ПлановаяДата
	|			И (СтатусыПроверкиКовенантов.СтатусПроверки = ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиКовенантов.Просрочен))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ПросроченныеСтатусыПроверки");
	
КонецПроцедуры
#КонецОбласти
#КонецЕсли