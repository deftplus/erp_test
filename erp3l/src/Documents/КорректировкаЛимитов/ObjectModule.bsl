#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипИсточника = ТипЗнч(ДанныеЗаполнения);
	Если ТипИсточника <> Тип("Структура") Тогда
		Источник = ДанныеЗаполнения;
		ДанныеЗаполнения = Новый Структура;
	КонецЕсли;
	
	ДанныеЗаполнения.Вставить("Ответственный", Пользователи.ТекущийПользователь());
	
	ОписаниеТиповОснований = Метаданные.Документы.КорректировкаЛимитов.Реквизиты.Основание.Тип;
	Если ОписаниеТиповОснований.СодержитТип(ТипИсточника) Тогда
		Документы.КорректировкаЛимитов.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, Источник);
	ИначеЕсли ТипИсточника = Тип("Структура") И ДанныеЗаполнения.Свойство("Основание") Тогда
		Документы.КорректировкаЛимитов.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения.Основание);
	ИначеЕсли ДанныеЗаполнения.Свойство("Требуется") Тогда
		ДанныеЗаполнения.Вставить("ИспользоватьЛимитирование");
		ДанныеЗаполнения.Вставить("ПериодичностьЛимитирования");
		ДанныеЗаполнения.Вставить("СпособОпределенияВалютыЛимитирования");
		Документы.КорректировкаЛимитов.ЗаполнитьПараметрыЛимитирования(ДанныеЗаполнения);
		Для Каждого Строка Из ДанныеЗаполнения.Требуется Цикл
			ЗаполнитьЗначенияСвойств(Требуется.Добавить(), Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ДанныеЗаполнения.Свойство("ВидБюджета") Тогда
		Если ЗначениеЗаполнено(ВидБюджета) Тогда
			ДанныеЗаполнения.Вставить("ВидБюджета", ВидБюджета);
		Иначе
			ДанныеЗаполнения.Вставить("ВидБюджета", ПланыВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ДанныеЗаполнения.Свойство("ГодЛимитирования") Тогда
		Если ЗначениеЗаполнено(ГодЛимитирования) Тогда
			ДанныеЗаполнения.Вставить("ГодЛимитирования", ГодЛимитирования);
		Иначе
			ДанныеЗаполнения.Вставить("ГодЛимитирования", НачалоГода(ТекущаяДатаСеанса()));
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ВидБюджета") И ДанныеЗаполнения.Свойство("ГодЛимитирования") Тогда
		
		ДанныеЗаполнения.Вставить("ИспользоватьЛимитирование");
		ДанныеЗаполнения.Вставить("ПериодичностьЛимитирования");
		ДанныеЗаполнения.Вставить("СпособОпределенияВалютыЛимитирования");
		Если НЕ ДанныеЗаполнения.Свойство("Валюта") Тогда
			ДанныеЗаполнения.Вставить("Валюта");
		КонецЕсли;
		
		Документы.ПереносЛимитов.ЗаполнитьПараметрыЛимитирования(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	//
	СуммаДокумента = Требуется.Итог("КОбеспечению");
	Обеспечено = ОбеспечитьЗаСчет.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Соответствие сумм требуется и обеспечить
	ИтогоКОбеспечению = Требуется.Итог("КОбеспечению");
	ИтогоОбеспечено = ОбеспечитьЗаСчет.Итог("Сумма");
	Если ИтогоКОбеспечению <> ИтогоОбеспечено Тогда
		Шаблон = НСтр("ru = 'Итого по строкам увеличения лимита бюджетов (%1) не равно итого по строкам обеспечения (%2). Проведение невозможно.'");
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(Шаблон, ИтогоКОбеспечению, ИтогоОбеспечено),,,,Отказ);
	КонецЕсли;
	
	// Не проводить, если суммы Увеличений ТЧ2 больше, чем суммы соответствующих строк ТЧ1;
	Реквизиты = "ЦФО, Проект, СтатьяБюджета, Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6, ПериодЛимитирования";
	
	// Строки увеличение
	СтруктураПоиска = Новый Структура("ВидОперации", Перечисления.ВидыОперацийКорректировкаЛимитов.Увеличение);
	Увеличение = ОбеспечитьЗаСчет.Выгрузить().Скопировать(СтруктураПоиска);
	Увеличение.Свернуть(Реквизиты, "Сумма");
	
	// Обеспечение
	КОбеспечениюПолнаяТаблица = Требуется.Выгрузить();
	КОбеспечению = КОбеспечениюПолнаяТаблица.Скопировать();
	КОбеспечению.Свернуть(Реквизиты, "КОбеспечению");
	
	Шаблон = НСтр("ru = 'Сумма увеличения лимита (%1) превышает требуемую сумму лимита (%2).
				| ЦФО/Проект: %3 / %4
				| Период лимитирования: %5'");
	ШаблонСтатья = НСтр("ru = 'Статья бюджета/Аналитики: %1 (%2,%3,%4,%5,%6,%7)'");
	
	// 
	СтруктураПоиска = Новый Структура(Реквизиты);
	Для Каждого СтрокаУвеличения Из Увеличение Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаУвеличения, Реквизиты);
		
		//
		СтрокиОбеспечения = КОбеспечению.НайтиСтроки(СтруктураПоиска);
		Если СтрокиОбеспечения.Количество() > 0 И СтрокиОбеспечения[0].КОбеспечению >= СтрокаУвеличения.Сумма Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСтатья = СтрШаблон(ШаблонСтатья, СтруктураПоиска.СтатьяБюджета,
			СтруктураПоиска.Аналитика1, СтруктураПоиска.Аналитика2, СтруктураПоиска.Аналитика3,
			СтруктураПоиска.Аналитика4, СтруктураПоиска.Аналитика5, СтруктураПоиска.Аналитика6);
		
		Если СтрокиОбеспечения.Количество() > 0 Тогда
			СуммаКОбеспечению = СтрокиОбеспечения[0].КОбеспечению;
		Иначе
			СуммаКОбеспечению = 0;
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон(Шаблон, 
			СтрокаУвеличения.Сумма, СуммаКОбеспечению,
			СтруктураПоиска.ЦФО, СтруктураПоиска.Проект,
			СтруктураПоиска.ПериодЛимитирования) + "
			| "+ТекстСтатья;
			
		// Определить номер строки
		СтрокиДляНомера = КОбеспечениюПолнаяТаблица.НайтиСтроки(СтруктураПоиска);
		Если СтрокиДляНомера.Количество() > 0 Тогда
			Поле = СтрШаблон("Требуется[%1].КОбеспечению", СтрокиДляНомера[0].НомерСтроки-1);
		Иначе
			Поле = "";
		КонецЕсли;
		
		// Ошибка, сумма на которую увеличили лимит больше, чем сумма требуется
		Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = ТекстСообщения;
        Сообщение.Поле = Поле;
        Сообщение.УстановитьДанные(ЭтотОбъект);
        Сообщение.Сообщить();		
		Отказ = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//
	ПроведениеСерверОПК.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.КорректировкаЛимитов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверОПК.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);	
	
	//
	КонтрольЛимитовУХ.ОтразитьЛимитыПоБюджетам(ДополнительныеСвойства, Движения, Отказ);
	
	//
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСерверОПК.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверОПК.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверОПК.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	Массив.Добавить(Движения.ЛимитыПоБюджетам);
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли 

