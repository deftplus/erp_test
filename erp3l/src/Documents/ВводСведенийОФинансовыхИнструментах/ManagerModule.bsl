
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст 
	= ТекстЗапроса_ТаблицаФИ(НомераТаблиц) 
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() 	
	+ ТекстЗапроса_ГрафикиФИ(НомераТаблиц);
	
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапроса_ТаблицаФИ(НомераТаблиц)

	НомераТаблиц.Вставить("СведенияОФИ", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаФИ.ДатаПризнания КАК Период,
	|	ТаблицаФИ.Ссылка.Организация КАК Организация,
	|	ТаблицаФИ.Ссылка.Сценарий КАК Сценарий,
	|	ТаблицаФИ.ФИ КАК ФИ,
	|	ТаблицаФИ.ВалютаФИ КАК Валюта,
	|	ТаблицаФИ.ДатаПризнания КАК ДатаПризнания,
	|	ТаблицаФИ.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаФИ.Количество КАК Количество,
	|	ТаблицаФИ.Контрагент КАК Контрагент,
	|	ТаблицаФИ.ПроцентнаяСтавкаПоДоговоруНСБУ КАК ПроцентнаяСтавкаПоДоговору,
	|	ТаблицаФИ.РыночнаяПроцентнаяСтавкаМСФО КАК РыночнаяПроцентнаяСтавка,
	|	ТаблицаФИ.ЭффективнаяПроцентнаяСтавкаМСФО КАК ЭффективнаяПроцентнаяСтавка,
	|	ТаблицаФИ.ЧистаяПриведеннаяСтоимостьМСФО КАК ЧистаяПриведеннаяСтоимость,
	|	ТаблицаФИ.ПараметрыУчетаФинансовогоИнструментаМСФО КАК ПараметрыУчетаФИ,
	|	ТаблицаФИ.ПараметрыУчетаФИДоРекласса КАК ПараметрыУчетаФИДоРекласса,
	|	ТаблицаФИ.ОписаниеОбеспеченияМСФО КАК ОписаниеОбеспечения,
	|	ТаблицаФИ.СуммаОсновнойЗадолженностиНСБУ КАК СуммаОсновнойЗадолженности,
	|	ТаблицаФИ.СуммаОсновнойЗадолженностиНДСНСБУ КАК СуммаОсновнойЗадолженностиНДС,
	|	ТаблицаФИ.СчетСписанияНеарендногоПлатежаМСФО КАК СчетСписанияНеарендногоПлатежа,
	|	ТаблицаФИ.СчетСписанияНеарендногоПлатежаСубконто1МСФО КАК СчетСписанияНеарендногоПлатежаСубконто1,
	|	ТаблицаФИ.СчетСписанияНеарендногоПлатежаСубконто2МСФО КАК СчетСписанияНеарендногоПлатежаСубконто2,
	|	ТаблицаФИ.СчетСписанияНеарендногоПлатежаСубконто3МСФО КАК СчетСписанияНеарендногоПлатежаСубконто3,	
	|	ТаблицаФИ.Подразделение КАК Подразделение,
	|	ТаблицаФИ.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ФинансовыеИнструменты КАК ТаблицаФИ
	|ГДЕ
	|	ТаблицаФИ.Ссылка = &Ссылка";	

КонецФункции

Функция ТекстЗапроса_ГрафикиФИ(НомераТаблиц)
		
	НомераТаблиц.Вставить("ГрафикиФИ",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ГрафикиМСФО.Дата КАК Период,
	|	ГрафикиМСФО.ФИ КАК ФИ,
	|	ГрафикиМСФО.ДенежныйПоток КАК ДенежныйПоток,
	|	ГрафикиМСФО.Дисконт_Амортизация КАК Дисконт_Амортизация,
	|	ГрафикиМСФО.Дисконт_Начисление КАК Дисконт_Начисление,
	|	ГрафикиМСФО.Дисконт_Остаток КАК Дисконт_Остаток,
	|	ГрафикиМСФО.НДС КАК НДС,
	|	ГрафикиМСФО.НеарендныйПлатеж КАК НеарендныйПлатеж,
	|	ГрафикиМСФО.ОсновнойДолг_Возврат КАК ОсновнойДолг_Возврат,
	|	ГрафикиМСФО.ОсновнойДолг_ДолгосрочнаяЗадолженность КАК ОсновнойДолг_ДолгосрочнаяЗадолженность,
	|	ГрафикиМСФО.ОсновнойДолг_Задолженность КАК ОсновнойДолг_Задолженность,
	|	ГрафикиМСФО.ОсновнойДолг_Получение КАК ОсновнойДолг_Получение,
	|	ГрафикиМСФО.ПереводВКраткосрочную КАК ПереводВКраткосрочную,
	|	ГрафикиМСФО.Проценты_Задолженность КАК Проценты_Задолженность,
	|	ГрафикиМСФО.Проценты_Начисление КАК Проценты_Начисление,
	|	ГрафикиМСФО.Проценты_Уплата КАК Проценты_Уплата,
	|	ГрафикиМСФО.ПроцентыБУ_Начисление КАК ПроцентыБУ_Начисление,
	|	ГрафикиМСФО.Расход2_Погашение КАК Расход2_Погашение,	
	|	ГрафикиМСФО.ЭСП_ОсновнойДолг_Задолженность КАК ЭСП_ОсновнойДолг_Задолженность,
	|	ГрафикиМСФО.ЭСП_Проценты_Задолженность КАК ЭСП_Проценты_Задолженность,
	|	ГрафикиМСФО.ЭСП_Проценты_Начисление КАК ЭСП_Проценты_Начисление,
	|	ГрафикиМСФО.ЭСП_Проценты_Уплата КАК ЭСП_Проценты_Уплата
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ГрафикиМСФО КАК ГрафикиМСФО
	|ГДЕ
	|	ГрафикиМСФО.Ссылка = &Ссылка";
	
КонецФункции

#КонецОбласти

#Область НастройкиЗаполнения

Функция ПолучитьДанныеФИ(Объект, СтрокаФИ) Экспорт
	
	ОтборФИ = Новый Структура("ФИ", СтрокаФИ.ФИ);
	
	ДокументКонтекст = Новый Структура("Сценарий,Организация,ПериодОтчета,Ссылка,Дата");
	ЗаполнитьЗначенияСвойств(ДокументКонтекст, Объект); 
	
	ДанныеФИ = Новый Структура;
	
	ДанныеФИ.Вставить("СтрокаФИ", 				ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаФИ));
	ДанныеФИ.Вставить("ОсновнойДолг",			Объект.ОсновнойДолг.Выгрузить(ОтборФИ));
	ДанныеФИ.Вставить("ВНА", 					Объект.ВНА.Выгрузить(ОтборФИ));
	ДанныеФИ.Вставить("Проценты", 				Объект.Проценты.Выгрузить(ОтборФИ));
	ДанныеФИ.Вставить("ГрафикМСФО", 			Объект.ГрафикиМСФО.Выгрузить(ОтборФИ));	
	ДанныеФИ.Вставить("АвансовыеПлатежи", 		Объект.АвансовыеПлатежи.Выгрузить(ОтборФИ));		
	ДанныеФИ.Вставить("ДополнительныеРасходы", 	Объект.ДополнительныеРасходы.Выгрузить(ОтборФИ));	
	
	ДанныеФИ.Вставить("Документ", 				ДокументКонтекст);

	Возврат ДанныеФИ; 

КонецФункции

#КонецОбласти

#Область ЗаполнениеДокументаИзНСБУ

Процедура ЗаполнитьДокумент(ДокументОбъект) Экспорт
	
	Если Не ИдентификацияПродуктаУХКлиентСервер.ЭтоУправлениеХолдингом() Тогда
		Возврат;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;		
	РезультатПакет = ПолучитьРезультатЗапроса(ДокументОбъект, НомераТаблиц);
	
	ДокументОбъект.ФинансовыеИнструменты	.Загрузить(РезультатПакет[НомераТаблиц.ФинансовыеИнструменты].Выгрузить());
	ДокументОбъект.ОсновнойДолг				.Загрузить(РезультатПакет[НомераТаблиц.ОсновнойДолг].Выгрузить());
	ДокументОбъект.Проценты					.Загрузить(РезультатПакет[НомераТаблиц.ГрафикиНСБУ].Выгрузить());
	ДокументОбъект.ДополнительныеРасходы	.Загрузить(РезультатПакет[НомераТаблиц.ДополнительныеРасходы].Выгрузить());
	
	ЗаполнитьВНА(РезультатПакет[НомераТаблиц.ВНА].Выгрузить(), ДокументОбъект);
	
	ДокументОбъект.ГрафикиМСФО.Очистить();
	
	ДанныеГрафика = Новый Структура();		
	ДанныеГрафика.Вставить("Документ", ДокументОбъект);
	
	Для каждого СтрокаФИ Из ДокументОбъект.ФинансовыеИнструменты Цикл
		
		Отбор = Новый Структура("ФИ", СтрокаФИ.ФИ);
		
		ДанныеГрафика.Вставить("ОсновнойДолг", 			ДокументОбъект.ОсновнойДолг.Выгрузить(Отбор));
		ДанныеГрафика.Вставить("ДополнительныеРасходы",	ДокументОбъект.ДополнительныеРасходы.Выгрузить(Отбор));
		ДанныеГрафика.Вставить("Проценты", 				ДокументОбъект.Проценты.Выгрузить(Отбор));
		ДанныеГрафика.Вставить("АвансовыеПлатежи", 		ДокументОбъект.АвансовыеПлатежи.Выгрузить(Отбор));
		ДанныеГрафика.Вставить("ВНА", 					ДокументОбъект.ВНА.Выгрузить(Отбор));
		
		ДанныеГрафика.Вставить("ГрафикМСФО", 	ДокументОбъект.ГрафикиМСФО.ВыгрузитьКолонки());
		ДанныеГрафика.Вставить("СтрокаФИ", 		СтрокаФИ);
		УчетФинансовыхИнструментовМСФОКлиентСерверУХ.ЗаполнитьГрафик(ДанныеГрафика, Новый Структура("ЗаполнитьОсновнойДолг"));
		
		ЗаполнитьЗначенияСвойств(СтрокаФИ, ДанныеГрафика.СтрокаФИ);		
		ДанныеГрафика.ГрафикМСФО.ЗаполнитьЗначения(СтрокаФИ.ФИ, "ФИ");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеГрафика.ГрафикМСФО, ДокументОбъект.ГрафикиМСФО);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьРезультатЗапроса(ДокументОбъект, НомераТаблиц, ФинансовыйИнструмент = Неопределено)
	
	РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(
		ДокументОбъект.Организация, ДокументОбъект.ПериодОтчета.ДатаОкончания, ДокументОбъект.Сценарий); 
    
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаНачала", 			ДокументОбъект.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 			ДокументОбъект.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("ПериодОтчета", 			ДокументОбъект.ПериодОтчета);
	Запрос.УстановитьПараметр("Организация", 			ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Сценарий", 				ДокументОбъект.Сценарий);
	Запрос.УстановитьПараметр("Ссылка", 				ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", 			ДокументОбъект.ВидОперации);
	Запрос.УстановитьПараметр("ПланСчетовМСФО", 		РеквизитыУП.ПланСчетовМСФО);
	Запрос.УстановитьПараметр("ВидСубконтоДоговоры",    ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.СправочникДоговораКонтрагентов);
	Запрос.УстановитьПараметр("ИспользуютсяТК", 		Не РеквизитыУП.ФормироватьПроводкиМСФО);
		
	ТекстЗапроса = ТекстЗапросаИзмененияПериода(НомераТаблиц);
	Если ФинансовыйИнструмент = Неопределено Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПредметГрафика_ОтборПоФИ", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОстаткиДЗ_Субконто1_ОтборПоФИ", "ИСТИНА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОстаткиДЗ_ФИ_ОтборПоФИ", "ИСТИНА");
		
	Иначе	
		
		Запрос.УстановитьПараметр("ФИ", ФинансовыйИнструмент);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПредметГрафика_ОтборПоФИ", "ПредметГрафика В (&ФИ)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОстаткиДЗ_Субконто1_ОтборПоФИ", "ОстаткиДЗ.Субконто1 В (&ФИ)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОстаткиДЗ_ФИ_ОтборПоФИ", "ОстаткиДЗ.ФИ В (&ФИ)");
	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);//Разыменования
	Запрос.Текст = ТекстЗапроса;		
	Возврат Запрос.ВыполнитьПакет();

КонецФункции

Функция ПолучитьСчетаУчетаДЗ()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетаБД.Ссылка
	|ИЗ	
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Владелец = &ПланСчетовБД
	|	И СчетаБД.СчетСсылка В
	|			(ВЫБРАТЬ
	|				т.Ссылка
	|			ИЗ
	|				ПланСчетов.МСФО.ВидыСубконто КАК т
	|			ГДЕ
	|				т.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.СправочникДоговораКонтрагентов))");
	
	Запрос.УстановитьПараметр("ПланСчетовБД", Справочники.ПланыСчетовБД.ПолучитьПланСчетовБД("МСФО"));
		
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"); 
	
КонецФункции

Функция ТекстЗапросаИзмененияПериода(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_ИсключенияЗаполнения(НомераТаблиц));
	ТекстЗапроса.Добавить(ВстраиваниеУХ.ТекстЗапроса_втДКЗ(НомераТаблиц));
	ТекстЗапроса.Добавить(ВстраиваниеУХ.ТекстЗапроса_втФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ПараметрыФИОбщие(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ГрафикиНСБУ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_СведенияФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ЗначенияСтавок(НомераТаблиц));	
	ТекстЗапроса.Добавить(ВстраиваниеУХ.ТекстЗапроса_АналитикаУчетаФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ФинансовыеИнструменты(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ПараметрыГрафика(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_Уничтожить(НомераТаблиц, "втГрафикиНСБУ"));
	ТекстЗапроса.Добавить(ТекстЗапроса_ДопРасходы(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ДопРасходы_ТУ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ВНА(НомераТаблиц));
	
	Возврат СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
КонецФункции

Процедура ЗаполнитьВНА(ТабВНАФИ, Объект)

	Если ТабВНАФИ.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = МСФОКлиентСерверУХ.ПолучитьПараметрыЗаполнения(Объект);
	ИсточникЗаполнения = МСФОВНАУХ.ПолучитьДанные_ВводСведенийОФинансовыхИнструментах(ПараметрыЗаполнения);
	Объект.ВНА.Загрузить(ИсточникЗаполнения.ВНА);
	
	КонтекстФормы = Новый Структура("Элементы,Объект,КэшируемыеЗначения", Новый Массив, Объект, Новый Структура);
	РеквизитыТЧ = Метаданные.НайтиПоТипу(ПараметрыЗаполнения.ТипДокумента).ТабличныеЧасти.ВНА.Реквизиты;
	Для каждого РеквизитТЧ Из РеквизитыТЧ Цикл
		КонтекстФормы.Элементы.Добавить(Новый Структура("ПутьКДанным", "Объект.ВНА." + РеквизитТЧ.Имя));	
	КонецЦикла;

	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(КонтекстФормы);

КонецПроцедуры

#Область ТекстЗапроса_Заполнение

Функция ТекстЗапроса_ИсключенияЗаполнения(НомераТаблиц)
	
	НомераТаблиц.Вставить("втДокументыИсключения",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИсключения", 			НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втДокументыИсключения
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах КАК т
	|ГДЕ
	|	т.Ссылка <> &Ссылка
	|	И т.Организация = &Организация
	|	И т.ПериодОтчета В ИЕРАРХИИ(&ПериодОтчета)
	|	И т.Сценарий = &Сценарий
	|	И т.ВидОперации = &ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.ФИ КАК ФИ
	|ПОМЕСТИТЬ втИсключения
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ФинансовыеИнструменты КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДокументыИсключения КАК втДокументыИсключения
	|		ПО т.Ссылка = втДокументыИсключения.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ";

КонецФункции

Функция ТекстЗапроса_ПараметрыФИОбщие(НомераТаблиц)

	НомераТаблиц.Вставить("втЗначенияБулево", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втДоступныеФИ", 			НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	ИСТИНА КАК ЗначениеЭлемента
	|ПОМЕСТИТЬ втЗначенияБулево
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Ссылка КАК ВидФИНСБУ,
	|	втЗначенияВалютный.ЗначениеЭлемента КАК Валютный,
	|	втЗначенияВыданный.ЗначениеЭлемента КАК Выданный
	|ПОМЕСТИТЬ втДоступныеФИ
	|ИЗ
	|	Перечисление.ВидыФинансовыхИнструментов КАК т,
	|	втЗначенияБулево КАК втЗначенияВалютный,
	|	втЗначенияБулево КАК втЗначенияВыданный"

КонецФункции

Функция ТекстЗапроса_ГрафикиНСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("втГрафикиНСБУ", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втДатыНачалаГрафиковФИ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втФИПоГрафику", 			НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Договор КАК ФИ,
	|	т.ДатаОкончания КАК Дата,
	|	т.Стоимость КАК Сумма,
	|	ЛОЖЬ КАК Начисление,
	|	ИСТИНА КАК ОсновнойДолг
	|ПОМЕСТИТЬ втГрафикиНСБУ
	|ИЗ
	|	втДКЗ КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Договор,
	|	т.ДатаНачала,
	|	т.Стоимость,
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	втДКЗ КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.ПредметГрафика,
	|	т.Период,
	|	СУММА(т.Сумма),
	|	т.ВидДвижения = втФИ.ВидДвиженияНачисление,
	|	ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Лизинг
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВозвратПоГрафику
	|			ТОГДА НЕ(т.ВидДвижения = втФИ.ВидДвиженияНачисление
	|						И т.ЭлементСтруктурыЗадолженности <> ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг))
	|		ИНАЧЕ т.ЭлементСтруктурыЗадолженности = ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг)
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.РасчетыСКонтрагентамиГрафики КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО т.Регистратор = втФИ.ВерсияФИ
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ПредметГрафика,
	|	т.Период,
	|	т.ВидДвижения = втФИ.ВидДвиженияНачисление,
	|	ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.Лизинг
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВозвратПоГрафику
	|			ТОГДА НЕ(т.ВидДвижения = втФИ.ВидДвиженияНачисление
	|						И т.ЭлементСтруктурыЗадолженности <> ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг))
	|		ИНАЧЕ т.ЭлементСтруктурыЗадолженности = ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.ДоговорКонтрагента,
	|	т.Период,
	|	СУММА(т.СуммаОперации),
	|	т.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход),
	|	ВЫБОР
	|		КОГДА НЕ втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВозвратПоГрафику
	|			ТОГДА НЕ(т.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
	|						И т.ТипОперацииФИ <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.ОсновнойДолг))
	|		ИНАЧЕ т.ТипОперацииФИ = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.ОсновнойДолг)
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ГрафикиПериодическихОпераций КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втФИ КАК втФИ
	|		ПО т.ДоговорКонтрагента = втФИ.ФИ
	|			И (т.ТипОперацииФИ В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.ОсновнойДолг), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.Проценты)))
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ДоговорКонтрагента,
	|	т.Период,
	|	т.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход),
	|	ВЫБОР
	|		КОГДА НЕ втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ВозвратПоГрафику
	|			ТОГДА НЕ(т.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Приход)
	|						И т.ТипОперацииФИ <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.ОсновнойДолг))
	|		ИНАЧЕ т.ТипОперацииФИ = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийГрафикаФинансовыхИнструментов.ОсновнойДолг)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втГрафикиНСБУ.ФИ КАК ФИ,
	|	МИНИМУМ(втГрафикиНСБУ.Дата) КАК ФактическаяДатаНачалаГрафикаФИ
	|ПОМЕСТИТЬ втДатыНачалаГрафиковФИ
	|ИЗ
	|	втГрафикиНСБУ КАК втГрафикиНСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	втГрафикиНСБУ.ФИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.ФИ КАК ФИ,
	|	т.ВидФинансовогоИнструмента КАК ВидФинансовогоИнструмента,
	|	т.ПроцентнаяСтавка КАК ПроцентнаяСтавка,
	|	т.Валюта КАК Валюта,
	|	т.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(втДатыНачалаГрафиковФИ.ФактическаяДатаНачалаГрафикаФИ, т.ДатаНачала) КАК ДатаПризнания,
	|	т.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(ОперацияНаПервуюДатуГрафика.Сумма, ЕСТЬNULL(втГрафикиНСБУ.Сумма, 0)) КАК СуммаОсновнойЗадолженностиНСБУ
	|ПОМЕСТИТЬ втФИПоГрафику
	|ИЗ
	|	втФИ КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втГрафикиНСБУ КАК втГрафикиНСБУ
	|		ПО т.ФИ = втГрафикиНСБУ.ФИ
	|			И т.ДатаНачала = втГрафикиНСБУ.Дата
	|			И (втГрафикиНСБУ.ОсновнойДолг)
	|			И (НЕ втГрафикиНСБУ.Начисление)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДатыНачалаГрафиковФИ КАК втДатыНачалаГрафиковФИ
	|			ЛЕВОЕ СОЕДИНЕНИЕ втГрафикиНСБУ КАК ОперацияНаПервуюДатуГрафика
	|			ПО втДатыНачалаГрафиковФИ.ФИ = ОперацияНаПервуюДатуГрафика.ФИ
	|				И втДатыНачалаГрафиковФИ.ФактическаяДатаНачалаГрафикаФИ = ОперацияНаПервуюДатуГрафика.Дата
	|				И (ОперацияНаПервуюДатуГрафика.ОсновнойДолг)
	|				И (ОперацияНаПервуюДатуГрафика.Начисление)
	|		ПО т.ФИ = втДатыНачалаГрафиковФИ.ФИ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.ФИ";

КонецФункции

Функция ТекстЗапроса_СведенияФИ(НомераТаблиц)

	НомераТаблиц.Вставить("СведенияФИ",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Договор КАК ФИ,
	|	т.Договор.ВидФинансовогоИнструмента КАК ВидФинансовогоИнструмента,
	|	т.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	0 КАК ПроцентнаяСтавка,
	|	т.Валюта КАК ВалютаФИ,
	|	т.Контрагент КАК Контрагент,
	|	т.ДатаНачала КАК ДатаПризнания,
	|	т.ДатаОкончания КАК ДатаОкончания,
	|	т.Стоимость КАК СуммаОсновнойЗадолженностиНСБУ,
	|	т.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости) КАК АС_ФИ
	|ПОМЕСТИТЬ втСведенияФИ
	|ИЗ
	|	втДКЗ КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.ФИ,
	|	т.ВидФинансовогоИнструмента,
	|	т.ФИ.ПараметрыУчетаФИ,
	|	т.ПроцентнаяСтавка,
	|	т.Валюта,
	|	т.Контрагент,
	|	т.ДатаПризнания,
	|	т.ДатаОкончания,
	|	т.СуммаОсновнойЗадолженностиНСБУ,
	|	т.ФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости)
	|ИЗ
	|	втФИПоГрафику КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ,
	|	АС_ФИ";

КонецФункции

Функция ТекстЗапроса_ЗначенияСтавок(НомераТаблиц)
	
	НомераТаблиц.Вставить("втЗначенияСтавок", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВидКотировки КАК ВидСтавки,
	|	т.Значение КАК ЗначениеСтавки
	|ПОМЕСТИТЬ втЗначенияСтавок
	|ИЗ
	|	РегистрСведений.ЗначенияКотировокФИ.СрезПоследних(
	|			&ДатаОкончания,
	|			ВидКотировки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					т.ПараметрыУчетаФИ.ВидСтавкиДисконтирования
	|				ИЗ
	|					втСведенияФИ КАК т
	|			
	|				ОБЪЕДИНИТЬ
	|			
	|				ВЫБРАТЬ
	|					т.ПараметрыУчетаФИ.ВидСтавкиРыночная
	|				ИЗ
	|					втСведенияФИ КАК т)) КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидСтавки";

КонецФункции

Функция ТекстЗапроса_ФинансовыеИнструменты(НомераТаблиц)

	НомераТаблиц.Вставить("ФинансовыеИнструменты",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ФинансовыеИнструменты.ФИ КАК ФИ,
	|	ФинансовыеИнструменты.ВалютаФИ КАК ВалютаФИ,
	|	ФинансовыеИнструменты.Контрагент КАК Контрагент,
	|	втАналитикаФИ.Подразделение КАК Подразделение,
	|	втАналитикаФИ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ФинансовыеИнструменты.ДатаПризнания КАК ДатаПризнания,
	|	ФинансовыеИнструменты.ДатаОкончания КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ФинансовыеИнструменты.СуммаОсновнойЗадолженностиНСБУ > 0
	|			ТОГДА ФинансовыеИнструменты.СуммаОсновнойЗадолженностиНСБУ
	|		ИНАЧЕ -(ВЫРАЗИТЬ(ФинансовыеИнструменты.СуммаОсновнойЗадолженностиНСБУ КАК ЧИСЛО(18, 5)))
	|	КОНЕЦ КАК СуммаОсновнойЗадолженностиНСБУ,
	|	ФинансовыеИнструменты.ПроцентнаяСтавка КАК ПроцентнаяСтавкаПоДоговоруНСБУ,
	|	ЕстьNULL(СтавкаДисконта.ЗначениеСтавки, СтавкаРСП.ЗначениеСтавки) КАК РыночнаяПроцентнаяСтавкаМСФО,
	|	ЕСТЬNULL(СведенияОФИ.ПараметрыУчетаФИ, ФинансовыеИнструменты.ПараметрыУчетаФИ) КАК ПараметрыУчетаФинансовогоИнструментаМСФО
	|ИЗ
	|	втСведенияФИ КАК ФинансовыеИнструменты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФИ.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация = &Организация
	|					И Сценарий = &Сценарий
	|					И Регистратор <> &Ссылка) КАК СведенияОФИ
	|		ПО ФинансовыеИнструменты.ФИ = СведенияОФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАналитикаФИ КАК втАналитикаФИ
	|		ПО ФинансовыеИнструменты.ФИ = втАналитикаФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗначенияСтавок КАК СтавкаДисконта
	|		ПО ФинансовыеИнструменты.ПараметрыУчетаФИ.ВидСтавкиДисконтирования = СтавкаДисконта.ВидСтавки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗначенияСтавок КАК СтавкаРСП
	|		ПО ФинансовыеИнструменты.ПараметрыУчетаФИ.ВидСтавкиРыночная = СтавкаРСП.ВидСтавки
	|ГДЕ
	|	ЕСТЬNULL(СведенияОФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости), ФинансовыеИнструменты.АС_ФИ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИ";

КонецФункции

Функция ТекстЗапроса_ПараметрыГрафика(НомераТаблиц)

	НомераТаблиц.Вставить("ГрафикиНСБУ",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОсновнойДолг",	НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	втГрафикиНСБУ.ФИ КАК ФИ,
	|	втГрафикиНСБУ.Дата КАК Дата,
	|	СУММА(ВЫБОР
	|			КОГДА втГрафикиНСБУ.Начисление
	|				ТОГДА втГрафикиНСБУ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Начисление,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ втГрафикиНСБУ.Начисление
	|				ТОГДА втГрафикиНСБУ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Уплата
	|ИЗ
	|	втГрафикиНСБУ КАК втГрафикиНСБУ
	|ГДЕ
	|	НЕ втГрафикиНСБУ.ОсновнойДолг
	|	И втГрафикиНСБУ.ФИ В
	|			(ВЫБРАТЬ
	|				т.ФИ
	|			ИЗ
	|				втСведенияФИ КАК т
	|			ГДЕ
	|				т.АС_ФИ)
	|
	|СГРУППИРОВАТЬ ПО
	|	втГрафикиНСБУ.ФИ,
	|	втГрафикиНСБУ.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИ,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втГрафикиНСБУ.ФИ КАК ФИ,
	|	втГрафикиНСБУ.Дата КАК Дата,
	|	СУММА(ВЫБОР
	|			КОГДА втГрафикиНСБУ.Начисление
	|				ТОГДА втГрафикиНСБУ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Получение,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ втГрафикиНСБУ.Начисление
	|				ТОГДА втГрафикиНСБУ.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Возврат
	|ИЗ
	|	втГрафикиНСБУ КАК втГрафикиНСБУ
	|ГДЕ
	|	втГрафикиНСБУ.ОсновнойДолг
	|	И втГрафикиНСБУ.ФИ В
	|			(ВЫБРАТЬ
	|				т.ФИ
	|			ИЗ
	|				втСведенияФИ КАК т
	|			ГДЕ
	|				т.АС_ФИ)
	|
	|СГРУППИРОВАТЬ ПО
	|	втГрафикиНСБУ.ФИ,
	|	втГрафикиНСБУ.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФИ,
	|	Дата";

КонецФункции

Функция ТекстЗапроса_Уничтожить(НомераТаблиц, ИмяТаблицы)

	НомераТаблиц.Вставить("Уничтожить" + ИмяТаблицы, НомераТаблиц.Количество());	
	Возврат "УНИЧТОЖИТЬ " + ИмяТаблицы;

КонецФункции

Функция ТекстЗапроса_ДопРасходы(НомераТаблиц)
	
	НомераТаблиц.Вставить("втДоговорыДопРасходов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	СвязанныеДоговоры.БазовыйДоговор КАК ФИ,
	|	СвязанныеДоговоры.СвязанныйДоговор КАК ДоговорДопРасхода
	|ПОМЕСТИТЬ втДоговорыДопРасходов
	|ИЗ
	|	РегистрСведений.СвязанныеДоговоры КАК СвязанныеДоговоры
	|ГДЕ
	|	СвязанныеДоговоры.БазовыйДоговор В
	|			(ВЫБРАТЬ
	|				т.ФИ
	|			ИЗ
	|				втФИ КАК т)
	|	И СвязанныеДоговоры.ВидСвязи.ОдинаковаяОрганизация
	|	И СвязанныеДоговоры.ВидСвязи.ДополнительныйРасходПоБазовомуДоговору";

КонецФункции

Функция ТекстЗапроса_ДопРасходы_ТУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("ДополнительныеРасходы", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	МСФООбороты.Период КАК ДатаОперации,
	|	втДоговорыДопРасходов.ФИ,
	|	МСФООбороты.СуммаВВалютеОборот КАК СуммаВВалюте,
	|	МСФООбороты.СуммаВВалютеУчетаОборот КАК СуммаВФункциональнойВалюте,
	|	МСФООбороты.Валюта,
	|	МСФООбороты.Счет,
	|	СчетаБД.Ссылка КАК СчетРасходаМСФО,
	|	МСФООбороты.Субконто1 КАК СчетРасходаСубконто1МСФО,
	|	МСФООбороты.Субконто2 КАК СчетРасходаСубконто2МСФО,
	|	МСФООбороты.Субконто3 КАК СчетРасходаСубконто3МСФО
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			Регистратор,
	|			,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И ВЫБОР
	|					КОГДА Субконто2 В
	|							(ВЫБРАТЬ
	|								т.ДоговорДопРасхода
	|							ИЗ
	|								втДоговорыДопРасходов КАК т)
	|						ТОГДА ИСТИНА
	|					КОГДА Субконто1 В
	|							(ВЫБРАТЬ
	|								т.ДоговорДопРасхода
	|							ИЗ
	|								втДоговорыДопРасходов КАК т)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ,
	|			,
	|			) КАК МСФООбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДоговорыДопРасходов КАК втДоговорыДопРасходов
	|		ПО (втДоговорыДопРасходов.ДоговорДопРасхода = МСФООбороты.Субконто2
	|				ИЛИ втДоговорыДопРасходов.ДоговорДопРасхода = МСФООбороты.Субконто1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД КАК СчетаБД
	|		ПО МСФООбороты.Счет = СчетаБД.СчетСсылка И СчетаБД.Владелец = &ПланСчетовМСФО";

КонецФункции

Функция ТекстЗапроса_ДопРасходы_ТК(НомераТаблиц)

	// нельзя однозначно определить доп расходы среди оборотов по связанным договорам
	НомераТаблиц.Вставить("ДополнительныеРасходы", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	NULL";
	
КонецФункции

Функция ТекстЗапроса_ВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВНА КАК ВНА,
	|	т.ФИ КАК ФИ
	|ИЗ
	|	РегистрСведений.ОбъектыАрендыПоУмолчаниюМСФО КАК т
	|ГДЕ
	|	т.ФИ В
	|			(ВЫБРАТЬ
	|				т.ФИ
	|			ИЗ
	|				втФИ КАК т)";

КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеДанных

Процедура ОбновлениеГрафиковФИМСФО_2_0() Экспорт

	Выборка = Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ОсновнойДолг.Количество() Тогда
			Продолжить;//заполнялся ранее
		КонецЕсли;
		
		ТекущийОбъект = Выборка.ПолучитьОбъект();		
		ГрафикиМСФО = Новый Массив;
		
		ТаблицаФИ = ТекущийОбъект.ФинансовыеИнструменты.Выгрузить();
		Для каждого СтрокаФИ Из ТаблицаФИ Цикл
			ГрафикиМСФО.Добавить(ПолучитьГрафикМСФО(ТекущийОбъект, СтрокаФИ));			
		КонецЦикла;
		
		ТекущийОбъект.ГрафикиМСФО.Очистить();
		
		Для каждого ТекущийГрафикМСФО Из ГрафикиМСФО Цикл
			ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ТекущийГрафикМСФО, ТекущийОбъект.ГрафикиМСФО);
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ТекущийОбъект);		
		
		Если Не Выборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		нз = РегистрыСведений.ГрафикиФИ.СоздатьНаборЗаписей();
		нз.Отбор.Регистратор.Установить(Выборка.Ссылка);
		нз.Прочитать();
		нз.Очистить();
		
		ГрафикиМСФО = ТекущийОбъект.ГрафикиМСФО.Выгрузить();
		ГрафикиМСФО.Колонки.Дата.Имя = "Период";
		
		нз.Загрузить(ГрафикиМСФО);		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(нз);
						
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьГрафикМСФО(Объект, СтрокаФИ)

	НоваяСтрока = Объект.ОсновнойДолг.Добавить();
	
	НоваяСтрока.ФИ 			= СтрокаФИ.ФИ;
	НоваяСтрока.Дата		= СтрокаФИ.ДатаПризнания;
	НоваяСтрока.Получение	= СтрокаФИ.СуммаОсновнойЗадолженностиНСБУ;
	
	ДанныеГрафика = ПолучитьДанныеФИ(Объект, СтрокаФИ);
	ДанныеГрафика.ГрафикМСФО.Колонки.Добавить("ОтчетнаяДата");
		
	УчетФинансовыхИнструментовМСФОКлиентСерверУХ.ЗаполнитьГрафик(ДанныеГрафика, Новый Структура("ЗаполнитьОсновнойДолг"));
		
	ДанныеГрафика.ГрафикМСФО.ЗаполнитьЗначения(СтрокаФИ.ФИ, "ФИ");
	
	Возврат ДанныеГрафика.ГрафикМСФО;

КонецФункции

Процедура ОбновлениеВНА(ПараметрыВыполнения = Неопределено) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	т.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводСведенийОФинансовыхИнструментах.ВНА КАК т
	|ГДЕ
	|	т.ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПустаяСсылка)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого СтрокаВНА Из Объект.ВНА Цикл
			СтрокаВНА.ВидОперации = ПредопределенноеЗначение("Справочник.ВидыОпераций.ВводВЭксплуатацию");
		КонецЦикла;
		
		ТабНовые = Объект.ВНА.Выгрузить(,"ФИ,ВНА,ПараметрыУчетаВНА,УдалитьДатаВозвратаМСФО,УдалитьДатаПогашенияМСФО,УдалитьВозвращаемаяЗадолженностьМСФО");
		
		Для каждого СтрокаВНА Из Объект.ВНА Цикл
			Если ЗначениеЗаполнено(СтрокаВНА.УдалитьДатаВозвратаМСФО) Тогда
				
				НоваяСтрока = Объект.ВНА.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВНА, "ФИ,ВНА");
				НоваяСтрока.Дата = СтрокаВНА.УдалитьДатаВозвратаМСФО;
				НоваяСтрока.СуммаМСФО = СтрокаВНА.УдалитьВозвращаемаяЗадолженностьМСФО;
				НоваяСтрока.ВидОперации = ПредопределенноеЗначение("Справочник.ВидыОпераций.ВозвратОбъектаЛизинга");
				НоваяСтрока.СписатьНаВНА = Истина;
								
			ИначеЕсли ЗначениеЗаполнено(СтрокаВНА.УдалитьДатаПогашенияМСФО) Тогда
				
				НоваяСтрока = Объект.ВНА.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВНА, "ФИ,ВНА");
				НоваяСтрока.Дата = СтрокаВНА.УдалитьДатаПогашенияМСФО;
				НоваяСтрока.ВидОперации = ПредопределенноеЗначение("Справочник.ВидыОпераций.УменьшениеЛизинга");
				НоваяСтрока.СписатьНаВНА = Истина;
				
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
		
	КонецЦикла; 	

КонецПроцедуры

#КонецОбласти

#КонецЕсли