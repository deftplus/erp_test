#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ПредставлениеИсходногоДокумента");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ПредставлениеИсходногоДокумента) Тогда
		
		СтандартнаяОбработка = Ложь;
		Представление = СокрЛП(Данные.ПредставлениеИсходногоДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область СтандартныеПодсистемыКоманды

// Добавляет команду создания объекта на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - Добавленная Команда.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	
	Если ПравоДоступа("Добавление", МетаданныеДокумента) Тогда
		
		КомандаСоздатьНаОсновании						= КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер				= МетаданныеДокумента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление			= ОбщегоНазначения.ПредставлениеОбъекта(МетаданныеДокумента);
		КомандаСоздатьНаОсновании.РежимЗаписи			= "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// 	Параметры - Структура - параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Возвращает документ Отражение фактических данных по его источнику Источник.
Функция ОФДПоИсточнику(Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина); // По причине обработки любых ссылок.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныйДокумент", Источник.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка КАК ДокументОтраженияФакта
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ИсходныйДокумент = &ИсходныйДокумент";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ДокументОтраженияФакта;
	
КонецФункции		// ОФДПоИсточнику()

// Процедура отражает источник документом ОФД
Процедура ОтразитьФактическоеДвижениеПоБюджетамПоПредопределенномуПравилу(Источник, Отказ) Экспорт 
	
	// 
	ЗаполнениеОФДРазрешено = ЗаполнениеОФД.ТребуетсяЗаполнение(Источник.Ссылка);
	
	// Пытаемся найти ОФД
	ОФДПоИсточнику = неопределено;
	Если НЕ Источник.ДополнительныеСвойства.Свойство("ДокументОтраженияФакта", ОФДПоИсточнику) Тогда
		ОФДПоИсточнику = ОФДПоИсточнику(Источник.Ссылка);
	КонецЕсли;
	
	// Получаем объект
	Если ОФДПоИсточнику = неопределено И НЕ ЗаполнениеОФДРазрешено Тогда
		// ОФД нет и заполнять его не надо
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОФДПоИсточнику) Тогда
		ДокОФД = ОФДПоИсточнику.ПолучитьОбъект();
	Иначе
		//
		ДокОФД = Документы.ОтражениеФактическихДанныхБюджетирования.СоздатьДокумент();
		ДокОФД.УстановитьНовыйНомер();
	КонецЕсли;
	
	// 
	Если ЗаполнениеОФДРазрешено Тогда
		
		//
		ЗаполнениеОФД.ПодготовитьДопИнформациюДляОтраженияДокумента(Источник, ДокОФД);
		
		// Записаться
		ПодготовитьОбъектОтраженияФакта(ДокОФД);
		ДокОФД.Заполнить(Источник.Ссылка);
		ДокОФД.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли ДокОФД.Проведен Тогда
		ДокОФД.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
КонецПроцедуры // ОтразитьФактическоеДвижениеДСПоБюджетам() 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область КонтрольНаличияПериодов
	
// Функция возвращает текст запроса, который формирует временную таблицу запроса ВТ_ДатыОпераций с колонками
//   Дата 		- Дата - Дата операции по документу
//	 ВидБюджета - ПеречислениеСсылка.ПредназначенияЭлементовСтруктурыОтчета - Вид бюджета, по которому будет операция
// Текст запроса уникален для каждого вида документа
//
Функция ТексЗапроса_ДатыОперацийДокумента() экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТЧ1.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияДенежныхСредств) КАК ВидБюджета
	|ПОМЕСТИТЬ ВТ_ДатыОпераций
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияДенежныхСредств КАК ТЧ1
	|ГДЕ
	|	ТЧ1.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТЧ2.Ссылка.Дата, ДЕНЬ),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДоходовИРасходов)
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДоходовИРасходов КАК ТЧ2
	|ГДЕ
	|	ТЧ2.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТЧ3.Ссылка.Дата, ДЕНЬ),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыБюджетов.БюджетДвиженияРесурсов)
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияРесурсов КАК ТЧ3
	|ГДЕ
	|	ТЧ3.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 

#Область ОбработчикиОбновления

Процедура ЗаполнитьВзаиморасчеты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетирования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ОФДКОбновлению
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ОтражениеФактическихДанныхБюджетирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеФактическихДанныхБюджетирования.Взаиморасчеты КАК ОтражениеФактическихДанныхБюджетированияВзаиморасчеты
	|		ПО ОтражениеФактическихДанныхБюджетирования.Ссылка = ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.Ссылка
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетирования.ОтражатьВоВзаиморасчетах = ИСТИНА
	|	И ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОФДБюджет.Ссылка КАК Ссылка,
	|	ОФДБюджет.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОФДБюджет.УдалитьОбъектРасчетов КАК ОбъектРасчетов,
	|	ОФДБюджет.СтатьяДвиженияДенежныхСредств КАК СтатьяБюджета,
	|	ОФДБюджет.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ОФДБюджет.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияДенежныхСредств КАК ОФДБюджет
	|ГДЕ
	|	ОФДБюджет.Ссылка.ОтражатьВоВзаиморасчетах
	|	И ОФДБюджет.Ссылка.ЭтоБДДС
	|	И ОФДБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ОФДКОбновлению.Ссылка
	|			ИЗ
	|				ВТ_ОФДКОбновлению)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОФДБюджет.Ссылка,
	|	ОФДБюджет.ДоговорКонтрагента,
	|	ОФДБюджет.УдалитьОбъектРасчетов,
	|	ОФДБюджет.СтатьяДоходовИРасходов,
	|	ВЫБОР
	|		КОГДА ОФДБюджет.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА ОФДБюджет.Ссылка.ВалютаДокумента
	|		ИНАЧЕ ОФДБюджет.ВалютаВзаиморасчетов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОФДБюджет.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА ОФДБюджет.Сумма
	|		ИНАЧЕ ОФДБюджет.СуммаВзаиморасчетов
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДоходовИРасходов КАК ОФДБюджет
	|ГДЕ
	|	ОФДБюджет.Ссылка.ОтражатьВоВзаиморасчетах
	|	И ОФДБюджет.Ссылка.ЭтоБДР
	|	И НЕ ОФДБюджет.Ссылка.ЭтоБДДС
	|	И ОФДБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ОФДКОбновлению.Ссылка
	|			ИЗ
	|				ВТ_ОФДКОбновлению)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОФДБюджет.Ссылка,
	|	ОФДБюджет.ДоговорКонтрагента,
	|	ОФДБюджет.УдалитьОбъектРасчетов,
	|	ОФДБюджет.СтатьяДвиженияРесурсов,
	|	ОФДБюджет.Ссылка.ВалютаДокумента,
	|	ОФДБюджет.Сумма
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияРесурсов КАК ОФДБюджет
	|ГДЕ
	|	ОФДБюджет.Ссылка.ОтражатьВоВзаиморасчетах
	|	И ОФДБюджет.Ссылка.ЭтоРесурсы
	|	И НЕ ОФДБюджет.Ссылка.ЭтоБДДС
	|	И НЕ ОФДБюджет.Ссылка.ЭтоБДР
	|	И ОФДБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ОФДКОбновлению.Ссылка
	|			ИЗ
	|				ВТ_ОФДКОбновлению)
	|ИТОГИ ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДокумент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Док = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = Док.Взаиморасчеты.Добавить();
			Строка.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			Строка.ОбъектРасчетов = Выборка.ОбъектРасчетов;
			Строка.СтатьяБюджета = Выборка.СтатьяБюджета;
			Строка.ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
			Строка.СуммаВзаиморасчетов = Выборка.СуммаВзаиморасчетов;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Док);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЭлементСтруктурыЗадолженности() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.Ссылка КАК Ссылка,
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.НомерСтроки КАК НомерСтроки,
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.ДоговорКонтрагента.ВидФинансовогоИнструмента, ЗНАЧЕНИЕ(Перечисление.ВидыФинансовыхИнструментов.ПустаяСсылка)) КАК ВидФинансовогоИнструмента,
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.СтатьяБюджета КАК СтатьяБюджета
	|ПОМЕСТИТЬ ВТ_ВзаиморасчетыОФД
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.Взаиморасчеты КАК ОтражениеФактическихДанныхБюджетированияВзаиморасчеты
	|ГДЕ
	|	ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.ЭлементСтруктурыЗадолженности = ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ПустаяСсылка)
	|	И ОтражениеФактическихДанныхБюджетированияВзаиморасчеты.Ссылка.ОтражатьВоВзаиморасчетах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВзаиморасчетыОФД.Ссылка КАК Ссылка,
	|	ВТ_ВзаиморасчетыОФД.НомерСтроки КАК НомерСтроки,
	|	ВТ_ВзаиморасчетыОФД.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ВзаиморасчетыОФД.ЭлементСтруктурыЗадолженности КАК ЭлементСтруктурыЗадолженности,
	|	ЕСТЬNULL(НастройкиФинансовыхИнструментов.Операция.ЭлементСтруктурыЗадолженности, ЗНАЧЕНИЕ(Перечисление.ЭлементыСтруктурыЗадолженности.ОсновнойДолг)) КАК ЭлементСтруктурыЗадолженностиНовый
	|ИЗ
	|	ВТ_ВзаиморасчетыОФД КАК ВТ_ВзаиморасчетыОФД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФинансовыхИнструментов КАК НастройкиФинансовыхИнструментов
	|		ПО ВТ_ВзаиморасчетыОФД.СтатьяБюджета = НастройкиФинансовыхИнструментов.СтатьяБюджета
	|			И ВТ_ВзаиморасчетыОФД.ВидФинансовогоИнструмента = НастройкиФинансовыхИнструментов.Операция.ВидФинансовогоИнструмента
	|ИТОГИ ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДокумент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		Док = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			Док.Взаиморасчеты[Выборка.НомерСтроки-1].ЭлементСтруктурыЗадолженности = Выборка.ЭлементСтруктурыЗадолженностиНовый;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Док);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

Процедура ОпределитьКонтролируемыеПериоды(Объект) Экспорт
	
	Предназначения = Перечисления.ПредназначенияЭлементовСтруктурыОтчета;
	
	Периоды = Новый Соответствие;
	Периоды.Вставить("ПериодБДДС",		Предназначения.БюджетДвиженияДенежныхСредств);
	Периоды.Вставить("ПериодБДР",		Предназначения.БюджетДоходовИРасходов);
	Периоды.Вставить("ПериодРесурсы",	Предназначения.БюджетДвиженияРесурсов);
	
	Для Каждого КлючЗначение Из Периоды Цикл
		
		Если ЗначениеЗаполнено(Объект[КлючЗначение.Ключ]) Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыБюджета = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(КлючЗначение.Значение);
		Если ПараметрыБюджета.ИспользоватьЛимитирование Тогда
			Период = ВстраиваниеОПКПереопределяемый.глОтносительныйПериодПоДате(Объект.Дата, ПараметрыБюджета.ПериодичностьЛимитирования,0);
		Иначе
			Период = Справочники.Периоды.ПустаяСсылка();
		КонецЕсли;
		
		Объект[КлючЗначение.Ключ] = Период;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьОбъектОтраженияФакта(ОтражениеФактаОбъект)
	
	ОтражениеФактаОбъект.ПометкаУдаления = Ложь;
	ОтражениеФактаОбъект.ПравилоЗаполнения	= "";
	
КонецПроцедуры

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	СтруктураРеквизиты = ОбщегоНазначения.СкопироватьРекурсивно(Запрос.Параметры);
	ДополнительныеСвойства.Вставить("ПараметрыПроведения", Новый Структура("Реквизиты", СтруктураРеквизиты));
	// Обеспечение совместимости.
	ДополнительныеСвойства.ПараметрыПроведения.Реквизиты.Вставить("Договор", Запрос.Параметры.ДоговорКонтрагента);
	
	// Если в справочнике периоды нет требуемых элементов, то прекращаем собирать данные
	Если НЕ КонтрольЛимитовУХ.ПодготовитьТаблицуДатИПериодов(Запрос, ДокументСсылка, ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	// Запоминаем параметры опер.планирования для всех бюджетов, которые есть в документе
	ДополнительныеСвойства.ДляПроведения.Вставить("ПараметрыОперПланирования", Новый Соответствие);
	Если СтруктураРеквизиты.ЭтоБДДС Тогда
		Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств;
		Параметры = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение);
		ДополнительныеСвойства.ДляПроведения.ПараметрыОперПланирования.Вставить(
			Предназначение,
			Параметры);
	КонецЕсли;
		
	Если СтруктураРеквизиты.ЭтоБДР Тогда
		Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов;
		Параметры = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение);
		ДополнительныеСвойства.ДляПроведения.ПараметрыОперПланирования.Вставить(
			Предназначение,
			Параметры);
	КонецЕсли;
	
	Если СтруктураРеквизиты.ЭтоРесурсы Тогда
		Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов;
		Параметры = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(Предназначение);
		ДополнительныеСвойства.ДляПроведения.ПараметрыОперПланирования.Вставить(
			Предназначение,
			Параметры);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИспользоватьБДДС", СтруктураРеквизиты.ЭтоБДДС);
	Запрос.УстановитьПараметр("ИспользоватьБДР", СтруктураРеквизиты.ЭтоБДР);
	Запрос.УстановитьПараметр("ИспользоватьБюджетЗакупок", СтруктураРеквизиты.ЭтоРесурсы);
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;
	ВстраиваниеОФД.ДополнитьТекстамиЗапросовДляДанныхДокумента(Запрос, ТекстыЗапроса);
	ТекстЗапроса_ВТ_ТаблицаПланов(Запрос, ТекстыЗапроса);
	ТекстЗапросаФактПоБюджетам(Запрос, ТекстыЗапроса);
	ТекстЗапроса_ВТ_ТаблицаПлановССуммамиЛимитирования(Запрос, ТекстыЗапроса);
	
	// Выполнение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСерверОПК.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	//
	ПодготовитьТаблицуЛимитовПоБюджетам(ДокументСсылка, Запрос, ДополнительныеСвойства.ТаблицыДляДвижений);
	
КонецПроцедуры

Процедура ПодготовитьТаблицуЛимитовПоБюджетам(ДокументСсылка, Запрос, ТаблицыДляДвижений)
	
	ТаблицаЛимитов = КонтрольЛимитовУХ.ПолучитьТаблицуЛимитов(Запрос, ДокументСсылка.Дата);
	
	ТаблицыДляДвижений.Вставить("ТаблицаЛимитыПоБюджетам", ТаблицаЛимитов);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ЦФО КАК ЦФО,
	|	ДанныеДокумента.Проект,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ДоговорКонтрагента,
	|	ДанныеДокумента.ВалютаДокумента,
	|	ДанныеДокумента.ПриходРасход КАК ПриходРасход,
	|	ДанныеДокумента.ПериодБДДС,
	|	ДанныеДокумента.ПериодБДР,
	|	ДанныеДокумента.ПериодРесурсы,
	|	ДанныеДокумента.БанковскийСчетКасса,
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчетКасса ССЫЛКА Справочник.Кассы
	|		ТОГДА Значение(Перечисление.ФормыОплаты.Наличная)
	|		ИНАЧЕ Значение(Перечисление.ФормыОплаты.Безналичная) КОНЕЦ КАК ВидДенежныхСредств,
	|	ДанныеДокумента.ОтражатьВоВзаиморасчетах,
	|	ДанныеДокумента.НаправлениеВзаиморасчетов,
	|	ЕСТЬNULL(ДанныеДокумента.ДоговорКонтрагента.ВидДоговораУХ, ЗНАЧЕНИЕ(Справочник.ВидыДоговоровКонтрагентовУХ.ПустаяСсылка)) КАК ВидДоговораУХ,
	|	ЕСТЬNULL(ДанныеДокумента.ДоговорКонтрагента.ВидФинансовогоИнструмента, ЗНАЧЕНИЕ(Перечисление.ВидыФинансовыхИнструментов.ПустаяСсылка)) КАК ВидФинансовогоИнструмента,
	|	ДанныеДокумента.СуммаДокумента,
	|	ДанныеДокумента.ЭтоБДДС,
	|	ДанныеДокумента.ЭтоБДР,
	|	ДанныеДокумента.ЭтоРесурсы,
	|	ДанныеДокумента.Отмена
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	// Установка прочих общих параметров запроса.
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ВалютаУправленческогоУчета")
		И Запрос.Параметры.Свойство("ВалютаРегламентированногоУчета")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаУправленческогоУчета     = ВстраиваниеОПКПереопределяемый.КонстантаВалютаУправленческогоУчета();
	ВалютаРегламентированногоУчета = ВстраиваниеОПКПереопределяемый.КонстантаВалютаРегламентированногоУчета();
	
	Коэффициенты = ВстраиваниеОПКПереопределяемый.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.ВалютаДокумента,
		Запрос.Параметры.ВалютаДокумента,
		Запрос.Параметры.Период);
		
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",                        ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",                            ВалютаУправленческогоУчета);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",                       Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",                        Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуВзаиморасчетов",             Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
	
КонецПроцедуры

// ВТ_ТаблицаПланов
Процедура ТекстЗапроса_ВТ_ТаблицаПланов(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_ТаблицаПланов";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств) КАК Предназначение,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Факт.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка)
	|			ТОГДА &ПриходРасход
	|		ИНАЧЕ Факт.ПриходРасход
	|	КОНЕЦ КАК ПриходРасход,
	|	Факт.ЦФО КАК ЦФО,
	|	Факт.Проект КАК Проект,
	|	Факт.СтатьяДвиженияДенежныхСредств КАК СтатьяБюджета,
	|	Факт.Аналитика1 КАК Аналитика1,
	|	Факт.Аналитика2 КАК Аналитика2,
	|	Факт.Аналитика3 КАК Аналитика3,
	|	Факт.Аналитика4 КАК Аналитика4,
	|	Факт.Аналитика5 КАК Аналитика5,
	|	Факт.Аналитика6 КАК Аналитика6,
	|	Факт.ДокументПланирования КАК ДокументПланирования,
	|	Факт.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.Сумма
	|		ИНАЧЕ Факт.СуммаВзаиморасчетов
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА &ВалютаДокумента
	|		ИНАЧЕ Факт.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	Факт.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Факт.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Факт.Сумма КАК СуммаВВалютеДокумента,
	|	&ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ВалютаДокумента = &ВалютаУправленческогоУчета
	|			ТОГДА Факт.Сумма
	|		КОГДА &ВалютаУправленческогоУчета = Факт.ВалютаВзаиморасчетов
	|				И Факт.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(Факт.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	&ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета,
	|	0 КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаПланов
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияДенежныхСредств КАК Факт
	|ГДЕ
	|	Факт.Ссылка = &Ссылка
	|	И &ИспользоватьБДДС = ИСТИНА
	|	И Факт.ТолькоИзменитьСостояниеПозиции = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов) КАК Предназначение,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА Факт.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка)
	|			ТОГДА &ПриходРасход
	|		ИНАЧЕ Факт.ПриходРасход
	|	КОНЕЦ КАК ПриходРасход,
	|	Факт.ЦФО КАК ЦФО,
	|	Факт.Проект КАК Проект,
	|	Факт.СтатьяДоходовИРасходов КАК СтатьяДоходовИРасходов,
	|	Факт.Аналитика1 КАК Аналитика1,
	|	Факт.Аналитика2 КАК Аналитика2,
	|	Факт.Аналитика3 КАК Аналитика3,
	|	Факт.Аналитика4 КАК Аналитика4,
	|	Факт.Аналитика5 КАК Аналитика5,
	|	Факт.Аналитика6 КАК Аналитика6,
	|	Факт.ДокументПланирования КАК ДокументПланирования,
	|	&ПустойUID КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.Сумма - Факт.СуммаНДС
	|		ИНАЧЕ Факт.СуммаВзаиморасчетов - Факт.СуммаВзаиморасчетовНДС
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА &ВалютаДокумента
	|		ИНАЧЕ Факт.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	Факт.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Факт.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Факт.Сумма КАК СуммаВВалютеДокумента,
	|	&ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ВалютаДокумента = &ВалютаУправленческогоУчета
	|			ТОГДА Факт.Сумма - Факт.СуммаНДС
	|		КОГДА &ВалютаУправленческогоУчета = Факт.ВалютаВзаиморасчетов
	|				И Факт.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.СуммаВзаиморасчетов - Факт.СуммаВзаиморасчетовНДС
	|		ИНАЧЕ ВЫРАЗИТЬ((Факт.Сумма - Факт.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	&ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета,
	|	0
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДоходовИРасходов КАК Факт
	|ГДЕ
	|	Факт.Ссылка = &Ссылка
	|	И &ИспользоватьБДР = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов) КАК Предназначение,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА Факт.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка)
	|			ТОГДА &ПриходРасход
	|		ИНАЧЕ Факт.ПриходРасход
	|	КОНЕЦ КАК ПриходРасход,
	|	Факт.ЦФО КАК ЦФО,
	|	Факт.Проект КАК Проект,
	|	Факт.СтатьяДвиженияРесурсов КАК СтатьяДвиженияРесурсов,
	|	Факт.Аналитика1 КАК Аналитика1,
	|	Факт.Аналитика2 КАК Аналитика2,
	|	Факт.Аналитика3 КАК Аналитика3,
	|	Факт.Аналитика4 КАК Аналитика4,
	|	Факт.Аналитика5 КАК Аналитика5,
	|	Факт.Аналитика6 КАК Аналитика6,
	|	Факт.ДокументПланирования КАК ДокументПланирования,
	|	&ПустойUID КАК ИдентификаторПозиции,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.Сумма
	|		ИНАЧЕ Факт.СуммаВзаиморасчетов
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Факт.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА &ВалютаДокумента
	|		ИНАЧЕ Факт.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	Факт.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Факт.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Факт.Сумма КАК СуммаВВалютеДокумента,
	|	&ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ВалютаДокумента = &ВалютаУправленческогоУчета
	|			ТОГДА Факт.Сумма
	|		КОГДА &ВалютаУправленческогоУчета = Факт.ВалютаВзаиморасчетов
	|				И Факт.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Факт.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(Факт.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|	&ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета,
	|	Факт.Количество КАК Количество
	|ИЗ
	|	Документ.ОтражениеФактическихДанныхБюджетирования.БюджетДвиженияРесурсов КАК Факт
	|ГДЕ
	|	Факт.Ссылка = &Ссылка
	|	И &ИспользоватьБюджетЗакупок = ИСТИНА";
	
	Запрос.УстановитьПараметр("ПустойUID", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

// Временная таблица для исполнения лимитов
Процедура ТекстЗапроса_ВТ_ТаблицаПлановССуммамиЛимитирования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ЛимитыПоБюджетам";
	
	Запрос.УстановитьПараметр("КоэффициентОтмена", ?(Запрос.Параметры.Отмена, -1, 1));
	Запрос.УстановитьПараметр("КоэффициентОтмена", 1);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ВТ_ТаблицаПланов.Период КАК ДатаОперации,
	|	ВТ_ТаблицаПланов.Предназначение КАК Предназначение,
	|	ВТ_ТаблицаПланов.ПриходРасход КАК ПриходРасход,
	|	ВТ_ТаблицаПланов.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ТаблицаПланов.Аналитика1 КАК Аналитика1,
	|	ВТ_ТаблицаПланов.Аналитика2 КАК Аналитика2,
	|	ВТ_ТаблицаПланов.Аналитика3 КАК Аналитика3,
	|	ВТ_ТаблицаПланов.Аналитика4 КАК Аналитика4,
	|	ВТ_ТаблицаПланов.Аналитика5 КАК Аналитика5,
	|	ВТ_ТаблицаПланов.Аналитика6 КАК Аналитика6,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ОперативныйПлан)
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ДокументПланирования
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасход).ДокументПланирования
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ПланируемыйДоход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ПланируемыйДоход).ДокументПланирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|	КОНЕЦ КАК ДокументРезервирования,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВТ_ТаблицаПланов.ДокументПланирования
	|	КОНЕЦ КАК ДокументПланирования,
	|	ВТ_ТаблицаПланов.ЦФО КАК ЦФО,
	|	ВТ_ТаблицаПланов.Проект КАК Проект,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА ВТ_ТаблицаПланов.ВалютаДокумента
	|		ИНАЧЕ ВТ_ТаблицаПланов.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			И ВТ_ТаблицаПланов.ВалютаВзаиморасчетов <> ВТ_ТаблицаПланов.ВалютаДокумента
	|			ТОГДА ВТ_ТаблицаПланов.ВалютаДокумента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ КАК Валюта_Доп,
	|	0 КАК Лимит,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|				И ВТ_ТаблицаПланов.ДокументПланирования <> ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|			ТОГДА -ВТ_ТаблицаПланов.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Зарезервировано,
	|	0 КАК Заявлено,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА ВТ_ТаблицаПланов.СуммаВВалютеДокумента
	|		ИНАЧЕ ВТ_ТаблицаПланов.СуммаВзаиморасчетов
	|	КОНЕЦ * &КоэффициентОтмена КАК Исполнено,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ВалютаВзаиморасчетов <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			И ВТ_ТаблицаПланов.ВалютаВзаиморасчетов <> ВТ_ТаблицаПланов.ВалютаДокумента
	|			ТОГДА ВТ_ТаблицаПланов.СуммаВВалютеДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ * &КоэффициентОтмена КАК Исполнено_Доп
	|ПОМЕСТИТЬ ВТ_ТаблицаПлановССуммамиЛимитирования
	|ИЗ
	|	ВТ_ТаблицаПланов КАК ВТ_ТаблицаПланов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ДатаНачала
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОжидаемоеПоступлениеДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ОжидаемоеПоступлениеДенежныхСредств).ДатаНачала
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасход).ДатаНачала
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ПланируемыйДоход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ПланируемыйДоход).ДатаНачала
	|		ИНАЧЕ ВТ_ТаблицаПланов.Период
	|	КОНЕЦ,
	|	ВТ_ТаблицаПланов.Предназначение,
	|	ВТ_ТаблицаПланов.ПриходРасход,
	|	ВТ_ТаблицаПланов.СтатьяБюджета,
	|	ВТ_ТаблицаПланов.Аналитика1,
	|	ВТ_ТаблицаПланов.Аналитика2,
	|	ВТ_ТаблицаПланов.Аналитика3,
	|	ВТ_ТаблицаПланов.Аналитика4,
	|	ВТ_ТаблицаПланов.Аналитика5,
	|	ВТ_ТаблицаПланов.Аналитика6,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ОперативныйПлан)
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ДокументПланирования
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОжидаемоеПоступлениеДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ОжидаемоеПоступлениеДенежныхСредств).ДокументПланирования
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ЗаявкаНаРасход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ЗаявкаНаРасход).ДокументПланирования
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ПланируемыйДоход
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланов.ДокументПланирования КАК Документ.ПланируемыйДоход).ДокументПланирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВТ_ТаблицаПланов.ДокументПланирования
	|	КОНЕЦ,
	|	ВТ_ТаблицаПланов.ЦФО,
	|	ВТ_ТаблицаПланов.Проект,
	|	ВТ_ТаблицаПланов.Валюта,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
	|	0,
	|	0,
	|	-ВТ_ТаблицаПланов.Сумма * &КоэффициентОтмена,
	|	0,
	|	0
	|ИЗ
	|	ВТ_ТаблицаПланов КАК ВТ_ТаблицаПланов
	|ГДЕ
	|	НЕ ВТ_ТаблицаПланов.ДокументПланирования ССЫЛКА Документ.ОперативныйПлан
	|	И НЕ ВТ_ТаблицаПланов.ДокументПланирования В (&НедопустимыеДокументыПланирования)";
	
	НедопустимыеДокументыПланирования = Новый Массив;
	НедопустимыеДокументыПланирования.Добавить(неопределено);
	НедопустимыеДокументыПланирования.Добавить(КэшируемыеПроцедурыОПК.ПустаяЗаявкаНаОплату());
	НедопустимыеДокументыПланирования.Добавить(Документы.ЗаявкаНаРасход.ПустаяСсылка());
	НедопустимыеДокументыПланирования.Добавить(КэшируемыеПроцедурыОПК.ПустоеПланируемоеПоступление());
	НедопустимыеДокументыПланирования.Добавить(Документы.ПланируемыйДоход.ПустаяСсылка());
	ВстраиваниеОФД.ДополнитьМассивНедопустимыхДокументовПланирования(НедопустимыеДокументыПланирования);
	
	Запрос.УстановитьПараметр("НедопустимыеДокументыПланирования", НедопустимыеДокументыПланирования);
	
	//
	ЗаявкиДДС = Новый Соответствие;
	ЗаявкиДДС.Вставить("ЗаявкаНаРасходованиеДенежныхСредств", КэшируемыеПроцедурыОПК.ТипЗаявкаНаОплату());
	ЗаявкиДДС.Вставить("ОжидаемоеПоступлениеДенежныхСредств", КэшируемыеПроцедурыОПК.ТипПланируемоеПоступление());
	
	Для Каждого КлючЗначение Из ЗаявкиДДС Цикл
		Тип = КлючЗначение.Значение;
		ПустоеЗначение = Новый (Тип);
		МетаданныеДокумента = ПустоеЗначение.Метаданные();
		Реквизиты = ЗаявкиНаОперации.РеквизитыДокументаЗаявка(Тип);
		РеквизитДатаОперации = Реквизиты.ПланируемаяДатаОперации;
		
		// Замена планируемой даты платежа
		ТекстДляЗамены = СтрШаблон("КАК Документ.%1).ДатаНачала", КлючЗначение.Ключ);
		ТекстЗамены = СтрШаблон("КАК Документ.%1).%2", 
			МетаданныеДокумента.Имя, РеквизитДатаОперации.ИмяРеквизита);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстДляЗамены, ТекстЗамены);
		
		// Все остальные упоминания
		ТекстДляЗамены = СтрШаблон("Документ.%1", КлючЗначение.Ключ);
		ТекстЗамены = СтрШаблон("Документ.%1", МетаданныеДокумента.Имя);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстДляЗамены, ТекстЗамены);
		
	КонецЦикла;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

// Факт по бюджетам
Процедура ТекстЗапросаФактПоБюджетам(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ФактПоБюджетам";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_ТаблицаПланов.Период КАК Период,
	|	ВТ_ТаблицаПланов.Предназначение КАК Предназначение,
	|	ВТ_ТаблицаПланов.ПриходРасход КАК ПриходРасход,
	|	ВТ_ТаблицаПланов.Организация КАК Организация,
	|	ВТ_ТаблицаПланов.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ТаблицаПланов.Аналитика1 КАК Аналитика1,
	|	ВТ_ТаблицаПланов.Аналитика2 КАК Аналитика2,
	|	ВТ_ТаблицаПланов.Аналитика3 КАК Аналитика3,
	|	ВТ_ТаблицаПланов.Аналитика4 КАК Аналитика4,
	|	ВТ_ТаблицаПланов.Аналитика5 КАК Аналитика5,
	|	ВТ_ТаблицаПланов.Аналитика6 КАК Аналитика6,
	|	ВТ_ТаблицаПланов.Сумма КАК Сумма,
	|	ВТ_ТаблицаПланов.СуммаУпр КАК СуммаУпр,
	|	ВТ_ТаблицаПланов.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ТаблицаПланов.ЦФО КАК ЦФО,
	|	ВТ_ТаблицаПланов.Проект КАК Проект,
	|	ВТ_ТаблицаПланов.Валюта КАК Валюта,
	|	ВТ_ТаблицаПланов.Количество КАК Количество
	|ИЗ
	|	ВТ_ТаблицаПланов КАК ВТ_ТаблицаПланов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#Область ОтражениеДвижений

Процедура ОтразитьФактПоБюджетам(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаФактПоБюджетам;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ФактПоБюджетам.Записывать = Истина;
	Движения.ФактПоБюджетам.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
	Ограничение.ТекстДляВнешнихПользователей =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АнкетыПоставщиков КАК СпрАнкеты ПО СпрАнкеты.Контрагент = ЭтотСписок.Контрагент
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнешниеПользователи КАК СпрВнешПользователи 
	|    ПО СпрВнешПользователи.ОбъектАвторизации = СпрАнкеты.Ссылка
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|    ЗначениеРазрешено(СпрВнешПользователи.Ссылка)";                        

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли

