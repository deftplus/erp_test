
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ДатаНачала, ВидОтчета", "ПериодОтчета", Отказ);
	Реквизиты.Вставить("РеквизитыОшибки",		Новый Структура("ВидОперации", НСтр("ru = 'Вид операции'")));
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
		
	Запрос.УстановитьПараметр("ГраницаДоДокумента",		МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Реквизиты.Период, Реквизиты.Ссылка));
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ПериодОтчета", 			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("НачалоПериода", 			Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ПланСчетовМСФО", 		Реквизиты.ПланСчетовМСФО);
	Запрос.УстановитьПараметр("ВидОтчета", 				Реквизиты.ВидОтчета);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	Реквизиты.ФункциональнаяВалюта);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаУчета(НомераТаблиц, Реквизиты.ФормироватьПроводкиМСФО));
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_ОстаткиТУ(НомераТаблиц));
	Иначе	
		ТекстЗапроса.Добавить(МСФОВызовСервераУХ.ТекстЗапроса_АОСВ(НомераТаблиц, "ДО,КО", Истина, "втСчетаУчета"));
	КонецЕсли;
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводок(НомераТаблиц, Реквизиты.ФормироватьПроводкиМСФО));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());	
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапроса_СчетаУчета(НомераТаблиц, ФормироватьПроводкиМСФО = Истина)

	НомераТаблиц.Вставить("втСчетаУчета", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаБД.СчетСсылка КАК Счет
	|ПОМЕСТИТЬ втСчетаУчета
	|ИЗ
	|	Справочник.СчетаБД КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Владелец = &ПланСчетовМСФО
	|	И СчетаБД.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Выручка), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Себестоимость), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.КоммерческиеАдминистративныеРасходы), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнереализационныеДоходыИРасходы))
	|	И НЕ СчетаБД.ГруппирующийСчет";
	
	Возврат ?(ФормироватьПроводкиМСФО, ТекстЗапроса, СтрЗаменить(ТекстЗапроса, "СчетСсылка", "Ссылка"));

КонецФункции

Функция ТекстЗапроса_ОстаткиТУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("втИтогиПоСчетам", НомераТаблиц.Количество());
		
	Возврат 
	"ВЫБРАТЬ
	|	МСФООбороты.СуммаВВалютеУчетаОборот КАК Сумма,
	|	МСФООбороты.Счет КАК Счет,
	|	МСФООбороты.Субконто1 КАК Субконто1,
	|	МСФООбороты.Субконто2 КАК Субконто2,
	|	МСФООбороты.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втИтогиПоСчетам
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(
	|			&НачалоПериода,
	|			&ГраницаДоДокумента,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаУчета КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация,
	|			,
	|			) КАК МСФООбороты";

КонецФункции

Функция ТекстЗапроса_ТаблицаПроводок(НомераТаблиц, ФормироватьПроводкиМСФО = Истина)
	
	НомераТаблиц.Вставить("ТаблицаПроводок", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА АналитикаКоррСчет.Счет.СчетСсылка
	|		ИНАЧЕ втИтогиПоСчетам.Счет
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА АналитикаКоррСчет.Субконто1
	|		ИНАЧЕ втИтогиПоСчетам.Субконто1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА АналитикаКоррСчет.Субконто2
	|		ИНАЧЕ втИтогиПоСчетам.Субконто2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА АналитикаКоррСчет.Субконто3
	|		ИНАЧЕ втИтогиПоСчетам.Субконто3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА втИтогиПоСчетам.Счет
	|		ИНАЧЕ АналитикаКоррСчет.Счет.СчетСсылка
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА втИтогиПоСчетам.Субконто1
	|		ИНАЧЕ АналитикаКоррСчет.Субконто1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА втИтогиПоСчетам.Субконто2
	|		ИНАЧЕ АналитикаКоррСчет.Субконто2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА втИтогиПоСчетам.Субконто3
	|		ИНАЧЕ АналитикаКоррСчет.Субконто3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций._05РасчетФинансовогоРезультата) КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА втИтогиПоСчетам.Сумма > 0
	|			ТОГДА втИтогиПоСчетам.Сумма
	|		ИНАЧЕ -втИтогиПоСчетам.Сумма
	|	КОНЕЦ КАК СуммаВФункциональнойВалюте
	|ИЗ
	|	втИтогиПоСчетам КАК втИтогиПоСчетам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК АналитикаКоррСчет
	|		ПО (АналитикаКоррСчет.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ТекущийФинансовыйРезультат))
	|ГДЕ
	|	втИтогиПоСчетам.Сумма <> 0";
	
	Документы.УчетнаяПолитикаМСФО.ЗаменитьФиксированныеСчетаУчетаБД(ТекстЗапроса);
	
	Возврат ?(ФормироватьПроводкиМСФО, ТекстЗапроса, СтрЗаменить(ТекстЗапроса, ".СчетСсылка", ""));
	
КонецФункции

#КонецЕсли