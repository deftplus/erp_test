
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "АлгоритмРСБУ",, Отказ);
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	ДатаРасчета = Реквизиты.Период;
	
	//Реквизиты.АлгоритмРСБУ не используется, т.к. требуются ПараметрыВНА на дату документа 
	//(АмортизацияРасчет - не требуется, т.к. уже посчитана в ТЧ)	
	АлгоритмРСБУ = Ложь;
	Отчеты.ПараметрыВНА.ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты.Период, Реквизиты.Ссылка, АлгоритмРСБУ);
	
	Запрос.УстановитьПараметр("ДатаНачалаНачисления", 	НачалоМесяца(ДатаРасчета));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца",	КонецМесяца(ДобавитьМесяц(ДатаРасчета, -1)));
	
	Запрос.УстановитьПараметр("ВсеВНА", 	Истина);//список ВНА определяется остатками стоимости
	Запрос.УстановитьПараметр("ВНА", 		Неопределено);// параметр не влияет на расчет	
	
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("ВидыУчета", 				ПредопределенноеЗначение("Перечисление.ВидыУчета.МСФО"));
	Запрос.УстановитьПараметр("ВсеОрганизации", 		Ложь);
	Запрос.УстановитьПараметр("АлгоритмРСБУ", 			АлгоритмРСБУ);
	Запрос.УстановитьПараметр("АлгоритмРСБУ_РасчетСПИ",	Реквизиты.АлгоритмРСБУ);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ПараметрыВНА(НомераТаблиц)			);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_втТаблицаВНА(НомераТаблиц)			);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаВНА(НомераТаблиц)			);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)	);
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("втТаблицаДокумента", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.ВНА,
	|	ТаблицаВНА.ГруппаВНА,	
	|	ТаблицаВНА.ГруппаВНА.ПараметрыОбесценения КАК ПараметрыОбесценения,
	|	ТаблицаВНА.АмортизацияРасчет,
	|	ТаблицаВНА.БалансоваяСтоимость,
	|	ТаблицаВНА.ИзменениеОбесценения
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	Документ.ОбесценениеВНАМСФО.ВНА КАК ТаблицаВНА
	|ГДЕ
	|	ТаблицаВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаВНА.ВНА";	

КонецФункции

Функция ТекстЗапроса_ПараметрыВНА(НомераТаблиц)

	ПоляВыбораСтрокой = 
	"ВНА,
	|ГруппаВНА,
	|ПрофильРаспределения,
	|ВидУчета,
	|ПервоначальнаяСтоимость,	
	|Амортизация,
	|Переоценка,
	|Обесценение,	
	|РезервПереоценкиРасчет,
	
	|Подразделение,
	|НаправлениеДеятельности,
	
	|ДатаВвода,
	|ЛиквидационнаяСтоимость,
	|КоэффициентУскорения,
	|ЛиквидационнаяСтоимость,
	|НачислятьАмортизацию,
	|ОбъемПродукцииРабот,
	|ПараметрВыработки,
	|СПИ,
	|СпособНачисленияАмортизации,
	|ПрофильРаспределения,
	
	|СчетУчетаПервоначальнойСтоимости,
	|СчетУчетаПервоначальнойСтоимостиСубконто1,
	|СчетУчетаПервоначальнойСтоимостиСубконто2, 
	|СчетУчетаПервоначальнойСтоимостиСубконто3,	
	|СчетНакопленнойАмортизации,
	|СчетНакопленнойАмортизацииСубконто1,
	|СчетНакопленнойАмортизацииСубконто2, 
	|СчетНакопленнойАмортизацииСубконто3";
	
	ЗапросПараметрыВНА = УчетМСФОПовтИспУХ.ПолучитьКэшированныйТекстЗапросаВНА(ПоляВыбораСтрокой, "втТаблицаРасчетВНА"); 
	
	ТекущийНомер = НомераТаблиц.Количество();	
	Для каждого НомерТаблицы Из ЗапросПараметрыВНА.НомераТаблиц Цикл		
		НомераТаблиц.Вставить(НомерТаблицы.Ключ, ТекущийНомер + НомерТаблицы.Значение);	
	КонецЦикла;
	
	Возврат СтрЗаменить(ЗапросПараметрыВНА.Текст, "&ВНА", "ВЫБРАТЬ т.ВНА ИЗ втТаблицаДокумента КАК т");
	
КонецФункции

Функция ТекстЗапроса_втТаблицаВНА(НомераТаблиц)
		
	НомераТаблиц.Вставить("втТаблицаВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВНА КАК ВНА,
	|	т.ИзменениеОбесценения КАК ИзменениеОбесценения,
	|	р.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ВЫБОР
	|		КОГДА т.ИзменениеОбесценения < 0
	|			ТОГДА т.ИзменениеОбесценения
	|		КОГДА т.ИзменениеОбесценения + р.Обесценение > 0
	|			ТОГДА -р.Обесценение
	|		ИНАЧЕ т.ИзменениеОбесценения
	|	КОНЕЦ КАК ИзменениеПУ,
	|	ВЫБОР
	|		КОГДА т.ИзменениеОбесценения < 0
	|			ТОГДА ВЫБОР
	|					КОГДА т.ИзменениеОбесценения + р.Обесценение > 0
	|						ТОГДА т.ИзменениеОбесценения
	|					ИНАЧЕ -р.Обесценение
	|				КОНЕЦ
	|		ИНАЧЕ т.ИзменениеОбесценения - ВЫБОР
	|				КОГДА т.ИзменениеОбесценения + р.Обесценение > 0
	|					ТОГДА -р.Обесценение
	|				ИНАЧЕ т.ИзменениеОбесценения
	|			КОНЕЦ
	|	КОНЕЦ КАК ИзменениеПСД,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА 0
	|		ИНАЧЕ т.АмортизацияРасчет
	|	КОНЕЦ КАК ИзменениеАмортизации,
	|	р.РезервПереоценкиРасчет КАК РезервПереоценкиРасчет,	
	|	р.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	р.Подразделение КАК ПодразделениеДт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	р.Подразделение КАК ПодразделениеКт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	р.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА р.ЛиквидационнаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость,
	|	р.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА р.ОбъемПродукцииРабот
	|		ИНАЧЕ р.ОбъемПродукцииРабот
	|	КОНЕЦ КАК ОбъемПродукцииРабот,
	|	р.ПараметрВыработки КАК ПараметрВыработки,
	|	р.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	р.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.СПИ
	|		ИНАЧЕ р.СПИ
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		ИНАЧЕ ВЫРАЗИТЬ(р.СПИ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, ДЕНЬ) * 12 / 365 КАК ЧИСЛО(18, 3))
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.ПервоначальнаяСтоимость - р.Амортизация - т.АмортизацияРасчет
	|		КОГДА &АлгоритмРСБУ_РасчетСПИ
	|			ТОГДА р.ПервоначальнаяСтоимость + р.Переоценка + р.Обесценение - р.ЛиквидационнаяСтоимость - р.Амортизация + т.ИзменениеОбесценения
	|		ИНАЧЕ р.ПервоначальнаяСтоимость + р.Переоценка + р.Обесценение - р.ЛиквидационнаяСтоимость - р.Амортизация - т.АмортизацияРасчет + т.ИзменениеОбесценения
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	т.ПараметрыОбесценения КАК ПараметрыОбесценения,
	|	т.АмортизацияРасчет КАК АмортизацияРасчет,
	|	р.ПрофильРаспределения КАК ПрофильРаспределения,
	|	р.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	р.СчетНакопленнойАмортизации КАК СчетНакопленнойАмортизации,
	|	р.СчетНакопленнойАмортизацииСубконто1 КАК СчетНакопленнойАмортизацииСубконто1,
	|	р.СчетНакопленнойАмортизацииСубконто2 КАК СчетНакопленнойАмортизацииСубконто2,
	|	р.СчетНакопленнойАмортизацииСубконто3 КАК СчетНакопленнойАмортизацииСубконто3
	|ПОМЕСТИТЬ втТаблицаВНА
	|ИЗ
	|	втТаблицаДокумента КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК р
	|		ПО т.ВНА = р.ВНА
	|			И (р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО))";

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВНА", НомераТаблиц.Количество());	
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО) КАК ВидУчета,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОбесценениеВНА) КАК ВидОперации,
			
	|	втТаблицаВНА.ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.КоэффициентУскорения,	
	|	втТаблицаВНА.НачислятьАмортизацию,
	|	втТаблицаВНА.ОбъемПродукцииРабот,
	|	втТаблицаВНА.ПараметрВыработки,
	|	втТаблицаВНА.СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокИспользованияДляВычисленияАмортизации,
	
	|	0 КАК СуммаВВалютеУчета,
	|	втТаблицаВНА.ИзменениеАмортизации КАК Амортизация,
	|	0 КАК Переоценка,
	|	втТаблицаВНА.ИзменениеОбесценения КАК Обесценение,
	|	-втТаблицаВНА.РезервПереоценкиРасчет КАК РезервПереоценки
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеОбесценения <> 0";
	
КонецФункции

Функция ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПроводкиВНА", НомераТаблиц.Количество());
	
	Возврат 
	МСФОВНАУХ.ТекстЗапроса_НачислениеАмортизацииМСФО() 
	+ " ОБЪЕДИНИТЬ ВСЕ "
	+ МСФОВНАУХ.ТекстЗапроса_НачислениеРезерваПереоценкиМСФО() 
	+ " ОБЪЕДИНИТЬ ВСЕ "
	+ ТекстЗапроса_Дооценка_ПУ()
	+ " ОБЪЕДИНИТЬ ВСЕ " 
	+ ТекстЗапроса_Уценка_ПУ()
	;

КонецФункции

Функция ТекстЗапроса_Дооценка_ПУ() Экспорт

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОбесценениеДооценкаУбытка) КАК ВидСобытияВНА,
	|	0 КАК СуммаОперацииНСБУ,
	|	втТаблицаВНА.ИзменениеПУ КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесценения КАК СчетДт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесценения.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценению КАК СчетКт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценению.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценениюСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценениюСубконто2 КАК СубконтоКт2,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценениюСубконто3 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПУ > 0";

КонецФункции

Функция ТекстЗапроса_Уценка_ПУ() Экспорт

	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОбесценениеУбыток) КАК ВидОперации,
	|	0 КАК СуммаОперацииНСБУ,
	|	-втТаблицаВНА.ИзменениеПУ КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценению КАК СчетДт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценению.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценениюСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценениюСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценениюСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесценения КАК СчетКт,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесценения.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто1 КАК СубконтоКт1,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто1 КАК СубконтоКт2,
	|	втТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесцененияСубконто1 КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	втТаблицаВНА.ИзменениеПУ < 0";

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаНаБалансе(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА());	
	ТекстЗапроса.Добавить(ТекстЗапроса_ПроверкаПараметрыОбесценения());	
	
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Функция ТекстЗапроса_ПроверкаПараметрыОбесценения()

	Возврат
	"ВЫБРАТЬ
	|	""Объект <"" + ТаблицаВНА.ВНА.Наименование + "">: "" + ВЫБОР
	|		КОГДА ТаблицаВНА.ПараметрыОбесценения = ЗНАЧЕНИЕ(Справочник.ПараметрыОбесцененияВНАМСФО.ПустаяСсылка)
	|			ТОГДА ""в параметрах учета ВНА <"" + ТаблицаВНА.ГруппаВНА.Наименование + ""> не указаны параметры обесценения""
	|		ИНАЧЕ ""в параметрах обесценения ВНА <"" + ТаблицаВНА.ПараметрыОбесценения.Наименование + ""> не указаны счета обесценения""
	|	КОНЕЦ КАК ТекстОшибки,
	|	ТаблицаВНА.ВНА КАК ВНА
	|ИЗ
	|	втТаблицаВНА КАК ТаблицаВНА
	|ГДЕ
	|	(ТаблицаВНА.ПараметрыОбесценения = ЗНАЧЕНИЕ(Справочник.ПараметрыОбесцененияВНАМСФО.ПустаяСсылка)
	|			ИЛИ ТаблицаВНА.ПараметрыОбесценения.СчетРасходовПоОбесценению = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|			ИЛИ ТаблицаВНА.ПараметрыОбесценения.СчетДоходовПоОбесценению = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка)
	|			ИЛИ ТаблицаВНА.ПараметрыОбесценения.СчетНакопленногоОбесценения = ЗНАЧЕНИЕ(Справочник.СчетаБД.ПустаяСсылка))";
	
КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;

	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;

	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();	
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО", Истина);
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

//КоллекцияСтрок - ТабличнаяЧасть,ТаблицаЗначений,ДанныеФормыКоллекция, СтрокаТабличнойЧасти
//Источник - ДокументОбъект, ДанныеФормыСтруктура, УправляемаяФорма
//ПараметрыЗаполнения - Структура(ЗаполнитьРеквизиты = Ложь,  ЗаполнитьНСБУ = Ложь, ЗаполнитьМСФО = Ложь)
Процедура ЗаполнитьСтроки(КоллекцияСтрок, Источник, СтруктураДействий = Неопределено) Экспорт

	Если СтруктураДействий = Неопределено Тогда
		СтруктураДействий = ПолучитьСтруктуруДействий();	
	КонецЕсли;
	
	ЗаполняемыеРеквизитыТаблицыФормы = МСФОУХ.ПолучитьЗаполняемыеРеквизитыТаблицыФормы(Источник);	
	ОбъектИсточник = ?(ТипЗнч(Источник)= Тип("УправляемаяФорма"), Источник.Объект, Источник);
	Граница = МСФОВНАВызовСервераУХ.ПолучитьГраницуДокумента(ОбъектИсточник);
	АлгоритмРСБУ = Константы.АлгоритмНачиcленияАмортизацииАналогичноРСБУ.Получить();	
	ДатаРасчета = ОбъектИсточник.Дата;
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Организация", 	ОбъектИсточник.Организация);
	КэшированныеЗначения.Вставить("Сценарий", 		ОбъектИсточник.Сценарий);
	КэшированныеЗначения.Вставить("ВидыУчета", 		ПредопределенноеЗначение("Перечисление.ВидыУчета.МСФО"));
		
	КэшированныеЗначения.Вставить("ДатаДокумента", 			ОбъектИсточник.Дата);
	КэшированныеЗначения.Вставить("Ссылка", 				ОбъектИсточник.Ссылка);
	
	КэшированныеЗначения.Вставить("ДатаРасчета", 			ДатаРасчета);
	КэшированныеЗначения.Вставить("ДатаНачалаНачисления", 	НачалоМесяца(ДатаРасчета));
	КэшированныеЗначения.Вставить("КонецПредыдущегоМесяца",	КонецМесяца(ДобавитьМесяц(ДатаРасчета, -1)));		
	КэшированныеЗначения.Вставить("Ссылка",					ОбъектИсточник.Ссылка);
	КэшированныеЗначения.Вставить("Период",					ДатаРасчета);
	КэшированныеЗначения.Вставить("АлгоритмРСБУ",			ЛОЖЬ);//использовать текущие параметры ВНА для Алгоритма РСБУ
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ВНА(КоллекцияСтрок, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры 
                                                                   
Функция ПолучитьСтруктуруДействий() Экспорт

	СтруктураДействий = Новый Структура;
	
	ПараметрыВНА = Новый Структура;
	ПараметрыВНА.Вставить("ГруппаВНА", 				"ГруппаВНА");	
	ПараметрыВНА.Вставить("БалансоваяСтоимость", 	"БалансоваяСтоимость");
	
	Если Не Константы.АлгоритмНачиcленияАмортизацииАналогичноРСБУ.Получить() Тогда
		ПараметрыВНА.Вставить("АмортизацияРасчет", "АмортизацияРасчет");
	КонецЕсли;	
	
	СтруктураДействий.Вставить("ЗаполнитьБалансовуюСтоимость");
	СтруктураДействий.Вставить("ЗаполнитьПараметрыВНА", Новый Структура("МСФО", ПараметрыВНА));
		
	Возврат СтруктураДействий;
	
КонецФункции

Процедура ЗаполнитьЗависимостиРеквизитовДокумента(Форма) Экспорт 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
