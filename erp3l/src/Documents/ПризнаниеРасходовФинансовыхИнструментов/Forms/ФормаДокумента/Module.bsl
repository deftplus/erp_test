
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере(ЭтаФорма);
		УправлениеФормой();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ЭтаФорма);
	УправлениеФормой();
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемы(Команда)
	
	Если Не МСФОВНАВызовСервераУХ.ИспользоватьДанныеУчетнойСистемы(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения, ЗаполнитьДокумент", "ДанныеНСБУ", Истина);
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "Сторно");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Сторно

&НаКлиенте
Процедура СторноСчетДтИсточникПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "Сторно");
		
	ТекущаяСтрока = Элементы.Сторно.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетДтИсточник", "СчетДтМСФО"));
	СтруктураДействий.Вставить("ЗаполнитьДоступностьПоИменамСубконто", КэшируемыеЗначения.ИменаСубконто);
		
	КэшДокумента = Новый Структура("ШаблонТрансляции,ИменаСубконто", КэшируемыеЗначения.ШаблонТрансляции, КэшируемыеЗначения.ИменаСубконто);
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РасходыФИ(ТекущаяСтрока, СтруктураДействий, КэшДокумента); 
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетДтИсточник, "Сторно");
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетДтМСФО, "Сторно");
	
КонецПроцедуры

&НаКлиенте
Процедура СторноСчетКтИсточникПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "Сторно");
		
	ТекущаяСтрока = Элементы.Сторно.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетКтИсточник", "СчетКтМСФО"));
	СтруктураДействий.Вставить("ЗаполнитьДоступностьПоИменамСубконто", КэшируемыеЗначения.ИменаСубконто);
		
	КэшДокумента = Новый Структура("ШаблонТрансляции,ИменаСубконто", КэшируемыеЗначения.ШаблонТрансляции, КэшируемыеЗначения.ИменаСубконто);
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РасходыФИ(ТекущаяСтрока, СтруктураДействий, КэшДокумента); 
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетКтИсточник, "Сторно");
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетКтМСФО, "Сторно");
	
КонецПроцедуры

&НаКлиенте
Процедура СторноСчетДтМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетДтМСФО, "Сторно");	
КонецПроцедуры

&НаКлиенте
Процедура СторноСчетКтМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.СторноСчетКтМСФО, "Сторно");	
КонецПроцедуры

&НаКлиенте
Процедура СторноПередНачаломИзменения(Элемент, Отказ)
		
	ТекущаяСтрока = Элементы.Сторно.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаСубконто = Этаформа.КэшируемыеЗначения.ИменаСубконто;
	
	Для каждого СчетСубконто Из ИменаСубконто Цикл
		МСФОКлиентСерверУХ.ОбновитьСубконтоСчетаТЧ(Этаформа, ТекущаяСтрока, СчетСубконто.Ключ, "Сторно", ИменаСубконто);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СторноПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.Сторно.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаСубконто = Этаформа.КэшируемыеЗначения.ИменаСубконто;
	
	Для каждого СчетСубконто Из ИменаСубконто Цикл
		МСФОКлиентСерверУХ.ОбновитьСубконтоСчетаТЧ(Этаформа, ТекущаяСтрока, СчетСубконто.Ключ, "Сторно", ИменаСубконто);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СторноДоговорПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Сторно.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаОкончанияПериода = ОбщегоНазначенияУХ.ПолучитьКонецПериодаОтчета(Объект.ПериодОтчета);
	
	ПараметрыФИ = МСФОВызовСервераУХ.ПолучитьПараметрыФИ(
									ДатаОкончанияПериода, 
									Объект.Организация, 
									ТекущаяСтрока.ФИ, 
									Объект.Сценарий);
									
	//Если ПараметрыФИ.Свойство("ПараметрыУчетаФИ") Тогда
	//	ТекущаяСтрока.Валюта = ПараметрыФИ.Валюта;
	//КонецЕсли;
	//
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеТЧ

&НаКлиенте
Процедура Подключаемый_ЗаполнитьДокумент(РезультатВопроса = Неопределено, ДанныеЗаполнения) Экспорт
	
	Если (РезультатВопроса <> Неопределено) И (РезультатВопроса <> КодВозвратаДиалога.Да) Тогда
		Возврат;	
	КонецЕсли;
    
    ЗаполнитьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ДанныеЗаполнения) Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		
	МСФОУХ.ЗаполнитьДоступностьСубконто(ЭтаФорма, ЭтаФорма.КэшируемыеЗначения.ИменаСубконто, "Сторно");
	МСФОУХ.ДобавитьОформлениеДоступностиСубконто(ЭтаФорма, ЭтаФорма.КэшируемыеЗначения.ИменаСубконто, "Сторно");

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.ПериодОтчета = МСФОВНАВызовСервераУХ.ПолучитьПериодПоДатеПараллельногоУчета(Объект.Дата, Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодготовитьФормуНаСервере(ЭтаФорма)

	ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", Документы.ПризнаниеРасходовФинансовыхИнструментов.ПолучитьИменаСубконто());
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", Новый Структура);
	ЭтаФорма.КэшируемыеЗначения.Вставить("КлючевыеСубконто", МСФОКлиентСерверУХ.ПолучитьКлючевыеСубконтоФИ(Истина, Истина));
	
	МСФОУХ.ЗаполнитьДоступностьСубконто(ЭтаФорма, ЭтаФорма.КэшируемыеЗначения.ИменаСубконто, "Сторно");
	МСФОУХ.ДобавитьОформлениеДоступностиСубконто(ЭтаФорма, ЭтаФорма.КэшируемыеЗначения.ИменаСубконто, "Сторно");
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	МСФОУХ.ЗаполнитьКэшируемыеЗначения(ЭтаФорма);
	
	ПараметрыВыбораМСФО = МСФОКлиентСерверУХ.ПолучитьПараметрыВыбораДляСчетаБД(
												ЭтаФорма.КэшируемыеЗначения.ПланСчетовМСФО, Неопределено);
	ЭтаФорма.Элементы.СторноСчетДтМСФО.ПараметрыВыбора = ПараметрыВыбораМСФО;
	ЭтаФорма.Элементы.СторноСчетКтМСФО.ПараметрыВыбора = ПараметрыВыбораМСФО;
	
	ПараметрыВыбораИсточник = МСФОКлиентСерверУХ.ПолучитьПараметрыВыбораДляСчетаБД(
												ЭтаФорма.КэшируемыеЗначения.ПланСчетовНСБУ, Неопределено);
												
	ЭтаФорма.Элементы.СторноСчетДтИсточник.ПараметрыВыбора = ПараметрыВыбораИсточник;
	ЭтаФорма.Элементы.СторноСчетКтИсточник.ПараметрыВыбора = ПараметрыВыбораИсточник;
	
	Элементы.ФормаЗаполнитьДокумент.Доступность = ЭтаФорма.КэшируемыеЗначения.ФормироватьПроводкиМСФО;
		
КонецПроцедуры

#КонецОбласти
