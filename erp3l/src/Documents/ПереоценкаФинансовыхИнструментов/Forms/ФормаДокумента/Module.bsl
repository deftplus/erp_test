
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Для каждого СтрокаФИ Из Объект.ФинансовыеИнструменты Цикл
	   	Если ЯвляетсяПроизводнымФИ(СтрокаФИ.ПараметрыУчетаФИ) Тогда		
			СтрокаФИ.Котировка = СтрокаФИ.ФИ.Котировка;
		КонецЕсли;	
	КонецЦикла;
	
	ЗаполнитьДоступностьСписанияПереценки(ТекущийОбъект);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КэшируемыеЗначения = Новый Структура;
	КэшируемыеЗначения.Вставить("ПроцентСниженияСтоимостиФИ", Константы.ПроцентСниженияСтоимостиФИ.Получить());
	КэшируемыеЗначения.Вставить("ВидыОпераций", МСФОВызовСервераУХ.ПолучитьСтруктуруСоЗначениямиПеречисления("ВидыОперацийПоФинансовымИнструментамМСФО"));
		
	УправлениеФормой(ЭтаФорма);	

	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ФинансовыеИнструменты");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДоступностьСписанияПереценки(ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	
	ЗаполнитьДатуПоПериодуОтчета(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	ФинансовыеИнструментыПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ФинансовыеИнструментыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ФинансовыеИнструменты.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ОбновитьОтображениеПоВидуОперации(ТекущаяСтрока);
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ФинансовыеИнструменты");
		
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыПослеУдаления(Элемент)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ФинансовыеИнструменты");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ФинансовыеИнструментыФИПриИзменении(Элемент)
	
	ЗаполнитьСтрокуФИ();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуФИ()
	
	ИдентификаторСтроки = Элементы.ФинансовыеИнструменты.ТекущаяСтрока;
	Если ИдентификаторСтроки = Неопределено Тогда
		Возврат; 
	КонецЕсли;
	
	СтрокаТЧ = Объект.ФинансовыеИнструменты.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаТЧ = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	Документы.ПереоценкаФинансовыхИнструментов.ЗаполнитьСтрокуФИ(СтрокаТЧ, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыПараметрыУчетаФИПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ФинансовыеИнструменты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьСтрокуНаСервере(ЭтаФорма, ТекущаяСтрока);
	ОбновитьОтображениеПоВидуОперации(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыБалансоваяСтоимостьВДПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура();
	//СтруктураДействий.Вставить("ЗаполнитьБалансоваяСтоимостьФВ");
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");	
	
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыБалансоваяСтоимостьФВПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура();	
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
	
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыПереоцененнаяСтоимостьВДПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить("ЗаполнитьПереоцененнаяСтоимостьВД");
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
	
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыПереоцененнаяСтоимостьФВПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура();	
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
		
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыСуммаПереоценкиВДПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
		
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные, СтруктураДействий);

КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыКоличествоПриИзменении(Элемент)
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыКотировкаПриИзменении(Элемент)
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийГруппыСведения

&НаКлиенте
Процедура ФинансовыеИнструментыДатаПереоценкиПриИзменении(Элемент)
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыЗначениеКотировкиФИПриИзменении(Элемент)	
	ОбработатьСтрокуНаСервере(ЭтаФорма, Элементы.ФинансовыеИнструменты.ТекущиеДанные);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийГруппыПодробноВыбытие

&НаКлиенте
Процедура ФинансовыеИнструментыВыбытиеКоличествоПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыВыбытиеСтоимостиВДПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ФинансовыеИнструменты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьВыбытиеСтоимостиФВПоВД");
	
	КэшируемыеЗначенияТЧ = ПолучитьКэшируемыеЗначения(ЭтаФорма, СтруктураДействий, ПолучитьДоступностьСписанияПереоценки(ТекущаяСтрока.ПараметрыУчетаФИ));
    ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ПереоценкаФИ(ТекущаяСтрока, СтруктураДействий, КэшируемыеЗначенияТЧ);
    
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыеИнструментыДатаВыбытияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ФинансовыеИнструменты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьВыбытиеКоличество");
	СтруктураДействий.Вставить("ЗаполнитьВыбытиеСтоимостиВД");
	СтруктураДействий.Вставить("ЗаполнитьВыбытиеСтоимостиФВ");
	
	КэшируемыеЗначенияТЧ = ПолучитьКэшируемыеЗначения(ЭтаФорма, СтруктураДействий, ПолучитьДоступностьСписанияПереоценки(ТекущаяСтрока.ПараметрыУчетаФИ));
    ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ПереоценкаФИ(ТекущаяСтрока, СтруктураДействий, КэшируемыеЗначенияТЧ);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьПодробно(Команда)	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Истина, "ФинансовыеИнструменты");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда) Экспорт
	ЗаполнитьДокументСервер();
КонецПроцедуры

&НаКлиенте
Процедура ДанныеУчетаФИ(Команда)
	
	ФИ = Новый СписокЗначений;
	Для каждого СтрокаФИ Из Объект.ФинансовыеИнструменты Цикл
		ФИ.Добавить(СтрокаФИ.ФИ);
	КонецЦикла;
		
	ПараметрыОтчета = Новый Структура("Отбор,СформироватьПриОткрытии", Новый Структура("ФИ,ПериодОтчета,Организация", ФИ, Объект.ПериодОтчета, Объект.Организация), Истина);
	ОткрытьФорму("Отчет.ДанныеУчетаФИМСФО.ФормаОбъекта", ПараметрыОтчета, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеПоВидуОперации(СтрокаОтображения)

	Если Не Элементы.ГруппаПодробно.Видимость Тогда
		Возврат;		
	КонецЕсли;
	
	ВидыОпераций = КэшируемыеЗначения.ВидыОпераций;
	
	ЭтоПризнание = (Объект.ВидОперации = ВидыОпераций.Признание);
	ЭтоРекласс = (Объект.ВидОперации = ВидыОпераций.Рекласс);
	ЭтоВыбытие = (Объект.ВидОперации = ВидыОпераций.Выбытие);
	
	Элементы.СтраницаВыбытие.Видимость = ЭтоРекласс Или ЭтоВыбытие;
	
	Если ЭтоРекласс Или ЭтоВыбытие Тогда
		
		Элементы.СтраницаВыбытие.Заголовок 							= ?(ЭтоВыбытие, НСтр("ru = 'Списание'"), НСтр("ru = 'Рекласс'"));
		Элементы.ФинансовыеИнструментыДатаВыбытия.Заголовок 		= ?(ЭтоВыбытие, НСтр("ru = 'Дата списания'"), НСтр("ru = 'Дата рекласса'"));
		Элементы.ФинансовыеИнструментыВыбытиеКоличество.Заголовок 	= ?(ЭтоВыбытие, НСтр("ru = 'Списание'"), НСтр("ru = 'Рекласс'")) + НСтр("ru = ', количество'");
		Элементы.ФинансовыеИнструментыВыбытиеСтоимостиВД.Заголовок 	= ?(ЭтоВыбытие, НСтр("ru = 'Списание'"), НСтр("ru = 'Рекласс'")) + НСтр("ru = ' в валюте номинала'");
		Элементы.ФинансовыеИнструментыВыбытиеСтоимостиФВ.Заголовок 	= ?(ЭтоВыбытие, НСтр("ru = 'Списание'"), НСтр("ru = 'Рекласс'")) + НСтр("ru = ' в функциональной валюте'");
	
	КонецЕсли;
	
	Элементы.ФинансовыеИнструментыДатаПризнанияФИ.Видимость = ЭтоПризнание;
	
	Элементы.ФинансовыеИнструментыКоличество.Видимость = (ТипЗнч(СтрокаОтображения.ФИ) = Тип("СправочникСсылка.ЦенныеБумаги"));
	Элементы.ДекорацияОписание.Заголовок = ПолучитьОписаниеКотировки(СтрокаОтображения.Котировка, СтрокаОтображения.ФИ);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ФункциональнаяВалюта = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(Форма.Объект.Организация, "ФункциональнаяВалюта");
    Форма.КэшируемыеЗначения.Вставить("ФункциональнаяВалюта", ФункциональнаяВалюта);
	
	Форма.Элементы.ФинансовыеИнструментыЗаполнитьСтроки.Видимость = (Форма.Объект.ВидОперации <> Форма.КэшируемыеЗначения.ВидыОпераций.Рекласс);
	Форма.Элементы.ФинансовыеИнструментыПараметрыУчетаФИДо.Видимость = (Форма.Объект.ВидОперации = Форма.КэшируемыеЗначения.ВидыОпераций.Рекласс);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументСервер()	
	Документы.ПереоценкаФинансовыхИнструментов.ЗаполнитьДокумент(Объект);	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьСтрокуНаСервере(Форма, СтрокаТЧ = Неопределено, СтруктураДействий = Неопределено)
	
	Если СтрокаТЧ = Неопределено Тогда
		
		Если Форма = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаТЧ = Форма.Элементы.ФинансовыеИнструменты.ТекущиеДанные;
		Если СтрокаТЧ = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий = Неопределено Тогда
		
		СтруктураДействий = Новый Структура;	
		СтруктураДействий.Вставить("ЗаполнитьДоступноСписаниеПереоценки");
		СтруктураДействий.Вставить("ЗаполнитьПереоцененнаяСтоимостьВД");		
		СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
		СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
				
	КонецЕсли;
	
	ДоступностьСписанияПереоценки = ПолучитьДоступностьСписанияПереоценки(СтрокаТЧ.ПараметрыУчетаФИ);
	КэшируемыеЗначенияТЧ = ПолучитьКэшируемыеЗначения(Форма, СтруктураДействий, ДоступностьСписанияПереоценки);		
    ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ПереоценкаФИ(СтрокаТЧ, СтруктураДействий, КэшируемыеЗначенияТЧ);
	
	Форма.Элементы.ДекорацияОписание.Заголовок = ПолучитьОписаниеКотировки(СтрокаТЧ.Котировка, СтрокаТЧ.ФИ);
    
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКэшируемыеЗначения(Форма, СтруктураДействий, ПараметрыДоступностьСписанияПереоценки)
	
	ДатаОкончанияПериода = НачалоДня(ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(Форма.Объект.ПериодОтчета, "ДатаОкончания"));
	
	КэшируемыеЗначенияТЧ = Новый Структура;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСуммаПереоценкиВД") 
		Или СтруктураДействий.Свойство("ЗаполнитьДатуВыбытияФИ")
		Или СтруктураДействий.Свойство("ЗаполнитьВыбытиеСтоимостиФВПоВД") Тогда
	
		КэшируемыеЗначенияТЧ.Вставить("КэшКурсов", 					Неопределено);
		КэшируемыеЗначенияТЧ.Вставить("ФункциональнаяВалюта", 		Форма.КэшируемыеЗначения.ФункциональнаяВалюта);
		КэшируемыеЗначенияТЧ.Вставить("ДатаОкончанияПериода", 		ДатаОкончанияПериода);
			
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСписаниеПереоценкиВД") Тогда
		КэшируемыеЗначенияТЧ.Вставить("ПроцентСниженияСтоимостиФИ", Форма.КэшируемыеЗначения.ПроцентСниженияСтоимостиФИ);	
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьДоступноСписаниеПереоценки") Или СтруктураДействий.Свойство("ЗаполнитьСписаниеПереоценкиВД") Тогда
		КэшируемыеЗначенияТЧ.Вставить("ПараметрыДоступностьСписанияПереоценки", ПараметрыДоступностьСписанияПереоценки);
	КонецЕсли;
	
	Возврат КэшируемыеЗначенияТЧ;

КонецФункции

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоступностьСписанияПереоценки(ПараметрыУчетаФИ)
	Возврат Документы.ПереоценкаФинансовыхИнструментов.ПолучитьДоступностьСписанияПереоценки(ПараметрыУчетаФИ);
КонецФункции

&НаСервере
Процедура ЗаполнитьДоступностьСписанияПереценки(ТекущийОбъект)
	
	ТабФИ = ТекущийОбъект.ФинансовыеИнструменты.Выгрузить(,"ПараметрыУчетаФИ");
	ТабФИ.Свернуть("ПараметрыУчетаФИ");
	
	ПараметрыФИ = ПолучитьДоступностьСписанияПереоценки(ТабФИ.ВыгрузитьКолонку("ПараметрыУчетаФИ"));
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьДоступноСписаниеПереоценки");
	
	КэшируемыеЗначенияТЧ = ПолучитьКэшируемыеЗначения(ЭтаФорма, СтруктураДействий, ПараметрыФИ);
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ПереоценкаФИ(Объект.ФинансовыеИнструменты, СтруктураДействий, КэшируемыеЗначенияТЧ);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДатуПоПериодуОтчета(Форма)
	
	Объект = Форма.Объект;
	Объект.Дата = ОбщегоНазначенияУХ.ПолучитьКонецПериодаОтчета(Объект.ПериодОтчета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯвляетсяПроизводнымФИ(ПараметрыУчетаФИ)
	
	Если Не ЗначениеЗаполнено(ПараметрыУчетаФИ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	т.Ссылка
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО КАК т
	|ГДЕ
	|	т.Ссылка = &ПараметрыУчетаФИ
	|	И т.ВидОбъектаФинансовогоХарактера.ПроизводныйФИ");
	
	Запрос.УстановитьПараметр("ПараметрыУчетаФИ", ПараметрыУчетаФИ);
	Возврат Не Запрос.Выполнить().Пустой();
		
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОписаниеКотировки(Котировка, ФИ)
	Возврат Справочники.ВидыКотировокФинансовыхИнструментов.ПолучитьОписаниеЗначенияКотировки(?(ЗначениеЗаполнено(Котировка), Котировка, ФИ));
КонецФункции

#КонецОбласти




