#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ВидОперации", "ПериодОтчета", Отказ);
	Реквизиты.Вставить("ВидОперацииФИ",		Реквизиты.ВидОперации);//вид операции документа
	Реквизиты.Вставить("ВидОперации", 		ПредопределенноеЗначение("Справочник.ВидыОпераций.ПереоценкаФИ"));//Вид операции ТК
	Реквизиты.Вставить("ГраницыПериода",	МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты,,Истина));
	Реквизиты.Вставить("Период",			КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",		Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("Период",			Реквизиты.Период);
	Запрос.УстановитьПараметр("ВидОперацииФИ",	Реквизиты.ВидОперацииФИ);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаДляПроводок(НомераТаблиц);
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапросаТаблицаДляПроводок(НомераТаблиц)

	НомераТаблиц.Вставить("втФинансовыеИнструменты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втПараметрыУчетаФИ", 		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втТаблицаПроводок", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СведенияОФИ", 				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОперацииПериодаФИ", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПроводок", 			НомераТаблиц.Количество());
	
    Возврат	
	"ВЫБРАТЬ
	|	втФИ.ФИ КАК ИсточникФИ,
	|	ЕСТЬNULL(СвязанныеДоговоры.СвязанныйДоговор, втФИ.ФИ) КАК ФИ,
	|	втФИ.ПараметрыУчетаФИ КАК ПараметрыФИ,
	|	ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИДоРекласса = ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|			ТОГДА втФИ.ПараметрыУчетаФИ
	|		ИНАЧЕ втФИ.ПараметрыУчетаФИДоРекласса
	|	КОНЕЦ КАК ПараметрыУчетаФИДоРекласса,
	|	втФИ.Контрагент КАК Контрагент,
	|	втФИ.ДатаПризнания КАК ДатаПризнания,
	|	ВЫБОР
	|		КОГДА втФИ.ДатаПереоценки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ втФИ.ДатаПереоценки
	|	КОНЕЦ КАК ДатаПереоценки,
	|	втФИ.ДатаВыбытия КАК ДатаВыбытия,
	|	втФИ.Количество КАК Количество,
	|	втФИ.СуммаПереоценкиФВ КАК СуммаПереоценкиФВ,
	|	втФИ.СуммаПереоценкиФВ - ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток)
	|			ТОГДА 0
	|		ИНАЧЕ втФИ.НакопленнаяПереоценкаФВ
	|	КОНЕЦ КАК ПереоценкаФВ,
	|	ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток)
	|				И НЕ втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПроизводныйФИ
	|			ТОГДА втФИ.СуммаПереоценкиВД
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПереоценкаВД,
	|	втФИ.СписаниеПереоценкиФВ КАК СписаниеПереоценкиФВ,
	|	втФИ.ВыбытиеСтоимостиВД КАК ВыбытиеСтоимостиВД,
	|	втФИ.ВыбытиеСтоимостиФВ КАК ВыбытиеСтоимостиФВ,
	|	втФИ.БалансоваяСтоимостьВД КАК БалансоваяСтоимостьВД,
	|	втФИ.БалансоваяСтоимостьФВ КАК БалансоваяСтоимостьФВ,
	|	втФИ.ПереоцененнаяСтоимостьВД КАК ПереоцененнаяСтоимостьВД,
	|	втФИ.ПереоцененнаяСтоимостьФВ КАК ПереоцененнаяСтоимостьФВ,
	|	втФИ.НакопленнаяПереоценкаФВ КАК НакопленнаяПереоценкаФВ,
	|	втФИ.СчетУчета КАК СчетУчета,
	|	втФИ.ВалютаНоминала КАК ВалютаНоминала,
	|	ВЫБОР
	|		КОГДА втФИ.ФИ ССЫЛКА Справочник.ЦенныеБумаги
	|				И втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоСправедливойСтоимости)
	|			ТОГДА ИСТИНА
	|		КОГДА втФИ.ФИ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				И втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПроизводныйФИ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЭтоЦБ,
	|	ВЫБОР
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.ПроизводныйФИ
	|			ТОГДА ВЫБОР
	|					КОГДА втФИ.БалансоваяСтоимостьФВ > 0
	|						ТОГДА ВЫБОР
	|								КОГДА втФИ.СуммаПереоценкиФВ > 0
	|									ТОГДА ЛОЖЬ
	|								ИНАЧЕ ИСТИНА
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА втФИ.СуммаПереоценкиФВ > 0
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Актив)
	|			ТОГДА ИСТИНА
	|		КОГДА втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.АктивОбязательство = ЗНАЧЕНИЕ(Перечисление.АктивОбязательствоОбъектовФинансовогоХарактера.Обязательство)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АктивОбязательство,
	|	втФИ.ПараметрыУчетаФИ <> втФИ.ПараметрыУчетаФИДоРекласса КАК СформироватьРекласс,
	|	ЕСТЬNULL(втФИ.ПараметрыУчетаФИДоРекласса.ВидОбъектаФинансовогоХарактера.СпособУчета, ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоАмортизированнойСтоимости) КАК РеклассИзАС,
	|	втФИ.ПризнаниеФИ КАК ПризнаниеФИ,
	|	втФИ.ПараметрыУчетаФИ.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток) КАК ЧерезПрибыльУбыток,
	|	втФИ.ПараметрыУчетаФИДоРекласса.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрибыльУбыток) КАК ЧерезПрибыльУбытокДоРекласса,
	|	втФИ.ВыбытиеКоличество КАК ВыбытиеКоличество,
	|	втФИ.Подразделение КАК Подразделение,
	|	втФИ.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втФинансовыеИнструменты
	|ИЗ
	|	Документ.ПереоценкаФинансовыхИнструментов.ФинансовыеИнструменты КАК втФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязанныеДоговоры КАК СвязанныеДоговоры
	|		ПО втФИ.ФИ = СвязанныеДоговоры.БазовыйДоговор
	|			И (СвязанныеДоговоры.ВидСвязи = ЗНАЧЕНИЕ(Справочник.ВидыСвязейОбъектов.ДоговорНаПокупкуВалюты))
	|ГДЕ
	|	втФИ.Ссылка = &Ссылка
	|	И втФИ.ПараметрыУчетаФИ <> ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыФИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыФИ.Ссылка КАК ПараметрыУчетаФИ,
	|	ПараметрыФИ.СчетУчета КАК СчетУчета,
	|	ПараметрыФИ.Счет КАК Счет,
	|	ПараметрыФИ.Субконто1 КАК Субконто1,
	|	ПараметрыФИ.Субконто2 КАК Субконто2,
	|	ПараметрыФИ.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втПараметрыУчетаФИ
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.СчетаУчета КАК ПараметрыФИ
	|ГДЕ
	|	ПараметрыФИ.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				т.ПараметрыФИ
	|			ИЗ
	|				втФинансовыеИнструменты КАК т
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				т.ПараметрыУчетаФИДоРекласса
	|			ИЗ
	|				втФинансовыеИнструменты КАК т
	|			ГДЕ
	|				т.ПараметрыФИ <> т.ПараметрыУчетаФИДоРекласса)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыУчетаФИ,
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаФИ)
	|	КОНЕЦ КАК Событие,
	|	втФИ.Контрагент КАК Контрагент,
	|	втФИ.ВалютаНоминала КАК Валюта,
	|	втФИ.ФИ КАК ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса КАК ПараметрыУчетаФИДт,
	|	втФИ.ПараметрыУчетаФИДоРекласса КАК ПараметрыУчетаФИКт,
	|	NULL КАК Период,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ВЫБОР
	|					КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОтПереоценки)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОтПереоценки)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаВД < 0
	|			ТОГДА -втФИ.ПереоценкаВД
	|		ИНАЧЕ втФИ.ПереоценкаВД
	|	КОНЕЦ КАК СуммаВВалюте,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА -втФИ.ПереоценкаФВ
	|		ИНАЧЕ втФИ.ПереоценкаФВ
	|	КОНЕЦ КАК СуммаВФункциональнойВалюте,
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ""Признание котируемого финансового инструмента""
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ""Уценка котируемого финансового инструмента""
	|		ИНАЧЕ ""Дооценка котируемого финансового инструмента""
	|	КОНЕЦ КАК Комментарий,
	|	NULL КАК Количество,
	|	втФИ.Подразделение КАК Подразделение,
	|	втФИ.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПроводки
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ЭтоЦБ = ИСТИНА
	|	И втФИ.АктивОбязательство = ИСТИНА
	|	И втФИ.ПереоценкаФВ <> 0
	|	И НЕ втФИ.РеклассИзАС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаФИ)
	|	КОНЕЦ,
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	NULL,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОтПереоценки)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ВЫБОР
	|					КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОтПереоценки)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаВД < 0
	|			ТОГДА -втФИ.ПереоценкаВД
	|		ИНАЧЕ втФИ.ПереоценкаВД
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА -втФИ.ПереоценкаФВ
	|		ИНАЧЕ втФИ.ПереоценкаФВ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ""Признание котируемого финансового инструмента""
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА ""Уценка котируемого финансового инструмента""
	|		ИНАЧЕ ""Дооценка котируемого финансового инструмента""
	|	КОНЕЦ,
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ЭтоЦБ = ИСТИНА
	|	И втФИ.АктивОбязательство = ЛОЖЬ
	|	И втФИ.ПереоценкаФВ <> 0
	|	И НЕ втФИ.РеклассИзАС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаФИ)
	|	КОНЕЦ,
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	NULL,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОтПереоценки)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА втФИ.ЧерезПрибыльУбытокДоРекласса
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОтПереоценки)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ < 0
	|			ТОГДА -втФИ.ПереоценкаФВ
	|		ИНАЧЕ втФИ.ПереоценкаФВ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.БалансоваяСтоимостьФВ = 0
	|			ТОГДА ""Признание производного финансового инструмента""
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ""Дооценка производного финансового инструмента""
	|		ИНАЧЕ ""Уценка производного финансового инструмента""
	|	КОНЕЦ,
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ЭтоЦБ = ЛОЖЬ
	|	И втФИ.ПереоценкаФВ <> 0
	|	И НЕ втФИ.РеклассИзАС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.СписаниеПереоценки),
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	NULL,
	|	ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетУбыткаОтОбесценения),
	|	ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке),
	|	0,
	|	втФИ.СписаниеПереоценкиФВ,
	|	""Списание переоценки / обесценения при выбытии финансового инструмента"",
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.СписаниеПереоценкиФВ > 0
	|	И НЕ втФИ.РеклассИзАС
	|	И НЕ втФИ.ЧерезПрибыльУбытокДоРекласса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПризнаниеФИ),
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ДатаПризнания,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОтПереоценки)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОтПереоценки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	втФИ.БалансоваяСтоимостьВД,
	|	втФИ.БалансоваяСтоимостьФВ,
	|	""Признание первоначальной стоимости производного финансового инструмента(не учитывающегося в НСБУ)"",
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ПризнаниеФИ
	|	И втФИ.БалансоваяСтоимостьФВ <> 0
	|	И втФИ.ПараметрыФИ.ВидОбъектаФинансовогоХарактера.ПроизводныйФИ
	|	И НЕ втФИ.РеклассИзАС
	|	И &ВидОперацииФИ = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.Признание)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВыбытиеФИ),
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ДатаВыбытия,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетДоходаОтВыбытия)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРасходаОтВыбытия)
	|	КОНЕЦ,
	|	втФИ.ПереоцененнаяСтоимостьВД - втФИ.ВыбытиеСтоимостиВД,
	|	втФИ.ПереоцененнаяСтоимостьФВ - втФИ.ВыбытиеСтоимостиФВ,
	|	""Выбытие расхождения в стоимости финансового инструмента"",
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И втФИ.СуммаПереоценкиФВ <> 0
	|	И втФИ.ПереоцененнаяСтоимостьФВ - втФИ.ВыбытиеСтоимостиФВ <> 0
	|	И НЕ втФИ.РеклассИзАС
	|	И &ВидОперацииФИ = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.Выбытие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ВыбытиеПереоценкиФИ),
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ДатаВыбытия,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРеализованнойПереоценки)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ > 0
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетРеализованнойПереоценки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетКапиталаПриПереоценке)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ > 0
	|			ТОГДА втФИ.ПереоценкаФВ
	|		ИНАЧЕ -втФИ.ПереоценкаФВ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.ПереоценкаФВ > 0
	|			ТОГДА втФИ.ПереоценкаФВ
	|		ИНАЧЕ -втФИ.ПереоценкаФВ
	|	КОНЕЦ,
	|	""Выбытие резерва накопленной переоценки финансового инструмента"",
	|	NULL,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И втФИ.ПереоценкаФВ <> 0
	|	И НЕ втФИ.ЧерезПрибыльУбытокДоРекласса
	|	И НЕ втФИ.РеклассИзАС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.РеклассФИ),
	|	втФИ.Контрагент,
	|	втФИ.ВалютаНоминала,
	|	втФИ.ФИ,
	|	втФИ.ПараметрыФИ,
	|	втФИ.ПараметрыУчетаФИДоРекласса,
	|	втФИ.ДатаВыбытия,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФИ.АктивОбязательство = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетАктиваДолгосрочный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СчетаУчетаФИ.СчетОбязательстваДолгосрочный)
	|	КОНЕЦ,
	|	втФИ.ВыбытиеСтоимостиВД,
	|	втФИ.ВыбытиеСтоимостиФВ,
	|	""Рекласс первоначальной стоимости финансового инструмента"",
	|	втФИ.ВыбытиеКоличество,
	|	втФИ.Подразделение,
	|	втФИ.НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФИ
	|ГДЕ
	|	втФИ.ДатаВыбытия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И втФИ.СуммаПереоценкиФВ <> 0
	|	И НЕ втФИ.ЧерезПрибыльУбытокДоРекласса
	|	И втФИ.СформироватьРекласс
	|	И &ВидОперацииФИ = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.Рекласс)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втФинансовыеИнструменты.ДатаПризнания КАК Период,
	|	втФинансовыеИнструменты.ФИ КАК ФИ,
	|	&Организация КАК Организация,
	|	втФинансовыеИнструменты.ПараметрыФИ КАК ПараметрыУчетаФИ,
	|	втФинансовыеИнструменты.ДатаПризнания КАК ДатаПризнанияФИ,
	|	&Сценарий КАК Сценарий,
	|	&Ссылка КАК ИсточникВерсииГрафика,
	|	втФинансовыеИнструменты.ВалютаНоминала КАК Валюта,
	|	втФинансовыеИнструменты.БалансоваяСтоимостьВД КАК СуммаОсновнойЗадолженности,
	|	втФинансовыеИнструменты.ДатаПризнания КАК ДатаПризнания,
	|	втФинансовыеИнструменты.Количество КАК Количество,
	|	втФинансовыеИнструменты.Контрагент КАК Контрагент,
	|	втФинансовыеИнструменты.Подразделение КАК Подразделение,
	|	втФинансовыеИнструменты.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	втФинансовыеИнструменты КАК втФинансовыеИнструменты
	|ГДЕ
	|	втФинансовыеИнструменты.ПризнаниеФИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втФинансовыеИнструменты.ДатаПереоценки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ втФинансовыеИнструменты.ДатаПереоценки
	|	КОНЕЦ КАК Период,
	|	втФинансовыеИнструменты.ФИ КАК ФИ,
	|	втФинансовыеИнструменты.ПараметрыФИ КАК ПараметрыУчетаФИ,
	|	&Организация КАК Организация,
	|	&Сценарий КАК Сценарий,
	|	ВЫБОР
	|		КОГДА втФинансовыеИнструменты.ДатаПризнания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ втФинансовыеИнструменты.ДатаПризнания
	|	КОНЕЦ КАК ДатаПризнанияФИ,
	|	СУММА(втФинансовыеИнструменты.СуммаПереоценкиФВ - втФинансовыеИнструменты.НакопленнаяПереоценкаФВ) КАК Переоценка,
	|	СУММА(втФинансовыеИнструменты.СуммаПереоценкиФВ - втФинансовыеИнструменты.НакопленнаяПереоценкаФВ) КАК РезервПереоценки
	|ИЗ
	|	втФинансовыеИнструменты КАК втФинансовыеИнструменты
	|
	|СГРУППИРОВАТЬ ПО
	|	втФинансовыеИнструменты.ФИ,
	|	втФинансовыеИнструменты.ПараметрыФИ,
	|	ВЫБОР
	|		КОГДА втФинансовыеИнструменты.ДатаПереоценки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ втФинансовыеИнструменты.ДатаПереоценки
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втФинансовыеИнструменты.ДатаПризнания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ втФинансовыеИнструменты.ДатаПризнания
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(втФинансовыеИнструменты.ПереоценкаФВ - втФинансовыеИнструменты.СписаниеПереоценкиФВ) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втПроводки.Период, &Период) КАК Период,
	|	втПроводки.Событие КАК Событие,
	|	втПроводки.Контрагент КАК Контрагент,
	|	втПроводки.Валюта КАК Валюта,
	|	втПроводки.ФИ КАК ФИ,
	|	втПроводки.СчетДт КАК СчетУчетаДт,
	|	втПроводки.СчетКт КАК СчетУчетаКт,
	|	втПроводки.СуммаВВалюте КАК СуммаВВалюте,
	|	втПроводки.СуммаВФункциональнойВалюте КАК СуммаВФункциональнойВалюте,
	|	втПроводки.Комментарий КАК Комментарий,
	|	тСчетДт.Счет КАК СчетДт,
	|	тСчетДт.Счет.СчетСсылка КАК СчетДтМСФО,
	|	тСчетДт.Субконто1 КАК СубконтоДт1,
	|	тСчетДт.Субконто2 КАК СубконтоДт2,
	|	тСчетДт.Субконто3 КАК СубконтоДт3,
	|	тСчетКт.Счет КАК СчетКт,
	|	тСчетКт.Счет.СчетСсылка КАК СчетКтМСФО,
	|	тСчетКт.Субконто1 КАК СубконтоКт1,
	|	тСчетКт.Субконто2 КАК СубконтоКт2,
	|	тСчетКт.Субконто3 КАК СубконтоКт3,
	|	втПроводки.ПараметрыУчетаФИДт КАК ПараметрыУчетаФИДт,
	|	втПроводки.ПараметрыУчетаФИКт КАК ПараметрыУчетаФИКт,
	|	втПроводки.Подразделение КАК ПодразделениеДт,
	|	втПроводки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	втПроводки.Подразделение КАК ПодразделениеКт,
	|	втПроводки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт
	|ИЗ
	|	втПроводки КАК втПроводки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыУчетаФИ КАК тСчетДт
	|		ПО втПроводки.СчетДт = тСчетДт.СчетУчета
	|			И втПроводки.ПараметрыУчетаФИДт = тСчетДт.ПараметрыУчетаФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыУчетаФИ КАК тСчетКт
	|		ПО втПроводки.СчетКт = тСчетКт.СчетУчета
	|			И втПроводки.ПараметрыУчетаФИКт = тСчетКт.ПараметрыУчетаФИ";
	
КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 		= ДополнительныеСвойства.ДляПроведения.Реквизиты;	
	ТаблицаПроводок = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводок;
	
	ТаблицаПроводокШаблон = МСФОВызовСервераУХ.ПолучитьТаблицуПроводокФИ();
	//ТаблицаПроводокШаблон.Колонки.Удалить("ВидОперации");// заполняется из реквизитов
	
	КэшКурсов = Новый Соответствие;
	Реквизиты.Вставить("ЕстьСчетаУчета", Истина);
	ФВ = Реквизиты.ФункциональнаяВалюта;
	ДатаКурсов = Реквизиты.Период;
	КурсФВ = ПолучитьКурс(ФВ, КэшКурсов, ДатаКурсов);
	
	Если НЕ Реквизиты.ФормироватьПроводкиМСФО Тогда
	
		ТаблицаПроводокШаблон.Колонки.Добавить("ВалютаДт");
		ТаблицаПроводокШаблон.Колонки.Добавить("ВалютаКт");
		ТаблицаПроводокШаблон.Колонки.Добавить("ЗначениеВалютаДт");
		ТаблицаПроводокШаблон.Колонки.Добавить("ЗначениеВалютаКт");
				
	КонецЕсли;
	
	ТаблицаПроводокШаблон.Колонки.Добавить("СчетУчетаДт");
	ТаблицаПроводокШаблон.Колонки.Добавить("СчетУчетаКт");		
		
	Для каждого СтрокаИсточник Из ТаблицаПроводок Цикл	
				
		Движение = ТаблицаПроводокШаблон.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты);
		ЗаполнитьЗначенияСвойств(Движение, СтрокаИсточник);
		Движение.ВидОперации = СтрокаИсточник.Событие;
		
		КлючевыеСубконто = Новый Структура("ФИ,Контрагент,ПараметрыУчетаФИ", СтрокаИсточник.ФИ, СтрокаИсточник.Контрагент, СтрокаИсточник.ПараметрыУчетаФИДт);
		МСФОКлиентСерверУХ.УстановитьКлючевыеСубконтоФИ(Движение, СтрокаИсточник, Истина, Ложь, , Истина);
		КлючевыеСубконто = Новый Структура("ФИ,Контрагент,ПараметрыУчетаФИ", СтрокаИсточник.ФИ, СтрокаИсточник.Контрагент, СтрокаИсточник.ПараметрыУчетаФИКт);
		МСФОКлиентСерверУХ.УстановитьКлючевыеСубконтоФИ(Движение, СтрокаИсточник, Ложь, Истина, , Истина);
														
		КурсВД = ПолучитьКурс(Движение.Валюта, КэшКурсов, ДатаКурсов);										
		
		Если Движение.СуммаВВалюте = 0 Тогда
			Движение.СуммаВВалюте = РаботаСКурсамиВалютКлиентСерверУХ
												.ПересчитатьИзВалютыВВалюту(
												Движение.СуммаВФункциональнойВалюте,
												ФВ,
												Движение.Валюта,
												КурсФВ,
												КурсВД
											);										
		КонецЕсли;
												
		СвойстваСчетаДт = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(Движение.СчетДт);
		СвойстваСчетаКт = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(Движение.СчетКт);
		
		Если Реквизиты.ФормироватьПроводкиМСФО Тогда
			
			МСФОВызовСервераУХ.ЗаполнитьПодразделенияНаправленияДеятельности(Движение, СтрокаИсточник, СвойстваСчетаДт, СвойстваСчетаКт);
			
		Иначе
		
			Если СвойстваСчетаДт.Валютный Тогда
			
				Движение.ВалютаДт = Движение.Валюта;
				Движение.ЗначениеВалютаДт = Движение.СуммаВВалюте;
			
			КонецЕсли;
			
			Если СвойстваСчетаКт.Валютный Тогда
			
				Движение.ВалютаКт = Движение.Валюта;
				Движение.ЗначениеВалютаКт = Движение.СуммаВВалюте;
			
			КонецЕсли;
			
		КонецЕсли;										
												
	КонецЦикла;	
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		
		Реквизиты.Вставить("ОтразитьДвижениеРасчетов", Ложь);
		МСФОВызовСервераУХ.ОтразитьДвиженияПоТаблицеПроводок(Движения, ТаблицаПроводокШаблон, Реквизиты, Отказ);	
		
	Иначе	
		
		МСФОВызовСервераУХ.ОтразитьДвиженияРасчетов(Движения, ТаблицаПроводокШаблон, Истина, Истина);
		
		ТаблицаПроводокШаблон.Колонки.СуммаВФункциональнойВалюте.Имя = "Значение";
		
		МодульТК = ОбщегоНазначения.ОбщийМодуль("ТрансформационныеКорректировкиУХ");
		МодульТК.СформироватьКорректировку(Реквизиты, Отказ, ТаблицаПроводокШаблон);
		
	КонецЕсли;
	
	ПроведениеСерверУХ.ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения);//ОперацииПериодаФИ, СведенияОФИ
	
КонецПроцедуры

Функция ПолучитьКурс(Валюта, КэшКурсов, ДатаКурсов)

	ЗначениеКурса = КэшКурсов.Получить(Валюта);
	Если ЗначениеКурса = Неопределено Тогда
	
		Курс = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ДатаКурсов);
		
		ЗначениеКурса = ?(Курс.Кратность = 0, 0, Курс.Курс / Курс.Кратность);
		КэшКурсов.Вставить(Валюта, ЗначениеКурса);
		
		Возврат ЗначениеКурса;
		
	Иначе 
		
		Возврат ЗначениеКурса;
			
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ЗаполнитьДокумент(ДокументОбъект, Заполнить = Истина) Экспорт
	
	Перем КэшКурсов;
	
	Если Заполнить Тогда
		
		Контекст = ПолучитьКонтекст(ДокументОбъект);
		
		ТаблицаФИ = ПолучитьТаблицуБалансоваяСтоимостьФИ(Контекст, КэшКурсов);
		Если ТаблицаФИ = Неопределено Тогда
			ДокументОбъект.ФинансовыеИнструменты.Очистить();
		Иначе	
			ДокументОбъект.ФинансовыеИнструменты.Загрузить(ТаблицаФИ);
		КонецЕсли;
				
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДанныеФормыСтруктура") Тогда
		ПараметрыУчетаФИ = ДокументОбъект.ФинансовыеИнструменты.Выгрузить(,"ПараметрыУчетаФИ").ВыгрузитьКолонку("ПараметрыУчетаФИ");
	Иначе 
		ПараметрыУчетаФИ = ДокументОбъект.ФинансовыеИнструменты.ВыгрузитьКолонку("ПараметрыУчетаФИ");
	КонецЕсли;
	ПараметрыДоступностьСписанияПереоценки = ПолучитьДоступностьСписанияПереоценки(ПараметрыУчетаФИ);
		
	СтруктураДействий = Новый Структура;
	Если ТипЗнч(ДокументОбъект) = Тип("ДанныеФормыСтруктура") Тогда
		СтруктураДействий.Вставить("ЗаполнитьДоступноСписаниеПереоценки");
	КонецЕсли;
	СтруктураДействий.Вставить("ЗаполнитьПереоцененнаяСтоимостьВД");	
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
	
	КэшируемыеЗначенияТЧ = Новый Структура;
	КэшируемыеЗначенияТЧ.Вставить("КэшКурсов", 					КэшКурсов);
	КэшируемыеЗначенияТЧ.Вставить("ФункциональнаяВалюта", 		Контекст.ДополнительныеСвойства.ФункциональнаяВалюта);
	КэшируемыеЗначенияТЧ.Вставить("ДатаОкончанияПериода", 		НачалоДня(Контекст.ПериодОтчета.ДатаОкончания));
	КэшируемыеЗначенияТЧ.Вставить("ПроцентСниженияСтоимостиФИ", Константы.ПроцентСниженияСтоимостиФИ.Получить());
	КэшируемыеЗначенияТЧ.Вставить("ПараметрыДоступностьСписанияПереоценки", ПараметрыДоступностьСписанияПереоценки);
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ПереоценкаФИ(ДокументОбъект.ФинансовыеИнструменты, СтруктураДействий, КэшируемыеЗначенияТЧ);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуФИ(СтрокаФИ, КонтекстДокумента) Экспорт
	
	Перем КэшКурсов;	
	
	Контекст = ПолучитьКонтекст(КонтекстДокумента, СтрокаФИ.ФИ);
	ТаблицаФИ = ПолучитьТаблицуБалансоваяСтоимостьФИ(Контекст, КэшКурсов);
	
	Если ТаблицаФИ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СведенияФИ = ТаблицаФИ[0];
	
	ПараметрыДоступностьСписанияПереоценки = ПолучитьДоступностьСписанияПереоценки(ОбщегоНазначенияКлиентСерверУХ.ЗначениеВМассиве(СтрокаФИ.ПараметрыУчетаФИ));
		
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСведенияФИ"); //заполняем сведения по строке, добавленной вручную
	СтруктураДействий.Вставить("ЗаполнитьДоступноСписаниеПереоценки");
	СтруктураДействий.Вставить("ЗаполнитьПереоцененнаяСтоимостьВД");	
	СтруктураДействий.Вставить("ЗаполнитьСуммаПереоценкиВД");
	СтруктураДействий.Вставить("ЗаполнитьСписаниеПереоценкиВД");
	
	КэшируемыеЗначенияТЧ = Новый Структура;
	КэшируемыеЗначенияТЧ.Вставить("КэшКурсов", 					КэшКурсов);
	КэшируемыеЗначенияТЧ.Вставить("ФункциональнаяВалюта", 		Контекст.ДополнительныеСвойства.ФункциональнаяВалюта);
	КэшируемыеЗначенияТЧ.Вставить("ДатаОкончанияПериода", 		НачалоДня(Контекст.ПериодОтчета.ДатаОкончания));
	КэшируемыеЗначенияТЧ.Вставить("ПроцентСниженияСтоимостиФИ", Константы.ПроцентСниженияСтоимостиФИ.Получить());
	КэшируемыеЗначенияТЧ.Вставить("СведенияФИ",					СведенияФИ);
	КэшируемыеЗначенияТЧ.Вставить("ПараметрыДоступностьСписанияПереоценки", ПараметрыДоступностьСписанияПереоценки);
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ПереоценкаФИ(СтрокаФИ, СтруктураДействий, КэшируемыеЗначенияТЧ);
	
КонецПроцедуры

Функция ПолучитьКонтекст(ДокументОбъект, СписокФИ = Неопределено) Экспорт 
	
	Контекст = Новый Структура("Организация,Сценарий,ПериодОтчета,ДополнительныеСвойства,ВидОперации,Ссылка");
	ЗаполнитьЗначенияСвойств(Контекст, ДокументОбъект);
	
	Если Контекст.ДополнительныеСвойства = Неопределено Тогда			
		
		РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(ДокументОбъект.Организация,
				ДокументОбъект.ПериодОтчета.ДатаОкончания, ДокументОбъект.Сценарий);

		Контекст.ДополнительныеСвойства = Новый Структура("ФункциональнаяВалюта", РеквизитыУП.ФункциональнаяВалюта);
		
	ИначеЕсли Не Контекст.ДополнительныеСвойства.Свойство("ФункциональнаяВалюта") Тогда		
		
		РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(ДокументОбъект.Организация,
				ДокументОбъект.ПериодОтчета.ДатаОкончания, ДокументОбъект.Сценарий);
				
		Контекст.ДополнительныеСвойства.Вставить("ФункциональнаяВалюта", РеквизитыУП.ФункциональнаяВалюта);
		
	КонецЕсли;
	
	Если СписокФИ <> Неопределено Тогда
		Контекст.ДополнительныеСвойства.Вставить("СписокФИ", СписокФИ);
	КонецЕсли;	
	
	Возврат Контекст;

КонецФункции

Функция ПолучитьТаблицуБалансоваяСтоимостьФИ(Контекст, КэшКурсов) Экспорт

	Перем СписокФИ;
	
	НомераТаблиц = Новый Структура;
	
	ДатаОкончанияПериода 	= КонецДня(Контекст.ПериодОтчета.ДатаОкончания);
	ДатаНачалаПериода 		= КонецДня(Контекст.ПериодОтчета.ДатаНачала);	
	ИспользоватьСписокФИ 	= Контекст.ДополнительныеСвойства.Свойство("СписокФИ", СписокФИ);	
	
	РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(Контекст.Организация, ДатаОкончанияПериода, Контекст.Сценарий); 
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВидОперации",			Контекст.ВидОперации);
	Запрос.УстановитьПараметр("ПериодОтчета",			Контекст.ПериодОтчета);
	Запрос.УстановитьПараметр("ДатаНачалаПериода",		ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода",	ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("НачалоПериодаГраница",	Новый Граница(НачалоДня(ДатаНачалаПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериодаГраница",	Новый Граница(ДатаОкончанияПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 			Контекст.Организация);
	Запрос.УстановитьПараметр("Сценарий", 				Контекст.Сценарий);
	Запрос.УстановитьПараметр("Ссылка", 				Контекст.Ссылка);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 	РеквизитыУП.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ПланСчетовМСФО", 		РеквизитыУП.ПланСчетовМСФО);
	Запрос.УстановитьПараметр("ИспользоватьЗаполнение", Истина);
	Запрос.УстановитьПараметр("ИспользоватьСписокФИ", 	ИспользоватьСписокФИ);
	Запрос.УстановитьПараметр("СписокФИ", 				СписокФИ);
	
	Если НЕ РеквизитыУП.ФормироватьПроводкиМСФО Тогда
		
		Запрос.УстановитьПараметр("втЗначенияПоказателей", 	ПолучитьБалансовуюСтоимостьФСД(Контекст, НомераТаблиц));
		
		Если Запрос.Параметры.втЗначенияПоказателей.Колонки.Количество() = 0 Тогда
			Возврат Новый ТаблицаЗначений;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_ИсключенияЗаполнения(НомераТаблиц));	
	ТекстЗапроса.Добавить(ВстраиваниеУХ.ТекстЗапроса_втФИ_СпрС(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ДанныеОСВ_Проводки(НомераТаблиц));
		
	//старое	
	ТекстЗапроса.Добавить(ТекстЗапроса_КотировкиФИ(НомераТаблиц));	
	ТекстЗапроса.Добавить(ТекстЗапроса_ПризнаниеФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_НакопленнаяПереоценкаФИ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_КурсыВалют(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ПереоценкаФИ(НомераТаблиц, Контекст.ВидОперации));
	//
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()); 
					
	РезультатПакета = Запрос.ВыполнитьПакет();
	КоличествоЗапросов = РезультатПакета.Количество()-1;	
	
	КэшКурсов = РезультатПакета[КоличествоЗапросов-1].Выгрузить();
	КэшКурсов.Индексы.Добавить("Валюта,Период");
	Возврат РезультатПакета[КоличествоЗапросов].Выгрузить();
		
КонецФункции

Функция ПолучитьБалансовуюСтоимостьФСД(Контекст, НомераТаблиц)

	ГруппаАналитикЦБ = Справочники.ФиксированныеГруппыАналитик.ПереоценкаФИ_БалансоваяСтоимостьЦБ;
	ГруппаАналитикДоговор = Справочники.ФиксированныеГруппыАналитик.ПереоценкаФИ_БалансоваяСтоимостьДоговоры;
	
	ГруппыАналитик = Новый Массив;
	ГруппыАналитик.Добавить(ГруппаАналитикДоговор);
	ГруппыАналитик.Добавить(ГруппаАналитикЦБ);
		
	ВидыОтчетов = Новый СписокЗначений;
	ВидыОтчетов.Добавить(ГруппаАналитикЦБ.ВидОтчетаИсточник);
	ВидыОтчетов.Добавить(ГруппаАналитикДоговор.ВидОтчетаИсточник);
	
	ТекстЗапроса = Справочники.ВидыОтчетов.ТекстЗапросаТаблицаЗначенийЧисловыхПоказателей();
	
	//формируем настройки КД
	НастройкиКД = Новый НастройкиКомпоновкиДанных;
	
	ТиповыеОтчетыУХ.ДобавитьГруппировкуСтруктуры(НастройкиКД);
	ТиповыеОтчетыУХ.ДобавитьПараметр(НастройкиКД, "ПолучитьТолькоСинтетику", Ложь);
	
	//отбор версии
	ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, "ВидОтчета",			ВидыОтчетов);
	ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, "Версия.Организация",	Контекст.Организация);
	ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, "Версия.Сценарий", 	Контекст.Сценарий);
    ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, "Версия.ПериодОтчета",	Контекст.ПериодОтчета);    
	ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, "Версия.Валюта", 		Контекст.ДополнительныеСвойства.ФункциональнаяВалюта);
	
	//Вычисляемые поля
	ВычисляемыеПоля = Новый Структура;	
	НастройкиКД.ДополнительныеСвойства.Вставить("ВычисляемыеПоля", ВычисляемыеПоля);
	
	ДополнительныеПоля = Новый Структура("ВалютаНоминала,ВалютаКотировки", "ФИ.ВалютаНоминала", "ФИ.ВалютаКотировки");
	
	ДоработатьНастройкиПоГруппеАналитик(НастройкиКД, ГруппыАналитик, ДополнительныеПоля);
	
	//Возвращает таблицу
	ТабРезультат = ТиповыеОтчетыУХ.ПолучитьКоллекциюПоНастройкамКомпоновкиДанных(ТекстЗапроса, НастройкиКД);	
		
	Возврат ТабРезультат;

КонецФункции

Функция ДоработатьНастройкиПоГруппеАналитик(НастройкиКД, ФиксированнаяГруппаАналитик, Знач ДополнительныеПоля = Неопределено)

	ПараметрыЗаполнения = Справочники.ФиксированныеГруппыАналитик.ПолучитьПараметрыЗаполнения(ФиксированнаяГруппаАналитик);
	
	ОтборПоказателей = Новый СписокЗначений;
	
	УсловияПоПолям = Новый Структура;
	
	Для каждого СтрокаПараметр Из ПараметрыЗаполнения Цикл
		
		Если СтрокаПараметр.Аналитика Тогда			

			НастройкиКД.ДополнительныеСвойства.ВычисляемыеПоля.Вставить(СтрокаПараметр.ИмяПриемника, СтрокаПараметр.Источник);
			
			ТиповыеОтчетыУХ.ДобавитьВыбранноеПоле(НастройкиКД.Выбор, СтрокаПараметр.ИмяПриемника);
						
			Если СтрокаПараметр.КлючОтбора <> 0 Тогда
				
				Таб = СтрокаПараметр.ГруппаАналитик.ОтборыАналитик.Выгрузить(Новый Структура("КлючОтбора", СтрокаПараметр.КлючОтбора));
				Если Таб.Количество() Тогда
					
					ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД.Отбор, 
														СтрокаПараметр.Источник, 
														Таб.ВыгрузитьКолонку("Значение"), 
														Перечисления.ВидыСравнения.ВернутьВидСравненияКД(Таб[0].ВидСравнения)
													);
				
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДополнительныеПоля <> Неопределено Тогда				
				Для каждого Поле Из ДополнительныеПоля Цикл					
					
					Если СтрНайти(Поле.Значение, СтрокаПараметр.ИмяПриемника) > 0 Тогда
						НастройкиКД.ДополнительныеСвойства.ВычисляемыеПоля.Вставить(Поле.Ключ, СтрЗаменить(Поле.Значение, СтрокаПараметр.ИмяПриемника, СтрокаПараметр.Источник));
						ТиповыеОтчетыУХ.ДобавитьВыбранноеПоле(НастройкиКД.ВЫбор, Поле.Ключ, Поле.Ключ);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			ОтборПоказателей.Добавить(СтрокаПараметр.Источник);
			
			ИмяПараметраПоказателя = "Показатель_" + СокрЛП(СтрокаПараметр.КодВидаОтчета) + СокрЛП(СтрокаПараметр.ИмяПриемника);
			Если Не УсловияПоПолям.Свойство(СтрокаПараметр.ИмяПриемника) Тогда			
				УсловияПоПолям.Вставить(СтрокаПараметр.ИмяПриемника, Новый Массив);			
			КонецЕсли;
			
			УсловияПоПолям[СтрокаПараметр.ИмяПриемника].Добавить(ИмяПараметраПоказателя);
			ТиповыеОтчетыУХ.ДобавитьПараметр(НастройкиКД, ИмяПараметраПоказателя, СтрокаПараметр.Источник);
			
			//Построитель.ВыбранныеПоля.Добавить("Значение", "Значение");			
			ТиповыеОтчетыУХ.ДобавитьВыбранноеПоле(НастройкиКД.ВЫбор, СтрокаПараметр.ИмяПриемника, СтрокаПараметр.ИмяПриемника);
			
		КонецЕсли;		
	
	КонецЦикла;
	
	ТиповыеОтчетыУХ.ДобавитьОтборПоля(НастройкиКД, "ПоказательОтчета", ОтборПоказателей);
	
	Если ДополнительныеПоля <> Неопределено Тогда
	
		Для каждого Поле Из ДополнительныеПоля Цикл		
					
		КонецЦикла;
	
	КонецЕсли;
	
	Для каждого ПолеСУсловиями Из УсловияПоПолям Цикл
		
		Условие = "СУММА(ВЫБОР ";
		Для каждого ЭлементУсловие Из ПолеСУсловиями.Значение Цикл
			Условие = Условие + "КОГДА ПоказательОтчета = &" + ЭлементУсловие + " ТОГДА Значение ";		
		КонецЦикла;
		Условие = Условие + "ИНАЧЕ NULL КОНЕЦ)";
		
		НастройкиКД.ДополнительныеСвойства.ВычисляемыеПоля.Вставить(ПолеСУсловиями.Ключ, Условие);
				
	КонецЦикла;
	
КонецФункции

Функция ПолучитьДоступностьСписанияПереоценки(ПараметрыУчетаФИ) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	т.Ссылка
	|ИЗ
	|	Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО КАК т
	|ГДЕ
	|	т.Ссылка В(&ПараметрыУчетаФИ)
	|	И т.ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрочийСовокупныйДоход)");
	
	Запрос.УстановитьПараметр("ПараметрыУчетаФИ", ПараметрыУчетаФИ);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

#КонецОбласти

#Область ТекстЗапросаЗаполнения

Функция ТекстЗапроса_ИсключенияЗаполнения(НомераТаблиц)
	
	НомераТаблиц.Вставить("втДокументыИсключения",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИсключения", 			НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втДокументыИсключения
	|ИЗ
	|	Документ.ПереоценкаФинансовыхИнструментов КАК т
	|ГДЕ
	|	т.Ссылка <> &Ссылка
	|	И т.Организация = &Организация
	|	И т.ПериодОтчета В ИЕРАРХИИ(&ПериодОтчета)
	|	И т.Сценарий = &Сценарий
	|	И т.ВидОперации = &ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.ФИ КАК ФИ
	|ПОМЕСТИТЬ втИсключения
	|ИЗ
	|	Документ.ПереоценкаФинансовыхИнструментов.ФинансовыеИнструменты КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДокументыИсключения КАК втДокументыИсключения
	|		ПО т.Ссылка = втДокументыИсключения.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ";

КонецФункции

Функция ТекстЗапроса_СчетаФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаФИ", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	МАКСИМУМ(СчетаБД.Ссылка) КАК СчетБД,
	|	СчетаБД.Ссылка.СчетСсылка КАК Счет,
	|	МИНИМУМ(СчетаБД.Номер) КАК НомерСубконто
	|ПОМЕСТИТЬ втСчетаФИ
	|ИЗ
	|	Справочник.СчетаБД.ВидыСубконто КАК СчетаБД
	|ГДЕ
	|	СчетаБД.Ссылка.Владелец = &ПланСчетовМСФО
	|	И СчетаБД.Ссылка.РазделПланаСчетов В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Баланс))
	|	И ВЫБОР
	|			КОГДА СчетаБД.ТипДанных ПОДОБНО ""%Справочник.ДоговорыКонтрагентов%""
	|				ТОГДА ИСТИНА
	|			КОГДА СчетаБД.ТипДанных ПОДОБНО ""%Справочник.ЦенныеБумаги%""
	|				ТОГДА ИСТИНА
	|			КОГДА СчетаБД.ТипДанных ПОДОБНО ""%Справочник.ДоговорыКредитовИДепозитов%""
	|				ТОГДА ИСТИНА
	|			КОГДА СчетаБД.ТипДанных ПОДОБНО ""%Справочник.ДоговорыЛизинга%""
	|				ТОГДА ИСТИНА
	|			КОГДА СчетаБД.ТипДанных ПОДОБНО ""%Справочник.ДоговорыМеждуОрганизациями%""
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаБД.Ссылка.СчетСсылка"

КонецФункции

Функция ТекстЗапроса_ДанныеОСВ_Проводки(НомераТаблиц)

	НомераТаблиц.Вставить("втДанныеОСВ", НомераТаблиц.Количество());
	//Период - дата выбытия ФИ
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	втСчетаФИ.СчетБД КАК Счет,
	|	т.ФИ КАК ФИ,
	|	т.Подразделение КАК Подразделение,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	т.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА СУММА(т.СуммаВВалютеУчетаОстаток) = 0
	|			ТОГДА МАКСИМУМ(т.Период)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК Период,
	|	СУММА(т.СуммаВВалютеУчетаОборот) КАК СуммаВВалютеУчетаОборот,
	|	СУММА(т.СуммаВВалютеОборот) КАК СуммаВВалютеОборот,
	|	СУММА(т.КоличествоОборот) КАК КоличествоОборот,
	|	СУММА(т.СуммаВВалютеУчетаОстаток) КАК СуммаВВалютеУчетаОстаток,
	|	СУММА(т.СуммаВВалютеОстаток) КАК СуммаВВалютеОстаток,
	|	СУММА(т.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ втДанныеОСВ
	|ИЗ
	|	ШаблонОСВ КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаФИ КАК втСчетаФИ
	|		ПО т.Счет = втСчетаФИ.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	втСчетаФИ.СчетБД,
	|	т.ФИ,
	|	т.Подразделение,
	|	т.НаправлениеДеятельности,
	|	т.Валюта";
	
	ТекстЗапроса = Новый Массив;
	Для НомерСубконто = 1 По Метаданные.РегистрыБухгалтерии.МСФО.ПланСчетов.МаксКоличествоСубконто Цикл
		ТекстЗапроса.Добавить(ТекстЗапроса_ШаблонОСВ(НомерСубконто));
	КонецЦикла;
	
	Возврат СтрЗаменить(ШаблонЗапроса, "ШаблонОСВ", СтрШаблон("(%1)", СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ")));
	
КонецФункции

Функция ТекстЗапроса_ШаблонОСВ(НомерСубконто = 1)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	т.Период КАК Период,
	|	ИСТИНА КАК Оборот,
	|	т.Счет КАК Счет,
	|	т.Субконто1 КАК ФИ,
	|	т.Валюта КАК Валюта,
	|	т.СуммаВВалютеУчетаОборот КАК СуммаВВалютеУчетаОборот,
	|	т.СуммаВВалютеОборот КАК СуммаВВалютеОборот,
	|	т.КоличествоОборот КАК КоличествоОборот,
	|	т.СуммаВВалютеУчетаОборот КАК СуммаВВалютеУчетаОстаток,
	|	т.СуммаВВалютеОборот КАК СуммаВВалютеОстаток,
	|	т.КоличествоОборот КАК КоличествоОстаток,
	|	т.Подразделение КАК Подразделение,
	|	т.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(
	|			&НачалоПериодаГраница,
	|			&КонецПериодаГраница,
	|			День,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаФИ КАК т
	|				ГДЕ
	|					т.НомерСубконто = 1),
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ПереоценкаФИ)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						т.ФИ
	|					ИЗ
	|						втФИ КАК т),
	|			,
	|			) КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаОкончанияПериода,
	|	ЛОЖЬ,
	|	т.Счет,
	|	т.Субконто1,
	|	т.Валюта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	т.СуммаВВалютеУчетаОстаток,
	|	т.СуммаВВалютеОстаток,
	|	т.КоличествоОстаток,
	|	т.Подразделение,
	|	т.НаправлениеДеятельности
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&НачалоПериодаГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаФИ КАК т
	|				ГДЕ
	|					т.НомерСубконто = 1),
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						т.ФИ
	|					ИЗ
	|						втФИ КАК т)) КАК т";

	Возврат ?(НомерСубконто =1, ТекстЗапроса, СтрЗаменить(ТекстЗапроса, "1", Формат(НомерСубконто, "ЧГ=")));
	
КонецФункции

Функция ТекстЗапроса_КотировкиФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втКотировкиФИ", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	СведенияОФИ.Период,
	|	СведенияОФИ.ВидКотировки КАК Котировка,
	|	СведенияОФИ.Значение КАК ЗначениеКотировки	
	|ПОМЕСТИТЬ втКотировкиФИ
	|ИЗ
	|	РегистрСведений.ЗначенияКотировокФИ.СрезПоследних(
	|			&КонецПериодаГраница,
	|			ВидКотировки В
	|				(ВЫБРАТЬ
	|					т.Котировка
	|				ИЗ
	|					втФИ КАК т)) КАК СведенияОФИ";

КонецФункции

Функция ТекстЗапроса_ПризнаниеФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втПризнаниеФИ", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	т.ФИ КАК ФИ,
	|	МАКСИМУМ(т.ПараметрыУчетаФИ) КАК ПараметрыУчетаФИ,
	|	МАКСИМУМ(т.ДатаПризнания) КАК ДатаПризнания,
	|	МАКСИМУМ(т.СуммаОсновнойЗадолженности) КАК БалансоваяСтоимостьВД_ПриВыбытии,
	|	МАКСИМУМ(т.Количество) КАК Количество_ПриВыбытии
	|ПОМЕСТИТЬ втПризнаниеФИ
	|ИЗ
	|	РегистрСведений.СведенияОФИ.СрезПоследних(
	|			&ДатаОкончанияПериода,
	|			Регистратор <> &Ссылка
	|				И Сценарий = &Сценарий
	|				И Организация = &Организация
	|				И ФИ В
	|					(ВЫБРАТЬ
	|						т.ФИ
	|					ИЗ
	|						втФИ КАК т)) КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ФИ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	т.ФИ,
	|	ПараметрыУчетаФИ,
	|	ДатаПризнания";
	
КонецФункции

Функция ТекстЗапроса_НакопленнаяПереоценкаФИ(НомераТаблиц)

	НомераТаблиц.Вставить("втНакопленнаяПереоценка", НомераТаблиц.Количество());
		
	Возврат
	"ВЫБРАТЬ
	|	т.ФИ КАК ФИ,
	|	т.ПараметрыУчетаФИ КАК ПараметрыУчетаФИ,
	|	СУММА(т.Переоценка) КАК НакопленнаяПереоценкаФВ,
	|	т.ДатаПризнанияФИ КАК ДатаПризнания
	|ПОМЕСТИТЬ втНакопленнаяПереоценка
	|ИЗ
	|	РегистрСведений.ОперацииПериодаФИ КАК т
	|ГДЕ
	|	т.Период МЕЖДУ т.ДатаПризнанияФИ И &ДатаОкончанияПериода
	|	И т.Регистратор <> &Ссылка
	|	И т.Сценарий = &Сценарий
	|	И т.Организация = &Организация
	|	И (т.ФИ, т.ПараметрыУчетаФИ, т.ДатаПризнанияФИ) В
	|			(ВЫБРАТЬ
	|				т.ФИ,
	|				т.ПараметрыУчетаФИ,
	|				т.ДатаПризнания
	|			ИЗ
	|				втПризнаниеФИ КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.ФИ,
	|	т.ПараметрыУчетаФИ,
	|	т.ДатаПризнанияФИ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФИ,
	|	ПараметрыУчетаФИ";
	
КонецФункции

Функция ТекстЗапроса_КурсыВалют(НомераТаблиц)
	
	НомераТаблиц.Вставить("втИсточникиКурсов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втДатыКурсов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаКурсов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	&ФункциональнаяВалюта КАК Валюта,
	|	НАЧАЛОПЕРИОДА(&ДатаОкончанияПериода, ДЕНЬ) КАК Дата
	|ПОМЕСТИТЬ втИсточникиКурсов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	т.ВалютаКотировки,
	|	НАЧАЛОПЕРИОДА(&ДатаОкончанияПериода, ДЕНЬ)
	|ИЗ
	|	втФИ КАК т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	т.Валюта,
	|	НАЧАЛОПЕРИОДА(&ДатаОкончанияПериода, ДЕНЬ)
	|ИЗ
	|	втФИ КАК т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	т.Валюта,
	|	НАЧАЛОПЕРИОДА(т.Период, ДЕНЬ)
	|ИЗ
	|	втДанныеОСВ КАК т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&ФункциональнаяВалюта,
	|	НАЧАЛОПЕРИОДА(т.Период, ДЕНЬ)
	|ИЗ
	|	втДанныеОСВ КАК т
	|ГДЕ
	|	т.Валюта <> &ФункциональнаяВалюта
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&ФункциональнаяВалюта,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(т.Период, &ДатаОкончанияПериода), ДЕНЬ)
	|ИЗ
	|	втКотировкиФИ КАК т
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	т.Котировка.ФункциональнаяВалюта,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(т.Период, &ДатаОкончанияПериода), ДЕНЬ)
	|ИЗ
	|	втКотировкиФИ КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИсточникиКурсов.Валюта КАК Валюта,
	|	втИсточникиКурсов.Дата КАК Период,
	|	ЕСТЬNULL(МАКСИМУМ(КурсыВалют.Период), НАЧАЛОПЕРИОДА(&ДатаНачалаПериода, ДЕНЬ)) КАК ДатаКурса,
	|	ЕСТЬNULL(МАКСИМУМ(КурсыВалют.Период), НАЧАЛОПЕРИОДА(&ДатаНачалаПериода, ДЕНЬ)) = НАЧАЛОПЕРИОДА(&ДатаНачалаПериода, ДЕНЬ) КАК КурсНаНачало
	|ПОМЕСТИТЬ втДатыКурсов
	|ИЗ
	|	втИсточникиКурсов КАК втИсточникиКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втИсточникиКурсов.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.Период МЕЖДУ &ДатаНачалаПериода И втИсточникиКурсов.Дата)
	|
	|СГРУППИРОВАТЬ ПО
	|	втИсточникиКурсов.Валюта,
	|	втИсточникиКурсов.Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КурсНаНачало
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДатыКурсов.Валюта КАК Валюта,
	|	втДатыКурсов.Период КАК Период,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1) КАК Кратность
	|ИЗ
	|	втДатыКурсов КАК втДатыКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&ДатаНачалаПериода,
	|				Валюта В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						т.Валюта
	|					ИЗ
	|						втДатыКурсов КАК т
	|					ГДЕ
	|						т.КурсНаНачало)) КАК КурсыВалютСрезПоследних
	|		ПО втДатыКурсов.Валюта = КурсыВалютСрезПоследних.Валюта
	|ГДЕ
	|	втДатыКурсов.КурсНаНачало
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втДатыКурсов.Валюта,
	|	втДатыКурсов.Период,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ИЗ
	|	втДатыКурсов КАК втДатыКурсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втДатыКурсов.ДатаКурса = КурсыВалют.Период
	|			И втДатыКурсов.Валюта = КурсыВалют.Валюта
	|			И (НЕ втДатыКурсов.КурсНаНачало)";

КонецФункции

Функция ТекстЗапроса_ПереоценкаФИ(НомераТаблиц, ВидОперации)

	НомераТаблиц.Вставить("ТаблицаФИ", НомераТаблиц.Количество());
	
	УсловиеВидОперации = "ИСТИНА";
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.Признание") Тогда
		УсловиеВидОперации = " ЕСТЬNULL(втПризнаниеФИ.ДатаПризнания, ЕСТЬNULL(втКотировкиФИ.Период, &ДатаОкончанияПериода)) МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачалаПериода,ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончанияПериода,ДЕНЬ)";
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.ИзменениеНачислений") Тогда
		УсловиеВидОперации = " ЕСТЬNULL(втПризнаниеФИ.ДатаПризнания, ЕСТЬNULL(втКотировкиФИ.Период, &ДатаОкончанияПериода)) < НАЧАЛОПЕРИОДА(&ДатаНачалаПериода,ДЕНЬ)";
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоФинансовымИнструментамМСФО.Выбытие") Тогда
		УсловиеВидОперации = " ЕСТЬNULL(втДанныеОСВ.Период, ДАТАВРЕМЯ(1,1,1)) МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачалаПериода,ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончанияПериода,ДЕНЬ)";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	втФИ.Контрагент КАК Контрагент,
	|	втФИ.ФИ КАК ФИ,
	|	ЕСТЬNULL(втПризнаниеФИ.ПараметрыУчетаФИ, втФИ.ПараметрыУчетаФИ) КАК ПараметрыУчетаФИ,
	|	ЕСТЬNULL(втПризнаниеФИ.ПараметрыУчетаФИ, втФИ.ПараметрыУчетаФИ) КАК ПараметрыУчетаФИДоРекласса,
	|	втФИ.Валюта КАК ВалютаНоминала,
	|	втДанныеОСВ.Подразделение КАК Подразделение,
	|	втДанныеОСВ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втДанныеОСВ.Счет КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА втФИ.Валюта В (ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка), &ФункциональнаяВалюта)
	|			ТОГДА ЕСТЬNULL(втДанныеОСВ.СуммаВВалютеУчетаОстаток, 0)
	|		КОГДА втДанныеОСВ.Валюта ЕСТЬ NULL
	|				И ЕСТЬNULL(КурсВД.Курс * КурсФВ.Кратность, 0) <> 0
	|			ТОГДА ЕСТЬNULL(втДанныеОСВ.СуммаВВалютеУчетаОстаток, 0) * КурсФВ.Курс * КурсВД.Кратность / (КурсВД.Курс * КурсФВ.Кратность)
	|		ИНАЧЕ ЕСТЬNULL(втДанныеОСВ.СуммаВВалютеОстаток, 0)
	|	КОНЕЦ КАК БалансоваяСтоимостьВД,
	|	ЕСТЬNULL(втДанныеОСВ.СуммаВВалютеУчетаОстаток, 0) КАК БалансоваяСтоимостьФВ,
	|	ЕСТЬNULL(втКотировкиФИ.Период, &ДатаОкончанияПериода) КАК ДатаПереоценки,
	|	ЕстьNULL(ВЫРАЗИТЬ(втФИ.Котировка КАК Справочник.ВидыКотировокФинансовыхИнструментов), ЗНАЧЕНИЕ(Справочник.ВидыКотировокФинансовыхИнструментов.ПустаяСсылка)) КАК Котировка,
	|	втФИ.ВалютаКотировки КАК ВалютаКотировки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втДанныеОСВ.КоличествоОстаток, 1) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(втДанныеОСВ.КоличествоОстаток, 1)
	|	КОНЕЦ КАК Количество,
	|	втФИ.Номинал КАК Номинал,
	|	ЕстьNULL(втКотировкиФИ.ЗначениеКотировки, 1) КАК ЗначениеКотировкиФИ,
	|	ЕСТЬNULL(втПризнаниеФИ.ДатаПризнания, ЕСТЬNULL(втКотировкиФИ.Период, &ДатаОкончанияПериода)) КАК ДатаПризнания,
	|	втПризнаниеФИ.ДатаПризнания ЕСТЬ NULL КАК ПризнаниеФИ,
	|	втНакопленнаяПереоценка.НакопленнаяПереоценкаФВ КАК НакопленнаяПереоценкаФВ,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(втПризнаниеФИ.ПараметрыУчетаФИ, втФИ.ПараметрыУчетаФИ) КАК Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО).ВидОбъектаФинансовогоХарактера.СпособУчетаПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПереоценкиФИ.ЧерезПрочийСовокупныйДоход) КАК ДоступноСписаниеПереоценки,
	|	втДанныеОСВ.КоличествоОборот КАК ВыбытиеКоличество,
	|	втДанныеОСВ.СуммаВВалютеОборот КАК ВыбытиеСтоимостиВД,
	|	втДанныеОСВ.СуммаВВалютеУчетаОборот КАК ВыбытиеСтоимостиФВ,
	|	втДанныеОСВ.Период КАК ДатаВыбытия
	|ИЗ
	|	втФИ КАК втФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеОСВ КАК втДанныеОСВ
	|		ПО втФИ.ФИ = втДанныеОСВ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКотировкиФИ КАК втКотировкиФИ
	|		ПО втФИ.Котировка = втКотировкиФИ.Котировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПризнаниеФИ КАК втПризнаниеФИ
	|		ПО втФИ.ФИ = втПризнаниеФИ.ФИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНакопленнаяПереоценка КАК втНакопленнаяПереоценка
	|		ПО (втПризнаниеФИ.ФИ = втНакопленнаяПереоценка.ФИ)
	|			И (втПризнаниеФИ.ПараметрыУчетаФИ = втНакопленнаяПереоценка.ПараметрыУчетаФИ)
	|			И (втПризнаниеФИ.ДатаПризнания = втПризнаниеФИ.ДатаПризнания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&КонецПериодаГраница, Валюта = &ФункциональнаяВалюта) КАК КурсФВ
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&КонецПериодаГраница,
	|				Валюта В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						т.Валюта
	|					ИЗ
	|						втФИ КАК т)) КАК КурсВД
	|		ПО (КурсВД.Валюта = втФИ.Валюта)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ИспользоватьСписокФИ = ИСТИНА
	|				ТОГДА втФИ.ФИ В (&СписокФИ)
	|			КОГДА &УсловиеПоВидуОперации
	|				ТОГДА ЕСТЬNULL(втПризнаниеФИ.ПараметрыУчетаФИ, втФИ.ПараметрыУчетаФИ) = ЗНАЧЕНИЕ(Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО.ПустаяСсылка)
	|						ИЛИ ВЫРАЗИТЬ(ЕСТЬNULL(втПризнаниеФИ.ПараметрыУчетаФИ, втФИ.ПараметрыУчетаФИ) КАК Справочник.ПараметрыУчетаФинансовыхИнструментовМСФО).ВидОбъектаФинансовогоХарактера.СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаФинансовыхИнструментов.ПоСправедливойСтоимости)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Возврат СтрЗаменить(ТекстЗапроса, "&УсловиеПоВидуОперации", УсловиеВидОперации);
	
КонецФункции

#КонецОбласти

#КонецЕсли