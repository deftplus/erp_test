
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ВерсияРегламента;
Перем РассчитыватьЗависимые;
Перем ОбработкаЗаписи;

Перем ТаблицаКорректировок Экспорт;
Перем РабочийОбъектАдрес Экспорт;
Перем ДанныеОбъекта Экспорт;
Перем КэшВалютыОтчетности;

Перем МаксАналитикОтчета;
Перем ОбъектРасчета;

Перем ТаблицаДляРаспределения;
Перем ТаблицаТекущихЗначений;

Перем РеквизитыПоказателяРаспределения;

Перем МетодРаспределения;
Перем УточнениеМетодаРаспределения;
Перем ПоказательДляРаспределения;

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
				
	УстановкаЛимитовУХ.СнятьАктуальностьЛимитовПоДокументу(Ссылка);
	
КонецПроцедуры

Процедура ВыполнитьЗаписьКорректировки(Отказ)
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст="ВЫБРАТЬ
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Ссылка КАК Ссылка,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.НомерСтроки КАК НомерСтроки,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.ИдентификаторСинтетика КАК ИдентификаторСинтетика,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.ВидОтчета КАК ВидОтчета,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Организация КАК Организация,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.ПериодОтчета КАК ПериодОтчета,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика1 КАК Аналитика1,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика2 КАК Аналитика2,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика3 КАК Аналитика3,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика4 КАК Аналитика4,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика5 КАК Аналитика5,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Аналитика6 КАК Аналитика6,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Проект КАК Проект,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Показатель КАК Показатель,
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Значение КАК Значение
	|ПОМЕСТИТЬ КорректировкаСинтетика
	|ИЗ
	|	Документ.КорректировкаЗначенийПоказателей.КорректировкаСинтетика КАК КорректировкаЗначенийПоказателейКорректировкаСинтетика
	|ГДЕ
	|	КорректировкаЗначенийПоказателейКорректировкаСинтетика.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Ссылка КАК Ссылка,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.НомерСтроки КАК НомерСтроки,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.ИдентификаторСинтетика КАК ИдентификаторСинтетика,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.АналитикаВалюта КАК АналитикаВалюта,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика1 КАК Аналитика1,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика2 КАК Аналитика2,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика3 КАК Аналитика3,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика4 КАК Аналитика4,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика5 КАК Аналитика5,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Аналитика6 КАК Аналитика6,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Значение КАК Значение,
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.ЗначениеВалюта КАК ЗначениеВалюта
	|ПОМЕСТИТЬ КорректировкаАналитика
	|ИЗ
	|	Документ.КорректировкаЗначенийПоказателей.КорректировкаАналитика КАК КорректировкаЗначенийПоказателейКорректировкаАналитика
	|ГДЕ
	|	КорректировкаЗначенийПоказателейКорректировкаАналитика.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаСинтетика.ВидОтчета КАК ВидОтчета,
	|	КорректировкаСинтетика.Организация КАК Организация,
	|	КорректировкаСинтетика.ПериодОтчета КАК ПериодОтчета,
	|	КорректировкаСинтетика.Аналитика1 КАК Аналитика1,
	|	КорректировкаСинтетика.Аналитика2 КАК Аналитика2,
	|	КорректировкаСинтетика.Аналитика3 КАК Аналитика3,
	|	КорректировкаСинтетика.Аналитика4 КАК Аналитика4,
	|	КорректировкаСинтетика.Аналитика5 КАК Аналитика5,
	|	КорректировкаСинтетика.Аналитика6 КАК Аналитика6,
	|	КорректировкаСинтетика.Проект КАК Проект,
	|	КорректировкаСинтетика.Показатель КАК ПоказательОтчета,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК АналитикаВалюта,
	|	КорректировкаСинтетика.Значение КАК Значение,
	|	ИСТИНА КАК СинтетическоеЗначение,
	|	0 КАК ЗначениеВалюта
	|ПОМЕСТИТЬ КорректировкаИтог
	|ИЗ
	|	КорректировкаСинтетика КАК КорректировкаСинтетика
	|ГДЕ НЕ КорректировкаСинтетика.Показатель.ВидИтога=ЗНАЧЕНИЕ(Перечисление.ВидыИтоговПоказателя.НеРассчитывается)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаСинтетика.ВидОтчета,
	|	КорректировкаСинтетика.Организация,
	|	КорректировкаСинтетика.ПериодОтчета,
	|	КорректировкаАналитика.Аналитика1,
	|	КорректировкаАналитика.Аналитика2,
	|	КорректировкаАналитика.Аналитика3,
	|	КорректировкаАналитика.Аналитика4,
	|	КорректировкаАналитика.Аналитика5,
	|	КорректировкаАналитика.Аналитика6,
	|	КорректировкаСинтетика.Проект,
	|	КорректировкаСинтетика.Показатель,
	|	КорректировкаАналитика.АналитикаВалюта,
	|	КорректировкаАналитика.Значение,
	|	ЛОЖЬ,
	|	КорректировкаАналитика.ЗначениеВалюта
	|ИЗ
	|	КорректировкаАналитика КАК КорректировкаАналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КорректировкаСинтетика КАК КорректировкаСинтетика
	|		ПО КорректировкаАналитика.ИдентификаторСинтетика = КорректировкаСинтетика.ИдентификаторСинтетика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаСинтетика.Организация КАК Организация,
	|	КорректировкаСинтетика.ПериодОтчета КАК ПериодОтчета
	|ПОМЕСТИТЬ ОрганизацииПериоды
	|ИЗ
	|	КорректировкаСинтетика КАК КорректировкаСинтетика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаСинтетика.ВидОтчета КАК ВидОтчета
	|ИЗ
	|	КорректировкаСинтетика КАК КорректировкаСинтетика";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	МассивВидовОтчетов=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидОтчета");
		
	Для Каждого ВидОтчета ИЗ МассивВидовОтчетов Цикл
		
		Запрос.Текст="ВЫБРАТЬ
		|	КорректировкаИтог.Организация КАК Организация,
		|	КорректировкаИтог.ПериодОтчета КАК ПериодОтчета,
		|	КорректировкаИтог.Аналитика1 КАК Аналитика1,
		|	КорректировкаИтог.Аналитика2 КАК Аналитика2,
		|	КорректировкаИтог.Аналитика3 КАК Аналитика3,
		|	КорректировкаИтог.Аналитика4 КАК Аналитика4,
		|	КорректировкаИтог.Аналитика5 КАК Аналитика5,
		|	КорректировкаИтог.Аналитика6 КАК Аналитика6,
		|	КорректировкаИтог.Проект КАК Проект,
		|	КорректировкаИтог.ПоказательОтчета КАК ПоказательОтчета,
		|	КорректировкаИтог.АналитикаВалюта КАК АналитикаВалюта,
		|	КорректировкаИтог.Значение КАК Значение,
		|	КорректировкаИтог.СинтетическоеЗначение КАК СинтетическоеЗначение,
		|	КорректировкаИтог.ЗначениеВалюта КАК ЗначениеВалюта
		|ИЗ
		|	КорректировкаИтог КАК КорректировкаИтог
		|ГДЕ
		|	КорректировкаИтог.ВидОтчета = &ВидОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОрганизацииПериоды.Организация КАК Организация,
		|	ОрганизацииПериоды.ПериодОтчета КАК ПериодОтчета,
		|	ВалютыОтчетностиСрезПоследних.Валюта КАК Валюта,
		|	ВалютыОтчетностиСрезПоследних.ОсновнаяВалюта КАК ОсновнаяВалюта
		|ИЗ
		|	ОрганизацииПериоды КАК ОрганизацииПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВалютыОтчетности.СрезПоследних(
		|				&ТекущийПериод,
		|				(ШаблонДокументаБД = &ВидОтчета
		|					ИЛИ ШаблонДокументаБД = НЕОПРЕДЕЛЕНО)
		|					И Регламент = &ВерсияРегламента
		|					И Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютыОтчетностиСрезПоследних
		|		ПО ОрганизацииПериоды.Организация = ВалютыОтчетностиСрезПоследних.Организация";
		
		Запрос.УстановитьПараметр("ВидОтчета",			ВидОтчета);
		Запрос.УстановитьПараметр("ТекущийПериод",		ТекущаяДата());
		Запрос.УстановитьПараметр("ВерсияРегламента",	ВерсияРегламента);
		
		Результат=Запрос.ВыполнитьПакет();
		
		ЗаписатьТаблицуКорректировки(ВидОтчета,Результат,Отказ);
		
	КонецЦикла;
			
КонецПРоцедуры // ВыполнитьЗаписьКорректировки()

Процедура ЗаписатьТаблицуКорректировки(ВидОтчета,Результат,Отказ)
	
	ОбработкаЗаписи.ВидОтчета=ВидОтчета;
	ОбработкаЗаписи.ТаблицаИзмененныхПоказателей.Очистить();
	ОбработкаЗаписи.ВалютыОтчетности.Очистить();	
			
	ДанныеКорректировки=Результат[0].Выбрать();
	
	Пока ДанныеКорректировки.Следующий() Цикл
		
		НоваяСтрока=ОбработкаЗаписи.ТаблицаИзмененныхПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеКорректировки);
		НоваяСтрока.Сценарий=Сценарий;
		
	КонецЦикла;
	
	ДанныеВалюты=Результат[1].Выбрать();
	
	Пока ДанныеВалюты.Следующий() Цикл
		
		НОваяСтрока=ОбработкаЗаписи.ВалютыОтчетности.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеВалюты);
		НоваяСтрока.Сценарий=Сценарий;
		
	КонецЦикла;
	
	Отказ=НЕ ОбработкаЗаписи.ЗаписатьЗначенияТаблицыПоказателей();
	
КонецПроцедуры // ЗаписатьТаблицуКорректировки()

Процедура ЗаполнитьРеквизитыПоШаблону() Экспорт
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ШаблоныКорректировокЗначенийПоказателей.СпособВводаКорректировки КАК СпособВводаКорректировки,
	             |	ШаблоныКорректировокЗначенийПоказателей.Сбалансированная КАК Сбалансированная,
	             |	ШаблоныКорректировокЗначенийПоказателей.ОтборОрганизацийДляРаспределения КАК ОтборОрганизацийДляРаспределения
	             |ИЗ
	             |	Справочник.ШаблоныКорректировокЗначенийПоказателей КАК ШаблоныКорректировокЗначенийПоказателей
	             |ГДЕ
	             |	ШаблоныКорректировокЗначенийПоказателей.Ссылка = &ШаблонКорректировки";
	
	Запрос.УстановитьПараметр("ШаблонКорректировки",ШаблонКорректировки);
	
	Результат=Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Результат);
	
КонецПроцедуры // ЗаполнитьРеквизитыПоШаблону()

Процедура ПолучитьТаблицуКорректировокПоШаблону() Экспорт
	
	Сценарий				= УправлениеПериодом.Сценарий;
	ВерсияРегламента		= УправлениеПериодом.ВерсияОрганизационнойСтруктуры;
	КэшВалютыОтчетности		= РегистрыСведений.ВалютыОтчетности.ПолучитьТаблицуВалютДляВерсииОрганизационнойСтруктуры(ВерсияРегламента);
	
	РеквизитыКорректировки	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ШаблонКорректировки,"Сбалансированная,СпособВводаКорректировки");
	Сбалансированная		= РеквизитыКорректировки.Сбалансированная;
	СпособВводаКорректировки= РеквизитыКорректировки.СпособВводаКорректировки;
	
	ДанныеОбъекта=Новый Структура;
	ДанныеОбъекта.Вставить("ТаблицыРаскрытия",Новый Соответствие);
	
	КорректировкаСинтетика.Очистить();
	КорректировкаАналитика.Очистить();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	КлючевыеРеквизиты.Организация КАК Организация,
	|	КлючевыеРеквизиты.ПериодОтчета КАК ПериодОтчета,
	|	КлючевыеРеквизиты.Аналитика1 КАК Аналитика1,
	|	КлючевыеРеквизиты.Аналитика2 КАК Аналитика2,
	|	КлючевыеРеквизиты.Аналитика3 КАК Аналитика3,
	|	КлючевыеРеквизиты.Аналитика4 КАК Аналитика4,
	|	КлючевыеРеквизиты.Аналитика5 КАК Аналитика5,
	|	КлючевыеРеквизиты.Аналитика6 КАК Аналитика6,
	|	КлючевыеРеквизиты.Проект КАК Проект
	|ПОМЕСТИТЬ КлючевыеРеквизиты
	|ИЗ
	|	&КлючевыеРеквизиты КАК КлючевыеРеквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроцедурыРасчетов.ПотребительРасчета КАК ПотребительРасчета,
	|	ПроцедурыРасчетов.Процедура КАК Процедура
	|ПОМЕСТИТЬ ПроцедураРасчетов
	|ИЗ
	|	РегистрСведений.ПроцедурыРасчетов КАК ПроцедурыРасчетов
	|ГДЕ
	|	ПроцедурыРасчетов.НазначениеРасчетов = &НазначениеРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШаблонКорректировки.Показатель КАК Показатель,
	|	ШаблонКорректировки.Показатель.Владелец КАК ВидОтчета,
	|	ВЫБОР
	|		КОГДА ПроцедураРасчетов.Процедура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетПоФормуле
	|ПОМЕСТИТЬ ПоказателиФормулы
	|ИЗ
	|	Справочник.ШаблоныКорректировокЗначенийПоказателей.ШаблонКорректировки КАК ШаблонКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроцедураРасчетов КАК ПроцедураРасчетов
	|		ПО ШаблонКорректировки.Показатель = ПроцедураРасчетов.ПотребительРасчета
	|ГДЕ
	|	ШаблонКорректировки.Ссылка = &ШаблонКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючевыеРеквизиты.Организация КАК Организация,
	|	КлючевыеРеквизиты.ПериодОтчета КАК ПериодОтчета,
	|	КлючевыеРеквизиты.Аналитика1 КАК Аналитика1,
	|	КлючевыеРеквизиты.Аналитика2 КАК Аналитика2,
	|	КлючевыеРеквизиты.Аналитика3 КАК Аналитика3,
	|	КлючевыеРеквизиты.Аналитика4 КАК Аналитика4,
	|	КлючевыеРеквизиты.Аналитика5 КАК Аналитика5,
	|	КлючевыеРеквизиты.Аналитика6 КАК Аналитика6,
	|	КлючевыеРеквизиты.Проект КАК Проект,
	|	ПоказателиФормулы.Показатель КАК Показатель,
	|	ПоказателиФормулы.ВидОтчета КАК ВидОтчета,
	|	ПоказателиФормулы.РасчетПоФормуле КАК РасчетПоФормуле
	|ИЗ
	|	КлючевыеРеквизиты КАК КлючевыеРеквизиты,
	|	ПоказателиФормулы КАК ПоказателиФормулы";
	
	Запрос.УстановитьПараметр("КлючевыеРеквизиты",	КлючевыеРеквизиты.Выгрузить());
	Запрос.УстановитьПараметр("НазначениеРасчетов",	ПравилоОбработки);
	Запрос.УстановитьПараметр("ШаблонКорректировки",ШаблонКорректировки);
	
	ТаблицаКорректировок=Запрос.Выполнить().Выгрузить();
	ТаблицаКорректировок.Колонки.Добавить("ИдентификаторСинтетика",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(36));
	ТаблицаКорректировок.Колонки.Добавить("Значение",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,5));
	
	Для Каждого Строка ИЗ ТаблицаКорректировок Цикл
		
		Строка.ИдентификаторСинтетика=СтрЗаменить(Новый УникальныйИдентификатор(),"-","");
				
	КонецЦикла;
	
	Если СпособВводаКорректировки=Перечисления.СпособыВводаКорректировок.АвтоматическоеЗаполнение Тогда
		
		РассчитатьЗначенияКорректировок();
		
	ИначеЕсли СпособВводаКорректировки=Перечисления.СпособыВводаКорректировок.ОбратноеРаспределение Тогда
		
		РаспределитьЗначенияПоказателя();
		
	КонецЕсли;
	
КонецПроцедуры // ПолучитьТаблицуКорректировокПоШаблону() 

Процедура ПолучитьРеквизитыПоказателяДляРаспределения()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПоказателиОтчетов.Владелец КАК ВидОтчета,
	|	ВЫБОР
	|		КОГДА ПоказателиОтчетов.ГруппаРаскрытия = ЗНАЧЕНИЕ(Справочник.ГруппыРаскрытия.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РаспределятьПоАналитикам,
	|	ПоказателиОтчетов.ПересчитыватьВалютнуюСумму КАК ПересчитыватьВалютнуюСумму,
	|	ПоказателиОтчетов.ВидКурса КАК ВидКурса
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|ГДЕ
	|	ПоказателиОтчетов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ПоказательДляРаспределения);
	Результат=Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	РеквизитыПоказателяРаспределения=Новый Структура("ВидОтчета,РаспределятьПоАналитикам,ПересчитыватьВалютнуюСумму,ВидКурса");
	ЗаполнитьЗначенияСвойств(РеквизитыПоказателяРаспределения,Результат);
		
КонецПроцедуры // ПолучитьРеквизитыПоказателяДляРаспределения() 

Процедура РаспределитьЗначенияПоказателя() Экспорт
	
	ПодготовитьОбъектДляРасчета();
	ЗначенияДляРаспределения.Очистить();
		
	ЗаполнитьДанныеДляРаспределения();
	
	ЗаполнитьБазуРаспределения();
	ПолучитьПолнуюТаблицуДляРаспределения();
	ПолучитьПолнуюТаблицуТекущихЗначений();
	
	ДанныеОбъекта=Новый Структура;
	ДанныеОбъекта.Вставить("ТаблицыРаскрытия",Новый Соответствие);
				
	РаспределитьДанныеГруппирующейОрганизации();
		
КонецПроцедуры // РаспределитьЗначенияПоказателя()

Процедура ПолучитьБазуРаспределения(Строка,ПоказательОтбор,СценарийОтбор)
	
	ОбъектРасчета.Вставить("Сценарий",СценарийОтбор);
	
	ОбъектРасчета.Вставить("Организация",Строка.Организация);
	ОбъектРасчета.Вставить("ПериодОтчета",Строка.ПериодОтчета);
	ОбъектРасчета.Вставить("ПериодОкончания",Строка.ПериодОтчета);
	
	МассивВалюта=КэшВалютыОтчетности.НайтиСтроки(Новый Структура("Организация",Строка.Организация));
	ОбъектРасчета.Вставить("ОсновнаяВалюта",?(МассивВалюта.Количество()>0,МассивВалюта[0].ОсновнаяВалюта,Справочники.Валюты.ПустаяСсылка()));
	
	мПоказатели=УправлениеОтчетамиУХ.ЗаполнитьТаблицуПоказателей(ОбъектРасчета,,,ПоказательОтбор);
	Строка.БазаРаспределения=мПоказатели[0].Значение;

КонецПроцедуры // ПолучитьБазуРаспределения() 

Процедура ЗаполнитьБазуРаспределения() Экспорт
	
	Если ОбъектРасчета=Неопределено Тогда
		
		ПодготовитьОбъектДляРасчета();
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ КлючевыеРеквизиты Цикл
		
		Если МетодРаспределения=Перечисления.МетодыОбратногоРаспределения.Равномерно Тогда
			
			Строка.БазаРаспределения=1;
			
		ИначеЕсли МетодРаспределения=Перечисления.МетодыОбратногоРаспределения.ПоПоказателю Тогда
			
			ПолучитьБазуРаспределения(Строка,УточнениеМетодаРаспределения,Сценарий);
			
		ИначеЕсли МетодРаспределения=Перечисления.МетодыОбратногоРаспределения.ПоСценарию Тогда
			
			ПолучитьБазуРаспределения(Строка,ПоказательДляРаспределения,УточнениеМетодаРаспределения);
			
		ИначеЕсли МетодРаспределения=Перечисления.МетодыОбратногоРаспределения.ПоТекущемуЗначению Тогда
			
			ПолучитьБазуРаспределения(Строка,ПоказательДляРаспределения,Сценарий);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьБазуРаспределения()

Процедура ПолучитьПолнуюТаблицуДляРаспределения()
	
	ТаблицаДляРаспределения=ЗначенияДляРаспределения.Выгрузить();
	ТаблицаДляРаспределения.Колонки.Добавить("мПоказателиРаскрытия",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповТЗ());
	
	Если НЕ РеквизитыПоказателяРаспределения.РаспределятьПоАналитикам Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбъектРасчета.Вставить("Организация",Организация);
	
	МассивВалюта=КэшВалютыОтчетности.НайтиСтроки(Новый Структура("Организация",Организация));
	ОбъектРасчета.Вставить("ОсновнаяВалюта",?(МассивВалюта.Количество()>0,МассивВалюта[0].ОсновнаяВалюта,Справочники.Валюты.ПустаяСсылка()));
	
	Для Каждого Строка ИЗ ТаблицаДляРаспределения Цикл
		
		ОбъектРасчета.Вставить("ПериодОтчета",Строка.ПериодОтчета);
		ОбъектРасчета.Вставить("ПериодОкончания",Строка.ПериодОтчета);
		
		Строка.мПоказателиРаскрытия=УправлениеОтчетамиУХ.ЗаполнитьТаблицуРаскрытий(ОбъектРасчета,,,,ПоказательДляРаспределения);
		
	КонецЦикла; 

КонецПроцедуры // ПолучитьТаблицуРаскрытийДляРаспределения() 

Процедура ПолучитьПолнуюТаблицуТекущихЗначений()
	
	ТаблицаТекущихЗначений=КлючевыеРеквизиты.Выгрузить();
			
	ТаблицаТекущихЗначений.Колонки.Добавить("Значение",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,5));
	ТаблицаТекущихЗначений.Колонки.Добавить("мПоказателиРаскрытия",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповТЗ());
	ТаблицаТекущихЗначений.Колонки.Добавить("ОсновнаяВалюта",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Валюты"));
	
	МассивСтрокКУдалению=Новый Массив;
	
	Для Каждого Строка ИЗ ТаблицаТекущихЗначений Цикл
		
		СтрокаРаспределения=ЗначенияДляРаспределения.Найти(Строка.ПериодОтчета,"ПериодОтчета");
		
		Если СтрокаРаспределения=Неопределено ИЛИ  СтрокаРаспределения.Значение=0 Тогда
			
			МассивСтрокКУдалению.Добавить(Строка);
			Продолжить;
			
		КонецЕсли;
		
		ОбъектРасчета.Вставить("ПериодОтчета",		Строка.ПериодОтчета);
		ОбъектРасчета.Вставить("ПериодОкончания",	Строка.ПериодОтчета);
		ОбъектРасчета.Вставить("Организация",		Строка.Организация);
		
		МассивВалюта=КэшВалютыОтчетности.НайтиСтроки(Новый Структура("Организация",Строка.Организация));
		ОбъектРасчета.Вставить("ОсновнаяВалюта",?(МассивВалюта.Количество()>0,МассивВалюта[0].ОсновнаяВалюта,Справочники.Валюты.ПустаяСсылка()));
		
		Строка.ОсновнаяВалюта=ОбъектРасчета.ОсновнаяВалюта;
		
		мПоказатели=УправлениеОтчетамиУХ.ЗаполнитьТаблицуПоказателей(ОбъектРасчета,,,ПоказательДляРаспределения);
		Строка.Значение=мПоказатели[0].Значение;
		
		Если РеквизитыПоказателяРаспределения.РаспределятьПоАналитикам Тогда
			
			Строка.мПоказателиРаскрытия=УправлениеОтчетамиУХ.ЗаполнитьТаблицуРаскрытий(ОбъектРасчета,,,,ПоказательДляРаспределения);
			
		КонецЕсли;

	КонецЦикла;	
	
	Для Каждого Строка ИЗ МассивСтрокКУдалению Цикл
		
		ТаблицаТекущихЗначений.Удалить(Строка);
		
	КонецЦикла;
		
КонецПроцедуры // ПолучитьПолнуюТаблицуТекущихЗначений()

Процедура РаспределитьДанныеВышестоящихПериодов()
	
	ИтогРаспределение=ТаблицаДляРаспределения.Итог("Значение");
	
	Для Каждого Строка ИЗ ТаблицаДляРаспределения Цикл
		
		РабочаяТаблица=ТаблицаТекущихЗначений.Скопировать(Новый Структура("ВышестоящийПериод",Строка.ПериодОтчета));
		
		МассивДляРаспределения=РабочаяТаблица.ВыгрузитьКолонку("БазаРаспределения");
		
		МассивКоэффициентов=РаспределитьСуммуПропорциональноКоэффициентам(ИтогРаспределение,МассивДляРаспределения,5);
		
		Для Индекс=0 По РабочаяТаблица.Количество()-1 Цикл
			
			ДобавитьДанныеРаспределения(Строка,РабочаяТаблица[Индекс],МассивКоэффициентов[Индекс]/ИтогРаспределение);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры // ПолучитьТаблицаБазаРаспределения() 

Функция РаспределитьСуммуПропорциональноКоэффициентам(РаспределяемаяСумма, Коэффициенты, Точность)
	
	МассивКоэффициентов=ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(РаспределяемаяСумма, Коэффициенты, Точность);
	
	Если МассивКоэффициентов=Неопределено Тогда
		
		МассивКоэффициентов=Новый Массив;
		
		Для Каждого Элемент ИЗ Коэффициенты Цикл
			
			МассивКоэффициентов.Добавить(0);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивКоэффициентов; 
	
КонецФункции // РаспределитьСуммуПропорциональноКоэффициентам()

Процедура РаспределитьДанныеГруппирующейОрганизации()
	
	ИтогРаспределение=ТаблицаДляРаспределения.Итог("Значение");
	
	Для Каждого Строка ИЗ ТаблицаДляРаспределения Цикл
		
		Если Строка.Значение=0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		РабочаяТаблица=ТаблицаТекущихЗначений.Скопировать(Новый Структура("ПериодОтчета",Строка.ПериодОтчета));
		
		МассивДляРаспределения=РабочаяТаблица.ВыгрузитьКолонку("БазаРаспределения");
		
		МассивКоэффициентов=РаспределитьСуммуПропорциональноКоэффициентам(ИтогРаспределение,МассивДляРаспределения,5);
		
		Для Индекс=0 По РабочаяТаблица.Количество()-1 Цикл
			
			ДобавитьДанныеРаспределения(Строка,РабочаяТаблица[Индекс],МассивКоэффициентов[Индекс]/ИтогРаспределение);
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры // РаспределитьДанныеГруппирующейОрганизации() 

Процедура ДобавитьДанныеРаспределения(СтрокаИсточник,СтрокаПриемник,Коэффициент);
	
	ЗначениеСинтетика=СтрокаИсточник.Значение*Коэффициент;
	ЗначениеКорректировки=ЗначениеСинтетика-СтрокаПриемник.Значение;
	
	НоваяСтрока=КорректировкаСинтетика.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаПриемник,,"Значение");
	НоваяСтрока.ВидОтчета=РеквизитыПоказателяРаспределения.ВидОтчета;
	НоваяСтрока.Показатель=ПоказательДляРаспределения;
	НоваяСтрока.ИдентификаторСинтетика=СтрЗаменить(Новый УникальныйИдентификатор(),"-","");
	НоваяСтрока.Значение=ЗначениеКорректировки;
	
	Если РеквизитыПоказателяРаспределения.РаспределятьПоАналитикам Тогда
		
		ДобавитьРаспределениеПоАналитикам(НоваяСтрока.ИдентификаторСинтетика,СтрокаИсточник,СтрокаПриемник,Коэффициент);
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьДанныеРаспределения() 

Процедура ДобавитьРаспределениеПоАналитикам(ИдентификаторСинтетика,СтрокаИсточник,СтрокаПриемник,Коэффициент)
	
	Если СтрокаИсточник.мПоказателиРаскрытия.Количество()=0 Тогда // распределяем синтетическое значение пропорционально по аналитике приемника
		
		РаскрытиеИсточник=СтрокаПриемник.мПоказателиРаскрытия.Скопировать();
		МассивДляРаспределения=РаскрытиеИсточник.ВыгрузитьКолонку("Значение");
		МассивЗначений=РаспределитьСуммуПропорциональноКоэффициентам(СтрокаИсточник.Значение*Коэффициент,МассивДляРаспределения,5);
		
		Для Индекс=0 По РаскрытиеИсточник.Количество()-1 Цикл
			
			РаскрытиеИсточник[Индекс].Значение=МассивЗначений[Индекс];
			
		КонецЦикла;
		
	Иначе
		
		РаскрытиеИсточник=СтрокаИсточник.мПоказателиРаскрытия.Скопировать();
		
		Для Каждого Строка ИЗ РаскрытиеИсточник Цикл
			
			Строка.Значение=Строка.Значение*Коэффициент;
			
		КонецЦикла;
	
	КонецЕсли;
	
	Если РеквизитыПоказателяРаспределения.ПересчитыватьВалютнуюСумму Тогда
		
		РассчитатьЗначенияВВалюте(РаскрытиеИсточник,СтрокаПриемник);
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////
	// Получаем значение корректировок по аналитикам
	
	ТекстЗапроса="Выбрать * Поместить РаскрытиеИсточник
	|ИЗ &РаскрытиеИсточник КАК РаскрытиеИсточник
	|;
	|ВЫБРАТЬ * Поместить РаскрытиеПриемник
	|ИЗ &РаскрытиеПриемник КАК РаскрытиеПриемник
	|;
	|ВЫБРАТЬ";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстЗапроса=ТекстЗапроса+"
		|ДанныеСравнения.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	ТекстЗапроса=ТекстЗапроса+"
	|ДанныеСравнения.АналитикаВалюта КАК АналитикаВалюта,
	|СУММА(ДанныеСравнения.ЗначениеИсточник)-СУММА(ДанныеСравнения.ЗначениеПриемник) КАК Значение,
	|СУММА(ДанныеСравнения.ЗначениеВалютаИсточник)-СУММА(ДанныеСравнения.ЗначениеВалютаПриемник) КАК ЗначениеВалюта
	|ИЗ (ВЫБРАТЬ";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстЗапроса=ТекстЗапроса+"
		|Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	ТекстЗапроса=ТекстЗапроса+"
	|АналитикаВалюта КАК АналитикаВалюта,
	|Значение КАК ЗначениеИсточник,
	|ЗначениеВалюта КАК ЗначениеВалютаИсточник,
	|0 КАК ЗначениеПриемник,
	|0 КАК ЗначениеВалютаПриемник
	|ИЗ РаскрытиеИсточник КАК РаскрытиеИсточник
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстЗапроса=ТекстЗапроса+"
		|Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	ТекстЗапроса=ТекстЗапроса+"
	|АналитикаВалюта КАК АналитикаВалюта,
	|0 КАК ЗначениеИсточник,
	|0 КАК ЗначениеВалютаИсточник,
	|Значение КАК ЗначениеПриемник,
	|ЗначениеВалюта КАК ЗначениеВалютаПриемник
	|ИЗ РаскрытиеПриемник КАК РаскрытиеПриемник) КАК ДанныеСравнения
	|СГРУППИРОВАТЬ ПО";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстЗапроса=ТекстЗапроса+"
		|ДанныеСравнения.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	ТекстЗапроса=ТекстЗапроса+"
	|ДанныеСравнения.АналитикаВалюта";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("РаскрытиеИсточник",РаскрытиеИсточник);
	Запрос.УстановитьПараметр("РаскрытиеПриемник",СтрокаПриемник.мПоказателиРаскрытия);
	
	мПоказателиРаскрытия=Запрос.Выполнить().Выгрузить();
	
	мПоказателиРаскрытия.Колонки.Добавить("ИдентификаторСинтетика",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(36));
	мПоказателиРаскрытия.ЗаполнитьЗначения(ИдентификаторСинтетика,"ИдентификаторСинтетика");
	
	Для Каждого СтрокаРаскрытия ИЗ мПоказателиРаскрытия Цикл
		
		НоваяСтрокаРаскрытия=КорректировкаАналитика.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРаскрытия,СтрокаРаскрытия);
		
	КонецЦикла;
	
	ДанныеОбъекта.ТаблицыРаскрытия.Вставить(ИдентификаторСинтетика,мПоказателиРаскрытия);
		
КонецПроцедуры // ДобавитьРаспределениеПоАналитикам()

Процедура РассчитатьЗначенияВВалюте(РаскрытиеИсточник,СтрокаПриемник) 
	
	Перем КэшТаблицыКурсов;
	
	Для Каждого Строка ИЗ РаскрытиеИсточник Цикл
		
		Строка.ЗначениеВалюта=УправлениеРабочимиПроцессамиУХ.ПересчитатьПоКурсу(Строка.Значение,
										СтрокаПриемник.ОсновнаяВалюта,
										Строка.АналитикаВалюта,
										РеквизитыПоказателяРаспределения.ВидКурса,
										Сценарий,
										СтрокаПриемник.ПериодОтчета,,,,КэшТаблицыКурсов);
										
	КонецЦикла;
	
КонецПроцедуры // РассчитатьЗначенияВВалюте()



Процедура РассчитатьЗначенияКорректировок()
	
	Для Каждого Строка ИЗ ТаблицаКорректировок Цикл
		
		Если Строка.РасчетПоФормуле Тогда
			
			РассчитатьЗначениеКорректировки(Строка);
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры // РассчитатьЗначенияКорректировок() 

Процедура РассчитатьЗначениеКорректировки(СтрокаКорректировки)
	
	ОбработкаРасчет=Обработки.ЗаписьПоказателяСРасчетомЗависимых.Создать();
	ОбработкаРасчет.ИспользуемаяИБ=ИспользуемаяИБ;
		
	СтруктураКлючевыхРеквизитов=Новый Структура;
	СтруктураКлючевыхРеквизитов.Вставить("Организация",	СтрокаКорректировки.Организация);
	СтруктураКлючевыхРеквизитов.Вставить("ПериодОтчета",СтрокаКорректировки.ПериодОтчета);
	СтруктураКлючевыхРеквизитов.Вставить("Проект",		СтрокаКорректировки.Проект);
	СтруктураКлючевыхРеквизитов.Вставить("Сценарий",	Сценарий);
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		СтруктураКлючевыхРеквизитов.Вставить("Аналитика"+Индекс,СтрокаКорректировки["Аналитика"+Индекс]);
		
	КонецЦикла;
	
	ПолучитьДанныеПоВалютам(СтруктураКлючевыхРеквизитов);
	
	ОбъектРасчета=ОбработкаРасчет.ПодготовитьСтруктуруПеременныхДляРасчета(СтруктураКлючевыхРеквизитов);
	ПересчетПоказателейУХ.РассчитатьЗначениеПоказателя(ОбъектРасчета,
						СтруктураКлючевыхРеквизитов,
						СтрокаКорректировки.ВидОтчета,
						СтрокаКорректировки.Показатель,
						ПравилоОбработки,
						СтрокаКорректировки.ПериодОтчета,Ложь);
	
	СтрокаКорректировки.Значение= ОбъектРасчета.мПоказатели[0].Значение;
	
	НоваяСтрока=КорректировкаСинтетика.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаКорректировки);
	
	Если ЗначениеЗаполнено(ОбъектРасчета.мПоказатели[0].ГруппаРаскрытия) Тогда
				
		ОбъектРасчета.мПоказателиРаскрытия.Колонки.Добавить("ИдентификаторСинтетика",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(36));
		ОбъектРасчета.мПоказателиРаскрытия.ЗаполнитьЗначения(СтрокаКорректировки.ИдентификаторСинтетика,"ИдентификаторСинтетика");
		
		Для Каждого СтрокаРаскрытия ИЗ ОбъектРасчета.мПоказателиРаскрытия Цикл
			
			НоваяСтрокаРаскрытия=КорректировкаАналитика.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаскрытия,НоваяСтрокаРаскрытия);
			
		КонецЦикла;
		
		ДанныеОбъекта.ТаблицыРаскрытия.Вставить(СтрокаКорректировки.ИдентификаторСинтетика,ОбъектРасчета.мПоказателиРаскрытия);
			
	КонецЕсли;	
	
КонецПроцедуры // РассчитатьЗначениеКорректировки()

Процедура ПолучитьДанныеПоВалютам(СтруктураКлючевыхРеквизитов)
	
	ТаблицаВалют=Новый ТаблицаЗначений;
	ТаблицаВалют.Колонки.Добавить("Валюта",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСсылка("СправочникСсылка.Валюты"));
	
	МассивВалюта=КэшВалютыОтчетности.НайтиСтроки(Новый Структура("Организация",СтруктураКлючевыхРеквизитов.Организация));
	
	Если МассивВалюта.Количество()>0 Тогда
		
		СтруктураКлючевыхРеквизитов.Вставить("ОсновнаяВалюта",МассивВалюта[0].ОсновнаяВалюта);
		
		Для Каждого Элемент ИЗ МассивВалюта[0].ДополнительныеВалюты Цикл
			
			НоваяСтрока=ТаблицаВалют.Добавить();
			НоваяСтрока.Валюта=Элемент.Значение;
			
		КонецЦикла;
		
	Иначе
		
		СтруктураКлючевыхРеквизитов.Вставить("ОсновнаяВалюта",Справочники.Валюты.ПустаяСсылка());
		
	КонецЕсли;
	
	СтруктураКлючевыхРеквизитов.Вставить("ДополнительныеВалюты",ТаблицаВалют);
	
КонецПроцедуры // ПолучитьДанныеПоВалютам() 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	УправлениеПериодомСценария.Сценарий КАК Сценарий,
	             |	УправлениеПериодомСценария.ПериодСценария КАК ПериодОтчета,
	             |	УправлениеПериодомСценария.Сценарий.СценарийДляАктуализации КАК СценарийДляАктуализации
	             |ИЗ
	             |	Документ.УправлениеПериодомСценария КАК УправлениеПериодомСценария
	             |ГДЕ
	             |	УправлениеПериодомСценария.Ссылка = &УправлениеПериодом";
	
	Запрос.УстановитьПараметр("УправлениеПериодом",УправлениеПериодом);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Результат.Следующий();
	
	Сценарий=Результат.Сценарий;
	ПериодОтчета=Результат.ПериодОтчета;
	СценарийДляАктуализации=Результат.СценарийДляАктуализации;
	
	Если Проведен Тогда
		
		УправлениеОтчетамиУХ.ОчиститьЗначенияПоказателейОтчетов(Ссылка,Отказ);
		
	КонецЕсли;
	
	Если СпособВводаКорректировки=Перечисления.СпособыВводаКорректировок.ОбратноеРаспределение Тогда
		
		Если Не ПроверитьВозможностьОбратногоРаспределения(Отказ) Тогда
			
			Возврат;
			
		КонецЕсли;

		ВыполнитьОбратноеРаспределение();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеДляРаспределения() Экспорт
		
	////Если КлючевыеРеквизиты.Количество()<2 Тогда
	//	
	//	
	//	
	//КонецЕсли;
	
	ПодготовитьОбъектДляРасчета();
	ЗначенияДляРаспределения.Очистить();
		
	ЗаполнитьПоКонсолидирующейОрганизации();
		
КонецПроцедуры // ЗаполнитьДанныеДляРаспределения()

Процедура ПодготовитьОбъектДляРасчета()
	
	ПолучитьРеквизитыПоказателяДляРаспределения();
	МаксАналитикОтчета=ОбщегоНазначенияУХ.ВернутьКоличествоАналитикНаУровнеОтчета(РеквизитыПоказателяРаспределения.ВидОтчета);
		
	ОбъектРасчета=Новый Структура;

	ОбъектРасчета.Вставить("Организация",Организация);
	ОбъектРасчета.Вставить("Сценарий",Сценарий);
	ОбъектРасчета.Вставить("ВидОтчета",РеквизитыПоказателяРаспределения.ВидОтчета);
	ОбъектРасчета.Вставить("Проект",Справочники.Проекты.ПустаяСсылка());
	ОбъектРасчета.Вставить("МаксАналитикОтчета",МаксАналитикОтчета);
	ОбъектРасчета.Вставить("глОсновнойЯзык",0);
	ОбъектРасчета.Вставить("ЧислоДопАналитик",ПараметрыСеанса.ЧислоДопАналитик);
	ОбъектРасчета.Вставить("АнализЧувствительности",Ложь);
	ОбъектРасчета.Вставить("ВсегдаЗаполнятьАналитики",Истина);
	ОбъектРасчета.Вставить("МассивЗагруженныхГруппРаскрытия",Новый Массив);
		
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ОбъектРасчета.Вставить("Аналитика"+Индекс,Неопределено);
		
	КонецЦикла;
	
	ВерсияРегламента		= УправлениеПериодом.ВерсияОрганизационнойСтруктуры;
	КэшВалютыОтчетности		= РегистрыСведений.ВалютыОтчетности.ПолучитьТаблицуВалютДляВерсииОрганизационнойСтруктуры(ВерсияРегламента);

	МассивВалюта=КэшВалютыОтчетности.НайтиСтроки(Новый Структура("Организация",Организация));
	ОбъектРасчета.Вставить("ОсновнаяВалюта",?(МассивВалюта.Количество()>0,МассивВалюта[0].ОсновнаяВалюта,Справочники.Валюты.ПустаяСсылка()));
	
КонецПроцедуры // ПодготовитьОбъектДляРасчета()

Функция ПолучитьТаблицуПериодов()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлючевыеРеквизиты.ПериодОтчета КАК ПериодОтчета
	|ПОМЕСТИТЬ КлючевыеПериоды
	|ИЗ
	|	&КлючевыеРеквизиты КАК КлючевыеРеквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючевыеПериоды.ПериодОтчета КАК ПериодОтчета,
	|	ПериодыОтчетов.ДатаНачала КАК ДатаНачала,
	|	ПериодыОтчетов.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	КлючевыеПериоды КАК КлючевыеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Периоды КАК ПериодыОтчетов
	|		ПО КлючевыеПериоды.ПериодОтчета = ПериодыОтчетов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодыОтчетов.ДатаНачала";
	
	Запрос.УстановитьПараметр("КлючевыеРеквизиты",КлючевыеРеквизиты.Выгрузить());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеПериодовРаспределения() 

Процедура ЗаполнитьПоКонсолидирующейОрганизации()
	
	ТаблицаПериодов=ПолучитьТаблицуПериодов();
	
	Для Каждого Строка ИЗ ТаблицаПериодов Цикл
		
		НоваяСтрока=ЗначенияДляРаспределения.Добавить();
		НоваяСтрока.ПериодОтчета=Строка.ПериодОтчета;
		
		ОбъектРасчета.Вставить("ПериодОтчета",Строка.ПериодОтчета);
		ОбъектРасчета.Вставить("ПериодОкончания",Строка.ПериодОтчета);
		
		мПоказатели=УправлениеОтчетамиУХ.ЗаполнитьТаблицуПоказателей(ОбъектРасчета,,,ПоказательДляРаспределения);
		НоваяСтрока.Значение=мПоказатели[0].Значение;
		
	КонецЦикла;	
	
КонецПроцедуры // ЗаполнитьПоКонсолидирующейОрганизации() 

Процедура ЗаполнитьКлючевыеРеквизитыДляРаспределения() Экспорт
		
	КлючевыеРеквизиты.Очистить();		
	ЗаполнитьКлючевыеРеквизитыДляРаспределенияОрганизации();
				
КонецПроцедуры // ЗаполнитьКлючевыеРеквизитыДляРаспределения() 

Процедура ЗаполнитьКлючевыеРеквизитыДляРаспределенияОрганизации()
	
	Если ОтборОрганизацийДляРаспределения=Перечисления.СпособыОбратногоРаспределения.ПоОрганизациямПериметра Тогда
		
		ПараметрыРасчета=Новый Структура;
		ПараметрыРасчета.Вставить("Организация",Организация);
		ПараметрыРасчета.Вставить("Сценарий",Сценарий);
		ПараметрыРасчета.Вставить("ПериодОтчета",УправлениеПериодом.ПериодСценария);
		
		ТаблицаПериметр=УправлениеРабочимиПроцессамиУХ.ПолучитьДанныеРегламентаОтчета(ПараметрыРасчета);
		МассивОрганизаций = ТаблицаПериметр.ВыгрузитьКолонку("ИндивидуальнаяОрганизация");
		
	Иначе
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	Организации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Родитель = &Родитель
		|	И НЕ Организации.ЭлиминирующаяОрганизация";
		
		Запрос.УстановитьПараметр("Родитель",Организация);
		
		МассивОрганизаций=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтатусыПериодовСценариев.Периоды КАК ПериодОтчета,
	|	СтатусыПериодовСценариев.Организации КАК Организация
	|ИЗ
	|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
	|ГДЕ
	|	СтатусыПериодовСценариев.УправлениеПериодомСценария = &УправлениеПериодомСценария
	|	И СтатусыПериодовСценариев.Организации В(&МассивОрганизаций)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыПериодовСценариев.Периоды.ДатаНачала";
	
	Запрос.УстановитьПараметр("УправлениеПериодомСценария",	УправлениеПериодом);
	Запрос.УстановитьПараметр("МассивОрганизаций",			МассивОрганизаций);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=КлючевыеРеквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Результат);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьКлючевыеРеквизитыДляРаспределенияОрганизации()

Процедура ЗаполнитьКлючевыеРеквизитыДляРаспределенияПериоды()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	СтатусыПериодовСценариев.Периоды КАК ПериодОтчета,
	|	СтатусыПериодовСценариев.Организации КАК Организация
	|ИЗ
	|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
	|ГДЕ
	|	СтатусыПериодовСценариев.УправлениеПериодомСценария = &УправлениеПериодомСценария
	|	И СтатусыПериодовСценариев.Организации = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыПериодовСценариев.Периоды.ДатаНачала";
	
	Запрос.УстановитьПараметр("УправлениеПериодомСценария",	УправлениеПериодом);
	Запрос.УстановитьПараметр("Организация",				Организация);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=КлючевыеРеквизиты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Результат);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьКлючевыеРеквизитыДляРаспределенияПериоды()

Процедура ЗаполнитьПоВышестоящимПериодам()
	
	ВышестоящиеПериоды=ОбщегоНазначенияУХ.ОпределитьМассивВышестоящихПериодов(УправлениеПериодом.ТекущаяПериодичность);
	ТаблицаПериодов=ПолучитьТаблицуПериодов();
		
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ТаблицаПериодов.ПериодОтчета КАК ПериодОтчета,
	|	ТаблицаПериодов.ДатаНачала КАК ДатаНачала,
	|	ТаблицаПериодов.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ТекущиеПериоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПериодовСценариев.Периоды КАК ПериодОтчета,
	|	СтатусыПериодовСценариев.Периоды.Периодичность КАК Периодичность,
	|	СтатусыПериодовСценариев.Периоды.ДатаНачала КАК ДатаНачала,
	|	СтатусыПериодовСценариев.Периоды.ДатаОкончания КАК ДатаОкончания,
	|	РАЗНОСТЬДАТ(СтатусыПериодовСценариев.Периоды.ДатаНачала, СтатусыПериодовСценариев.Периоды.ДатаОкончания, ДЕНЬ) КАК ЧислоДней
	|ПОМЕСТИТЬ ВышестоящиеПериоды
	|ИЗ
	|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
	|ГДЕ
	|	СтатусыПериодовСценариев.Организации = &Организации
	|	И СтатусыПериодовСценариев.Сценарии = &Сценарии
	|	И СтатусыПериодовСценариев.Периоды.Периодичность В(&ВышестоящиеПериоды)
	|	И СтатусыПериодовСценариев.Периоды.ДатаНачала >= &ДатаНачала
	|	И СтатусыПериодовСценариев.Периоды.ДатаОкончания <= &ДатаОкончания
	|	И СтатусыПериодовСценариев.УправлениеПериодомСценария <> &УправлениеПериодомСценария
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеПериоды.ПериодОтчета КАК ПериодОтчета,
	|	МИНИМУМ(ВышестоящиеПериоды.ЧислоДней) КАК ЧислоДней,
	|	ТекущиеПериоды.ДатаНачала КАК ДатаНачала,
	|	ТекущиеПериоды.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ МинимальнаяПериодичность
	|ИЗ
	|	ТекущиеПериоды КАК ТекущиеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВышестоящиеПериоды КАК ВышестоящиеПериоды
	|		ПО ТекущиеПериоды.ДатаНачала >= ВышестоящиеПериоды.ДатаНачала
	|			И ТекущиеПериоды.ДатаОкончания <= ВышестоящиеПериоды.ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеПериоды.ПериодОтчета,
	|	ТекущиеПериоды.ДатаНачала,
	|	ТекущиеПериоды.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВышестоящиеПериоды.ПериодОтчета КАК ПериодОтчета
	|ИЗ
	|	ВышестоящиеПериоды КАК ВышестоящиеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальнаяПериодичность КАК МинимальнаяПериодичность
	|		ПО ВышестоящиеПериоды.ДатаНачала <= МинимальнаяПериодичность.ДатаНачала
	|			И ВышестоящиеПериоды.ДатаОкончания >= МинимальнаяПериодичность.ДатаОкончания
	|			И ВышестоящиеПериоды.ЧислоДней = МинимальнаяПериодичность.ЧислоДней";
	
	Запрос.УстановитьПараметр("ДатаНачала",			ТаблицаПериодов[0].ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		ТаблицаПериодов[ТаблицаПериодов.Количество()-1].ДатаОкончания);
	Запрос.УстановитьПараметр("УправлениеПериодомСценария",	УправлениеПериодом);
	Запрос.УстановитьПараметр("Организации",		Организация);
	Запрос.УстановитьПараметр("ВышестоящиеПериоды",	ВышестоящиеПериоды);
	Запрос.УстановитьПараметр("Сценарии",			Сценарий);
	Запрос.УстановитьПараметр("ТаблицаПериодов",	ТаблицаПериодов);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ЗначенияДляРаспределения.Добавить();
		НоваяСтрока.ПериодОтчета=Результат.ПериодОтчета;
		
		ОбъектРасчета.Вставить("ПериодОтчета",Результат.ПериодОтчета);
		ОбъектРасчета.Вставить("ПериодОкончания",Результат.ПериодОтчета);
		
		мПоказатели=УправлениеОтчетамиУХ.ЗаполнитьТаблицуПоказателей(ОбъектРасчета,,,ПоказательДляРаспределения);
		НоваяСтрока.Значение=мПоказатели[0].Значение;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоВышестоящимПериодам() 


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	Если СпособВводаКорректировки=Перечисления.СпособыВводаКорректировок.АктуализацияБюджетов Тогда
		
		ВыполнитьАктуализациюБюджетов(Отказ);
		
	Иначе
				
		ВерсияРегламента		= УправлениеПериодом.ВерсияОрганизационнойСтруктуры;
		РассчитыватьЗависимые 	= Константы.АвтоматическийПересчетЗависимыхПоказателей.Получить();
		
		ОбработкаЗаписи							= Обработки.ЗаписьПоказателяСРасчетомЗависимых.Создать();
		ОбработкаЗаписи.РассчитыватьЗависимые	= РассчитыватьЗависимые;
		ОбработкаЗаписи.Регистратор				= Ссылка;
		ОбработкаЗаписи.РежимКорректировки		= Истина;
		ОбработкаЗаписи.ПравилоОбработки		= ПравилоОбработки;
		
		ВыполнитьЗаписьКорректировки(Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьАктуализациюБюджетов(Отказ)
	
	ОбработкаАктуализации=Обработки.АктуализацияБюджетов.Создать();
	ОбработкаАктуализации.Актуализировать=Истина;
	ОбработкаАктуализации.ПеренестиОтклонения=Истина;
	ОбработкаАктуализации.Организация	= Организация;
	ОбработкаАктуализации.ПериодОтчета	= ПериодОтчета;
	ОбработкаАктуализации.СценарийПлан	= Сценарий;
	ОбработкаАктуализации.СценарийФакт  = СценарийДляАктуализации;
	ЗаполнитьТЧПериодыГоризонта(ОбработкаАктуализации,ПериодОтчета,НовыйПериод);
	ОбработкаАктуализации.Регистратор=Ссылка;
	
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.Показатель КАК Показатель,
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.ДействияПриАктуализации КАК ДействияПриАктуализации
	|ИЗ
	|	Справочник.ШаблоныКорректировокЗначенийПоказателей.ШаблонКорректировки КАК ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки
	|ГДЕ
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.Ссылка = &ШаблонКорректировки";
	
	Запрос.УстановитьПараметр("ШаблонКорректировки",ШаблонКорректировки);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=ОбработкаАктуализации.ТаблицаДействийПриАктуализации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Результат);
		
	КонецЦикла;
				
	Отказ=НЕ ОбработкаАктуализации.ВыполнитьАктуализациюБюджетов();
		
КонецПроцедуры // ВыполнитьАктуализациюБюджетов()

Функция ПроверитьВозможностьОбратногоРаспределения(Отказ)
	
	Если ШаблонКорректировки.ОтборОрганизацийДляРаспределения=Перечисления.СпособыОбратногоРаспределения.ПоОрганизациямПериметра Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СтруктураГруппы.ОрганизационнаяЕдиницаРодитель
		|ИЗ
		|	РегистрСведений.СтатусыПериодовСценариев КАК СтатусыПериодовСценариев
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииРегламентовПодготовкиОтчетности.СтруктураГруппы КАК СтруктураГруппы
		|		ПО СтатусыПериодовСценариев.ВерсияРегламента = СтруктураГруппы.Ссылка
		|			И (СтруктураГруппы.ОрганизационнаяЕдиницаРодитель = &Организация)
		|			И (СтатусыПериодовСценариев.УправлениеПериодомСценария = &УправлениеПериодомСценария)");
		
		Запрос.УстановитьПараметр("Организация", 	Организация);
		Запрос.УстановитьПараметр("УправлениеПериодомСценария", УправлениеПериодом); 
		
		Если Запрос.Выполнить().Пустой() Тогда
			
			ТекстСообщения = НСтр("ru = 'Организация %Организация% не является консолидирующей.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Организация));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения,Отказ,,СтатусСообщения.Внимание);
			
			Возврат Ложь;
			
		КонецЕсли;
		
	Иначе
		
		Если Не Организация.ЭтоГруппа Тогда
			
			ТекстСообщения = НСтр("ru = 'Организация %Организация% не является группирующей.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Организация));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения,Отказ,,СтатусСообщения.Внимание);
			
			Возврат Ложь;
			
			
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат Истина;
				
КонецФункции // ПроверитьВозможностьОбратногоРаспределения() 

Процедура ВыполнитьОбратноеРаспределение()
		
	КорректировкаСинтетика.Очистить();
	КорректировкаАналитика.Очистить();
	ЗначенияДляРаспределения.Очистить();
	
	ЗаполнитьКлючевыеРеквизитыДляРаспределения();
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.Показатель КАК ПоказательДляРаспределения,
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.МетодРаспределения КАК МетодРаспределения,
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.УточнениеМетодаРаспределения КАК УточнениеМетодаРаспределения
	|ИЗ
	|	Справочник.ШаблоныКорректировокЗначенийПоказателей.ШаблонКорректировки КАК ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки
	|ГДЕ
	|	ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.Ссылка = &ШаблонКорректировки
	|	И НЕ ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиОтчетов.ПустаяСсылка)
	|	И НЕ ШаблоныКорректировокЗначенийПоказателейШаблонКорректировки.МетодРаспределения = ЗНАЧЕНИЕ(Перечисление.МетодыОбратногоРаспределения.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ШаблонКорректировки",ШаблонКорректировки);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		ПоказательДляРаспределения=Результат.ПоказательДляРаспределения;
		МетодРаспределения=Результат.МетодРаспределения;
		УточнениеМетодаРаспределения=Результат.УточнениеМетодаРаспределения;
		
		РаспределитьЗначенияПоказателя();
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьОбратноеРаспределение()

Процедура ЗаполнитьТЧПериодыГоризонта(ОбработкаАктуализации,ПериодФакт,ПериодПлан)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Периоды.Ссылка КАК ПериодОтчета
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ
	|	Периоды.Произвольный = ЛОЖЬ
	|	И Периоды.Периодичность = &Периодичность
	|	И Периоды.ДатаНачала > &ДатаНачала
	|	И Периоды.ДатаОкончания <= &ДатаОкончания
	|	И Периоды.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Периоды.ДатаНачала";
	
	Запрос.УстановитьПараметр("Периодичность",ПериодФакт.Периодичность);
	Запрос.УстановитьПараметр("ДатаНачала",ПериодФакт.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ПериодПлан.ДатаОкончания);
	 
	ОбработкаАктуализации.ПериодыГоризонта.Загрузить(Запрос.Выполнить().Выгрузить());
	 	 	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	УправлениеОтчетамиУХ.ОчиститьЗначенияПоказателейОтчетов(Ссылка,Отказ);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ШаблоныКорректировокЗначенийПоказателей") Тогда

		ОтборОрганизацийДляРаспределения = ДанныеЗаполнения.ОтборОрганизацийДляРаспределения;
		Сбалансированная = ДанныеЗаполнения.Сбалансированная;
		СпособВводаКорректировки = ДанныеЗаполнения.СпособВводаКорректировки;
		ШаблонКорректировки = ДанныеЗаполнения.Ссылка;
				
	КонецЕсли;

КонецПроцедуры

#КонецЕсли


