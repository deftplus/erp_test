
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
		
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
    	ОбновитьЭлементыДополнительныхРеквизитов();
    	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	// ОПК
 	Если ЗаявкиНаОперацииКлиент.ТребуетсяОбработкаСобытия(ИмяСобытия) Тогда
		ВыполнитьОбработкуСобытийЗаявки(ИмяСобытия, Параметр);
	КонецЕсли;
	// Конец ОПК
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаявкиНаОперацииКлиент.ПослеЗаписи(ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// ОПК
	ЗаявкиНаОперации.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ОПК
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
	// ОПК
	ЗаявкиНаОперации.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ОПК
	
	Для Каждого ТекСтрока Из ТекущийОбъект.ДвиженияОперации Цикл
		ТекСтрока.Проект = ТекущийОбъект.Проект;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОрганизацииНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДокументаПриИзменении(Элемент)
	
	ПриИзмененииВалюты();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагентаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФОПриИзменении(Элемент)
	
	ОбработатьИзменениеЦФО();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ПриИзмененииДатыНачалаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидОперацииУХ) Тогда
		ПриИзмененииВидаОперацииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПланированияПриИзменении(Элемент)
	ДокументПланированияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	ПриИзмененииСуммыДокумента();
		
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ПроектПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеОбязательстваПриИзменении(Элемент)
	ОснованиеОбязательстваПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДвижений

&НаКлиенте
Процедура ТаблицаДвиженийСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	ПриИзмененииСтатьиБюджета();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийСтатьяДвиженияРесурсовПриИзменении(Элемент)
	
	ПриИзмененииСтатьиБюджета();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийПередУдалением(Элемент, Отказ)
	
	Если Объект.ДвиженияОперации.Количество() = 1 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийСтавкаНДСПриИзменении(Элемент)
	ЗаявкиНаОперацииКлиентСервер.ПересчитатьСуммуНДС(Элементы.ТаблицаДвижений.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийСуммаПриИзменении(Элемент)
	ЗаявкиНаОперацииКлиентСервер.ПересчитатьСуммуНДС(Элементы.ТаблицаДвижений.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		ТекДанные = Элементы.ТаблицаДвижений.ТекущиеДанные;
		ТекДанные.СтавкаНДС = СтавкаНДСПоДоговору;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования = Истина Тогда
		ПодключитьОбработчикОжидания("ОбновитьИтогДвиженийОперацийИПроверитьЛимиты", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийПередНачаломИзменения(Элемент, Отказ)
	АналитикиСтатейБюджетовУХКлиент.ПередНачаломИзмененияСтрокиТаблицыФормы(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ВыполнитьКомандуУХ(Команда)
	
	Если Команда.Имя = "ВыполнитьКонтрольДокумента" Тогда
		ВыполнитьКонтрольДокументаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтроку(Команда)
	
	ЗаявкиНаОперацииКлиент.РазбитьСтроку(Объект.ДвиженияОперации, Элементы.ТаблицаДвижений);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьКонтрольДокументаНаСервере()
	КонтрольУХ.ВыполнитьИнтерактивныйКонтроль(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизацииНаСервере()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииОрганизации(ЭтотОбъект);
	// Конец ОПК
	
	УправлениеФормой();
	
КонецПроцедуры

// Процедура выполняет необходимые действия при изменении договора взаиморасчетов
// с контрагентом.
&НаСервере
Процедура ПриИзмененииДоговораНаСервере()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииДоговора(ЭтотОбъект);
	// Конец ОПК
	
	ВыполнитьКонтрольДокументаНаСервере();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтрагентаНаСервере()
			
	
	Объект.ЭтоВнутригрупповоеПеремещение = ВстраиваниеОПКПереопределяемый.ЭтоВнутригрупповойКонтрагент(Объект.Контрагент);
	Если Объект.ЭтоВнутригрупповоеПеремещение Тогда
		Объект.ОрганизацияПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ОрганизационнаяЕдиница");
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры 

&НаСервере
Процедура ОбработатьИзменениеЦФО()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииЦФО(ЭтотОбъект);
	// Конец ОПК
	
	УправлениеФормой();
	ВыполнитьКонтрольДокументаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПриоритетПлатежа()
	
	ввв = 55/0;
	
КонецПроцедуры 

&НаСервере
Процедура ПриИзмененииВалюты()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииВалюты(ЭтотОбъект);
	// Конец ОПК
	
	ВыполнитьКонтрольДокументаНаСервере();
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	#Область УправлениеФлагами
	
	ПеремещениеВнутриОрганизации	= ВстраиваниеОПККлиентСерверПереопределяемый.ЭтоПеремещениеВнутриОрганизации(Объект.ВидОперацииУХ);
	ПеремещениеВнутриГруппы			= Объект.ЭтоВнутригрупповоеПеремещение;
	
	ЕстьРасчетыСКонтрагентами	= ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыСКонтрагентом(Объект.ВидОперацииУХ);
	РасчетыБезДоговора			= ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыБезДоговора(Объект.ВидОперацииУХ);
	РасчетыПоНалогамИСборам		= ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыПоНалогамИСборам(Объект.ВидОперацииУХ);
	ЕстьРасчетыПоЦеннымБумагам	= ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыПоЦеннымБумагам(Объект.ВидОперацииУХ);
	ЕстьРасчетыСФизическимЛицом	= ВидыОперацийУХКлиентСерверПовтИсп.ЭтоРасчетыСФизическимЛицом(Объект.ВидОперацииУХ);
	ЭтоПрочиеРасходы = (Объект.ВидОперацииУХ = Справочники.ВидыОперацийУХ.ПрочиеРасходы);
	
	#КонецОбласти
	
	#Область УправлениеУправляющимиРеквизитами
	Если НЕ ЕстьСуперПользователь Тогда

		Если ЗаявкиНаОперацииКлиентСервер.РеквизитСостояниеЗаявки(ЭтотОбъект) = Перечисления.СостоянияСогласования.Утверждена Тогда
			
			ТолькоПросмотр = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ДокументПланирования.Видимость		= НЕ ПеремещениеВнутриОрганизации;
	
	Элементы.ОснованиеОбязательства.Видимость	= ЕстьРасчетыСКонтрагентами И НЕ РасчетыБезДоговора;
	Если Элементы.ОснованиеОбязательства.Видимость Тогда
		Элементы.ОснованиеОбязательства.ОграничениеТипа = ВстраиваниеОПКПереопределяемый.ОписаниеТиповОснованиеОбязательстваЗаявок(Объект.Ссылка);
	КонецЕсли;
	
	Элементы.ВнеМаршрута.Доступность = ЕстьСуперПользователь;
		
	#КонецОбласти
	
	#Область УправлениеБлокомСтороныОперации

	Элементы.ГруппаСтороныОперацииВертикальная.ОтображатьЗаголовок	= ЕстьРасчетыСКонтрагентами;
	Элементы.Контрагент.Видимость						= ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыСФизическимЛицом ИЛИ ЭтоПрочиеРасходы;
	Элементы.ЦеннаяБумага.Видимость						= ЕстьРасчетыПоЦеннымБумагам;
	Элементы.ДоговорКонтрагента.Видимость				= ЕстьРасчетыСКонтрагентами И НЕ РасчетыБезДоговора;
	Элементы.ДоговорКонтрагента.ТолькоПросмотр			= Не ЗначениеЗаполнено(Объект.Организация) ИЛИ НЕ ЗначениеЗаполнено(Объект.Контрагент);
	Элементы.Сделка.Видимость							= ЕстьРасчетыСКонтрагентами И НЕ РасчетыБезДоговора И ВестиРасчетыПоЗаказам;
	
	#КонецОбласти
		
	#Область УправлениеБлокомСумаОперации
	
	Элементы.ВалютаДокумента.ТолькоПросмотр = ЗначениеЗаполнено(Объект.ДоговорКонтрагента);
	
	#КонецОбласти
	
	#Область УправлениеБлокомТаблицаДвижений
	
	Если ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
		Элементы.ТаблицаДвиженийСумма.Заголовок = СтрШаблон(НСтр("ru = 'Сумма (%1)'"), Объект.ВалютаДокумента);
	Иначе
		Элементы.ТаблицаДвиженийСумма.Заголовок = НСтр("ru = 'Сумма'");
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры // УстановитьВидимость()

&НаСервере
Процедура ПриИзмененииДатыНачалаНаСервере()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииПланируемойДатаОперации(ЭтотОбъект);
	// Конец ОПК
	ВыполнитьКонтрольДокументаНаСервере();

КонецПроцедуры

&НаСервере
Процедура ДокументПланированияПриИзмененииНаСервере()
	
	ЗаявкиНаОперации.ПриИзмененииДокументаПланирования(ЭтаФорма);
	ВыполнитьКонтрольДокументаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСуммыДокумента()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииСуммыДокумента(ЭтотОбъект);
	// Конец ОПК
	ВыполнитьКонтрольДокументаНаСервере();

КонецПроцедуры // ПриИзмененииСуммыДокумента()

&НаСервере
Процедура ТаблицаДвиженийПриИзмененииНаСервере()
	
	Объект.СуммаДокумента=Объект.ДвиженияОперации.Итог("Сумма");
	
	ВыполнитьКонтрольДокументаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтатьиБюджета()

	ПриИзмененииСтатьиБюджетаНаСервере(Элементы.ТаблицаДвижений.ТекущаяСтрока);

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаОперацииНаСервере()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииВидаОперацииУХ(ЭтотОбъект);
	// Конец ОПК
	
	ЗаявкиНаОперацииКлиентСервер.УстановитьОграничениеТипаКонтрагента(ЭтотОбъект);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПроектПриИзмененииНаСервере()
	
	// ОПК
	ЗаявкиНаОперации.ПриИзмененииПроекта(ЭтотОбъект);
	// Конец ОПК
	ВыполнитьКонтрольДокументаНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтогДвиженийОперацийИПроверитьЛимиты() экспорт
	ТаблицаДвиженийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОснованиеОбязательстваПриИзмененииНаСервере()
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.Заполнить(ДокОбъект.ОснованиеОбязательства);
	ЗначениеВРеквизитФормы(ДокОбъект,"Объект");
	УправлениеФормой();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	// ОПК
	ПараметрыРазмещения = Новый Структура;
	ПараметрыРазмещения.Вставить("ПараметрыЭлементов", ПолучитьПараметрыЭлементов());
	ПараметрыРазмещения.Вставить("СтраницаКонтроля", ФормыУХ.РазместитьВГруппе(Элементы.ГруппаСтраницы));
	ЗаявкиНаОперации.ПриЧтенииСоздании(ЭтаФорма, ПараметрыРазмещения);
	// Конец ОПК
	
	СтавкаНДСПоДоговору = ВстраиваниеОПКПереопределяемый.ПолучитьСтавкуНДСПоДоговору(Объект.ДоговорКонтрагента, Объект.ДатаНачала);
	ЗаявкиНаОперации.ОбработатьСогласованиеВСоставеРеестра(ЭтотОбъект);
	
	ЗаявкиНаОперацииКлиентСервер.УстановитьОграничениеТипаКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыЭлементов()
	
	ПараметрыЭлементов = ФормыУХ.ПолучитьПараметрыЭлементовПоУмолчанию();
	ПараметрыЭлементов.ГруппаВ.ОтображатьЗаголовок  = Ложь;
	ПараметрыЭлементов.ГруппаГ.ОтображатьЗаголовок  = Ложь;
	
	Возврат ПараметрыЭлементов;
	
КонецФункции

&НаСервере
Процедура ВыполнитьОбработкуСобытийЗаявки(ИмяСобытия, Параметр, СобытияОбновленияПП = "")
	ЗаявкиНаОперации.ОбработкаОповещенияФормыЗаявки(ЭтотОбъект, ИмяСобытия, Параметр, СобытияОбновленияПП);
КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ВызовыОбщихПроцедурИФункцийСогласованияОбъектов

&НаКлиенте
Процедура СостояниеЗаявкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = ЗаявкиНаОперацииКлиентСервер.РеквизитСостояниеЗаявки(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	ПроверитьСохранениеИзменитьСтатус(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСостояниеЗаявкиКлиент(ВыбранноеЗначение)
	ВстраиваниеОПККлиентПереопределяемый.ИзменитьСостояниеЗаявкиКлиент(ВыбранноеЗначение, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЗаявкиОбработкаВыбораПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Записать();
		ИзменитьСостояниеЗаявкиКлиент(Параметры.ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИзменитьСостояниеЗаявки(Ссылка, Состояние)
	Возврат ВстраиваниеОПКПереопределяемый.ПеревестиЗаявкуВПроизвольноеСостояние(Ссылка, Состояние, , , ЭтотОбъект);
КонецФункции

&НаКлиенте
Процедура ПринятьКСогласованию_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ПринятьКСогласованию(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияСогласования_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ИсторияСогласования(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьДокумент_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.СогласоватьДокумент(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСогласование_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ОтменитьСогласование(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура МаршрутСогласования_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.МаршрутСогласования(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область НАЛОГИ

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбора(Элемент, СписокДанных)
	
	Элемент.СписокВыбора.Очистить();
	Для каждого ЭлементДанных Из СписокДанных Цикл
		Элемент.СписокВыбора.Добавить(ЭлементДанных.Значение, ЭлементДанных.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДвиженийПриИзменении(Элемент)
	ТаблицаДвиженийПриИзмененииНаСервере();
КонецПроцедуры

// Проверяет сохранение текущего объекта и изменяет его статус
// НовоеЗначениеСтатусаВход.
&НаКлиенте
Процедура ПроверитьСохранениеИзменитьСтатус(НовоеЗначениеСтатусаВход)
	Если (Объект.Ссылка.Пустая()) ИЛИ (Модифицированность) Тогда
		СтруктураПараметров = Новый Структура("ВыбранноеЗначение", НовоеЗначениеСтатусаВход);
		ОписаниеОповещения = Новый ОписаниеОповещения("СостояниеЗаявкиОбработкаВыбораПродолжение", ЭтотОбъект, СтруктураПараметров);
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
		|Изменение состояния возможно только после записи данных.
		|Данные будут записаны.'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИзменитьСостояниеЗаявкиКлиент(НовоеЗначениеСтатусаВход);	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = ЗаявкиНаОперацииКлиентСервер.РеквизитСтатусОбъекта(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьСохранениеИзменитьСтатус(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура РеестрДокументовНажатие(Элемент)
	ЗаявкиНаОперацииКлиент.РеестрДокументовНажатие(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)

	Если ВыбранноеЗначение.РежимПерераспределения Тогда
		Объект.ДвиженияОперации.Очистить();
	КонецЕсли;
	
	ИсходнаяТаблица = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобранныхПозицийВХранилище);

	ПараметрыБюджета = ВстраиваниеОПККлиентСерверПереопределяемый.ПараметрыБюджета(РеквизитыДокумента.ВидБюджета.Значение);
	ИмяКолонкиАналитика = "Аналитика" + ПараметрыБюджета.КодБюджета;
	
	Для Каждого ТекСтрокаИсходнойТаблицы Из ИсходнаяТаблица Цикл
		
		НоваяСтрокаРасшифровка = Объект.ДвиженияОперации.Добавить();
		НоваяСтрокаРасшифровка[ПараметрыБюджета.КолонкаСтатья] = ТекСтрокаИсходнойТаблицы.СтатьяБюджета;
		Для Сч = 1 По 3 Цикл
			НоваяСтрокаРасшифровка[ИмяКолонкиАналитика + Сч] = ТекСтрокаИсходнойТаблицы["Аналитика" + Сч];	
		КонецЦикла;
		НоваяСтрокаРасшифровка.Сумма = ТекСтрокаИсходнойТаблицы.СуммаВыбрано;
		НоваяСтрокаРасшифровка.СтавкаНДС = СтавкаНДСПоДоговору;
		ЗаявкиНаОперацииКлиентСервер.ПересчитатьСуммуНДС(НоваяСтрокаРасшифровка);
	КонецЦикла;
	
	Объект.СуммаДокумента = Объект.ДвиженияОперации.Итог("Сумма");
	
	// ОПК
	АналитикиСтатейБюджетовУХ.ЗаполнитьРеквизитыАналитикВсехСтатей(ЭтаФорма);
	// Конец ОПК
	
	ПриИзмененииСуммыДокумента();
КонецПроцедуры

#КонецОбласти

#Область ПереопределяемыеСобытияЭлементовДляКонтроляДокумента
	
&НаКлиенте
Процедура Подключаемый_ТаблицаКонтроляДокументаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТД =  Элемент.ТекущиеДанные;
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	КонтрольУХКлиент.ПоказатьРасшифровкуКонтроля(Объект, ТД);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТаблицаКонтроляДокументаПриАктивизацииЯчейки(Элемент)
	Элемент.ТекущаяСтрока = неопределено;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СтатьяБюджета_ПриИзменении(Элемент)	
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
	ПриИзмененииСтатьиБюджетаНаСервере(Элемент.Имя);	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСтатьиБюджетаНаСервере(ИмяЭлемента)
	ЗаявкиНаОперации.ПриИзмененииСтатьиБюджета(ЭтаФорма, ИмяЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_АналитикаСтатьиБюджета_ПриИзменении(Элемент)
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
	ПриИзмененииАналитикиСтатьиНаСервере(Элемент.Имя);
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииАналитикиСтатьиНаСервере(ИмяЭлемента)
	ЗаявкиНаОперации.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, ИмяЭлемента);
КонецПроцедуры
#КонецОбласти 