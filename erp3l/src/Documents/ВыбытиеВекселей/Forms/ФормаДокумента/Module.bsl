
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПодготовитьФормуНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ПриИзмененииДатыДокументаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ЗаполнитьПараметрыОперацийПоУмолчанию();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВексельПриИзменении(Элемент)
	ВексельПриИзмененииНаСервере();
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СуммаОперацииПриИзменении(Элемент)
	ПересчитатьСтрокуВекселя(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчета(Команда)
	ФинансовыеИнструментыФормыКлиент.ОткрытьФормуВыбораСчетов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	ТекущийСчет = ВстраиваниеУХВызовСервера.ПолучитьСчетВзаиморасчетов(Объект.ДоговорКонтрагента, "РасчетыСПоставщиком");
	ФинансовыеИнструментыФормыКлиентСервер.ЗаполнитьСчетПоВиду(ЭтаФорма, "СчетВзаиморасчетов", ТекущийСчет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВексельНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Организация", Объект.Организация);
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПредъявлениеВекселяКПогашению") Тогда
		ПараметрыОтбора.Вставить("Должник", Объект.Контрагент);
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя") Тогда
		ПараметрыОтбора.Вставить("Должник", КонтрагентОрганизации);
	КонецЕсли;

	ПараметрыОтбора.Вставить("Дата", Объект.Дата);
	
	ПараметрыФормы = Новый Структура("Отбор,РежимВыбора", ПараметрыОтбора, Истина);
	ОткрытьФорму("Справочник.ЦенныеБумаги.Форма.ФормаПодбораВекселей", ПараметрыФормы, Элемент)

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВексельПриИзмененииНаСервере()
	ЗаполнитьСтрокуВекселя();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуВекселя()
	
	ПрочитатьПараметрыВекселя();
	ПересчитатьСтрокуВекселя(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыВекселя()
	
	РеквизитыВекселя = Новый Структура;
	РеквизитыВекселя.Вставить("Номинал", "ПараметрыЦеннойБумаги.Номинал");
	РеквизитыВекселя.Вставить("ВалютаДокумента", "ПараметрыЦеннойБумаги.ВалютаНоминала");
	РеквизитыВекселя.Вставить("ПредусмотренПроцентныйДоход", "ПараметрыЦеннойБумаги.ПредусмотренПроцентныйДоход");
	РеквизитыВекселя.Вставить("ДатаНачалаНачисленияПроцентов", "ПараметрыЦеннойБумаги.ДатаНачалаНачисленияПроцентов");
	РеквизитыВекселя.Вставить("ДатаОкончанияНачисленияПроцентов", "ПараметрыЦеннойБумаги.ДатаОкончанияНачисленияПроцентов");
	РеквизитыВекселя.Вставить("ПроцентнаяСтавка", "ПараметрыЦеннойБумаги.ПроцентнаяСтавка");
	РеквизитыВекселя.Вставить("ФормаВекселя", "ПараметрыЦеннойБумаги.ФормаВекселя");
	РеквизитыВекселя.Вставить("ДатаПлатежа", "ПараметрыЦеннойБумаги.ДатаПлатежа");
	
	ДанныеВекселя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ФинансовыйИнструмент, РеквизитыВекселя);
	ЗаполнитьЗначенияСвойств(Объект, ДанныеВекселя);
	
	Если Не Объект.ПредусмотренПроцентныйДоход Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РасчетыСКонтрагентамиГрафики.Сумма КАК ПервоначальнаяСтоимость,
		|	РасчетыСКонтрагентамиГрафики.Период КАК ДатаРегистрации
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентамиГрафики КАК РасчетыСКонтрагентамиГрафики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииРасчетов.СрезПервых(
		|				,
		|				Организация = &Организация
		|					И ПредметГрафика = &Вексель) КАК ВерсииРасчетовСрезПервых
		|		ПО РасчетыСКонтрагентамиГрафики.ВерсияГрафика = ВерсииРасчетовСрезПервых.ВерсияГрафика
		|			И РасчетыСКонтрагентамиГрафики.ПредметГрафика = ВерсииРасчетовСрезПервых.ПредметГрафика
		|ГДЕ
		|	РасчетыСКонтрагентамиГрафики.ВидДвижения = &ВидДвижения
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетыСКонтрагентамиГрафики.Период";

		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Вексель", Объект.ФинансовыйИнструмент);
		Запрос.УстановитьПараметр("ВидДвижения", ?(Объект.ВидОперации = Перечисления.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Объект, Выборка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьТекущуюСтоимостьВекселя(Объект)
	
	ДатаВыбытия = НачалоДня(Объект.Дата);
	
	Если Объект.ПредусмотренПроцентныйДоход Тогда
		Объект.ТекущаяСтоимость = 
			Объект.Номинал + 
			ФинансоваяМатематикаКлиентСервер.СуммаПроцентовЗаПериод(
				Объект.ДатаНачалаНачисленияПроцентов,
				Мин(ДатаВыбытия, Объект.ДатаОкончанияНачисленияПроцентов),
				Объект.Номинал,
				Объект.ПроцентнаяСтавка);
	ИначеЕсли Объект.ДатаПлатежа <= ДатаВыбытия Тогда
		Объект.ТекущаяСтоимость = Объект.Номинал;
	ИначеЕсли Объект.ДатаПлатежа - Объект.ДатаРегистрации <> 0 Тогда
		// дисконтный вексель, дата платежа еще не подошла.
		Объект.ТекущаяСтоимость = Объект.ПервоначальнаяСтоимость +(Объект.Номинал - Объект.ПервоначальнаяСтоимость) * (ДатаВыбытия - Объект.ДатаРегистрации)/(Объект.ДатаПлатежа - Объект.ДатаРегистрации);
	Иначе
		Объект.ТекущаяСтоимость = Объект.ПервоначальнаяСтоимость;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСтрокуВекселя(Объект)
	
	РассчитатьТекущуюСтоимостьВекселя(Объект);
	
	Объект.ФинансовыйРезультат = Объект.СуммаОперации - Объект.ТекущаяСтоимость;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДатыДокументаНаСервере()
	
	ПересчитатьСтрокуВекселя(Объект)
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ФинансовыеИнструментыФормы.ПриСозданииНаСервере_СчетаУчета(ЭтаФорма);
	
	ПрочитатьПараметрыВекселя();
	УправлениеФормой(ЭтаФорма);
	УстановитьКонтрагентаОрганизации();
	УстановитьПараметрыВыбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПредъявлениеВекселяКПогашению") Тогда
		Элементы.Организация.Заголовок = НСтр("ru = 'Векселедержатель'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Должник'");
		Элементы.Договор.Видимость = Ложь;
		Элементы.СчетаУчета.Видимость = Истина;
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя") Тогда
		
		Элементы.Организация.Заголовок = НСтр("ru = 'Должник'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Векселедержатель'");
		Элементы.Договор.Видимость = Ложь;
		Элементы.СчетаУчета.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПродажаВекселя") Тогда
		
		Элементы.Организация.Заголовок = НСтр("ru = 'Продавец (индоссант)'");
		Элементы.Контрагент.Заголовок = НСтр("ru = 'Покупатель (индоссат)'");
		Элементы.Договор.Видимость = Истина;
		Элементы.СчетаУчета.Видимость = Истина;

	КонецЕсли;
	
	ФинансовыеИнструментыФормыКлиентСервер.УправлениеФормой_СчетаУчета(Форма);

КонецПроцедуры

&НаСервере
Процедура УстановитьКонтрагентаОрганизации()
	
	КонтрагентыОрганизации = ИнтеграцияВИБПереопределяемыйУХ.ПолучитьКонтрагентовПоОрганизации(Объект.Организация);
	
	Если ЗначениеЗаполнено(КонтрагентыОрганизации) Тогда
		КонтрагентОрганизации = КонтрагентыОрганизации[0];
	Иначе
		КонтрагентОрганизации = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	УстановитьКонтрагентаОрганизации();
	УстановитьПараметрыВыбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбора(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидФинансовогоИнструмента", ПредопределенноеЗначение("Перечисление.ВидыФинансовыхИнструментов.Вексель")));
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПредъявлениеВекселяКПогашению") Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Должник", Объект.Контрагент));
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя") Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Должник", Форма.КонтрагентОрганизации));
	КонецЕсли;
	
	Элементы.Вексель.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ПараметрыОперацийГрафика
&НаКлиенте
Процедура НастроитьПараметрыОпераций(Команда)
	
	ПараметрыКоманды = ДанныеОткрытияПараметровОперацийГрафика();			
	ДоговорыКонтрагентовФормыУХКлиент.ОткрытьПараметрыОперацийГрафика(ЭтотОбъект, ПараметрыКоманды);	
	
КонецПроцедуры

&НаСервере
Функция ДанныеОткрытияПараметровОперацийГрафика()	
	
	НастройкиОпераций = Объект.ПараметрыОпераций.Выгрузить();
	АдресНастроек = ПоместитьВоВременноеХранилище(НастройкиОпераций, ЭтотОбъект.УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресНастроек", АдресНастроек);
	ПараметрыОткрытия.Вставить("ГруппаОперацийГрафика", ГруппаОперацийГрафика());
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", Ложь);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаСервере
Функция ГруппаОперацийГрафика()
	
	Возврат ?(Объект.ВидОперации = Перечисления.ВидыОперацийВыбытиеВекселя.ПогашениеВекселя,
				Справочники.ОперацииГрафиковДоговоров.ВексельВыданный,
				Справочники.ОперацииГрафиковДоговоров.ВексельПолученный);

КонецФункции	

&НаКлиенте
Процедура ЗавершитьНастройкуОпераций(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ЗагрузитьНастройкиОпераций(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОпераций(Адрес)	
	
	ТаблицаНастроек = ПолучитьИзВременногоХранилища(Адрес);
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыОперацийПоУмолчанию()	
	
	ТаблицаНастроек = РаботаСДоговорамиКонтрагентовУХ.ПараметрыОперацийГрафикаПоУмолчанию(ГруппаОперацийГрафика());
	Объект.ПараметрыОпераций.Загрузить(ТаблицаНастроек);
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
