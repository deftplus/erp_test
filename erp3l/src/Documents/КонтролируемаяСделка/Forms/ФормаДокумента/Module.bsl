#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СписокКодов = КонтролируемыеСделкиПовтИсп.СписокКодовНаименованийСделки();
	Элементы.КодНаименованияСделки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодНаименованияСделки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
	ВерсияУведомления = Документы.УведомлениеОКонтролируемыхСделках.ВерсияУведомления(Объект.УведомлениеОКонтролируемойСделке);
	
	УстановитьВидимостьКлассификаторовПредметаСделки();
	
	НастроитьКолонкиТабличнойЧасти();
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	
	ЗаполнитьПоляНаименованийКодов();
	
	УправлениеФормой(ЭтаФорма);
	
	Если Параметры.Свойство("АктивироватьСтрокуТабличнойЧасти") Тогда
		АктивироватьСтрокуТабличнойЧасти = Параметры.АктивироватьСтрокуТабличнойЧасти;
		ТекущийЭлемент = Элементы[АктивироватьСтрокуТабличнойЧасти.ТабличнаяЧасть];
		ТекущийЭлемент.ТекущаяСтрока = АктивироватьСтрокуТабличнойЧасти.НомерСтроки - 1;
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("КонтролируемаяСделкаИзменена", Объект.УведомлениеОКонтролируемойСделке);
	Если ПараметрыЗаписи.Свойство("НомерКонтролируемойСделкиИзменился") Тогда
		Оповестить("НомерКонтролируемойСделкиИзменился", Объект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Номер) И НЕ ТекущийОбъект.ПометкаУдаления Тогда
		ТекущийОбъект.Номер = КонтролируемыеСделки.ПолучитьСледующийНомерКонтролируемойСделкиУведомления(ТекущийОбъект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
	Если ТекущийОбъект.Номер <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Номер") Тогда
		ПараметрыЗаписи.Вставить("НомерКонтролируемойСделкиИзменился", Истина);
	КонецЕсли;

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииУведомленияОКонтролируемойСделкеНаСервере()

	ПараметрыУведомления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.УведомлениеОКонтролируемойСделке, "Организация, Дата, ВерсияУведомления");
	
	Объект.Организация = ПараметрыУведомления.Организация;
	Объект.Дата = ПараметрыУведомления.Дата;
	Если ВерсияУведомления <> ПараметрыУведомления.ВерсияУведомления Тогда
		ВерсияУведомления = ПараметрыУведомления.ВерсияУведомления;
		// Так как коды предмета сделки зависят от версии уведомления,
		// то после возможного изменения версии нужно обновить и коды.
		Если ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
			ПредметСделкиПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьКлассификаторовПредметаСделки();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УведомлениеОКонтролируемойСделкеПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда 
		ПриИзмененииУведомленияОКонтролируемойСделкеНаСервере();
	Иначе
		Объект.Организация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодНаименованияСделкиПриИзменении(Элемент)
	
	ИзменениеКодаНаименованияСделкиНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСделкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
		
		ПредметСделкиПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПредметаСделкиНажатие(Элемент)
	
	ПараметрыОткрытияФормы = Новый Структура("ПредметСделки, Уведомление", Объект.ПредметСделки, Объект.УведомлениеОКонтролируемойСделке);
	Если ТипЗнч(Объект.ПредметСделки) = Тип("СправочникСсылка.Номенклатура") И ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
		ОткрытьФорму("Отчет.ПредметыКонтролируемыхСделок.Форма.ФормаИзмененияДанныхПоПредметуСделки", ПараметрыОткрытияФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСделкиПриИзменении(Элемент)
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	ПересчитатьСуммыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСуммыСделокПриИзменении(Элемент)
	
	ПересчитатьСуммыДокумента();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТНВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ТНВЭД")
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКП");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИзменениеСтрокиСделки();

КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ИзменениеСтрокиСделки(Истина, Копирование);
КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ИзменениеСтрокиСделки();
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделки(ЭтоНовый = Ложь, Копирование = Ложь)
	
	ДанныеЗаполнения	= ?(Не ЭтоНовый ИЛИ Копирование, СтруктураТабличнойЧастиСделки(), Новый Структура);
	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("ЭтоНовый", ЭтоНовый);
	СтруктураПараметров.Вставить("Копирование", Копирование);
	СтруктураПараметров.Вставить("ДанныеЗаполнения", ДанныеЗаполнения);
	СтруктураПараметров.Вставить("ВерсияУведомления", ВерсияУведомления);
	СтруктураПараметров.Вставить("Валюта", Объект.Валюта);
	СтруктураПараметров.Вставить("ТипПредметаСделки", Объект.ТипПредметаСделки);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтруктураПараметров", СтруктураПараметров);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеСтрокиСделкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.КонтролируемаяСделка.Форма.Лист1Б",
		СтруктураПараметров, ЭтаФорма,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделкиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	СтруктураДанныхСтроки = РезультатЗакрытия;
	
	Если СтруктураДанныхСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЭтоНовый = ДополнительныеПараметры.СтруктураПараметров.ЭтоНовый;
	
	Если ЭтоНовый Тогда
		СтрокаТаблицы = Объект.Сделки.Добавить();
	Иначе
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтруктураДанныхСтроки);
	ПересчитатьСуммыДокумента();
	
	Модифицированность	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОКВЭД2КодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД2");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПД2КодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКПД2");
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СделкаСовершенаЧерезКомиссионераПриИзменении(Элемент)
	
	Если Не Объект.СделкаСовершенаЧерезКомиссионера Тогда
		Объект.Комиссионер = Неопределено;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПредметаСделкиПриИзменении(Элемент)
	
	НастроитьКолонкиТабличнойЧасти();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ЗаписатьИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.КодСтороныСделки.Доступность = Форма.Объект.КодНаименованияСделки <> "";
	
	Форма.Элементы.СуммаДоходов.ТолькоПросмотр  = НЕ Форма.Объект.РедактироватьСуммыСделок;
	Форма.Элементы.СуммаРасходов.ТолькоПросмотр = НЕ Форма.Объект.РедактироватьСуммыСделок;
	
	ВыборАналитики = НЕ Форма.Объект.Контрагент = Неопределено;
	Форма.Элементы.ДоговорКонтрагента.Доступность = ВыборАналитики;
	
	Версия2018 = Форма.ВерсияУведомления >= КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2018();
	
	Форма.Элементы.Комиссионер.Видимость = Версия2018;
	Форма.Элементы.СделкаСовершенаЧерезКомиссионера.Видимость = Версия2018;
	Форма.Элементы.Комиссионер.Доступность = Форма.Объект.СделкаСовершенаЧерезКомиссионера И Версия2018;
	Форма.Элементы.Комиссионер.АвтоОтметкаНезаполненного = Форма.Объект.СделкаСовершенаЧерезКомиссионера И Версия2018;
	
	Форма.Элементы.Валюта.Видимость = Версия2018;
	
	ОписаниеОснованийКонтролируемости = 
		КонтролируемыеСделкиКлиентСервер.ОписаниеОснованийКонтролируемости(Форма.ВерсияУведомления);
		
	Для Каждого Описание Из ОписаниеОснованийКонтролируемости Цикл
		Форма.Элементы[Описание.Ключ].Видимость = Описание.Значение <> Неопределено;
		Если Описание.Значение <> Неопределено Тогда
			Форма.Элементы[Описание.Ключ].Заголовок = Описание.Значение.Наименование;
			Форма.Элементы[Описание.Ключ].Подсказка = Описание.Значение.Подсказка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыПредметаСделки(ПредметСделки, ВерсияУведомления);
	
	ПараметрыПредмета = Новый Структура("НаименованиеПредметаСделки, СтранаПроисхожденияПредметаСделки, ТипПредметаСделки,
											|КодТНВЭД, КодОКП, КодОКВЭД, КодОКВЭД2, КодОКПД2");
	Если ТипЗнч(ПредметСделки)=Тип("СправочникСсылка.Номенклатура") Тогда
		Предмет = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПредметСделки, "НаименованиеПолное, ТипНоменклатуры, КодТНВЭД, КодОКП, КодОКВЭД, КодОКПД2, КодОКВЭД2");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.НаименованиеПолное;
		ПараметрыПредмета.СтранаПроисхожденияПредметаСделки = Справочники.СтраныМира.Россия;
		
		ЗаполняемыеКодыПредметовСделок = ЗаполняемыеКодыПредметовСделок(Предмет.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар, ВерсияУведомления);
		ЗаполнитьЗначенияСвойств(ПараметрыПредмета, Предмет, ЗаполняемыеКодыПредметовСделок);
		
		Если Предмет.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа ИЛИ Предмет.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.РаботаУслуга;
		Иначе
			ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.Товар;
		КонецЕсли;
	Иначе
		Предмет = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПредметСделки, "Наименование");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.Наименование;
		ПараметрыПредмета.ТипПредметаСделки          = Перечисления.ТипыПредметовКонтролируемыхСделок.ИнойОбъектГражданскихПрав;
		
	КонецЕсли;
	
	Возврат(ПараметрыПредмета);
	
КонецФункции

&НаСервере
Процедура ПриИзмененииДоговораНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "ВалютаВзаиморасчетов,ОплатаВВалюте");
		Если НЕ РеквизитыДоговора.ОплатаВВалюте Тогда
			Объект.Валюта = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		Иначе
			Объект.Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ВалютаВзаиморасчетов");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураТабличнойЧастиСделки()

	СтрокаТаблицы	= Элементы.Сделки.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;

	СтруктураТабличнойЧастиСделки = Новый Структура(
		"СтранаОтправкиТовара,
		|КодРегионаОтправкиТовара,
		|ГородОтправкиТовара,
		|НаселенныйПунктОтправкиТовара,
		|СтранаСовершенияСделки,
		|КодРегионаСовершенияСделки,
		|ГородСовершенияСделки,
		|НаселенныйПунктСовершенияСделки,
		|КодУсловийПоставки,
		|ЕдиницаИзмерения,
		|Количество,
		|ПроцентнаяСтавка,
		|Цена,
		|Стоимость,
		|ДатаСовершенияСделки");

	ЗаполнитьЗначенияСвойств(СтруктураТабличнойЧастиСделки, СтрокаТаблицы);
		
	Возврат СтруктураТабличнойЧастиСделки;

КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммыДокумента()
	
	Если Объект.РедактироватьСуммыСделок Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДоход = 0;
	СуммаРасход = 0;
	Если Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ОсуществленРасход") Тогда 
		СуммаРасход = Объект.Сделки.Итог("Стоимость");
	ИначеЕсли Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход") Тогда 
		СуммаДоход = Объект.Сделки.Итог("Стоимость");
	КонецЕсли;
	
	Если Объект.СуммаДоходов <> СуммаДоход Тогда 
		Объект.СуммаДоходов = СуммаДоход;
	КонецЕсли;
	
	Если Объект.СуммаРасходов <> СуммаРасход Тогда 
		Объект.СуммаРасходов = СуммаРасход;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораДляКодаСтороныСделки()
	
	СоответствиеКодов = КонтролируемыеСделкиПовтИсп.СоответствиеКодовСтороныСделки();
	Элементы.КодСтороныСделки.СписокВыбора.Очистить();
	
	СписокКодов = СоответствиеКодов.Получить(Объект.КодНаименованияСделки);
	Если СписокКодов<>Неопределено Тогда
		Для Каждого Код Из СписокКодов Цикл
			НовыйКод = Элементы.КодСтороныСделки.СписокВыбора.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйКод, Код);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКодСтороныСделки(Форма)
	
	СписокКодовСтороныСделки = Форма.Элементы.КодСтороныСделки.СписокВыбора;
	Если СписокКодовСтороныСделки.Количество()>1 Тогда
		Форма.Объект.КодСтороныСделки = ?(Форма.Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход"),
			СписокКодовСтороныСделки[0].Значение, СписокКодовСтороныСделки[1].Значение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НастроитьКолонкиТабличнойЧасти()
	
	ВерсияУведомления2018ИСтарше = ВерсияУведомления >= КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2018();
	
	Элементы.СделкиПроцентнаяСтавка.Видимость = 
		ВерсияУведомления2018ИСтарше
		И Объект.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.ДолговоеОбязательство;
	
	Элементы.СделкиЦена.Видимость = Не ВерсияУведомления2018ИСтарше
		ИЛИ Объект.ТипПредметаСделки <> Перечисления.ТипыПредметовКонтролируемыхСделок.ДолговоеОбязательство;
	
	Если ВерсияУведомления2018ИСтарше Тогда
		Элементы.СделкиКоличество.Формат = "ЧЦ=14; ЧДЦ=5";
	Иначе
		Элементы.СделкиКоличество.Формат = "ЧЦ=15; ЧДЦ=";
	КонецЕсли;
	
	Если Элементы.СделкиЦена.Видимость Тогда
		Если ВерсияУведомления2018ИСтарше Тогда
			Элементы.СделкиЦена.Заголовок = СтрШаблон(НСтр("ru = 'Цена, %1';
															|en = 'Price, %1'"), Объект.Валюта);
			Элементы.СделкиЦена.Формат = "ЧЦ=18; ЧДЦ=4";
		Иначе
			Элементы.СделкиЦена.Заголовок = НСтр("ru = 'Цена, руб.';
												|en = 'Price, rub.'");
			Элементы.СделкиЦена.Формат = "ЧЦ=15; ЧДЦ=";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменениеКодаНаименованияСделкиНаСервере()
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	Если Объект.КодНаименованияСделки = "" Тогда
		Объект.КодСтороныСделки = "";
	ИначеЕсли Объект.КодСтороныСделки <> "" Тогда
		Если Элементы.КодСтороныСделки.СписокВыбора.НайтиПоЗначению(Объект.КодСтороныСделки) = Неопределено Тогда
			Объект.КодСтороныСделки = "";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолеНаименованияКода(ИмяКлассификатора)

	Классификатор = Объект["Код" + ИмяКлассификатора];
	ЭтаФорма[ИмяКлассификатора+"Наименование"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Классификатор, "Наименование");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполняемыеКодыПредметовСделок(Товар, ВерсияУведомления)
	
	ЗаполняемыеКоды = Новый Массив;
	
	Если НЕ Товар И ВерсияУведомления = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКВЭД");
	КонецЕсли;
	
	Если НЕ Товар И ВерсияУведомления > КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКВЭД2");
	КонецЕсли;
	
	Если Товар Тогда
		ЗаполняемыеКоды.Добавить("КодТНВЭД");
	КонецЕсли;
	
	Если Товар И ВерсияУведомления = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКП");
	КонецЕсли;
	
	Если Товар И ВерсияУведомления > КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКПД2");
	КонецЕсли;
	
	Возврат СтрСоединить(ЗаполняемыеКоды, ",");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоляНаименованийКодов()
	
	ЗаполнитьПолеНаименованияКода("ТНВЭД");
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	ЗаполнитьПолеНаименованияКода("ОКВЭД2");
	ЗаполнитьПолеНаименованияКода("ОКП");
	ЗаполнитьПолеНаименованияКода("ОКПД2");
	
КонецПроцедуры

&НаСервере
Процедура ПредметСделкиПриИзмененииНаСервере()
	
	ПараметрыПредметаСделки = ПолучитьПараметрыПредметаСделки(Объект.ПредметСделки, ВерсияУведомления);
	
	Если ЗначениеЗаполнено(ПараметрыПредметаСделки.ТипПредметаСделки) Тогда
		Объект.ТипПредметаСделки = ПараметрыПредметаСделки.ТипПредметаСделки;
		НастроитьКолонкиТабличнойЧасти();
	КонецЕсли;
	
	Объект.НаименованиеПредметаСделки = ПараметрыПредметаСделки.НаименованиеПредметаСделки;
	Если ЗначениеЗаполнено(ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки) Тогда
		Объект.СтранаПроисхожденияПредметаСделки = ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки;
	КонецЕсли;
	
	Объект.КодТНВЭД  = ПараметрыПредметаСделки.КодТНВЭД;
	Объект.КодОКП    = ПараметрыПредметаСделки.КодОКП;
	Объект.КодОКВЭД  = ПараметрыПредметаСделки.КодОКВЭД;
	Объект.КодОКВЭД2 = ПараметрыПредметаСделки.КодОКВЭД2;
	Объект.КодОКПД2 = ПараметрыПредметаСделки.КодОКПД2;
	
	ЗаполнитьПоляНаименованийКодов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКлассификаторовПредметаСделки()
	
	ВерсияУведомления_2012 = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012();
	
	Элементы.ОКВЭД.Видимость  = ВерсияУведомления <= ВерсияУведомления_2012;
	Элементы.ОКВЭД2.Видимость = ВерсияУведомления > ВерсияУведомления_2012;
	Элементы.ОКП.Видимость    = ВерсияУведомления <= ВерсияУведомления_2012;
	Элементы.ОКПД2.Видимость  = ВерсияУведомления > ВерсияУведомления_2012;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
