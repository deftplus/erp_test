
&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюЭлементовФормы(КонтекстФормы)
	
	Элементы = КонтекстФормы.Элементы;
	Объект = КонтекстФормы.Объект;
	
	Элементы.ВалютныеОперацииЗаполнить.Доступность = ЗначениеЗаполнено(Объект.БанковскийСчет);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	КодыВидовПлатежа = СправкиОВалютныхОперацияхПовтИспУХ.ПолучитьКодыПризнаковПлатежа();
	ОбщегоНазначенияУХ.ЗагрузитьВСписокЗначений(
		КодыВидовПлатежа, 
		Элементы.ВалютныеОперацииПризнакПлатежа.СписокВыбора);
		
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	АктуальныйДокументСсылка = Документы.СведенияОВалютныхОперациях.ПолучитьАктуальныйДокумент(
		Объект.Дата,
		Объект.Банк,
		Объект.Организация,
		Объект.БанковскийСчет);
	
	УправлениеФормойНаСервере()

КонецПроцедуры

&НаСервере
Процедура УправлениеФормойНаСервере()
	
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьВалютныеОперацииПродолжение", ЭтотОбъект);
	Если Объект.ВалютныеОперации.Количество() Тогда
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Заполнить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВалютныеОперацииПродолжение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьВалютныеОперацииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВалютныеОперацииНаСервере()

	Объект.ВалютныеОперации.Очистить();
	// Заполнение осуществляем по данным следующих документов:
	// ПоступлениеНаРасчетныйСчет, СписаниеСРасчетногоСчета, Платежное Поручение (только неоплаченное).
	// Платежное поручение здесь фигурирует потому, что зачастую требуется при подаче Заявления на перевод валюты
	// прилагать СВО, в которой должны фигурировать данные самого заявления.
	Запрос = Новый Запрос;
	Запрос.Текст = ДенежныеСредстваВстраиваниеУХ.ПолучитьТекстЗапросаВалютныхОпераций();
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("СчетОрганизации", Объект.БанковскийСчет);
	
	Объект.ВалютныеОперации.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура ВалютныеОперацииДокументПриИзменении(Элемент)
	
	ТекДанные = Элементы.ВалютныеОперации.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(ТекДанные, ПолучитьДанныеВалютнойОперации(ТекДанные.Документ));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВалютнойОперации(Документ)
	
	СтруктураРезультат = Новый Структура;	
	
	Если ТипЗнч(Документ) = ВстраиваниеУХ.ТипДокументСсылкаПоступлениеНаРасчетныйСчет() Тогда
		
		СтруктураРезультат.Вставить("ПризнакПлатежа", "1");
		
	ИначеЕсли ТипЗнч(Документ) = ВстраиваниеУХ.ТипДокументСсылкаПлатежноеПоручение() 
				ИЛИ ТипЗнч(Документ) = ВстраиваниеУХ.ТипДокументСсылкаСписаниеСРасчетногоСчета() Тогда
		
		СтруктураРезультат.Вставить("ПризнакПлатежа",		"2");

	КонецЕсли;
	
	СтруктураРезультат.Вставить("СуммаОперации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "СуммаДокумента"));
	
	Возврат СтруктураРезультат;
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
