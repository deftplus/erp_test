
#Область ВызовыОбщихПроцедурИФункцийСогласованияОбъектов

&НаСервере
Процедура ОпределитьСостояниеОбъекта(ОбновитьОтветственныхВход = Ложь)
	ВстраиваниеОПКПереопределяемый.ОпределитьСостояниеЗаявки(ЭтаФорма, ОбновитьОтветственныхВход);
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбъектаПриИзменении_Подключаемый()
	НовоеЗначениеСтатуса = РеквизитСтатусОбъекта(ЭтаФорма);
	ПроверитьСохранениеИзменитьСтатус(НовоеЗначениеСтатуса);	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = РеквизитСтатусОбъекта(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьСохранениеИзменитьСтатус(ВыбранноеЗначение);
КонецПроцедуры

// Проверяет сохранение текущего объекта и изменяет его статус
// НовоеЗначениеСтатусаВход.
&НаКлиенте
Процедура ПроверитьСохранениеИзменитьСтатус(НовоеЗначениеСтатусаВход)
	Если (Объект.Ссылка.Пустая()) ИЛИ (ЭтаФорма.Модифицированность) Тогда
		СтруктураПараметров = Новый Структура("ВыбранноеЗначение", НовоеЗначениеСтатусаВход);
		ОписаниеОповещения = Новый ОписаниеОповещения("СостояниеЗаявкиОбработкаВыбораПродолжение", ЭтотОбъект, СтруктураПараметров);
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
		|Изменение состояния возможно только после записи данных.
		|Данные будут записаны.'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИзменитьСостояниеЗаявкиКлиент(НовоеЗначениеСтатусаВход);	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЗаявкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = РеквизитСостояниеЗаявки(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	ПроверитьСохранениеИзменитьСтатус(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСостояниеЗаявкиКлиент(ВыбранноеЗначение)
	ВстраиваниеОПККлиентПереопределяемый.ИзменитьСостояниеЗаявкиКлиент(ВыбранноеЗначение, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЗаявкиОбработкаВыбораПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Записать();
		ИзменитьСостояниеЗаявкиКлиент(Параметры.ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИзменитьСостояниеЗаявки(Ссылка, Состояние)
	Возврат ВстраиваниеОПКПереопределяемый.ПеревестиЗаявкуВПроизвольноеСостояние(Ссылка, Состояние, , , ЭтаФорма);
КонецФункции

&НаКлиенте
Процедура ПринятьКСогласованию_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ПринятьКСогласованию(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияСогласования_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ИсторияСогласования(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьДокумент_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.СогласоватьДокумент(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСогласование_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.ОтменитьСогласование(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура МаршрутСогласования_Подключаемый() Экспорт
	ВстраиваниеОПККлиентПереопределяемый.МаршрутСогласования(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЭлементаОрганизации_Подключаемый(Элемент) Экспорт
	ОпределитьСостояниеОбъекта(Истина);		
	ВыполнитьПредыдущийОбработчикПриИзмененииОрганизации(Элемент);
КонецПроцедуры		// ПриИзмененииЭлементаОрганизации_Подключаемый()

// Возвращает значение реквизита СостояниеЗаявки на форме ФормаВход.
// Т.к. данный реквизит генерируется кодом, обращение к нему напрямую из
// кода недоступно.
&НаКлиентеНаСервереБезКонтекста
Функция РеквизитСостояниеЗаявки(ФормаВход)
	Возврат ФормаВход["СостояниеЗаявки"];
КонецФункции

// Возвращает значение реквизита СтатусОбъекта на форме ФормаВход.
// Т.к. данный реквизит генерируется кодом, обращение к нему напрямую из
// кода недоступно.
&НаКлиентеНаСервереБезКонтекста
Функция РеквизитСтатусОбъекта(ФормаВход)
	Возврат ФормаВход["СтатусОбъекта"];
КонецФункции

// Возвращает значение реквизита Согласующий на форме ФормаВход.
// Т.к. данный реквизит генерируется кодом, обращение к нему напрямую из
// кода недоступно.
&НаКлиентеНаСервереБезКонтекста
Функция РеквизитСогласующий(ФормаВход)
	Возврат ФормаВход["Согласующий"];
КонецФункции

// Выполняет обработчик ПриИзменении, сопоставленный по умолчанию для элемента Элемент
&НаКлиенте
Процедура ВыполнитьПредыдущийОбработчикПриИзмененииОрганизации(Элемент)
	#Если НЕ ВебКлиент Тогда
	ИмяЭлемента = Элемент.Имя;
	Если ЗначениеЗаполнено(ИмяЭлемента) Тогда
		Для Каждого ТекОбработчикиИзмененияОрганизации Из ЭтаФорма["ОбработчикиИзмененияОрганизации"] Цикл
			Если СокрЛП(ТекОбработчикиИзмененияОрганизации.ИмяРеквизита) = СокрЛП(ИмяЭлемента) Тогда
				СтрокаВыполнения = ТекОбработчикиИзмененияОрганизации.ИмяОбработчика + "(Элемент);";
				Выполнить СтрокаВыполнения;
			Иначе
				// Выполняем поиск далее.
			КонецЕсли; 
		КонецЦикла;	
	Иначе
		// Передан пустой элемент.
	КонецЕсли;
	#КонецЕсли
КонецПроцедуры		// ВыполнитьПредыдущийОбработчикПриИзмененииОрганизации()	

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства	
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
		Модифицированность = Истина;
	КонецЕсли;
	
	#Область УХ_Согласование
	ВстраиваниеОПКПереопределяемый.НарисоватьПанельСогласованияИОпределитьСостояниеОбъекта(ЭтаФорма, Элементы.ГруппаНомерДата);
	Если Элементы.ГруппаСтраницы.ТолькоПросмотр Тогда
		// Разблокировать таблицу корректировок
		Элементы.ГруппаСтраницы.ТолькоПросмотр = Ложь;
		Элементы.СтраницаЛимиты.ТолькоПросмотр = Ложь;
		Элементы.СтраницаПланы.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	#КонецОбласти
	
	УстановитьУсловноеОформление();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
	ПодготовитьФормуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
	Если Параметры.Ключ.Пустая() Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	АналитикиСтатейБюджетовУХ.ЗаполнитьРеквизитыАналитикВсехСтатей(ЭтотОбъект);
	УстановитьСостояниеДокумента();
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
    	ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства	
	
	#Область УХ_Согласование
	Если ИмяСобытия = "ОбъектСогласован" Тогда
		ОпределитьСостояниеОбъекта();
	ИначеЕсли ИмяСобытия = "ОбъектОтклонен" Тогда
		ОпределитьСостояниеОбъекта();
	ИначеЕсли ИмяСобытия = "МаршрутИнициализирован" Тогда
		ОпределитьСостояниеОбъекта();
	ИначеЕсли ИмяСобытия = "СостояниеЗаявкиПриИзменении" Тогда
		ОпределитьСостояниеОбъекта();
	КонецЕсли;
	#КонецОбласти
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	ЗаполнитьПоДаннымОснования();
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ТекущееОснование", Объект.Основание);
	ДопПараметры.Вставить("Организация", Объект.Организация);
	ДопПараметры.Вставить("Контрагент", Объект.Контрагент);
	ДопПараметры.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОснованиеНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Документ.ЗаявкаНаКорректировкуЛимитов.Форма.ФормаВыбораОснования", ДопПараметры, Элемент,,,,
		ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, Результат, "Организация, Контрагент, ДоговорКонтрагента, Основание");
	ЗаполнитьПоДаннымОснования();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СтатьяБюджета_ПриИзменении(Элемент)
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_АналитикаСтатьиБюджета_ПриИзменении(Элемент)
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииАналитикиСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПланы

&НаКлиенте
Процедура ПланыПередНачаломИзменения(Элемент, Отказ)
	АналитикиСтатейБюджетовУХКлиент.ПередНачаломИзмененияСтрокиТаблицыФормы(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ПланыСтатьяБюджетаПриИзменении(Элемент)
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЛимитыПоБюджетам

&НаКлиенте
Процедура ЛимитыПоБюджетамПередНачаломИзменения(Элемент, Отказ)
	АналитикиСтатейБюджетовУХКлиент.ПередНачаломИзмененияСтрокиТаблицыФормы(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПоБюджетамВидБюджетаПриИзменении(Элемент)
	ПриИзмененииВидаБюджетаПериодаЛимитированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПоБюджетамЦФОПриИзменении(Элемент)
	
	УстановитьВалютуЛимитированияПоСтроке(Элементы.ЛимитыПоБюджетам.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПоБюджетамПериодЛимитированияПриИзменении(Элемент)
	ПриИзмененииВидаБюджетаПериодаЛимитированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПоБюджетамПериодЛимитированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТД = Элементы.ЛимитыПоБюджетам.ТекущиеДанные;
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТД.ВидБюджета) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Выбор периода невозможен. Не заполнено поле ""Вид бюджета"".'"));
		Возврат;
	КонецЕсли;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ВидБюджета", ТД.ВидБюджета);
	ДопПараметры.Вставить("ИдентификаторСтроки", Элементы.ЛимитыПоБюджетам.ТекущаяСтрока);
	ДопПараметры.Вставить("ТекущаяСтрока", ТД.ПериодЛимитирования);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборПериодаЛимитированияЗавершение", ЭтотОбъект, ДопПараметры);
	
	ОткрытьФорму("Документ.ЗаявкаНаКорректировкуЛимитов.Форма.ФормаВыбораПериодаЛимитирования", ДопПараметры, ЭтотОбъект,,,,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПоБюджетамСтатьяБюджетаПриИзменении(Элемент)
	АналитикиСтатейБюджетовУХКлиент.ПриИзмененииСтатьиБюджета(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПоДаннымОснования(Команда)
	ЗаполнитьПоДаннымОснования();
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
    УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ВстраиваниеОПКПереопределяемый.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	//
	УстановитьСостояниеДокумента();

	// Данные для создания полей Аналитика* для элементов Статьи бюджетов
	АСБ = АналитикиСтатейБюджетовУХ;
	
	МассивОписанийСтатей = Новый Массив;
	АналитикиСтатейБюджетовУХ.СтатьяИАналитикиТабличнойЧастиВТаблицеФормы(МассивОписанийСтатей, 
		"Планы",  "Планы",
		"СтатьяБюджета", "ПланыСтатьяБюджета",
		"Аналитика%1", "ПланыАналитика%1",
		ФормыУХ.РазместитьВГруппе("ПланыГруппаАналитика1"));
	АналитикиСтатейБюджетовУХ.СтатьяИАналитикиТабличнойЧастиВТаблицеФормы(МассивОписанийСтатей, 
		"ЛимитыПоБюджетам",  "ЛимитыПоБюджетам",
		"СтатьяБюджета", "ЛимитыПоБюджетамСтатьяБюджета",
		"Аналитика%1", "ЛимитыПоБюджетамАналитика%1",
		ФормыУХ.РазместитьВГруппе("ЛимитыПоБюджетамГруппаАналитика1"));
	
	МассивОписанийСтатей[1].ТолькоЛимитируемыеАналитики = Истина;
	
	// Создать элементы формы для статей бюджетов и их аналитик
	АналитикиСтатейБюджетовУХ.СоздатьСтатьиБюджетовИАналитики(ЭтотОбъект, МассивОписанийСтатей);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымОснования()
	
	Документы.ЗаявкаНаКорректировкуЛимитов.ЗаполнитьТаблицыПоДокументуОснованию(ЭтаФорма.Объект, Объект.Основание);
	АналитикиСтатейБюджетовУХ.ЗаполнитьРеквизитыАналитикВсехСтатей(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ЛимитыПоБюджетам.ТолькоПросмотр = ЗначениеЗаполнено(Объект.Основание);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаБюджетаНаСервере()
	
	// Получить валюту
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаЛимитированияЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТД = Объект.ЛимитыПоБюджетам.НайтиПоИдентификатору(ДопПараметры.ИдентификаторСтроки);
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТД, Результат, "ИспользоватьЛимитирование, ПериодЛимитирования, СпособОпределенияВалютыЛимитирования");
	
	УстановитьВалютуЛимитированияПоСтроке(ДопПараметры.ИдентификаторСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСпособаОпределенияВалютыЛимитирования()
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВалютуЛимитированияПоСтроке(ИдентификаторСтроки)
	
	ТД = Объект.ЛимитыПоБюджетам.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ТД = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТД.СпособОпределенияВалютыЛимитирования = Перечисления.СпособыОпределенияВалютыЛимитирования.ВалютаУпрУчета Тогда
		ТД.Валюта = ВстраиваниеОПКПереопределяемый.КонстантаВалютаУправленческогоУчета();
	ИначеЕсли ТД.СпособОпределенияВалютыЛимитирования = Перечисления.СпособыОпределенияВалютыЛимитирования.ВалютаЛимитированияЦФО Тогда
		ТД.Валюта = КонтрольЛимитовУХПовтИсп.ВалютаЛимитированияЦФО(ТД.ЦФО);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.ЛимитыПоБюджетамВалюта.Имя);
	
	Способы = Новый СписокЗначений;
	Способы.Добавить(Перечисления.СпособыОпределенияВалютыЛимитирования.ВалютаУпрУчета);
	Способы.Добавить(Перечисления.СпособыОпределенияВалютыЛимитирования.ВалютаЛимитированияЦФО);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		 "Объект.ЛимитыПоБюджетам.СпособОпределенияВалютыЛимитирования", ВидСравненияКомпоновкиДанных.ВСписке, Способы,,Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",            Истина);
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаБюджетаПериодаЛимитированияНаСервере()
	
	ТД = Объект.ЛимитыПоБюджетам.НайтиПоИдентификатору(Элементы.ЛимитыПоБюджетам.ТекущаяСтрока);
	Если ТД = неопределено ИЛИ НЕ ЗначениеЗаполнено(ТД.ВидБюджета) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидБюджета", ТД.ВидБюджета);
	Запрос.УстановитьПараметр("ПериодЛимитирования", ТД.ПериодЛимитирования);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыЛимитирования.Период КАК Период,
	|	ПараметрыЛимитирования.ВидБюджета КАК ВидБюджета,
	|	ПараметрыЛимитирования.ПериодичностьЛимитирования КАК ПериодичностьЛимитирования,
	|	ПараметрыЛимитирования.ИспользоватьЛимитирование КАК ИспользоватьЛимитирование,
	|	ПараметрыЛимитирования.СпособОпределенияВалютыЛимитирования КАК СпособОпределенияВалютыЛимитирования,
	|	Периоды.Ссылка КАК ПериодЛимитирования,
	|	Периоды.ДатаНачала КАК ДатаНачала
	|ИЗ
	|	РегистрСведений.ПараметрыЛимитирования КАК ПараметрыЛимитирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Периоды КАК Периоды
	|		ПО ПараметрыЛимитирования.ПериодичностьЛимитирования = Периоды.Периодичность
	|			И Периоды.Произвольный = ЛОЖЬ
	|			И Периоды.Ссылка = &ПериодЛимитирования
	|ГДЕ
	|	ПараметрыЛимитирования.ВидБюджета = &ВидБюджета";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ТД, Выборка, "ИспользоватьЛимитирование, ПериодЛимитирования, СпособОпределенияВалютыЛимитирования");
	КонецЕсли;
	
	//
	УстановитьВалютуЛимитированияПоСтроке(Элементы.ЛимитыПоБюджетам.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

