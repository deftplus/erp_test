#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыДинамическогоСписка(
		Элементы.СписокЗаявокНаОплату, 
		КэшируемыеПроцедурыОПК.ТипЗаявкаНаОплату());
	УстановитьПараметрыДинамическогоСписка(
		Элементы.СписокЗаявокНаРасход, 
		КэшируемыеПроцедурыОПК.ТипЗаявкаНаРасход());
	
	//
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
		ОрганизацияИспользовать = ЗначениеЗаполнено(Организация);
	КонецЕсли;
	
	Если Параметры.Свойство("Контрагент") Тогда
		Контрагент = Параметры.Контрагент;
		КонтрагентИспользовать = ЗначениеЗаполнено(Контрагент);
	КонецЕсли;
	
	Если Параметры.Свойство("ДоговорКонтрагента") Тогда
		ДоговорКонтрагента = Параметры.ДоговорКонтрагента;
		ДоговорКонтрагентаИспользовать = ЗначениеЗаполнено(ДоговорКонтрагента);
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущееОснование") Тогда
		ТипОснования = ТипЗнч(Параметры.ТекущееОснование);
		Если ТипОснования = КэшируемыеПроцедурыОПК.ТипЗаявкаНаОплату() Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаявкиНаОплату;
			Элементы.СписокЗаявокНаОплату.ТекущаяСтрока = Параметры.ТекущееОснование;
		ИначеЕсли ТипОснования = КэшируемыеПроцедурыОПК.ТипЗаявкаНаРасход() Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаявкиНаРасход;
			Элементы.СписокЗаявокНаРасход.ТекущаяСтрока = Параметры.ТекущееОснование;
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВерсияСоглашенияКоммерческийДоговор") Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДоговорыСКонтрагентами;
			Элементы.СписокДоговоров.ТекущаяСтрока = Параметры.ТекущееОснование;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоКорректировкаЛимитов") Тогда
		ЭтоКорректировкаЛимитов = Параметры.ЭтоКорректировкаЛимитов;
	Иначе
		ЭтоКорректировкаЛимитов = Ложь;
	КонецЕсли;
	
	Элементы.СтраницаЗаявкаНаКорректировкуЛимитов.Видимость = ЭтоКорректировкаЛимитов;
	
	УстановитьУсловноеОформление();
	
	СформироватьСвязиПараметровВыбора();
	УстановитьДинамическиеОтборы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
&НаКлиенте
Процедура КонтрагентИспользоватьПриИзменении(Элемент)
	СформироватьСвязиПараметровВыбора();
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияИспользоватьПриИзменении(Элемент)
	СформироватьСвязиПараметровВыбора();
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаИспользоватьПриИзменении(Элемент)
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Контрагент) И НЕ КонтрагентИспользовать Тогда
		КонтрагентИспользовать = Истина;
		СформироватьСвязиПараметровВыбора();
	КонецЕсли;
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Организация) И НЕ ОрганизацияИспользовать Тогда
		ОрганизацияИспользовать = Истина;
		СформироватьСвязиПараметровВыбора();
	КонецЕсли;
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДоговорКонтрагента) И НЕ ДоговорКонтрагентаИспользовать Тогда
		ДоговорКонтрагентаИспользовать = Истина;
		СформироватьСвязиПараметровВыбора();
	КонецЕсли;
	УстановитьДинамическиеОтборы(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаявкаНаОплату

&НаКлиенте
Процедура СписокЗаявокНаОплатуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		ВыбратьИЗакрыть(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаявкаНаРасход

&НаКлиенте
Процедура СписокЗаявокНаРасходВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		ВыбратьИЗакрыть(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоговорыКонтрагентов

&НаКлиенте
Процедура СписокДоговоровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВыбраннаяСтрока) 
		И ТипЗнч(ВыбраннаяСтрока) = Тип("ДокументСсылка.ВерсияСоглашенияКоммерческийДоговор") Тогда
		ВыбратьИЗакрыть(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоговорыКонтрагентов

&НаКлиенте
Процедура СписокЗаявокНаКорректировкуЛимитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		ВыбратьИЗакрыть(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура Выбрать(Команда)
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаявкаНаКорректировку Тогда
		СписокЗаявокНаКорректировкуЛимитовВыбор(Элементы.СписокЗаявкаНаКорректировкуЛимитов, Элементы.СписокЗаявкаНаКорректировкуЛимитов.ТекущаяСтрока, , Истина);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаявкиНаОплату Тогда
		СписокЗаявокНаОплатуВыбор(Элементы.СписокЗаявокНаОплату, Элементы.СписокЗаявокНаОплату.ТекущаяСтрока, , Истина);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗаявкиНаРасход Тогда
		СписокЗаявокНаРасходВыбор(Элементы.СписокЗаявокНаРасход, Элементы.СписокЗаявокНаРасход.ТекущаяСтрока, , Истина);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДоговорыСКонтрагентами Тогда
		СписокДоговоровВыбор(Элементы.СписокДоговоров, Элементы.СписокДоговоров.ТекущаяСтрока, , Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Процедура СформироватьСвязиПараметровВыбора()
	
	СвязиПараметров = Новый Массив;
	
	Если ОрганизацияИспользовать Тогда
		СвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Организация"));
	КонецЕсли;
	
	Если КонтрагентИспользовать Тогда
		СвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Контрагент"));
	КонецЕсли;
	
	Элементы.ДоговорКонтрагента.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметров);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДинамическиеОтборы(Форма)
	
	// Контрагент
	Если Форма.ЭтоКорректировкаЛимитов Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявкаНаКорректировкуЛимитов,
			"Контрагент", Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно, , 
			Форма.КонтрагентИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаОплату,
		"Контрагент", Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.КонтрагентИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаРасход,
		"Контрагент", Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.КонтрагентИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокДоговоров,
		"ДоговорКонтрагента.Владелец", Форма.Контрагент, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.КонтрагентИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	// Организация
	Если Форма.ЭтоКорректировкаЛимитов Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявкаНаКорректировкуЛимитов,
			"Организация", Форма.Организация, ВидСравненияКомпоновкиДанных.Равно, , 
			Форма.ОрганизацияИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаОплату,
		"Организация", Форма.Организация, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ОрганизацияИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаРасход,
		"Организация", Форма.Организация, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ОрганизацияИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокДоговоров,
		"Организация", Форма.Организация, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ОрганизацияИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	// ДоговорКонтрагента
	Если Форма.ЭтоКорректировкаЛимитов Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявкаНаКорректировкуЛимитов,
			"ДоговорКонтрагента", Форма.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно, , 
			Форма.ДоговорКонтрагентаИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаОплату,
		"ДоговорКонтрагента", Форма.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ДоговорКонтрагентаИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗаявокНаРасход,
		"ДоговорКонтрагента", Форма.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ДоговорКонтрагентаИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокДоговоров,
		"ДоговорКонтрагента", Форма.ДоговорКонтрагента, ВидСравненияКомпоновкиДанных.Равно, , 
		Форма.ДоговорКонтрагентаИспользовать, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
		
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, Элементы.СписокДоговоровВерсияСоглашения.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		ЭлементУО.Отбор,
		"СписокДоговоров.ВерсияСоглашения",
		ВидСравненияКомпоновкиДанных.Равно,
		Новый ПолеКомпоновкиДанных("СписокДоговоров.ТекущаяВерсияСоглашения"),
		,
		Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));
	 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(ВыбранноеЗначение)
	
	Результат = Новый Структура;
	Результат.Вставить("Организация", Организация);
	Результат.Вставить("Контрагент", Контрагент);
	Результат.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	Результат.Вставить("Основание", ВыбранноеЗначение);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка(ДинамическийСписок, ТипЗаявка)
	
	ПустаяЗаявка = Новый (ТипЗаявка);
	МетаданныеЗаявки = ПустаяЗаявка.Метаданные();
	
	Реквизиты = ЗаявкиНаОперации.РеквизитыДокументаЗаявка(ТипЗаявка);
	
	Поля = Новый Структура("Ссылка, Дата, Номер, Организация, Контрагент, ДоговорКонтрагента, ДатаОперации, СуммаДокумента, ВалютаДокумента, ВидОперацииУХ, ЦФО, Проект, Ответственный, Комментарий");
	Поля.Организация = Реквизиты.Организация.ИмяРеквизита;
	Поля.Контрагент = Реквизиты.Контрагент.ИмяРеквизита;
	Поля.ДоговорКонтрагента = Реквизиты.ДоговорКонтрагента.ИмяРеквизита;
	Поля.ДатаОперации = Реквизиты.ПланируемаяДатаОперации.ИмяРеквизита;
	Если Реквизиты.ФормаОплаты.ЕстьРеквизит Тогда
		Поля.Вставить("ФормаОплаты", Реквизиты.ФормаОплаты.ИмяРеквизита);
	КонецЕсли;
	Поля.СуммаДокумента = Реквизиты.СуммаДокумента.ИмяРеквизита;
	Поля.ВалютаДокумента = Реквизиты.ВалютаДокумента.ИмяРеквизита;
	Поля.ЦФО = Реквизиты.ЦФО.ИмяРеквизита;
	Поля.Проект = Реквизиты.Проект.ИмяРеквизита;
	Поля.Ответственный = Реквизиты.Ответственный.ИмяРеквизита;
	
	ПоляВыбора = Новый Массив;
	Для Каждого КлючЗначение Из Поля Цикл
		
		Если ЗначениеЗаполнено(КлючЗначение.Значение) Тогда
			ИмяПоля = КлючЗначение.Значение
		Иначе
			ИмяПоля = КлючЗначение.Ключ;
		КонецЕсли;
		
		ПоляВыбора.Добавить(СтрШаблон("	Документ.%1 КАК %2", ИмяПоля, КлючЗначение.Ключ));
		
	КонецЦикла;
	
	СтрокаПоляВыбора = СтрСоединить(ПоляВыбора, 
	",
	|");
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|%1
	|ИЗ
	|	Документ.%2 КАК Документ";
	
	ПараметрыДС = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	ПараметрыДС.ТекстЗапроса = СтрШаблон(ШаблонЗапроса, СтрокаПоляВыбора, МетаданныеЗаявки.Имя);;
	ПараметрыДС.ОсновнаяТаблица = "";
	ПараметрыДС.ДинамическоеСчитываниеДанных = Истина;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(ДинамическийСписок, ПараметрыДС);
	
КонецПроцедуры

#КонецОбласти
