#Область ОписаниеПеременных
&НаКлиенте
Перем ОтветПередЗакрытием;
#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтражаетсяВБДДС = НЕ Объект.НеОтражаетсяВ_БДДС;
	
	// Заполнение реквизитов формы при открытии
	Если НЕ Объект.Претензия.Пустая() Тогда
		Претензия = Объект.Претензия;
	ИначеЕсли НЕ Параметры.Претензия.Пустая() Тогда
		Претензия = Параметры.Претензия;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Основание) Тогда
		Основание = Параметры.Основание;
		Если ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.Лоты") Тогда
			ТипПретензии = Перечисления.ТипыПретензий.Входящая;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Претензия) Тогда
		ТипПретензии = Претензия.ТипПретензии;
		Наименование = Претензия.Наименование;
		ПредметСпора = Претензия.ПредметСпора;
	Иначе
		Если Не ЗначениеЗаполнено(ТипПретензии) Тогда
			ТипПретензии = Перечисления.ТипыПретензий.Исходящая;
		КонецЕсли;
		ПретензионноИсковаяРабота.АвтозаголовокПретензии(ЭтаФорма, Объект.РасшифровкаПредметаСпора, Основание);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ЭтапПретензии) Тогда
		Если Объект.ЭтапПретензии.ПринадлежитЭлементу(Справочники.ЭтапыПретензионноИсковойРаботы.Суд) Тогда
			КэшЭтаповПринадлежностиСуду.Добавить(Объект.ЭтапПретензии);
		КонецЕсли;
	КонецЕсли;
	Если Объект.Ссылка.Пустая() Тогда
		Если Претензия.Пустая() Тогда
			Элементы.ГруппаНовая.Видимость = Истина;
			Элементы.ГруппаВерсия.Видимость = Ложь;
		Иначе
			Элементы.ГруппаНовая.Видимость = Ложь;
			Элементы.ГруппаВерсия.Видимость = Истина;
		КонецЕсли;
	Иначе
		Элементы.ГруппаНовая.Видимость = Истина;
		Элементы.ГруппаВерсия.Видимость = Ложь;
	КонецЕсли;
	УстановкаОтборовИДоступности();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ИзменениеПретензии", ПараметрыЗаписи, Объект.Ссылка);
	
	ОповеститьОЗаписиНового(Объект.Претензия);
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Претензия.Пустая() Тогда
		НоваяПретензия = Справочники.Претензии.СоздатьЭлемент();
		НоваяПретензия.Наименование = Наименование;
		НоваяПретензия.Организация = Объект.Организация;
		НоваяПретензия.Контрагент = Объект.Контрагент;
		НоваяПретензия.ТипПретензии = ТипПретензии;
		НоваяПретензия.ПредметСпора = ПредметСпора;
		НоваяПретензия.Основание = Основание;
		НоваяПретензия.Записать();
		Претензия = НоваяПретензия.Ссылка;
	Иначе
		
	КонецЕсли;
	Если НЕ Объект.НеОтражаетсяВ_БДДС Тогда
		ТекущийОбъект.Сумма = Объект.РасшифровкаПредметаСпора.Итог("Итого");
	КонецЕсли;
	ТекущийОбъект.Претензия = Претензия.Ссылка;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановкаОтборовИДоступности();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтапПретензииПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ТипПретензииПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентОжидаемогоВозвратаДолгаПриИзменении(Элемент)
	Если Объект.ПроцентОжидаемогоВозвратаДолга > 100 Тогда
		Объект.ПроцентОжидаемогоВозвратаДолга = 100;
	КонецЕсли;
	Для каждого Строка Из Объект.РасшифровкаПредметаСпора Цикл
		Строка.Итого = Строка.Всего * Объект.ПроцентОжидаемогоВозвратаДолга / 100;
	КонецЦикла;
	Объект.Сумма = Объект.РасшифровкаПредметаСпора.Итог("Итого");
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если ПустаяСтрока(ПредметСпора) Тогда
		ПредметСпора = Наименование;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СутьСпораПриИзменении(Элемент)
	Если ПустаяСтрока(Наименование) Тогда 
		Наименование = ПредметСпора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Основание1ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Основание) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("Основание1ПриИзмененииЗавершение", ЭтотОбъект), НСтр("ru = 'Заполнить претензию на основании выбранного значения?'"), РежимДиалогаВопрос.ДаНет, 20);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПоследнююВерсию(Команда)
	Если Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("РедактироватьПоследнююВерсиюЗавершение2", ЭтотОбъект), НСтр("ru = 'Форма уже была изменена. Отказаться от редактирования текущей версии и перейти к редактированию предыдущей?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		СсылкаНаВерсию = ПолучитьПоследнююВерсиюНаСервере(Объект.Ссылка, Претензия);
		Если ЗначениеЗаполнено(СсылкаНаВерсию) Тогда
			ПоказатьЗначение(, СсылкаНаВерсию);
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПоследнююВерсиюЗавершение2(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СсылкаНаВерсию = ПолучитьПоследнююВерсиюНаСервере(Объект.Ссылка, Претензия);
		Если ЗначениеЗаполнено(СсылкаНаВерсию) Тогда
			ПоказатьЗначение(, СсылкаНаВерсию);
			Модифицированность = Ложь;
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПениИШтрафы(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Новая версия претензии не записана'"));
		Возврат;
	КонецЕсли;
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПениИШтрафыЗавершение", ЭтотОбъект), НСтр("ru = 'Таблица будет перезаполнена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПениИШтрафыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПениИШтрафыНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтражаетсяВБДДСПриИзменении(Элемент)
	Объект.НеОтражаетсяВ_БДДС = Не ОтражаетсяВБДДС;
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасшифровкаПредметаСпора

&НаКлиенте
Процедура РасшифровкаПредметаСпораСуммаПриИзменении(Элемент)
	Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Всего = Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Сумма + Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Пени + Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Штраф;
	Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Итого = Элементы.РасшифровкаПредметаСпора.ТекущиеДанные.Всего * Объект.ПроцентОжидаемогоВозвратаДолга / 100;
	Объект.Сумма = Объект.РасшифровкаПредметаСпора.Итог("Итого");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановкаОтборовИДоступности()
	ЭлементыОтбораИзменений = Изменения.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Если ЭлементыОтбораИзменений.Количество() > 0 Тогда
		ПервыйЭлементОтбора = ЭлементыОтбораИзменений[0];
	Иначе	
		ПервыйЭлементОтбора = ЭлементыОтбораИзменений.Добавить();
		ПервыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Претензия");
		ПервыйЭлементОтбора.Использование = Истина;
	КонецЕсли;
	Если НЕ Претензия.Пустая() Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.ТипПретензии.ТолькоПросмотр = Истина;
		ПервыйЭлементОтбора.ПравоеЗначение = Претензия;
	Иначе
		ПервыйЭлементОтбора.ПравоеЗначение = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	Элементы.ГруппаАналитикаБюджетирования.Видимость = НЕ Объект.НеОтражаетсяВ_БДДС;
	Элементы.ГруппаОснование.Видимость = Объект.НеОтражаетсяВ_БДДС;
	Элементы.Основание.Видимость = Объект.НеОтражаетсяВ_БДДС И ЗначениеЗаполнено(Основание);
	Элементы.Основание1.Видимость = Объект.НеОтражаетсяВ_БДДС И НЕ ЗначениеЗаполнено(Основание);
	Элементы.ГруппаОрганизация.Заголовок = ?(ТипПретензии = ПредопределенноеЗначение("Перечисление.ТипыПретензий.Входящая"), НСтр("ru = 'Ответчик'"), НСтр("ru = 'Заявитель'"));
	Элементы.ГруппаКонтрагент.Заголовок = ?(ТипПретензии = ПредопределенноеЗначение("Перечисление.ТипыПретензий.Входящая"), НСтр("ru = 'Заявитель'"), НСтр("ru = 'Ответчик'"));
	Если ЗначениеЗаполнено(Объект.ЭтапПретензии) Тогда
		ЗначениеИзКэша = КэшЭтаповПринадлежностиСуду.НайтиПоЗначению(Объект.ЭтапПретензии);
		Если ЗначениеИзКэша = Неопределено Тогда
			Элементы.ГруппаСуд.Видимость = ОпределениеПринадлежностиКЭтапуСуд(Объект.ЭтапПретензии, КэшЭтаповПринадлежностиСуду);
		Иначе
			Элементы.ГруппаСуд.Видимость = Истина;
		КонецЕсли;
	Иначе
		Элементы.ГруппаСуд.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаЗакрытие.Видимость = (Объект.ЭтапПретензии = ПредопределенноеЗначение("Справочник.ЭтапыПретензионноИсковойРаботы.Закрыта"));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределениеПринадлежностиКЭтапуСуд(Этап, Кэш)
	Результат = Этап.ПринадлежитЭлементу(Справочники.ЭтапыПретензионноИсковойРаботы.Суд);
	Если Результат Тогда
		Кэш.Добавить(Этап);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура РасшифровкаПредметаСпораДокументОснованиеПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.РасшифровкаПредметаСпора.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбъектВыбора = ТекущаяСтрока.ДокументОснование;
	Если НЕ ЗначениеЗаполнено(ОбъектВыбора) Тогда 
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ОбъектВыбора) = Тип("ДокументСсылка.ОтражениеФактическихДанныхБюджетирования") Тогда 
		Реквизиты = ОбщегоНазначенияУХ.ЗначенияРеквизитовОбъекта(ОбъектВыбора, "ДоговорКонтрагента, ВалютаДокумента, ОбъектРасчетов, СуммаДокумента, ДоговорКонтрагента.СтатьяДвиженияДенежныхСредств");
		ТекущаяСтрока.СтатьяДвиженияДенежныхСредств = Реквизиты.ДоговорКонтрагентаОсновнаяСтатьяДвиженияДенежныхСредств;
		ТекущаяСтрока.ОбъектРасчетов = Реквизиты.ОбъектРасчетов;
		ТекущаяСтрока.Сумма = Реквизиты.СуммаДокумента;
		ТекущаяСтрока.Валюта = Реквизиты.ВалютаДокумента;
		ТекущаяСтрока.Всего = ТекущаяСтрока.Сумма + ТекущаяСтрока.Пени + ТекущаяСтрока.Штраф;
		ТекущаяСтрока.Итого = ТекущаяСтрока.Всего * Объект.ПроцентОжидаемогоВозвратаДолга / 100;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Основание1ПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Основание1ПриИзмененииНаСервере();
		УправлениеФормой();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Основание1ПриИзмененииНаСервере()
	ОбъектСервера = РеквизитФормыВЗначение("Объект");
	ОбъектСервера.Заполнить(Основание);
	ЗначениеВРеквизитФормы(ОбъектСервера, "Объект");
КонецПроцедуры

// Выполняет перезапись исходной претензии по данным формы. Возвращает 
// успешность выполнения операции.
&НаСервере
Функция ОбновитьПретензию()
	РезультатФункции = Истина;
	Попытка
		ОбновитьПретензию = Претензия.ПолучитьОбъект();
		ОбновитьПретензию.Наименование = Наименование;
		ОбновитьПретензию.Организация = Объект.Организация;
		ОбновитьПретензию.Контрагент = Объект.Контрагент;
		ОбновитьПретензию.ТипПретензии = ТипПретензии;
		ОбновитьПретензию.ПредметСпора = ПредметСпора;
		ОбновитьПретензию.Основание = Основание;
		ОбновитьПретензию.Записать();
	Исключение
		ТекстСообщения = НСтр("ru = 'Возникли ошибки при обновлении претензии %Претензия%: %ОписаниеОшибки%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Претензия%", Строка(Претензия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки());
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		РезультатФункции = Ложь;
	КонецПопытки;
	Возврат РезультатФункции;
КонецФункции

// Проверяет совпадение реквизитов Контрагент и Организация с сохраненными в БД.
&НаСервере
Функция СовпадаютОсновныеРеквизиты()
	// Если претензия еще не записана - проверять нечего.
	Если Не ЗначениеЗаполнено(Претензия) Тогда
		Возврат Истина;
	КонецЕсли;
	
	РеквизитыПретензии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Претензия, "Организация,Контрагент");
	РезультатФункции = (РеквизитыПретензии.Организация = Объект.Организация) И (РеквизитыПретензии.Контрагент = Объект.Контрагент);
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПретензиюЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОтветПередЗакрытием = ОбновитьПретензию();
		Записать();
	Иначе
		ОтветПередЗакрытием = Неопределено;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ СовпадаютОсновныеРеквизиты() Тогда
		Если ОтветПередЗакрытием <> Истина Тогда
			Отказ = Истина;
			Режим = РежимДиалогаВопрос.ДаНет;
			Оповещение = Новый ОписаниеОповещения("ОбновитьПретензиюЗавершение", ЭтаФорма, Параметры);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'Организация либо контрагент не совпадают с введенными ранее. Продолжить сохранение?'"), Режим, 0);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююВерсиюНаСервере(Ссылка, Претензия)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ХодПретензионноИсковойРаботыСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.ХодПретензионноИсковойРаботы.СрезПоследних(, Претензия = &Претензия) КАК ХодПретензионноИсковойРаботыСрезПоследних
		|ГДЕ
		|	ХодПретензионноИсковойРаботыСрезПоследних.Регистратор <> &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ХодПретензионноИсковойРаботыСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Претензия", Претензия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Регистратор;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПениИШтрафыНаСервере()
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	ОбъектСервер.Заполнить(Объект.Претензия.Основание);
	Объект.РасшифровкаПредметаСпора.Загрузить(ОбъектСервер.РасшифровкаПредметаСпора.Выгрузить());
КонецПроцедуры

#КонецОбласти

