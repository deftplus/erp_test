#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ПроцентОжидаемогоВозвратаДолга = 100;
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	Если ДанныеЗаполнения = Неопределено Тогда
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		//
		
		ДанныеЗаполнения.Вставить("НеОтражаетсяВ_БДДС", Ложь);
		ДанныеЗаполнения.Вставить("ТипПретензии", Перечисления.ТипыПретензий.Исходящая);
		//ДанныеЗаполнения.Вставить("ТипПретензии", Перечисления.ТипыПретензий.Входящая);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ПретензииУХ.ПросроченнаяЗадолженностьПоПараметрам(ДанныеЗаполнения);
		Для Каждого КлючЗначение Из ДанныеЗаполнения Цикл
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		Запрос.УстановитьПараметр("ДатаДляГенерации", ?(ЗначениеЗаполнено(Дата), НачалоДня(Дата), НачалоДня(ТекущаяДатаСеанса())));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		РасшифровкаПредметаСпора.Очистить();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = РасшифровкаПредметаСпора.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
			НоваяСтрока.Всего = НоваяСтрока.Сумма + НоваяСтрока.Пени;
			НоваяСтрока.Итого = НоваяСтрока.Сумма + НоваяСтрока.Пени;
		КонецЦикла;
		Сумма = РасшифровкаПредметаСпора.Итог("Итого");
	ИначеЕсли Метаданные.ОпределяемыеТипы.РасчетныйДокумент.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		МетаданныеЗаполнения = ДанныеЗаполнения.Метаданные();
		ТребуемыеРеквизиты = Новый Структура;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеЗаполнения) Тогда
			ТребуемыеРеквизиты.Вставить("Организация");
		КонецЕсли;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеЗаполнения) Тогда
			ТребуемыеРеквизиты.Вставить("Контрагент");
		КонецЕсли;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Договор", МетаданныеЗаполнения) Тогда
			ТребуемыеРеквизиты.Вставить("Договор");
		КонецЕсли;
		
		Если ТребуемыеРеквизиты.Количество() Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, ТребуемыеРеквизиты);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
		Иначе
			Реквизиты = Новый Структура;
		КонецЕсли;
		
		ТипПретензии = Перечисления.ТипыПретензий.Исходящая;
		
		Реквизиты.Вставить("РасчетныйДокумент", ДанныеЗаполнения);
		
		//
		Запрос = Новый Запрос;
		Для Каждого КлючЗначение Из Реквизиты Цикл
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		Запрос.Текст = ПретензииУХ.ПросроченнаяЗадолженностьПоРасчетномуДокументу(Реквизиты);
		Запрос.УстановитьПараметр("ДатаДляГенерации", ?(ЗначениеЗаполнено(Дата), КонецДня(Дата), КонецДня(ТекущаяДатаСеанса())));
		Запрос.УстановитьПараметр("ДокументРасчетов", ДанныеЗаполнения);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		РасшифровкаПредметаСпора.Очистить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = РасшифровкаПредметаСпора.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Итого = НоваяСтрока.Сумма + НоваяСтрока.Пени;
			НоваяСтрока.Всего = НоваяСтрока.Сумма + НоваяСтрока.Пени;
			
			Если ЗначениеЗаполнено(Выборка.Договор) И НЕ ЗначениеЗаполнено(Договор) Тогда
				Договор = Выборка.Договор;
			КонецЕсли;
			
		КонецЦикла;
		Сумма = РасшифровкаПредметаСпора.Итог("Итого");
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Претензии") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ХодПретензионноИсковойРаботыСрезПоследних.СледующийЭтапПретензии КАК ЭтапПретензии,
			|	ХодПретензионноИсковойРаботыСрезПоследних.СледующийЭтапПретензии.ВероятностьПогашенияПоУмолчанию КАК ПроцентОжидаемогоВозвратаДолга,
			|	ХодПретензионноИсковойРаботыСрезПоследних.ПозицияОрганизации КАК ПозицияОрганизации,
			|	ХодПретензионноИсковойРаботыСрезПоследних.ПозицияКонтрагента КАК ПозицияКонтрагента,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Суд КАК Суд,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Судья КАК Судья,
			|	ХодПретензионноИсковойРаботыСрезПоследних.НомерДела КАК НомерДела,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Ответственный КАК Ответственный,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Претензия КАК Претензия,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Организация КАК Организация,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Контрагент КАК Контрагент,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Договор КАК Договор,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Регистратор КАК Регистратор,
			|	ХодПретензионноИсковойРаботыСрезПоследних.Регистратор.НеОтражаетсяВ_БДДС КАК НеОтражаетсяВ_БДДС
			|ПОМЕСТИТЬ Исходные
			|ИЗ
			|	РегистрСведений.ХодПретензионноИсковойРаботы.СрезПоследних(&Период, Претензия = &Претензия) КАК ХодПретензионноИсковойРаботыСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Исходные.ЭтапПретензии КАК ЭтапПретензии,
			|	Исходные.ПроцентОжидаемогоВозвратаДолга КАК ПроцентОжидаемогоВозвратаДолга,
			|	Исходные.ПозицияОрганизации КАК ПозицияОрганизации,
			|	Исходные.ПозицияКонтрагента КАК ПозицияКонтрагента,
			|	Исходные.Суд КАК Суд,
			|	Исходные.Судья КАК Судья,
			|	Исходные.НомерДела КАК НомерДела,
			|	Исходные.Ответственный КАК Ответственный,
			|	Исходные.Претензия КАК Претензия,
			|	Исходные.Организация КАК Организация,
			|	Исходные.Контрагент КАК Контрагент,
			|	Исходные.Договор КАК Договор,
			|	Исходные.НеОтражаетсяВ_БДДС КАК НеОтражаетсяВ_БДДС
			|ИЗ
			|	Исходные КАК Исходные
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИзменениеПретензииРасшифровка.ОбъектРасчетов КАК ОбъектРасчетов,
			|	ИзменениеПретензииРасшифровка.РасчетныйДокумент КАК ДокументОснование,
			|	ИзменениеПретензииРасшифровка.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
			|	ИзменениеПретензииРасшифровка.ДнейПросрочки КАК ДнейПросрочки,
			|	ИзменениеПретензииРасшифровка.Валюта КАК Валюта,
			|	ИзменениеПретензииРасшифровка.Сумма КАК Сумма,
			|	ИзменениеПретензииРасшифровка.Пени КАК Пени,
			|	ИзменениеПретензииРасшифровка.Штраф КАК Штраф,
			|	ИзменениеПретензииРасшифровка.Всего КАК Всего,
			|	ИзменениеПретензииРасшифровка.Итого КАК Итого
			|ИЗ
			|	Документ.ИзменениеПретензии.РасшифровкаПредметаСпора КАК ИзменениеПретензииРасшифровка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Исходные КАК Исходные
			|		ПО ИзменениеПретензииРасшифровка.Ссылка = Исходные.Регистратор";
		
		Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("Претензия", ДанныеЗаполнения);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаДетальныеЗаписи = РезультатыЗапроса[1].Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаДетальныеЗаписи);
			РасшифровкаПредметаСпора.Загрузить(РезультатыЗапроса[2].Выгрузить());
		Иначе
			Претензия = ДанныеЗаполнения;
			Организация = ДанныеЗаполнения.Организация;
			Контрагент = ДанныеЗаполнения.Контрагент;			
			Договор = ДанныеЗаполнения.Договор;
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Лоты") Тогда
		
		НеОтражаетсяВ_БДДС = Истина;
		ЭтапПретензии = Справочники.ЭтапыПретензионноИсковойРаботы.Начальная;
		Организация = ДанныеЗаполнения.Владелец.ОрганизаторЗакупки;
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		НеОтражаетсяВ_БДДС = Истина;
		МетаданныеДокумента = ДанныеЗаполнения.Метаданные();
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеДокумента) Тогда
			Контрагент = ДанныеЗаполнения.Контрагент;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеДокумента) Тогда
			Организация = ДанныеЗаполнения.Организация;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента", МетаданныеДокумента) Тогда
			Валюта = ДанныеЗаполнения.ВалютаДокумента;
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("Валюта", МетаданныеДокумента) Тогда
			Валюта = ДанныеЗаполнения.Валюта;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаДокумента", МетаданныеДокумента) Тогда
			Сумма = ДанныеЗаполнения.СуммаДокумента;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если НеОтражаетсяВ_БДДС Тогда
		Если ПроверяемыеРеквизиты.Найти("ОжидаемаяДата") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ОжидаемаяДата"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.ХодПретензионноИсковойРаботы.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Если НЕ ПометкаУдаления Тогда
		Движение = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ЭтотОбъект);
		
		Движение.Период = Дата;
		Движение.ЭтапРаботы = ЭтапПретензии;
		Движение.Вероятность = ПроцентОжидаемогоВозвратаДолга;
		
		//Движение.Претензия = Претензия;
		//Движение.Сумма = Сумма;
		//Движение.ПозицияОрганизации = ПозицияОрганизации;
		//Движение.ПозицияКонтрагента = ПозицияКонтрагента;
		//Движение.Суд = Суд;
		//Движение.Судья = Судья;
		//Движение.НомерДела = НомерДела;
		//Движение.Комментарий = Комментарий;
		//Движение.Валюта = Валюта;
		//Движение.СледующийЭтапПретензии = СледующийЭтапПретензии;
		//Движение.ОжидаемаяДата = ОжидаемаяДата;
		//Движение.Организация = Организация;
		//Движение.Контрагент = Контрагент;
		
	КонецЕсли;
	Набор.Записать(Истина);
	
	Если НеОтражаетсяВ_БДДС = Ложь Тогда
		// Создадим корректировки графиков сделок.
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзменениеПретензииРасшифровкаПредметаСпора.ОбъектРасчетов КАК ОбъектРасчетов,
		|	ИзменениеПретензииРасшифровкаПредметаСпора.Ссылка.ОжидаемаяДата КАК ДатаПлатежа,
		|	СУММА(ИзменениеПретензииРасшифровкаПредметаСпора.Итого) КАК Сумма
		|ИЗ
		|	Документ.ИзменениеПретензии.РасшифровкаПредметаСпора КАК ИзменениеПретензииРасшифровкаПредметаСпора
		|ГДЕ
		|	ИзменениеПретензииРасшифровкаПредметаСпора.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзменениеПретензииРасшифровкаПредметаСпора.ОбъектРасчетов,
		|	ИзменениеПретензииРасшифровкаПредметаСпора.Ссылка.ОжидаемаяДата";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ТипЗнч(Выборка.ОбъектРасчетов) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьГрафик(Выборка.ОбъектРасчетов, Выборка.ДатаПлатежа, Выборка.Сумма);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьГрафик(ОбъектРасчетов, ДатаПлатежа, СуммаПлатежа)
	
	ГрафикОбъект = Документы.ВерсияСоглашенияКоммерческийДоговор.СоздатьДокумент();
	ГрафикОбъект.Заполнить(ОбъектРасчетов);
	ГрафикОбъект.Дата = Дата;
	ГрафикОбъект.Претензия = Претензия;
	
	// обновить график по фактическим данным	
	ОписаниеГрафика = Документы.ВерсияСоглашенияКоммерческийДоговор.ОписаниеГрафика(ГрафикОбъект.ВидДоговораУХ);
	ОперацииГрафика = РаботаСДоговорамиКонтрагентовУХ.ОперацииГрафика(ОписаниеГрафика, ГрафикОбъект, ГрафикОбъект.ВидДоговораУХ);
		
	ТабГрафикРасчетов = ГрафикОбъект.ГрафикРасчетов.Выгрузить();
	ТабГрафикРасчетов.Очистить(); // оставляем только факт
	
	НовыйГрафикРасчетов = РаботаСДоговорамиКонтрагентовУХ.ПеренестиФактВГрафик(ТабГрафикРасчетов, ДатаПлатежа,
		ГрафикОбъект.ДоговорКонтрагента, ГрафикОбъект.ДоговорКонтрагента, ОписаниеГрафика, ОперацииГрафика);
		
	// добавить начисление и оплату по претензии
	ОперацияНачисления = РаботаСДоговорамиКонтрагентовУХ.ОперацияИзОписанияГрафика(ОписаниеГрафика, 
			Перечисления.ЭлементыСтруктурыЗадолженности.ОсновнойДолг, Перечисления.ВидыДвиженийПриходРасход.Приход);
	ОперацияОплаты = РаботаСДоговорамиКонтрагентовУХ.ОперацияИзОписанияГрафика(ОписаниеГрафика, 
			Перечисления.ЭлементыСтруктурыЗадолженности.ОсновнойДолг, Перечисления.ВидыДвиженийПриходРасход.Расход);
			
	ИтогОплаты = 0;
	ИтогНачисления = 0;
	Для каждого СтрокаГрафика Из НовыйГрафикРасчетов Цикл
		Если СтрокаГрафика.ОперацияГрафика = ОперацияНачисления Тогда
			ИтогНачисления = ИтогНачисления + СтрокаГрафика.Сумма;
		ИначеЕсли СтрокаГрафика.ОперацияГрафика = ОперацияОплаты Тогда
			ИтогОплаты = ИтогОплаты + СтрокаГрафика.Сумма;
		КонецЕсли;
	КонецЦикла;
			
	// начисление
	СуммаНачисления = СуммаПлатежа + ИтогОплаты - ИтогНачисления;
	Если СуммаНачисления <> 0 Тогда
		ОписаниеОперации = РаботаСДоговорамиКонтрагентовУХ.ОписаниеОперации(ОперацияНачисления, ОперацииГрафика);			
		СтрокаГрафика = РаботаСДоговорамиКонтрагентовУХ.ДобавитьПозициюВГрафик(НовыйГрафикРасчетов, 
					СуммаНачисления, ДатаПлатежа, ,ОписаниеОперации);
	КонецЕсли;
								
	// оплата			
	ОписаниеОперации = РаботаСДоговорамиКонтрагентовУХ.ОписаниеОперации(ОперацияОплаты, ОперацииГрафика);		
	СтрокаГрафика = РаботаСДоговорамиКонтрагентовУХ.ДобавитьПозициюВГрафик(НовыйГрафикРасчетов, 
				СуммаПлатежа, ДатаПлатежа, ,ОписаниеОперации);
	
	ГрафикОбъект.ГрафикРасчетов.Загрузить(НовыйГрафикРасчетов);
	ГрафикОбъект.Сумма = СуммаПлатежа + ИтогОплаты;
	
	ГрафикОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

	
#КонецОбласти
#КонецЕсли