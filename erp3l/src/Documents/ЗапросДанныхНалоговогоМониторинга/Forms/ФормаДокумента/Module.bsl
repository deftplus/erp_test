
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ФормаОтчета.СписокВыбора.ЗагрузитьЗначения(НалоговыйМониторингВызовСервераПовтИсп.ПолучитьМассивФормОтчетности());
	
	Если Не ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		Период = ОбщегоНазначения.РабочаяДатаПользователя();
		Если Не ЗначениеЗаполнено(Период) Тогда
			Период = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Объект.НачалоПериода = НачалоГода(ДобавитьМесяц(Период, -12));
		Объект.ОкончаниеПериода  = КонецГода(Объект.НачалоПериода);	
	КонецЕсли;
	
	ПриИзмененииПериода();
	
	Элементы.Дата.ТолькоПросмотр = РольДоступна("НалоговыйМониторинг");
	
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиОтветНаЗапрос(Команда)
	ТекДокумент = Объект.Ссылка;
	Если ЗначениеЗаполнено(ТекДокумент) Тогда
		НайденныйОтвет = Неопределено;
		ЕстьОтветНаЗапрос = СтатусОтклоненияОтвета(ТекДокумент, НайденныйОтвет);
		Если ЕстьОтветНаЗапрос = Неопределено Тогда
			// Ответ не найден. Введём его на основании существующего документа.
			Если НетПраваДоступаНаОтвет() Тогда
				ТекстСообщения = НСтр("ru = 'По данному документу ещё не введён ответ.'");
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			Иначе
				ПараметрыФормы = Новый Структура;        
				ПараметрыФормы.Вставить("Основание", ТекДокумент);
				ОткрытьФорму("Документ.ОтветНаЗапросНалоговогоМониторинга.Форма.ФормаДокумента", ПараметрыФормы);
			КонецЕсли;
		Иначе
			Если ЕстьОтветНаЗапрос ИЛИ НетПраваДоступаНаОтвет() Тогда	
				// Ответ найден. Откроем его.
				ПоказатьЗначение(, НайденныйОтвет);
			Иначе
				ТекстСообщения = НСтр("ru = 'По запросу %Запрос% введено отклонение запроса. Операция отменена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Запрос%", Строка(ТекДокумент));
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Требуется записать документ перед выполнением команды. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьЗапрос(Команда)
	ТекДокумент = Объект.Ссылка;
	Если ЗначениеЗаполнено(ТекДокумент) Тогда
		НайденныйОтвет = Неопределено;
		ЕстьОтветНаЗапрос = СтатусОтклоненияОтвета(ТекДокумент, НайденныйОтвет);
		Если ЕстьОтветНаЗапрос = Неопределено Тогда
			// Ответ не найден. Введём его на основании существующего документа.
			ПараметрыФормы = Новый Структура;        
			ПараметрыФормы.Вставить("Основание", ТекДокумент);
			ОткрытьФорму("Документ.ОтветНаЗапросНалоговогоМониторинга.Форма.ФормаДокументаОтклонения", ПараметрыФормы);
		ИначеЕсли НЕ ЕстьОтветНаЗапрос Тогда
			// Ответ найден. Откроем его.
			ПараметрыФормы = Новый Структура;        
			ПараметрыФормы.Вставить("Ключ", НайденныйОтвет);
			ОткрытьФорму("Документ.ОтветНаЗапросНалоговогоМониторинга.Форма.ФормаДокументаОтклонения", ПараметрыФормы);
		Иначе
			ТекстСообщения = НСтр("ru = 'По запросу %Запрос% введен ответ. Операция отменена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Запрос%", Строка(ТекДокумент));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Требуется записать документ перед выполнением команды. Операция отменена.'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// Возвращает состояние ответа на запрос налогового мониторинга (Неопределено, Истина, Ложь(если отклонён), 
// который сопоставлен документу ДокументЗапросВход.
&НаСервереБезКонтекста
Функция СтатусОтклоненияОтвета(ДокументЗапросВход, ДокументОтветВыход)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	ОтветНаЗапросНалоговогоМониторинга.Ссылка КАК Ссылка,
		|	ОтветНаЗапросНалоговогоМониторинга.ЗапросОтклонен КАК ЗапросОтклонен
		|ИЗ
		|	Документ.ОтветНаЗапросНалоговогоМониторинга КАК ОтветНаЗапросНалоговогоМониторинга
		|ГДЕ
		|	ОтветНаЗапросНалоговогоМониторинга.Основание = &Основание
		|	И ОтветНаЗапросНалоговогоМониторинга.ПометкаУдаления = ЛОЖЬ
		|	И ОтветНаЗапросНалоговогоМониторинга.Проведен";
	
	Запрос.УстановитьПараметр("Основание", ДокументЗапросВход);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ДокументОтветВыход = ВыборкаДетальныеЗаписи.Ссылка;
		Возврат НЕ ВыборкаДетальныеЗаписи.ЗапросОтклонен;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция НетПраваДоступаНаОтвет()
	Возврат НЕ ПравоДоступа("Добавление", Метаданные.Документы.ОтветНаЗапросНалоговогоМониторинга);
КонецФункции

&НаКлиенте
Процедура ИзменитьПериод(Шаг)
	
	Объект.ОкончаниеПериода  = КонецМесяца(ДобавитьМесяц(Объект.ОкончаниеПериода, Шаг));
	Объект.НачалоПериода = НачалоГода(Объект.ОкончаниеПериода);
	
	ПриИзмененииПериода();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПериода()
	
	ПолеВыбораПериодичностиПоказаПериода = ПредставлениеПериода(
		НачалоДня(Объект.НачалоПериода), КонецДня(Объект.ОкончаниеПериода), "ФП = Истина");
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПереченьДокументовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовПроизвольныйДокументПриИзменении(Элемент)
	ПереченьДокументовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьДокументовПриАктивизацииСтроки(Элемент)
	Если Элементы.ПереченьДокументов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.ПереченьДокументов.ТекущиеДанные.ПроизвольныйДокумент Тогда
		Элементы.ПереченьДокументовДокумент.ОграничениеТипа = Новый ОписаниеТипов("Строка");
	Иначе
		Элементы.ПереченьДокументовДокумент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ВидыЗапрашиваемойОтчетностиНалоговогоМониторинга");
	КонецЕсли;
	Элементы.ПереченьДокументов.ТекущиеДанные.Документ = Элементы.ПереченьДокументовДокумент.ОграничениеТипа.ПривестиЗначение(Элементы.ПереченьДокументов.ТекущиеДанные.Документ);
	Элементы.ПереченьДокументовДокумент.ВыбиратьТип = Ложь;
КонецПроцедуры


