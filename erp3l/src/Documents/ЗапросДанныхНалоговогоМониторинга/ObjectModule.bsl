#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			ЗаполнитьПоРегОтчету(ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда 
			ЗаполнитьПоРегОтчету(ДанныеЗаполнения.РегламентированныйОтчет, ДанныеЗаполнения.Раздел, ДанныеЗаполнения.НомерСтроки);
		Иначе 
			
			ЭтотОбъект.ПредметЗапроса = ДанныеЗаполнения;
			
			РеквизитыЗаполнения = Новый Структура("Организация, Дата");
			ЗаполнитьЗначенияСвойств(РеквизитыЗаполнения, ДанныеЗаполнения);
			Если ЗначениеЗаполнено(РеквизитыЗаполнения.Организация) И Не ЗначениеЗаполнено(ЭтотОбъект.Организация) Тогда
				ЭтотОбъект.Организация = РеквизитыЗаполнения.Организация;
			КонецЕсли;
			Если ЗначениеЗаполнено(РеквизитыЗаполнения.Дата) Тогда
				ЭтотОбъект.ОкончаниеПериода = КонецМесяца(РеквизитыЗаполнения.Дата);
				ЭтотОбъект.НачалоПериода = НачалоГода(ЭтотОбъект.ОкончаниеПериода);
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЕсли;
	
	Если НЕ (ЗначениеЗаполнено(ЭтотОбъект.Организация) И ЗначениеЗаполнено(ЭтотОбъект.Глава) И ЗначениеЗаполнено(ЭтотОбъект.ОкончаниеПериода)) Тогда
		
		Настройки = НалоговыйМониторинг.ПолучитьСтруктуруНастроекПоУмолчанию(КонецДня(ЭтотОбъект.Дата), ЭтотОбъект.Ответственный);
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Организация) Тогда
			ЭтотОбъект.Организация = Настройки.Организация;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Глава) Тогда
			ЭтотОбъект.Глава = Настройки.ГлаваНК;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ОкончаниеПериода) Тогда
			ЭтотОбъект.ОкончаниеПериода = Настройки.ОкончаниеПериода;
			ЭтотОбъект.НачалоПериода = Настройки.НачалоПериода;
		КонецЕсли;
	
	КонецЕсли;
	
	ЭтотОбъект.ПлановаяДатаОтвета = ТекущаяДата() + (86400 * НалоговыйМониторингВызовСервераПовтИсп.СрокПредоставленияДокументов());
КонецПроцедуры

Процедура ЗаполнитьПоРегОтчету(РегОтчет, Раздел = Неопределено, НомерСтроки = Неопределено)
	
	ЭтотОбъект.ПредметЗапроса = РегОтчет;
	
	Если Глава.Пустая() Тогда
		ЭтотОбъект.Глава = Справочники.ГлавыНалоговогоКодексаНалоговогоМониторинга.НайтиПоРеквизиту("ИсточникРегламентированногоОтчета", СокрЛП(РегОтчет.ИсточникОтчета));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ФормаОтчета) Тогда
		ЭтотОбъект.ФормаОтчета = РегОтчет.НаименованиеОтчета;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Организация) Тогда
		ЭтотОбъект.Организация = РегОтчет.Организация;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ЭтотОбъект.Раздел) Тогда
		ЭтотОбъект.Раздел = Раздел;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ЭтотОбъект.НомерСтроки) Тогда
		ЭтотОбъект.НомерСтроки = НомерСтроки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.НачалоПериода) Тогда
		ЭтотОбъект.НачалоПериода = РегОтчет.ДатаНачала;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ОкончаниеПериода) Тогда
		ЭтотОбъект.ОкончаниеПериода = РегОтчет.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеПеречняДокументов = СтрСоединить(ПереченьДокументов.ВыгрузитьКолонку("Документ"), Символы.ПС);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ОбщегоНазначения.ПодсистемаСуществует("БухгалтерияПредприятияПодсистемы") Тогда
		РегистрироватьЗадачиБухгалтера = Константы["АвтоматическаяРегистрацияЗапросаНалоговогоМониторингаВЗадачахБухгалтера"].Получить();
		Если РегистрироватьЗадачиБухгалтера Тогда
			ЗарегистрироватьЗадачу();
		КонецЕсли;
	КонецЕсли;
	Если ОбщегоНазначения.ПодсистемаСуществует("ПодсистемыУХ.ПроцессыИСогласование") Тогда
		РегистрироватьОпопвещения = Константы["АвтоматическаяРегистрацияЗапросаНалоговогоМониторингаВОповещенияУХ"].Получить();
		Если РегистрироватьОпопвещения Тогда
			ЗарегистрироватьОповещение();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьЗадачу()
	ЗадачиБухгалтера = "ЗадачиБухгалтера";
	Набор = РегистрыСведений[ЗадачиБухгалтера].СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(ЭтотОбъект.Организация);
	Набор.Отбор.Правило.Установить(ЭтотОбъект.Ссылка);
	Запись = Набор.Добавить();
	Запись.Организация = ЭтотОбъект.Организация;
	Запись.Правило = ЭтотОбъект.Ссылка;
	Запись.Наименование = ЭтотОбъект.Ссылка;
	Запись.НаименованиеСокращенное = ЭтотОбъект.Ссылка;
	Запись.ДатаСоздания = ЭтотОбъект.Дата;
	Запись.Срок = ТекущаяДатаСеанса(); //ЭтотОбъект.ПлановаяДатаОтвета;
	Отказ = Ложь;
	НалоговыйМониторингПереопределяемый.ЗарегистрироватьЗадачу(Набор, Отказ);
	Если НЕ Отказ Тогда
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ЗарегистрироватьОповещение()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПолучателиОповещенийОЗапросахНалоговогоМониторинга.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ПолучателиОповещенийОЗапросахНалоговогоМониторинга КАК ПолучателиОповещенийОЗапросахНалоговогоМониторинга";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("МодульУправленияОповещениямиУХ");
		Модуль.ОповеститьПользователей(Справочники.ВидыСобытийОповещений.ЗапросНалоговогоМониторинга, , Ссылка, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Пользователь"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли