
////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ИСПОЛНЯЕМЫЕ НА СЕРВЕРЕ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПолучитьЗнакЗаписи(Запись)
	
	Если НЕ Запись.Сбалансированная Тогда
		Возврат 1;	
	ИначеЕсли Запись.ВидПоказателя=Перечисления.ВидыПоказателей.Активный И Запись.Дебет Тогда
		Возврат 1;
	ИначеЕсли Запись.ВидПоказателя=Перечисления.ВидыПоказателей.Активный И Запись.Кредит Тогда
		Возврат -1;
	ИначеЕсли Запись.ВидПоказателя=Перечисления.ВидыПоказателей.Пассивный И Запись.Кредит Тогда
		Возврат 1;
	ИначеЕсли Запись.ВидПоказателя=Перечисления.ВидыПоказателей.Пассивный И Запись.Дебет Тогда
		Возврат -1;
	Иначе
		Возврат 1;
	КонецЕсли;	
	
КонецФункции // ПолучитьЗнакЗаписи()

&НаСервере
Процедура ПодготовитьТаблицуЗаписей(РабочийОбъект)
		
	РабочийЗапрос=Новый Запрос;
	РабочийЗапрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	РабочийЗапрос.Текст="ВЫБРАТЬ
	|	РедактируемыеЗаписи.ЭкземплярОтчета,
	|	РедактируемыеЗаписи.Организация,
	|	РедактируемыеЗаписи.Проект,
	|	РедактируемыеЗаписи.Показатель,
	|	РедактируемыеЗаписи.АналитикаВалюта,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	РедактируемыеЗаписи.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|	РедактируемыеЗаписи.Значение,
	|	РедактируемыеЗаписи.ЗначениеВалюта,
	|	РедактируемыеЗаписи.Раскрытие,
	|	РедактируемыеЗаписи.РаспределятьПоАналитикам,
	|	РедактируемыеЗаписи.Дебет,
	|	РедактируемыеЗаписи.Кредит,
	|	РедактируемыеЗаписи.НомерОперации,
	|	РедактируемыеЗаписи.РасчетПоФормуле,
	|	РедактируемыеЗаписи.Процедура,
	|	РедактируемыеЗаписи.ПроизвольныйКод
	|ПОМЕСТИТЬ РедактируемыеЗаписи
	|ИЗ
	|	&РедактируемыеЗаписи КАК РедактируемыеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.НомерОперации,
	|	Операции.Сбалансированная
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	&Операции КАК Операции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Записи.ЭкземплярОтчета,
	|	Записи.Организация,
	|	Записи.Проект,
	|	Записи.Показатель,
	|	Записи.АналитикаВалюта,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	Записи.Аналитика"+Индекс+",";
		
	КонецЦикла;

	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|	Записи.Значение,
	|	Записи.ЗначениеВалюта,
	|	Записи.Валюта,
	|	Записи.НомерОперации,
	|	Записи.Раскрытие
	|ПОМЕСТИТЬ Записи
	|ИЗ
	|	&Записи КАК Записи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастраиваемыйОтчет.ВидОтчета,
	|	РедактируемыеЗаписи.ЭкземплярОтчета,
	|	РедактируемыеЗаписи.Организация,
	|	РедактируемыеЗаписи.Проект,
	|	РедактируемыеЗаписи.Показатель,
	|	РедактируемыеЗаписи.АналитикаВалюта,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	РедактируемыеЗаписи.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|	РедактируемыеЗаписи.Значение,
	|	РедактируемыеЗаписи.ЗначениеВалюта,
	|	РедактируемыеЗаписи.НомерОперации,
	|	РедактируемыеЗаписи.РасчетПоФормуле,
	|	РедактируемыеЗаписи.Процедура,
	|	РедактируемыеЗаписи.ПроизвольныйКод,
	|	РедактируемыеЗаписи.Раскрытие,
	|	РедактируемыеЗаписи.РаспределятьПоАналитикам,
	|	РедактируемыеЗаписи.Дебет,
	|	РедактируемыеЗаписи.Кредит,
	|	Операции.Сбалансированная
	|ПОМЕСТИТЬ РабТаблицаЗаписей
	|ИЗ
	|	РедактируемыеЗаписи КАК РедактируемыеЗаписи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ПО РедактируемыеЗаписи.ЭкземплярОтчета = НастраиваемыйОтчет.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Операции КАК Операции
	|		ПО РедактируемыеЗаписи.НомерОперации = Операции.НомерОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабТаблицаЗаписей.ВидОтчета
	|ИЗ
	|	РабТаблицаЗаписей КАК РабТаблицаЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Записи.ЭкземплярОтчета КАК ЭкземплярОтчета,
	|	Записи.Организация,
	|	Записи.Проект,
	|	Записи.Показатель,
	|	Записи.АналитикаВалюта,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	Записи.Аналитика"+Индекс+",";
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|	Записи.Значение,
	|	Записи.ЗначениеВалюта,
	|	Записи.Валюта,
	|	Записи.НомерОперации,
	|	Записи.Раскрытие,
	|	ВЫБОР
	|		КОГДА РедактируемыеЗаписи.Значение ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РедактируемаяЗапись,
	|	ПоказателиОтчетов.Строка.ПорядковыйНомер КАК НомерСтроки
	|ИЗ
	|	Записи КАК Записи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РедактируемыеЗаписи КАК РедактируемыеЗаписи
	|		ПО Записи.ЭкземплярОтчета = РедактируемыеЗаписи.ЭкземплярОтчета
	|			И Записи.Организация = РедактируемыеЗаписи.Организация
	|			И Записи.Проект = РедактируемыеЗаписи.Проект
	|			И Записи.Показатель = РедактируемыеЗаписи.Показатель
	|			И Записи.АналитикаВалюта = РедактируемыеЗаписи.АналитикаВалюта";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|И Записи.Аналитика"+Индекс+" = РедактируемыеЗаписи.Аналитика"+Индекс;
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|			И Записи.НомерОперации = РедактируемыеЗаписи.НомерОперации
	|			И (Записи.Валюта = &ОсновнаяВалюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|		ПО Записи.Показатель = ПоказателиОтчетов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭкземплярОтчета,
	|	НомерСтроки,
	|	Записи.Раскрытие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабТаблицаЗаписей.Показатель
	|ИЗ
	|	РабТаблицаЗаписей КАК РабТаблицаЗаписей";
	
	РабочийЗапрос.УстановитьПараметр("Ссылка",РабочийОбъект.Ссылка);
	РабочийЗапрос.УстановитьПараметр("РедактируемыеЗаписи",РабочийОбъект.РедактируемыеЗаписи.Выгрузить());
	РабочийЗапрос.УстановитьПараметр("Записи",РабочийОбъект.Записи.Выгрузить());
	РабочийЗапрос.УстановитьПараметр("Операции",РабочийОбъект.Операции.Выгрузить());
	РабочийЗапрос.УстановитьПараметр("ОсновнаяВалюта",РабочийОбъект.ОсновнаяВалюта);
	
	РезультатВыполнения=РабочийЗапрос.ВыполнитьПакет();
	
	МассивВидовОтчета=РезультатВыполнения[4].Выгрузить().ВыгрузитьКолонку("ВидОтчета");
	ЗначениеВРеквизитФормы(РезультатВыполнения[5].Выгрузить(),"РезультирующиеЗаписи");
	МассивПоказателейОбщ=РезультатВыполнения[6].Выгрузить().ВыгрузитьКолонку("Показатель");
	
	Если МассивВидовОтчета=0 Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////////////////
	// Для каждого из корректируемых видов отчета сформируем текст запроса к регистрам
	
	РабочийЗапрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|ВерсииЗначенийПоказателей.Ссылка
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			РабТаблицаЗаписей.ЭкземплярОтчета КАК ЭкземплярОтчета
	|		ИЗ
	|			РабТаблицаЗаписей КАК РабТаблицаЗаписей
	|		ГДЕ
	|			РабТаблицаЗаписей.ВидОтчета = &ВидОтчета) КАК ЭкземплярыОтчетов
	|		ПО ВерсииЗначенийПоказателей.ЭкземплярОтчета = ЭкземплярыОтчетов.ЭкземплярОтчета
	|ГДЕ
	|	(НЕ ВерсииЗначенийПоказателей.Регистратор = &Ссылка)
	|И ВерсииЗначенийПоказателей.ПериодОтчета=&ПериодОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РабТаблицаЗаписей.Показатель,
	|	РабТаблицаЗаписей.Раскрытие	
	|ИЗ
	|	РабТаблицаЗаписей КАК РабТаблицаЗаписей
	|ГДЕ
	|	РабТаблицаЗаписей.ВидОтчета = &ВидОтчета";
	
	Инд=1;
	
	СтрЗапросКРегистрам="";
	
	РабочийЗапрос.УстановитьПараметр("ПериодОтчета",Объект.ПериодОтчета);
	
	Для Каждого ВидОтчета ИЗ МассивВидовОтчета Цикл
		
		РабочийЗапрос.УстановитьПараметр("ВидОтчета",ВидОтчета);
		
		РезультатВыполнения=РабочийЗапрос.ВыполнитьПакет();
		
		ТекСписокВерсий=Новый СписокЗначений;
		ТекСписокВерсий.ЗагрузитьЗначения(РезультатВыполнения[0].Выгрузить().ВыгрузитьКолонку("Ссылка"));
		
		ТаблицаПоказателей=РезультатВыполнения[1].Выгрузить();
				
		ОтборПоказателей=Новый Соответствие;
		ОтборПоказателей.Вставить("#### В(&МассивПоказателей)",Новый Структура("МассивПоказателей",ТаблицаПоказателей.ВыгрузитьКолонку("Показатель")));
		
		ДополнительныеПоля=Новый Соответствие;
		ДополнительныеПоля.Вставить("ВерсииЗначенийПоказателей.ЭкземплярОтчета","ЭкземплярОтчета");
		
		ДанныеЗапроса=Новый Структура;
		ДанныеЗапроса.Вставить("ВидОтчета",ВидОтчета);
		ДанныеЗапроса.Вставить("СписокВерсий",ТекСписокВерсий);
		ДанныеЗапроса.Вставить("ВыводитьСинтетику",(НЕ ТаблицаПоказателей.Найти(Ложь,"Раскрытие")=Неопределено));
		ДанныеЗапроса.Вставить("ВыводитьАналитику",(НЕ ТаблицаПоказателей.Найти(Истина,"Раскрытие")=Неопределено));
		ДанныеЗапроса.Вставить("ОтборПоказателей",ОтборПоказателей);
		ДанныеЗапроса.Вставить("ТолькоЧисловые",Истина);
		ДанныеЗапроса.Вставить("МаксКоличествоАналитик",ПараметрыСеанса.ЧислоДопАналитик);
		ДанныеЗапроса.Вставить("ДополнительныеПоля",ДополнительныеПоля);
		
		СтруктураЗапроса=УправлениеОтчетамиУХ.ПодготовитьТекстЗапросаКРегистрам(ДанныеЗапроса);
		
		Если НЕ СтруктураЗапроса.Свойство("ТекстЗапроса") Тогда

			Продолжить;
			
		КонецЕсли;
		
		ТекущийТекст=СтруктураЗапроса.ТекстЗапроса;
		
		Для Каждого СтрПараметр ИЗ СтруктураЗапроса.СтруктураПараметров Цикл
			
			ТекущийТекст=СтрЗаменить(ТекущийТекст,"&"+СтрПараметр.Ключ,"&"+СтрПараметр.Ключ+Инд);
			РабочийЗапрос.УстановитьПараметр(СтрПараметр.Ключ+Инд,СтрПараметр.Значение);
			
		КонецЦикла;
			
		СтрЗапросКРегистрам=СтрЗапросКРегистрам+"
		|ОБЪЕДИНИТЬ ВСЕ
		|"+ТекущийТекст;
		
		Инд=Инд+1;
		
	КонецЦикла;
	
	Если СтрЗапросКРегистрам="" Тогда
		Возврат;
	КонецЕсли;
	
	РабочийЗапрос.Текст="
	|ВЫБРАТЬ
	|РабТаблицаЗаписей.ЭкземплярОтчета,
	|РабТаблицаЗаписей.ВидОтчета,
	|РабТаблицаЗаписей.Организация,
	|РабТаблицаЗаписей.Проект,
	|РабТаблицаЗаписей.Показатель,
	|ПоказателиКорректировки.ВидПоказателя,
	|РабТаблицаЗаписей.Дебет,
	|РабТаблицаЗаписей.Кредит,
	|РабТаблицаЗаписей.Сбалансированная,
	|РабТаблицаЗаписей.АналитикаВалюта,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	РабТаблицаЗаписей.Аналитика"+Индекс+",";
		
	КонецЦикла;

	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|РабТаблицаЗаписей.Значение,
	|РабТаблицаЗаписей.ЗначениеВалюта,
	|РабТаблицаЗаписей.НомерОперации,
	|РабТаблицаЗаписей.РасчетПоФормуле,
	|РабТаблицаЗаписей.Процедура,
	|РабТаблицаЗаписей.ПроизвольныйКод,
	|РабТаблицаЗаписей.Раскрытие,
	|РабТаблицаЗаписей.РаспределятьПоАналитикам,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|ВЫБОР КОГДА (НЕ ВидыОтчетовКорректировки.ВидАналитики"+Индекс+"=Неопределено)
		|	ТОГДА ВидыОтчетовКорректировки.ВидАналитики"+Индекс+"
		|	ИНАЧЕ ПоказателиКорректировки.ВидАналитики"+Индекс+" КОНЕЦ КАК ВидАналитики"+Индекс+",";
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|ВидыОтчетовКорректировки.АналитикВидаОтчета,
	|ПоказателиКорректировки.АналитикПоказателяОтчета,
	|ПоказателиКорректировки.Валютный,
	|ПоказателиКорректировки.ПересчитыватьВалютнуюСумму,
	|ПоказателиКорректировки.ВидКурса,
	|ЕстьNULL(ДанныеРегистра.Значение,0) КАК НачОстаток,
	|0 КАК КонОстаток
	|ИЗ РабТаблицаЗаписей КАК РабТаблицаЗаписей
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ("+Сред(СтрЗапросКРегистрам,16)+") КАК ДанныеРегистра
	|ПО РабТаблицаЗаписей.ЭкземплярОтчета=ДанныеРегистра.ЭкземплярОтчета
	|И РабТаблицаЗаписей.Показатель=ДанныеРегистра.Показатель
	|И (НЕ РабТаблицаЗаписей.Раскрытие=ДанныеРегистра.ИтоговоеЗначение)
	|И РабТаблицаЗаписей.АналитикаВалюта=ДанныеРегистра.АналитикаВалюта";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|И РабТаблицаЗаписей.Аналитика"+Индекс+" = ДанныеРегистра.Аналитика"+Индекс;
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ	
	|(ВЫБРАТЬ
	|	ПоказателиОтчетов.Ссылка,
	|	ПоказателиОтчетов.ВидПоказателя,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	ВЫБОР
		|		КОГДА ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики"+Индекс+" = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
		|				ИЛИ ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики"+Индекс+" ЕСТЬ NULL 
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики"+Индекс+"
		|	КОНЕЦ КАК ВидАналитики"+Индекс+",";
		
	КонецЦикла;
	
	ТекстВыбор="";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстВыбор=ТекстВыбор+" + ВЫБОР
		|		КОГДА ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики"+Индекс+" = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
		|				ИЛИ ПоказателиОтчетов.ГруппаРаскрытия.ВидАналитики"+Индекс+" ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|КОНЕЦ";
		
	КонецЦикла;	
		
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
	|	("+Сред(ТекстВыбор,4)+") КАК АналитикПоказателяОтчета,
	|	ЕСТЬNULL(ПоказателиОтчетов.ГруппаРаскрытия.Валютная, ЛОЖЬ) КАК Валютный,
	|	ПоказателиОтчетов.ПересчитыватьВалютнуюСумму КАК ПересчитыватьВалютнуюСумму,
	|	ПоказателиОтчетов.ВидКурса
	|ИЗ
	|	Справочник.ПоказателиОтчетов КАК ПоказателиОтчетов
	|ГДЕ
	|	ПоказателиОтчетов.Ссылка В(&МассивПоказателейОбщ)) КАК ПоказателиКорректировки
	|ПО РабТаблицаЗаписей.Показатель=ПоказателиКорректировки.Ссылка
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|(ВЫБРАТЬ
	|	ВидыОтчетов.Ссылка,";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		РабочийЗапрос.Текст=РабочийЗапрос.Текст+"
		|	ВЫБОР
		|		КОГДА ВидыОтчетов.ВидАналитики"+Индекс+" = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВидыОтчетов.ВидАналитики"+Индекс+"
		|	КОНЕЦ КАК ВидАналитики"+Индекс+",";
		
	КонецЦикла;
	
	ТекстВыбор="";
	
	Для Индекс=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
		
		ТекстВыбор=ТекстВыбор+" +  ВЫБОР
		|		КОГДА ВидыОтчетов.ВидАналитики"+Индекс+" = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ";
		
	КонецЦикла;
	
	РабочийЗапрос.Текст=РабочийЗапрос.Текст+Сред(ТекстВыбор,4)+" КАК АналитикВидаОтчета
	|ИЗ
	|	Справочник.ВидыОтчетов КАК ВидыОтчетов
	|ГДЕ
	|	ВидыОтчетов.Ссылка В(&МассивВидовОтчета)) КАК ВидыОтчетовКорректировки
	|ПО РабТаблицаЗаписей.ВидОтчета=ВидыОтчетовКорректировки.Ссылка";
	
	РабочийЗапрос.УстановитьПараметр("МассивПоказателейОбщ",МассивПоказателейОбщ);
	РабочийЗапрос.УстановитьПараметр("МассивВидовОтчета",МассивВидовОтчета);	
	
	ТаблицаЗаписей=РабочийЗапрос.Выполнить().Выгрузить();
	
	СтруктураТиповЗаписи=Новый Структура;
	Для Каждого Колонка ИЗ ТаблицаЗаписей.Колонки Цикл
		СтруктураТиповЗаписи.Вставить(Колонка.Имя,Колонка.ТипЗначения);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаЗаписей,"ЗаписиОперации");
	
	Для Каждого СтрЗапись ИЗ ЗаписиОперации Цикл
		
		СтрЗапись.КонОстаток=СтрЗапись.НачОстаток+СтрЗапись.Значение*ПолучитьЗнакЗаписи(СтрЗапись);
		
	КонецЦикла;
	
КонецПроцедуры // ПодготовитьТаблицуЗаписей() 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Если Параметры.Ключ.Пустая() И Параметры.Свойство("ЭкземплярОтчета") Тогда
		
		// Операции
		Операция=Объект.Операции.Добавить();
		Операция.НомерОперации=1;
		
		// Записи
		Для Каждого КоррПоказатель ИЗ Параметры.МассивПоказателей Цикл
			
			НоваяЗапись=Объект.РедактируемыеЗаписи.Добавить();
			НоваяЗапись.Организация=Объект.Организация;
			НоваяЗапись.Проект=Объект.Проект;
			НоваяЗапись.ЭкземплярОтчета=Параметры.ЭкземплярОтчета;
			НоваяЗапись.Показатель=КоррПоказатель;
			НоваяЗапись.РаспределятьПоАналитикам=Истина;
			НоваяЗапись.НомерОперации=1;
			
		КонецЦикла;
		
		ОткрыватьОперацию=Истина;
		
	КонецЕсли;
	
	Элементы.ОперацииКнопкаЭлиминация.Пометка=Ложь;
	
	РабочийОбъект=РеквизитФормыВЗначение("Объект");
	
	ПодготовитьТаблицуЗаписей(РабочийОбъект);
	
	Если РабочийОбъект.Операции.Количество()>0 Тогда
		РабочийОбъект.Операции.Сортировать("НомерОперации");
		НомерПоследнейОперации=РабочийОбъект.Операции[РабочийОбъект.Операции.Количество()-1].НомерОперации;
	Иначе
		НомерПоследнейОперации=0;
	КонецЕсли;
	
	ПоместитьРабочийОбъект(РабочийОбъект);
		
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Функция ПолучитьРабочийОбъект()
	
	РабочийОбъект=РеквизитФормыВЗначение("Объект");
	РабочийОбъект.АдресХранилищаПеременныхДляРасчета=РабочийОбъектАдрес;
	РабочийОбъект.ВосстановитьПеременныеДляРасчета();
		
	Возврат РабочийОбъект;
		
КонецФункции // ПолучитьСправочникОбъект()
 
&НаСервере
Процедура ПоместитьРабочийОбъект(РабочийОбъект)
	
	РабочийОбъектАдрес=ПоместитьВоВременноеХранилище(РабочийОбъект.ПодготовитьСтруктуруПеременныхДляРасчета(),ЭтаФорма.УникальныйИдентификатор);
	ЗначениеВРеквизитФормы(РабочийОбъект,"Объект");
				
КонецПроцедуры // ПолучитьСправочникОбъект()

&НаСервере
Процедура ОбновитьОбъектВХранилище()
	
	РабочийОбъект=ПолучитьРабочийОбъект();
	РабочийОбъектАдрес=ПоместитьВоВременноеХранилище(РабочийОбъект.ПодготовитьСтруктуруПеременныхДляРасчета(),ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры // ОбновитьОбъектВХранилище()

&НаСервере
Процедура ПроверитьВозможностьЭлиминации()
	
	Если Не Объект.Организация.ТипОрганизации = Перечисления.ТипыОрганизационныхЕдиниц.Элиминирующая Тогда
		
		Сообщить("Элиминирующие корректировки можно формировать только по элиминирующим организациям.",СтатусСообщения.Важное);
		
		Возврат;
	
	КонецЕсли;
	
	Элементы.ОперацииКнопкаЭлиминация.Пометка = НЕ Элементы.ОперацииКнопкаЭлиминация.Пометка;
	Элиминация=Элементы.ОперацииКнопкаЭлиминация.Пометка;
	
КонецПроцедуры // ПроверитьВозможностьЭлиминации()

&НаСервере
Процедура ОбработатьДанныеОперации(ДанныеРасчета)
	
	РабочийОбъектАдрес=ДанныеРасчета.РабочийОбъектАдрес;
	РабочийОбъект=ПолучитьРабочийОбъект();
	
	ДанныеРасчета.Свойство("СценарийДляНеурегулированныхОтклонений",РабочийОбъект.СценарийДляНеурегулированныхОтклонений);
	ДанныеРасчета.Свойство("ТипОрганизацийДляСверки",РабочийОбъект.ТипОрганизацийДляСверки);
		
	СтрТекущаяОперация=РабочийОбъект.Операции.Найти(ДанныеРасчета.НомерОперации,"НомерОперации");
	
	Если СтрТекущаяОперация=Неопределено Тогда
		СтрТекущаяОперация=РабочийОбъект.Операции.Добавить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрТекущаяОперация,ДанныеРасчета);
	
	ПараметрыОбработки=Новый Структура;
	ПараметрыОбработки.Вставить("ДокументОбъект",		РабочийОбъект);
	ПараметрыОбработки.Вставить("НомерОперации",		ДанныеРасчета.НомерОперации);
	ПараметрыОбработки.Вставить("ТаблицаСтрок",			Неопределено);
	ПараметрыОбработки.Вставить("ОчищатьЗаписи",		Ложь);
	ПараметрыОбработки.Вставить("Сбалансированная",		ДанныеРасчета.Сбалансированная);
	ПараметрыОбработки.Вставить("Трансформационная",	Ложь);
	ПараметрыОбработки.Вставить("АбсолютныеЗначения",	Ложь);
	
	Если НЕ ДанныеРасчета.РасчетВыполнен Тогда
		
		РабочийОбъект.ВремТаблицаЗаписей=Обработки.КорректировкиЗначенийПоказателей.ОбработатьРедактируемыеСтроки(ПараметрыОбработки);
		
		Если РабочийОбъект.ВремТаблицаЗаписей.Количество()>0 Тогда
			
			ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначений(РабочийОбъект.ВремТаблицаЗаписей,РабочийОбъект.Записи);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПодготовитьТаблицуЗаписей(РабочийОбъект);	
	ПоместитьРабочийОбъект(РабочийОбъект);
	
КонецПроцедуры // ОбработатьДанныеОперации() 

////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ИСПОЛНЯЕМЫЕ НА КЛИЕНТЕ

&НаКлиенте
Процедура ОперацииПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Операции.ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущейОперации=Элементы.Операции.ТекущиеДанные.НомерОперации;
	
	Элементы.ЗаписиОперации.ОтборСтрок=Новый ФиксированнаяСтруктура("НомерОперации",НомерТекущейОперации);
	Элементы.РезультирующиеЗаписи.ОтборСтрок=Новый ФиксированнаяСтруктура("НомерОперации",НомерТекущейОперации);
	
	Элиминация=Элементы.Операции.ТекущиеДанные.Элиминация;
	
	Элементы.ОперацииКнопкаЭлиминация.Пометка=Элиминация;
	
КонецПроцедуры

&НаКлиенте

&НаКлиенте
Процедура РедактироватьОперацию(НоваяОперация)
	
	Элиминация = Элементы.ОперацииКнопкаЭлиминация.Пометка;			
	Если НЕ ЗначениеЗаполнено(Объект.ПериодОтчета) Тогда
		
		Сообщить("Не заполнено поле ""ПериодОтчета"".",СтатусСообщения.Внимание);
		Возврат;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
		
		Сообщить("Не заполнено поле ""Сценарий"".",СтатусСообщения.Внимание);
		Возврат;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.ОсновнаяВалюта) Тогда
		
		Сообщить("Не заполнено поле ""Валюта"".",СтатусСообщения.Внимание);
		Возврат;
			
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Сообщить("Не заполнено поле ""Организация"".",СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;
	
	ОбновитьОбъектВХранилище();
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("ПериодОтчета",Объект.ПериодОтчета);
	СтруктураПараметров.Вставить("Валюта",Объект.ОсновнаяВалюта);
	СтруктураПараметров.Вставить("Сценарий",Объект.Сценарий);
	СтруктураПараметров.Вставить("Организация",Объект.Организация);
	СтруктураПараметров.Вставить("Проект",Объект.Проект);
	СтруктураПараметров.Вставить("ДокументСсылка",Объект.Ссылка);
	СтруктураПараметров.Вставить("РабочийОбъектАдрес",РабочийОбъектАдрес);
	СтруктураПараметров.Вставить("ИдентификаторРодителя",ЭтаФорма.УникальныйИдентификатор);
	
	Если НоваяОперация Тогда
		
		НомерНовойОперации=ПолучитьНомерНовойОперации();
		НомерПоследнейОперации=НомерНовойОперации;
		
		СтруктураПараметров.Вставить("ЭтоНоваяОперация",Истина);
		СтруктураПараметров.Вставить("НомерОперации",НомерНовойОперации);
		
	Иначе
		
		СтруктураПараметров.Вставить("ЭтоНоваяОперация",Ложь);
		
		ДанныеОперации=Элементы.Операции.ТекущиеДанные;
		СтруктураПараметров.Вставить("ЭтоНоваяОперация",Ложь);
		СтруктураПараметров.Вставить("Наименование",ДанныеОперации.Наименование);
		СтруктураПараметров.Вставить("Комментарий",ДанныеОперации.Комментарий);
		СтруктураПараметров.Вставить("НомерОперации",ДанныеОперации.НомерОперации);
		СтруктураПараметров.Вставить("Сбалансированная",ДанныеОперации.Сбалансированная);
			
		ЗаписиТекущейОперации=ПолучитьЗаписиОперации(ДанныеОперации.НомерОперации);
		
		Если ЗаписиТекущейОперации.Количество()>0 Тогда
			
			СтруктураПараметров.Вставить("ЗаписиОперации",ЗаписиТекущейОперации);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элиминация Тогда
		
		СтруктураПараметров.Вставить("СценарийДляНеурегулированныхОтклонений",Объект.СценарийДляНеурегулированныхОтклонений);
		СтруктураПараметров.Вставить("ТипОрганизацийДляСверки",Объект.ТипОрганизацийДляСверки);
		
		ОткрытьФорму("Документ.РучныеКорректировки.Форма.ФормаЭлиминацииУправляемая",СтруктураПараметров);
				
	Иначе
		
		ОткрытьФорму("Документ.РучныеКорректировки.Форма.ФормаОперацииУправляемая",СтруктураПараметров);
	
	КонецЕсли;
				
КонецПроцедуры // РедактироватьОперацию()

&НаКлиенте
Функция ПолучитьЗаписиОперации(НомерОперации)
	
	МассивЗаписей=ЗаписиОперации.НайтиСтроки(Новый Структура("НомерОперации",НомерОперации));
	
	Если МассивЗаписей.Количество()=0 Тогда
		Возврат МассивЗаписей;
	КонецЕсли;
	
	МассивСтруктур=Новый Массив;	
	МассивСтруктур.Вставить(0,СтруктураТиповЗаписи);
		
	Для Каждого Строка ИЗ МассивЗаписей Цикл
		
		СтруктураСтрока=Новый Структура;
		
		Для Каждого Колонка ИЗ СтруктураТиповЗаписи Цикл
			
			СтруктураСтрока.Вставить(Колонка.Ключ,Строка[Колонка.Ключ]);
			
		КонецЦикла;
			
		МассивСтруктур.Добавить(СтруктураСтрока);
		
	КонецЦикла;
	
	Возврат МассивСтруктур
		
КонецФункции // ПолучитьЗаписиОперации()

&НаКлиенте
Процедура КоманднаяПанельОперацииОбычнаяОперация(Команда)
	
	РедактироватьОперацию(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЭлиминация(Команда)
	
	ПроверитьВозможностьЭлиминации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РедактироватьОперацию(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяВалютаПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонРучнойОперацииПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВводаКорректировкиПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникКорректировкиПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ИзмененыДанныеРучнойКорректировки" 
		И ТипЗнч(Параметр)=Тип("Структура")
		И Параметр.ИдентификаторРодителя=ЭтаФорма.УникальныйИдентификатор Тогда
		
		ОбработатьДанныеОперации(Параметр);
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОткрыватьОперацию Тогда
		
		Элементы.Операции.ТекущаяСтрока=Объект.Операции.НайтиСтроки(Новый Структура("НомерОперации",1))[0].ПолучитьИдентификатор();
		РедактироватьОперацию(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ=Истина;
	
	Если Копирование Тогда
		
		КопироватьТекущуюОперацию();
		
	Иначе
		
		РедактироватьОперацию(Истина);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНомерНовойОперации()
	
	НомерОперации=0;
	
	Для Каждого Строка ИЗ Объект.Операции Цикл
		
		Если Строка.НомерОперации>НомерОперации Тогда
			
			НомерОперации=Строка.НомерОперации;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НомерОперации+1; 
				
КонецФункции // ПолучитьНомерНовойОперации() 

&НаКлиенте
Процедура КопироватьТекущуюОперацию()
	
	МассивТекОпераций=Объект.Операции.НайтиСтроки(Новый Структура("НомерОперации",НомерТекущейОперации));
	
	Если МассивТекОпераций.Количество()=0 Тогда
		
		РедактироватьОперацию(Истина);
		Возврат;
		
	КонецЕсли;
	
	ТекОперация=МассивТекОпераций[0];
	
	Если НЕ ЗначениеЗаполнено(Объект.ПериодОтчета) Тогда
		
		Сообщить("Не заполнено поле ""ПериодОтчета"".",СтатусСообщения.Внимание);
		Возврат;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
		
		Сообщить("Не заполнено поле ""Сценарий"".",СтатусСообщения.Внимание);
		Возврат;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.ОсновнаяВалюта) Тогда
		
		Сообщить("Не заполнено поле ""Валюта"".",СтатусСообщения.Внимание);
		Возврат;
			
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Сообщить("Не заполнено поле ""Организация"".",СтатусСообщения.Внимание);
		Возврат;
		
	КонецЕсли;
	
	ОбновитьОбъектВХранилище();
	
	НоваяОперация=Объект.Операции.Добавить();
			
	ЗаполнитьЗначенияСвойств(НоваяОперация,ТекОперация);
	НоваяОперация.НомерОперации=ПолучитьНомерНовойОперации();
	
	// Добавим строки в таблицы записей
	
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("НомерОперации",ТекОперация.НомерОперации);
	
	КопЗаписи=Объект.Записи.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрЗапись ИЗ КопЗаписи Цикл
		
		НоваяЗапись=Объект.Записи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрЗапись);
		НоваяЗапись.НомерОперации=НоваяОперация.НомерОперации;
		
	КонецЦикла;
	
	// Добавим строки в таблицы редактируемых записей
		
	КопРедактируемыеЗаписи=Объект.РедактируемыеЗаписи.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрЗапись ИЗ КопРедактируемыеЗаписи Цикл
		
		НоваяРедактируемаяЗапись=Объект.РедактируемыеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяРедактируемаяЗапись,СтрЗапись);
		НоваяРедактируемаяЗапись.НомерОперации=НоваяОперация.НомерОперации;
		
	КонецЦикла;
	
	КопЗаписиОперации=ЗаписиОперации.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрЗапись ИЗ КопЗаписиОперации Цикл
		
		НоваяяЗаписьОперации=ЗаписиОперации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяяЗаписьОперации,СтрЗапись);
		НоваяяЗаписьОперации.НомерОперации=НоваяОперация.НомерОперации;
		
	КонецЦикла;
	
	Если НоваяОперация.Элиминация Тогда
		
		// Добавим строки в таблицы данных элиминации
		
		КопДанныеЭлиминации=Объект.ДанныеЭлиминации.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрЗапись ИЗ КопДанныеЭлиминации Цикл
			
			НовыеДанныеЭлиминации=Объект.ДанныеЭлиминации.Добавить();
			ЗаполнитьЗначенияСвойств(НовыеДанныеЭлиминации,СтрЗапись);
			НовыеДанныеЭлиминации.НомерОперации=НоваяОперация.НомерОперации;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПараметров=Новый Структура;
	СтруктураПараметров.Вставить("ПериодОтчета",Объект.ПериодОтчета);
	СтруктураПараметров.Вставить("Валюта",Объект.ОсновнаяВалюта);
	СтруктураПараметров.Вставить("Сценарий",Объект.Сценарий);
	СтруктураПараметров.Вставить("Организация",Объект.Организация);
	СтруктураПараметров.Вставить("Проект",Объект.Проект);
	СтруктураПараметров.Вставить("ДокументСсылка",Объект.Ссылка);
	СтруктураПараметров.Вставить("РабочийОбъектАдрес",РабочийОбъектАдрес);
	СтруктураПараметров.Вставить("ИдентификаторРодителя",ЭтаФорма.УникальныйИдентификатор);
	
	СтруктураПараметров.Вставить("ЭтоНоваяОперация",Ложь);
	
	ДанныеОперации=НоваяОперация;
	СтруктураПараметров.Вставить("ЭтоНоваяОперация",Ложь);
	СтруктураПараметров.Вставить("Наименование",ДанныеОперации.Наименование);
	СтруктураПараметров.Вставить("Комментарий",ДанныеОперации.Комментарий);
	СтруктураПараметров.Вставить("НомерОперации",ДанныеОперации.НомерОперации);
	СтруктураПараметров.Вставить("Сбалансированная",ДанныеОперации.Сбалансированная);
	
	ЗаписиТекущейОперации=ПолучитьЗаписиОперации(ДанныеОперации.НомерОперации);
	
	Если ЗаписиТекущейОперации.Количество()>0 Тогда
		
		СтруктураПараметров.Вставить("ЗаписиОперации",ЗаписиТекущейОперации);
		
	КонецЕсли;
			
	Если Элиминация Тогда
		
		СтруктураПараметров.Вставить("СценарийДляНеурегулированныхОтклонений",Объект.СценарийДляНеурегулированныхОтклонений);
		СтруктураПараметров.Вставить("ТипОрганизацийДляСверки",Объект.ТипОрганизацийДляСверки);
		
		ОткрытьФорму("Документ.РучныеКорректировки.Форма.ФормаЭлиминацииУправляемая",СтруктураПараметров);
				
	Иначе
		
		ОткрытьФорму("Документ.РучныеКорректировки.Форма.ФормаОперацииУправляемая",СтруктураПараметров);
	
	КонецЕсли;
	
КонецПроцедуры // КопироватьОперацию()

&НаКлиенте
Процедура ОперацииПередУдалением(Элемент, Отказ)
	
	Если Элементы.Операции.ТекущиеДанные=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НомерОперации=Элементы.Операции.ТекущиеДанные.НомерОперации;
	
	УдалитьЗаписиОперации(НомерОперации,Объект.Записи);
	УдалитьЗаписиОперации(НомерОперации,Объект.РедактируемыеЗаписи);
	УдалитьЗаписиОперации(НомерОперации,Объект.ДанныеЭлиминации);
	УдалитьЗаписиОперации(НомерОперации,ЗаписиОперации);
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписиОперации(НомерОперации,ТаблицаЗаписей)
	
	СтруктураПоиска=Новый Структура;
	
	МассивКУдалению=ТаблицаЗаписей.НайтиСтроки(Новый Структура("НомерОперации",НомерОперации));
	
	Для Каждого СтрЗапись ИЗ МассивКУдалению Цикл
		
		ТаблицаЗаписей.Удалить(СтрЗапись);
		
	КонецЦикла;
	
	
КонецПроцедуры // УдалитьЗаписиОперации() 
