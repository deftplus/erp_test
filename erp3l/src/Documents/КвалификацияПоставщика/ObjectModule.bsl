#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.УчастникиКвалифицированныеПоЛоту.Записывать = Истина;
	Движения.УчастникиКвалификации.Записывать = Истина;
	Движение = Движения.УчастникиКвалификации.Добавить();
	Движение.ЗакупочнаяПроцедура = ЗакупочнаяПроцедура;
	Движение.Участник = АнкетаПоставщика;
	РодителиНоменклатуры = Новый Соответствие;
	флКвалифицирован = (РешениеПоДокументу 
		= Перечисления.ВидыРешенийПоДокументуКвалификации.ПоложительноеРешение);
	Если флКвалифицирован Тогда
	Если НЕ ТИПЗНч(АнкетаПоставщика)=Тип("СправочникСсылка.Контрагенты") И НЕ ЗначениеЗаполнено(АнкетаПоставщика.Контрагент) Тогда
			ПоставщикОбъект = АнкетаПоставщика.ПолучитьОбъект();
			ПоставщикОбъект.Контрагент =
				АккредитацияПоставщиковУХ.ПолучитьКонтрагентаПоставщика(
					АнкетаПоставщика);
			ПоставщикОбъект.Записать();
		КонецЕсли;
		// поставщик квалифицирован по лоту
		Движение = Движения.УчастникиКвалифицированныеПоЛоту.Добавить();
		Движение.ЗакупочнаяПроцедура = ЗакупочнаяПроцедура;
		Движение.УчастникАккредитации = АнкетаПоставщика;
		Если  ТИПЗНч(АнкетаПоставщика)=Тип("СправочникСсылка.Контрагенты") Тогда
		Движение.Контрагент = АнкетаПоставщика;	
		Иначе	
		Движение.Контрагент = АнкетаПоставщика.Контрагент;
		КонецЕсли;
		Движение.ДатаУтверждения = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	УстановитьОрганизациюПоЗакупке();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ДругойДокумент = 
		Документы.КвалификацияПоставщика.ПолучитьАналогичныйДокумент(
			ЭтотОбъект);
	Если ЗначениеЗаполнено(ДругойДокумент) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(НСтр(
			"ru='Уже есть квалификация поставщика ""%1"" для анкеты"
				+ " поставщика ""%2"" для закупочной процедуры ""%3""!'"),
			ДругойДокумент,
			АнкетаПоставщика,
			ЗакупочнаяПроцедура);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		ТипЗаполнения = ТипЗнч(ДанныеЗаполнения);
		Если ТипЗаполнения = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Иначе
			Если НЕ ЦентрализованныеЗакупкиУХ.ОбъектУтвержден(ДанныеЗаполнения.Ссылка) Тогда
				ВызватьИсключение НСтр("ru='Ввод на основании можно делать только"
					+ " на основании утвержденной закупочной процедуры!'");
			КонецЕсли;
			Если НЕ ДанныеЗаполнения.ТребуетсяКвалификационныйОтбор Тогда
				ВызватьИсключение НСтр("ru='Ввод на основании можно делать только"
					+ " на основании закупочной процедуры с квалификационным отбором!'");
			КонецЕсли;
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗаполнения) Тогда
				Если НЕ ДанныеЗаполнения.Проведен Тогда
					ВызватьИсключение НСтр("ru='Ввод на основании можно делать только "
						+ "на основании проведенного документа!'");
				КонецЕсли;
			КонецЕсли;
			Если ТипЗаполнения = Тип("СправочникСсылка.ЗакупочныеПроцедуры") Тогда
				ЗакупочнаяПроцедура = ДанныеЗаполнения;
			ИначеЕсли ТипЗаполнения = 
					Тип("ДокументСсылка.ОповещениеАккредитованныхПоставщиковОТоргах") Тогда
				ЗакупочнаяПроцедура = ДанныеЗаполнения.ЗакупочнаяПроцедура;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УстановитьОрганизациюПоЗакупке();
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(РешениеПоДокументу) Тогда
		РешениеПоДокументу = Перечисления.ВидыРешенийПоДокументуКвалификации.РешениеНеПринято;
	КонецЕсли;
	ЭтоВнешнийПользователь = ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя();
	Если ЭтоВнешнийПользователь Тогда
		ТекущийПользователь = Пользователи.АвторизованныйПользователь();
		АнкетаПоставщика = ТекущийПользователь.ОбъектАвторизации;
	Иначе
		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
			Ответственный = Пользователи.ТекущийПользователь();
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗакупочнаяПроцедура) Тогда
		Если НЕ ЗакупочнаяПроцедура.ТребуетсяКвалификационныйОтбор Тогда
			ВызватьИсключение НСтр("ru='Ввод на основании можно делать только"
				+ " на основании закупки с квалификационным отбором!'");
		КонецЕсли;
		Если ЗначениеЗаполнено(АнкетаПоставщика) Тогда
			ДанныеАккредитации = АккредитацияПоставщиковУХ.ПолучитьДанныеАккредитацииПоставщика(Организация, АнкетаПоставщика, Дата);
			Если ДанныеАккредитации <> Неопределено
					И ДанныеАккредитации.Состояние = Перечисления.СостоянияАккредитацииПоставщиков.Аккредитован Тогда
				ДокументАккредитации = ДанныеАккредитации.Регистратор;
			КонецЕсли;
			ТребованияЛота.Загрузить(
				АккредитацияПоставщиковУХ.ПолучитьТребованияЗакупкиДляПоставщика(
					ЗакупочнаяПроцедура,
					АнкетаПоставщика,
					ТребованияЛота.Выгрузить()));
		Иначе
			мНоменклатуры =
			ЦентрализованныеЗакупкиУХ.ПолучитьМассивНоменклатурыИГруппЗакупки(
				ЗакупочнаяПроцедура);
			ТребованияПоНоменклатуре = 
				АккредитацияПоставщиковУХ.ПолучитьВсеТребованияПоНоменклатуре(
					Дата,
					Организация,
					мНоменклатуры);
			ТребованияЛота.Загрузить(
				АккредитацияПоставщиковУХ.ОбъединитьТребованияКПоставщикам(
					ЗакупочнаяПроцедура.ТребованияКПоставщикам.Выгрузить(),
					ТребованияПоНоменклатуре));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОрганизациюПоЗакупке()
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Если ЗначениеЗаполнено(ЗакупочнаяПроцедура) Тогда
			Организация = ЗакупочнаяПроцедура.ОрганизаторЗакупки;
		Иначе
			Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


#КонецЕсли

