
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ДатаНачала, ВидОтчета", "ПериодОтчета", Отказ);
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);	
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодОтчета",			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("ГраницаДоДокумента",		МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Реквизиты.Период, Реквизиты.Ссылка));
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта",	Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ДопВалюта", 				Реквизиты.ВалютаПредставления);
	Запрос.УстановитьПараметр("ВидОтчета", 				Реквизиты.ВидОтчета);
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО",Реквизиты.ФормироватьПроводкиМСФО);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_втНастройки(НомераТаблиц));
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		ТекстЗапроса.Добавить(ТекстЗапроса_ИтогиПоСчетам_ТУ(НомераТаблиц));
	Иначе 
		ТекстЗапроса.Добавить(МСФОВызовСервераУХ.ТекстЗапроса_АОСВ(НомераТаблиц, "ДО,КО", Истина, "втНастройки"));//втНастройки.Счет
	КонецЕсли;	
	ТекстЗапроса.Добавить(ТекстЗапроса_ТаблицаПроводок(НомераТаблиц));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
		
	Возврат ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапроса_втНастройки(НомераТаблиц)
	
	НомераТаблиц.Вставить("втНастройки", НомераТаблиц.Количество());
	//Поле "Счет" - используется для отбора по АОСВ
	
	Возврат 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ФормироватьПроводкиМСФО
	|			ТОГДА т.СчетДляПроверки.СчетСсылка
	|		ИНАЧЕ т.СчетДляПроверки
	|	КОНЕЦ КАК Счет,
	|	ВЫБОР
	|		КОГДА т.СчетДляПроверки.СчетСсылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ВЫБОР
	|					КОГДА &ФормироватьПроводкиМСФО
	|						ТОГДА т.СчетДляПроверки.СчетСсылка
	|					ИНАЧЕ т.СчетДляПроверки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ФормироватьПроводкиМСФО
	|					ТОГДА т.СчетДляКорректировки.СчетСсылка
	|				ИНАЧЕ т.СчетДляКорректировки
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА т.СчетДляПроверки.СчетСсылка.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ВЫБОР
	|					КОГДА &ФормироватьПроводкиМСФО
	|						ТОГДА т.СчетДляКорректировки.СчетСсылка
	|					ИНАЧЕ т.СчетДляКорректировки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ФормироватьПроводкиМСФО
	|					ТОГДА т.СчетДляПроверки.СчетСсылка
	|				ИНАЧЕ т.СчетДляПроверки
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР т.СчетДляПроверки.СчетСсылка.Вид
	|		КОГДА ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ИСТИНА
	|		КОГДА ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетДляПроверкиАктивный,
	|	ВидСубконто1.ТолькоОбороты КАК ТолькоОбороты1,
	|	ВидСубконто2.ТолькоОбороты КАК ТолькоОбороты2,
	|	ВидСубконто3.ТолькоОбороты КАК ТолькоОбороты3
	|ПОМЕСТИТЬ втНастройки
	|ИЗ
	|	РегистрСведений.НастройкиРеклассификацииАПСчетов КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК ВидСубконто1
	|		ПО т.СчетДляПроверки.СчетСсылка = ВидСубконто1.Ссылка
	|			И (ВидСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК ВидСубконто2
	|		ПО т.СчетДляПроверки.СчетСсылка = ВидСубконто2.Ссылка
	|			И (ВидСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.МСФО.ВидыСубконто КАК ВидСубконто3
	|		ПО т.СчетДляПроверки.СчетСсылка = ВидСубконто3.Ссылка
	|			И (ВидСубконто3.НомерСтроки = 3)
	|ГДЕ
	|	т.Сценарий В (&Сценарий, ЗНАЧЕНИЕ(Справочник.Сценарии.ПустаяСсылка))
	|	И т.СчетДляПроверки.СчетСсылка.Вид <> ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)";

КонецФункции

Функция ТекстЗапроса_ИтогиПоСчетам_ТУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("втИтогиПоСчетам", НомераТаблиц.Количество());//таблица аналогична втИтогиПоСчетам для АОСВ	
	
	Возврат 
	"ВЫБРАТЬ
	|	МСФООстатки.Счет КАК Счет,
	|	ЕСТЬNULL(МСФООстатки.Субконто1, НЕОПРЕДЕЛЕНО) КАК Субконто1,
	|	ЕСТЬNULL(МСФООстатки.Субконто2, НЕОПРЕДЕЛЕНО) КАК Субконто2,
	|	ЕСТЬNULL(МСФООстатки.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
	|	ВЫБОР
	|		КОГДА МСФООстатки.Счет.Валютный
	|			ТОГДА МСФООстатки.СуммаВВалютеОстаток
	|		ИНАЧЕ МСФООстатки.СуммаВВалютеУчетаОстаток
	|	КОНЕЦ КАК СуммаВВалюте,
	|	МСФООстатки.СуммаВВалютеУчетаОстаток КАК Сумма,
	|	ВЫБОР
	|		КОГДА МСФООстатки.Счет.Валютный
	|			ТОГДА МСФООстатки.Валюта
	|		ИНАЧЕ &ФункциональнаяВалюта
	|	КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ втИтогиПоСчетам
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&ГраницаДоДокумента,
	|			Счет В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втНастройки КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация) КАК МСФООстатки
	|ГДЕ
	|	МСФООстатки.СуммаВВалютеУчетаОстаток <> 0";

КонецФункции

Функция ТекстЗапроса_ТаблицаПроводок(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПроводок", НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций._01РеклассАПСчетов) КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА втНастройки.СчетДт.Валютный
	|			ТОГДА втИтогиПоСчетам.Валюта
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА втНастройки.СчетКт.Валютный
	|			ТОГДА втИтогиПоСчетам.Валюта
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА втНастройки.СчетДт.Валютный
	|			ТОГДА ВЫБОР
	|					КОГДА втИтогиПоСчетам.СуммаВВалюте > 0
	|						ТОГДА -втИтогиПоСчетам.СуммаВВалюте
	|					ИНАЧЕ втИтогиПоСчетам.СуммаВВалюте
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаВВалютеДт,
	|	ВЫБОР
	|		КОГДА втНастройки.СчетКт.Валютный
	|			ТОГДА ВЫБОР
	|					КОГДА втИтогиПоСчетам.СуммаВВалюте > 0
	|						ТОГДА -втИтогиПоСчетам.СуммаВВалюте
	|					ИНАЧЕ втИтогиПоСчетам.СуммаВВалюте
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаВВалютеКт,
	|	втНастройки.СчетДт КАК СчетДт,
	|	втИтогиПоСчетам.Субконто1 КАК СубконтоДт1,
	|	втИтогиПоСчетам.Субконто2 КАК СубконтоДт2,
	|	втИтогиПоСчетам.Субконто3 КАК СубконтоДт3,
	|	втНастройки.СчетКт КАК СчетКт,
	|	втИтогиПоСчетам.Субконто1 КАК СубконтоКт1,
	|	втИтогиПоСчетам.Субконто2 КАК СубконтоКт2,
	|	втИтогиПоСчетам.Субконто3 КАК СубконтоКт3,
	|	ВЫБОР
	|		КОГДА ФункциональнаяВалюта.Курс = 0
	|				ИЛИ ВалютаОстатка.Кратность = 0
	|			ТОГДА 0
	|		КОГДА втИтогиПоСчетам.Валюта В (&ФункциональнаяВалюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|			ТОГДА ВЫБОР
	|					КОГДА втИтогиПоСчетам.Сумма > 0
	|						ТОГДА -втИтогиПоСчетам.Сумма
	|					ИНАЧЕ втИтогиПоСчетам.Сумма
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втИтогиПоСчетам.СуммаВВалюте > 0
	|					ТОГДА -втИтогиПоСчетам.СуммаВВалюте
	|				ИНАЧЕ втИтогиПоСчетам.СуммаВВалюте
	|			КОНЕЦ * (ВалютаОстатка.Курс * ФункциональнаяВалюта.Кратность) / (ФункциональнаяВалюта.Курс * ВалютаОстатка.Кратность)
	|	КОНЕЦ КАК СуммаВФункциональнойВалюте,
	|	ВЫБОР
	|		КОГДА ДопВалюта.Курс = 0
	|				ИЛИ ВалютаОстатка.Кратность = 0
	|			ТОГДА 0
	|		КОГДА втИтогиПоСчетам.Валюта В (&ФункциональнаяВалюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|			ТОГДА ВЫБОР
	|					КОГДА втИтогиПоСчетам.СуммаВВалюте > 0
	|						ТОГДА -втИтогиПоСчетам.СуммаВВалюте
	|					ИНАЧЕ втИтогиПоСчетам.СуммаВВалюте
	|				КОНЕЦ * (ФункциональнаяВалюта.Курс * ДопВалюта.Кратность) / (ДопВалюта.Курс * ФункциональнаяВалюта.Кратность)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втИтогиПоСчетам.СуммаВВалюте > 0
	|					ТОГДА -втИтогиПоСчетам.СуммаВВалюте
	|				ИНАЧЕ втИтогиПоСчетам.СуммаВВалюте
	|			КОНЕЦ * (ВалютаОстатка.Курс * ДопВалюта.Кратность) / (ДопВалюта.Курс * ВалютаОстатка.Кратность)
	|	КОНЕЦ КАК СуммаВВалютеОтчетности
	|ИЗ
	|	втИтогиПоСчетам КАК втИтогиПоСчетам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНастройки КАК втНастройки
	|		ПО втИтогиПоСчетам.Счет = втНастройки.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК ВалютаОстатка
	|		ПО втИтогиПоСчетам.Валюта = ВалютаОстатка.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ДопВалюта) КАК ДопВалюта
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ФункциональнаяВалюта) КАК ФункциональнаяВалюта
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА втНастройки.СчетДляПроверкиАктивный = ИСТИНА
	|				ТОГДА втИтогиПоСчетам.Сумма < 0
	|			КОГДА втНастройки.СчетДляПроверкиАктивный = ЛОЖЬ
	|				ТОГДА втИтогиПоСчетам.Сумма > 0
	|		КОНЕЦ";

КонецФункции

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли