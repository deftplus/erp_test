
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено Тогда
	
		Если ТипДанныхЗаполнения = Тип("Структура") Тогда
			
			Если ДанныеЗаполнения.Свойство("ЗаполнитьПоНСБУ") И (ДанныеЗаполнения.ЗаполнитьПоНСБУ = Истина) Тогда
			
				ЗаполнитьПоНСБУ(ДанныеЗаполнения);
				
			ИначеЕсли ДанныеЗаполнения.Свойство("АдресТаблицы") Тогда
			
				МСФОВызовСервераУХ.ЗаполнитьПоТаблицеЗагрузки(ЭтотОбъект, ДанныеЗаполнения);
		
			КонецЕсли;
			
		ИначеЕсли Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда	
			
			ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
			
		КонецЕсли;
		
	Иначе
		
		ИнициализироватьДокумент(ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент(ОбъектКопирования);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)	
	ПроведениеСерверУХ.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.РезервыПоДЗИАвансамВыданным.ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);	
	Документы.РезервыПоДЗИАвансамВыданным.СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ);	
	ПроведениеСерверУХ.ОбработкаПроведения_ЗаписьИКонтроль(ЭтотОбъект, Отказ);	
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСерверУХ.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_Стандартные

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)	
	МСФОУХ.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	//УправлениеВнеоборотнымиАктивамиПереопределяемый.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции_Документа

Процедура ЗаполнитьПоНСБУ(ДанныеЗаполнения)

	КонтекстДокумента = Новый Структура;
	Для каждого РеквизитДокумента Из Метаданные().Реквизиты Цикл
		КонтекстДокумента.Вставить(РеквизитДокумента.Имя, ЭтотОбъект[РеквизитДокумента.Имя]);
	КонецЦикла;	
	
	КонецПериода = КонецДня(ПериодОтчета.ДатаОкончания);
	РеквизитыУП = МСФОВызовСервераУХ.РеквизитыДляФормыУП(Организация, КонецПериода, Сценарий);

	РезультатРасчета = Документы.РезервыПоДЗИАвансамВыданным.ПолучитьТаблицуРезервов(ЭтотОбъект, Неопределено);
	Если РезультатРасчета.Резервы <> Неопределено Тогда
		ЭтотОбъект.Резервы.Загрузить(РезультатРасчета.Резервы);
	КонецЕсли;
	
	КэшируемыеЗначения = Неопределено;

	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьДатуОкончанияОтсрочки");
	
	Если РеквизитыУП.ФормироватьПроводкиМСФО Тогда
	    СтруктураДействий.Вставить("ЗаполнитьСчетаЗадолженностиПоСчетуМСФО",Новый Структура("Контекст", КонтекстДокумента));
	Иначе	
		СтруктураДействий.Вставить("ЗаполнитьСчетаЗадолженностиПоСчетуНСБУ",Новый Структура("Контекст", КонтекстДокумента));
	КонецЕсли;
	
	СтруктураДействий.Вставить("ЗаполнитьКоличествоДнейПросрочки", Новый Структура("КонецПериода", КонецПериода));
	СтруктураДействий.Вставить("ЗаполнитьДолюПросрочки");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоДнейОтсрочки");
	СтруктураДействий.Вставить("ЗаполнитьКоэффициентыРезерва", Новый Структура("КонецПериода,Контекст", КонецПериода, КонтекстДокумента));
	СтруктураДействий.Вставить("РассчитатьКоэффициентРезерва"); 
	СтруктураДействий.Вставить("РассчитатьРезервМСФО");
	СтруктураДействий.Вставить("РассчитатьОстатокЗадолженностиМСФО", Новый Структура("Контекст", КонтекстДокумента));
	СтруктураДействий.Вставить("РассчитатьНачислениеРезерваМСФО", Новый Структура("Контекст", КонтекстДокумента));
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_РезервыДЗ(ЭтотОбъект.Резервы, СтруктураДействий, КэшируемыеЗначения);
	
	ЭтотОбъект.ПараметрыРасчета.Очистить();
	Для каждого СтрокаЗначения Из КэшируемыеЗначения.РасчетныеЗначенияПараметров Цикл		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ПараметрыРасчета.Добавить(), СтрокаЗначения);			
	КонецЦикла;	
	ЭтотОбъект.ПараметрыРасчета.Сортировать("КлючСвязи,ПараметрРасчета");
	
	//ПараметрыРасчета 
	Если Не РеквизитыУП.ФормироватьПроводкиМСФО Тогда
		
		ЭтотОбъект.ДвижениеРезервовНСБУ.Очистить();
		
	Иначе 
		
		ЭтотОбъект.ДвижениеРезервовНСБУ.Загрузить(РезультатРасчета.ДвижениеРезервовНСБУ);	
		
		СтруктураДействий = Новый Структура;	
		СтруктураДействий.Вставить("ЗаполнитьСчетаПоВидуДвижений", Новый Структура("Контекст", КонтекстДокумента));
		СтруктураДействий.Вставить("РассчитатьСуммуОперации", Новый Структура("Контекст", КонтекстДокумента));
		
		ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_РезервыДЗ(ЭтотОбъект.ДвижениеРезервовНСБУ, СтруктураДействий, Неопределено);

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти  

#КонецЕсли
