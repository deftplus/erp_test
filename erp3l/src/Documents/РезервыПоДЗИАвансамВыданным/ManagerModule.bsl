
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ЗагрузкаДанныхТаблицей

Функция ПолучитьТаблицуЗагрузки(Объект) Экспорт

	Результат = Объект.Резервы.Выгрузить();
	
	Результат.Колонки.Удалить("Номер");
	
	Результат.Колонки.Удалить("СчетРезерваМСФО");
	Результат.Колонки.Удалить("СчетЗадолженностиНСБУ");
	Результат.Колонки.Удалить("СчетЗадолженностиМСФО");
	
	Результат.Колонки.Удалить("РучноеРедактирование");
	Результат.Колонки.Удалить("СчетОбесцененнойЗадолженностиМСФО");
	
	Результат.Колонки.Удалить("СчетРасходаМСФО");
	Результат.Колонки.Удалить("СчетРасходаСубконто1МСФО");
	Результат.Колонки.Удалить("СчетРасходаСубконто2МСФО");
	Результат.Колонки.Удалить("СчетРасходаСубконто3МСФО");
	
	Результат.Колонки.Удалить("КлючСвязи");
	
	Результат.Колонки.Удалить("СчетДолгосрочнойЗадолженностиМСФО");
	Результат.Колонки.Удалить("СчетОбесцененнойДолгосрочнойЗадолженностиМСФО");
	Результат.Колонки.Удалить("СчетРезерваДляДолгосрочнойЗадолженностиМСФО");
	
	Возврат Результат;

КонецФункции

Функция ЗагрузитьТаблицу(Объект, ТаблицаИсточник) Экспорт

	Объект.Движения.МСФО.Очистить();
	
	Кэш = НОвый Структура("ВидыСубконто,ЗначенияСубконто", НОвый Соответствие, НОвый Соответствие);
	
	отСчет = Новый ОписаниеТипов("ПланСчетовСсылка.МСФО");
	отВидОперации = Новый ОписаниеТипов("СправочникСсылка.ВидыОпераций");
	
	Если Объект.Сценарий.Пустая() Тогда
		Объект.Сценарий = Справочники.Сценарии.Факт;
	КонецЕсли;
	
	Для каждого СтрокаИсточник Из ТаблицаИсточник Цикл
	
		//СтрокаПриемник = Объект.Движения.МСФО.Добавить();
		//СтрокаПриемник.Сценарий = Объект.Сценарий;
		//СтрокаПриемник.Активность = Истина;		
		//ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник);
		//
		//СтрокаПриемник.ВидОперации = ПолучитьЗначениеКэша(СтрокаИсточник.ВидОперации, Кэш, отВидОперации);
		//СтрокаПриемник.СчетДт = ПолучитьЗначениеКэша(СтрокаИсточник.СчетДт, Кэш, отСчет);
		//СтрокаПриемник.СчетКт = ПолучитьЗначениеКэша(СтрокаИсточник.СчетКт, Кэш, отСчет);
		//
		//СвойстваСчетаДт = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(СтрокаПриемник.СчетДт);
		//
		//СтрокаПриемник.СубконтоДт1 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоДт1, Кэш, СвойстваСчетаДт.ВидСубконто1);
		//СтрокаПриемник.СубконтоДт2 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоДт2, Кэш, СвойстваСчетаДт.ВидСубконто2);
		//СтрокаПриемник.СубконтоДт3 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоДт3, Кэш, СвойстваСчетаДт.ВидСубконто3);		
		//
		//СвойстваСчетаКт = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(СтрокаПриемник.СчетКт);
		//
		//СтрокаПриемник.СубконтоКт1 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоКт1, Кэш, СвойстваСчетаКт.ВидСубконто1);
		//СтрокаПриемник.СубконтоКт2 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоКт2, Кэш, СвойстваСчетаКт.ВидСубконто2);
		//СтрокаПриемник.СубконтоКт3 = ПолучитьЗначениеКэша(СтрокаИсточник.СубконтоКт3, Кэш, СвойстваСчетаКт.ВидСубконто3);
		//
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ДатаНачала", "ПериодОтчета", Отказ);
	Реквизиты.Вставить("ГраницыПериода", 			МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты,,Истина));
	Реквизиты.Вставить("Период", 					КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));
	Реквизиты.Вставить("КорректировкаНаРазницу",	Истина);
	Реквизиты.Вставить("ИсточникКорректировки",		"РасчетныеДанныеДЗ");
	Реквизиты.Вставить("РеквизитыОшибки",			Новый Структура("Договор", НСтр("ru = 'Договор контрагента'")));
	Реквизиты.Вставить("ВидОперации",				ПредопределенноеЗначение("Справочник.ВидыОпераций.РезервыПоДЗИАвансамВыданным"));
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",					Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ПериодОтчета", 				Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 		Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО", 	Реквизиты.ФормироватьПроводкиМСФО);
		
	Запрос.УстановитьПараметр("Период",							МСФОКлиентСерверУХ.ПериодОтражения(Реквизиты.ГраницыПериода.ДатаОкончания, "Резервы"));
	Запрос.УстановитьПараметр("ПериодСторно",					КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));
	Запрос.УстановитьПараметр("ДатаНачалаПериода",				Реквизиты.ГраницыПериода.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода",			КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));
	Запрос.УстановитьПараметр("ГраницаОстатков",				Новый Граница(Реквизиты.ГраницыПериода.ДатаНачала, ВидГраницы.Исключая));	
	Запрос.УстановитьПараметр("ДатаНачалаСледующегоПериода",	ОбщегоНазначенияУХ.ДобавитьДень(Реквизиты.ГраницыПериода.ДатаОкончания,1));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаДляПроводок(НомераТаблиц);
	
	ИмяРеквизитаКонтрагент = ВстраиваниеУХКлиентСервер.ИмяРеквизитаКонтрагент();
	Если ИмяРеквизитаКонтрагент <> "Владелец" Тогда //ЕРПУХ
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Договор.Владелец", "Договор.Контрагент");
	КонецЕсли;

	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапросаТаблицаДляПроводок(НомераТаблиц)

	НомераТаблиц.Вставить("втРезервы",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИнтервалНепросроченная",	НомераТаблиц.Количество());	
	НомераТаблиц.Вставить("втИнтервалы",				НомераТаблиц.Количество());	
	НомераТаблиц.Вставить("втДвижениеРезервов", 		НомераТаблиц.Количество());	
	НомераТаблиц.Вставить("втСчетаДЗ", 					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втРасчетныеДанные",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втВидыДвижений",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПроводок",			НомераТаблиц.Количество());
	
    Возврат	
	"ВЫБРАТЬ
	|	Резервы.Контрагент КАК Контрагент,
	|	Резервы.Договор КАК Договор,
	|	Резервы.ОтсрочкаДниМСФО КАК ОтсрочкаДниМСФО,
	|	Резервы.СчетРезерваМСФО КАК СчетРезерваМСФО,
	|	Резервы.СчетЗадолженностиМСФО КАК СчетЗадолженностиМСФО,
	|	Резервы.СчетОбесцененнойДолгосрочнойЗадолженностиМСФО КАК СчетОбесцененнойДолгосрочнойЗадолженностиМСФО,
	|	Резервы.ДатаПогашенияПоДокументуНСБУ КАК ДатаПогашенияПоДокументуНСБУ,
	|	Резервы.ПросрочкаДниМСФО КАК ПросрочкаДниМСФО,
	|	Резервы.ОстатокЗадолженностиВВалютеМСФО КАК ОстатокЗадолженностиВВалютеМСФО,
	|	Резервы.НачислениеРезерваМСФО КАК НачислениеРезерваМСФО,
	|	Резервы.НачислениеРезерваВВалютеМСФО КАК НачислениеРезерваВВалютеМСФО,
	|	ВЫБОР
	|		КОГДА Резервы.НачислениеРезерваМСФО = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРезерв,
	|	ВЫБОР
	|		КОГДА Резервы.ОтсрочкаДниМСФО >= 365
	|				И РАЗНОСТЬДАТ(&ДатаОкончанияПериода, Резервы.ДатаПогашенияПоДокументуНСБУ, ДЕНЬ) >= 365
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДолгосрочнаяЗадолженность,
	|	Резервы.СчетОбесцененнойЗадолженностиМСФО КАК СчетОбесцененнойЗадолженностиМСФО,
	|	Резервы.СчетДолгосрочнойЗадолженностиМСФО КАК СчетДолгосрочнойЗадолженностиМСФО,
	|	Резервы.СчетРезерваДляДолгосрочнойЗадолженностиМСФО КАК СчетРезерваДляДолгосрочнойЗадолженностиМСФО,
	|	Резервы.СчетРасходаМСФО КАК СчетРасходаМСФО,
	|	Резервы.СчетРасходаСубконто1МСФО КАК СчетРасходаСубконто1МСФО,
	|	Резервы.СчетРасходаСубконто2МСФО КАК СчетРасходаСубконто2МСФО,
	|	Резервы.СчетРасходаСубконто3МСФО КАК СчетРасходаСубконто3МСФО,
	|	Резервы.Подразделение КАК Подразделение,
	|	Резервы.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втРезервы
	|ИЗ
	|	Документ.РезервыПоДЗИАвансамВыданным.Резервы КАК Резервы
	|ГДЕ
	|	Резервы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИнтервалыЗадолженностей.Ссылка) КАК ИнтервалНепросроченная
	|ПОМЕСТИТЬ втИнтервалНепросроченная
	|ИЗ
	|	Справочник.ИнтервалыЗадолженностей КАК ИнтервалыЗадолженностей
	|ГДЕ
	|	НЕ ИнтервалыЗадолженностей.ПометкаУдаления
	|	И ИнтервалыЗадолженностей.ВидИнтервала = ЗНАЧЕНИЕ(Перечисление.ВидыИнтервалов.ИнтервалПросрочкиДЗ)
	|	И ИнтервалыЗадолженностей.От = 0
	|	И ИнтервалыЗадолженностей.До = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРезервы.Договор КАК Договор,
	|	втРезервы.СчетЗадолженностиМСФО КАК СчетЗадолженностиМСФО,
	|	МАКСИМУМ(ИнтервалыЗадолженностей.Ссылка) КАК Интервал
	|ПОМЕСТИТЬ втИнтервалы
	|ИЗ
	|	втРезервы КАК втРезервы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИнтервалыЗадолженностей КАК ИнтервалыЗадолженностей
	|		ПО (НЕ ИнтервалыЗадолженностей.ПометкаУдаления)
	|			И втРезервы.ПросрочкаДниМСФО >= ИнтервалыЗадолженностей.От
	|			И втРезервы.ПросрочкаДниМСФО <= ИнтервалыЗадолженностей.До
	|			И (ИнтервалыЗадолженностей.ВидИнтервала = ЗНАЧЕНИЕ(Перечисление.ВидыИнтервалов.ИнтервалПросрочкиДЗ))
	|
	|СГРУППИРОВАТЬ ПО
	|	втРезервы.Договор,
	|	втРезервы.СчетЗадолженностиМСФО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор,
	|	втРезервы.СчетЗадолженностиМСФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеРезервов.Договор КАК Договор,
	|	ДвижениеРезервов.Договор.Владелец КАК Контрагент,
	|	ДвижениеРезервов.СчетДтМСФО КАК СчетДт,
	|	ДвижениеРезервов.СчетКтМСФО КАК СчетКт,
	|	ДвижениеРезервов.ДатаОперации КАК ДатаОперации,
	|	ДвижениеРезервов.СуммаОперации КАК СуммаОперации,
	|	ДвижениеРезервов.СуммаОперацииВВалюте КАК СуммаОперацииВВалюте,
	|	ДвижениеРезервов.ПодразделениеДт КАК Подразделение,
	|	ДвижениеРезервов.НаправлениеДеятельностиДт КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втДвижениеРезервов
	|ИЗ
	|	Документ.РезервыПоДЗИАвансамВыданным.ДвижениеРезервовНСБУ КАК ДвижениеРезервов
	|ГДЕ
	|	ДвижениеРезервов.Ссылка = &Ссылка
	|	И ДвижениеРезервов.СуммаОперации <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаЗадолженностиИРезервов.СчетЗадолженности КАК СчетЗадолженности,
	|	СчетаУчетаЗадолженностиИРезервов.СчетРезерва КАК СчетРезерва,
	|	СчетаУчетаЗадолженностиИРезервов.СчетОбесцененнойЗадолженности КАК СчетОбесцененнойЗадолженности,
	|	СчетаУчетаЗадолженностиИРезервов.СчетРасхода КАК СчетРасхода
	|ПОМЕСТИТЬ втСчетаДЗ
	|ИЗ
	|	РегистрСведений.СчетаУчетаЗадолженностиИРезервов КАК СчетаУчетаЗадолженностиИРезервов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности) КАК ВидОперации,
	|	втРезервы.Контрагент КАК Контрагент,
	|	втРезервы.Договор КАК Договор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.РеклассЗадолженности) КАК Событие,
	|	ЛОЖЬ КАК СторноСледующегоПериодаТК,
	|	втРезервы.Договор.ВалютаВзаиморасчетов КАК Валюта,
	|	ВЫБОР
	|		КОГДА втРезервы.ДолгосрочнаяЗадолженность
	|				И втРезервы.НачислениеРезерваМСФО = 0
	|			ТОГДА втРезервы.СчетДолгосрочнойЗадолженностиМСФО
	|		КОГДА втРезервы.ДолгосрочнаяЗадолженность
	|			ТОГДА втРезервы.СчетОбесцененнойДолгосрочнойЗадолженностиМСФО
	|		КОГДА втРезервы.НачислениеРезерваМСФО = 0
	|			ТОГДА втРезервы.СчетЗадолженностиМСФО
	|		ИНАЧЕ втРезервы.СчетОбесцененнойЗадолженностиМСФО
	|	КОНЕЦ КАК СчетДт,
	|	втРезервы.Контрагент КАК СубконтоДт1,
	|	втРезервы.Договор КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА втРезервы.ПросрочкаДниМСФО = 0
	|			ТОГДА втИнтервалНепросроченная.ИнтервалНепросроченная
	|		ИНАЧЕ втИнтервалы.Интервал
	|	КОНЕЦ КАК СубконтоДт3,
	|	втРезервы.СчетЗадолженностиМСФО КАК СчетКт,
	|	втРезервы.Контрагент КАК СубконтоКт1,
	|	втРезервы.Договор КАК СубконтоКт2,
	|	NULL КАК СубконтоКт3,
	|	0 КАК СуммаВФункциональнойВалюте,
	|	втРезервы.ОстатокЗадолженностиВВалютеМСФО КАК СуммаВВалюте,
	|	втРезервы.Подразделение КАК Подразделение,
	|	втРезервы.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втРасчетныеДанные
	|ИЗ
	|	втРезервы КАК втРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнтервалы КАК втИнтервалы
	|		ПО втРезервы.Договор = втИнтервалы.Договор
	|			И втРезервы.СчетЗадолженностиМСФО = втИнтервалы.СчетЗадолженностиМСФО
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнтервалНепросроченная КАК втИнтервалНепросроченная
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности),
	|	втРезервы.Контрагент,
	|	втРезервы.Договор,
	|	&ДатаНачалаСледующегоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.СторноРеклассаЗадолженности),
	|	ЛОЖЬ,
	|	втРезервы.Договор.ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА втРезервы.ДолгосрочнаяЗадолженность
	|				И втРезервы.НачислениеРезерваМСФО = 0
	|			ТОГДА втРезервы.СчетДолгосрочнойЗадолженностиМСФО
	|		КОГДА втРезервы.ДолгосрочнаяЗадолженность
	|			ТОГДА втРезервы.СчетОбесцененнойДолгосрочнойЗадолженностиМСФО
	|		КОГДА втРезервы.НачислениеРезерваМСФО = 0
	|			ТОГДА втРезервы.СчетЗадолженностиМСФО
	|		ИНАЧЕ втРезервы.СчетОбесцененнойЗадолженностиМСФО
	|	КОНЕЦ,
	|	втРезервы.Контрагент,
	|	втРезервы.Договор,
	|	ВЫБОР
	|		КОГДА втРезервы.ПросрочкаДниМСФО = 0
	|			ТОГДА втИнтервалНепросроченная.ИнтервалНепросроченная
	|		ИНАЧЕ втИнтервалы.Интервал
	|	КОНЕЦ,
	|	втРезервы.СчетЗадолженностиМСФО,
	|	втРезервы.Контрагент,
	|	втРезервы.Договор,
	|	NULL,
	|	0,
	|	-втРезервы.ОстатокЗадолженностиВВалютеМСФО,
	|	втРезервы.Подразделение,
	|	втРезервы.НаправлениеДеятельности
	|ИЗ
	|	втРезервы КАК втРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнтервалы КАК втИнтервалы
	|		ПО втРезервы.Договор = втИнтервалы.Договор
	|			И втРезервы.СчетЗадолженностиМСФО = втИнтервалы.СчетЗадолженностиМСФО
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнтервалНепросроченная КАК втИнтервалНепросроченная
	|		ПО (ИСТИНА)
	|ГДЕ
	|	&ФормироватьПроводкиМСФО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности),
	|	СторноФИ.Контрагент,
	|	СторноФИ.Договор,
	|	&Период,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.НачислениеРезерваПоСомнительнойДЗ),
	|	ЛОЖЬ,
	|	СторноФИ.Договор.ВалютаВзаиморасчетов,
	|	СторноФИ.СчетРасходаМСФО,
	|	СторноФИ.СчетРасходаСубконто1МСФО,
	|	СторноФИ.СчетРасходаСубконто2МСФО,
	|	СторноФИ.СчетРасходаСубконто3МСФО,
	|	ВЫБОР
	|		КОГДА СторноФИ.ДолгосрочнаяЗадолженность
	|			ТОГДА СторноФИ.СчетРезерваДляДолгосрочнойЗадолженностиМСФО
	|		ИНАЧЕ СторноФИ.СчетРезерваМСФО
	|	КОНЕЦ,
	|	СторноФИ.Контрагент,
	|	СторноФИ.Договор,
	|	NULL,
	|	0,
	|	ВЫБОР
	|		КОГДА СторноФИ.Договор.ВалютаВзаиморасчетов <> &ФункциональнаяВалюта
	|			ТОГДА СторноФИ.НачислениеРезерваВВалютеМСФО
	|		ИНАЧЕ СторноФИ.НачислениеРезерваМСФО
	|	КОНЕЦ,
	|	СторноФИ.Подразделение,
	|	СторноФИ.НаправлениеДеятельности
	|ИЗ
	|	втРезервы КАК СторноФИ
	|ГДЕ
	|	СторноФИ.ЕстьРезерв
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности),
	|	СторноФИ.Контрагент,
	|	СторноФИ.Договор,
	|	&ДатаНачалаСледующегоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.СторноНачисленияРезерваПоСомнительнойДЗ),
	|	ИСТИНА,
	|	СторноФИ.Договор.ВалютаВзаиморасчетов,
	|	СторноФИ.СчетРасходаМСФО,
	|	СторноФИ.СчетРасходаСубконто1МСФО,
	|	СторноФИ.СчетРасходаСубконто2МСФО,
	|	СторноФИ.СчетРасходаСубконто3МСФО,
	|	ВЫБОР
	|		КОГДА СторноФИ.ДолгосрочнаяЗадолженность
	|			ТОГДА СторноФИ.СчетРезерваДляДолгосрочнойЗадолженностиМСФО
	|		ИНАЧЕ СторноФИ.СчетРезерваМСФО
	|	КОНЕЦ,
	|	СторноФИ.Контрагент,
	|	СторноФИ.Договор,
	|	NULL,
	|	0,
	|	-ВЫБОР
	|		КОГДА СторноФИ.Договор.ВалютаВзаиморасчетов <> &ФункциональнаяВалюта
	|			ТОГДА СторноФИ.НачислениеРезерваВВалютеМСФО
	|		ИНАЧЕ СторноФИ.НачислениеРезерваМСФО
	|	КОНЕЦ,
	|	СторноФИ.Подразделение,
	|	СторноФИ.НаправлениеДеятельности
	|ИЗ
	|	втРезервы КАК СторноФИ
	|ГДЕ
	|	СторноФИ.ЕстьРезерв
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УчетныеОперации),
	|	ДвижениеРезервов.Договор.Ссылка,
	|	ДвижениеРезервов.Договор,
	|	ВЫБОР
	|		КОГДА ДвижениеРезервов.ДатаОперации = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ ДвижениеРезервов.ДатаОперации
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.СторноИспользованияРезерваДЗНСБУ),
	|	ЛОЖЬ,
	|	ДвижениеРезервов.Договор.ВалютаВзаиморасчетов,
	|	ДвижениеРезервов.СчетДт,
	|	ДвижениеРезервов.Контрагент,
	|	ДвижениеРезервов.Договор,
	|	NULL,
	|	ДвижениеРезервов.СчетКт,
	|	ДвижениеРезервов.Контрагент,
	|	ДвижениеРезервов.Договор,
	|	NULL,
	|	-ДвижениеРезервов.СуммаОперации,
	|	-ДвижениеРезервов.СуммаОперацииВВалюте,
	|	ДвижениеРезервов.Подразделение,
	|	ДвижениеРезервов.НаправлениеДеятельности
	|ИЗ
	|	втДвижениеРезервов КАК ДвижениеРезервов
	|ГДЕ
	|	&ФормироватьПроводкиМСФО
	|	И (ДвижениеРезервов.СчетДт, ДвижениеРезервов.СчетКт) В
	|			(ВЫБРАТЬ
	|				втСчетаДЗ.СчетРезерва,
	|				втСчетаДЗ.СчетЗадолженности
	|			ИЗ
	|				втСчетаДЗ КАК втСчетаДЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УчетныеОперации),
	|	ДвижениеРезервов.Контрагент,
	|	ДвижениеРезервов.Договор,
	|	ВЫБОР
	|		КОГДА ДвижениеРезервов.ДатаОперации = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Период
	|		ИНАЧЕ ДвижениеРезервов.ДатаОперации
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияРезервыДЗ.СторноНачисленияРезерваДЗНСБУ),
	|	ЛОЖЬ,
	|	ДвижениеРезервов.Договор.ВалютаВзаиморасчетов,
	|	ДвижениеРезервов.СчетДт,
	|	ДвижениеРезервов.Контрагент,
	|	ДвижениеРезервов.Договор,
	|	NULL,
	|	ДвижениеРезервов.СчетКт,
	|	ДвижениеРезервов.Контрагент,
	|	ДвижениеРезервов.Договор,
	|	NULL,
	|	-ДвижениеРезервов.СуммаОперации,
	|	-ДвижениеРезервов.СуммаОперацииВВалюте,
	|	ДвижениеРезервов.Подразделение,
	|	ДвижениеРезервов.НаправлениеДеятельности
	|ИЗ
	|	втДвижениеРезервов КАК ДвижениеРезервов
	|ГДЕ
	|	НЕ &ФормироватьПроводкиМСФО
	|	И (ДвижениеРезервов.СчетДт, ДвижениеРезервов.СчетКт) В
	|			(ВЫБРАТЬ
	|				втСчетаДЗ.СчетРасхода,
	|				втСчетаДЗ.СчетРезерва
	|			ИЗ
	|				втСчетаДЗ КАК втСчетаДЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.УчетныеОперации),
	|	РасчетныеДанныеДЗОбороты.Договор.Владелец,
	|	РасчетныеДанныеДЗОбороты.Договор,
	|	&ДатаНачалаПериода,
	|	РасчетныеДанныеДЗОбороты.Событие,
	|	ЛОЖЬ,
	|	РасчетныеДанныеДЗОбороты.Валюта,
	|	РасчетныеДанныеДЗОбороты.СчетДт,
	|	РасчетныеДанныеДЗОбороты.СубконтоДт1,
	|	РасчетныеДанныеДЗОбороты.СубконтоДт2,
	|	РасчетныеДанныеДЗОбороты.СубконтоДт3,
	|	РасчетныеДанныеДЗОбороты.СчетКт,
	|	РасчетныеДанныеДЗОбороты.СубконтоКт1,
	|	РасчетныеДанныеДЗОбороты.СубконтоКт2,
	|	РасчетныеДанныеДЗОбороты.СубконтоКт3,
	|	РасчетныеДанныеДЗОбороты.СуммаВФункциональнойВалютеОборот,
	|	РасчетныеДанныеДЗОбороты.СуммаВВалютеОборот,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.РасчетныеДанныеДЗ.Обороты(
	|			&ДатаНачалаПериода,
	|			&ДатаОкончанияПериода,
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И НЕ &ФормироватьПроводкиМСФО) КАК РасчетныеДанныеДЗОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(т.ВидДвижения) КАК ВидДвижения,
	|	т.СчетДт КАК СчетДт,
	|	т.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ втВидыДвижений
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК т
	|ГДЕ
	|	(т.СчетДт, т.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетДт,
	|				т.СчетКт
	|			ИЗ
	|				втРасчетныеДанные КАК т)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.СчетДт,
	|	т.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт,
	|	СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасчетныеДанные.ВидОперации КАК ВидОперации,
	|	втРасчетныеДанные.Контрагент КАК Контрагент,
	|	втРасчетныеДанные.Договор КАК Договор,
	|	втРасчетныеДанные.Период КАК Период,
	|	втРасчетныеДанные.Событие КАК Событие,
	|	втРасчетныеДанные.СторноСледующегоПериодаТК КАК СторноСледующегоПериодаТК,
	|	втРасчетныеДанные.Валюта КАК Валюта,
	|	втРасчетныеДанные.СчетДт КАК СчетДт,
	|	втРасчетныеДанные.СубконтоДт1 КАК СубконтоДт1,
	|	втРасчетныеДанные.СубконтоДт2 КАК СубконтоДт2,
	|	втРасчетныеДанные.СубконтоДт3 КАК СубконтоДт3,
	|	втРасчетныеДанные.СчетКт КАК СчетКт,
	|	втРасчетныеДанные.СубконтоКт1 КАК СубконтоКт1,
	|	втРасчетныеДанные.СубконтоКт2 КАК СубконтоКт2,
	|	втРасчетныеДанные.СубконтоКт3 КАК СубконтоКт3,
	|	втРасчетныеДанные.СуммаВФункциональнойВалюте КАК СуммаВФункциональнойВалюте,
	|	втРасчетныеДанные.СуммаВВалюте КАК СуммаВВалюте,
	|	втВидыДвижений.ВидДвижения КАК ВидДвижения,
	|	втРасчетныеДанные.Подразделение КАК ПодразделениеДт,
	|	втРасчетныеДанные.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	втРасчетныеДанные.Подразделение КАК ПодразделениеКт,
	|	втРасчетныеДанные.НаправлениеДеятельности КАК НаправлениеДеятельностиКт
	|ИЗ
	|	втРасчетныеДанные КАК втРасчетныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВидыДвижений КАК втВидыДвижений
	|		ПО втРасчетныеДанные.СчетДт = втВидыДвижений.СчетДт
	|			И втРасчетныеДанные.СчетКт = втВидыДвижений.СчетКт
	|ГДЕ
	|	НЕ(втРасчетныеДанные.СчетДт = втРасчетныеДанные.СчетКт
	|				И ЕСТЬNULL(втРасчетныеДанные.СубконтоДт1, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(втРасчетныеДанные.СубконтоКт1, НЕОПРЕДЕЛЕНО)
	|				И ЕСТЬNULL(втРасчетныеДанные.СубконтоДт2, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(втРасчетныеДанные.СубконтоКт2, НЕОПРЕДЕЛЕНО)
	|				И ЕСТЬNULL(втРасчетныеДанные.СубконтоДт3, НЕОПРЕДЕЛЕНО) = ЕСТЬNULL(втРасчетныеДанные.СубконтоКт3, НЕОПРЕДЕЛЕНО))";

КонецФункции
     	
#КонецОбласти

#Область ЗаполнениеДокумента_Стандартные

Функция ПолучитьРазделыСчетов() Экспорт

	РазделВзаиморасчеты = Справочники.РазделыПланаСчетов.Взаиморасчеты;
	РазделыДР 			= Справочники.РазделыПланаСчетов.ВнереализационныеДоходыИРасходы;
		
	РазделыСчетов = Новый Структура;
	РазделыСчетов.Вставить("Резервы", Новый Структура);
	
	РазделыСчетов.Резервы.Вставить("СчетРезерваМСФО", 					РазделВзаиморасчеты);
	РазделыСчетов.Резервы.Вставить("СчетЗадолженностиМСФО", 			РазделВзаиморасчеты);
	РазделыСчетов.Резервы.Вставить("СчетОбесцененнойЗадолженностиМСФО", РазделВзаиморасчеты);
	РазделыСчетов.Резервы.Вставить("СчетРасходаМСФО", 					РазделыДР);

	РазделыСчетов.Вставить("ДвижениеРезервовНСБУ", Новый Структура);
	//РазделыСчетов.ДвижениеРезервовНСБУ.Вставить("СчетДт", РазделВзаиморасчеты);
	//РазделыСчетов.ДвижениеРезервовНСБУ.Вставить("СчетКт", РазделВзаиморасчеты);
	
	Возврат РазделыСчетов;
	
КонецФункции

Функция ПолучитьИменаСубконто() Экспорт 

	ИменаСубконто = Новый Структура;
	
	ИменаСубконто.Вставить("Резервы", Новый Соответствие);
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетРасходаСубконто1МСФО");
	Субконто.Вставить(2, "СчетРасходаСубконто2МСФО");
	Субконто.Вставить(3, "СчетРасходаСубконто3МСФО");
	
	ИменаСубконто.Резервы.Вставить("СчетРасходаМСФО", 					Субконто);
	ИменаСубконто.Резервы.Вставить("СчетРезерваМСФО", 					Новый Соответствие);
	ИменаСубконто.Резервы.Вставить("СчетЗадолженностиМСФО", 			Новый Соответствие);
	ИменаСубконто.Резервы.Вставить("СчетОбесцененнойЗадолженностиМСФО", Новый Соответствие);	
	
	ИменаСубконто.Вставить("ДвижениеРезервовНСБУ", Новый Соответствие);
	
	ИменаСубконто.ДвижениеРезервовНСБУ.Вставить("СчетДтНСБУ", Новый Соответствие);	
	ИменаСубконто.ДвижениеРезервовНСБУ.Вставить("СчетКтНСБУ", Новый Соответствие);
	
	Субконто = Новый Соответствие;
	Субконто.Вставить("Подразделение", "ПодразделениеДт");
	Субконто.Вставить("НаправлениеДеятельности", "НаправлениеДеятельностиДт");

	ИменаСубконто.ДвижениеРезервовНСБУ.Вставить("СчетДтМСФО", Субконто);	
		
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетКтСубконто1");
	Субконто.Вставить(2, "СчетКтСубконто2");
	Субконто.Вставить(3, "СчетКтСубконто3");
	Субконто.Вставить("Подразделение", "ПодразделениеКт");
	Субконто.Вставить("НаправлениеДеятельности", "НаправлениеДеятельностиКт");
	
	ИменаСубконто.ДвижениеРезервовНСБУ.Вставить("СчетКтМСФО", Субконто);
	
	Возврат ИменаСубконто;	
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Функция ПолучитьТаблицуРезервов(Контекст, КэшируемыеЗначения) Экспорт

	Перем ТаблицаРезервы, ТаблицаДвижениеРезервовНСБУ;
	
	КонецПериода = КонецДня(Контекст.ПериодОтчета.ДатаОкончания);
	РеквизитыУП = МСФОВызовСервераУХ.РеквизитыДляФормыУП(Контекст.Организация, КонецПериода, Контекст.Сценарий);
	
	Если РеквизитыУП.ФормироватьПроводкиМСФО Тогда
	
		Запрос = Новый Запрос(СтрЗаменить(ПолучитьТекстЗапросаДанныеНСБУ(), "&ТекстУсловия_ДоговорНеПрочее", ВстраиваниеУХ.ТекстЗапроса_УсловиеДоговораНеПрочее("Субконто2")));
		
		ДатаКонецПериода = КонецДня(Контекст.ПериодОтчета.ДатаОкончания);
		ГраницаКонецПериода = Новый Граница(Новый МоментВремени(ДатаКонецПериода,Контекст.Ссылка), ВидГраницы.Исключая);
		
		Запрос.УстановитьПараметр("НачалоПериода", 			Контекст.ПериодОтчета.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериода", 			ДатаКонецПериода);
		Запрос.УстановитьПараметр("КонецПериодаГраница",	ГраницаКонецПериода);
		Запрос.УстановитьПараметр("Организация", 			Контекст.Организация);
		Запрос.УстановитьПараметр("Сценарий", 				Контекст.Сценарий);	
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();	
		ЧислоПодзапросов = РезультатыЗапроса.ВГраница();
		
		ТаблицаРезервы 					= РезультатыЗапроса.Получить(ЧислоПодзапросов).Выгрузить();		
		ТаблицаДвижениеРезервовНСБУ		= Новый ТаблицаЗначений;
		//ТаблицаДвижениеРезервовНСБУ 	= РезультатыЗапроса.Получить(ЧислоПодзапросов - 1).Выгрузить();
		//
		//ТаблицаДвижениеРезервовНСБУ.Колонки.Добавить("СчетДт");
		//ТаблицаДвижениеРезервовНСБУ.Колонки.Добавить("СчетКт");
		//СчетаТаблицы = ТаблицаДвижениеРезервовНСБУ.ВыгрузитьКолонку("СчетДтМСФО");
		//ОбщегоНазначенияУХ.ДобавитьМассивВСписокЗначений(СчетаТаблицы, ТаблицаДвижениеРезервовНСБУ.ВыгрузитьКолонку("СчетКтМСФО"));
		//
		//КэшСчетовБД = МСФОВызовСервераУХ.ПолучитьСоотвествиеСчетаБДПоСчетамПланаСчетов(СчетаТаблицы);
		//Для каждого СтрокаРезервы Из ТаблицаДвижениеРезервовНСБУ Цикл
		//	СтрокаРезервы.СчетДт = КэшСчетовБД.Получить(СтрокаРезервы.СчетДтМСФО);
		//	СтрокаРезервы.СчетКт = КэшСчетовБД.Получить(СтрокаРезервы.СчетКтМСФО);
		//КонецЦикла;
		
	ИначеЕсли Не РеквизитыУП.ФормироватьПроводкиМСФО Тогда 
		
		ГруппаАналитик = Справочники.ФиксированныеГруппыАналитик.РезервыДЗ_ДвижениеРезервовНСБУ;
		
		ПоляВыборки = Новый Структура("СчетБД");
		ПутьОтбора = ПолучитьИмяАналитикиПоИмениПриемника(ГруппаАналитик, "ВидДвижения");
		ОтборАналитик = Новый Соответствие;
		ОтборАналитик.Вставить(ПутьОтбора, ПолучитьВидыДвиженийНачислениеДЗ());
		
		ТаблицаДвижениеРезервовНСБУ = Справочники.ВидыОтчетов.ПолучитьТаблицуТК(Контекст, ГруппаАналитик,,ОтборАналитик);
		
		ГруппаАналитик = Справочники.ФиксированныеГруппыАналитик.РезервыДЗ_НачислениеРезерваМСФО;
				
		ПутьОтбора = ПолучитьИмяАналитикиПоИмениПриемника(ГруппаАналитик, "Договор") + ".РучнойРасчетРезерваПоЗадолженности";
		ОтборАналитик = Новый Соответствие;
		ОтборАналитик.Вставить(ПутьОтбора, Ложь);
				
		ТаблицаРезервы = Справочники.ВидыОтчетов.ПолучитьТаблицуТК(Контекст, ГруппаАналитик, ПоляВыборки, ОтборАналитик);		
		
		ГруппаАналитик = Справочники.ФиксированныеГруппыАналитик.РезервыДЗ_КорректировкиРезервовМСФО;
		
		ПутьОтбора = ПолучитьИмяАналитикиПоИмениПриемника(ГруппаАналитик, "Договор") + ".РучнойРасчетРезерваПоЗадолженности";
		ОтборАналитик = Новый Соответствие;
		ОтборАналитик.Вставить(ПутьОтбора, Истина);
		
		ТаблицаРучнойРасчет = Справочники.ВидыОтчетов.ПолучитьТаблицуТК(Контекст, ГруппаАналитик, ПоляВыборки, ОтборАналитик);
		ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначений(ТаблицаРучнойРасчет, ТаблицаРезервы);
		
		ТаблицаРезервы.Колонки.СчетБД.Имя = "СчетЗадолженностиМСФО";
				
	КонецЕсли;
	
	Возврат Новый Структура("Резервы,ДвижениеРезервовНСБУ", ТаблицаРезервы, ТаблицаДвижениеРезервовНСБУ);	

КонецФункции

Функция ПолучитьИмяАналитикиПоИмениПриемника(ГруппаАналитик, ИмяПриемника)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.ПутьИсточника
	|ИЗ
	|	Справочник.ФиксированныеГруппыАналитик.ФиксированныеАналитики КАК ФиксированныеГруппыАналитикФиксированныеАналитики
	|ГДЕ
	|	ФиксированныеГруппыАналитикФиксированныеАналитики.Ссылка = &ГруппаАналитик
	|	И ФиксированныеГруппыАналитикФиксированныеАналитики.ИмяПриемника ПОДОБНО &ИмяПриемника";
	Запрос.УстановитьПараметр("ГруппаАналитик", ГруппаАналитик);
	Запрос.УстановитьПараметр("ИмяПриемника", ИмяПриемника);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе	
		
		ПутьИсточника = РезультатЗапроса.Выгрузить()[0].ПутьИсточника;
		СтрокиПути = СтроковыеФункцииКлиентСерверУХ.РазложитьСтрокуВМассивПодстрок(ПутьИсточника, ".");
		Возврат ?(СтрокиПути.Количество()>0, СтрокиПути[0], Неопределено);
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьВидыДвиженийНачислениеДЗ()

	ПланСчетовБД = Справочники.ПланыСчетовБД.ПолучитьПланСчетовБД("МСФО");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорреспонденцииВидовДвиженийМСФО.ВидДвижения
	|ИЗ
	|	РегистрСведений.КорреспонденцииВидовДвиженийМСФО КАК КорреспонденцииВидовДвиженийМСФО
	|ГДЕ
	|	КорреспонденцииВидовДвиженийМСФО.ПланСчетовБД = &ПланСчетовБД
	|	И (КорреспонденцииВидовДвиженийМСФО.СчетДт, КорреспонденцииВидовДвиженийМСФО.СчетКт) В
	|			(ВЫБРАТЬ
	|				т.СчетРасхода,
	|				т.СчетРезерва
	|			ИЗ
	|				РегистрСведений.СчетаУчетаЗадолженностиИРезервов КАК т)";
	Запрос.УстановитьПараметр("ПланСчетовБД", ПланСчетовБД);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидДвижения");
	
КонецФункции

Функция ПолучитьТекстЗапросаДанныеНСБУ()

	Возврат 
	"ВЫБРАТЬ
	|	СчетаРезервовПоЗадолженностиМСФО.СчетЗадолженности КАК СчетЗадолженности,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРезерва КАК СчетРезерва,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетЗадолженности.СчетСсылка КАК СчетЗадолженностиМСФО,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРезерва.СчетСсылка КАК СчетРезерваМСФО,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетОбесцененнойЗадолженности КАК СчетОбесцененнойЗадолженности,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРасхода КАК СчетРасхода,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРасходаСубконто1 КАК СчетРасходаСубконто1,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРасходаСубконто2 КАК СчетРасходаСубконто2,
	|	СчетаРезервовПоЗадолженностиМСФО.СчетРасходаСубконто3 КАК СчетРасходаСубконто3
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	РегистрСведений.СчетаУчетаЗадолженностиИРезервов КАК СчетаРезервовПоЗадолженностиМСФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МСФОВидыСубконто.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДокументовРасчетов
	|ИЗ
	|	ПланСчетов.МСФО.ВидыСубконто КАК МСФОВидыСубконто
	|ГДЕ
	|	МСФОВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСконтрагентами)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(МСФООборотыДтКт.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(МСФООборотыДтКт.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	МСФООборотыДтКт.Субконто3 КАК ДокументРасчетов,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаДокументовРасчетов КАК т)
	|			ТОГДА МСФООборотыДтКт.Субконто2.Дата
	|		ИНАЧЕ МСФООборотыДтКт.Субконто2.Дата
	|	КОНЕЦ КАК ДатаНачалаРасчетов,
	|	ВЫБОР
	|		КОГДА МСФООборотыДтКт.Счет.Валютный
	|			ТОГДА МСФООборотыДтКт.СуммаВВалютеОстаток
	|		ИНАЧЕ МСФООборотыДтКт.СуммаВВалютеУчетаОстаток
	|	КОНЕЦ КАК ОстатокЗадолженностиВВалютеНСБУ,
	|	МСФООборотыДтКт.Подразделение КАК Подразделение,
	|	МСФООборотыДтКт.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втОстаткиЗадолженностиПоДоговорам
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Остатки(
	|			&КонецПериодаГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.СчетЗадолженностиМСФО
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация
	|				И ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности)
	|				И &ТекстУсловия_ДоговорНеПрочее) КАК МСФООборотыДтКт
	|ГДЕ
	|	ВЫБОР
	|			КОГДА МСФООборотыДтКт.Счет.Валютный
	|				ТОГДА МСФООборотыДтКт.СуммаВВалютеОстаток
	|			ИНАЧЕ МСФООборотыДтКт.СуммаВВалютеУчетаОстаток
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МСФООбороты.Период КАК Период,
	|	ЕСТЬNULL(МСФООбороты.Субконто2.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	МСФООбороты.Счет КАК СчетВзаиморасчетов,
	|	МСФООбороты.Субконто1 КАК Субконто1,
	|	МСФООбороты.Субконто2 КАК Субконто2,
	|	ЕСТЬNULL(МСФООбороты.Субконто3, НЕОПРЕДЕЛЕНО) КАК Субконто3,
	|	ВЫБОР
	|		КОГДА МСФООбороты.Счет.Валютный
	|			ТОГДА МСФООбороты.СуммаВВалютеОборотДт
	|		ИНАЧЕ МСФООбороты.СуммаВВалютеУчетаОборотДт
	|	КОНЕЦ КАК СуммаВВалютеУчетаОборотДт,
	|	ВЫБОР
	|		КОГДА МСФООбороты.Счет.Валютный
	|			ТОГДА МСФООбороты.СуммаВВалютеОборотКт
	|		ИНАЧЕ МСФООбороты.СуммаВВалютеУчетаОборотКт
	|	КОНЕЦ КАК СуммаВВалютеУчетаОборотКт,
	|	МСФООбороты.Подразделение КАК Подразделение,
	|	МСФООбороты.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПартииВзаиморасчетов
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			День,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.СчетЗадолженностиМСФО
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			Организация = &Организация
	|				И Сценарий = &Сценарий
	|				И Субконто2 В
	|					(ВЫБРАТЬ
	|						т.Договор
	|					ИЗ
	|						втОстаткиЗадолженностиПоДоговорам КАК т)
	|				И ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности),
	|			НЕ КорСчет В
	|					(ВЫБРАТЬ
	|						т.СчетЗадолженностиМСФО
	|					ИЗ
	|						втСчета КАК т),
	|			) КАК МСФООбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт = СУММА(втПартииВзаиморасчетовПредыдущие.СуммаВВалютеУчетаОборотДт)
	|				И втПартииВзаиморасчетов.ДатаДоговора <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА втПартииВзаиморасчетов.ДатаДоговора
	|		ИНАЧЕ втПартииВзаиморасчетов.Период
	|	КОНЕЦ КАК ДатаДокументаРасчета,
	|	втПартииВзаиморасчетов.СчетВзаиморасчетов КАК СчетВзаиморасчетов,
	|	втПартииВзаиморасчетов.Субконто1 КАК Субконто1,
	|	втПартииВзаиморасчетов.Субконто2 КАК Субконто2,
	|	втПартииВзаиморасчетов.Субконто3 КАК Субконто3,
	|	втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт КАК СуммаПоставки,
	|	СУММА(втПартииВзаиморасчетовПредыдущие.СуммаВВалютеУчетаОборотДт) - втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт КАК НакопленнаяСуммаПоставокДоПоставки,
	|	СУММА(втПартииВзаиморасчетовПредыдущие.СуммаВВалютеУчетаОборотДт) КАК НакопленнаяСуммаПоставок,
	|	ВЫБОР
	|		КОГДА втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт = СУММА(втПартииВзаиморасчетовПредыдущие.СуммаВВалютеУчетаОборотДт)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДополнительныеПоставки,
	|	втПартииВзаиморасчетов.Подразделение КАК Подразделение,
	|	втПартииВзаиморасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втНакопленныеПоставки
	|ИЗ
	|	втПартииВзаиморасчетов КАК втПартииВзаиморасчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииВзаиморасчетов КАК втПартииВзаиморасчетовПредыдущие
	|		ПО втПартииВзаиморасчетов.Период >= втПартииВзаиморасчетовПредыдущие.Период
	|			И втПартииВзаиморасчетов.СчетВзаиморасчетов = втПартииВзаиморасчетовПредыдущие.СчетВзаиморасчетов
	|			И втПартииВзаиморасчетов.Субконто1 = втПартииВзаиморасчетовПредыдущие.Субконто1
	|			И втПартииВзаиморасчетов.Субконто2 = втПартииВзаиморасчетовПредыдущие.Субконто2
	|			И втПартииВзаиморасчетов.Субконто3 = втПартииВзаиморасчетовПредыдущие.Субконто3
	|			И (втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт > 0)
	|			И (втПартииВзаиморасчетовПредыдущие.СуммаВВалютеУчетаОборотДт > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	втПартииВзаиморасчетов.ДатаДоговора,
	|	втПартииВзаиморасчетов.Период,
	|	втПартииВзаиморасчетов.СчетВзаиморасчетов,
	|	втПартииВзаиморасчетов.Субконто1,
	|	втПартииВзаиморасчетов.Субконто2,
	|	втПартииВзаиморасчетов.Субконто3,
	|	втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотДт,
	|	втПартииВзаиморасчетов.Подразделение,
	|	втПартииВзаиморасчетов.НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПартииВзаиморасчетов.Субконто1 КАК Субконто1,
	|	втПартииВзаиморасчетов.Субконто2 КАК Субконто2,
	|	втПартииВзаиморасчетов.Субконто3 КАК Субконто3,
	|	СУММА(втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотКт) КАК ПогашениеДолга,
	|	втПартииВзаиморасчетов.СчетВзаиморасчетов КАК СчетВзаиморасчетов
	|ПОМЕСТИТЬ втПогашенияДоговоров
	|ИЗ
	|	втПартииВзаиморасчетов КАК втПартииВзаиморасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	втПартииВзаиморасчетов.Субконто1,
	|	втПартииВзаиморасчетов.Субконто2,
	|	втПартииВзаиморасчетов.Субконто3,
	|	втПартииВзаиморасчетов.СчетВзаиморасчетов
	|
	|ИМЕЮЩИЕ
	|	СУММА(втПартииВзаиморасчетов.СуммаВВалютеУчетаОборотКт) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНакопленныеПоставки.ДатаДокументаРасчета КАК ДатаДокументаРасчета,
	|	втНакопленныеПоставки.СчетВзаиморасчетов КАК СчетЗадолженностиМСФО,
	|	втНакопленныеПоставки.Субконто1 КАК Контрагент,
	|	втНакопленныеПоставки.Субконто2 КАК Договор,
	|	втНакопленныеПоставки.Субконто3 КАК Субконто3,
	|	втНакопленныеПоставки.СуммаПоставки КАК СуммаПоставки,
	|	втНакопленныеПоставки.НакопленнаяСуммаПоставок КАК НакопленнаяСуммаПоставок,
	|	втНакопленныеПоставки.ДополнительныеПоставки КАК ДополнительныеПоставки,
	|	втПогашенияДоговоров.ПогашениеДолга КАК ПогашениеДолга,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0) = 0
	|			ТОГДА втНакопленныеПоставки.СуммаПоставки
	|		КОГДА втНакопленныеПоставки.НакопленнаяСуммаПоставок >= ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0)
	|				И втНакопленныеПоставки.НакопленнаяСуммаПоставокДоПоставки < ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0)
	|			ТОГДА втНакопленныеПоставки.НакопленнаяСуммаПоставок - ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0)
	|		ИНАЧЕ втНакопленныеПоставки.СуммаПоставки
	|	КОНЕЦ КАК ОстатокЗадолженностиВВалютеМСФО,
	|	ВЫБОР
	|		КОГДА втНакопленныеПоставки.НакопленнаяСуммаПоставок >= ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОстатокДолгаПоДокументуВзаиморасчета,
	|	втНакопленныеПоставки.Подразделение КАК Подразделение,
	|	втНакопленныеПоставки.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втДанныеРасчета
	|ИЗ
	|	втНакопленныеПоставки КАК втНакопленныеПоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПогашенияДоговоров КАК втПогашенияДоговоров
	|		ПО втНакопленныеПоставки.Субконто1 = втПогашенияДоговоров.Субконто1
	|			И втНакопленныеПоставки.Субконто2 = втПогашенияДоговоров.Субконто2
	|			И втНакопленныеПоставки.Субконто3 = втПогашенияДоговоров.Субконто3
	|			И втНакопленныеПоставки.СчетВзаиморасчетов = втПогашенияДоговоров.СчетВзаиморасчетов
	|ГДЕ
	|	втНакопленныеПоставки.НакопленнаяСуммаПоставок >= ЕСТЬNULL(втПогашенияДоговоров.ПогашениеДолга, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(МСФООборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	МСФООборотыДтКт.Период КАК ДатаОперации,
	|	""ВидДвижения"" КАК ВидДвижения,
	|	МСФООборотыДтКт.СчетДт КАК СчетДтМСФО,
	|	МСФООборотыДтКт.СчетКт КАК СчетКтМСФО,
	|	МСФООборотыДтКт.СуммаВВалютеОборотКт КАК СуммаОперацииВВалюте,
	|	МСФООборотыДтКт.СуммаВВалютеУчетаОборот КАК СуммаОперации,
	|	""Использование резерва НСБУ"" КАК ВидОперации,
	|	МСФООборотыДтКт.ПодразделениеДт КАК ПодразделениеДт,
	|	МСФООборотыДтКт.ПодразделениеКт КАК ПодразделениеКт,
	|	МСФООборотыДтКт.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	МСФООборотыДтКт.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			День,
	|			СчетДт В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					т.СчетРезерваМСФО
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			СчетКт В
	|				(ВЫБРАТЬ
	|					т.СчетЗадолженностиМСФО
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация
	|				И ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности)) КАК МСФООборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(МСФООборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов),
	|	МСФООборотыДтКт.Период,
	|	""ВидДвижения"",
	|	МСФООборотыДтКт.СчетДт,
	|	МСФООборотыДтКт.СчетКт,
	|	МСФООборотыДтКт.СуммаВВалютеОборотДт,
	|	МСФООборотыДтКт.СуммаВВалютеУчетаОборот,
	|	""Восстановление резерва НСБУ"",
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			День,
	|			СчетДт В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					т.СчетРезерваМСФО
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			СчетКт В
	|				(ВЫБРАТЬ
	|					т.СчетРасхода
	|				ИЗ
	|					втСчета КАК т),
	|			,
	|			Сценарий = &Сценарий
	|				И Организация = &Организация
	|				И ВидОперации <> ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ОперацииДляЦелейОтчетности)) КАК МСФООборотыДтКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеРасчета.Контрагент КАК Контрагент,
	|	втДанныеРасчета.Договор КАК Договор,
	|	втСчета.СчетРезерва КАК СчетРезерваМСФО,
	|	втСчета.СчетЗадолженности КАК СчетЗадолженностиМСФО,
	|	втДанныеРасчета.ОстатокЗадолженностиВВалютеМСФО КАК ОстатокЗадолженностиВВалютеМСФО,
	|	втДанныеРасчета.ДатаДокументаРасчета КАК ДатаДокументаРасчета,
	|	втСчета.СчетОбесцененнойЗадолженности КАК СчетОбесцененнойЗадолженностиМСФО,
	|	втСчета.СчетРасхода КАК СчетРасходаМСФО,
	|	втСчета.СчетРасходаСубконто1 КАК СчетРасходаСубконто1МСФО,
	|	втСчета.СчетРасходаСубконто2 КАК СчетРасходаСубконто2МСФО,
	|	втСчета.СчетРасходаСубконто3 КАК СчетРасходаСубконто3МСФО,
	|	втДанныеРасчета.Подразделение КАК Подразделение,
	|	втДанныеРасчета.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	втДанныеРасчета КАК втДанныеРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчета КАК втСчета
	|		ПО втДанныеРасчета.СчетЗадолженностиМСФО = втСчета.СчетЗадолженностиМСФО";
	
КонецФункции

#КонецОбласти

#Область Движения

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 		= ДополнительныеСвойства.ДляПроведения.Реквизиты;	
	ТаблицаПроводок = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводок;
	
	ТаблицаПроводок.Колонки.Добавить("Организация");
	ТаблицаПроводок.Колонки.Добавить("Сценарий");
	ТаблицаПроводок.Колонки.Добавить("ПериодОтчета");
	
	КэшКурсов = Новый Соответствие;
		
	Для каждого Движение Из ТаблицаПроводок Цикл
		
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты, "Организация,Сценарий,ПериодОтчета");
		
		Если НЕ ЗначениеЗаполнено(Движение.Валюта) Или Реквизиты.ФункциональнаяВалюта = Движение.Валюта Тогда 
			
			Движение.СуммаВФункциональнойВалюте = Движение.СуммаВВалюте;
			
		Иначе 
			
			КурсОВ = РаботаСКурсамиВалютУХ.ПолучитьКурсВалюты(Движение.Валюта, Движение.Период); 
			КурсФВ = РаботаСКурсамиВалютУХ.ПолучитьКурсВалюты(Реквизиты.ФункциональнаяВалюта, Движение.Период);
			Движение.СуммаВФункциональнойВалюте = РаботаСКурсамиВалютКлиентСерверУХ.ПересчитатьИзВалютыВВалюту(
					Движение.СуммаВВалюте, 
					Движение.Валюта,
					Реквизиты.ФункциональнаяВалюта,											
					КурсОВ.Курс,
					КурсФВ.Курс,
					КурсОВ.Кратность,
					КурсФВ.Кратность					
				);	
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		
		МСФОВызовСервераУХ.ОтразитьДвиженияПоТаблицеПроводок(Движения, ТаблицаПроводок, Реквизиты, Отказ, Ложь);
		
	Иначе
		
		МСФОВызовСервераУХ.ПроверитьЗаполненностьПроводок(ТаблицаПроводок, Реквизиты, Отказ);		
		
		ТаблицаПроводок.Индексы.Добавить("СторноСледующегоПериодаТК");
		
		Отбор = Новый Структура("СторноСледующегоПериодаТК", Истина);
		МСФОВызовСервераУХ.ОтразитьДвиженияРасчетов(Движения, ТаблицаПроводок.Скопировать(Отбор));
		
		Отбор = Новый Структура("СторноСледующегоПериодаТК", Ложь);
		ТаблицаПроводок.Колонки.Событие.Имя = "Комментарий";
		ТаблицаПроводок.Колонки.СуммаВФункциональнойВалюте.Имя = "Значение";
		
		МодульТК = ОбщегоНазначения.ОбщийМодуль("ТрансформационныеКорректировкиУХ");
		МодульТК.СформироватьКорректировку(Реквизиты, Отказ, ТаблицаПроводок.Скопировать(Отбор));
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
