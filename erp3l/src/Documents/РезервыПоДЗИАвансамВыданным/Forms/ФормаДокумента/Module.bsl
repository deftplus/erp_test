
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере(ЭтаФорма);
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
			
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	ОбновитьРеквизитыУП(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	ОбновитьРеквизитыУП(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьРеквизитыУП(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьРассчитатьРезервы(Команда)
	
	ЗаполнитьРассчитать();		
	ОбновитьВидимостьПодробноПоСтроке(Элементы.Резервы.ТекущиеДанные);
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.РезервыСчетРасходаМСФО, "Резервы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодробноДоговора(Команда)
	
	ПометкаДополнительно = НЕ Элементы.РезервыПоказатьПодробноДоговора.Пометка;
	
	Если Объект.Резервы.Количество() = 0 Тогда
		ПометкаДополнительно = Ложь;
	КонецЕсли;
	
	Элементы.РезервыПоказатьПодробноДоговора.Пометка = ПометкаДополнительно;
			
	Элементы.ГруппаПодробно.Видимость = ПометкаДополнительно;
		
	Если ПометкаДополнительно Тогда
		ОбновитьВидимостьПодробноПоСтроке(Элементы.Резервы.ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиРезервы

&НаКлиенте
Процедура РезервыРезервМСФОПриИзменении(Элемент)
	
	Элементы.Резервы.ТекущиеДанные.РучноеРедактирование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РезервыПриАктивизацииСтроки(Элемент)
	
	ОбновитьВидимостьПодробноПоСтроке(Элементы.Резервы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьПодробноПоСтроке(ТекущаяСтрока = Неопределено)

	Если ТекущаяСтрока = Неопределено Тогда	
		
		ЭтаФорма.Элементы.ГруппаПодробно.Видимость = Ложь;
		ЭтаФорма.Элементы.РезервыПоказатьПодробноДоговора.Пометка = Ложь;	
		Возврат;
		
	КонецЕсли;
	
	Если ЭтаФорма.Элементы.ГруппаПодробно.Видимость Тогда
		
		ОтборКлючСвязи = Новый Структура("КлючСвязи", ТекущаяСтрока.КлючСвязи);
		ЭтаФорма.Элементы.ПараметрыРасчета.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборКлючСвязи);
		
		РучнойРасчет = ОбщегоНазначенияУХ.ПолучитьЗначениеРеквизита(ТекущаяСтрока.Договор, "РучнойРасчетРезерваПоЗадолженности");
		Элементы.ПараметрыРасчета.Видимость = (РучнойРасчет = Ложь);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РезервыСчетРасходаМСФОПриИзменении(Элемент)
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "Резервы");
КонецПроцедуры

&НаКлиенте
Процедура РезервыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Если Элементы.Резервы.ТекущиеДанные.КлючСвязи = ПустойУИД Тогда
			Элементы.Резервы.ТекущиеДанные.КлючСвязи = Новый УникальныйИдентификатор;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезервыКоэффициентРезерваПриИзменении(Элемент)
	
	Если Элементы.Резервы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("РассчитатьРезервМСФО");
	СтруктураДействий.Вставить("РассчитатьНачислениеРезерваМСФО", Новый Структура("Контекст", Объект));
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РезервыДЗ(Элементы.Резервы.ТекущиеДанные, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура РезервыСчетЗадолженностиНСБУПриИзменении(Элемент)
	
	Если Элементы.Резервы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаЗадолженностиПоСчетуНСБУ", Новый Структура("Контекст", Объект));
		
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РезервыДЗ(Элементы.Резервы.ТекущиеДанные, СтруктураДействий, Неопределено);
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.РезервыСчетРасходаМСФО, "Резервы");
	
КонецПроцедуры

&НаКлиенте
Процедура РезервыСчетЗадолженностиМСФОПриИзменении(Элемент)
	
	Если Элементы.Резервы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаЗадолженностиПоСчетуМСФО", Новый Структура("Контекст", Объект));
		
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РезервыДЗ(Элементы.Резервы.ТекущиеДанные, СтруктураДействий, Неопределено);
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.РезервыСчетРасходаМСФО, "Резервы");

КонецПроцедуры

&НаКлиенте
Процедура РезервыНачислениеРезерваВВалютеМСФОПриИзменении(Элемент)
	
	Если Элементы.Резервы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("РассчитатьНачислениеРезерваМСФО", Новый Структура("Контекст", Объект));		
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РезервыДЗ(Элементы.Резервы.ТекущиеДанные, СтруктураДействий);

КонецПроцедуры

&НаКлиенте
Процедура ДвижениеРезервовНСБУВидДвиженияПриИзменении(Элемент)
	
	Если Элементы.ДвижениеРезервовНСБУ.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСчетаПоВидуДвижений", Новый Структура("Контекст", Объект));
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_РезервыДЗ(Элементы.ДвижениеРезервовНСБУ.ТекущиеДанные, СтруктураДействий);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СтандартныеОбработчикиСобытийФормы

&НаСервереБезКонтекста
Процедура ПодготовитьФормуНаСервере(ЭтаФорма)

	ЭтаФорма.КэшируемыеЗначения = Новый Структура;
	
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", 		Документы.РезервыПоДЗИАвансамВыданным.ПолучитьИменаСубконто());
	ЭтаФорма.КэшируемыеЗначения.Вставить("РазделыСчетов", 		Документы.РезервыПоДЗИАвансамВыданным.ПолучитьРазделыСчетов());
	ЭтаФорма.КэшируемыеЗначения.Вставить("КлючевыеСубконто", 	МСФОКлиентСерверУХ.ПолучитьКлючевыеСубконтоФИ(Истина,Ложь));
	ОбновитьРеквизитыУП(ЭтаФорма);	
	ПланСчетовМСФО = ЭтаФорма.КэшируемыеЗначения.ПланСчетовМСФО;
	
	Для каждого ИмяТЧ Из ЭтаФорма.КэшируемыеЗначения.РазделыСчетов Цикл	
		Для каждого ИмяСчета Из ИмяТЧ.Значение Цикл
			
			ЭтаФорма.Элементы[ИмяТЧ.Ключ + ИмяСчета.Ключ].ПараметрыВыбора 
				= МСФОКлиентСерверУХ.ПолучитьПараметрыВыбораДляСчетаБД(ПланСчетовМСФО, ИмяСчета.Значение);
				
		КонецЦикла;	
	КонецЦикла;	
	
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "Резервы", Истина);	
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);	
	
	ЭтаФорма.Элементы.ГруппаПодробно.Видимость = ЭтаФорма.Элементы.РезервыПоказатьПодробноДоговора.Пометка;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(ФормаДокумента = Неопределено)
	
	Если ФормаДокумента.КэшируемыеЗначения.ФормироватьПроводкиМСФО Тогда
		
		ФормаДокумента.Элементы.СтраницаДвижениеРезервов.Видимость = Ложь;
		ФормаДокумента.Элементы.РезервыСчетЗадолженностиНСБУ.Видимость = Ложь;
		
	Иначе		
		
		ФормаДокумента.Элементы.СтраницаДвижениеРезервов.Видимость = Истина;
		ФормаДокумента.Элементы.РезервыСчетЗадолженностиНСБУ.Видимость = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьРассчитать()

	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ЗаполнитьПоНСБУ", Истина);
	
	ДокументОбъект = ЭтаФорма.РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ПараметрыЗаполнения);
	ЭтаФорма.ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ЭтаФорма.Модифицированность = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоДоговорыСРучнымРасчетом(Команда)
	
	Элементы.РезервыТолькоДоговорыСРучнымРасчетом.Пометка = НЕ Элементы.РезервыТолькоДоговорыСРучнымРасчетом.Пометка;
	
	Если Элементы.РезервыТолькоДоговорыСРучнымРасчетом.Пометка Тогда
		ТолькоДоговорыСРучнымРасчетомСервер();
		Элементы.Резервы.ОтборСтрок = Новый ФиксированнаяСтруктура("РучнойРасчетРезерваПоЗадолженности", Истина);
	Иначе
		Элементы.Резервы.ОтборСтрок = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ТолькоДоговорыСРучнымРасчетомСервер()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.РучнойРасчетРезерваПоЗадолженности
	|	И ДоговорыКонтрагентов.Ссылка В(&Договор)";
	
	Запрос.УстановитьПараметр("Договор", Объект.Резервы.Выгрузить(,"Договор").ВыгрузитьКолонку("Договор"));
	
	СтрокиПредыдущегоОтбора = Объект.Резервы.НайтиСтроки(Новый Структура("РучнойРасчетРезерваПоЗадолженности", Истина));
	Для каждого СтрокаОтбора Из СтрокиПредыдущегоОтбора Цикл
		СтрокаОтбора.РучнойРасчетРезерваПоЗадолженности = Ложь;
	КонецЦикла;
	
	ВыборкаДоговоры = Запрос.Выполнить().Выбрать();	
	Пока ВыборкаДоговоры.Следующий() Цикл
		
		СтрокиПоДоговору = Объект.Резервы.НайтиСтроки(Новый Структура("Договор", ВыборкаДоговоры.Договор));
		Для каждого СтрокаПоДоговору Из СтрокиПоДоговору Цикл
			СтрокаПоДоговору.РучнойРасчетРезерваПоЗадолженности = Истина;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьРеквизитыУП(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРеквизитыУП(Форма)
	МСФОКлиентСерверУХ.ОбновитьРеквизитыУП(Форма);
КонецПроцедуры

#Область ЗаполнениеДокумента

&НаКлиенте
Процедура Подключаемый_ЗаполнитьДокумент(РезультатВопроса = Неопределено, ДанныеЗаполнения) Экспорт
	
	Если (РезультатВопроса <> Неопределено) И (РезультатВопроса <> КодВозвратаДиалога.Да) Тогда
		Возврат;	
	КонецЕсли;
    
    ЗаполнитьДокумент(ДанныеЗаполнения);
	
	ОбновитьВидимостьПодробноПоСтроке(Элементы.Резервы.ТекущиеДанные);
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элементы.РезервыСчетРасходаМСФО, "Резервы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ДанныеЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


