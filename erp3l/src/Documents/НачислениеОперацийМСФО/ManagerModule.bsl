
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СтандартныеПодсистемыКоманды

// Добавляет команду создания объекта на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - Добавленная Команда.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	
	Если ПравоДоступа("Добавление", МетаданныеДокумента) Тогда
		
		КомандаСоздатьНаОсновании						= КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер				= МетаданныеДокумента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление			= ОбщегоНазначения.ПредставлениеОбъекта(МетаданныеДокумента);
		КомандаСоздатьНаОсновании.РежимЗаписи			= "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// 	Параметры - Структура - параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область Проведение

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ, ФормироватьПроводкиМСФО = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	ДопРеквизиты = Новый Структура("ПериодичностьОтчетности, ПериодСценария", 
	"ВЫБОР
	|		КОГДА д.Сценарий.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|		ИНАЧЕ д.Сценарий.Периодичность
	|	КОНЕЦ");
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, ДопРеквизиты, "ПериодСценария", Отказ);
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		Реквизиты.Вставить("ПериодСценария", ОбщегоНазначенияУХ.глОтносительныйПериодПоДате(Реквизиты.Период, Реквизиты.ПериодичностьОтчетности, 0));
	Иначе 
		Реквизиты.Вставить("ПериодСценария", Реквизиты.ПериодСценария);	
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);	
	
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО",	?(ФормироватьПроводкиМСФО = Неопределено, Реквизиты.ФормироватьПроводкиМСФО, ФормироватьПроводкиМСФО));	
	Запрос.УстановитьПараметр("Период", 					Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий", 					Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("ОперацияНачисление", 		Справочники.ВидыОпераций.НачислениеДоходовРасходовМСФО);
	Запрос.УстановитьПараметр("ОперацияСторно", 			Справочники.ВидыОпераций.СторноНачисленияДоходовРасходовМСФО);
	Запрос.УстановитьПараметр("ФункциональнаяВалюта", 		Реквизиты.ФункциональнаяВалюта);
	Запрос.УстановитьПараметр("ДопВалюта", 					?(ЗначениеЗаполнено(Реквизиты.ВалютаПредставления), Реквизиты.ВалютаПредставления, Реквизиты.ФункциональнаяВалюта) );
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаПроводок(НомераТаблиц);
	Возврат ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(
				ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапросаТаблицаПроводок(НомераТаблиц = Неопределено)
	
	НомераТаблиц.Вставить("ТаблицаПроводок", НомераТаблиц.Количество());
	
	Возврат 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ФормироватьПроводкиМСФО
	|			ТОГДА ДвиженияНачислений.СчетДт.СчетСсылка
	|		ИНАЧЕ ДвиженияНачислений.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ВидДт1.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА ВидДт2.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ВидДт3.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ЕСТЬNULL(ВидДт1.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт1,
	|	ЕСТЬNULL(ВидДт2.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт2,
	|	ЕСТЬNULL(ВидДт3.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоДт3,
	|	ВЫБОР
	|		КОГДА &ФормироватьПроводкиМСФО
	|			ТОГДА ДвиженияНачислений.СчетКт.СчетСсылка
	|		ИНАЧЕ ДвиженияНачислений.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ВидКт1.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА ВидКт2.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА ВидКт3.ВидСубконтоСсылка ЕСТЬ NULL
	|			ТОГДА NULL
	|		ИНАЧЕ ДвиженияНачислений.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ЕСТЬNULL(ВидКт1.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт1,
	|	ЕСТЬNULL(ВидКт2.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт2,
	|	ЕСТЬNULL(ВидКт3.ВидСубконтоСсылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка)) КАК ВидСубконтоКт3,
	|	ДвиженияНачислений.Значение КАК СуммаВФункциональнойВалюте,
	|	ВЫБОР
	|		КОГДА ДопВалюта.Курс = 0
	|				ИЛИ ФункциональнаяВалюта.Кратность = 0
	|			ТОГДА 0
	|		ИНАЧЕ ДвиженияНачислений.Значение * ФункциональнаяВалюта.Курс * ДопВалюта.Кратность / (ДопВалюта.Курс * ФункциональнаяВалюта.Кратность)
	|	КОНЕЦ КАК СуммаВВалютеОтчетности,
	|	ДвиженияНачислений.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетДт.Валютный
	|			ТОГДА ДвиженияНачислений.ВалютаДт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетКт.Валютный
	|			ТОГДА ДвиженияНачислений.ВалютаКт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетДт.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА ДвиженияНачислений.КоличествоДт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетКт.ПризнакиУчета ПОДОБНО ""%Количественный%""
	|			ТОГДА ДвиженияНачислений.КоличествоКт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетКт.Валютный
	|			ТОГДА ДвиженияНачислений.ЗначениеВалютаКт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СуммаВВалютеКт,
	|	ВЫБОР
	|		КОГДА ДвиженияНачислений.СчетДт.Валютный
	|			ТОГДА ДвиженияНачислений.ЗначениеВалютаДт
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СуммаВВалютеДт,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.НачислениеДоходовРасходовМСФО) КАК ВидОперации,
	|	ДвиженияНачислений.Ссылка.Организация КАК Организация,
	|	ДвиженияНачислений.Ссылка.Сценарий КАК Сценарий,
	|	ДвиженияНачислений.ПодразделениеДт КАК ПодразделениеДт,
	|	ДвиженияНачислений.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	ДвиженияНачислений.ПодразделениеКт КАК ПодразделениеКт,
	|	ДвиженияНачислений.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт
	|ИЗ
	|	Документ.НачислениеОперацийМСФО.ДвиженияНачислений КАК ДвиженияНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидДт1
	|		ПО (ВидДт1.Ссылка = ДвиженияНачислений.СчетДт)
	|			И (ВидДт1.Номер = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидДт2
	|		ПО (ВидДт2.Ссылка = ДвиженияНачислений.СчетДт)
	|			И (ВидДт2.Номер = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидДт3
	|		ПО (ВидДт3.Ссылка = ДвиженияНачислений.СчетДт)
	|			И (ВидДт3.Номер = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидКт1
	|		ПО (ВидКт1.Ссылка = ДвиженияНачислений.СчетКт)
	|			И (ВидКт1.Номер = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидКт2
	|		ПО (ВидКт2.Ссылка = ДвиженияНачислений.СчетКт)
	|			И (ВидКт2.Номер = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СчетаБД.ВидыСубконто КАК ВидКт3
	|		ПО (ВидКт3.Ссылка = ДвиженияНачислений.СчетКт)
	|			И (ВидКт3.Номер = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ДопВалюта) КАК ДопВалюта
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ФункциональнаяВалюта) КАК ФункциональнаяВалюта
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДвиженияНачислений.Ссылка = &Ссылка";

КонецФункции

#КонецОбласти	

// Возвращает список начислений созданных документом
//
// Параметры:
//  ИсходныйДокумент  - Документ - документ, создавший начисление
//	Отбор - Если Неопределено, тогда отбор не устанавливается.
//		Если Структура, то элементы - это значения реквизитов документа "НачислениеОперацийМСФО" для отбора.
// Возвращаемое значение:
//   Массив   - массив трансформационных корректировок
//
Функция ПолучитьПодчиненные(ДокументОснование, Отбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НачислениеОперацийМСФО.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.НачислениеОперацийМСФО КАК НачислениеОперацийМСФО
	|ГДЕ
	|	НачислениеОперацийМСФО.ДокументОснование = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Если ТипЗнч(Отбор) = Тип("Структура") ИЛИ ТипЗнч(Отбор) = Тип("ФиксированнаяСтруктура") Тогда
		
		Для Каждого ЭлементОтбора Из Отбор Цикл
			Запрос.Текст = Запрос.Текст + Символы.ПС +
				"	И НачислениеОперацийМСФО." + ЭлементОтбора.Ключ + " = &" + ЭлементОтбора.Ключ;
			Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
		КонецЦикла;
		
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат ?(РезультатЗапроса.Пустой(), Новый Массив, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));

КонецФункции

#КонецЕсли
