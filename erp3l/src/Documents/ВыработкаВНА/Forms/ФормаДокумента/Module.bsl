
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	МСФОУХ.ОбновитьУсловноеОформлениеФормы(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ДокументыОснованияПараллельногоУчета"
	 И ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ДокументыОснования.Очистить();
		Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
			Если СтрокаСписка.Значение.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
			СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
		КонецЦикла;
		
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)	
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументМСФО(Команда)
	МСФОКлиентУХ.СоздатьДокументМСФО(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМА(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемы(Команда)
	
	Если Не МСФОВНАВызовСервераУХ.ИспользоватьДанныеУчетнойСистемы(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТекстВопроса = НСтр("ru = 'При заполнении существующие данные будут перезаполнены!
		|Продолжить?'");
		
	Ответ = Неопределено;

		
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьИзУчетнойСистемыЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    ЗаполнитьДокумент(Новый Структура("ИсточникЗаполнения", "ДанныеНСБУ"));
    
    МСФОКлиентСерверУХ.ОбновитьВидимостьДокументыОснования(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДокументамОснованиям(Команда)
	
	ОчиститьСообщения();
	
	Если Объект.ВНА.Количество() > 0 Тогда
	
		ТекстВопроса = НСтр("ru = 'При заполнении существующие данные будут перезаполнены!
		|Продолжить?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоДокументамОснованиямЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
	
	КонецЕсли;	
	
	ЗаполнитьДокумент(Новый Структура("ИсточникЗаполнения", "ДокументыОснования"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДокументамОснованиямЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;    
    
    ЗаполнитьДокумент(Новый Структура("ИсточникЗаполнения", "ДокументыОснования"));

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКолонкамНСБУ(Команда)
	ЗаполнитьПоКолонкамНСБУСервер();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);	
	ОчиститьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНеУказанГиперссылкаНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДобавитьДокументОснованиеНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
		
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА", СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТабличнойЧасти

&НаКлиенте
Процедура ВНАПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВНАПередНачаломИзменения(Элемент, Отказ)
	 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтрокиРасхождений(Команда)
	
	Если (Элементы.ВНА.ОтборСтрок = Неопределено) ИЛИ НЕ Элементы.ВНА.ОтборСтрок.Свойство("ЕстьРасхождения") Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРасхождения", Истина);
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Истина;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;		
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтрокиИзменений(Команда)
	
	Если (Элементы.ВНА.ОтборСтрок = Неопределено) ИЛИ НЕ Элементы.ВНА.ОтборСтрок.Свойство("ЕстьИзменение") Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьИзменение", Истина);
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Истина;
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Ложь;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВКолонкеПоВыделенным(Команда)	
	МСФОКлиентУХ.УстановитьЗначениеВКолонкеПоВыделеннымСтрокам(ЭтаФорма, "ВНА");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ВНАПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	МСФОКлиентУХ.ТабличнаяЧастьПриОкончанииРедактирования(ЭтаФорма, Элемент, НоваяСтрока, ОтменаРедактирования);	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)			
	МСФОКлиентСерверУХ.ОбновитьВыборТипаВНА(ЭтаФорма, НоваяСтрока, Копирование);
КонецПроцедуры

#КонецОбласти
 
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Общие

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)    
    МСФОКлиентСерверУХ.УправлениеФормой(Форма, "ВНА", Ложь);
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)
	
	ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	ЭтаФорма.КэшируемыеЗначения.Вставить("СпособыНачисленияАмортизации", 	МСФОВНАВызовСервераУХ.ПолучитьВозможныеСпособыНачисленияАмортизации());
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", 					Документы.ВыработкаВНА.ПолучитьИменаСубконто());
	
	МСФОУХ.ПодготовитьФормуНаСервере(ЭтаФорма);
	
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "ВНА");
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеРеквизитовСтрокиТЧ

&НаСервере
Процедура ЗаполнитьПоКолонкамНСБУСервер()

	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);

КонецПроцедуры    

#КонецОбласти

#Область ЗаполнениеТЧ

&НаСервере
Процедура ОчиститьТаблицы()

	МСФОУХ.ОчиститьТаблицы(ЭтаФорма);

КонецПроцедуры // ()

&НаСервере
Процедура ЗаполнитьДокумент(ПараметрыЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ПараметрыЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАОчистка(Элемент, СтандартнаяОбработка)
	Элементы.ВНАВНА.ВыбиратьТип = Истина;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
