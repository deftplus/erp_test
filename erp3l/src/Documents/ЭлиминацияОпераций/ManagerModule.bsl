
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Проведение

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	ИменаДопРеквизитов = "ПериодОтчета, ДатаНачала, ДатаОкончания, РегистрУчета, ОрганизацияА, ОрганизацияБ, РеализуемыеАктивыВГО";
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, ИменаДопРеквизитов, "ПериодОтчета", Отказ);
	
	ОписаниеРегистра = МСФОВызовСервераУХ.ОписаниеРегистра(Реквизиты.РегистрУчета);
	
	Запрос.УстановитьПараметр("ПланСчетовИБ", ОписаниеРегистра.ПланСчетов);
	ЗаполнитьПараметры(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_Контрагенты(НомераТаблиц));
	Если ОписаниеРегистра.ЭтоМСФО Тогда
		
		ТекстЗапроса.Добавить(ТекстЗапроса_РазделыПланаСчетов(НомераТаблиц, ОписаниеРегистра.ЭтоМСФО));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаДКЗ(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаНалоги(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаОПУ(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаАмортизации(НомераТаблиц));
		
	Иначе 
		
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаДКЗ_РСБУ(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаНалоги_РСБУ(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаОПУ_РСБУ(НомераТаблиц));
		ТекстЗапроса.Добавить(ТекстЗапроса_СчетаАмортизации_РСБУ(НомераТаблиц));
			
	КонецЕсли;
	
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаИсключения(НомераТаблиц));
		
	ТекстЗапроса.Добавить(ТекстЗапроса_ПроводкиСторно(НомераТаблиц, ОписаниеРегистра.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_ДокументыСтоимости(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ПроводкиНеДКЗ(НомераТаблиц, ОписаниеРегистра.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_Распределение(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_Проводки(НомераТаблиц, ОписаниеРегистра.ЭтоМСФО));
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Возврат ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Процедура ЗаполнитьПараметры(Запрос, Реквизиты)
	
	Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Реквизиты.ОрганизацияА);
	Организации.Добавить(Реквизиты.ОрганизацияБ);
	
	Запрос.УстановитьПараметр("Ссылка",					Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",					Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",				Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ПериодОтчета", 			Реквизиты.ПериодОтчета);
	Запрос.УстановитьПараметр("НачалоПериода", 			Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", 			КонецДня(Реквизиты.ДатаОкончания));	
	Запрос.УстановитьПараметр("Организации", 			Организации);
	Запрос.УстановитьПараметр("ОрганизацияА", 			Реквизиты.ОрганизацияА);
	
	Запрос.УстановитьПараметр("РеализуемыеАктивыВГО", 	Реквизиты.РеализуемыеАктивыВГО.ТипЗначения.Типы());

	А = Реквизиты.ОрганизацияА;
	Б = Реквизиты.ОрганизацияБ;
	КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	СторноПриобретения 			= НСтр("ru = 'Сторно ВГО приобретения <%1>'", КодЯзыка);
	СторноВыручки 				= НСтр("ru = 'Сторно ВГО выручки <%1>'", КодЯзыка);
	ВосстановлениеСтоимости 	= НСтр("ru = 'Восстановление ВГО стоимости <%1>, от продавца <%2>'", КодЯзыка);
	ВосстановлениеАмортизации 	= НСтр("ru = 'Восстановление ВГО амортизации <%1>, от продавца <%2>'", КодЯзыка);
	ВосстановлениеНалога		= НСтр("ru = 'Восстановление ВГО налогов <%1>, от продавца <%2>'", КодЯзыка);
	
	Запрос.УстановитьПараметр("СторноВыручкиА",			СтрШаблон(СторноВыручки, 		А));
	Запрос.УстановитьПараметр("СторноВыручкиБ",			СтрШаблон(СторноВыручки, 		Б));
	
	Запрос.УстановитьПараметр("СторноПриобретенияБ",	СтрШаблон(СторноПриобретения, 	Б));
	Запрос.УстановитьПараметр("СторноПриобретенияА",	СтрШаблон(СторноПриобретения, 	А) );
	
	Запрос.УстановитьПараметр("ВосстановлениеСтоимостиА",	СтрШаблон(ВосстановлениеСтоимости, А, Б));
	Запрос.УстановитьПараметр("ВосстановлениеСтоимостиБ",	СтрШаблон(ВосстановлениеСтоимости, Б, А));
	
	Запрос.УстановитьПараметр("ВосстановлениеАмортизацииА",	СтрШаблон(ВосстановлениеАмортизации, А, Б));
	Запрос.УстановитьПараметр("ВосстановлениеАмортизацииБ",	СтрШаблон(ВосстановлениеАмортизации, Б, А));
	
	Запрос.УстановитьПараметр("ВосстановлениеНалогаА",	СтрШаблон(ВосстановлениеНалога,	Б, А));
	Запрос.УстановитьПараметр("ВосстановлениеНалогаБ",	СтрШаблон(ВосстановлениеНалога,	А, Б));
		
КонецПроцедуры

Функция ТекстЗапроса_Контрагенты(НомераТаблиц)

	НомераТаблиц.Вставить("втКонтрагенты", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Контрагент,
	|	т.ОрганизационнаяЕдиница КАК Организация
	|ПОМЕСТИТЬ втКонтрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК т
	|ГДЕ
	|	т.ОрганизационнаяЕдиница В(&Организации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент";

КонецФункции

#Область МСФО

Функция ТекстЗапроса_РазделыПланаСчетов(НомераТаблиц, ЭтоМСФО = Истина)

	НомераТаблиц.Вставить("втРазделыПланаСчетов", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК РазделПланаСчетов,
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Баланс))
	|		И НЕ т.Ссылка В (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Капитал)) КАК СчетДКЗ,
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ОПУ)) КАК СчетОПУ,
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ВнеоборотныеАктивы)) КАК СчетВНА,
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.Налоги), ЗНАЧЕНИЕ(Справочник.РазделыПланаСчетов.ПрочиеАктивыОбязательства)) КАК СчетНалоги
	|ПОМЕСТИТЬ втРазделыПланаСчетов
	|ИЗ
	|	Справочник.РазделыПланаСчетов КАК т";

КонецФункции

Функция ТекстЗапроса_СчетаДКЗ(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаДКЗ", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка.СчетСсылка КАК Счет	
	|ПОМЕСТИТЬ втСчетаДКЗ
	|ИЗ
	|	Справочник.СчетаБД.ВидыСубконто КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРазделыПланаСчетов КАК втРазделыПланаСчетов
	|		ПО т.Ссылка.РазделПланаСчетов = втРазделыПланаСчетов.РазделПланаСчетов
	|			И (втРазделыПланаСчетов.СчетДКЗ)
	|ГДЕ
	|	т.Ссылка.Владелец = &ПланСчетовИБ
	|	И т.ТипДанных ПОДОБНО ""%Справочник.Контрагенты%""
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Ссылка,
	|	т.Ссылка.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

КонецФункции

Функция ТекстЗапроса_СчетаОПУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("втСчетаОПУ", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка.СчетСсылка КАК Счет,
	|	т.Ссылка КАК СчетИБ
	|ПОМЕСТИТЬ втСчетаОПУ
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРазделыПланаСчетов КАК втРазделыПланаСчетов
	|		ПО т.РазделПланаСчетов = втРазделыПланаСчетов.РазделПланаСчетов
	|			И (втРазделыПланаСчетов.СчетОПУ)
	|ГДЕ
	|	т.Ссылка.Владелец = &ПланСчетовИБ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	
КонецФункции

Функция ТекстЗапроса_СчетаНалоги(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаНалоги", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.СчетСсылка КАК Счет
	|ПОМЕСТИТЬ втСчетаНалоги
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРазделыПланаСчетов КАК втРазделыПланаСчетов
	|		ПО т.РазделПланаСчетов = втРазделыПланаСчетов.РазделПланаСчетов
	|			И (втРазделыПланаСчетов.СчетНалоги)
	|ГДЕ
	|	т.Владелец = &ПланСчетовИБ
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Ссылка,
	|	т.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

КонецФункции

Функция ТекстЗапроса_СчетаАмортизации(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаАмортизации", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.СчетСсылка КАК Счет
	|ПОМЕСТИТЬ втСчетаАмортизации
	|ИЗ
	|	Справочник.СчетаБД КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРазделыПланаСчетов КАК втРазделыПланаСчетов
	|		ПО т.РазделПланаСчетов = втРазделыПланаСчетов.РазделПланаСчетов
	|			И (втРазделыПланаСчетов.СчетВНА)
	|ГДЕ
	|	т.Владелец = &ПланСчетовИБ
	|	И т.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовБД.Пассивный)
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Ссылка,
	|	т.СчетСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

КонецФункции

#КонецОбласти

#Область РСБУ

Функция ТекстЗапроса_СчетаДКЗ_РСБУ(НомераТаблиц)
		
	НомераТаблиц.Вставить("втСчетаДКЗ", НомераТаблиц.Количество());//СчетДКЗ - 60е,70е

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	т.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДКЗ
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК т
	|ГДЕ
	|	НЕ т.Ссылка.Забалансовый
	|	И НЕ т.Ссылка.ЗапретитьИспользоватьВПроводках
	|	И ПОДСТРОКА(т.Ссылка.Код, 0, 1) В (""6"", ""7"")
	|	И т.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители))";
	
	Если ИдентификацияПродуктаУХКлиентСервер.ЭтоЕХ() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Учредители", "Контрагенты");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_СчетаОПУ_РСБУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("втСчетаОПУ", НомераТаблиц.Количество());//СчетОПУ - 90е

	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаОПУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы))";
	
КонецФункции

Функция ТекстЗапроса_СчетаНалоги_РСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаНалоги", НомераТаблиц.Количество());//СчетНалоги - 19, 68

	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаНалоги
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымЦенностям), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоНалогам))";
	
КонецФункции

Функция ТекстЗапроса_СчетаАмортизации_РСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаАмортизации", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаАмортизации
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК т
	|ГДЕ
	|	т.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов))";

КонецФункции

#КонецОбласти

Функция ТекстЗапроса_СчетаИсключения(НомераТаблиц)

	НомераТаблиц.Вставить("втСчетаИсключения", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Счет КАК Счет
	|ПОМЕСТИТЬ втСчетаИсключения
	|ИЗ
	|	втСчетаНалоги КАК т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	т.Счет
	|ИЗ
	|	втСчетаДКЗ КАК т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

КонецФункции

Функция ТекстЗапроса_ПроводкиСторно(НомераТаблиц, ЭтоМСФО)
	
	НомераТаблиц.Вставить("втСторно", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Проводки.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Проводки.Организация = &ОрганизацияА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЭлиминацияОперацийА)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЭлиминацияОперацийБ)
	|	КОНЕЦ КАК ВидОперации,
	|	Проводки.Организация = &ОрганизацияА КАК ЭтоА,
	|	Проводки.СчетКт В
	|		(ВЫБРАТЬ
	|			т.Счет
	|		ИЗ
	|			втСчетаДКЗ КАК т) КАК ЭтоПриобретение,
	|	Проводки.СчетДт КАК СчетДт,
	|	Проводки.СубконтоДт1 КАК СубконтоДт1,
	|	Проводки.ВидСубконтоДт1 КАК ВидСубконтоДт1,
	|	Проводки.СубконтоДт2 КАК СубконтоДт2,
	|	Проводки.ВидСубконтоДт2 КАК ВидСубконтоДт2,
	|	Проводки.СубконтоДт3 КАК СубконтоДт3,
	|	Проводки.ВидСубконтоДт3 КАК ВидСубконтоДт3,
	|	Проводки.СчетКт КАК СчетКт,
	|	Проводки.СубконтоКт1 КАК СубконтоКт1,
	|	Проводки.ВидСубконтоКт1 КАК ВидСубконтоКт1,
	|	Проводки.СубконтоКт2 КАК СубконтоКт2,
	|	Проводки.ВидСубконтоКт2 КАК ВидСубконтоКт2,
	|	Проводки.СубконтоКт3 КАК СубконтоКт3,
	|	Проводки.ВидСубконтоКт3 КАК ВидСубконтоКт3,
	|	Проводки.ВалютаДт КАК ВалютаДт,
	|	Проводки.ВалютаКт КАК ВалютаКт,
	|	Проводки.ПодразделениеДт КАК ПодразделениеДт,
	|	Проводки.ПодразделениеКт КАК ПодразделениеКт,
	|	Проводки.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	Проводки.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	Проводки.СуммаВВалютеУчета КАК СуммаВВалютеУчета,
	|	Проводки.СуммаВВалютеОтчетности КАК СуммаВВалютеОтчетности,
	|	Проводки.СуммаВВалютеДт КАК СуммаВВалютеДт,
	|	Проводки.СуммаВВалютеКт КАК СуммаВВалютеКт,
	|	Проводки.КоличествоДт КАК КоличествоДт,
	|	Проводки.КоличествоКт КАК КоличествоКт,
	|	Проводки.СчетДтИсточник КАК СчетДтИсточник,
	|	Проводки.СчетКтИсточник КАК СчетКтИсточник,
	|	Проводки.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ втСторно
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Организация В (&Организации)
	|				И Счет В
	|					(ВЫБРАТЬ
	|						т.Счет
	|					ИЗ
	|						втСчетаДКЗ КАК т)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						т.Контрагент
	|					ИЗ
	|						втКонтрагенты КАК т)
	|				И НЕ КорСчет В
	|						(ВЫБРАТЬ
	|							т.Счет
	|						ИЗ
	|							втСчетаИсключения КАК т)
	|				И Сценарий = &Сценарий
	|				И &УсловиеОтбора,
	|			,
	|			) КАК Проводки";
	
	Если ЭтоМСФО Тогда
		
		УсловиеОтбора = 
		"	ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция)
		|	И ВЫРАЗИТЬ(Регистратор КАК Документ.Трансляция).ИсходныйДокумент <> НЕОПРЕДЕЛЕНО";
		Возврат СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", "ИСТИНА");
	Возврат МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "Проводки");
	
КонецФункции

Функция ТекстЗапроса_ДокументыСтоимости(НомераТаблиц)
	
	НомераТаблиц.Вставить("втДокументыСтоимости", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.Регистратор КАК Регистратор,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА т.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА т.СубконтоДт1.ОрганизационнаяЕдиница
	|			ИНАЧЕ т.СубконтоКт1.ОрганизационнаяЕдиница
	|		КОНЕЦ) КАК ОрганизацияКонтрагента
	|ПОМЕСТИТЬ втДокументыСтоимости
	|ИЗ
	|	втСторно КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";

КонецФункции

Функция ТекстЗапроса_ПроводкиНеДКЗ(НомераТаблиц, ЭтоМСФО = Истина)

	//Пытаемся сопоставить проводки по: периодДень и Сопоставление.
	//Сопоставление: 
	//1. для налогов (считаем что это НДС) - Сумма проводки
	//2. для себестоимости - ссылка на реализуемый объект
	//Для сопоставления себестоимости ВАЖНО вначале смотреть кредит себестоимости продавца.
	//Примеры:
	//себестоимость МПЗ: Дт 90.02 Кт 43 : надо взять 43.МПЗ, а не 90.02.НГ 
	//себестоимость услуг: Дт 90.02 Кт 20 : надо взять 20.НГ
	
	//втПроводкиНеДКЗ(без проводки выручки продавца, выручка продавца сторнируются в сумме долга):
	//- проводки продавца: 
	//		а) списание себестоимости(Дт 90(ОПУ) Кт 10(ВыбываемыйАктив))  = ПроводкаСписаниеСтоимостиПриПродаже
	//		б) начисление НДС(ПроводкаНалоги) (Дт 90 (ОПУ) Кт 68(Налоги)) = ПроводкаНалоги
	//- проводки покупателя: 
	//		а) приобретение актива (Дт 10(принятый актив) Кт 60(ДКЗ))
	//		б) НДС приобретения (Дт 18(налоги) Кт 60(ДКЗ)) = ПроводкаНалоги
	
	//Сопоставление: для налогов - сумма, для активов - актив
	
	НомераТаблиц.Вставить("втПроводкиНеДКЗ", НомераТаблиц.Количество());
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ПроводкиСебестоимость.Регистратор КАК Регистратор,
	|	втДокументыСтоимости.ОрганизацияКонтрагента КАК ОрганизацияКонтрагента,
	|	ПроводкиСебестоимость.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ПроводкиСебестоимость.Период, ДЕНЬ) КАК ПериодДень,
	|	ВЫБОР
	|		КОГДА ПроводкиСебестоимость.СчетДт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаНалоги КАК т)
	|			ТОГДА ПроводкиСебестоимость.СуммаВВалютеУчета
	|		КОГДА ПроводкиСебестоимость.СчетКт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаНалоги КАК т)
	|			ТОГДА ПроводкиСебестоимость.СуммаВВалютеУчета
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоКт1) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоКт2) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоКт3) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоКт3
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоДт1) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоДт1
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоДт2) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоДт2
	|		КОГДА ТИПЗНАЧЕНИЯ(ПроводкиСебестоимость.СубконтоДт3) В (&РеализуемыеАктивыВГО)
	|			ТОГДА ПроводкиСебестоимость.СубконтоДт3
	|		ИНАЧЕ ПроводкиСебестоимость.СуммаВВалютеУчета
	|	КОНЕЦ КАК Сопоставление,
	|	ПроводкиСебестоимость.СчетДт В
	|			(ВЫБРАТЬ
	|				т.Счет
	|			ИЗ
	|				втСчетаНалоги КАК т)
	|		ИЛИ ПроводкиСебестоимость.СчетКт В
	|			(ВЫБРАТЬ
	|				т.Счет
	|			ИЗ
	|				втСчетаНалоги КАК т) КАК ПроводкаНалоги,
	|	ПроводкиСебестоимость.СчетДт В
	|		(ВЫБРАТЬ
	|			т.Счет
	|		ИЗ
	|			втСчетаОПУ КАК т) КАК ПроводкаСписаниеСтоимостиПриПродаже,
	|	ПроводкиСебестоимость.СчетДт В
	|		(ВЫБРАТЬ
	|			т.Счет
	|		ИЗ
	|			втСчетаАмортизации КАК т) КАК ПроводкаСписаниеАмортизацииПриПродаже,
	|	ПроводкиСебестоимость.Организация = &ОрганизацияА КАК ЭтоА,
	|	ПроводкиСебестоимость.Организация КАК Организация,
	|	ПроводкиСебестоимость.СчетДт КАК СчетДт,
	|	ПроводкиСебестоимость.СубконтоДт1 КАК СубконтоДт1,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоДт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт1,
	|	ПроводкиСебестоимость.СубконтоДт2 КАК СубконтоДт2,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоДт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт2,
	|	ПроводкиСебестоимость.СубконтоДт3 КАК СубконтоДт3,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоДт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт3,
	|	ПроводкиСебестоимость.СчетКт КАК СчетКт,
	|	ПроводкиСебестоимость.СубконтоКт1 КАК СубконтоКт1,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоКт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт1,
	|	ПроводкиСебестоимость.СубконтоКт2 КАК СубконтоКт2,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоКт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт2,
	|	ПроводкиСебестоимость.СубконтоКт3 КАК СубконтоКт3,
	|	ЕСТЬNULL(ПроводкиСебестоимость.ВидСубконтоКт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт3,
	|	ПроводкиСебестоимость.ПодразделениеДт КАК ПодразделениеДт,
	|	ПроводкиСебестоимость.ПодразделениеКт КАК ПодразделениеКт,
	|	ПроводкиСебестоимость.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	ПроводкиСебестоимость.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	ПроводкиСебестоимость.СуммаВВалютеУчета КАК СуммаВВалютеУчета,
	|	ПроводкиСебестоимость.СуммаВВалютеОтчетности КАК СуммаВВалютеОтчетности,
	|	ПроводкиСебестоимость.СуммаВВалютеДт КАК СуммаВВалютеДт,
	|	ПроводкиСебестоимость.СуммаВВалютеКт КАК СуммаВВалютеКт,
	|	ПроводкиСебестоимость.КоличествоДт КАК КоличествоДт,
	|	ПроводкиСебестоимость.КоличествоКт КАК КоличествоКт,
	|	ПроводкиСебестоимость.СчетДтИсточник КАК СчетДтИсточник,
	|	ПроводкиСебестоимость.СчетКтИсточник КАК СчетКтИсточник
	|ПОМЕСТИТЬ втПроводкиНеДКЗ
	|ИЗ
	|	РегистрБухгалтерии.МСФО.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Организация В (&Организации)
	|				И Сценарий = &Сценарий
	|				И НЕ(СчетДт В
	|							(ВЫБРАТЬ
	|								т.Счет
	|							ИЗ
	|								втСчетаДКЗ КАК т)
	|						И СчетКт В
	|							(ВЫБРАТЬ
	|								т.Счет
	|							ИЗ
	|								втСчетаОПУ КАК т)),
	|			,
	|			) КАК ПроводкиСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДокументыСтоимости КАК втДокументыСтоимости
	|		ПО ПроводкиСебестоимость.Регистратор = втДокументыСтоимости.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОрганизацияКонтрагента,
	|	ПроводкаСписаниеСтоимостиПриПродаже,
	|	ПериодДень";
	
	Если ЭтоМСФО Тогда
		
		УсловиеОтбора = 
		"	ВидОперации = ЗНАЧЕНИЕ(Справочник.ВидыОпераций.Трансляция)
		|	И ВЫРАЗИТЬ(Регистратор КАК Документ.Трансляция).ИсходныйДокумент <> НЕОПРЕДЕЛЕНО";
		Возврат СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", "ИСТИНА");
	Возврат МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "ПроводкиСебестоимость");
	
КонецФункции

Функция ТекстЗапроса_Распределение(НомераТаблиц)

	//втПравила - сопоставляет проводки "себестоимость актива продавца" и "поступление актива покупателя" 
	
	//если "несколько себестоимостей продаж - одно поступление", 
	//тогда для суммы себестоимостей списываются на аналитику поступления
	//если "одна себестоимость продаж - несколько поступлений", 
	//тогда для одна себестоимость списывается на одну из аналитик поступления
	
	НомераТаблиц.Вставить("втПравила", 			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втСписаниеАктивов",	НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	Продавец.Регистратор КАК РегистраторПродавец,
	|	Продавец.ПроводкаНалоги КАК ПроводкаНалоги,                       
	|	Продавец.СуммаВВалютеУчета КАК СуммаВВалютеУчета,
	|	Продавец.СуммаВВалютеОтчетности КАК СуммаВВалютеОтчетности,
	|	ЕСТЬNULL(Правило3.КоличествоДт, ЕСТЬNULL(Правило2.КоличествоКт, ЕСТЬNULL(Правило1.КоличествоДт, 0))) КАК Количество,
	|	Продавец.НомерЗаписи КАК НомерПродавец,
	|	ЕСТЬNULL(Правило3.Регистратор, ЕСТЬNULL(Правило2.Регистратор, ЕСТЬNULL(Правило1.Регистратор, НЕОПРЕДЕЛЕНО))) КАК РегистраторПокупатель,
	|	ЕСТЬNULL(Правило3.НомерЗаписи, ЕСТЬNULL(Правило2.НомерЗаписи, ЕСТЬNULL(Правило1.НомерЗаписи, НЕОПРЕДЕЛЕНО))) КАК НомерПокупатель,
	|	ЕСТЬNULL(Правило3.СуммаВВалютеУчета, ЕСТЬNULL(Правило2.СуммаВВалютеУчета, ЕСТЬNULL(Правило1.СуммаВВалютеУчета, 0))) КАК СуммаПокупатель,
	|	ВЫБОР
	|		КОГДА НЕ Правило3.НомерЗаписи ЕСТЬ NULL
	|			ТОГДА 3
	|		КОГДА НЕ Правило2.НомерЗаписи ЕСТЬ NULL
	|			ТОГДА 2
	|		КОГДА НЕ Правило1.НомерЗаписи ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК НомерПравила
	|ПОМЕСТИТЬ втПравила
	|ИЗ
	|	втПроводкиНеДКЗ КАК Продавец
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПроводкиНеДКЗ КАК Правило1
	|		ПО (НЕ Правило1.ПроводкаСписаниеСтоимостиПриПродаже)
	|			И (НЕ Правило1.ПроводкаСписаниеАмортизацииПриПродаже)
	|			И Продавец.ПроводкаНалоги = Правило1.ПроводкаНалоги
	|			И Продавец.Организация = Правило1.ОрганизацияКонтрагента
	|			И Продавец.ОрганизацияКонтрагента = Правило1.Организация
	|			И Продавец.ПериодДень = Правило1.ПериодДень
	|			И Продавец.Сопоставление = Правило1.Сопоставление
	|			И (Правило1.СчетКт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаДКЗ КАК т))
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПроводкиНеДКЗ КАК Правило2
	|		ПО (НЕ Правило2.ПроводкаСписаниеСтоимостиПриПродаже)
	|			И (НЕ Правило2.ПроводкаСписаниеАмортизацииПриПродаже)
	|			И Продавец.ПроводкаНалоги = Правило2.ПроводкаНалоги
	|			И Продавец.Организация = Правило2.ОрганизацияКонтрагента
	|			И Продавец.ОрганизацияКонтрагента = Правило2.Организация
	|			И Продавец.ПериодДень = Правило2.ПериодДень
	|			И (Правило1.НомерЗаписи ЕСТЬ NULL)
	|			И (ЛОЖЬ)
	|			И (Правило2.СчетКт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаДКЗ КАК т))
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПроводкиНеДКЗ КАК Правило3
	|		ПО (НЕ Правило3.ПроводкаСписаниеСтоимостиПриПродаже)
	|			И (НЕ Правило3.ПроводкаСписаниеАмортизацииПриПродаже)
	|			И Продавец.ПроводкаНалоги = Правило3.ПроводкаНалоги
	|			И Продавец.Организация = Правило3.ОрганизацияКонтрагента
	|			И Продавец.ОрганизацияКонтрагента = Правило3.Организация
	|			И (Правило2.НомерЗаписи ЕСТЬ NULL)
	|			И (Правило1.НомерЗаписи ЕСТЬ NULL)
	|			И (ЛОЖЬ)
	|			И (Правило3.СчетКт В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаДКЗ КАК т))
	|ГДЕ
	|	(Продавец.ПроводкаСписаниеСтоимостиПриПродаже
	|			ИЛИ Продавец.ПроводкаСписаниеАмортизацииПриПродаже)
	|	И ЕСТЬNULL(Правило3.Регистратор, ЕСТЬNULL(Правило2.Регистратор, ЕСТЬNULL(Правило1.Регистратор, НЕОПРЕДЕЛЕНО))) <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРаспределениеПродавец.НомерПродавец КАК НомерПродавец,
	|	втРаспределениеПродавец.ПроводкаНалоги КАК ПроводкаНалоги,
	|	втРаспределениеПродавец.РегистраторПродавец КАК РегистраторПродавец,
	|	ЕСТЬNULL(втПравила.РегистраторПокупатель, втРаспределениеПродавец.РегистраторПокупатель) КАК РегистраторПокупатель,
	|	ЕСТЬNULL(втПравила.НомерПокупатель, втРаспределениеПродавец.НомерПокупатель) КАК НомерПокупатель,
	|	втРаспределениеПродавец.НомерЗаписи КАК НомерЗаписи
	|ПОМЕСТИТЬ втСписаниеАктивов
	|ИЗ
	|	(ВЫБРАТЬ
	|		втПравила.НомерПродавец КАК НомерПродавец,
	|		втПравила.ПроводкаНалоги КАК ПроводкаНалоги,
	|		втПравила.РегистраторПродавец КАК РегистраторПродавец,
	|		МАКСИМУМ(втПравила.РегистраторПокупатель) КАК РегистраторПокупатель,
	|		МАКСИМУМ(втПравила.НомерПокупатель) КАК НомерПокупатель,
	|		ВЫБОР
	|			КОГДА КОЛИЧЕСТВО(втПравила.НомерЗаписи) > 1
	|				ТОГДА МАКСИМУМ(втПравила.НомерЗаписи)
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК НомерЗаписи
	|	ИЗ
	|		втПравила КАК втПравила
	|	
	|	СГРУППИРОВАТЬ ПО
	|		втПравила.НомерПродавец,
	|		втПравила.ПроводкаНалоги,
	|		втПравила.РегистраторПродавец) КАК втРаспределениеПродавец
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПравила КАК втПравила
	|		ПО втРаспределениеПродавец.НомерЗаписи = втПравила.НомерЗаписи";

КонецФункции

Функция ТекстЗапроса_Проводки(НомераТаблиц, ЭтоМСФО)
	
	//Для продажи ВГО-активов:
	//проводка перевода - переводит списанную себестоимость актива у продавца на аналитику актива покупателя
	//СуммаПеревода = СуммаПродавца * СуммаПокупателя / СуммаПокупателя_ВсеСопоставления(СуммаПокупателя - для )
	ИмяРегистра = ?(ЭтоМСФО, "МСФО", "Хозрасчетный");
	НомераТаблиц.Вставить(ИмяРегистра, НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Сценарий КАК Сценарий,
	|	&Организация КАК Организация,
	|	ПроводкиВыручка.ВидОперации КАК ВидОперации,
	|	ПроводкиВыручка.СчетДт КАК СчетДт,
	|	ПроводкиВыручка.СубконтоДт1 КАК СубконтоДт1,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоДт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт1,
	|	ПроводкиВыручка.СубконтоДт2 КАК СубконтоДт2,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоДт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт2,
	|	ПроводкиВыручка.СубконтоДт3 КАК СубконтоДт3,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоДт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоДт3,
	|	ПроводкиВыручка.СчетКт КАК СчетКт,
	|	ПроводкиВыручка.СубконтоКт1 КАК СубконтоКт1,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоКт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт1,
	|	ПроводкиВыручка.СубконтоКт2 КАК СубконтоКт2,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоКт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт2,
	|	ПроводкиВыручка.СубконтоКт3 КАК СубконтоКт3,
	|	ЕСТЬNULL(ПроводкиВыручка.ВидСубконтоКт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконтоКт3,
	|	ПроводкиВыручка.ВалютаДт КАК ВалютаДт,
	|	ПроводкиВыручка.ВалютаКт КАК ВалютаКт,
	|	ПроводкиВыручка.ПодразделениеДт КАК ПодразделениеДт,
	|	ПроводкиВыручка.ПодразделениеКт КАК ПодразделениеКт,
	|	ПроводкиВыручка.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	ПроводкиВыручка.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	|	-ПроводкиВыручка.СуммаВВалютеУчета КАК СуммаВВалютеУчета,
	|	-ПроводкиВыручка.СуммаВВалютеОтчетности КАК СуммаВВалютеОтчетности,
	|	-ПроводкиВыручка.СуммаВВалютеДт КАК СуммаВВалютеДт,
	|	-ПроводкиВыручка.СуммаВВалютеКт КАК СуммаВВалютеКт,
	|	-ПроводкиВыручка.КоличествоДт КАК КоличествоДт,
	|	-ПроводкиВыручка.КоличествоКт КАК КоличествоКт,
	|	ПроводкиВыручка.СчетДтИсточник КАК СчетДтИсточник,
	|	ПроводкиВыручка.СчетКтИсточник КАК СчетКтИсточник,
	|	ВЫБОР
	|		КОГДА ПроводкиВыручка.ЭтоПриобретение
	|				И ПроводкиВыручка.ЭтоА
	|			ТОГДА &СторноПриобретенияА
	|		КОГДА ПроводкиВыручка.ЭтоПриобретение
	|				И НЕ ПроводкиВыручка.ЭтоА
	|			ТОГДА &СторноПриобретенияА
	|		КОГДА НЕ ПроводкиВыручка.ЭтоПриобретение
	|				И ПроводкиВыручка.ЭтоА
	|			ТОГДА &СторноВыручкиА
	|		ИНАЧЕ &СторноВыручкиБ
	|	КОНЕЦ + "" (№"" + (ВЫРАЗИТЬ(ПроводкиВыручка.Регистратор.Номер КАК СТРОКА(20))) + "")"" КАК Содержание
	|ИЗ
	|	втСторно КАК ПроводкиВыручка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Сценарий,
	|	&Организация,
	|	ВЫБОР
	|		КОГДА Покупатель.Организация = &ОрганизацияА
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЭлиминацияОперацийА)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыОпераций.ЭлиминацияОперацийБ)
	|	КОНЕЦ,
	|	Продавец.СчетДт,
	|	Продавец.СубконтоДт1,
	|	ЕСТЬNULL(Продавец.ВидСубконтоДт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	Продавец.СубконтоДт2,
	|	ЕСТЬNULL(Продавец.ВидСубконтоДт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	Продавец.СубконтоДт3,
	|	ЕСТЬNULL(Продавец.ВидСубконтоДт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	Покупатель.СчетДт,
	|	Покупатель.СубконтоДт1,
	|	ЕСТЬNULL(Покупатель.ВидСубконтоДт1, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	Покупатель.СубконтоДт2,
	|	ЕСТЬNULL(Покупатель.ВидСубконтоДт2, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	Покупатель.СубконтоДт3,
	|	ЕСТЬNULL(Покупатель.ВидСубконтоДт3, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)),
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Продавец.ПроводкаСписаниеАмортизацииПриПродаже
	|			ТОГДА Покупатель.ПодразделениеДт
	|		ИНАЧЕ Продавец.ПодразделениеДт
	|	КОНЕЦ,
	|	Покупатель.ПодразделениеДт,
	|	ВЫБОР
	|		КОГДА Продавец.ПроводкаСписаниеАмортизацииПриПродаже
	|			ТОГДА Покупатель.НаправлениеДеятельностиДт
	|		ИНАЧЕ Продавец.НаправлениеДеятельностиДт
	|	КОНЕЦ,
	|	Покупатель.НаправлениеДеятельностиДт,
	|	-Продавец.СуммаВВалютеУчета,
	|	-Продавец.СуммаВВалютеОтчетности,
	|	0,
	|	0,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Покупатель.СчетДт.Количественный
	|			ТОГДА -Покупатель.КоличествоДт
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	Продавец.СчетДтИсточник,
	|	Покупатель.СчетДтИсточник,
	|	ВЫБОР
	|		КОГДА втСписаниеАктивов.ПроводкаНалоги
	|				И Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеНалогаБ
	|		КОГДА втСписаниеАктивов.ПроводкаНалоги
	|				И НЕ Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеНалогаА
	|		КОГДА Продавец.ПроводкаСписаниеСтоимостиПриПродаже
	|				И Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеСтоимостиБ
	|		КОГДА Продавец.ПроводкаСписаниеСтоимостиПриПродаже
	|				И НЕ Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеСтоимостиА
	|		КОГДА Продавец.ПроводкаСписаниеАмортизацииПриПродаже
	|				И Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеАмортизацииБ
	|		КОГДА Продавец.ПроводкаСписаниеАмортизацииПриПродаже
	|				И НЕ Продавец.ЭтоА
	|			ТОГДА &ВосстановлениеАмортизацииА
	|		ИНАЧЕ ""Сторно себестоимости актива ВГО""
	|	КОНЕЦ + "" (№"" + (ВЫРАЗИТЬ(Покупатель.Регистратор.Номер КАК СТРОКА(20))) + "")""
	|ИЗ
	|	втСписаниеАктивов КАК втСписаниеАктивов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПроводкиНеДКЗ КАК Продавец
	|		ПО втСписаниеАктивов.РегистраторПродавец = Продавец.Регистратор
	|			И втСписаниеАктивов.НомерПродавец = Продавец.НомерЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПроводкиНеДКЗ КАК Покупатель
	|		ПО втСписаниеАктивов.РегистраторПокупатель = Покупатель.Регистратор
	|			И втСписаниеАктивов.НомерПокупатель = Покупатель.НомерЗаписи";
	
	Если ЭтоМСФО Тогда
		Возврат ТекстЗапроса;		
	КонецЕсли;
	
	Возврат МСФОВызовСервераУХ.ПреобразоватьПолучениеРСБУ(ТекстЗапроса);
	
КонецФункции

#КонецОбласти

#Область МастерЗаполнения

Процедура СформироватьДокументы(Сценарий, ПериодОтчета, Организация, РегистрУчета = Неопределено) Экспорт
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", 			Организация);
	Отбор.Вставить("Сценарий", 				Сценарий);
	Отбор.Вставить("ПериодОтчета", 			ПериодОтчета);
	Отбор.Вставить("ЭффективнаяДоляРасчет", 100);
	
	ОписаниеРегистра = МСФОВызовСервераУХ.ОписаниеРегистра(РегистрУчета);
	
	Периметр = УправлениеРабочимиПроцессамиУХ.ПолучитьДанныеРегламента(Отбор, Новый Структура("ЭффективнаяДоляРасчет"));
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапроса_Контрагенты(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_СчетаДКЗ(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_ПарыОрганизацийДляЭлиминации(НомераТаблиц, ОписаниеРегистра.ЭтоМСФО));
	ТекстЗапроса.Добавить(ТекстЗапроса_Пары(НомераТаблиц));
	ТекстЗапроса.Добавить(ТекстЗапроса_Созданные(НомераТаблиц));
	
	Запрос = Новый Запрос(СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()));
		
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Сценарий", 			Сценарий);
	Запрос.УстановитьПараметр("ПериодОтчета", 		ПериодОтчета);
	Запрос.УстановитьПараметр("НачалоПериода", 		ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("ПланСчетовИБ", 		ОписаниеРегистра.ПланСчетов);
	Запрос.УстановитьПараметр("ВозможныеРБ", 		ОписаниеРегистра.ВозможныеРБ);
	Запрос.УстановитьПараметр("ОкончаниеПериода", 	Новый Граница(КонецДня(ПериодОтчета.ДатаОкончания), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организации", 		Периметр.ВыгрузитьКолонку("ИндивидуальнаяОрганизация"));
	
	ТаблицыРезультата = Новый Структура;
	ТаблицыРезультата = ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ТаблицыРезультата, Запрос, НомераТаблиц);
	
	ОбновитьДокументы(ТаблицыРезультата.Пары, ТаблицыРезультата.Созданные, Запрос.Параметры);
	
КонецПроцедуры

Процедура ОбновитьДокументы(ПарыОрганизаций, Созданные, Параметры)
	
	Созданные.Колонки.Добавить("Изменен");
	Созданные.Индексы.Добавить("ОрганизацияА,ОрганизацияБ");
		
	Отбор = Новый Структура("ОрганизацияА,ОрганизацияБ");
	
	НачатьТранзакцию();
  	ИмяСобытия = НСтр("ru = 'Формирование документов элиминации'");
	
	Для каждого ТекущаяПара Из ПарыОрганизаций Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, ТекущаяПара);
		Найденные = Созданные.НайтиСтроки(Отбор);
		
		Если Найденные.Количество() Тогда
			
			Объект = Найденные[0].Документ.ПолучитьОбъект();
			Найденные[0].Изменен = Истина;
		Иначе 
			
			Объект = Документы.ЭлиминацияОпераций.СоздатьДокумент();
			Объект.Дата = ОбщегоНазначенияУХ.ПолучитьКонецПериодаОтчета(Параметры.ПериодОтчета);
			Объект.Заполнить(Неопределено);			
			
			ЗаполнитьЗначенияСвойств(Объект, Параметры);
			ЗаполнитьЗначенияСвойств(Объект, Отбор);
			
		КонецЕсли;
		
		Попытка
			Объект.Записать(РежимЗаписиДокумента.Проведение);		
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Не удалось провести документ ""%1"" по причине:
									|%2'"), 
									Объект.Ссылка,
									ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,,Объект.Ссылка, ТекстСообщения);
			

		КонецПопытки;		
		
	КонецЦикла;
	
	Для каждого Созданный Из Созданные Цикл	
		Если Созданный.Изменен <> Истина Тогда
			Попытка
				Созданный.Документ.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Не удалось провести документ ""%1"" по причине:
										|%2'"), 
										Объект.Ссылка,
										ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(ИмяСобытия,
				УровеньЖурналаРегистрации.Ошибка,,Объект.Ссылка, ТекстСообщения);
				
			КонецПопытки;			
		КонецЕсли;	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Функция ТекстЗапроса_ПарыОрганизацийДляЭлиминации(НомераТаблиц, ЭтоМСФО = Истина)
	
	НомераТаблиц.Вставить("втПарыСПовторами", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МСФООбороты.Организация КАК ОрганизацияА,
	|	ВЫРАЗИТЬ(МСФООбороты.Субконто1 КАК Справочник.Контрагенты).ОрганизационнаяЕдиница КАК ОрганизацияБ
	|ПОМЕСТИТЬ втПарыСПовторами
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					т.Счет
	|				ИЗ
	|					втСчетаДКЗ КАК т),
	|			,
	|			Организация В (&Организации)
	|				И НЕ Организация.ЭлиминирующаяОрганизация
	|				И Сценарий = &Сценарий
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты) В
	|					(ВЫБРАТЬ
	|						т.Контрагент
	|					ИЗ
	|						втКонтрагенты КАК т),
	|			,
	|			) КАК МСФООбороты";

	Если ЭтоМСФО Тогда
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	Возврат МСФОВызовСервераУХ.ПреобразоватьВРСБУ(ТекстЗапроса, "МСФООбороты");
	
КонецФункции

Функция ТекстЗапроса_Пары(НомераТаблиц)
	
	НомераТаблиц.Вставить("Пары", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА т.ОрганизацияА.Код > т.ОрганизацияБ.Код
	|			ТОГДА т.ОрганизацияБ
	|		ИНАЧЕ т.ОрганизацияА
	|	КОНЕЦ КАК ОрганизацияА,
	|	ВЫБОР
	|		КОГДА т.ОрганизацияА.Код > т.ОрганизацияБ.Код
	|			ТОГДА т.ОрганизацияА
	|		ИНАЧЕ т.ОрганизацияБ
	|	КОНЕЦ КАК ОрганизацияБ
	|ИЗ
	|	втПарыСПовторами КАК т
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОрганизацияА,
	|	ОрганизацияБ";

КонецФункции

Функция ТекстЗапроса_Созданные(НомераТаблиц)
	
	НомераТаблиц.Вставить("Созданные", НомераТаблиц.Количество());

	Возврат
	"ВЫБРАТЬ
	|	ЭлиминацияОпераций.Ссылка КАК Документ,
	|	ЭлиминацияОпераций.ОрганизацияА КАК ОрганизацияА,
	|	ЭлиминацияОпераций.ОрганизацияБ КАК ОрганизацияБ
	|ИЗ
	|	Документ.ЭлиминацияОпераций КАК ЭлиминацияОпераций
	|ГДЕ
	|	ЭлиминацияОпераций.Организация = &Организация
	|	И ЭлиминацияОпераций.ПериодОтчета = &ПериодОтчета
	|	И ЭлиминацияОпераций.Сценарий = &Сценарий
	|	И ЭлиминацияОпераций.РегистрДвижений В (&ВозможныеРБ)";

КонецФункции

#КонецОбласти

#КонецЕсли