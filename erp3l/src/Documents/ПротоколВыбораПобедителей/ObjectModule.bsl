#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
#Область ОбработчикиСобытий


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;        
	ПроверитьВозможностьЗаписи(Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если НЕ ПроверитьПередПроведением(Отказ) Тогда
		Возврат;
	КонецЕсли;
	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	ЗаписатьРегистрСведенийПоставщикиПоЛотам();
	ЗаписатьРегистрСведенийПереторжкаЗакупок();
	ЗаписатьРегистрСведенийОбъектыВыбора();
	УстановитьЗавершениеЗакупки();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ТипДанныхЗаполнения = Тип("СправочникСсылка.ЗакупочныеПроцедуры") Тогда
			Ошибки = Неопределено;
			флНетОшибок = Документы.ПротоколВыбораПобедителей.ПроверитьВозможностьСоздатьДляЗакупки(ДанныеЗаполнения, Ошибки);
			Если флНетОшибок Тогда
				Дата = ТекущаяДатаСеанса();
				ЗаполнитьИзЗакупочнойПроцедуры(ДанныеЗаполнения);
			Иначе
				ЗаголовокИсключения = НСтр("ru='Невозможно создать протокол выбора победителей'");
				ТекстИсключения = ЦентрализованныеЗакупкиКлиентСерверУХ.МассивСообщенийВСтроку(Ошибки, ЗаголовокИсключения);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
		ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПротоколВыбораПобедителей") Тогда
			ЗаполнитьИзПротоколаВыбораПобедителей(ДанныеЗаполнения);
		Иначе
			// Неизвестный вариант.
		КонецЕсли;
	КонецЕсли;
	ТекущийНомерПереторжки = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(ЗакупочнаяПроцедура);
	НомерПереторжки = ТекущийНомерПереторжки;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
	УИД_ЕИС = "";
	РегистрационныйНомерЕИС = "";
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ТоргиСостоялись Тогда
		ПроверяемыеРеквизиты.Добавить("РезультатРаботыКомиссии");
	Иначе
		Если Не ПринятоРешениеОПереторжке Тогда
			ПроверяемыеРеквизиты.Добавить("ПричинаПризнанияТорговНесостоявшимися");
		Иначе
			// Не требуется проверка.
		КонецЕсли;
	КонецЕсли;
	Если Документы.ПротоколВыбораПобедителей.ДляЕИСТребуетсяТипПротокола(
															ЭтотОбъект) Тогда
		ПроверяемыеРеквизиты.Добавить("ТипПротоколаЕИС");
	КонецЕсли;
КонецПроцедуры


#КонецОбласти


#Область ПрограммныйИнтерфейс


// Возвращает:
//	Истина - если по всем лотам сделан выбор поставщиков.
//	Ложь - если есть лоты, по которым не выбран победитель.
//
Функция ПоВсемЛотамВыбраныПоставщики() Экспорт
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Лоты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ЛотыЗакупки
		|ИЗ
		|	Документ.ПротоколВыбораПобедителей КАК ПротоколВыбораПобедителей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лоты КАК Лоты
		|		ПО ПротоколВыбораПобедителей.ЗакупочнаяПроцедура = Лоты.Владелец
		|			И (ПротоколВыбораПобедителей.Ссылка = &ПротоколВыбораПобедителей)
		|			И (НЕ Лоты.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	ЛотыЗакупки КАК ЛотыЗакупки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПротоколВыбораПобедителей.РаспределениеПоПотребностям КАК ПротоколВыбораПобедителейРаспределениеПоПотребностям
		|		ПО ЛотыЗакупки.Ссылка = ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот
		|ГДЕ
		|	(ПротоколВыбораПобедителейРаспределениеПоПотребностям.Ссылка ЕСТЬ NULL
		|			ИЛИ ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика = ЗНАЧЕНИЕ(Документ.ПредложениеПоставщика.ПустаяСсылка))
		|	И ПротоколВыбораПобедителейРаспределениеПоПотребностям.Ссылка = &ПротоколВыбораПобедителей";
	Запрос.УстановитьПараметр("ПротоколВыбораПобедителей", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

Процедура ЗаполнитьИзЗакупочнойПроцедуры(ЗакупкаДляЗаполнения, ОбновитьНоменклатуруПобедителей = Неопределено) Экспорт
	ЗакупочнаяПроцедура = ЗакупкаДляЗаполнения;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗакупкаДляЗаполнения);
	ЭТП = ЗакупкаДляЗаполнения.ЭТП;
	мЛоты = Справочники.ЗакупочныеПроцедуры.ПолучитьЛотыЗакупочнойПроцедуры(ЗакупочнаяПроцедура);
	Для Каждого Лот Из мЛоты Цикл
		ЗаполнитьПоЛоту(Лот, ОбновитьНоменклатуруПобедителей);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьИзПротоколаВыбораПобедителей(ПротоколВыбораВход)
	ЗакупочнаяПроцедура = ПротоколВыбораВход.ЗакупочнаяПроцедура;
КонецПроцедуры		// ЗаполнитьИзПротоколаВыбораПобедителей()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


Процедура ЗаполнитьПоЛоту(Лот, ОбновитьНоменклатуруПобедителей = Ложь) Экспорт
	Если ОбновитьНоменклатуруПобедителей = Неопределено Тогда ОбновитьНоменклатуруПобедителей = Истина; КонецЕсли;
	Документы.ПротоколВыбораПобедителей.ОбновитьПредложенияПобедителейПоЛоту(
	ЗакупочнаяПроцедура, Лот, ПредложенияПобедителей, Ссылка);
	НомерПереторжкиЗакупка = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(ЗакупочнаяПроцедура);
	Если ОбновитьНоменклатуруПобедителей Тогда
		ДокументыПобедителей = ПредложенияПобедителей.НайтиСтроки(Новый Структура("Победитель,Лот",Истина,Лот));	
		ПобедителиПоНоменклатуре = РаспределениеПоПотребностям.ВыгрузитьКолонки();
		Для Каждого СтрокаПредложений Из ДокументыПобедителей Цикл
			СтрокиРаспределения = РаспределениеПоПотребностям.НайтиСтроки(Новый Структура("ПредложениеПоставщика,ПобедительПоПозиционномуРаспределению",СтрокаПредложений.ПредложениеПоставщика,Истина));
			Для Каждого СтрокаИсточник Из СтрокиРаспределения Цикл
				НоваяСтрока = ПобедителиПоНоменклатуре.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаИсточник);
			КонецЦикла;	
		КонецЦикла;	
	КонецЕсли;
	КоличествоСтрок = РаспределениеПоПотребностям.Количество()-1;
	Пока КоличествоСтрок >= 0 Цикл
		Если РаспределениеПоПотребностям[КоличествоСтрок].Лот = Лот Тогда
			РаспределениеПоПотребностям.Удалить(КоличествоСтрок);
		КонецЕсли;
		КоличествоСтрок = КоличествоСтрок-1;
	КонецЦикла;	
	ТаблицаПредложений = РаспределениеПоПотребностям.ВыгрузитьКолонки();
	Для Каждого ТекПредложенияПобедителей Из ПредложенияПобедителей Цикл
		Если ТекПредложенияПобедителей.Лот <> Лот Тогда Продолжить; КонецЕсли;
		ТекПредложениеПоставщика = ТекПредложенияПобедителей.ПредложениеПоставщика;
		Если ТекПредложениеПоставщика.НомерПереторжки = НомерПереторжкиЗакупка Тогда
			ПредложениеСсылка = ТекПредложенияПобедителей.ПредложениеПоставщика;
			Для Каждого ТекУсловияПоНоменклатуре Из ПредложениеСсылка.УсловияПоНоменклатуре Цикл
				Если ОбновитьНоменклатуруПобедителей И ПобедителиПоНоменклатуре.НайтиСтроки(Новый Структура("ПредложениеПоставщика",ПредложениеСсылка)).Количество()> 0 Тогда 
					Продолжить;
				КонецЕсли;	
				НоваяСтрока = ТаблицаПредложений.Добавить();
				НоваяСтрока.Лот						 = Лот;
				НоваяСтрока.Номенклатура			 = ТекУсловияПоНоменклатуре.Номенклатура;
				НоваяСтрока.Характеристика			 = ТекУсловияПоНоменклатуре.Характеристика;
				НоваяСтрока.ПериодПотребности		 = ТекУсловияПоНоменклатуре.ПериодПотребности;
				НоваяСтрока.Организация				 = Лот.ОрганизацияДляЗаключенияДоговора;
				НоваяСтрока.МестоПоставки			 = ТекУсловияПоНоменклатуре.МестоПоставки;
				НоваяСтрока.ПредложениеПоставщика	 = ПредложениеСсылка;
				НоваяСтрока.ЕдиницаИзмерения		 = ТекУсловияПоНоменклатуре.ЕдиницаИзмерения;
				НоваяСтрока.Коэффициент				 = ТекУсловияПоНоменклатуре.Коэффициент;
				НоваяСтрока.Количество				 = ТекУсловияПоНоменклатуре.Количество;
				НоваяСтрока.Цена					 = ТекУсловияПоНоменклатуре.Цена;
				НоваяСтрока.Сумма					 = ТекУсловияПоНоменклатуре.Сумма;
				НоваяСтрока.СтавкаНДС				 = ТекУсловияПоНоменклатуре.СтавкаНДС;
				НоваяСтрока.СуммаНДС				 = ТекУсловияПоНоменклатуре.СуммаНДС;
				НоваяСтрока.СуммаСНДС				 = НоваяСтрока.Сумма + НоваяСтрока.СуммаНДС;
				НоваяСтрока.Проект  				 = ТекУсловияПоНоменклатуре.Проект;
				НоваяСтрока.НоменклатураПоставщика   = ТекУсловияПоНоменклатуре.НоменклатураПоставщика;
				НоваяСтрока.СтраныПроисхождения =  ТекУсловияПоНоменклатуре.СтраныПроисхождения;
				НоваяСтрока.СтранаПроизводителя =  ТекУсловияПоНоменклатуре.СтранаПроизводителя;
				
			КонецЦикла;	
		Иначе
			// Пропускаем это предложение, т.к. не относится к текущей переторжке.
		КонецЕсли;
	КонецЦикла;	
	Если ОбновитьНоменклатуруПобедителей Тогда
		Для Каждого НоваяСтрока Из ПобедителиПоНоменклатуре Цикл
			Отбор=Новый Структура();
			Отбор.Вставить("Лот",НоваяСтрока.Лот);
			Отбор.Вставить("Номенклатура",НоваяСтрока.Номенклатура);
			Отбор.Вставить("Характеристика",НоваяСтрока.Характеристика);
			Отбор.Вставить("ПериодПотребности",НоваяСтрока.ПериодПотребности);
			Отбор.Вставить("Организация",НоваяСтрока.Организация);
			Отбор.Вставить("МестоПоставки",НоваяСтрока.МестоПоставки);
			Отбор.Вставить("ПредложениеПоставщика",НоваяСтрока.ПредложениеПоставщика);
			Отбор.Вставить("ЕдиницаИзмерения",НоваяСтрока.ЕдиницаИзмерения);
			Отбор.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
			Отбор.Вставить("ПериодПотребности",НоваяСтрока.ПериодПотребности);
			Отбор.Вставить("СтавкаНДС",НоваяСтрока.СтавкаНДС);
			СтрокиЗаполнения = ТаблицаПредложений.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокиЗаполнения,НоваяСтрока);
		КонецЦикла;
	КонецЕсли;	
	Документы.ПротоколВыбораПобедителей.ДобавитьВРаспределениеПобедителейПоПотребностям(
	Лот, ТаблицаПредложений, РаспределениеПоПотребностям);
	Документы.ПротоколВыбораПобедителей.ПроверитьУстановитьЕдинственногоПоставщикаВПотребностяхПоЛоту(
	ЭтотОбъект, Лот);
КонецПроцедуры
	
Функция ПроверитьПередПроведением(Отказ)
	флОшибкаПроверки = Ложь;
	Если ТоргиСостоялись
			И НЕ ПоВсемЛотамВыбраныПоставщики() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указаны победители.'"),
			,
			"Объект.ПредложенияПобедителей",
			,
			Отказ);
		флОшибкаПроверки = Истина;
	КонецЕсли;
	Если ТоргиСостоялись
			И Перечисления.СпособыВыбораПоставщика.ЭтоАукцион(ЗакупочнаяПроцедура.СпособВыбораПоставщика)
			И НЕ ЗакупочнаяПроцедура.ТоргиНеПоЦене
			И ПустаяСтрока(ОписаниеТоргов) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено описание торгов.'"),
			,
			"Объект.ПредложенияПобедителей",
			,
			Отказ);
		флОшибкаПроверки = Истина;
	КонецЕсли;

		
	Лоты=РаспределениеПоПотребностям.Выгрузить();
	Лоты.Свернуть("Лот");
	Для Каждого Строка из Лоты Цикл
		Отбор=Новый Структура();
		Отбор.Вставить("Лот",Строка.Лот);
		Отбор.Вставить("Победитель",Истина);
		
		Если Строка.Лот.ВидЗакупки=Перечисления.ВидЛотовойЗакупки.ПопозиционнаяЗакупка 
			ИЛИ Строка.Лот.ВидЗакупки=Перечисления.ВидЛотовойЗакупки.Зонтичная
			И НЕ ПредложенияПобедителей.НайтиСтроки(Отбор).Количество() = 1 Тогда
			Отбор=Новый Структура();
			Отбор.Вставить("Лот",Строка.Лот);
			Отбор.Вставить("ПобедительПоПозиционномуРаспределению",Истина);
			Если РаспределениеПоПотребностям.НайтиСтроки(Отбор).Количество()=0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не выбрана номенклатура по позиционной закупке по лоту '")+СокрЛП(Строка.Лот),
				,
				,
				,
				Отказ);
				флОшибкаПроверки = Истина;
			КонецЕсли;				
		КонецЕсли;	
	КонецЦикла;	
	Возврат НЕ флОшибкаПроверки;
КонецФункции

Функция НесоответствиеПоНоменклатуреПобедителей() 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РаспределениеПоПотребностям",РаспределениеПоПотребностям.Выгрузить());
	Запрос.УстановитьПараметр("ПредложенияПобедителей",ПредложенияПобедителей.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПротоколВыбораПобедителейПредложенияПобедителей.Лот КАК Лот,
	|	ПротоколВыбораПобедителейПредложенияПобедителей.ПредложениеПоставщика КАК ПредложениеПоставщика
	|ПОМЕСТИТЬ ПредложенияПобедителей
	|ИЗ
	|	&ПредложенияПобедителей КАК ПротоколВыбораПобедителейПредложенияПобедителей
	|ГДЕ
	|	ПротоколВыбораПобедителейПредложенияПобедителей.Победитель = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛотыНоменклатура.Ссылка КАК Ссылка,
	|	ЛотыНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЛотыНоменклатура.Количество КАК Количество,
	|	ЛотыНоменклатура.Коэффициент КАК Коэффициент,
	|	ЛотыНоменклатура.Менеджер КАК Менеджер,
	|	ЛотыНоменклатура.МестоПоставки КАК МестоПоставки,
	|	ЛотыНоменклатура.Номенклатура КАК Номенклатура,
	|	ЛотыНоменклатура.Характеристика КАК Характеристика,
	|	ЛотыНоменклатура.Организация КАК Организация,
	|	ЛотыНоменклатура.ПериодПотребности КАК ПериодПотребности,
	|	ЛотыНоменклатура.Приоритет КАК Приоритет,
	|	ЛотыНоменклатура.Проект КАК Проект,
	|	ЛотыНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	ЛотыНоменклатура.Сумма КАК Сумма,
	|	ЛотыНоменклатура.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ НоменклатураПоЛотам
	|ИЗ
	|	Справочник.Лоты.Номенклатура КАК ЛотыНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПредложенияПобедителей КАК ПредложенияПобедителей
	|		ПО ЛотыНоменклатура.Ссылка = ПредложенияПобедителей.Лот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот КАК Лот,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика КАК ПредложениеПоставщика,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Приоритет КАК Приоритет,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура КАК Номенклатура,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Характеристика КАК Характеристика,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПериодПотребности КАК ПериодПотребности,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Организация КАК Организация,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПоставки КАК МестоПоставки,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Проект КАК Проект,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Менеджер КАК Менеджер,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент КАК Коэффициент,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Количество КАК Количество,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Сумма КАК Сумма,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтавкаНДС КАК СтавкаНДС,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СуммаНДС КАК СуммаНДС,
	|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ Распределение
	|ИЗ
	|	&РаспределениеПоПотребностям КАК ПротоколВыбораПобедителейРаспределениеПоПотребностям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распределение.Лот КАК Лот,
	|	Распределение.Приоритет КАК Приоритет,
	|	Распределение.Номенклатура КАК Номенклатура,
	|	Распределение.Характеристика КАК Характеристика,
	|	Распределение.ПериодПотребности КАК ПериодПотребности,
	|	Распределение.Организация КАК Организация,
	|	Распределение.МестоПоставки КАК МестоПоставки,
	|	Распределение.Проект КАК Проект,
	|	Распределение.Менеджер КАК Менеджер,
	|	Распределение.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Распределение.Коэффициент КАК Коэффициент,
	|	СУММА(Распределение.Количество) КАК Количество,
	|	СУММА(Распределение.Сумма) КАК Сумма,
	|	Распределение.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(Распределение.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Распределение.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ РаспределениеПотребнотей
	|ИЗ
	|	Распределение КАК Распределение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПредложенияПобедителей КАК ПредложенияПобедителей
	|		ПО Распределение.ПредложениеПоставщика = ПредложенияПобедителей.ПредложениеПоставщика
	|
	|СГРУППИРОВАТЬ ПО
	|	Распределение.Лот,
	|	Распределение.СтавкаНДС,
	|	Распределение.Коэффициент,
	|	Распределение.Организация,
	|	Распределение.Номенклатура,
	|	Распределение.ПериодПотребности,
	|	Распределение.Менеджер,
	|	Распределение.МестоПоставки,
	|	Распределение.Характеристика,
	|	Распределение.Приоритет,
	|	Распределение.ЕдиницаИзмерения,
	|	Распределение.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеПотребнотей.Лот КАК Лот,
	|	РаспределениеПотребнотей.Номенклатура КАК Номенклатура,
	|	РаспределениеПотребнотей.ПериодПотребности КАК ПериодПотребности,
	|	РаспределениеПотребнотей.Количество КАК Количество,
	|	РаспределениеПотребнотей.Сумма КАК Сумма,
	|	РаспределениеПотребнотей.СуммаНДС КАК СуммаНДС,
	|	НоменклатураПоЛотам.Сумма КАК СуммаПоНоменклатуре,
	|	НоменклатураПоЛотам.СуммаНДС КАК СуммаНДСПоНоменклатуре,
	|	НоменклатураПоЛотам.Количество КАК КоличествоПоНоменклатуре
	|ИЗ
	|	РаспределениеПотребнотей КАК РаспределениеПотребнотей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураПоЛотам КАК НоменклатураПоЛотам
	|		ПО РаспределениеПотребнотей.Лот = НоменклатураПоЛотам.Ссылка
	|			И РаспределениеПотребнотей.Номенклатура = НоменклатураПоЛотам.Номенклатура
	|			И РаспределениеПотребнотей.Характеристика = НоменклатураПоЛотам.Характеристика
	|			И РаспределениеПотребнотей.ПериодПотребности = НоменклатураПоЛотам.ПериодПотребности
	|			И РаспределениеПотребнотей.Организация = НоменклатураПоЛотам.Организация
	|			И РаспределениеПотребнотей.МестоПоставки = НоменклатураПоЛотам.МестоПоставки
	|			И РаспределениеПотребнотей.Проект = НоменклатураПоЛотам.Проект
	|			И РаспределениеПотребнотей.Менеджер = НоменклатураПоЛотам.Менеджер
	|			И РаспределениеПотребнотей.ЕдиницаИзмерения = НоменклатураПоЛотам.ЕдиницаИзмерения
	|			И РаспределениеПотребнотей.Коэффициент = НоменклатураПоЛотам.Коэффициент
	|			И РаспределениеПотребнотей.СтавкаНДС = НоменклатураПоЛотам.СтавкаНДС
	|			И (РаспределениеПотребнотей.СуммаНДС > НоменклатураПоЛотам.СуммаНДС
	|				ИЛИ РаспределениеПотребнотей.Сумма > НоменклатураПоЛотам.Сумма
	|				ИЛИ РаспределениеПотребнотей.Количество <> НоменклатураПоЛотам.Количество)";
	
	Выборка = Запрос.Выполнить();
	Возврат Выборка;
	
КонецФункции	
Процедура ЗаписатьРегистрСведенийПоставщикиПоЛотам()
	Движения.ПоставщикиПоЛотам.Записывать = Истина;
	ЭтоПричинаЕдинственноеПредложение = ЦентрализованныеЗакупкиКлиентСерверУХ.ПричинаЕдинственноеПредложение(ПричинаПризнанияЗакупкиНесостоявшейся);
	Если ТоргиСостоялись ИЛИ ЭтоПричинаЕдинственноеПредложение Тогда
		РезультатЗапросаПобедителей = ПолучитьРезультатЗапросаДляЗаписиПобедителейЗакупки();
		РегистрыСведений.ПоставщикиПоЛотам.ЗаполнитьДвиженияИзВыборкиЗапроса(
			Движения.ПоставщикиПоЛотам, РезультатЗапросаПобедителей);
	КонецЕсли;
КонецПроцедуры

// Записывает в регистр ПереторжкаЗакупок данные из текущего документа.
Процедура ЗаписатьРегистрСведенийПереторжкаЗакупок()
	Если ПринятоРешениеОПереторжке Тогда
		Движения.ПереторжкаЗакупок.Записывать = Истина;
		Движение = Движения.ПереторжкаЗакупок.Добавить();
		Движение.Период					 = Дата;
		Движение.Регистратор			 = Ссылка;
		Движение.ЗакупочнаяПроцедура	 = ЗакупочнаяПроцедура;
		Движение.НомерПереторжки		 = НомерПереторжки + 1;
	Иначе
		// Переторжка не принята. Не проводим по регистру.
	КонецЕсли;
КонецПроцедуры		// ЗаписатьРегистрСведенийПереторжкаЗакупок()

// Записывает движения в регистр ОбъектыВыбора.
Процедура ЗаписатьРегистрСведенийОбъектыВыбора()
	ТаблицаСвертка = ПредложенияПобедителей.Выгрузить();
	ТаблицаСвертка.Свернуть("Лот, ПредложениеПоставщика");
	Для Каждого ТекТаблицаСвертка Из ТаблицаСвертка Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Лот", ТекТаблицаСвертка.Лот);
		СтруктураПоиска.Вставить("ПредложениеПоставщика", ТекТаблицаСвертка.ПредложениеПоставщика);
		НайденныеСтроки = ПредложенияПобедителей.НайтиСтроки(СтруктураПоиска);
		Для Каждого ТекНайденныеСтроки Из НайденныеСтроки Цикл
			НаборЗаписей = РегистрыСведений.ОбъектыВыбора.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(ТекНайденныеСтроки.ПредложениеПоставщика); 
			НаборЗаписей.Отбор.Владелец.Установить(ТекНайденныеСтроки.Лот); 	
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Объект = ТекНайденныеСтроки.ПредложениеПоставщика; 
			НоваяЗапись.Владелец = ТекНайденныеСтроки.Лот; 	
			НоваяЗапись.Выбран = ТекНайденныеСтроки.Победитель; 
			НаборЗаписей.Записать(); 	
		КонецЦикла;	
	КонецЦикла;	
КонецПроцедуры		// ЗаписатьРегистрСведенийОбъектыВыбора()

Функция ПолучитьРезультатЗапросаДляЗаписиПобедителейЗакупки()
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Победитель", Истина);
	НайденныеСтроки = ПредложенияПобедителей.НайтиСтроки(СтруктураПоиска);
	МассивПобедителей = Новый Массив;
	Для Каждого ТекНайденныеСтроки Из НайденныеСтроки Цикл
		МассивПобедителей.Добавить(ТекНайденныеСтроки.ПредложениеПоставщика);
	КонецЦикла;	         
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколВыбораПобедителейПредложенияПобедителей.Лот КАК Лот,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ КоличествоПобедителейПоЛотам
		|ИЗ
		|	Документ.ПротоколВыбораПобедителей.ПредложенияПобедителей КАК ПротоколВыбораПобедителейПредложенияПобедителей
		|ГДЕ
		|	ПротоколВыбораПобедителейПредложенияПобедителей.Ссылка = &ПротоколВыбораПобедителей
		|	И ПротоколВыбораПобедителейПредложенияПобедителей.Победитель = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколВыбораПобедителейПредложенияПобедителей.Лот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ПротоколВыбораПобедителей КАК Регистратор,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика КАК ПредложениеПоставщика,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Приоритет = ЗНАЧЕНИЕ(Справочник.ПриоритетыПотребностей.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПриоритетыПотребностей.Обычный)
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Приоритет
		|	КОНЕЦ КАК Приоритет,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура КАК Номенклатура,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Характеристика КАК Характеристика,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПериодПотребности КАК ПериодПотребности,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Организация КАК Организация,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПоставки КАК МестоПоставки,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Проект КАК Проект,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Менеджер КАК Менеджер,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ДоговорСПокупателем КАК ДоговорСПокупателем,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот КАК Лот,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Количество * ВЫБОР
		|					КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент = 0
		|						ТОГДА 1
		|					ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			ТОГДА УсловияПредложенийПоставщиков.Цена * ПротоколВыбораПобедителейРаспределениеПоПотребностям.Количество
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СуммаНДС КАК СуммаНДС,
		|	МАКСИМУМ(ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент) КАК Коэффициент,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(УсловияПредложенийПоставщиков.СтавкаНДС, ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура.СтавкаНДС)
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПобедителя КАК МестоПобедителя,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтраныПроисхождения КАК СтраныПроисхождения,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтранаПроизводителя КАК СтранаПроизводителя,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	УсловияПредложенийПоставщиков.Лот.ВалютаДокумента КАК Валюта
		|ИЗ
		|	Документ.ПротоколВыбораПобедителей.РаспределениеПоПотребностям КАК ПротоколВыбораПобедителейРаспределениеПоПотребностям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УсловияПредложенийПоставщиков КАК УсловияПредложенийПоставщиков
		|		ПО ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПериодПотребности = УсловияПредложенийПоставщиков.ПериодПотребности
		|			И ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура = УсловияПредложенийПоставщиков.Номенклатура
		|			И ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПоставки = УсловияПредложенийПоставщиков.МестоПоставки
		|			И ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика = УсловияПредложенийПоставщиков.ПредложениеПоставщика
		|			И ПротоколВыбораПобедителейРаспределениеПоПотребностям.Характеристика = УсловияПредложенийПоставщиков.Характеристика
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоПобедителейПоЛотам КАК КоличествоПобедителейПоЛотам
		|		ПО ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот = КоличествоПобедителейПоЛотам.Лот
		|ГДЕ
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Ссылка = &ПротоколВыбораПобедителей
		|	И ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика В(&ПредложенияПобедителей)
		|	И (ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот.ВидЗакупки <> ЗНАЧЕНИЕ(Перечисление.ВидЛотовойЗакупки.ЛотоваяЗакупка)
		|				И ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПобедительПоПозиционномуРаспределению = ИСТИНА
		|			ИЛИ КоличествоПобедителейПоЛотам.Количество = 1)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПериодПотребности,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ПредложениеПоставщика,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ДоговорСПокупателем,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Менеджер,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПоставки,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Организация,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.ЕдиницаИзмерения,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Проект,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Приоритет = ЗНАЧЕНИЕ(Справочник.ПриоритетыПотребностей.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПриоритетыПотребностей.Обычный)
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Приоритет
		|	КОНЕЦ,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Лот,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(УсловияПредложенийПоставщиков.СтавкаНДС, ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура.СтавкаНДС)
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтавкаНДС
		|	КОНЕЦ,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.Характеристика,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СуммаНДС,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Количество * ВЫБОР
		|					КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент = 0
		|						ТОГДА 1
		|					ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Коэффициент
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПротоколВыбораПобедителейРаспределениеПоПотребностям.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			ТОГДА УсловияПредложенийПоставщиков.Цена * ПротоколВыбораПобедителейРаспределениеПоПотребностям.Количество
		|		ИНАЧЕ ПротоколВыбораПобедителейРаспределениеПоПотребностям.Сумма
		|	КОНЕЦ,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.МестоПобедителя,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтраныПроисхождения,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.СтранаПроизводителя,
		|	ПротоколВыбораПобедителейРаспределениеПоПотребностям.НоменклатураПоставщика,
		|	УсловияПредложенийПоставщиков.Лот.ВалютаДокумента 
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПротоколВыбораПобедителейРаспределениеПоПотребностям.Сумма) <> 0";
	Запрос.УстановитьПараметр("ПредложенияПобедителей", МассивПобедителей);
	Запрос.УстановитьПараметр("ПротоколВыбораПобедителей", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции

Процедура ПроверитьВозможностьЗаписи(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
		НомерПереторжкиЗакупка = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(ЗакупочнаяПроцедура);
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЗакупочнаяПроцедура", ЗакупочнаяПроцедура);
		СтруктураОтбора.Вставить("Проведен", Истина);
		СтруктураОтбора.Вставить("НомерПереторжки", НомерПереторжкиЗакупка);
		мДокументов = ЦентрализованныеЗакупкиУХ.ПолучитьДокументыПоОтбору(
			"ПротоколВыбораПобедителей", СтруктураОтбора, Ссылка);
		Если мДокументов.Количество() > 0 Тогда
			ТекстОшибки = НСтр("ru = 'Для закупочной процедуры %ЗакупочнаяПроцедура% уже введен протокол выбора победителей.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ЗакупочнаяПроцедура%", Строка(ЗакупочнаяПроцедура));
			ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстОшибки, Отказ, , СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		// Запрещаем отменять проведение документов, по которым созданы договоры.
		мДоговоры = ЦентрализованныеЗакупкиУХ.ПолучитьДоговорыСодержащиеЛотЗакупочнойПроцедуры(ЗакупочнаяПроцедура);
		Если мДоговоры.Количество() > 0 Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Невозможно отменить проведение протокола, на основании которого создан договор'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Проверяет необходимость и устаанавливает флаг Завершена
// для текущей закупочной процедуры.
Процедура УстановитьЗавершениеЗакупки()
	Если (НЕ ТоргиСостоялись) И (НЕ ПринятоРешениеОПереторжке) Тогда
		ЭтоПричинаЕдинственноеПредложение = ЦентрализованныеЗакупкиКлиентСерверУХ.ПричинаЕдинственноеПредложение(ПричинаПризнанияЗакупкиНесостоявшейся);
		Если НЕ ЭтоПричинаЕдинственноеПредложение Тогда
			Справочники.ЗакупочныеПроцедуры.УстановитьФлагЗавершена(ЗакупочнаяПроцедура, Истина, Ссылка);
		Иначе
			// Можно заключить договор.
		КонецЕсли;
	Иначе
		// Торги будут продолжены.
	КонецЕсли;	
КонецПроцедуры		// УстановитьЗавершениеЗакупки()

#КонецОбласти


#КонецЕсли