#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ЭкспортныеФункции


// Ищет протокол выбора победителей по закупочной процедуре.
// 
Функция ПолучитьДляЗакупки(ЗакупочнаяПроцедура) Экспорт
	Возврат 
		ЦентрализованныеЗакупкиУХ.ПолучитьДокументЗакупочнойПроцедуры(
			"ПротоколВыбораПобедителей",
			ЗакупочнаяПроцедура,
			Неопределено);
КонецФункции

// Проверяет, что переданное предложение поставщика утверждено,
// как предложение победителя, и по нему можно вводить договор.
//
Функция ЭтоПредложениеПобедителяРаспределено(ПредложениеПоставщика) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПоставщикиПоЛотам КАК ПоставщикиПоЛотам
		|ГДЕ
		|	ПоставщикиПоЛотам.ПредложениеПоставщика = &ПредложениеПобедителя";
	Запрос.УстановитьПараметр("ПредложениеПобедителя", ПредложениеПоставщика);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции

// Проверяет, что переданное предложение поставщика утверждено,
// как предложение победителя, и по нему можно вводить договор.
//
Функция ЭтоПредложениеПобедителя(ПредложениеПоставщика) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПоставщикиПоЛотам КАК ПоставщикиПоЛотамПредложений
		|ГДЕ
		|	ПоставщикиПоЛотамПредложений.ПредложениеПоставщика = &ПредложениеПобедителя";
	Запрос.УстановитьПараметр("ПредложениеПобедителя", ПредложениеПоставщика);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции

// Проверить, что для протокола выбора победителей
// тебуется указать тип протокола ЕИС.
Функция ДляЕИСТребуетсяТипПротокола(ПротоколВыбораПобедителей) Экспорт
	ЗакупочнаяПроцедура = ПротоколВыбораПобедителей.ЗакупочнаяПроцедура;
	Если НЕ ЗначениеЗаполнено(ЗакупочнаяПроцедура) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Справочники.ЗакупочныеПроцедуры.ЭтоФЗ223(ЗакупочнаяПроцедура)
			И (ЗакупочнаяПроцедура.СпособВыбораПоставщика =
					Перечисления.СпособыВыбораПоставщика.ЗапросПредложений
				ИЛИ ЗакупочнаяПроцедура.СпособВыбораПоставщика =
					Перечисления.СпособыВыбораПоставщика.КонкурентныеПереговоры);
КонецФункции

// Проверяет, что для закупки можно создать протокол выбора.
//
// Параметры:
//  ЗакупочнаяПроцедура - Справочник.ЗакупочныеПроцедуры -
// 		закупка для которой необходимо создать протокол.
//	ПричиныОтказа - Массив(Строка) - массив с описанием сообщений
//		пользователю почему нельзя создать.
// Возвращаемое значение:
//	Булево - Истина - можно создавать. Ложь - нельзя создавать,
//		в переменной Ошибки содержится описание причин.
//
Функция ПроверитьВозможностьСоздатьДляЗакупки(ЗакупочнаяПроцедура, ПричиныОтказа) Экспорт
	Если ПричиныОтказа = Неопределено Тогда
		ПричиныОтказа = Новый Массив;
	КонецЕсли;
	Если ЗакупочнаяПроцедура.ПометкаУдаления Тогда
		ПричиныОтказа.Добавить(НСтр(СтрШаблон(
			"ru='Закупка %1 помечена на удаление'",
			ЗакупочнаяПроцедура)));
	КонецЕсли;
	Если НЕ ЦентрализованныеЗакупкиУХ.ОбъектУтвержден(ЗакупочнаяПроцедура) Тогда
		ПричиныОтказа.Добавить(НСтр("ru='Закупка не утверждена'"));
	КонецЕсли;
	СуществующийПротокол = ПолучитьДляЗакупки(ЗакупочнаяПроцедура);
	Если ЗначениеЗаполнено(СуществующийПротокол) Тогда
		ТекстПричины = НСтр(СтрШаблон("ru='Уже введен %1'",	СуществующийПротокол));
		ПричиныОтказа.Добавить(ТекстПричины);
	КонецЕсли;
	ПротоколОтмены =
		Документы.ПротоколОтменыЗакупочнойПроцедуры.ПолучитьДляЗакупки(ЗакупочнаяПроцедура);
	Если ЗначениеЗаполнено(ПротоколОтмены) Тогда
		ПричиныОтказа.Добавить(СтрШаблон(
			НСтр("ru='Для закупочной процедуры уже введен протокол отмены %1'"), 
			ПротоколОтмены));
		Возврат Ложь;
	КонецЕсли;
	Возврат ПричиныОтказа.Количество() = 0;
КонецФункции

// Возвращает массив содержащий все строки с указанным лотом.
// В табличной части должна быть колонка с именем "Лот".
//
Функция ПолучитьСтрокиТЧПоЛоту(ТЧ, Лот) Экспорт
	Возврат ТЧ.НайтиСтроки(Новый Структура("Лот", Лот));
КонецФункции

// Удаляет из таблчной части все строки с указанным лотом.
// В табличной части должна быть колонка с именем "Лот".
//
Процедура ОчиститьПредложенияТЧПоЛоту(ТЧ, Лот) Экспорт
	мСтрокиДляУдаления = ПолучитьСтрокиТЧПоЛоту(ТЧ, Лот);
	Для Каждого СтрокаДляУдаления Из мСтрокиДляУдаления Цикл
		ТЧ.Удалить(СтрокаДляУдаления);
	КонецЦикла;
КонецПроцедуры

// Добавляем в ТЧ ПредложенияПобедителей выбранных
// победителей для указанного лота.
// Рассматриваем случаи единственного поставщика
// и выбора по критериям (подсистема выбор альтернатив).
//
Процедура ОбновитьПредложенияПобедителейПоЛоту(ЗакупочнаяПроцедура, Лот, ТЧПредложенияПобедителей, ПротоколВыбораВход = Неопределено) Экспорт
	Если (НЕ ЗначениеЗаполнено(ЗакупочнаяПроцедура)) ИЛИ (НЕ ЗначениеЗаполнено(Лот)) Тогда
		Возврат;
	КонецЕсли;
	ВыбранныйСпособЗакупки = ЗакупочнаяПроцедура.СпособВыбораПоставщика;
	СпособЗакупкиУЕдинственногоПоставщика = Перечисления.СпособыВыбораПоставщика.ЗакупкаУЕдинственногоПоставщика;
	ЭтоЗакупкаУЕдинственногоПоставщика = (ВыбранныйСпособЗакупки = СпособЗакупкиУЕдинственногоПоставщика);
	Если ЭтоЗакупкаУЕдинственногоПоставщика Тогда
		мПредложений = Документы.ПредложениеПоставщика.ПолучитьДопущенныеКУчастиюПоЛоту(Лот);
		Если мПредложений.Количество() > 0 Тогда
			НайтиДобавитьСтрокуПобедителя(ТЧПредложенияПобедителей, Лот, мПредложений[0]);
		КонецЕсли;
	Иначе
		МассивВыбранных = Новый Массив;
		Для Каждого ТекТЧПредложенияПобедителей Из ТЧПредложенияПобедителей Цикл
			Если ТекТЧПредложенияПобедителей.Победитель Тогда
				МассивВыбранных.Добавить(ТекТЧПредложенияПобедителей.ПредложениеПоставщика);
			Иначе
				// Пропускаем.
			КонецЕсли;
		КонецЦикла;
		Если ПротоколВыбораВход <> Документы.ПротоколВыбораПобедителей.ПустаяСсылка() Тогда
			//Если ПротоколВыбораВход.Проведен Тогда
				ТаблицаВыбранныхПоставщиков = Справочники.Лоты.ПолучитьВыбранныхПоставщиков(Лот, ПротоколВыбораВход);
				ОчиститьПредложенияТЧПоЛоту(ТЧПредложенияПобедителей, Лот);
				ОбновитьТаблицуПобедителей(ТаблицаВыбранныхПоставщиков,	ТЧПредложенияПобедителей, Лот);
			//КонецЕсли;
		Иначе
			ОчиститьПредложенияТЧПоЛоту(ТЧПредложенияПобедителей, Лот);
			НовыйНомерПереторжки = РегистрыСведений.ПереторжкаЗакупок.ПолучитьАктуальныйНомерПереторжки(ЗакупочнаяПроцедура);
			МассивПредложений = Документы.ПредложениеПоставщика.ПолучитьДопущенныеКУчастиюПоЛоту(Лот, НовыйНомерПереторжки);
			Если МассивПредложений.Количество() > 0 Тогда
				Для Каждого ТекМассивПредложений Из МассивПредложений Цикл
					НайтиДобавитьСтрокуПобедителя(ТЧПредложенияПобедителей, Лот, ТекМассивПредложений);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Добавить в таблицу РаспределениеПоПотребностям данные
//  из таблицы значения.
//
// Параметры:
//  Лот - СправочникСсылка.Лот - лот.
//  ТЗИсточник - ТаблицаЗначений - формат см. Справочники.Лоты.Номенклатура.
//  РаспределениеПоПотребностям - ТабличнаяЧасть - формат
//		см. Документы.ПротоколВыбораПобедителей.РаспределениеПоПотребностям.
//
Процедура ДобавитьВРаспределениеПобедителейПоПотребностям(
								Лот,
								ТЗИсточник,
								РаспределениеПоПотребностям) Экспорт
	Если ЗначениеЗаполнено(Лот) И ЗначениеЗаполнено(ТЗИсточник) Тогда
		Если ТЗИсточник.Колонки.Найти("Лот") = Неопределено Тогда
			ТЗИсточник.Колонки.Добавить("Лот",
				Новый ОписаниеТипов("СправочникСсылка.Лоты"));
			ТЗИсточник.ЗаполнитьЗначения(Лот, "Лот");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
			ТЗИсточник, РаспределениеПоПотребностям);
		ЦентрализованныеЗакупкиКлиентСерверУХ.ОбновитьСуммуСНДС(
			Лот.ЦенаВключаетНДС,
			ПолучитьСтрокиТЧПоЛоту(РаспределениеПоПотребностям, Лот));
	КонецЕсли;
КонецПроцедуры

// Проверяеть, что можно установить единственного поставщика в табличной
// части "РаспределениеПоПотребностям" документа УдалитьВыборПобедителейЛота.
//
// Параметры:
//  ПротоколВыбораПобедителей - ДокументОбъект.ПротоколВыбораПобедителей - объект
//		документа для которого необходимо выполнить заполнение.
//
Процедура ПроверитьУстановитьЕдинственногоПоставщикаВПотребностяхПоЛоту(
											ПротоколВыбораПобедителей,
											Лот) Экспорт
	Если ПротоколВыбораПобедителей <> Неопределено Тогда
		мСтрокиЛотов = ПротоколВыбораПобедителей.ПредложенияПобедителей.НайтиСтроки(
			Новый Структура("Лот", Лот));
		Если мСтрокиЛотов.Количество() = 1
				ИЛИ (ЗначениеЗаполнено(ПротоколВыбораПобедителей.ЗакупочнаяПроцедура)
					И ПротоколВыбораПобедителей.ЗакупочнаяПроцедура.СпособВыбораПоставщика
						= ПредопределенноеЗначение(
                "Перечисление.СпособыВыбораПоставщика.ЗакупкаУЕдинственногоПоставщика")) Тогда
			УстановитьЕдинственногоПоставщикаВПотребностях(
				ПротоколВыбораПобедителей.ПредложенияПобедителей,
				ПротоколВыбораПобедителей.РаспределениеПоПотребностям,
				Лот);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Возвращает предложение победителя с указанным местом.
//
// Параметры:
//  ПредложенияПобедителей - Документ.ПротоколВыбораПобедителей.ПредложенияПобедителей - 
//							 	табличная часть с перечнем победителей.
//  Место				   - Число - место победителя.
// 
// Возвращаемое значение:
//   - ДокументСсылка.ПредложениеПоставщика.
//		Если не найден, то возвращает пустую ссылку.
//
Функция ПолучитьПредложениеПоставщикаПоМесту(ПредложенияПобедителей,
											 Лот,
											 Место) Экспорт
	мСтрокиПредложений = ПредложенияПобедителей.НайтиСтроки(
		Новый Структура("Лот, Место", Лот, Место));
	Если мСтрокиПредложений.Количество() > 0 Тогда
		Возврат мСтрокиПредложений[0].ПредложениеПоставщика;
	КонецЕсли;
	Возврат Документы.ПредложениеПоставщика.ПустаяСсылка();
КонецФункции

Функция НайтиДобавитьСтрокуПобедителя(ПредложенияПобедителей,
								Лот,
								ПредложениеПоставщика) Экспорт
	Отбор = Новый Структура("Лот, ПредложениеПоставщика",
		Лот, ПредложениеПоставщика);
	мСтроки = ПредложенияПобедителей.НайтиСтроки(Отбор);
	Если мСтроки.Количество() > 0 Тогда
		Возврат мСтроки[0];
	КонецЕсли;
	Возврат ДобавитьСтрокуПобедителя(
		ПредложенияПобедителей,
		Лот,
		ПредложениеПоставщика);
КонецФункции

// Добавить строку в ТЧ "ПредложенияПобедителей" документ ПредложениеПоставщика.
// Проверка того, что предложение поставщика уже есть в ТЧ не производится.
//
// Параметры:
//  ПредложенияПобедителей - Документ.ПротоколВыбораПобедителей.ПредложенияПобедителей |
//		ДанныеФормыКоллекция - табличная часть для добавления предложения.
//  ПредложениеПоставщика - ДокументСсылка.ПредложениеПоставщика - предложение
//		поставщика для добавления.
//
// Возвращает:
//	Строка табличной части - заполненная по документу предложения поставщика.
//
Функция ДобавитьСтрокуПобедителя(ПредложенияПобедителей,
		Лот, ПредложениеПоставщика, ПобедительВход = Ложь) Экспорт
	Место = СледующееМестоПобедителя(Лот, ПредложенияПобедителей);
	НоваяСтрока = ПредложенияПобедителей.Добавить();
	НоваяСтрока.Лот		 = Лот;
	НоваяСтрока.Место	 = Место;
	Если ЗначениеЗаполнено(ПредложениеПоставщика) Тогда
		НоваяСтрока.ПредложениеПоставщика	 = ПредложениеПоставщика;
		НоваяСтрока.Поставщик				 = ПредложениеПоставщика.Контрагент;
		НоваяСтрока.Победитель				 = ПобедительВход;
	Иначе
		НоваяСтрока.ПредложениеПоставщика	 = Документы.ПредложениеПоставщика.ПустаяСсылка();
		НоваяСтрока.Поставщик				 = Справочники.Контрагенты.ПустаяСсылка();
		НоваяСтрока.Победитель				 = Ложь;
	КонецЕсли;
	Возврат НоваяСтрока;
КонецФункции

// Возвращает место добавляемого в ТЧ ПредложенияПобедителей победителя.
//
Функция СледующееМестоПобедителя(Лот, ПредложенияПобедителей) Экспорт
	мСтроки = ПолучитьСтрокиТЧПоЛоту(ПредложенияПобедителей, Лот);
	ПоследнееМесто = мСтроки.Количество();
	Возврат ПоследнееМесто + 1;
КонецФункции

// Обновляет табличную часть ПредложенияПобедителей из таблицы
// значений ПобедителиИсточник для указанного Лота.
// Если такое предложение поставщика уже есть в списке победителей,
// оно не будет учитываться при обновлении.
//
// Параметры:
//  ПобедителиИсточник - ТаблицаЗначений - таблица в которой должна
//		быть колонка ПредложениеПоставщика. Из нее будет читаться
//		список победителей по лоту.
//  ТЧПредложенияПобедителей - ТабличнаяЧасть - из документа
//		ПротоколВыбораПобедителей.ПредложенияПобедителей.
//		Места победителям назначаются в соответствии с порядком строк
//		в таблице.
//  Лот - СправочникСсылка.Лоты - лот который будет назначен
//		добавляемым победителям.
//
Процедура ОбновитьТаблицуПобедителей(ПобедителиИсточник, ТЧПредложенияПобедителей, Лот) Экспорт
	СтрокиСЛотом = ПолучитьСтрокиТЧПоЛоту(ТЧПредложенияПобедителей, Лот);
	СоответствиеСтрокТЧПобедителю = ЗаполнитьСоответствиеСтрокТЧПобедителю(СтрокиСЛотом);
	КолСтрок = ТЧПредложенияПобедителей.Количество()-1;
	Пока КолСтрок >= 0 Цикл
		Если ТЧПредложенияПобедителей[КолСтрок].Лот = Лот Тогда
			ТЧПредложенияПобедителей.Удалить(КолСтрок);
		КонецЕсли;	
		КолСтрок = КолСтрок - 1;	
	КонецЦикла;
	Для Каждого СтрокаПобедителя Из ПобедителиИсточник Цикл
		ПредложениеПоставщика = СтрокаПобедителя.ПредложениеПоставщика;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаПобедителя, "Победитель") Тогда
			Победитель = СтрокаПобедителя.Победитель;
		Иначе
			Победитель = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПредложениеПоставщика) Тогда
			Если СоответствиеСтрокТЧПобедителю[ПредложениеПоставщика] = Неопределено Тогда
				ДобавитьСтрокуПобедителя(ТЧПредложенияПобедителей, Лот, ПредложениеПоставщика, Победитель);
			Иначе
				// Предложение не указано. Не добавляем строку.
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//Получить таблцу победителей по зонтичной закупке при критериальной оценке
Функция ПолучитьТаблицуПобедителейЗонтичнойЗакупкеКритериальнойОценки(Лот) Экспорт
	
	Запрос= Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Лот);
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	МАКСИМУМ(ЗначенияКритериевОценки.Значение) КАК Значение,
	              |	ЗначенияКритериевОценки.ЭтапОценки КАК ЭтапОценки,
	              |	ЗначенияКритериевОценки.Критерий КАК Критерий
	              |ПОМЕСТИТЬ МаксимальныеЗначения
	              |ИЗ
	              |	РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
	              |ГДЕ
	              |	ЗначенияКритериевОценки.Владелец = &Владелец
	              |	И НЕ ЗначенияКритериевОценки.НеЗаполнен
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ЗначенияКритериевОценки.Критерий,
	              |	ЗначенияКритериевОценки.ЭтапОценки
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НастройкиПроцессовВыбора.НастройкаПроцессаВыбора КАК НастройкаПроцессаВыбора
	              |ПОМЕСТИТЬ НастройкиПроцессаВыбора
	              |ИЗ
	              |	РегистрСведений.НастройкиПроцессовВыбора КАК НастройкиПроцессовВыбора
	              |ГДЕ
	              |	НастройкиПроцессовВыбора.Владелец = &Владелец
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НастройкиПроцессаВыбораЭтапыВыбора.НомерСтроки КАК НомерСтроки,
	              |	НастройкиПроцессаВыбораЭтапыВыбора.Этап КАК Этап
	              |ПОМЕСТИТЬ НомераЭтаповПоПорядку
	              |ИЗ
	              |	НастройкиПроцессаВыбора КАК НастройкиПроцессаВыбора
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.ЭтапыВыбора КАК НастройкиПроцессаВыбораЭтапыВыбора
	              |		ПО НастройкиПроцессаВыбора.НастройкаПроцессаВыбора = НастройкиПроцессаВыбораЭтапыВыбора.Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки КАК КритерийОценки,
	              |	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора КАК ЭтапОценки,
	              |	ОбъектыВыбора.Объект КАК ОбъектВыбора,
	              |	НастройкиПроцессаВыбораКритерииОценки.Вес КАК Вес,
	              |	ОбъектыВыбора.Выбран КАК Выбран,
	              |	ОбъектыВыбора.Владелец КАК Владелец,
	              |	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы КАК НеИспользоватьПреобразованиеВБаллы,
	              |	НастройкиПроцессаВыбораКритерииОценки.От0 КАК От0,
	              |	НастройкиПроцессаВыбораКритерииОценки.До0 КАК До0,
	              |	НастройкиПроцессаВыбораКритерииОценки.От1 КАК От1,
	              |	НастройкиПроцессаВыбораКритерииОценки.До1 КАК До1,
	              |	НастройкиПроцессаВыбораКритерииОценки.От2 КАК От2,
	              |	НастройкиПроцессаВыбораКритерииОценки.До2 КАК До2,
	              |	НастройкиПроцессаВыбораКритерииОценки.От3 КАК От3,
	              |	НастройкиПроцессаВыбораКритерииОценки.До3 КАК До3,
	              |	НастройкиПроцессаВыбораКритерииОценки.От4 КАК От4,
	              |	НастройкиПроцессаВыбораКритерииОценки.До4 КАК До4,
	              |	НастройкиПроцессаВыбораКритерииОценки.До5 КАК До5,
	              |	НастройкиПроцессаВыбораКритерииОценки.От5 КАК От5,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
	              |					ТОГДА -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
	              |				ИНАЧЕ -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение / (МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение)
	              |			КОНЕЦ
	              |	КОНЕЦ КАК К0,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
	              |					ТОГДА 1
	              |				ИНАЧЕ МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
	              |			КОНЕЦ
	              |	КОНЕЦ КАК К1,
	              |	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение КАК МинимальноеЗначение,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение
	              |		ИНАЧЕ МаксимальныеЗначения.Значение
	              |	КОНЕЦ КАК МаксимальноеЗначение,
	              |	НастройкиПроцессаВыбораКритерииОценки.НомерСтроки КАК НомерСтроки
	              |ПОМЕСТИТЬ РасчетныеКритерии
	              |ИЗ
	              |	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиПроцессаВыбора КАК НастройкиПроцессаВыбора
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
	              |				ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
	              |				ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = МаксимальныеЗначения.ЭтапОценки
	              |					И НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = МаксимальныеЗначения.Критерий
	              |			ПО НастройкиПроцессаВыбора.НастройкаПроцессаВыбора = НастройкиПроцессаВыбораКритерииОценки.Ссылка
	              |				И (НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение)
	              |		ПО (ОбъектыВыбора.Владелец = &Владелец)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник КАК Сотрудник,
	              |	НастройкиПроцессаВыбораКритерииОценки.КритерийОценки КАК КритерийОценки,
	              |	НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора КАК ЭтапОценки,
	              |	ОбъектыВыбора.Объект КАК ОбъектВыбора,
	              |	НастройкиПроцессаВыбораКритерииОценки.Вес КАК Вес,
	              |	ОбъектыВыбора.Выбран КАК Выбран,
	              |	НастройкиПроцессаВыбораКритерииОценки.НеИспользоватьПреобразованиеВБаллы КАК НеИспользоватьПреобразованиеВБаллы,
	              |	НастройкиПроцессаВыбораКритерииОценки.От0 КАК От0,
	              |	НастройкиПроцессаВыбораКритерииОценки.До0 КАК До0,
	              |	НастройкиПроцессаВыбораКритерииОценки.От1 КАК От1,
	              |	НастройкиПроцессаВыбораКритерииОценки.До1 КАК До1,
	              |	НастройкиПроцессаВыбораКритерииОценки.От2 КАК От2,
	              |	НастройкиПроцессаВыбораКритерииОценки.До2 КАК До2,
	              |	НастройкиПроцессаВыбораКритерииОценки.От3 КАК От3,
	              |	НастройкиПроцессаВыбораКритерииОценки.До3 КАК До3,
	              |	НастройкиПроцессаВыбораКритерииОценки.От4 КАК От4,
	              |	НастройкиПроцессаВыбораКритерииОценки.До4 КАК До4,
	              |	НастройкиПроцессаВыбораКритерииОценки.До5 КАК До5,
	              |	НастройкиПроцессаВыбораКритерииОценки.От5 КАК От5,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
	              |					ТОГДА -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
	              |				ИНАЧЕ -НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение / (МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение)
	              |			КОНЕЦ
	              |	КОНЕЦ КАК К0,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.К0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение = 0
	              |					ТОГДА 1
	              |				ИНАЧЕ МаксимальныеЗначения.Значение - НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение
	              |			КОНЕЦ
	              |	КОНЕЦ КАК К1,
	              |	ОбъектыВыбора.Владелец КАК Владелец,
	              |	НастройкиПроцессаВыбораКритерииОценки.МинимальноеЗначение КАК МинимальноеЗначение,
	              |	ВЫБОР
	              |		КОГДА МаксимальныеЗначения.Значение ЕСТЬ NULL
	              |			ТОГДА НастройкиПроцессаВыбораКритерииОценки.МаксимальноеЗначение
	              |		ИНАЧЕ МаксимальныеЗначения.Значение
	              |	КОНЕЦ КАК МаксимальноеЗначение,
	              |	НастройкиПроцессаВыбораКритерииОценки.НомерСтроки КАК НомерСтроки
	              |ПОМЕСТИТЬ КритерииСотрудники
	              |ИЗ
	              |	РегистрСведений.ОбъектыВыбора КАК ОбъектыВыбора
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиПроцессаВыбора КАК НастройкиПроцессаВыбора
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.КритерииОценки КАК НастройкиПроцессаВыбораКритерииОценки
	              |				ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеЗначения КАК МаксимальныеЗначения
	              |				ПО НастройкиПроцессаВыбораКритерииОценки.ЭтапВыбора = МаксимальныеЗначения.ЭтапОценки
	              |					И НастройкиПроцессаВыбораКритерииОценки.КритерийОценки = МаксимальныеЗначения.Критерий
	              |			ПО НастройкиПроцессаВыбора.НастройкаПроцессаВыбора = НастройкиПроцессаВыбораКритерииОценки.Ссылка
	              |				И (НЕ НастройкиПроцессаВыбораКритерииОценки.РассчитатьЗначение)
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиПроцессаВыбора.ОценочнаяКомиссия КАК НастройкиПроцессаВыбораОценочнаяКомиссия
	              |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФункциональныеНаправленияФизическихЛиц КАК ФункциональныеНаправленияФизическихЛиц
	              |				ПО НастройкиПроцессаВыбораОценочнаяКомиссия.Сотрудник = ФункциональныеНаправленияФизическихЛиц.ФизическоеЛицо
	              |			ПО НастройкиПроцессаВыбора.НастройкаПроцессаВыбора = НастройкиПроцессаВыбораОценочнаяКомиссия.Ссылка
	              |		ПО (ОбъектыВыбора.Владелец = &Владелец)
	              |ГДЕ
	              |	(НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление = ЕСТЬNULL(ФункциональныеНаправленияФизическихЛиц.ФункциональноеНаправление, ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))
	              |			ИЛИ НастройкиПроцессаВыбораКритерииОценки.КритерийОценки.ФункциональноеНаправление = ЗНАЧЕНИЕ(Справочник.ФункциональныеНаправления.ПустаяСсылка))
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ЕСТЬNULL(ЗначенияКритериевОценки.Значение, 0) КАК Оценка,
	              |	ВЫБОР
	              |		КОГДА КритерииСотрудники.ЭтапОценки = ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПоследующаяОценка)
	              |			ТОГДА ЛОЖЬ
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА ЗначенияКритериевОценки.Ответственный ЕСТЬ NULL
	              |					ТОГДА ИСТИНА
	              |				ИНАЧЕ ЗначенияКритериевОценки.НеЗаполнен
	              |			КОНЕЦ
	              |	КОНЕЦ КАК НеЗаполнен,
	              |	ВЫБОР
	              |		КОГДА ЗначенияКритериевОценки.НеЗаполнен ЕСТЬ NULL
	              |			ТОГДА 0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА ЗначенияКритериевОценки.НеЗаполнен
	              |					ТОГДА 0
	              |				ИНАЧЕ ВЫБОР
	              |						КОГДА КритерииСотрудники.НеИспользоватьПреобразованиеВБаллы
	              |							ТОГДА ЗначенияКритериевОценки.Значение / КритерииСотрудники.К1 + КритерииСотрудники.К0
	              |						ИНАЧЕ ЗначенияКритериевОценки.БалльноеЗначение / 5
	              |					КОНЕЦ * ЗначенияКритериевОценки.Вес
	              |			КОНЕЦ
	              |	КОНЕЦ КАК ИнтегральнаяОценка,
	              |	КритерииСотрудники.Сотрудник КАК Ответственный,
	              |	КритерииСотрудники.КритерийОценки КАК КритерийОценки,
	              |	КритерииСотрудники.ЭтапОценки КАК ЭтапОценки,
	              |	КритерииСотрудники.ОбъектВыбора КАК ОбъектВыбора,
	              |	КритерииСотрудники.Выбран КАК Выбран,
	              |	КритерииСотрудники.Вес КАК Вес,
	              |	ЗначенияКритериевОценки.Владелец КАК Владелец,
	              |	ЛОЖЬ КАК Расчетный,
	              |	ВЫБОР
	              |		КОГДА ЕСТЬNULL(СостояниеПроцессовВыбора.ТекущийЭтапВыбора, ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПустаяСсылка)) = КритерииСотрудники.ЭтапОценки
	              |			ТОГДА ИСТИНА
	              |		ИНАЧЕ ЛОЖЬ
	              |	КОНЕЦ КАК ЭтоТекущийЭтап,
	              |	СостояниеПроцессовВыбора.ПроцессВыбораЗавершен КАК ПроцессВыбораЗавершен,
	              |	ЗначенияКритериевОценки.БалльноеЗначение КАК Балл,
	              |	ЕСТЬNULL(НомераЭтаповПоПорядку.НомерСтроки, 0) КАК НомерЭтапа,
	              |	КритерииСотрудники.НомерСтроки КАК НомерКритерия
	              |ПОМЕСТИТЬ ВТИтогов
	              |ИЗ
	              |	КритерииСотрудники КАК КритерииСотрудники
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
	              |		ПО (ЗначенияКритериевОценки.Владелец = &Владелец)
	              |			И КритерииСотрудники.Сотрудник = ЗначенияКритериевОценки.Ответственный
	              |			И КритерииСотрудники.КритерийОценки = ЗначенияКритериевОценки.Критерий
	              |			И КритерииСотрудники.ЭтапОценки = ЗначенияКритериевОценки.ЭтапОценки
	              |			И КритерииСотрудники.ОбъектВыбора = ЗначенияКритериевОценки.ОбъектОценки
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
	              |		ПО (СостояниеПроцессовВыбора.Владелец = &Владелец)
	              |		ЛЕВОЕ СОЕДИНЕНИЕ НомераЭтаповПоПорядку КАК НомераЭтаповПоПорядку
	              |		ПО КритерииСотрудники.ЭтапОценки = НомераЭтаповПоПорядку.Этап
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ЕСТЬNULL(ЗначенияКритериевОценки.Значение, 0),
	              |	ЕСТЬNULL(ЗначенияКритериевОценки.НеЗаполнен, ИСТИНА),
	              |	ВЫБОР
	              |		КОГДА ЗначенияКритериевОценки.НеЗаполнен ЕСТЬ NULL
	              |			ТОГДА 0
	              |		ИНАЧЕ ВЫБОР
	              |				КОГДА ЗначенияКритериевОценки.НеЗаполнен
	              |					ТОГДА 0
	              |				ИНАЧЕ ВЫБОР
	              |						КОГДА РасчетныеКритерии.НеИспользоватьПреобразованиеВБаллы
	              |							ТОГДА ЗначенияКритериевОценки.Значение / РасчетныеКритерии.К1 + РасчетныеКритерии.К0
	              |						ИНАЧЕ ЗначенияКритериевОценки.БалльноеЗначение / 5
	              |					КОНЕЦ * ЗначенияКритериевОценки.Вес
	              |			КОНЕЦ
	              |	КОНЕЦ,
	              |	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	              |	РасчетныеКритерии.КритерийОценки,
	              |	РасчетныеКритерии.ЭтапОценки,
	              |	РасчетныеКритерии.ОбъектВыбора,
	              |	РасчетныеКритерии.Выбран,
	              |	РасчетныеКритерии.Вес,
	              |	ЗначенияКритериевОценки.Владелец,
	              |	ИСТИНА,
	              |	ВЫБОР
	              |		КОГДА ЕСТЬNULL(СостояниеПроцессовВыбора.ТекущийЭтапВыбора, ЗНАЧЕНИЕ(Справочник.ЭтапыОценки.ПустаяСсылка)) = РасчетныеКритерии.ЭтапОценки
	              |			ТОГДА ИСТИНА
	              |		ИНАЧЕ ЛОЖЬ
	              |	КОНЕЦ,
	              |	СостояниеПроцессовВыбора.ПроцессВыбораЗавершен,
	              |	ЗначенияКритериевОценки.БалльноеЗначение,
	              |	ЕСТЬNULL(НомераЭтаповПоПорядку.НомерСтроки, 0),
	              |	РасчетныеКритерии.НомерСтроки
	              |ИЗ
	              |	РасчетныеКритерии КАК РасчетныеКритерии
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияКритериевОценки КАК ЗначенияКритериевОценки
	              |		ПО (ЗначенияКритериевОценки.Владелец = &Владелец)
	              |			И РасчетныеКритерии.КритерийОценки = ЗначенияКритериевОценки.Критерий
	              |			И РасчетныеКритерии.ЭтапОценки = ЗначенияКритериевОценки.ЭтапОценки
	              |			И РасчетныеКритерии.ОбъектВыбора = ЗначенияКритериевОценки.ОбъектОценки
	              |			И (ЗначенияКритериевОценки.Ответственный = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроцессовВыбора КАК СостояниеПроцессовВыбора
	              |		ПО (СостояниеПроцессовВыбора.Владелец = &Владелец)
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераЭтаповПоПорядку КАК НомераЭтаповПоПорядку
	              |		ПО РасчетныеКритерии.ЭтапОценки = НомераЭтаповПоПорядку.Этап
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ ПЕРВЫЕ 999
	              |	СУММА(ВТИтогов.ИнтегральнаяОценка) КАК Оценка,
	              |	ВТИтогов.ОбъектВыбора КАК ОбъектВыбора
	              |ИЗ
	              |	ВТИтогов КАК ВТИтогов
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВТИтогов.ОбъектВыбора
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Оценка УБЫВ,
	              |	ВТИтогов.ОбъектВыбора.Дата";
	
	Объект = Запрос.Выполнить().Выгрузить();
	Возврат Объект;
КонецФункции	
#КонецОбласти


#Область НеЭкспортныеФункции


Процедура УстановитьЕдинственногоПоставщикаВПотребностях(
							ПредложенияПобедителей,
							РаспределениеПоПотребностям,
							Лот)
	ПредложениеПоставщика = ПолучитьПредложениеПоставщикаПоМесту(
			ПредложенияПобедителей, Лот, 1);
	Если ЗначениеЗаполнено(ПредложениеПоставщика) Тогда
		мСтрокиЛота = РаспределениеПоПотребностям.НайтиСтроки(
			Новый Структура("Лот", Лот));
		Для Каждого СтрокаРаспределения Из мСтрокиЛота Цикл
			СтрокаРаспределения.ПредложениеПоставщика =
				ПредложениеПоставщика;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


Функция ЗаполнитьСоответствиеСтрокТЧПобедителю(СтрокиТЧПредложенияПобедителей)
	Результат = Новый Соответствие;
	Для Каждого Строка Из СтрокиТЧПредложенияПобедителей Цикл
		Результат.Вставить(Строка.ПредложениеПоставщика, Строка);
	КонецЦикла;
	Возврат Результат;
КонецФункции
	

#КонецОбласти


#КонецЕсли