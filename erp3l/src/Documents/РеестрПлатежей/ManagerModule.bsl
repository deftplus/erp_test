#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Функция СписокСогласованныхПлатежей(Знач Организация, Знач ДатаОплаты, ВыбранныеИдентификаторы = Неопределено, ИсключаемыеИдентификаторы = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	РазмещениеЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	РазмещениеЗаявок.Сумма КАК СуммаПлатежа,
	|	РазмещениеЗаявок.ВалютаОплаты КАК ВалютаПлатежа,
	|	РазмещениеЗаявок.БанковскийСчетКасса КАК БанковскийСчетКасса
	|ПОМЕСТИТЬ ВТ_ДокументыДляВключенияВРеестр
	|ИЗ
	|	РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|ГДЕ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.Проведен
	|	И РазмещениеЗаявок.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	И РазмещениеЗаявок.Организация = &Организация
	|	И РазмещениеЗаявок.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход)
	|	И РазмещениеЗаявок.ДатаИсполнения = &ДатаИсполнения
	|	И НЕ РазмещениеЗаявок.БанковскийСчетКасса В (&ПустойСчет)
	| 	И РазмещениеЗаявок.ИдентификаторПозиции В (&ВыбранныеИдентификаторыПозиций)
	| 	И НЕ РазмещениеЗаявок.ИдентификаторПозиции В (&ИсключаемыеИдентификаторыПозиций)	
	|	И (НЕ РазмещениеЗаявок.ЗаявкаНаОперацию ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			ИЛИ НЕ ВЫРАЗИТЬ(РазмещениеЗаявок.ЗаявкаНаОперацию КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).БезакцептноеСписание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОплату,
	|	РазмещениеЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	РазмещениеЗаявок.СуммаПлатежа КАК СуммаПлатежа,
	|	РазмещениеЗаявок.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ЕСТЬNULL(СостоянияИсполнения.СостояниеИсполнения, ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.ПустаяСсылка)) КАК СостояниеИсполнения,
	|	ЛОЖЬ КАК Исполнение,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(РазмещениеЗаявок.ЗаявкаНаОперацию.ЦФО, РазмещениеЗаявок.ЗаявкаНаОперацию.ОсновнойЦФО) КАК ЦФО,
	|	ЕСТЬNULL(&РеквизитДоговорКонтрагента, РазмещениеЗаявок.ЗаявкаНаОперацию.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ЕстьNULL(&РеквизитОтветственный, РазмещениеЗаявок.ЗаявкаНаОперацию.Ответственный) КАК Ответственный,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию.НазначениеПлатежа КАК НазначениеПлатежа,
	|	РазмещениеЗаявок.БанковскийСчетКасса КАК БанковскийСчетКасса
	|ИЗ
	|	ВТ_ДокументыДляВключенияВРеестр КАК РазмещениеЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегистрСостоянийОбъектов.СрезПоследних КАК РегистрСостоянийОбъектовСрезПоследних
	|		ПО РазмещениеЗаявок.ЗаявкаНаОперацию = РегистрСостоянийОбъектовСрезПоследних.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних КАК СостоянияИсполнения
	|		ПО РазмещениеЗаявок.ЗаявкаНаОперацию = СостоянияИсполнения.ДокументПланирования
	|			И РазмещениеЗаявок.ИдентификаторПозиции = СостоянияИсполнения.ИдентификаторПозиции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкиВРеестрахПлатежей КАК ЗаявкиВРеестрахПлатежей
	|		ПО РазмещениеЗаявок.ЗаявкаНаОперацию = ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию
	|			И РазмещениеЗаявок.ИдентификаторПозиции = ЗаявкиВРеестрахПлатежей.ИдентификаторПозиции
	|ГДЕ
	|	РегистрСостоянийОбъектовСрезПоследних.СостояниеОбъекта = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Утверждена)
	|	И ЗаявкиВРеестрахПлатежей.РеестрПлатежей ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияИсполнения.СостояниеИсполнения, ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)) = ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)";
	
	Если ВыбранныеИдентификаторы <> Неопределено Тогда
		Запрос.УстановитьПараметр("ВыбранныеИдентификаторыПозиций", ВыбранныеИдентификаторы);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"РазмещениеЗаявок.ИдентификаторПозиции В (&ВыбранныеИдентификаторыПозиций)", 
			"Истина");
	КонецЕсли;
	
	Если ИсключаемыеИдентификаторы <> Неопределено Тогда
		Запрос.УстановитьПараметр("ИсключаемыеИдентификаторыПозиций", ИсключаемыеИдентификаторы);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"НЕ РазмещениеЗаявок.ИдентификаторПозиции В (&ИсключаемыеИдентификаторыПозиций)", 
			"Истина");
	КонецЕсли;
	
	//
	Инфо = ЗаявкиНаОперации.РеквизитыДокументаЗаявка(Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РеквизитДоговорКонтрагента", 
		"РазмещениеЗаявок.ЗаявкаНаОперацию." + Инфо.ДоговорКонтрагента.ИмяРеквизита);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РеквизитОтветственный", 
		"РазмещениеЗаявок.ЗаявкаНаОперацию." + Инфо.Ответственный.ИмяРеквизита);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаИсполнения", ДатаОплаты);
	Запрос.УстановитьПараметр("ПустойСчет", ВернутьМассивПустыхСчетов());
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

Функция ТаблицаЗаявокРеестра(РеестрСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию,
	|	ЗаявкиВРеестрахПлатежей.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	РазмещениеЗаявок.Сумма КАК Сумма,
	|	РазмещениеЗаявок.ВалютаОплаты КАК Валюта,
	|	ЕСТЬNULL(СостоянияИсполненияДокументовПланированияСрезПоследних.СостояниеИсполнения, ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)) КАК СостояниеИсполнения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СостоянияИсполненияДокументовПланированияСрезПоследних.СостояниеИсполнения, ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НеОбработана)) В (ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.НаИсполнении), ЗНАЧЕНИЕ(Перечисление.СостоянияИсполненияЗаявки.Исполнена))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исполнение,
	|	ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию.Контрагент КАК Контрагент,
	|	ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию.ЦФО КАК ЦФО
	|ИЗ
	|	РегистрСведений.ЗаявкиВРеестрахПлатежей КАК ЗаявкиВРеестрахПлатежей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних КАК СостоянияИсполненияДокументовПланированияСрезПоследних
	|			ПО РазмещениеЗаявок.ИдентификаторПозиции = СостоянияИсполненияДокументовПланированияСрезПоследних.ИдентификаторПозиции
	|				И РазмещениеЗаявок.ЗаявкаНаОперацию = СостоянияИсполненияДокументовПланированияСрезПоследних.ДокументПланирования
	|		ПО ЗаявкиВРеестрахПлатежей.ЗаявкаНаОперацию = РазмещениеЗаявок.ЗаявкаНаОперацию
	|			И ЗаявкиВРеестрахПлатежей.ИдентификаторПозиции = РазмещениеЗаявок.ИдентификаторПозиции
	|ГДЕ
	|	ЗаявкиВРеестрахПлатежей.РеестрПлатежей = &РеестрПлатежей";
	
	ИмяРеквизитаДоговор = ЗаявкиНаОперации.ИмяРеквизитаДоговорДокумента(
							Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка());
							
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаявкаНаОперацию.ДоговорКонтрагента", "ЗаявкаНаОперацию." + ИмяРеквизитаДоговор);
	
	Запрос.УстановитьПараметр("РеестрПлатежей", РеестрСсылка);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//По значениям ДокументПланированияВход и ИдентификаторПозицииВход возвращает ссылку на сформированное
//платежное поручение. Когда платежное поручение не найдено - возвращает пустую ссылку
Функция ПолучитьПлатежноеПоручениеПоПлатежнойПозиции(ДокументПланированияВход, ИдентификаторПозицииВход) Экспорт
	Возврат ДенежныеСредстваВстраиваниеУХ.ПолучитьПлатежноеПоручениеПоПлатежнойПозиции(ДокументПланированияВход, ИдентификаторПозицииВход);
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Функция ИсполненныеЗаявкиПоРеестру(РеестрПлатежей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкиРеестра.ЗаявкаНаОплату КАК Заявка,
	|	ПРЕДСТАВЛЕНИЕ(ЗаявкиРеестра.ЗаявкаНаОплату) КАК ЗаявкаПредставление,
	|	МИНИМУМ(ЗаявкиРеестра.НомерСтроки) КАК НомерСтроки,
	|	СостоянияИсполненияДокументов.СостояниеИсполнения КАК СостояниеИсполнения
	|ИЗ
	|	Документ.РеестрПлатежей.ЗаявкиНаОплату КАК ЗаявкиРеестра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних КАК СостоянияИсполненияДокументов
	|		ПО ЗаявкиРеестра.ЗаявкаНаОплату = СостоянияИсполненияДокументов.ДокументПланирования
	|			И ЗаявкиРеестра.ИдентификаторПозиции = СостоянияИсполненияДокументов.ИдентификаторПозиции
	|			И (СостоянияИсполненияДокументов.СостояниеИсполнения В (&СостоянияВыполняется))
	|ГДЕ
	|	ЗаявкиРеестра.Ссылка = &РеестрПлатежей
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиРеестра.ЗаявкаНаОплату,
	|	СостоянияИсполненияДокументов.СостояниеИсполнения";
	
	Запрос.УстановитьПараметр("РеестрПлатежей", РеестрПлатежей);
	
	СостоянияВыполняется = Новый Массив;
	СостоянияВыполняется.Добавить(Перечисления.СостоянияИсполненияЗаявки.НаИсполнении);
	СостоянияВыполняется.Добавить(Перечисления.СостоянияИсполненияЗаявки.Исполнена);
	Запрос.УстановитьПараметр("СостоянияВыполняется", СостоянияВыполняется);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом
// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеМетоды

// Возвращает массив пустых ссылок для определяемого типа БанковскийСчетКасса.
Функция ВернутьМассивПустыхСчетов()
	РезультатФункции = Новый Массив;
	РезультатФункции.Добавить(Неопределено);
	ТипыСчета = Метаданные.ОпределяемыеТипы.БанковскийСчетКасса.Тип.Типы();
	Для Каждого ТекТипыСчета Из ТипыСчета Цикл
		ПустоеЗначение = ОбщегоНазначенияУХ.ПустоеЗначениеТипа(ТекТипыСчета);
		РезультатФункции.Добавить(ПустоеЗначение);
	КонецЦикла;	
	Возврат РезультатФункции;
КонецФункции		// ВернутьМассивПустыхСчетов()

Функция ПроверитьДатыИсполненияЗаявокРеестра(ДокументОбъект, Отказ = Ложь) Экспорт
	
	ТаблицаЗаявок = ДокументОбъект.ЗаявкиНаОплату.Выгрузить(,"НомерСтроки,ЗаявкаНаОплату,ИдентификаторПозиции");
	ДатаОплаты = ДокументОбъект.ДатаОплаты;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаЗаявок.НомерСтроки КАК НомерСтроки,
	|	ТаблицаЗаявок.ЗаявкаНаОплату КАК ЗаявкаНаОплату,
	|	ТаблицаЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции
	|ПОМЕСТИТЬ ВТ_Заявки
	|ИЗ
	|	&ТаблицаЗаявок КАК ТаблицаЗаявок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявкаНаОплату
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заявки.НомерСтроки КАК НомерСтроки,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеЗаявок.ЗаявкаНаОперацию) КАК ЗаявкаНаОперациюПредставление,
	|	МИНИМУМ(РазмещениеЗаявок.ДатаИсполнения) КАК ДатаИсполнения,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОперацию
	|ИЗ
	|	ВТ_Заявки КАК ВТ_Заявки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	|		ПО ВТ_Заявки.ЗаявкаНаОплату = РазмещениеЗаявок.ЗаявкаНаОперацию
	|			И (РазмещениеЗаявок.ПриходРасход = &Расход)
	|			И (РазмещениеЗаявок.ДатаИсполнения <> &ДатаОплатыРеестра)
	|			И ВТ_Заявки.ИдентификаторПозиции = РазмещениеЗаявок.ИдентификаторПозиции
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заявки.НомерСтроки,
	|	РазмещениеЗаявок.ЗаявкаНаОперацию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	);
	Запрос.УстановитьПараметр("ТаблицаЗаявок", ТаблицаЗаявок);
	Запрос.УстановитьПараметр("Расход", Перечисления.ВидыДвиженийПриходРасход.Расход);
	Запрос.УстановитьПараметр("ДатаОплатыРеестра", ДатаОплаты);
	
	МассивОшибок = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрОшибка = СтрШаблон(
			Нстр("ru = '%1 - отличается дата исполнения %2 от даты оплаты реестра %3'"),
			выборка.ЗаявкаНаОперациюПредставление,
			Формат(Выборка.ДатаИсполнения, "ДЛФ=D"),
			Формат(ДатаОплаты, "ДЛФ=D"));
			
		Поле = СтрШаблон("Объект.ЗаявкиНаОплату[%1]", Формат(Выборка.НомерСтроки - 1, "ЧГ="));
		ОбщегоНазначения.СообщитьПользователю(СтрОшибка, ДокументОбъект, Поле,, Отказ);
		
	КонецЦикла;
		
КонецФункции


#КонецОбласти

#КонецЕсли
