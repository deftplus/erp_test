#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнениеДокументов.ЗаполнитьПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначенияУХ.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОплаты) Тогда
		ДатаОплаты = Дата;
	КонецЕсли;
	
	Если Не ЗаявкиНаОплату.Количество() Тогда
		ЗаявкиНаОплату.Загрузить(Документы.РеестрПлатежей.СписокСогласованныхПлатежей(Организация, ДатаОплаты));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВнеМаршрута = Ложь;
	Ответственный = Пользователи.ТекущийПользователь();
	Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	ПроверитьПравилаЗапретаОпераций(Отказ);
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеЗаписиРеестра = РегистрыСведений.ЗаявкиВРеестрахПлатежей.ЗаявкиПоРеестру(Ссылка);
	ТекущиеЗаписиРеестра.Колонки.Добавить("Есть", Новый ОписаниеТипов("Булево"));
	ТекущиеЗаписиРеестра.Индексы.Добавить("ЗаявкаНаОперацию, ИдентификаторПозиции");
	
	Для Каждого ТекПлатеж Из ЗаявкиНаОплату Цикл
		
		МЗ = РегистрыСведений.ЗаявкиВРеестрахПлатежей.СоздатьМенеджерЗаписи();
		МЗ.ЗаявкаНаОперацию = ТекПлатеж.ЗаявкаНаОплату;
		МЗ.ИдентификаторПозиции = ТекПлатеж.ИдентификаторПозиции;
		МЗ.Прочитать();
		
		Если ТекПлатеж.Исключена И МЗ.Выбран() И МЗ.РеестрПлатежей = Ссылка Тогда
			
			// Удаляем запись из реестра.
			МЗ.Удалить();
			ПлатежныеПозиции.ВернутьПозициюНаИсполнение(ТекПлатеж.ИдентификаторПозиции, 1, , Истина);
			
		ИначеЕсли МЗ.Выбран() И НЕ ТекПлатеж.Исключена И МЗ.РеестрПлатежей <> Ссылка Тогда
			
			// Платеж уже в другом реестре. Ошибка.
			ТекстОшибки = СтрШаблон(НСтр("ru = 'Платеж по заявке %1 включен в реестр %2.'"), 
				ТекПлатеж.ЗаявкаНаОплату, МЗ.РеестрПлатежей);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,Ссылка,,,Отказ);
			
		ИначеЕсли НЕ МЗ.Выбран() И НЕ ТекПлатеж.Исключена Тогда
			
			// Запишем ссылку на реестр.
			МЗ.ЗаявкаНаОперацию = ТекПлатеж.ЗаявкаНаОплату;
			МЗ.ИдентификаторПозиции = ТекПлатеж.ИдентификаторПозиции;
			МЗ.РеестрПлатежей = Ссылка;
			МЗ.Записать();
			
			УправлениеДенежнымиСредствамиУХ.УстановитьСостояниеИсполненияДокумента(
				ТекПлатеж.ЗаявкаНаОплату,
				ТекПлатеж.ИдентификаторПозиции,
				Перечисления.СостоянияИсполненияЗаявки.ВключенаВРеестрПлатежей,,, Ссылка);
			
		КонецЕсли;
		
		Отбор = Новый Структура("ЗаявкаНаОперацию, ИдентификаторПозиции", 
			ТекПлатеж.ЗаявкаНаОплату, ТекПлатеж.ИдентификаторПозиции);
		МассивСтрок = ТекущиеЗаписиРеестра.НайтиСтроки(Отбор);
		Для каждого ТекущаяСтрока Из МассивСтрок Цикл
			ТекущаяСтрока.Есть = Истина;
		КонецЦикла;
		
	КонецЦикла;
	
	// удаляем позиции из регистра, которые отсутствуют в новой версии реестра
	МассивУдаленныхСтрок = ТекущиеЗаписиРеестра.НайтиСтроки(Новый Структура("Есть", Ложь));
	Для каждого УдаленнаяСтрока Из МассивУдаленныхСтрок Цикл
		РегистрыСведений.ЗаявкиВРеестрахПлатежей.УдалитьЗаявку(УдаленнаяСтрока);
		ПлатежныеПозиции.ВернутьПозициюНаИсполнение(УдаленнаяСтрока.ИдентификаторПозиции,,,Истина);
	КонецЦикла;		
		
	МодульУправленияПроцессамиУХ.ОтправитьНаСогласованиеПриПроведенииДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ТабИсполненныеЗаявки = Документы.РеестрПлатежей.ИсполненныеЗаявкиПоРеестру(Ссылка);
	Если ЗначениеЗаполнено(ТабИсполненныеЗаявки) Тогда
		Для каждого Строка из ТабИсполненныеЗаявки Цикл
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = '%1 уже исполнена или находится на исполнении'"), Строка.ЗаявкаПредставление), 
				ЭтотОбъект, 
				СтрШаблон("ЗаявкиНаОплату[%1]", Строка.НомерСтроки - 1),
				,
				Отказ);
		КонецЦикла;	
		
		Возврат;	
	КонецЕсли;
	
	ТабЗаявок = РегистрыСведений.ЗаявкиВРеестрахПлатежей.ЗаявкиПоРеестру(Ссылка);	
	Для каждого СтрокаЗаявки ИЗ ТабЗаявок Цикл	
		
		РегистрыСведений.ЗаявкиВРеестрахПлатежей.УдалитьЗаявку(СтрокаЗаявки);		
		ПлатежныеПозиции.ВернутьПозициюНаИсполнение(СтрокаЗаявки.ИдентификаторПозиции,,,Истина);	
		
	КонецЦикла;
	
	МодульУправленияПроцессамиУХ.ОтменитьСогласованиеПриОтменеПроведения(Ссылка);

КонецПроцедуры

// Функция проверяет, есть ли в документе директивно запрещенные операции
//
Процедура ПроверитьПравилаЗапретаОпераций(Отказ) Экспорт
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоЗапретамПлатежей = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                                        |	СостоянияИсполненияСрезПоследних.ДокументПланирования КАК ЗаявкаОтложенная,
	                                        |	СостоянияИсполненияСрезПоследних.ИдентификаторПозиции КАК ИдентификаторПозиции
	                                        |ПОМЕСТИТЬ ВТСостоянияИсполненияОтложено
	                                        |ИЗ
	                                        |	РегистрСведений.СостоянияИсполненияДокументовПланирования.СрезПоследних(
	                                        |			,
	                                        |			(ДокументПланирования, ИдентификаторПозиции) В
	                                        |				(ВЫБРАТЬ
	                                        |					ЗаявкиНаОплату.ЗаявкаНаОплату,
	                                        |					ЗаявкиНаОплату.ИдентификаторПозиции
	                                        |				ИЗ
	                                        |					Документ.РеестрПлатежей.ЗаявкиНаОплату КАК ЗаявкиНаОплату
	                                        |				ГДЕ
	                                        |					ЗаявкиНаОплату.Ссылка = &Ссылка)) КАК СостоянияИсполненияСрезПоследних
	                                        |ГДЕ
	                                        |	СостоянияИсполненияСрезПоследних.СостояниеИсполнения = ЗНАЧЕНИЕ(перечисление.СостоянияИсполненияЗаявки.Отложена)
	                                        |
	                                        |ИНДЕКСИРОВАТЬ ПО
	                                        |	СостоянияИсполненияСрезПоследних.ДокументПланирования,
	                                        |	ИдентификаторПозиции
	                                        |;
	                                        |
	                                        |////////////////////////////////////////////////////////////////////////////////
	                                        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                                        |	РазмещениеЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции,
	                                        |	РазмещениеЗаявок.ЗаявкаНаОперацию КАК ЗаявкаНаОплату,
	                                        |	РазмещениеЗаявок.Организация КАК Организация,
	                                        |	РазмещениеЗаявок.БанковскийСчетКасса КАК СчетОрганизации,
	                                        |	РазмещениеЗаявок.Контрагент КАК Контрагент,
	                                        |	РазмещениеЗаявок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	                                        |	ЕСТЬNULL(ДвижениябюджетированияПоПозициям.СтатьяДвиженияДенежныхСредств, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)) КАК СтатьяДвиженияДенежныхСредств,
	                                        |	ЕСТЬNULL(СостоянияИсполненияОтложено.ЗаявкаОтложенная, НЕОПРЕДЕЛЕНО) КАК ЗаявкаОтложенная
	                                        |ПОМЕСТИТЬ ВТЗаявкиНаОплату
	                                        |ИЗ
	                                        |	Документ.РеестрПлатежей КАК РеестрПлатежей
	                                        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрПлатежей.ЗаявкиНаОплату КАК РеестрПлатежейЗаявкиНаОплату
	                                        |		ПО РеестрПлатежей.Ссылка = РеестрПлатежейЗаявкиНаОплату.Ссылка
	                                        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЗаявок КАК РазмещениеЗаявок
	                                        |		ПО (РеестрПлатежейЗаявкиНаОплату.ЗаявкаНаОплату = РазмещениеЗаявок.ЗаявкаНаОперацию)
	                                        |			И (РеестрПлатежейЗаявкиНаОплату.ИдентификаторПозиции = РазмещениеЗаявок.ИдентификаторПозиции)
	                                        |			И (РазмещениеЗаявок.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.Расход))
	                                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДвиженияБюджетированияПоПозициям КАК ДвижениябюджетированияПоПозициям
	                                        |		ПО (РазмещениеЗаявок.ИдентификаторПозиции = ДвижениябюджетированияПоПозициям.ИдентификаторПозиции)
	                                        |			И (РазмещениеЗаявок.ЗаявкаНаОперацию = ДвижениябюджетированияПоПозициям.ЗаявкаНаОперацию)
	                                        |			И (РазмещениеЗаявок.ДоговорКонтрагента = ДвижениябюджетированияПоПозициям.ДоговорКонтрагента)
	                                        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияИсполненияОтложено КАК СостоянияИсполненияОтложено
	                                        |		ПО (РазмещениеЗаявок.ЗаявкаНаОперацию = СостоянияИсполненияОтложено.ЗаявкаОтложенная)
	                                        |			И (РазмещениеЗаявок.ИдентификаторПозиции = СостоянияИсполненияОтложено.ИдентификаторПозиции)
	                                        |ГДЕ
	                                        |	РеестрПлатежей.Ссылка = &Ссылка
	                                        |
	                                        |ИНДЕКСИРОВАТЬ ПО
	                                        |	Организация,
	                                        |	СчетОрганизации,
	                                        |	Контрагент,
	                                        |	ДоговорКонтрагента,
	                                        |	СтатьяДвиженияДенежныхСредств
	                                        |;
	                                        |
	                                        |////////////////////////////////////////////////////////////////////////////////
	                                        |УНИЧТОЖИТЬ ВТСостоянияИсполненияОтложено
	                                        |;
	                                        |
	                                        |////////////////////////////////////////////////////////////////////////////////
	                                        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                                        |	ЗаявкиНаОплату.ЗаявкаНаОплату КАК ДокументПланирования,
	                                        |	ЗаявкиНаОплату.ИдентификаторПозиции КАК ИдентификаторПозиции,
	                                        |	ПравилаЗапретаОпераций.Организация КАК Организация,
	                                        |	ПравилаЗапретаОпераций.СчетОрганизации КАК СчетОрганизации,
	                                        |	ПравилаЗапретаОпераций.Контрагент КАК Контрагент,
	                                        |	ПравилаЗапретаОпераций.ДоговорКонтрагента КАК ДоговорКонтрагента,
	                                        |	ПравилаЗапретаОпераций.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	                                        |	ЗаявкиНаОплату.ЗаявкаОтложенная КАК ЗаявкаОтложенная
	                                        |ИЗ
	                                        |	ВТЗаявкиНаОплату КАК ЗаявкиНаОплату
	                                        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаЗапретаОпераций КАК ПравилаЗапретаОпераций
	                                        |		ПО (ЗаявкиНаОплату.Организация = ПравилаЗапретаОпераций.Организация
	                                        |				ИЛИ ПравилаЗапретаОпераций.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	                                        |			И (ЗаявкиНаОплату.СчетОрганизации = ПравилаЗапретаОпераций.СчетОрганизации
	                                        |				ИЛИ ПравилаЗапретаОпераций.СчетОрганизации = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	                                        |				ИЛИ ПравилаЗапретаОпераций.СчетОрганизации = ЗНАЧЕНИЕ(Справочник.кассы.ПустаяСсылка)
	                                        |				ИЛИ ПравилаЗапретаОпераций.СчетОрганизации = НЕОПРЕДЕЛЕНО)
	                                        |			И (ЗаявкиНаОплату.Контрагент = ПравилаЗапретаОпераций.Контрагент
	                                        |				ИЛИ ПравилаЗапретаОпераций.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	                                        |			И (ЗаявкиНаОплату.ДоговорКонтрагента = ПравилаЗапретаОпераций.ДоговорКонтрагента
	                                        |				ИЛИ ПравилаЗапретаОпераций.ДоговорКонтрагента = ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	                                        |				ИЛИ ПравилаЗапретаОпераций.ДоговорКонтрагента = НЕОПРЕДЕЛЕНО)
	                                        |			И (ЗаявкиНаОплату.СтатьяДвиженияДенежныхСредств = ПравилаЗапретаОпераций.СтатьяДвиженияДенежныхСредств
	                                        |				ИЛИ ПравилаЗапретаОпераций.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка))
	                                        |			И (ПравилаЗапретаОпераций.ЗапретПлатежей = ИСТИНА)
	                                        |;
	                                        |
	                                        |////////////////////////////////////////////////////////////////////////////////
	                                        |УНИЧТОЖИТЬ ВТЗаявкиНаОплату");
	
	ЗапросПоЗапретамПлатежей.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаПоЗапретамПлатежей = ЗапросПоЗапретамПлатежей.Выполнить().Выбрать();
		
	СтрокаШаблона = НСтр("ru = 'Документ %1 подпадает под директиву запрета платежа: Организация: ""%2""; " 
		+ "Счет организации: ""%3""; Контрагент: ""%4""; Договор контрагента: ""%5""; Статья ДДС: ""%6""'");
		
	ЗаявкиОтложенные = Новый ТаблицаЗначений;
	ЗаявкиОтложенные.Колонки.Добавить("ДокументПланирования");
	ЗаявкиОтложенные.Колонки.Добавить("ИдентификаторПозиции");
	
	Пока ВыборкаПоЗапретамПлатежей.Следующий() Цикл
		
		Если ВыборкаПоЗапретамПлатежей.ЗаявкаОтложенная = неопределено тогда
			НоваяСтрокаЗаявкаОтложенная = ЗаявкиОтложенные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаЗаявкаОтложенная, ВыборкаПоЗапретамПлатежей);
		КонецЕсли;
		
		Если СтрокаШаблона <> "" тогда
			
			СтрокаОрганизация = ?(ЗначениеЗаполнено(ВыборкаПоЗапретамПлатежей.Организация), Строка(ВыборкаПоЗапретамПлатежей.Организация), Нстр("ru = 'Все организации'"));
			СтрокаСчетОрганизации = ?(ЗначениеЗаполнено(ВыборкаПоЗапретамПлатежей.СчетОрганизации), Строка(ВыборкаПоЗапретамПлатежей.СчетОрганизации), Нстр("ru = 'Все счета'"));
			СтрокаКонтрагент = ?(ЗначениеЗаполнено(ВыборкаПоЗапретамПлатежей.Контрагент), Строка(ВыборкаПоЗапретамПлатежей.Контрагент), Нстр("ru = 'Все контрагенты'"));
			СтрокаДоговорКонтрагента = ?(ЗначениеЗаполнено(ВыборкаПоЗапретамПлатежей.ДоговорКонтрагента), Строка(ВыборкаПоЗапретамПлатежей.ДоговорКонтрагента), Нстр("ru = 'Все договоры'"));
			СтрокаСДДС = ?(ЗначениеЗаполнено(ВыборкаПоЗапретамПлатежей.СтатьяДвиженияДенежныхСредств), Строка(ВыборкаПоЗапретамПлатежей.СтатьяДвиженияДенежныхСредств), Нстр("ru = 'Все СДДС'"));
			
			ТекстОшибки = СтрШаблон(СтрокаШаблона, ВыборкаПоЗапретамПлатежей.ДокументПланирования, 
				СтрокаОрганизация, СтрокаСчетОрганизации, СтрокаКонтрагент, 
				СтрокаДоговорКонтрагента, СтрокаСДДС);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка,,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаявкиОтложенные.Свернуть("ДокументПланирования, ИдентификаторПозиции");
			
	ИдентификаторПроцедуры = Новый УникальныйИдентификатор();
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторПроцедуры);
	ПараметрыВыполнения.Вставить("ЗапуститьВФоне", Истина);
	ПараметрыВыполнения.Вставить("ОжидатьЗавершение", 0);
	
	ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, 
		"УправлениеДенежнымиСредствамиУХ.УстановитьСостояниеИсполненияДокументаСписок", ЗаявкиОтложенные, 
		Перечисления.СостоянияИсполненияЗаявки.Отложена, неопределено, неопределено, Ссылка);
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Документы.РеестрПлатежей.ПроверитьДатыИсполненияЗаявокРеестра(ЭтотОбъект, Отказ);
КонецПроцедуры

#КонецОбласти

#КонецЕсли

