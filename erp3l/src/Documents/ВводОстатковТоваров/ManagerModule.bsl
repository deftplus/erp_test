#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	ВводОстатковЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	ВводОстатковЛокализация.ВводОстатковТоваровДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);
КонецПроцедуры

#КонецОбласти

#Область Печать

// Возвращает правила печати печатной формы Задания на отбор (размещение) товаров.
//
// Возвращаемое значение:
//	Структура - состав свойств см. Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати.
//
Функция ПравилаПечатиЗаданияНаОтборРазмещение() Экспорт
	
	ПравилаПечатиЗадания = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ПравилаПечатиЗаданияНаОтборРазмещение();
	ПравилаПечатиЗадания.ОперацияПоступления	= Истина;
	ПравилаПечатиЗадания.ИмяПоляПомещение		= "Помещение";
	
	Возврат ПравилаПечатиЗадания;
	
КонецФункции

#КонецОбласти

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Помещение,Подразделение,ХозяйственнаяОперация,Дата";
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры:
//	 Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение:
//	 Структура - Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВводОстатковТоваров";
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство Тогда
		//++ НЕ УТ
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.Подразделение);
		ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение";
		//-- НЕ УТ
	Иначе
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	КонецЕсли; 
	
	НужнаяОперация = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
		//++ НЕ УТ
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство
		//-- НЕ УТ
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков 
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И НужнаяОперация;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям И НужнаяОперация;
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВводОстатков);
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная     = Истина;
	ПараметрыУказанияСерий.Дата             = Объект.Дата;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков
		Или ((Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
				Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию
				Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков)
			И СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение, Объект.Дата)) Тогда 
			
		ПараметрыУказанияСерий.ИспользоватьАдресноеХранение = Истина;
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		ПараметрыУказанияСерий.ИмяПоляКоличество = "КоличествоУпаковок";
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ТолькоСерииСУчетомОстатков = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков 
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Процедура заполняет статусы указания серий в строках ТЧ товары
//
// Параметры:
//  ПараметрыУказанияСерий - Структура - структура параметров указания серий, возвращаемая соответствующей процедурой модуля менеджера документа (обработки)
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов.
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение" Тогда
		//++ НЕ УТ
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийПроизводство();
		//-- НЕ УТ
	Иначе
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий);
	КонецЕсли;
	
КонецФункции
//++ НЕ УТ
#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	Возврат ВводОстатковЛокализация.ВводОстатковТоваровТекстОтраженияВРеглУчете();
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//  Строка - Содержащая текст запроса временных таблиц для отражения в регл. учете.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	Возврат ВводОстатковЛокализация.ВводОстатковТоваровТекстЗапросаВТОтраженияВРеглУчете();
КонецФункции

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

// Возвращает таблицу значения для заполнения документа ввода остатков данными, полученными по данным оперативного учета.
// 
// Параметры:
// 	Дата - Дата - Дата, на которую формируются остатки.
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой выбираются остатки
// 	Организации - Массив - Массив, содержащий элементы типа СправочникСсылка.Организации, для которых выбираются остатки.
// 	ДополнительныйОтбор - Структура - Структура, содержащая ключ и значение дополнительного отбора.
// 	ПараметрыЗаполненияОстатков - Структура - Структура, содержащая дополнительные параметры необходимые, для заполнения остатков.
// Возвращаемое значение:
// 	ТаблицаЗначений, Неопределено - Если для данной хозяйственной операции есть данные, для нее возвращается таблица значений с значениями заполнения.
//
Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт

	//++ Локализация
	ДатаОстатков = Новый Граница(Дата, ВидГраницы.Включая);
	Возврат ОстаткиПоТоварам(ДатаОстатков, ХозяйственнаяОперация, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);
	//-- Локализация
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает массив в котором содержатся имена полей при изменении которых, необходимо генерировать новый документ ввода остатков.
// 
// Параметры:
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция, для которой определяются ключевые поля.
// Возвращаемое значение:
// 	Массив - Массив содержащий имена полей.
//
Функция КлючевыеПоляРеглУчетаПоТипуОперации(ХозяйственнаяОперация) Экспорт
	
	МассивКлючевыхПолей = Новый Массив;
	//++ Локализация	
	МассивКлючевыхПолей.Добавить("Организация");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков Тогда
		МассивКлючевыхПолей.Добавить("Склад");
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам Тогда
		МассивКлючевыхПолей.Добавить("ВидДеятельностиНДС");
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию Тогда
		МассивКлючевыхПолей.Добавить("НалогообложениеНДС");
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам Тогда
		МассивКлючевыхПолей.Добавить("Партнер");
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство Тогда
		МассивКлючевыхПолей.Добавить("Подразделение");
	КонецЕсли;
	
	Возврат МассивКлючевыхПолей;
	//-- Локализация
	Возврат МассивКлючевыхПолей;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	//++ НЕ УТКА
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.ДавальческоеПродукция22));
	//-- НЕ УТКА
	
	// Потребности в товарах на складе.
	// "ПереходНаАдресноеХранениеТовары" - имя табличной части формы "ФормаТовары". Т.е. механизм настроен таким образом,
	// что ожидает в каждой форме где встраиваются назначения именно это имя табличной части.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад          = "Объект.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// Добавляет команду создания документа на основании.
//
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
// Возвращаемое значение:
//	КомандаФормы - добавляемая команда.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Возврат СозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.ВводОстатковТоваров);
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И( ЗначениеРазрешено(Склад)
	|	ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	) ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ИнициализацияДокументаИПараметровДокумента

// Инициализация параметры регистрации счетов фактур полученных
//  Параметры:
//    ДанныеОбъекта - ДокументОбъект.ВводОстатков - Объект документа ввода остатков
//
//  Возвращаемое значение:
//    Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных().
Функция ИнициализироватьПараметрыРегистрацииСчетовФактурПолученных(ДанныеОбъекта) Экспорт
	
	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных();
	ПараметрыРегистрации.Ссылка                        = ДанныеОбъекта.Ссылка;
	ПараметрыРегистрации.Дата                          = ДанныеОбъекта.Дата;
	ПараметрыРегистрации.Организация                   = ДанныеОбъекта.Организация;
	ПараметрыРегистрации.Контрагент                    = ДанныеОбъекта.Контрагент;
	ПараметрыРегистрации.НалогообложениеНДС            = ДанныеОбъекта.НалогообложениеНДС;
	ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Инициализация параметров регистрации счетов фактур полученных
//  Параметры:
//    ДанныеОбъекта - ДокументОбъект.ВводОстатков - Объект документа ввода остатков
//
//  Возвращаемое значение:
//    Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
//
Функция ИнициализироватьПараметрыВидовДеятельностиНДС(ДанныеОбъекта) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация             = ДанныеОбъекта.Организация;
	ПараметрыЗаполнения.Дата                    = ДанныеОбъекта.Дата;
	ПараметрыЗаполнения.Склад                   = ДанныеОбъекта.Склад;
	ПараметрыЗаполнения.Договор                 = ДанныеОбъекта.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = ДанныеОбъекта.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПриобретениеТоваров     = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает структуру параметров для заполнения налогообложения НДС продажи или возврата товаров от покупателя.
// Параметры:
// 	ДанныеОбъекта - ДокументОбъект - ДокументВводаОстатков
// Возвращаемое значение:
// 	Структура - структура параметров заполнения, см. процедуру УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи.
//
Функция ИнициализироватьПараметрыНалогообложенияНДС(ДанныеОбъекта) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	ПараметрыЗаполнения.Организация             = ДанныеОбъекта.Организация;
	ПараметрыЗаполнения.Дата                    = ДанныеОбъекта.Дата;
	ПараметрыЗаполнения.Договор                 = ДанныеОбъекта.Договор;
	ПараметрыЗаполнения.НаправлениеДеятельности = ДанныеОбъекта.НаправлениеДеятельности;
	ПараметрыЗаполнения.ПередачаНаКомиссию      = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Определяет по хозяйственной операции, операцию товародвижения.
// 
// Параметры:
// 	ДанныеОбъекта - ДокументОбъект - ДокументВводаОстатков
// Возвращаемое значение:
// 	Структура - Описание: Структура с описанием типа операции товародвижения
//
Функция ИнициализироватьХозяйственнуюОперациюТовародвижения(ДанныеОбъекта) Экспорт
	
	ХозяйственнаяОперацияТовародвижения = Новый Структура();
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПринятойТары",                                          ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПереданнойТары",                                      ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиСобственныхТоваров",                               ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПереданныхНаКомиссиюТоваров",        ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПринятыхНаКомиссиюТоваров",             ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПереданныхПереработчикамТоваров", ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоОстаткиПереданныхВПроизводствоТоваров",     ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоПереходНаАдресноеХранение",                              ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков);
	ХозяйственнаяОперацияТовародвижения.Вставить("ЭтоПереходНаСкладскиеПомещения",                       ДанныеОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений);
	
	Возврат ХозяйственнаяОперацияТовародвижения;
	
КонецФункции

// Заполняет вид деятельности раздельного учета НДС по переданным параметрам заполнения.
// Параметры:
// 	ДанныеОбъекта - ДокументОбъект - Документ ввода начальных остатков.
// 	ЗаполняемаяФорма - ФормаКлиентскогоПриложения - заполняет реквизит формы доступными значениями.
// 	Перезаполнять - Булево - Определяет, перезаполнять существующее значение или нет.
//
Процедура ЗаполнитьВидДеятельностиНДС(ДанныеОбъекта, ЗаполняемаяФорма, Перезаполнять = Ложь) Экспорт
	
	ТипыОперацийТовародвижения          = ИнициализироватьХозяйственнуюОперациюТовародвижения(ДанныеОбъекта);
	ПараметрыЗаполненияВидаДеятельности = ИнициализироватьПараметрыВидовДеятельностиНДС(ДанныеОбъекта);
	ЭлементФормыЗаполнения              = Неопределено;
	
	Если ТипыОперацийТовародвижения.ЭтоОстаткиСобственныхТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.СобственныеТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПринятойТары Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПринятаяТараВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПереданныхВПроизводствоТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеВПроизводствоТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПереданныхПереработчикамТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеПереработчикамТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПереданныхПереработчикамТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеПереработчикамТоварыВидДеятельностиНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПринятыхНаКомиссиюТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПолученныеНаКомиссиюНалогообложениеНДС;
	ИначеЕсли ТипыОперацийТовародвижения.ЭтоОстаткиПереданныхНаКомиссиюТоваров Тогда
		ЭлементФормыЗаполнения = ЗаполняемаяФорма.Элементы.ПереданныеНаКомиссиюНалогообложениеНДС;
	КонецЕсли;
	
	Если ЭлементФормыЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если Перезаполнять Тогда
		УчетНДСУП.ЗаполнитьВидДеятельностиНДС(
			ДанныеОбъекта.ВидДеятельностиНДС,
			ПараметрыЗаполненияВидаДеятельности,
			ЗаполняемаяФорма.УчетНДСКэшированныеЗначенияПараметров);
	КонецЕсли;
	
	УчетНДСУП.ЗаполнитьСписокВыбораВидаДеятельностиНДС(
		ЭлементФормыЗаполнения,
		ДанныеОбъекта.ВидДеятельностиНДС,
		ПараметрыЗаполненияВидаДеятельности,
		ЗаполняемаяФорма.УчетНДСКэшированныеЗначенияПараметров);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ВыбраннаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяОперация = Параметры.Ключ.ХозяйственнаяОперация;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ХозяйственнаяОперация", ВыбраннаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ВыбраннаяОперация = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования,"ХозяйственнаяОперация");
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		
		ВыбраннаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ВыбраннаяОперация);
		
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
		
		Если Параметры.Свойство("ОтражатьВОперативномУчете") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВОперативномУчете", Параметры.ОтражатьВОперативномУчете);
		КонецЕсли;
		
		Если Параметры.Свойство("ОтражатьСебестоимость") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьСебестоимость", Параметры.ОтражатьСебестоимость);
		КонецЕсли;
		
		Если Параметры.Свойство("ОтражатьВБУиНУ") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВБУиНУ", Параметры.ОтражатьВБУиНУ);
		КонецЕсли;
		
		Если Параметры.Свойство("ОтражатьВУУ") Тогда
			ЗначенияЗаполнения.Вставить("ОтражатьВУУ", Параметры.ОтражатьВУУ);
		КонецЕсли;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыбраннаяОперация) Тогда
		
		СтандартнаяОбработка = Ложь;
		СоответствиеТиповОперацийФормам = Новый Соответствие;
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство"), "ФормаТовары");
		
		ВыбраннаяФорма = СоответствиеТиповОперацийФормам[ВыбраннаяОперация];
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.Ссылка <> Неопределено Тогда
		Представление = 
			ВводОстатковВызовСервера.ЗаголовокДокументаВводОстатковПоХозяйственнойОперации(Данные.Ссылка, Данные.Номер, Данные.Дата, Данные.ХозяйственнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатейИАналитик = Новый Массив;
	Возврат ПараметрыВыбораСтатейИАналитик;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных; 
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатковТоваров";
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.ВводОстатковТоваров));
	
	ТекстЗапросаПереопределенияСклада = "
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
		|				ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам)
		|			ТОГДА ТаблицаТовары.Ссылка.Партнер
		|		ИНАЧЕ ТаблицаТовары.Ссылка.Склад
		|	КОНЕЦ";
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("Склад", ТекстЗапросаПереопределенияСклада);
	
	Если ИмяРегистра = "ТоварыВЯчейках" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ВЗапросеЕстьИсточник = Истина;
		
	ИначеЕсли ИмяРегистра = "РаспределениеЗапасовДвижения" Тогда
		
		ТекстыЗапроса = Новый СписокЗначений();
		СинонимТаблицыДокумента = "ТабЧасть";
		ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%",        ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если СинонимТаблицыДокумента <> "ТаблицаТовары" Тогда
		Для Каждого ПараметрРасчета Из ПереопределениеРасчетаПараметров Цикл
			ПереопределениеРасчетаПараметров[ПараметрРасчета.Ключ] = СтрЗаменить(
				ПараметрРасчета.Значение, "ТаблицаТовары", СинонимТаблицыДокумента);
		КонецЦикла;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
	
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ТекстЗапроса;
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	
	Возврат Результат;
	
КонецФункции

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("АдресныйСклад");
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	МеханизмыДокумента.Добавить("ПередачаНаОтветхранение");
	МеханизмыДокумента.Добавить("ПриемНаОтветхранение");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СерийныйУчет");
	МеханизмыДокумента.Добавить("АдресныйСклад");
	МеханизмыДокумента.Добавить("УчетНДС");
	МеханизмыДокумента.Добавить("УчетРабот");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
	ВводОстатковЛокализация.ВводОстатковТоваровЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка) Экспорт
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст ="ВЫБРАТЬ
		|	ДанныеДокумента.Дата КАК Период,
		|	ДанныеДокумента.Номер КАК Номер,
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
		|	ДанныеДокумента.Склад КАК Склад,
		|	ДанныеДокумента.Валюта КАК Валюта,
		|	ДанныеДокумента.Помещение КАК Помещение,
		|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ДанныеДокумента.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	ДанныеДокумента.Партия КАК Партия,
		|	ЕСТЬNULL(ДанныеДокумента.Партия.ТипПервичногоДокумента, ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ВнутренняяНакладная) КАК ВнутренняяНакладнаяВПартии,
		|	ДанныеДокумента.Партнер КАК Партнер,
		|	ДанныеДокумента.Контрагент КАК Контрагент,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДокумента.СоглашениеСКомиссионером КАК СоглашениеСКомиссионером,
		|	ДанныеДокумента.СоглашениеСКомитентом КАК СоглашениеСКомитентом,
		|	ДанныеДокумента.СоглашениеСКлиентом КАК СоглашениеСКлиентом,
		|	ДанныеДокумента.Партнер КАК Поставщик,
		|	ДанныеДокумента.СоглашениеСКомитентом КАК Соглашение,
		|	ЛОЖЬ КАК ОбособленныйУчетТоваровПоСделке,
		|	ДанныеДокумента.ЗаказПереработчику КАК ЗаказПереработчику,
		|	ДанныеДокумента.ЗонаПриемки КАК ЗонаПриемки,
		|	ДанныеДокумента.Менеджер КАК Менеджер,
		|	ДанныеДокумента.Автор КАК Автор,
		|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ДанныеДокумента.ОтражатьВОперативномУчете КАК ОтражатьВОперативномУчете,
		|	ДанныеДокумента.ОтражатьСебестоимость КАК ОтражатьСебестоимость,
		|	ДанныеДокумента.ОтражатьВБУиНУ КАК ОтражатьВБУиНУ,
		|	ДанныеДокумента.ОтражатьВУУ КАК ОтражатьВУУ,
		|	ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(100)) КАК Комментарий,
		|	ДанныеДокумента.Ответственный КАК Ответственный,
		|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
		|	ДанныеДокумента.Исправление КАК Исправление,
		|	ДанныеДокумента.СторнируемыйДокумент КАК СторнируемыйДокумент,
		|	ДанныеДокумента.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
		|	ДанныеДокумента.Проведен КАК Проведен,
		|	НастройкиХозяйственныхОпераций.Ссылка КАК НастройкаХозяйственнойОперации,
		|	СУММА(ЕСТЬNULL(ДанныеТабличнойЧастиТовары.Сумма, 0)) КАК СуммаДокумента
		|ИЗ
		|	Документ.ВводОстатковТоваров КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров.Товары КАК ДанныеТабличнойЧастиТовары
		|		ПО ДанныеДокумента.Ссылка = ДанныеТабличнойЧастиТовары.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
		|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров,
		|	ДанныеДокумента.Склад,
		|	ДанныеДокумента.Валюта,
		|	ДанныеДокумента.Помещение,
		|	ДанныеДокумента.ХозяйственнаяОперация,
		|	ДанныеДокумента.НалогообложениеНДС,
		|	ДанныеДокумента.ВидДеятельностиНДС,
		|	ДанныеДокумента.Партия,
		|	ЕСТЬNULL(ДанныеДокумента.Партия.ТипПервичногоДокумента, ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ВнутренняяНакладная),
		|	ДанныеДокумента.Партнер,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.Договор,
		|	ДанныеДокумента.СоглашениеСКомиссионером,
		|	ДанныеДокумента.СоглашениеСКомитентом,
		|	ДанныеДокумента.СоглашениеСКлиентом,
		|	ДанныеДокумента.ЗаказПереработчику,
		|	ДанныеДокумента.ЗонаПриемки,
		|	ДанныеДокумента.Менеджер,
		|	ДанныеДокумента.Автор,
		|	ДанныеДокумента.ЦенаВключаетНДС,
		|	ДанныеДокумента.НаправлениеДеятельности,
		|	ДанныеДокумента.ОтражатьВОперативномУчете,
		|	ДанныеДокумента.ОтражатьСебестоимость,
		|	ДанныеДокумента.ОтражатьВБУиНУ,
		|	ДанныеДокумента.ОтражатьВУУ,
		|	ВЫРАЗИТЬ(ДанныеДокумента.Комментарий КАК СТРОКА(100)),
		|	ДанныеДокумента.Ответственный,
		|	ДанныеДокумента.ПометкаУдаления,
		|	ДанныеДокумента.Исправление,
		|	ДанныеДокумента.СторнируемыйДокумент,
		|	ДанныеДокумента.ИсправляемыйДокумент,
		|	ДанныеДокумента.Проведен,
		|	НастройкиХозяйственныхОпераций.Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Период",   Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",    Реквизиты.Номер);
	Запрос.УстановитьПараметр("Проведен", Реквизиты.Проведен);
	
	Если Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию 
		Или Реквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам Тогда
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Партнер);
	Иначе
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Склад);
	КонецЕсли;
	
	СписокТиповЗаказов = Новый СписокЗначений;
	СписокТиповЗаказов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	СписокТиповЗаказов.Добавить(Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказКлиента"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"));
	//++ НЕ УТКА
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказДавальца"));
	//-- НЕ УТКА
	//++ НЕ УТ
	СписокТиповЗаказов.Добавить(Тип("ДокументСсылка.ЗаказПереработчику"));
	//-- НЕ УТ
	Запрос.УстановитьПараметр("СписокТиповЗаказов", СписокТиповЗаказов);
	
	Запрос.УстановитьПараметр("Помещение",                             Реквизиты.Помещение);
	Запрос.УстановитьПараметр("Организация",                           Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",                         Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                 Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Партнер",                               Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                            Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                               Реквизиты.Договор);
	Запрос.УстановитьПараметр("СоглашениеСКлиентом",                   Реквизиты.СоглашениеСКлиентом);
	Запрос.УстановитьПараметр("СоглашениеСКомиссионером",              Реквизиты.СоглашениеСКомиссионером);
	Запрос.УстановитьПараметр("НалогообложениеНДС",                    Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС",                    Реквизиты.ВидДеятельностиНДС);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("Менеджер",                              Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Автор",                                 Реквизиты.Автор);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",        ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация));
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",            Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ЗонаПриемки",                           Реквизиты.ЗонаПриемки);
	Запрос.УстановитьПараметр("ЗаказПереработчику",                    Реквизиты.ЗаказПереработчику);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                       Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",               Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ОтражатьВОперативномУчете",             Реквизиты.ОтражатьВОперативномУчете);
	Запрос.УстановитьПараметр("ОтражатьВБУиНУ",                        Реквизиты.ОтражатьВБУиНУ);
	Запрос.УстановитьПараметр("ОтражатьВУУ",                           Реквизиты.ОтражатьВУУ);
	Запрос.УстановитьПараметр("ПустоеНазначение",                      Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("Партия",                                Реквизиты.Партия);
	Запрос.УстановитьПараметр("ВнутренняяНакладнаяВПартии",            Реквизиты.ВнутренняяНакладнаяВПартии);
	Запрос.УстановитьПараметр("Ответственный",                         Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",                           Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",                       Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("СуммаДокумента",                        Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("Валюта",                                Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Исправление",                           Реквизиты.Исправление);
	Запрос.УстановитьПараметр("СторнируемыйДокумент",                  Реквизиты.СторнируемыйДокумент);
	Запрос.УстановитьПараметр("ИсправляемыйДокумент",                  Реквизиты.ИсправляемыйДокумент);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации",        Реквизиты.НастройкаХозяйственнойОперации);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", 
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + Метаданные.Документы.ВводОстатковТоваров.Имя));
	
	// В отличии от других документов ВводОстатков может проводиться по регистрам себестоимости в месяце перед включением учета себестоимости.
	Запрос.УстановитьПараметр("ОтражатьСебестоимость", Реквизиты.ОтражатьСебестоимость
		И РасчетСебестоимостиПовтИсп.ФормироватьДвиженияПоРегистрамСебестоимости(НачалоМесяца(Реквизиты.Период), Истина));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	&ПустоеНазначение          КАК Назначение,
	|	Ключи.Серия                КАК Серия,
	|	Ключи.Склад                КАК Склад
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		&ПустоеНазначение                                КАК Назначение,
	|		Товары.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|		Товары.АналитикаУчетаНоменклатуры.МестоХранения  КАК Склад
	|	ИЗ
	|		Документ.ВводОстатковТоваров.Товары КАК Товары
	|	ГДЕ
	|		НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|		И Товары.Ссылка = &Ссылка
	|	) КАК Ключи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия = Аналитика.Серия
	|		И Ключи.Склад = Аналитика.МестоХранения
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|		И &ПустоеНазначение = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОптовыхПродажЗаПрошлыеПериоды),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковРозничныхПродажЗаПрошлыеПериоды)
	|		)	
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",                                     Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение",                           Запрос.Параметры.ПустоеНазначение);
	ЗапросАналитик.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Запрос.Параметры.УчитыватьСебестоимостьТоваровПоНазначениям);
	ЗапросАналитик.УстановитьПараметр("ХозяйственнаяОперация",                      Запрос.Параметры.ХозяйственнаяОперация);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                       КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика  КАК Характеристика,
	|	ТаблицаТовары.Серия           КАК Серия,
	|	ТаблицаТовары.Назначение      КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов      КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД        КАК НомерГТД
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО 
	|			  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов
	|			И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|			И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|			И ТаблицаТовары.Серия          = ПоступленияТоваров.Серия
	|			И ТаблицаТовары.Назначение     = ПоступленияТоваров.Назначение
	|			И ТаблицаТовары.НомерГТД       = ПоступленияТоваров.НомерГТД
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПередачиТоваровНаКомиссию";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                           КАК ДатаПередачи,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов                 КАК ВидЗапасов,
	|	Товары.НомерГТД                   КАК НомерГТД,
	|	&СоглашениеСКомиссионером         КАК Соглашение,
	|	&Организация                      КАК Организация
	|ИЗ
	|	ВтТовары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|	ПО
	|		  Товары.ВидЗапасов                 = ДатыПередачиТоваровНаКомиссию.ВидЗапасов 
	|		И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|		И Товары.НомерГТД                   = ДатыПередачиТоваровНаКомиссию.НомерГТД 
	|		И ДатыПередачиТоваровНаКомиссию.Соглашение  = &СоглашениеСКомиссионером
	|		И ДатыПередачиТоваровНаКомиссию.Организация = &Организация
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|	И &ОтражатьВОперативномУчете
	|	И (ДатыПередачиТоваровНаКомиссию.ДатаПередачи ЕСТЬ NULL
	|		ИЛИ ДатыПередачиТоваровНаКомиссию.ДатаПередачи < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Склад                                     КАК Склад,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                     КАК НомерГТД,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ             КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ИСТИНА                                     КАК Первичное
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	&Партнер                                 КАК Партнер,
	|	&СоглашениеСКомиссионером                КАК Соглашение,
	|	&Договор                                 КАК Договор,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				И НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА ТаблицаТовары.КоличествоПоРНПТ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|	И &ОтражатьВОперативномУчете
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Товары""                                                                КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки                                              КАК НомерСтроки,
	|	ЕСТЬNULL(ПервичныйДокумент.Партнер, ДанныеДокумента.Партнер)              КАК Поставщик,
	|	ЕСТЬNULL(ПервичныйДокумент.Контрагент, ДанныеДокумента.Контрагент)        КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС                                                КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|		ТОГДА ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаДокумента.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ТОГДА ТаблицаДокумента.Назначение.ВидДеятельностиНДС
	|			ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС 
	|	КОНЕЦ                                                                     КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	0                                                                         КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВводОстатковТоваров.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|		ПО ПервичныйДокумент.Ссылка = ДанныеДокумента.Партия
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ДетализацияПартий""                                                   КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки                                            КАК НомерСтроки,
	|	ТаблицаДокумента.Партнер                                                КАК Поставщик,
	|	ТаблицаДокумента.Контрагент                                             КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС                                              КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС 
	|	КОНЕЦ                                                                   КАК НалогообложениеНДС,
	|	ТаблицаДокумента.ВидЦенности                                            КАК ВидЦенности,
	|	0                                                                       КАК КодСтроки
	|ИЗ
	|	Документ.ВводОстатковТоваров.ДетализацияПартий КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры)
	
	Если Не УчетНДСУП.ТребуетсяПроведениеПоРегистрамНДС(Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 

	ТекстТовары = 
	"ВЫБРАТЬ
	|	Товары.Ссылка.Дата КАК Период,
	|	Товары.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	Товары.Ссылка.Партия.Контрагент КАК Контрагент,
	|	Товары.Ссылка.Партия КАК ПартияПриобретенияТоваров,
	|	Товары.Ссылка.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	ВЫБОР
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВтТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО 
	|		Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|		И Товары.Ссылка = ДетализацияПартийСуммы.Ссылка
	|ГДЕ
	|	Товары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров)
	|	И Товары.Ссылка.ОтражатьСебестоимость
	|	И Товары.Ссылка.Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка.Дата КАК Период,
	|	Товары.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	Товары.АналитикаУчетаПартий.Контрагент КАК Контрагент,
	|	Товары.ДокументПоступления КАК ПартияПриобретенияТоваров,
	|	Товары.Ссылка.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.НомерГТД КАК НомерГТД,
	|	Товары.СуммаРегл КАК СуммаБезНДСРегл,
	|	Товары.НДСРегл КАК СуммаНДСРегл,
	|	Товары.НДСУпр КАК СуммаНДСУпр,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВтДетализацияПартий КАК Товары
	|ГДЕ
	|	Товары.Ссылка.ОтражатьСебестоимость
	|	И Товары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров)
	|";
	
	УчетНДСУП.ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары);
	
КонецПроцедуры

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтТовары";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                             КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                        КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                     КАК Характеристика,
	|	ТаблицаТовары.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ТаблицаТовары.Серия                             КАК Серия,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры        КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                           КАК АналитикаУчетаСебестоимости,
	|	
	|	ТаблицаТовары.СтавкаНДС                         КАК СтавкаНДС,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности          КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество                        КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.КоличествоПоРНПТ
	|	КОНЕЦ											КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС
	|	КОНЕЦ                                           КАК Сумма,
	|	ТаблицаТовары.СуммаБезНДС                       КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаБезНДС                       КАК СуммаУпр,
	|	ТаблицаТовары.СуммаНДС                          КАК СуммаНДС,
	|	ТаблицаТовары.СуммаРегл                         КАК СуммаРегл,
	|	ТаблицаТовары.НДСРегл                           КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|		ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаБезНДС
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаБезНДС
	|	КОНЕЦ                                           КАК НДСУпр,
	|	ТаблицаТовары.СуммаПР                           КАК СуммаПР,
	|	ТаблицаТовары.СуммаВР                           КАК СуммаВР,
	|	-ТаблицаТовары.РезервПодОбесценениеРегл         КАК РезервПодОбесценениеРегл,
	|	-ТаблицаТовары.РезервПодОбесценениеУпр          КАК РезервПодОбесценениеУпр,
	|	ТаблицаТовары.ВидЗапасов                        КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                          КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару           КАК ПредусмотренЗалогЗаТару,
	|	ТаблицаТовары.КодСтроки                         КАК КодСтроки,
	|	ТаблицаТовары.ГруппаПродукции                   КАК ГруппаПродукции,
	|	ТаблицаТовары.ИдентификаторСтроки               КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаСебестоимости.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки       = ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство))
	|	И ТаблицаТовары.Количество <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДетализацияПартий";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДетализацияПартий.Ссылка                       КАК Ссылка,
	|	ТаблицаДетализацияПартий.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                          КАК Характеристика,
	|	ТаблицаТовары.Назначение.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры              КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                 КАК АналитикаУчетаСебестоимости,
	|	ТаблицаТовары.ВидЗапасов                              КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                                КАК НомерГТД,
	|	ТаблицаДетализацияПартий.СтавкаНДС                    КАК СтавкаНДС,
	|	ТаблицаДетализацияПартий.ДокументПоступления          КАК ДокументПоступления,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.ВидЦенности          КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.НалогообложениеНДС   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартийДетализацияПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартийДокументаПоступления,
	|	ТаблицаАналитикУчетаПартийТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаДетализацияПартий.СуммаРегл                    КАК СуммаРегл,
	|	ТаблицаДетализацияПартий.СуммаУпр                     КАК СуммаУпр,
	|	ТаблицаДетализацияПартий.НДСРегл                      КАК НДСРегл,
	|	ТаблицаДетализацияПартий.НДСУпр                       КАК НДСУпр,
	|	
	|	ТаблицаТовары.ГруппаПродукции                         КАК ГруппаПродукции,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки          КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ ВтДетализацияПартий
	|ИЗ
	|	Документ.ВводОстатковТоваров.ДетализацияПартий КАК ТаблицаДетализацияПартий
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|	ПО ТаблицаДетализацияПартий.Ссылка = ТаблицаТовары.Ссылка
	|		И ТаблицаДетализацияПартий.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = АналитикаСебестоимости.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = АналитикаСебестоимости.Серия
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаСебестоимости.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаСебестоимости.МестоХранения
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартийДетализацияПартий
	|	ПО ТаблицаАналитикУчетаПартийДетализацияПартий.НомерСтроки = ТаблицаДетализацияПартий.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартийДетализацияПартий.ИмяТабличнойЧасти = ""ДетализацияПартий""
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартийТовары
	|	ПО ТаблицаАналитикУчетаПартийТовары.НомерСтроки       = ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартийТовары.ИмяТабличнойЧасти = ""Товары""
	|	
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтДетализацияПартийСуммы";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДетализацияПартий.Ссылка               КАК Ссылка,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	СУММА(ТаблицаДетализацияПартий.СуммаРегл)     КАК СуммаРегл,
	|	СУММА(ТаблицаДетализацияПартий.СуммаУпр)      КАК СуммаУпр,
	|	СУММА(ТаблицаДетализацияПартий.НДСРегл)       КАК НДСРегл,
	|	СУММА(ТаблицаДетализацияПартий.НДСУпр)        КАК НДСУпр
	|ПОМЕСТИТЬ ВтДетализацияПартийСуммы
	|ИЗ
	|	Документ.ВводОстатковТоваров.ДетализацияПартий КАК ТаблицаДетализацияПартий
	|
	|ГДЕ
	|	ТаблицаДетализацияПартий.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДетализацияПартий.Ссылка,
	|	ТаблицаДетализацияПартий.ИдентификаторСтроки
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ТаблицаТовары.Назначение       КАК Назначение,
	|	ТаблицаТовары.Упаковка            КАК Упаковка,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|	И ТаблицаТовары.Количество <> 0
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Упаковка,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	МАКСИМУМ(ТаблицаСерии.КоличествоУпаковок),
	|	ТаблицаСерии.Серия,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)
	|ИЗ
	|	Документ.ВводОстатковТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Упаковка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Помещение                             КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОтражатьВОперативномУчете
	|	И (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеСкладскихПомещений)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки                 КАК НомерСтроки,
	|	&Период                                   КАК Период,
	|	&Организация                              КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаСебестоимости КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ТаблицаТовары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                     КАК РазделУчета,
	|	ТаблицаТовары.ВидЗапасов                  КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|	КОНЕЦ                                    КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ГруппаПродукции            КАК ГруппаПродукции,
	|	ТаблицаТовары.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации          КАК НастройкаХозяйственнойОперации,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|					 И ТаблицаТовары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|						ТОГДА ТаблицаТовары.ГруппаПродукции
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|					 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|						ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|					 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|						ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                           КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) КАК ТипЗаписи,
	|
	//  суммовые показатели
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЗабалансоваяРегл,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|			ИНАЧЕ ТаблицаТовары.СуммаРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.Сумма
	|			ИНАЧЕ ТаблицаТовары.СуммаБезНДС
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьУпр,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.НДСУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.РезервПодОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеРегл,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеУпр,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация
Функция ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДетализацияПартийТоваровДляНДСиУСН";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры)
		И НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, "СебестоимостьТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос);
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	ДетализацияПартий.НомерСтроки            КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(ДетализацияПартий.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                            КАК РазделУчета,
	|	ДетализацияПартий.АналитикаУчетаСебестоимости    КАК АналитикаУчетаНоменклатуры,
	|	ДетализацияПартий.ВидЗапасов                     КАК ВидЗапасов,
	|	&Партия                                          КАК Партия,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			 И ДетализацияПартий.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА ДетализацияПартий.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                      КАК АналитикаФинансовогоУчета,
	|	ДетализацияПартий.ВидДеятельностиНДС                       КАК ВидДеятельностиНДС,
	|	ДетализацияПартий.АналитикаУчетаПартийДокументаПоступления КАК АналитикаУчетаПартий,
	|	ДетализацияПартий.ДокументПоступления                      КАК ДокументПоступления,
	|	0                                                          КАК Количество,
	|	ДетализацияПартий.СуммаРегл                                КАК СтоимостьБезНДС,
	|	ДетализацияПартий.НДСРегл                                  КАК НДС,
	|	ДетализацияПартий.НДСУпр                                   КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы)        КАК ТипЗаписи
	|
	|ИЗ
	|	ВтДетализацияПартий КАК ДетализацияПартий
	|
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	Товары.НомерСтроки                       КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                    КАК РазделУчета,
	|	Товары.АналитикаУчетаСебестоимости       КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов                        КАК ВидЗапасов,
	|	&Партия                                  КАК Партия,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			 И Товары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                    КАК АналитикаФинансовогоУчета,
	|	Товары.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|	Товары.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	&Партия                                  КАК ДокументПоступления,
	|	Товары.Количество                        КАК Количество,
	|	ВЫБОР 
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК СтоимостьБезНДС,
	|	ВЫБОР 
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК НДС,
	|	ВЫБОР 
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) КАК ТипЗаписи
	|
	|ИЗ
	|	ВтТовары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|	
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН
	|	И &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН2_4(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	// Теперь движения формируются оффлайн по новым регистрам партий НДС.
	ИмяРегистра = "ДетализацияПартийТоваровДляНДСиУСН2_4";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры)
		И НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, "СебестоимостьТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос);
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтДетализацияПартийСуммы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДетализацияПартийСуммы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                     КАК ВидДвижения,
	|	ДетализацияПартий.НомерСтроки                              КАК НомерСтроки,
	|	&Период                                                    КАК Период,
	|	&Организация                                               КАК Организация,
	|	ДетализацияПартий.АналитикаУчетаНоменклатуры			   КАК АналитикаУчетаНоменклатуры,
	|	ДетализацияПартий.ВидЗапасов			   				   КАК ВидЗапасов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(ДетализацияПартий.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                            		   КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			 И ДетализацияПартий.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА ДетализацияПартий.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                      КАК АналитикаФинансовогоУчета,
	|	&Партия                                                    КАК Партия,
	|	ВЫБОР КОГДА ЕСТЬNULL(ДетализацияПартий.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ ДетализацияПартий.АналитикаУчетаПартий
	|	КОНЕЦ                                                      КАК АналитикаУчетаПартий,
	|	ДетализацияПартий.ВидДеятельностиНДС	                   КАК ВидДеятельностиНДС,
	|	ДетализацияПартий.ДокументПоступления	                   КАК ДокументПоступления,
	|	ДетализацияПартий.АналитикаУчетаПартийДокументаПоступления КАК АналитикаУчетаДокументаПоступления,
	|	ДетализацияПартий.Номенклатура                             КАК Номенклатура,
	|	ДетализацияПартий.Характеристика                           КАК Характеристика,
	|	ДетализацияПартий.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	0														   КАК Количество,
	|	ДетализацияПартий.СуммаРегл                                КАК СтоимостьБезНДС,
	|	ДетализацияПартий.НДСРегл                                  КАК НДС,
	|	ДетализацияПартий.СуммаУпр                                 КАК СтоимостьБезНДСУпр,
	|	ДетализацияПартий.НДСУпр                                   КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы)        КАК ТипЗаписи
	|//%ПомещатьВоВременнуюТаблицу
	|ИЗ
	|	ВтДетализацияПартий КАК ДетализацияПартий
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                     КАК ВидДвижения,
	|	0                                                          КАК НомерСтроки,
	|	&Период                                                    КАК Период,
	|	&Организация                                               КАК Организация,
	|	Товары.АналитикаУчетаНоменклатуры			   			   КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов			   				   			   КАК ВидЗапасов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                            		   КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			 И Товары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                      КАК АналитикаФинансовогоУчета,
	|	&Партия                                                    КАК Партия,
	|	ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ Товары.АналитикаУчетаПартий
	|	КОНЕЦ                                                      КАК АналитикаУчетаПартий,
	|	Товары.ВидДеятельностиНДС                                  КАК ВидДеятельностиНДС,
	|	&Партия                                                    КАК ДокументПоступления,
	|	Товары.АналитикаУчетаПартий                                КАК АналитикаУчетаДокументаПоступления,
	|	НЕОПРЕДЕЛЕНО                                               КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО                                               КАК Характеристика,
	|	Товары.НаправлениеДеятельности                             КАК НаправлениеДеятельности,
	|	СУММА(Товары.Количество)								   КАК Количество,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) > 0
	|		ТОГДА Товары.СуммаРегл - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                     КАК СтоимостьБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) > 0
	|		ТОГДА Товары.НДСРегл - ЕСТЬNULL(ДетализацияПартийСуммы.НДСРегл, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                     КАК НДС,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.СуммаУпр - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаУпр, 0) > 0
	|		ТОГДА Товары.СуммаУпр - ЕСТЬNULL(ДетализацияПартийСуммы.СуммаУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                     КАК СтоимостьБезНДСУпр,
	|	СУММА(ВЫБОР 
	|		КОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) > 0
	|		ТОГДА Товары.НДСУпр - ЕСТЬNULL(ДетализацияПартийСуммы.НДСУпр, 0) 
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                     КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)            КАК ТипЗаписи
	|ИЗ
	|	ВтТовары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДетализацияПартийСуммы КАК ДетализацияПартийСуммы
	|	ПО Товары.ИдентификаторСтроки = ДетализацияПартийСуммы.ИдентификаторСтроки
	|	
	|ГДЕ
	|	&ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4
	|	И НЕ &ВнутренняяНакладнаяВПартии
	|	И &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|		)
	|	И &ОтражатьСебестоимость
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА &ФИФОСкользящаяОценка
	|			ТОГДА &Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаПартий.Контрагент, НЕОПРЕДЕЛЕНО) В 
	|		(ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		ИНАЧЕ Товары.АналитикаУчетаПартий
	|	КОНЕЦ,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(Товары.АналитикаУчетаСебестоимости.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			 И Товары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|				ТОГДА &Менеджер
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|				ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Товары.ВидДеятельностиНДС,
	|	Товары.АналитикаУчетаПартий,
	|	Товары.НаправлениеДеятельности
	|";
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ФормированиеТаблицДокументаПриРасчетеПартийИСебестоимости(Запрос) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ПомещатьВоВременнуюТаблицу", "ПОМЕСТИТЬ " + Запрос.Параметры.ИмяВременнойТаблицыПартийНДС2_4);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ПомещатьВоВременнуюТаблицу", "");
		ТекстЗапроса = ТекстЗапроса + "
			|	
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- Локализация

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура   КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Назначение        КАК Назначение,
	|	ТаблицаСерии.Серия                   КАК Серия,
	|	ТаблицаСерии.Количество        КАК Количество,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ                       КАК Получатель,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ                       КАК ПомещениеПолучателя,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                       КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков) КАК СкладскаяОперация,
	|	&Ссылка                     КАК Документ,
	|	&Период                     КАК Период,
	|	&Ссылка                     КАК Регистратор,
	|	ИСТИНА                      КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВводОстатковТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ        КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВводОстатковТоваров.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &Партия <> ЗНАЧЕНИЕ(Документ.ПервичныйДокумент.ПустаяСсылка)
	|		ТОГДА &Партия
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                      КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Сумма                        КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС                  КАК СтоимостьБезНДС,
	|	(ВЫБОР &ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ ТаблицаТовары.СуммаРегл КОНЕЦ) КАК СтоимостьРегл,
	|	ТаблицаТовары.СуммаПР                      КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР                      КАК ВременнаяРазница,
	|	ТаблицаТовары.НДСРегл                      КАК НДСРегл,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидДеятельностиНДС           КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	ИСТИНА                                     КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                               КАК ДокументИсточник
	|
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|	И &ОтражатьСебестоимость
	|	И &ПартионныйУчетВерсии21
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровПереданныеНаКомиссию";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки                                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)               КАК ВидДвижения,
	|	&Период                                              КАК Период,
	|	&Организация                                         КАК Организация,
	|	Товары.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                              КАК ДокументПоступления,
	|	Товары.ВидЗапасов                                    КАК ВидЗапасов,
	|	Товары.АналитикаУчетаПартий                          КАК АналитикаУчетаПартий,
	|	&Ссылка                                              КАК ДокументПередачиНаКомиссию,
	|	Товары.Количество                                    КАК Количество,
	|	Товары.Сумма                                         КАК Стоимость,
	|	Товары.СуммаБезНДС                                   КАК СтоимостьБезНДС,
	|	Товары.СуммаРегл                                     КАК СтоимостьРегл,
	|	Товары.НДСРегл                                       КАК НДСРегл,
	|	Товары.СуммаПР                                       КАК ПостояннаяРазница,
	|	Товары.СуммаВР                                       КАК ВременнаяРазница,
	|	Товары.Номенклатура                                  КАК Номенклатура,
	|	Товары.Характеристика                                КАК Характеристика,
	|	Товары.ВидДеятельностиНДС                            КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК Товары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|	И &ОтражатьСебестоимость
	|	И &ПартионныйУчетВерсии21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПринятаяВозвратнаяТара";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                  КАК ВидДвижения,
	|	&Период                                                 КАК Период,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                            КАК Характеристика,
	|	ТаблицаТовары.Количество                                КАК Количество,
	|	ТаблицаТовары.Сумма                                     КАК Сумма,
	|	&Партнер                                                КАК Партнер,
	|	ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка) КАК ДокументПоступления,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару                   КАК ПредусмотренЗалог,
	|	ТаблицаТовары.ИдентификаторСтроки                       КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации                         КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПереданнаяВозвратнаяТара";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару  КАК ПредусмотренЗалог,
	|	ТаблицаТовары.ИдентификаторСтроки      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации        КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПереданнойКлиентам)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&ЗонаПриемки                           КАК Ячейка,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПриПереходеНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|				И &ЗонаПриемки <> ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка))
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеПереработчику";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	ТаблицаТовары.Назначение                        КАК Назначение,
	|	&Партнер                                        КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)  КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	&ЗаказПереработчику                             КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	//-- НЕ УТ
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Партнер = КлючиПроизводства.МестоХранения
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|	И НЕ &ПартионныйУчетВерсии22
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	ТаблицаТовары.Назначение                        КАК Назначение,
	|	&Подразделение                                  КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО                                    КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	//-- НЕ УТ	
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.МестоХранения
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.СуммаПР КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР КАК ВременнаяРазница,
	|	ТаблицаТовары.СуммаРегл КАК СтоимостьРегл,
	|	ТаблицаТовары.НДСРегл КАК НДСРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|				И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОтражатьСебестоимость
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация
Процедура УстановитьПараметрыФормированияРегистровУчетаПартийНДС(Запрос)
	
	Если Запрос.Параметры.Свойство("ФормироватьДетализацияПартийТоваровДляНДСиУСН")
		И Запрос.Параметры.Свойство("ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4") Тогда
		Возврат;
	КонецЕсли;
	
	ФормироватьДетализацияПартийТоваровДляНДСиУСН = Ложь;
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ФормированиеТаблицДокументаПриРасчетеПартийИСебестоимости(Запрос) Тогда
		ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4 = Истина;
	Иначе
		
		ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4 = Ложь;
		ИмяРегистраУчетаПартийНДС = РасчетСебестоимостиНДС.ИмяРегистраУчетаПартийНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период);
		
		Если ИмяРегистраУчетаПартийНДС = "ДетализацияПартийТоваровДляНДСиУСН" Тогда
			ФормироватьДетализацияПартийТоваровДляНДСиУСН = Истина;
		ИначеЕсли ИмяРегистраУчетаПартийНДС = "ДетализацияПартийТоваровДляНДСиУСН2_4" Тогда
			ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4 = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ФормироватьДетализацияПартийТоваровДляНДСиУСН",    ФормироватьДетализацияПартийТоваровДляНДСиУСН);
	Запрос.УстановитьПараметр("ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4", ФормироватьДетализацияПартийТоваровДляНДСиУСН2_4);
	
КонецПроцедуры
//-- Локализация

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	&Склад КАК МестоХранения,
	|	&Контрагент КАК Контрагент,
	|	&Подразделение КАК Подразделение,
	|	&Период КАК ДатаДокументаИБ,
	|	&Ссылка КАК Ссылка,
	|	&Номер КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	&Ответственный КАК Ответственный,
	|	&Автор КАК Автор,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК Дополнительно,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПервичногоДокумента,
	|	НЕОПРЕДЕЛЕНО КАК НомерПервичногоДокумента,
	|	СУММА(ЕСТЬNULL(ДанныеТабличнойЧастиТовары.Сумма, 0)) КАК Сумма,
	|	&Валюта КАК Валюта,
	|	&Договор КАК Договор,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Исправление КАК СторноИсправление,
	|	&СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет
	|ИЗ
	|	Документ.ВводОстатковТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров.Товары КАК ДанныеТабличнойЧастиТовары
	|		ПО ДанныеДокумента.Ссылка = ДанныеТабличнойЧастиТовары.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Ссылка.Склад   КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	ТабЧасть.Количество     КАК Количество,
		|	ЛОЖЬ                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО            КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ВводОстатковТоваров.Товары КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Ссылка.ХозяйственнаяОперация В(
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
		|		И ТабЧасть.Ссылка.ОтражатьВОперативномУчете";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

#Область ПартионныйУчет

Функция ОписаниеРегистровУчетаЗатратИСебестоимости(Документ) Экспорт
	
	ОписаниеРегистров = Новый Массив;
	ОписаниеРегистров.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	Возврат ОписаниеРегистров;
	
КонецФункции

Функция УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Массив;
	
	Если Запрос <> Неопределено Тогда
		// Нет дополнительных параметров.
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено, ТекстыЗапроса = Неопределено) Экспорт
	
	ДополнительныеТаблицы = Новый Массив;
	ДополнительныеТаблицы.Добавить("ВтТовары");
	
	Если Запрос <> Неопределено Тогда
	
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[0], ТекстыЗапроса) Тогда
			ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДополнительныеТаблицы;
	
КонецФункции

Функция ОписаниеОперацийУчетаСебестоимости(Документ) Экспорт
	
	ОписаниеОпераций = Новый Массив;
	
	#Область ВнешнееПоступление_Товар
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 					КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаСебестоимости 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов 					КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаДокумента.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.ВидДеятельностиНДС				КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 									КАК КорАналитикаУчетаПартий,
	|	ТаблицаДокумента.Партнер 		КАК Поставщик,
	|	ТаблицаДокумента.Контрагент 	КАК Контрагент,
	|	ТаблицаВидыЗапасов.СтавкаНДС 	КАК СтавкаНДС,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО					КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО					КАК КорВидЗапасов,
	|
	// Поля аналитики финансового учета
	|	НЕОПРЕДЕЛЕНО 					КАК Сделка,
	|	ТаблицаДокумента.Подразделение 	КАК Подразделение,
	|	ТаблицаДокумента.Менеджер 		КАК Менеджер,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 			КАК Количество,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки 	КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК Стоимость,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаРегл + ТаблицаВидыЗапасов.НДСРегл
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК НДСРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.Сумма
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДС
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.НДСУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК НДСУпр,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаРегл + ТаблицаВидыЗапасов.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьЗабалансоваяРегл,
	|	0										КАК ДопРасходы,
	|	0										КАК ДопРасходыБезНДС,
	|	0										КАК ДопРасходыРегл,
	|	0										КАК ДопРасходыУпр,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК ВременнаяРазница,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.РезервПодОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеРегл,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеУпр,
	|	0										КАК КорСтоимость,
	|
	// Прочие поля
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|	КОНЕЦ                                    КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации          КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковТоваров КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныеДокументы
	|		ПО ТаблицаДокумента.Партия = ПервичныеДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|	И &ОтражатьСебестоимость
	|	И ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ЕСТЬNULL(ПервичныеДокументы.ТипПервичногоДокумента, НЕОПРЕДЕЛЕНО) = 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ПриобретениеУПоставщика)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнешнееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти

	#Область ВнутреннееПоступление_Товар
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 					КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаСебестоимости 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов 					КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаДокумента.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.ВидДеятельностиНДС				КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 									КАК КорАналитикаУчетаПартий,
	|	0 										КАК КодСтроки,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО						КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО						КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО						КАК КорГруппаПродукции,
	|
	// Поля аналитики финансового учета
	|	НЕОПРЕДЕЛЕНО 						КАК Сделка,
	|	ТаблицаДокумента.Подразделение 		КАК Подразделение,
	|	ТаблицаДокумента.Менеджер 			КАК Менеджер,
	|	ТаблицаВидыЗапасов.ГруппаПродукции 	КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 			КАК Количество,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки 	КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК Стоимость,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.СуммаРегл + ТаблицаВидыЗапасов.НДСРегл
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК НДСРегл,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.Сумма
	|			ИНАЧЕ ТаблицаВидыЗапасов.СуммаБезНДС
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьУпр,
	|	ВЫБОР 
	|		КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаВидыЗапасов.НДСУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК НДСУпр,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаРегл + ТаблицаВидыЗапасов.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК СтоимостьЗабалансоваяРегл,
	|	0										КАК ДопРасходы,
	|	0										КАК ДопРасходыБезНДС,
	|	0										КАК ДопРасходыРегл,
	|	0										КАК ДопРасходыУпр,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									КАК ВременнаяРазница,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.РезервПодОбесценениеРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеРегл,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаВидыЗапасов.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПодОбесценениеУпр,
	|	0										КАК КорСтоимость,
	|
	// Прочие поля
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|	КОНЕЦ                                    КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки   КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации          КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковТоваров КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныеДокументы
	|		ПО ТаблицаДокумента.Партия = ПервичныеДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам))
	|	И &ОтражатьСебестоимость
	|	И НЕ ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ЕСТЬNULL(ПервичныеДокументы.ТипПервичногоДокумента, НЕОПРЕДЕЛЕНО) = 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыПервичныхДокументов.ПриобретениеУПоставщика)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти

	Возврат ОписаниеОпераций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Прочее

// Определяет видимость группы формы, содержащей флажки видов учета.
// Используется в формах, в которых доступны все виды учета.
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковТоваров - Документ для которого неободимо вычислить показ группы
//
// Возвращаемое значение:
//	 Булево - Флаг, который сигнализирует о том, показывать или нет группу на форме
// 
Функция ВидимостьГруппУчета(Объект) Экспорт
	
	ВидимостьГруппУчета = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет")
		Или РасчетСебестоимостиПовтИсп.ФормироватьДвиженияПоРегистрамСебестоимости(НачалоМесяца(Объект.Дата), Истина);
	
	Возврат ВидимостьГруппУчета;
	
КонецФункции


// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстыЗапроса = Новый СписокЗначений;
		ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
		//++ Локализация
		ТекстЗапросаТаблицаДетализацияПартийТоваровДляНДСиУСН(Запрос, ТекстыЗапроса, Регистры);
		//-- Локализация
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
		
		ВводОстатковЛокализация.ВводОстатковТоваровДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	РасчетСебестоимостиПроведениеДокументов.ОтразитьВМеханизмеУчетаЗатратИСебестоимости(Документ, Запрос, ТекстыЗапроса, Регистры);
	
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	ОперацииДокумента = Новый Массив;
	ОперацииДокумента.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковСобственныхТоваров);
	ОперацииДокумента.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию);
	ОперацииДокумента.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков);
	
	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати                 = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор                  = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление                  = НСтр("ru = 'Задание на размещение товаров';
														|en = 'Put-away task'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции            = "ИспользоватьАдресноеХранениеСправочно";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати,
		"ХозяйственнаяОперация",
		ОперацииДокумента,
		ВидСравнения.ВСписке);
	
	ВводОстатковЛокализация.ВводОстатковТоваровДобавитьКомандыПечати(КомандыПечати);
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводОстатковТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатковТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатковТоваров.Склад) КАК СкладПредставление,
	|	ВводОстатковТоваров.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатковТоваров.Помещение) КАК ПомещениеПредставление,
	|	ВводОстатковТоваров.Дата КАК Дата,
	|	ВводОстатковТоваров.Номер КАК Номер,
	|	ВводОстатковТоваров.ИсправляемыйДокумент.Номер КАК НомерИсправляемогоДокумента,
	|	ВводОстатковТоваров.ИсправляемыйДокумент.Дата КАК ДатаИсправляемогоДокумента,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА ВводОстатковТоваров.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатковТоваров.Дата >= ВводОстатковТоваров.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ВводОстатковТоваров.Помещение.ИспользоватьАдресноеХранениеСправочно
	|							И (НЕ ВводОстатковТоваров.Помещение.ИспользоватьАдресноеХранение
	|								ИЛИ ВводОстатковТоваров.Дата < ВводОстатковТоваров.Помещение.ДатаНачалаАдресногоХраненияОстатков)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВводОстатковТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|						И (НЕ ВводОстатковТоваров.Склад.ИспользоватьАдресноеХранение
	|							ИЛИ ВводОстатковТоваров.Дата < ВводОстатковТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ВводОстатковТоваров.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатковТоваров.Дата >= ВводОстатковТоваров.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВводОстатковТоваров.Помещение.ИспользованиеРабочихУчастков
	|		ИНАЧЕ ВводОстатковТоваров.Склад.ИспользованиеРабочихУчастков
	|	КОНЕЦ КАК ИспользованиеРабочихУчастков,
	|	NULL КАК ВидОперации,
	|	ВводОстатковТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ВводОстатковТоваров КАК ВводОстатковТоваров
	|ГДЕ
	|	ВводОстатковТоваров.Ссылка В(&МассивОбъектов)
	|	И (ВводОстатковТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров)
	|			ИЛИ ВводОстатковТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ИЛИ ВводОстатковТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И (ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров)
	|			ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
	|			ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ВводОстатковТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка) КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдиницыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТовары.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТовары.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТовары.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	NULL КАК ПредставлениеСерии,
	|	ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"ТаблицаТовары.Номенклатура"));
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура();
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", МассивРезультатов[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам", МассивРезультатов[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям", МассивРезультатов[4]);
	
	ПараметрыПечати.ДополнительныеПараметры.Вставить("ТипЗадания", "ЗаданиеНаРазмещение");
	
	Возврат СтруктураДанныхДляПечати;

КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий)

	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Серия,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	Серии.Упаковка КАК Упаковка,
		|	Серии.КоличествоУпаковок КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Товары.Серия,
		|	Товары.Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Серии.Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Упаковка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Упаковка,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА НЕ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 14
	|								ИНАЧЕ 13
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|							И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий)
	|                          И НЕ &ТолькоСерииСУчетомОстатков
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 2
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Упаковка = СерииДляЗапроса.Упаковка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Упаковка = ТоварыДляЗапроса.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийПроизводство()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.НомерСтроки,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Упаковка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Упаковка,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПолученииМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Упаковка = СерииДляЗапроса.Упаковка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Упаковка = ТоварыДляЗапроса.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

//-- НЕ УТ

#КонецОбласти

//++ НЕ УТ

#Область СлужебныеПроцедурыЗаполненияПоДаннымОперативногоУчета

//++ Локализация
Функция ОстаткиПоТоварам(ДатаОстатков, ХозяйственнаяОперация, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)
	
	Запрос = Новый Запрос;
	
	Если Не ЗначениеЗаполнено(ПараметрыЗаполненияОстатков) 
		Или Не ПараметрыЗаполненияОстатков.Свойство("ОтражатьСебестоимость") Тогда
		ЗаполнятьПоСебестоимости = Истина;
	Иначе
		ЗаполнятьПоСебестоимости = Не ПараметрыЗаполненияОстатков.ОтражатьСебестоимость;
	КонецЕсли;
	
	Если ЗаполнятьПоСебестоимости Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпрОрганизации.ГоловнаяОрганизация КАК Организация,
		|	СпрОрганизации.Ссылка КАК ОбособленноеПодразделение
		|ПОМЕСТИТЬ
		|	ВтГоловныеОрганизации
		|ИЗ
		|	Справочник.Организации КАК СпрОрганизации
		|ГДЕ
		|	СпрОрганизации.Ссылка В (&МассивОрганизаций)
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Организации.ОбособленноеПодразделение КАК Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяУСН, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|		КОГДА ЕСТЬNULL(НастройкиУчетаНДССрезПоследних.ПрименяетсяУчетНДСПоФактическомуИспользованию, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|	КОНЕЦ КАК ВидДеятельностиНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяУСН, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|	КОНЕЦ КАК НалогообложениеНДС
		|ПОМЕСТИТЬ НалогообложенияОрганизаций
		|ИЗ
		|	ВтГоловныеОрганизации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Дата, Организация В
		|			(ВЫБРАТЬ
		|				ГоловныеОрганизации.Организация
		|			ИЗ
		|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиСистемыНалогообложенияСрезПоследних
		|		ПО Организации.Организация = НастройкиСистемыНалогообложенияСрезПоследних.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&Дата, Организация В
		|			(ВЫБРАТЬ
		|				ГоловныеОрганизации.Организация
		|			ИЗ
		|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)) КАК НастройкиУчетаНДССрезПоследних
		|		ПО Организации.Организация = НастройкиУчетаНДССрезПоследних.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ЗаполняемаяТабличнаяЧасть,
		|	ДанныеАналитики.Номенклатура,
		|	ДанныеАналитики.Характеристика,
		|	ДанныеАналитики.Серия,
		|	ДанныеАналитики.Назначение,
		|	ДанныеАналитики.МестоХранения КАК Склад,
		|	ДанныеАналитики.Партнер КАК Партнер,
		|	СебестоимостьТоваровОстатки.ВидЗапасов,
		|	СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры,
		|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК Количество,
		|	СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.ДопРасходыОстаток КАК Сумма,
		|	СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.ДопРасходыБезНДСОстаток КАК СуммаБезНДС,
		|	СебестоимостьТоваровОстатки.Организация КАК Организация,
		|	СебестоимостьТоваровОстатки.СтоимостьРеглОстаток КАК СуммаРегл,
		|	СебестоимостьТоваровОстатки.ПостояннаяРазницаОстаток КАК СуммаПР,
		|	СебестоимостьТоваровОстатки.ВременнаяРазницаОстаток КАК СуммаВР,
		|	&ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА СебестоимостьТоваровОстатки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА СебестоимостьТоваровОстатки.ВидДеятельностиНДС
		|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|					ИНАЧЕ НалогообложенияОрганизаций.ВидДеятельностиНДС
		|				КОНЕЦ
		|		ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
		|	КОНЕЦ КАК ВидДеятельностиНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|					ИНАЧЕ НалогообложенияОрганизаций.НалогообложениеНДС
		|				КОНЕЦ
		|		ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
		|	КОНЕЦ КАК НалогообложениеНДС,
		|	ДанныеАналитики.Подразделение КАК Подразделение,
		|	ДанныеАналитики.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
		|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА СебестоимостьТоваровОстатки.КоличествоОстаток = 0
		|			ТОГДА СебестоимостьТоваровОстатки.СтоимостьОстаток
		|		ИНАЧЕ СебестоимостьТоваровОстатки.СтоимостьОстаток / СебестоимостьТоваровОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
		|				И &АналитическийУчетПоГруппамПродукции
		|			ТОГДА СебестоимостьТоваровОстатки.ВидЗапасов.ГруппаПродукции
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ КАК ГруппаПродукции,
		|	СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.ДопРасходыОстаток - (СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.ДопРасходыБезНДСОстаток) КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.ДопРасходыБезНДСОстаток = СебестоимостьТоваровОстатки.СтоимостьРеглОстаток
		|			ТОГДА СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.ДопРасходыОстаток - (СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.ДопРасходыБезНДСОстаток)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НДСРегл,
		|	ДанныеАналитики.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|	ИСТИНА КАК ЦенаВключаетНДС
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК СебестоимостьТоваровОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК ДанныеАналитики
		|		ПО СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры = ДанныеАналитики.Ссылка
		|			И (ВЫБОР
		|				КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков)
		|					ТОГДА ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|				ИНАЧЕ НЕ ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
		|					ТОГДА СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
		|							ИЛИ СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|								И ДанныеАналитики.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер)
		|				КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию)
		|					ТОГДА СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|							И ДанныеАналитики.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
		|				ИНАЧЕ СебестоимостьТоваровОстатки.РазделУчета = ВЫБОР
		|						КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|						КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|					КОНЕЦ
		|			КОНЕЦ)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НалогообложенияОрганизаций КАК НалогообложенияОрганизаций
		|		ПО СебестоимостьТоваровОстатки.Организация = НалогообложенияОрганизаций.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПримененияЕНВДСрезПоследних
		|		ПО СебестоимостьТоваровОстатки.Организация = ПримененияЕНВДСрезПоследних.Организация
		|			И СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.МестоХранения = ПримененияЕНВДСрезПоследних.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК АналитикаПодразделение
		|		ПО АналитикаПодразделение.Ссылка = СебестоимостьТоваровОстатки.АналитикаФинансовогоУчета
		|ГДЕ
		|	СебестоимостьТоваровОстатки.КоличествоОстаток > 0
		|	И &УсловиеСклад
		|	И &УсловиеВидДеятельностиНДС
		|	И &УсловиеНалогообложениеНДС
		|	И &УсловиеПартнер
		|   И &УсловиеПодразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Склад,
		|	Партнер,
		|	НалогообложениеНДС,
		|	Подразделение";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	""Товары"" КАК ЗаполняемаяТабличнаяЧасть,
		|	&ХозяйственнаяОперация,
		|	ТоварыОрганизацийОстатки.Организация КАК Организация,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстатки.ВидЗапасов,
		|	ДанныеАналитики.МестоХранения КАК Склад,
		|	ДанныеАналитики.Номенклатура,
		|	ДанныеАналитики.Характеристика,
		|	ДанныеАналитики.Серия,
		|	ДанныеАналитики.Назначение,
		|	ДанныеАналитики.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
		|	ДанныеАналитики.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК Количество,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоУпаковок
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК ТоварыОрганизацийОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК ДанныеАналитики
		|		ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры = ДанныеАналитики.Ссылка
		|			И (ВЫБОР
		|				КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВозвратнойТарыПринятойОтПоставщиков)
		|					ТОГДА ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|				ИНАЧЕ НЕ ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|			КОНЕЦ)
		|ГДЕ
		|	ТоварыОрганизацийОстатки.КоличествоОстаток > 0
		|	И &УсловиеСклад
		|	И &УсловиеПодразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Номенклатура,
		|	Характеристика,
		|	Серия";
		
	КонецЕсли;
	
	Запрос.Параметры.Вставить("МассивОрганизаций",                                          МассивОрганизаций);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация",                                   ХозяйственнаяОперация);
	Запрос.Параметры.Вставить("Дата",                                                                        ДатаОстатков);
	Запрос.Параметры.Вставить("АналитическийУчетПоГруппамПродукции", ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	
	УсловиеСклад              = "ИСТИНА";
	УсловиеВидДеятельностиНДС = "ИСТИНА";
	УсловиеНалогообложениеНДС = "ИСТИНА";
	УсловиеПартнер            = "ИСТИНА";
	УсловиеПодразделение      = "ИСТИНА";
	
	Если ЗначениеЗаполнено(ДопОтбор) Тогда
		
		Если ДопОтбор.Свойство("Склад") Тогда
			УсловиеСклад = "ДанныеАналитики.СкладскаяТерритория = &Склад";
			Запрос.Параметры.Вставить("Склад", ДопОтбор.Склад);
		КонецЕсли;
		
		Если ДопОтбор.Свойство("ВидДеятельностиНДС") Тогда
			УсловиеВидДеятельностиНДС = "ВЫБОР
									|		КОГДА СебестоимостьТоваровОстатки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
									|			ТОГДА СебестоимостьТоваровОстатки.ВидДеятельностиНДС
									|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
									|			ТОГДА ВЫБОР
									|					КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
									|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
									|					ИНАЧЕ НалогообложенияОрганизаций.ВидДеятельностиНДС
									|				КОНЕЦ
									|		ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
									|	КОНЕЦ = &ВидДеятельностиНДС";
			Запрос.Параметры.Вставить("ВидДеятельностиНДС", ДопОтбор.ВидДеятельностиНДС);
		КонецЕсли;
		
		Если ДопОтбор.Свойство("НалогообложениеНДС") Тогда
			УсловиеНалогообложениеНДС = "ВЫБОР
									|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
									|			ТОГДА ВЫБОР
									|					КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
									|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
									|					ИНАЧЕ НалогообложенияОрганизаций.НалогообложениеНДС
									|				КОНЕЦ
									|		ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
									|	КОНЕЦ = &НалогообложениеНДС";
			Запрос.Параметры.Вставить("НалогообложениеНДС", ДопОтбор.НалогообложениеНДС);
		КонецЕсли;
		
		Если ДопОтбор.Свойство("Партнер") Тогда
			УсловиеПартнер = "ДанныеАналитики.Партнер = &Партнер";
			Запрос.Параметры.Вставить("Партнер", ДопОтбор.Партнер);
		КонецЕсли;
		
		Если ДопОтбор.Свойство("Подразделение") Тогда
			УсловиеПодразделение = "ДанныеАналитики.Подразделение = &Подразделение";
			Запрос.Параметры.Вставить("Подразделение", ДопОтбор.Подразделение);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст , "&УсловиеСклад",              УсловиеСклад);
	Запрос.Текст = СтрЗаменить(Запрос.Текст , "&УсловиеВидДеятельностиНДС", УсловиеВидДеятельностиНДС);
	Запрос.Текст = СтрЗаменить(Запрос.Текст , "&УсловиеНалогообложениеНДС", УсловиеНалогообложениеНДС);
	Запрос.Текст = СтрЗаменить(Запрос.Текст , "&УсловиеПартнер",            УсловиеПартнер);
	Запрос.Текст = СтрЗаменить(Запрос.Текст , "&УсловиеПодразделение",      УсловиеПодразделение);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции
//-- Локализация
#КонецОбласти

//-- НЕ УТ

#КонецОбласти

#КонецЕсли
