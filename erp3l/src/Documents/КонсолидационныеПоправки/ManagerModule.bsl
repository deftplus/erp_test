
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "ПериодОтчета, ДатаОкончания", "ПериодОтчета", Отказ);
	Реквизиты.Вставить("ГраницыПериода",			МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты,,Истина));
	Реквизиты.Вставить("Период",					КонецДня(Реквизиты.ГраницыПериода.ДатаОкончания));
	Реквизиты.Вставить("ГраницыПредыдущегоПериода",	МСФОВНАВызовСервераУХ.ПолучитьГраницыПериодаДокумента(Реквизиты, -1, Истина));
	Реквизиты.Вставить("ДатаОкончания", 			КонецДня(Реквизиты.ДатаОкончания));
	
	КонсолидирующаяОрганизация = УправлениеРабочимиПроцессамиУХ.ПолучитьКонсолидирующуюОрганизацию(
																		Реквизиты.Организация,
																		Реквизиты.Сценарий, 
																		Реквизиты.ПериодОтчета);
	
	Реквизиты.Вставить("КонсолидирующаяОрганизация", КонсолидирующаяОрганизация);
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);	
	
	РеквизитыПроверки = Новый Структура("КонсолидирующаяОрганизация", НСтр("ru = 'Консолидирующая организация'"));
	МСФОУХ.ПроверитьРеквизиты(Реквизиты, Отказ);
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Сценарий",					Реквизиты.Сценарий);
	Запрос.УстановитьПараметр("ОрганизацияКонсолидирующая",	Реквизиты.КонсолидирующаяОрганизация);
	Запрос.УстановитьПараметр("ВалютаОтчетности",			Реквизиты.ВалютаПредставления);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода",		Реквизиты.ДатаОкончания);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаДляПроводок(НомераТаблиц);
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);
	
КонецФункции

Функция ТекстЗапросаТаблицаДляПроводок(НомераТаблиц)
	
	НомераТаблиц.Вставить("втМетодДолевогоУчастия",			НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИнвестиции",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втТчИзменениеДолей",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("втИзменениеДолей",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПроводок",				НомераТаблиц.Количество());	
			
    Возврат	
	"ВЫБРАТЬ
	|	МетодДолевогоУчастия.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	МетодДолевогоУчастия.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	МетодДолевогоУчастия.СчетЧА КАК СчетЧА,
	|	МетодДолевогоУчастия.СчетДляМДУ КАК СчетДляМДУ,
	|	МетодДолевогоУчастия.ЧистыеАктивыПослеИзменения КАК ЧистыеАктивыПослеИзменения,
	|	МетодДолевогоУчастия.ЧистыеАктивыДоИзменения КАК ЧистыеАктивыДоИзменения,
	|	МетодДолевогоУчастия.ИзменениеЧистыхАктивов КАК ИзменениеЧистыхАктивов,
	|	МетодДолевогоУчастия.ФинансовыйРезультат КАК ФинансовыйРезультат,
	|	МетодДолевогоУчастия.ДоляВФинансовомРезультате КАК ДоляВФинансовомРезультате,
	|	МетодДолевогоУчастия.КлючСтроки КАК КлючСтроки
	|ПОМЕСТИТЬ втМетодДолевогоУчастия
	|ИЗ
	|	Документ.КонсолидационныеПоправки.МетодДолевогоУчастия КАК МетодДолевогоУчастия
	|ГДЕ
	|	МетодДолевогоУчастия.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИнвестиции.Инвестор.ФункциональнаяВалюта КАК ВалютаИнвестора,
	|	втИнвестиции.Инвестиции КАК Инвестиции,
	|	втИнвестиции.ИнвестицииФВ КАК ИнвестицииФВ,
	|	втИнвестиции.СтоимостьДоли КАК СтоимостьДоли,
	|	втИнвестиции.СтоимостьДолиФВ КАК СтоимостьДолиФВ,
	|	втИнвестиции.КлючСтроки КАК КлючСтроки,
	|	втИнвестиции.Инвестор КАК ОрганизацияИнвестор
	|ПОМЕСТИТЬ втИнвестиции
	|ИЗ
	|	Документ.КонсолидационныеПоправки.Инвестиции КАК втИнвестиции
	|ГДЕ
	|	втИнвестиции.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тчЭлиминация.КлючСтроки КАК КлючСтроки,
	|	тчЭлиминация.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	тчЭлиминация.ОтношениеКГруппеНаНачало КАК ОтношениеКГруппеНаНачало,
	|	тчЭлиминация.ОтношениеКГруппеНаКонец КАК ОтношениеКГруппеНаКонец,
	|	тчЭлиминация.ДатаПредыдущегоИзменения КАК ДатаНачалаИнтервала,
	|	тчЭлиминация.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	тчЭлиминация.ЭффективнаяДоляНаНачало КАК ЭффективнаяДоляНаНачало,
	|	тчЭлиминация.ЭффективнаяДоляНаКонец КАК ЭффективнаяДоляНаКонец,
	|	тчЭлиминация.Инвестиции КАК Инвестиции,
	|	тчЭлиминация.НДУ КАК НДУ,
	|	тчЭлиминация.ИзменениеНДУПриИзмененииДоли КАК ИзменениеНДУПриИзмененииДоли,
	|	тчЭлиминация.РезультатАкционеровОтИзмененияДоли КАК РезультатАкционеровОтИзмененияДоли,
	|	тчЭлиминация.ОбесценениеГудвилаИнвестицииПоМДУ КАК ОбесценениеГудвилаИнвестицииПоМДУ,
	|	тчЭлиминация.Гудвил КАК Гудвил,
	|	тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе КАК ВидОтношенияКГруппеНаКонец,
	|	тчЭлиминация.ОтношениеКГруппеНаНачало.ВидОтношенияКГруппе КАК ВидОтношенияКГруппеНаНачало
	|ПОМЕСТИТЬ втТчИзменениеДолей
	|ИЗ
	|	Документ.КонсолидационныеПоправки.ИзменениеДолей КАК тчЭлиминация
	|ГДЕ
	|	тчЭлиминация.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тчЭлиминация.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	тчЭлиминация.ОтношениеКГруппеНаКонец КАК ОтношениеКГруппеНаКонец,
	|	Контрагенты.Контрагент КАК Контрагент,
	|	тчЭлиминация.КлючСтроки КАК КлючСтроки,
	|	тчЭлиминация.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	тчЭлиминация.ДатаНачалаИнтервала КАК ДатаНачалаИнтервала,
	|	ВЫБОР
	|		КОГДА тчЭлиминация.ВидОтношенияКГруппеНаКонец В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Дочернее), ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Материнское))
	|			ТОГДА 1
	|		КОГДА тчЭлиминация.ВидОтношенияКГруппеНаКонец В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное), ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное))
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТипОтношенияКГруппеНаКонец,
	|	ВЫБОР
	|		КОГДА тчЭлиминация.ВидОтношенияКГруппеНаНачало В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Дочернее), ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Материнское))
	|			ТОГДА 1
	|		КОГДА тчЭлиминация.ВидОтношенияКГруппеНаНачало В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное), ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное))
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТипОтношенияКГруппеНаНачало,
	|	тчЭлиминация.ЭффективнаяДоляНаНачало КАК ЭффективнаяДоляНаНачало,
	|	тчЭлиминация.ЭффективнаяДоляНаКонец КАК ЭффективнаяДоляНаКонец,
	|	тчЭлиминация.Инвестиции КАК Инвестиции,
	|	тчЭлиминация.НДУ КАК НДУ,
	|	тчЭлиминация.ИзменениеНДУПриИзмененииДоли КАК ИзменениеНДУПриИзмененииДоли,
	|	тчЭлиминация.РезультатАкционеровОтИзмененияДоли КАК РезультатАкционеровОтИзмененияДоли,
	|	тчЭлиминация.ОбесценениеГудвилаИнвестицииПоМДУ КАК ОбесценениеГудвилаИнвестицииПоМДУ,
	|	СчетРезультатаПриобретения.Счет КАК СчетРезультатаПриобретения,
	|	СчетРезультатаПриобретения.Субконто1 КАК СчетРезультатаПриобретенияСубконто1,
	|	СчетРезультатаПриобретения.Субконто2 КАК СчетРезультатаПриобретенияСубконто2,
	|	СчетРезультатаПриобретения.Субконто3 КАК СчетРезультатаПриобретенияСубконто3,
	|	СчетИнвестиций.Счет КАК СчетИнвестиций,
	|	СчетИнвестиций.Субконто1 КАК СчетИнвестицийСубконто1,
	|	СчетИнвестиций.Субконто2 КАК СчетИнвестицийСубконто2,
	|	СчетИнвестиций.Субконто3 КАК СчетИнвестицийСубконто3,
	|	СчетУбыткаОтОбесцененияИнвестиций.Счет КАК СчетУбыткаОтОбесцененияИнвестиций,
	|	СчетУбыткаОтОбесцененияИнвестиций.Субконто1 КАК СчетУбыткаОтОбесцененияИнвестицийСубконто1,
	|	СчетУбыткаОтОбесцененияИнвестиций.Субконто2 КАК СчетУбыткаОтОбесцененияИнвестицийСубконто2,
	|	СчетУбыткаОтОбесцененияИнвестиций.Субконто3 КАК СчетУбыткаОтОбесцененияИнвестицийСубконто3
	|ПОМЕСТИТЬ втИзменениеДолей
	|ИЗ
	|	втТчИзменениеДолей КАК тчЭлиминация
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(Контрагенты.Ссылка) КАК Контрагент,
	|			Контрагенты.ОрганизационнаяЕдиница КАК ОрганизационнаяЕдиница
	|		ИЗ
	|			Справочник.Контрагенты КАК Контрагенты
	|		ГДЕ
	|			Контрагенты.ОрганизационнаяЕдиница В
	|					(ВЫБРАТЬ
	|						втТчИзменениеДолей.ОбъектИнвестирования
	|					ИЗ
	|						втТчИзменениеДолей КАК втТчИзменениеДолей)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Контрагенты.ОрганизационнаяЕдиница) КАК Контрагенты
	|		ПО тчЭлиминация.ОбъектИнвестирования = Контрагенты.ОрганизационнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетРезультатаПриобретения
	|		ПО (ВЫБОР
	|				КОГДА тчЭлиминация.Гудвил > 0
	|					ТОГДА СчетРезультатаПриобретения.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.Гудвил)
	|				ИНАЧЕ СчетРезультатаПриобретения.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ДоходОтВыгоднойПокупки)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетИнвестиций
	|		ПО (ВЫБОР
	|				КОГДА тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Дочернее))
	|					ТОГДА СчетИнвестиций.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВДочерниеПредприятия)
	|				КОГДА тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное))
	|					ТОГДА СчетИнвестиций.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВАссоциированныеПредприятия)
	|				КОГДА тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное))
	|					ТОГДА СчетИнвестиций.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.ИнвестицииВСовместныеПредприятия)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетУбыткаОтОбесцененияИнвестиций
	|		ПО (ВЫБОР
	|				КОГДА тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное))
	|					ТОГДА СчетУбыткаОтОбесцененияИнвестиций.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.УбытокОтОбесцененияИнвестицийВАссоциированные)
	|				КОГДА тчЭлиминация.ОтношениеКГруппеНаКонец.ВидОтношенияКГруппе В (ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное))
	|					ТОГДА СчетУбыткаОтОбесцененияИнвестиций.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.УбытокОтОбесцененияИнвестицийВСовместные)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСтроки,
	|	ТипОтношенияКГруппеНаКонец,
	|	ТипОтношенияКГруппеНаНачало
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли КАК ПериодОперации,
	|	втИзменениеДолей.ОбъектИнвестирования КАК ОрганизацияИнвестиция,
	|	втИнвестиции.ОрганизацияИнвестор КАК ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент КАК КонтрагентИнвестиция,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.РасчетГудвилаИсключениеИнвестиций) КАК Событие,
	|	втИнвестиции.ВалютаИнвестора КАК Валюта,
	|	втИзменениеДолей.СчетИнвестиций КАК СчетДт,
	|	втИзменениеДолей.СчетИнвестицийСубконто1 КАК СубконтоДт1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2 КАК СубконтоДт2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3 КАК СубконтоДт3,
	|	втИзменениеДолей.СчетРезультатаПриобретения КАК СчетКт,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1 КАК СубконтоКт1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2 КАК СубконтоКт2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3 КАК СубконтоКт3,
	|	-СУММА(втИнвестиции.Инвестиции) КАК СуммаВВалютеОтчетности,
	|	-СУММА(втИнвестиции.ИнвестицииФВ) КАК ИнвестицииФВ,
	|	-СУММА(втИнвестиции.Инвестиции) КАК Инвестиции
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнвестиции КАК втИнвестиции
	|		ПО втИзменениеДолей.КлючСтроки = втИнвестиции.КлючСтроки
	|ГДЕ
	|	втИзменениеДолей.Инвестиции <> 0
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	втИнвестиции.ВалютаИнвестора,
	|	втИзменениеДолей.СчетРезультатаПриобретения,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	втИзменениеДолей.ДатаНачалаИнтервала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.РасчетГудвилаЭлиминацияЧистыхАктивов),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетРезультатаПриобретения,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3,
	|	втЧистыеАктивы.СчетЧА,
	|	NULL,
	|	NULL,
	|	NULL,
	|	-СУММА(втЧистыеАктивы.ЧистыеАктивыПослеИзменения),
	|	NULL,
	|	NULL
	|ИЗ
	|	втМетодДолевогоУчастия КАК втЧистыеАктивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИзменениеДолей КАК втИзменениеДолей
	|		ПО (втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1)
	|			И (втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 0)
	|			И (втИзменениеДолей.КлючСтроки = втЧистыеАктивы.КлючСтроки)
	|			И (втЧистыеАктивы.ЧистыеАктивыПослеИзменения <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	втЧистыеАктивы.СчетЧА,
	|	втИзменениеДолей.СчетРезультатаПриобретения,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.РасчетГудвилаРасчетНДУ),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетРезультатаПриобретения,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3,
	|	СУММА(втИзменениеДолей.НДУ),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетНДУ
	|		ПО (СчетНДУ.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.НеконтролирующаяДоляУчастияОтчетногоПериода))
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 0
	|	И втИзменениеДолей.НДУ <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	втИзменениеДолей.СчетРезультатаПриобретения,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто1,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто2,
	|	втИзменениеДолей.СчетРезультатаПриобретенияСубконто3,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ОтражениеНДУ),
	|	&ВалютаОтчетности,
	|	втЧистыеАктивы.СчетЧА,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3,
	|	СУММА(втЧистыеАктивы.ФинансовыйРезультат),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМетодДолевогоУчастия КАК втЧистыеАктивы
	|		ПО втИзменениеДолей.КлючСтроки = втЧистыеАктивы.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетНДУ
	|		ПО (СчетНДУ.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.НеконтролирующаяДоляУчастияОтчетногоПериода))
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 1
	|	И втЧистыеАктивы.ФинансовыйРезультат <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	втЧистыеАктивы.СчетЧА,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ИзменениеДолиОтражениеНДУВКапитале),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3,
	|	-СУММА(ВЫБОР
	|			КОГДА втИзменениеДолей.Инвестиции = 0
	|				ТОГДА 0
	|			ИНАЧЕ втИзменениеДолей.ИзменениеНДУПриИзмененииДоли * втИнвестиции.Инвестиции / втИзменениеДолей.Инвестиции
	|		КОНЕЦ),
	|	-СУММА(втИнвестиции.ИнвестицииФВ),
	|	-СУММА(втИнвестиции.Инвестиции)
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетНДУ
	|		ПО (СчетНДУ.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.НеконтролирующаяДоляУчастияОтчетногоПериода))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнвестиции КАК втИнвестиции
	|		ПО (втИнвестиции.КлючСтроки = втИзменениеДолей.КлючСтроки)
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 1
	|	И втИзменениеДолей.ИзменениеНДУПриИзмененииДоли <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	СчетНДУ.Счет,
	|	СчетНДУ.Субконто1,
	|	СчетНДУ.Субконто2,
	|	СчетНДУ.Субконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ИзменениеДолиОтражениеИнвестицииВКапитале),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	СчетРезультата.Счет,
	|	СчетРезультата.Субконто1,
	|	СчетРезультата.Субконто2,
	|	СчетРезультата.Субконто3,
	|	СУММА(ВЫБОР
	|			КОГДА втИзменениеДолей.Инвестиции = 0
	|				ТОГДА 0
	|			ИНАЧЕ втИзменениеДолей.РезультатАкционеровОтИзмененияДоли * втИнвестиции.Инвестиции / втИзменениеДолей.Инвестиции
	|		КОНЕЦ),
	|	СУММА(втИнвестиции.ИнвестицииФВ),
	|	СУММА(втИнвестиции.Инвестиции)
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетРезультата
	|		ПО (СчетРезультата.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.РезультатДокупкиПродажиДолейДочернихКомпаний))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнвестиции КАК втИнвестиции
	|		ПО (втИнвестиции.КлючСтроки = втИзменениеДолей.КлючСтроки)
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 1
	|	И втИзменениеДолей.РезультатАкционеровОтИзмененияДоли <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	СчетРезультата.Счет,
	|	СчетРезультата.Субконто1,
	|	СчетРезультата.Субконто2,
	|	СчетРезультата.Субконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.БалансоваяСтоимостьПриВыбытииДоли),
	|	&ВалютаОтчетности,
	|	СчетРезультата.Счет,
	|	СчетРезультата.Субконто1,
	|	СчетРезультата.Субконто2,
	|	СчетРезультата.Субконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	СУММА(втИнвестиции.СтоимостьДоли),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнвестиции КАК втИнвестиции
	|		ПО втИзменениеДолей.КлючСтроки = втИнвестиции.КлючСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетРезультата
	|		ПО (СчетРезультата.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.РезультатОтВыбытияДолейВДочернихПредприятиях))
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 1
	|	И втИзменениеДолей.Инвестиции > втИнвестиции.СтоимостьДоли
	|	И втИнвестиции.СтоимостьДоли <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ДатаНачалаИнтервала,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИнвестиции.ОрганизацияИнвестор,
	|	втИзменениеДолей.Контрагент,
	|	СчетРезультата.Счет,
	|	СчетРезультата.Субконто1,
	|	СчетРезультата.Субконто2,
	|	СчетРезультата.Субконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ОбесценениеГудвила),
	|	&ВалютаОтчетности,
	|	СчетОбесцененияГудвила.Счет,
	|	СчетОбесцененияГудвила.Субконто1,
	|	СчетОбесцененияГудвила.Субконто2,
	|	СчетОбесцененияГудвила.Субконто3,
	|	СчетГудвила.Счет,
	|	СчетГудвила.Субконто1,
	|	СчетГудвила.Субконто2,
	|	СчетГудвила.Субконто3,
	|	СУММА(втИзменениеДолей.ОбесценениеГудвилаИнвестицииПоМДУ),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетОбесцененияГудвила
	|		ПО (СчетОбесцененияГудвила.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.УбытокОтОбесцененияГудвила))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФиксированныеСчетаУчетаБД КАК СчетГудвила
	|		ПО (СчетГудвила.Ссылка = ЗНАЧЕНИЕ(Справочник.ФиксированныеСчетаУчетаБД.Гудвил))
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 1
	|	И втИзменениеДолей.ОбесценениеГудвилаИнвестицииПоМДУ <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	СчетОбесцененияГудвила.Счет,
	|	СчетОбесцененияГудвила.Субконто1,
	|	СчетОбесцененияГудвила.Субконто2,
	|	СчетОбесцененияГудвила.Субконто3,
	|	СчетГудвила.Счет,
	|	СчетГудвила.Субконто1,
	|	СчетГудвила.Субконто2,
	|	СчетГудвила.Субконто3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ДоляГруппыВФинансовомРезультатеАссоциата),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	втМетодДолевогоУчастия.СчетДляМДУ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СУММА(втМетодДолевогоУчастия.ДоляВФинансовомРезультате),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМетодДолевогоУчастия КАК втМетодДолевогоУчастия
	|		ПО втИзменениеДолей.КлючСтроки = втМетодДолевогоУчастия.КлючСтроки
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 2
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 2
	|	И втМетодДолевогоУчастия.ДоляВФинансовомРезультате <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	втМетодДолевогоУчастия.СчетДляМДУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	NULL,
	|	втИзменениеДолей.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСобытийРегламента.ОбесценениеИнвестицийНаОтчетнуюДату),
	|	&ВалютаОтчетности,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестиций,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто1,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто2,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3,
	|	СУММА(втИзменениеДолей.ОбесценениеГудвилаИнвестицииПоМДУ),
	|	NULL,
	|	NULL
	|ИЗ
	|	втИзменениеДолей КАК втИзменениеДолей
	|ГДЕ
	|	втИзменениеДолей.ТипОтношенияКГруппеНаКонец = 2
	|	И втИзменениеДолей.ТипОтношенияКГруппеНаНачало = 2
	|	И втИзменениеДолей.ОбесценениеГудвилаИнвестицииПоМДУ <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзменениеДолей.ДатаИзмененияДоли,
	|	втИзменениеДолей.ОбъектИнвестирования,
	|	втИзменениеДолей.Контрагент,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестиций,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто1,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто2,
	|	втИзменениеДолей.СчетУбыткаОтОбесцененияИнвестицийСубконто3,
	|	втИзменениеДолей.СчетИнвестиций,
	|	втИзменениеДолей.СчетИнвестицийСубконто1,
	|	втИзменениеДолей.СчетИнвестицийСубконто2,
	|	втИзменениеДолей.СчетИнвестицийСубконто3";

КонецФункции

#КонецОбласти

#Область ФормированиеДвижений

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ)  Экспорт

	ТаблицаПроводки	= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводок;	
	Реквизиты		= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	
	ТаблицаПроводки.Колонки.Добавить("Организация");
	ТаблицаПроводки.Колонки.Добавить("Сценарий");
		
	Для каждого Проводка Из ТаблицаПроводки Цикл
		
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Сценарий = Реквизиты.Сценарий;		
		
		Если ЗначениеЗаполнено(Проводка.СчетДт) И ЗначениеЗаполнено(Проводка.СчетКт) Тогда
			ЗаполнитьКлючевыеСубконто(Проводка, Проводка, Истина, Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.РасчетныеДанныеРегламента.Загрузить(ТаблицаПроводки);
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда		
		
		ТаблицаПроводки.Колонки.ПериодОперации.Имя 			= "Период";
		ТаблицаПроводки.Колонки.СуммаВВалютеОтчетности.Имя 	= "СуммаВФункциональнойВалюте";
		ТаблицаПроводки.Колонки.Инвестиции.Имя 				= "СуммаВВалюте";
		
		МСФОВызовСервераУХ.ОтразитьДвиженияПоТаблицеПроводок(Движения, ТаблицаПроводки, Реквизиты, Отказ, Ложь);
		
		Если Отказ = Истина Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	МСФОВызовСервераУХ.ЗаписатьДвижения(Движения);// ТК должна видеть движения
	
	Если Реквизиты.ФормироватьПроводкиМСФО Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты.Вставить("ИсточникКорректировки",				"РасчетныеДанныеРегламента_ОперацииПериода");
	Реквизиты.Вставить("ВидОперации",						Справочники.ВидыОпераций.КонсолидационныеПоправки);
	Реквизиты.Вставить("ДвиженияПоРегиструБухгалтерии",		Реквизиты.ФормироватьПроводкиМСФО);
	Реквизиты.Вставить("КорректировкиЗначенийПоказателей",	Не Реквизиты.ФормироватьПроводкиМСФО);
	ТрансформационныеКорректировкиУХ.СформироватьКорректировку(Реквизиты, Отказ);
	
	Если Не Реквизиты.ФормироватьПроводкиМСФО Тогда
		
		Реквизиты.Вставить("ИсточникКорректировки",	"РасчетныеДанныеРегламента_ПовторПроводок");
		Реквизиты.Вставить("ВидОперации",			Справочники.ВидыОпераций.ПовторПроводокПоКонсолидационнымПоправкам);
		ТрансформационныеКорректировкиУХ.СформироватьКорректировку(Реквизиты, Отказ);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьКлючевыеСубконто(Движение, СтрокаИсточник, УстановитьДт = Истина, УстановитьКт = Истина) Экспорт

	Если УстановитьДт Тогда
	
		СубконтоСчета = УчетМСФОПовтИспУХ.ПолучитьПараметрыСубконтоИнвестиции(Движение.СчетДт, Истина);
		Для каждого СубконтоСчета Из СубконтоСчета Цикл
			Движение["СубконтоДт" + СубконтоСчета.Ключ] = СтрокаИсточник[СубконтоСчета.Значение];                        	
		КонецЦикла;
	
	КонецЕсли;
	
	Если УстановитьКт Тогда
	
		СубконтоСчета = УчетМСФОПовтИспУХ.ПолучитьПараметрыСубконтоИнвестиции(Движение.СчетКт, Истина);
		Для каждого СубконтоСчета Из СубконтоСчета Цикл
			Движение["СубконтоКт" + СубконтоСчета.Ключ] = СтрокаИсточник[СубконтоСчета.Значение];                        	
		КонецЦикла;
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеЧистыхАктивов

//Возвращает таблицу чистые активы(Организация,ЧистыеАктивы) по организациям на начало периода. ОСВ периодаСценария должны быть сформированы 
Функция ПолучитьТаблицуЧистыеАктивы(Контекст, ТаблицаИзмененияПериода, НаДатуДвижений = Истина) Экспорт
	
	Перем ТабКоэффициенты;

	РеквизитыУП = РеквизитыУП(Контекст);
	Контекст.ВидОтчетаОСВ = РеквизитыУП.ВидОтчетаОСВ;	
	ТабДляЭкземпляров = ПолучитьТаблицуДляЭкземпляров(Контекст, ТаблицаИзмененияПериода);
	
	Если НаДатуДвижений Тогда
		РезультатЭкземпляры = ПолучитьЭкземплярыЧА_НаДату(Контекст, ТабДляЭкземпляров);
	Иначе	
		РезультатЭкземпляры = ПолучитьЭкземплярыЧА_Коэффициент(Контекст, ТабДляЭкземпляров);
		ТабКоэффициенты = РезультатЭкземпляры.ТабКоэффициенты;
	КонецЕсли;
	
	ТабЭкземпляры = РезультатЭкземпляры.ТабЭкземпляры;	
	ТабЭкземпляры.Индексы.Добавить("ЭкземплярОтчета");
	
	ВидИтогаСКД = Перечисления.ВидыБухгалтерскихИтогов.СКД;
    ВидИтогаСКК = Перечисления.ВидыБухгалтерскихИтогов.СКК;
    
    МасВидИтогаПоСчету = Новый Массив;
    МасВидИтогаПоСчету.Добавить(ВидИтогаСКД);
    МасВидИтогаПоСчету.Добавить(ВидИтогаСКК);
	
    ТаблицаИсточник = ПолучитьТаблицуИсточникЧА(Контекст, ТабЭкземпляры, МасВидИтогаПоСчету);	
	ТабРезультат = ПолучитьТабЧистыеАктивы(ТаблицаИсточник, ТабЭкземпляры, НаДатуДвижений, ВидИтогаСКД);
		
	ТабРезультат.Свернуть("ОбъектИнвестирования,СчетЧА,ДатаИзмененияДоли", 
								"ЧистыеАктивыДоИзменения,ЧистыеАктивыПослеИзменения,
								|ЧистыеАктивыДоИзменения_Коэф, ЧистыеАктивыПослеИзменения_Коэф");
							
	ЗаполнитьКоэффициент(ТаблицаИзмененияПериода, ТабКоэффициенты, НаДатуДвижений);						
	РассчитатьПоКоэффициенту(ТабРезультат, ТабКоэффициенты, НаДатуДвижений);
			
	Возврат ТабРезультат;

КонецФункции

Функция ПолучитьТабЧистыеАктивы(ТаблицаИсточник, ТабЭкземпляры, НаДатуДвижений, ВидИтогаСКД)

	ТабРезультат = ТаблицаИсточник.СкопироватьКолонки("ЭкземплярОтчета,СчетЧА");
	отЧислоЧА = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,2);
	ТабРезультат.Колонки.Добавить("ДатаИзмененияДоли");
	ТабРезультат.Колонки.Добавить("ОбъектИнвестирования");
	ТабРезультат.Колонки.Добавить("ЧистыеАктивыДоИзменения", отЧислоЧА);
	ТабРезультат.Колонки.Добавить("ЧистыеАктивыПослеИзменения", отЧислоЧА);
	ТабРезультат.Колонки.Добавить("ЧистыеАктивыДоИзменения_Коэф", отЧислоЧА);
	ТабРезультат.Колонки.Добавить("ЧистыеАктивыПослеИзменения_Коэф", отЧислоЧА);
	
	Для каждого СтрокаЧА Из ТаблицаИсточник Цикл
		
		Отбор = Новый Структура("ЭкземплярОтчета", СтрокаЧА.ЭкземплярОтчета);
		СтрокиТаб = ТабЭкземпляры.НайтиСтроки(Отбор);
		Для каждого СтрокаТаб Из СтрокиТаб Цикл
			
			НоваяСтрока = ТабРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЧА);
			НоваяСтрока.ОбъектИнвестирования = СтрокаТаб.ОбъектИнвестирования;
			НоваяСтрока.ДатаИзмененияДоли = СтрокаТаб.ДатаИзмененияДоли;
			
			Коэф = ?(СтрокаЧА.ВидИтогаПоСчету = ВидИтогаСКД, -1, 1);
			
			Если (Не НаДатуДвижений) И СтрокаТаб.РассчитатьКоэффициент И СтрокаТаб.ПериодПослеДатыИзменения Тогда
				
				Если СтрокаТаб.НачалоПериода Тогда
					НоваяСтрока.ЧистыеАктивыДоИзменения_Коэф = СтрокаЧА.Значение * Коэф;
				Иначе
					НоваяСтрока.ЧистыеАктивыПослеИзменения_Коэф = СтрокаЧА.Значение * Коэф;
				КонецЕсли;
				
			Иначе
				
				Если СтрокаТаб.НачалоПериода Тогда
					НоваяСтрока.ЧистыеАктивыДоИзменения = СтрокаЧА.Значение * Коэф;
				Иначе
					НоваяСтрока.ЧистыеАктивыПослеИзменения = СтрокаЧА.Значение * Коэф;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабРезультат;

КонецФункции

Функция ПолучитьТаблицуИсточникЧА(Контекст, ТабЭкземпляры, МасВидИтогаПоСчету)
	
	Экземпляры = ТабЭкземпляры.Скопировать(,"ЭкземплярОтчета");
	Экземпляры.Свернуть("ЭкземплярОтчета");

	РеквизитыУП = РеквизитыУП(Контекст);
	
    ОтборВерсий = Новый Соответствие;	                        
    ОтборВерсий.Вставить("ЭкземплярОтчета", Экземпляры.ВыгрузитьКолонку("ЭкземплярОтчета"));
    ОтборВерсий.Вставить("Валюта", 			РеквизитыУП.ФункциональнаяВалюта);
    ОтборВерсий.Вставить("ВидОтчета", 		Контекст.ВидОтчетаОСВ);
    
    ОтборПоказателей = Новый Соответствие;
    ОтборПоказателей.Вставить("СчетБД.РазделПланаСчетов",	Справочники.РазделыПланаСчетов.Капитал);
    ОтборПоказателей.Вставить("ВидИтогаПоСчету",			МасВидИтогаПоСчету);
    ОтборПоказателей.Вставить("ПоказательОтчета.Владелец", 	ОтборВерсий.Получить("ВидОтчета"));
    
    ПоляВыборки = Новый Соответствие;	
	ПоляВыборки.Вставить("СчетЧА",			"СчетБД");
    ПоляВыборки.Вставить("Значение", 		"Значение");
    ПоляВыборки.Вставить("ЭкземплярОтчета",	"Версия.ЭкземплярОтчета");
    ПоляВыборки.Вставить("ВидИтогаПоСчету", "ВидИтогаПоСчету");	
    
    ДополнительныеПараметры = Новый Структура("ПолучитьТолькоСинтетику", Истина);
    
    ЗапросЧистыеАктивы = Справочники.ВидыОтчетов.ПолучитьЗапросТаблицыЗначенийПоказателей(
    													ОтборВерсий, 
														ОтборПоказателей, 
														Неопределено, 
														ПоляВыборки, 
														ДополнительныеПараметры);
    
    Возврат ЗапросЧистыеАктивы.Выполнить().Выгрузить();

КонецФункции

Процедура ЗаполнитьКоэффициент(ТаблицаИзмененияПериода, ТабКоэффициенты, НаДатуДвижений = Истина)

	Если НаДатуДвижений Тогда
		Если ТаблицаИзмененияПериода.Колонки.Найти("КоэффициентЧА") <> Неопределено Тогда
			ТаблицаИзмененияПериода.ЗаполнитьЗначения(0, "КоэффициентЧА");		
		КонецЕсли;		
	Иначе							
		
		Для каждого СтрокаТаб Из ТаблицаИзмененияПериода Цикл
			
			Отбор = Новый Структура("ОбъектИнвестирования,ДатаИзмененияДоли", 
							СтрокаТаб.ОбъектИнвестирования, СтрокаТаб.ДатаИзмененияДоли);
            
            Для каждого стр Из ТабКоэффициенты.НайтиСтроки(Отбор) Цикл
            	СтрокаТаб.КоэффициентЧА = стр.КоэффициентКон;
			КонецЦикла;	
		
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура РассчитатьПоКоэффициенту(ТабРезультат, ТабКоэффициенты, НаДатуДвижений = Истина)
	
	Если НаДатуДвижений Тогда
		Возврат;
	КонецЕсли;
	
    Для каждого СтрокаТаб Из ТабРезультат Цикл
        
        Если (СтрокаТаб.ЧистыеАктивыПослеИзменения_Коэф <> 0) 
            Или (СтрокаТаб.ЧистыеАктивыДоИзменения_Коэф <> 0) Тогда
            
            Отбор = Новый Структура("ОбъектИнвестирования,ДатаИзмененияДоли", СтрокаТаб.ОбъектИнвестирования, СтрокаТаб.ДатаИзмененияДоли);
            
            Для каждого стр Из ТабКоэффициенты.НайтиСтроки(Отбор) Цикл
                
				Если стр.КоэффициентКон = NULL Тогда
					СтрокаТаб.ЧистыеАктивыПослеИзменения = 0;
				ИначеЕсли (стр.КоэффициентКон <> 0) И (СтрокаТаб.ЧистыеАктивыПослеИзменения_Коэф <> 0) Тогда
                    СтрокаТаб.ЧистыеАктивыПослеИзменения = СтрокаТаб.ЧистыеАктивыПослеИзменения 
                    			+ (СтрокаТаб.ЧистыеАктивыПослеИзменения_Коэф - СтрокаТаб.ЧистыеАктивыПослеИзменения) * стр.КоэффициентКон;
                КонецЕсли;
				
				Если стр.КоэффициентНач = NULL Тогда
					СтрокаТаб.ЧистыеАктивыДоИзменения = 0;
				ИначеЕсли (стр.КоэффициентНач <> 0) И (СтрокаТаб.ЧистыеАктивыДоИзменения_Коэф <> 0) Тогда
                    СтрокаТаб.ЧистыеАктивыДоИзменения = СтрокаТаб.ЧистыеАктивыДоИзменения 
                    			+ (СтрокаТаб.ЧистыеАктивыДоИзменения_Коэф - СтрокаТаб.ЧистыеАктивыДоИзменения) * стр.КоэффициентНач;
                КонецЕсли;                

            КонецЦикла;
            
        КонецЕсли;
        
    КонецЦикла;

КонецПроцедуры

Функция ПолучитьЭкземплярыЧА_НаДату(Контекст, ТаблицаДляЭкземпляров, НаДатуДвижений = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	т.ОбъектИнвестирования,
	|	т.ДатаЭкземпляра,
	|	т.ДатаПредыдущегоИзменения,
	|	т.ДатаИзмененияДоли,
	|	т.НачалоПериода
	|ПОМЕСТИТЬ втТаблицаДляЭкземпляров
	|ИЗ
	|	&ТаблицаДляЭкземпляров КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка КАК ЭкземплярОтчета,
	|	НастраиваемыйОтчет.Организация,
	|	НастраиваемыйОтчет.ПериодОтчета,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаНачала КАК ДатаНачалаПериода,
	|	втТаблицаДляЭкземпляров.ДатаЭкземпляра,
	|	втТаблицаДляЭкземпляров.ДатаПредыдущегоИзменения,
	|	втТаблицаДляЭкземпляров.ДатаИзмененияДоли,
	|	втТаблицаДляЭкземпляров.НачалоПериода
	|ПОМЕСТИТЬ втЭкземпляры
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаДляЭкземпляров КАК втТаблицаДляЭкземпляров
	|		ПО НастраиваемыйОтчет.Организация = втТаблицаДляЭкземпляров.ОбъектИнвестирования
	|			И НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания = втТаблицаДляЭкземпляров.ДатаЭкземпляра
	|			И (НастраиваемыйОтчет.Сценарий = &Сценарий)
	|			И (НастраиваемыйОтчет.ВидОтчета = &ВидОтчетаОСВ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(втЭкземпляры.ЭкземплярОтчета) КАК ЭкземплярОтчета,
	|	втЭкземпляры.Организация КАК ОбъектИнвестирования,
	|	втЭкземпляры.ПериодОтчета,
	|	втЭкземпляры.ДатаПредыдущегоИзменения,
	|	втЭкземпляры.ДатаИзмененияДоли,
	|	втЭкземпляры.НачалоПериода
	|ИЗ
	|	втЭкземпляры КАК втЭкземпляры
	|
	|СГРУППИРОВАТЬ ПО
	|	втЭкземпляры.ДатаПредыдущегоИзменения,
	|	втЭкземпляры.ДатаИзмененияДоли,
	|	втЭкземпляры.НачалоПериода,
	|	втЭкземпляры.Организация,
	|	втЭкземпляры.ПериодОтчета";
	
	Запрос.УстановитьПараметр("ТаблицаДляЭкземпляров", 	ТаблицаДляЭкземпляров);
	Запрос.УстановитьПараметр("Сценарий",				Контекст.Сценарий);
	Запрос.УстановитьПараметр("ВидОтчетаОСВ",			Контекст.ВидОтчетаОСВ);
	
	Возврат Новый Структура("ТабЭкземпляры", Запрос.Выполнить().Выгрузить());
	
КонецФункции

Функция ПолучитьЭкземплярыЧА_Коэффициент(Контекст, ТаблицаДляЭкземпляров, НаДатуДвижений = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	т.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	т.ДатаЭкземпляра КАК ДатаЭкземпляра,
	|	т.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	т.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	т.НачалоПериода КАК НачалоПериода
	|ПОМЕСТИТЬ втТаблицаДляЭкземпляров
	|ИЗ
	|	&ТаблицаДляЭкземпляров КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка КАК ЭкземплярОтчета,
	|	НастраиваемыйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаНачала КАК ДатаНачалаПериода,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания КАК ДатаОкончанияПериода,
	|	втТаблицаДляЭкземпляров.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	втТаблицаДляЭкземпляров.ДатаЭкземпляра КАК ДатаЭкземпляра,
	|	втТаблицаДляЭкземпляров.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	втТаблицаДляЭкземпляров.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	втТаблицаДляЭкземпляров.НачалоПериода КАК НачалоПериода
	|ПОМЕСТИТЬ втЭкземплярыПоДате
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаДляЭкземпляров КАК втТаблицаДляЭкземпляров
	|		ПО НастраиваемыйОтчет.Организация = втТаблицаДляЭкземпляров.ОбъектИнвестирования
	|			И НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания = втТаблицаДляЭкземпляров.ДатаЭкземпляра
	|			И (НастраиваемыйОтчет.Сценарий = &Сценарий)
	|			И (НастраиваемыйОтчет.ВидОтчета = &ВидОтчетаОСВ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	т.ДатаЭкземпляра КАК ДатаЭкземпляра,
	|	т.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	т.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	т.НачалоПериода КАК НачалоПериода
	|ПОМЕСТИТЬ втПоКоэффициенту
	|ИЗ
	|	втТаблицаДляЭкземпляров КАК т
	|ГДЕ
	|	НЕ (т.ОбъектИнвестирования, т.ДатаЭкземпляра, т.НачалоПериода, т.ДатаИзмененияДоли) В
	|				(ВЫБРАТЬ
	|					т.ОбъектИнвестирования,
	|					т.ДатаЭкземпляра,
	|					т.НачалоПериода,
	|					т.ДатаИзмененияДоли
	|				ИЗ
	|					втЭкземплярыПоДате КАК т)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектИнвестирования,
	|	ДатаЭкземпляра,
	|	ДатаПредыдущегоИзменения,
	|	ДатаИзмененияДоли,
	|	НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка КАК ЭкземплярОтчета,
	|	НастраиваемыйОтчет.Организация КАК Организация,
	|	НастраиваемыйОтчет.ПериодОтчета КАК ПериодОтчета,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаНачала КАК ДатаНачалаПериода,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания КАК ДатаОкончанияПериода,
	|	втТаблицаДляЭкземпляров.ДатаЭкземпляра КАК ДатаЭкземпляра,
	|	втТаблицаДляЭкземпляров.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	втТаблицаДляЭкземпляров.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	втТаблицаДляЭкземпляров.НачалоПериода КАК НачалоПериода,
	|	ЛОЖЬ КАК ПериодПослеДатыИзменения
	|ПОМЕСТИТЬ втЭкземпляры
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПоКоэффициенту КАК втТаблицаДляЭкземпляров
	|		ПО НастраиваемыйОтчет.Организация = втТаблицаДляЭкземпляров.ОбъектИнвестирования
	|			И (НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания МЕЖДУ &ДатаНачалаПредГода И втТаблицаДляЭкземпляров.ДатаЭкземпляра)
	|			И (НастраиваемыйОтчет.Сценарий = &Сценарий)
	|			И (НастраиваемыйОтчет.ВидОтчета = &ВидОтчетаОСВ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастраиваемыйОтчет.Ссылка,
	|	НастраиваемыйОтчет.Организация,
	|	НастраиваемыйОтчет.ПериодОтчета,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаНачала,
	|	НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания,
	|	втТаблицаДляЭкземпляров.ДатаЭкземпляра,
	|	втТаблицаДляЭкземпляров.ДатаПредыдущегоИзменения,
	|	втТаблицаДляЭкземпляров.ДатаИзмененияДоли,
	|	втТаблицаДляЭкземпляров.НачалоПериода,
	|	ИСТИНА
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК НастраиваемыйОтчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПоКоэффициенту КАК втТаблицаДляЭкземпляров
	|		ПО НастраиваемыйОтчет.Организация = втТаблицаДляЭкземпляров.ОбъектИнвестирования
	|			И (НастраиваемыйОтчет.ПериодОтчета.ДатаОкончания МЕЖДУ втТаблицаДляЭкземпляров.ДатаЭкземпляра И &ДатаОкончанияСледГода)
	|			И (НастраиваемыйОтчет.Сценарий = &Сценарий)
	|			И (НастраиваемыйОтчет.ВидОтчета = &ВидОтчетаОСВ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОкончанияПериода,
	|	НастраиваемыйОтчет.ПериодОтчета,
	|	ДатаНачалаПериода,
	|	НастраиваемыйОтчет.Организация,
	|	ПериодПослеДатыИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЭкземпляры.Организация КАК Организация,
	|	втЭкземпляры.НачалоПериода КАК НачалоПериода,
	|	втЭкземпляры.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	ВЫБОР
	|		КОГДА втЭкземпляры.ПериодПослеДатыИзменения
	|			ТОГДА МИНИМУМ(втЭкземпляры.ДатаОкончанияПериода)
	|		ИНАЧЕ МАКСИМУМ(втЭкземпляры.ДатаОкончанияПериода)
	|	КОНЕЦ КАК ДатаОкончанияПериода,
	|	втЭкземпляры.ПериодПослеДатыИзменения КАК ПериодПослеДатыИзменения
	|ПОМЕСТИТЬ втОпределениеДатыОкончанияПериода
	|ИЗ
	|	втЭкземпляры КАК втЭкземпляры
	|
	|СГРУППИРОВАТЬ ПО
	|	втЭкземпляры.Организация,
	|	втЭкземпляры.ДатаИзмененияДоли,
	|	втЭкземпляры.ПериодПослеДатыИзменения,
	|	втЭкземпляры.НачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПослеДатыИзменения,
	|	ДатаИзмененияДоли,
	|	втЭкземпляры.НачалоПериода,
	|	Организация,
	|	ДатаОкончанияПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЭкземпляры.Организация КАК Организация,
	|	втЭкземпляры.ПериодОтчета КАК ПериодОтчета,
	|	втЭкземпляры.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	МИНИМУМ(втЭкземпляры.ДатаНачалаПериода) КАК ДатаНачалаПериода,
	|	втЭкземпляры.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	втЭкземпляры.НачалоПериода КАК НачалоПериода,
	|	втЭкземпляры.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	втЭкземпляры.ПериодПослеДатыИзменения КАК ПериодПослеДатыИзменения
	|ПОМЕСТИТЬ втОпределениеДатыНачала
	|ИЗ
	|	втЭкземпляры КАК втЭкземпляры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОпределениеДатыОкончанияПериода КАК втОпределениеДатыОкончанияПериода
	|		ПО втЭкземпляры.Организация = втОпределениеДатыОкончанияПериода.Организация
	|			И втЭкземпляры.ДатаИзмененияДоли = втОпределениеДатыОкончанияПериода.ДатаИзмененияДоли
	|			И втЭкземпляры.ПериодПослеДатыИзменения = втОпределениеДатыОкончанияПериода.ПериодПослеДатыИзменения
	|			И втЭкземпляры.НачалоПериода = втОпределениеДатыОкончанияПериода.НачалоПериода
	|			И втЭкземпляры.ДатаОкончанияПериода = втОпределениеДатыОкончанияПериода.ДатаОкончанияПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	втЭкземпляры.ДатаОкончанияПериода,
	|	втЭкземпляры.ДатаПредыдущегоИзменения,
	|	втЭкземпляры.Организация,
	|	втЭкземпляры.ПериодОтчета,
	|	втЭкземпляры.НачалоПериода,
	|	втЭкземпляры.ДатаИзмененияДоли,
	|	втЭкземпляры.ПериодПослеДатыИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОкончанияПериода,
	|	втЭкземпляры.ПериодОтчета,
	|	ДатаНачалаПериода,
	|	втЭкземпляры.НачалоПериода,
	|	Организация,
	|	втЭкземпляры.ПериодПослеДатыИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОпределениеДатыНачала.Организация КАК ОбъектИнвестирования,
	|	втОпределениеДатыНачала.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	втОпределениеДатыНачала.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втОпределениеДатыНачала.НачалоПериода
	|					И втОпределениеДатыНачала.ПериодПослеДатыИзменения
	|				ТОГДА втОпределениеДатыНачала.ДатаОкончанияПериода
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ДатаНачалаПериодаПосле,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА втОпределениеДатыНачала.НачалоПериода
	|					И НЕ втОпределениеДатыНачала.ПериодПослеДатыИзменения
	|				ТОГДА втОпределениеДатыНачала.ДатаОкончанияПериода
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ДатаНачалаПериодаДо,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ втОпределениеДатыНачала.НачалоПериода
	|					И втОпределениеДатыНачала.ПериодПослеДатыИзменения
	|				ТОГДА втОпределениеДатыНачала.ДатаОкончанияПериода
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ДатаОкончанияПериодаПосле,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ втОпределениеДатыНачала.НачалоПериода
	|					И НЕ втОпределениеДатыНачала.ПериодПослеДатыИзменения
	|				ТОГДА втОпределениеДатыНачала.ДатаОкончанияПериода
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ДатаОкончанияПериодаДо
	|ИЗ
	|	втОпределениеДатыНачала КАК втОпределениеДатыНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	втОпределениеДатыНачала.Организация,
	|	втОпределениеДатыНачала.ДатаПредыдущегоИзменения,
	|	втОпределениеДатыНачала.ДатаИзмененияДоли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЭкземпляры.ЭкземплярОтчета КАК ЭкземплярОтчета,
	|	втЭкземпляры.Организация КАК ОбъектИнвестирования,
	|	втЭкземпляры.ПериодОтчета КАК ПериодОтчета,
	|	втЭкземпляры.ДатаПредыдущегоИзменения КАК ДатаПредыдущегоИзменения,
	|	втЭкземпляры.ДатаИзмененияДоли КАК ДатаИзмененияДоли,
	|	втЭкземпляры.НачалоПериода КАК НачалоПериода,
	|	втЭкземпляры.ПериодПослеДатыИзменения КАК ПериодПослеДатыИзменения,
	|	ИСТИНА КАК РассчитатьКоэффициент
	|ИЗ
	|	втЭкземпляры КАК втЭкземпляры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОпределениеДатыНачала КАК втОпределениеДатыНачала
	|		ПО втЭкземпляры.Организация = втОпределениеДатыНачала.Организация
	|			И втЭкземпляры.ДатаИзмененияДоли = втОпределениеДатыНачала.ДатаИзмененияДоли
	|			И втЭкземпляры.ДатаОкончанияПериода = втОпределениеДатыНачала.ДатаОкончанияПериода
	|			И втЭкземпляры.ПериодОтчета = втОпределениеДатыНачала.ПериодОтчета
	|			И втЭкземпляры.ДатаНачалаПериода = втОпределениеДатыНачала.ДатаНачалаПериода
	|			И втЭкземпляры.ПериодПослеДатыИзменения = втОпределениеДатыНачала.ПериодПослеДатыИзменения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(втЭкземплярыПоДате.ЭкземплярОтчета),
	|	втЭкземплярыПоДате.ОбъектИнвестирования,
	|	втЭкземплярыПоДате.ПериодОтчета,
	|	втЭкземплярыПоДате.ДатаПредыдущегоИзменения,
	|	втЭкземплярыПоДате.ДатаИзмененияДоли,
	|	втЭкземплярыПоДате.НачалоПериода,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	втЭкземплярыПоДате КАК втЭкземплярыПоДате
	|
	|СГРУППИРОВАТЬ ПО
	|	втЭкземплярыПоДате.НачалоПериода,
	|	втЭкземплярыПоДате.ДатаИзмененияДоли,
	|	втЭкземплярыПоДате.ДатаПредыдущегоИзменения,
	|	втЭкземплярыПоДате.ОбъектИнвестирования,
	|	втЭкземплярыПоДате.ПериодОтчета";
	
	//втОпределениеДатыОкончанияПериода - определяем близкие даты оконачния для даты экземпляра
	//втОпределениеДатыНачала - если с одинаковой датой окончания несколько отчетов, 
	//							тогда точнее тот у которого период больше(например, отчет за год приоритетней декабрьского)
	
	ДатаОкончанияПериода = Контекст.ПериодОтчета.ДатаОкончания;
	
	Запрос.УстановитьПараметр("ТаблицаДляЭкземпляров", 	ТаблицаДляЭкземпляров);
	Запрос.УстановитьПараметр("Сценарий",				Контекст.Сценарий);
	Запрос.УстановитьПараметр("ВидОтчетаОСВ",			Контекст.ВидОтчетаОСВ);
	Запрос.УстановитьПараметр("НаДатуДвижений",			НаДатуДвижений);
	
	Запрос.УстановитьПараметр("ДатаНачалаПредГода",		НачалоГода(ДобавитьМесяц(ДатаОкончанияПериода, -12))	);
	Запрос.УстановитьПараметр("ДатаОкончанияСледГода",	КонецГода(ДобавитьМесяц(ДатаОкончанияПериода, 12))		);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = РезультатПакета.Количество()-1;
	
	отЧисло = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(4, 2);
	ТабКоэффициенты = РезультатПакета[КоличествоРезультатов-1].Выгрузить();
	ТабКоэффициенты.Колонки.Добавить("КоэффициентНач", отЧисло);
	ТабКоэффициенты.Колонки.Добавить("КоэффициентКон", отЧисло);	
	ТабКоэффициенты.Индексы.Добавить("ОбъектИнвестирования,ДатаИзмененияДоли");
	
	Для каждого стр Из ТабКоэффициенты Цикл
		стр.КоэффициентНач = ПолучитьКоэффициент(стр.ДатаПредыдущегоИзменения, стр.ДатаНачалаПериодаДо, стр.ДатаНачалаПериодаПосле);
		стр.КоэффициентКон = ПолучитьКоэффициент(стр.ДатаИзмененияДоли, стр.ДатаОкончанияПериодаДо, стр.ДатаОкончанияПериодаПосле);
				
	КонецЦикла;
	
	Возврат Новый Структура("ТабКоэффициенты,ТабЭкземпляры", 
								ТабКоэффициенты,
								РезультатПакета[КоличествоРезультатов].Выгрузить());
	
КонецФункции

Функция ПолучитьКоэффициент(ДатаЧА, ДатаНач = NULL, ДатаКон = NULL) Экспорт

	Если (ДатаКон = NULL) Или (ДатаНач = NULL) Тогда			
		Возврат NULL; // если нет хотя бы одного отчета то сумму ЧА не расчитываем
	КонецЕсли;
		
	ДатаНач_месяц = ДатаНач;
	Интервал = ДатаКон - ДатаНач_месяц;
	
	Возврат ?(Интервал = 0, 0, (ДатаЧА - ДатаНач_месяц) / Интервал);		

КонецФункции

Функция ПолучитьТаблицуДляЭкземпляров(Контекст, ТабДоли)

	Если ТипЗнч(ТабДоли) = Тип("ТаблицаЗначений") Тогда
		ТабРезультат = ТабДоли.Скопировать(,"ОбъектИнвестирования,ДатаИзмененияДоли,ДатаПредыдущегоИзменения");
	Иначе
		ТабРезультат = ТабДоли.Выгрузить(,"ОбъектИнвестирования,ДатаИзмененияДоли,ДатаПредыдущегоИзменения");	
	КонецЕсли;	
	
	ТабРезультат.Колонки.Добавить("ДатаЭкземпляра", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	ТабРезультат.ЗагрузитьКолонку(ТабРезультат.ВыгрузитьКолонку("ДатаИзмененияДоли"), "ДатаЭкземпляра");	
	ТабРезультат.Колонки.Добавить("НачалоПериода", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	
	ЧислоСтрок = ТабРезультат.Количество()-1;
	ДатаНачалаПериода = Контекст.ПериодОтчета.ДатаНачала;
	ДатаНачалаПредПериода = ОбщегоНазначенияУХ.ДобавитьДень(ДатаНачалаПериода, -1);
	Для НомерСтроки = 0 По ЧислоСтрок Цикл
		
		СтрокаИсточник = ТабРезультат.Получить(НомерСтроки);
		
		НоваяСтрока = ТабРезультат.Добавить();		
		НоваяСтрока.ОбъектИнвестирования		= СтрокаИсточник.ОбъектИнвестирования;
		НоваяСтрока.ДатаПредыдущегоИзменения	= СтрокаИсточник.ДатаПредыдущегоИзменения;
		НоваяСтрока.ДатаИзмененияДоли			= СтрокаИсточник.ДатаИзмененияДоли;
		НоваяСтрока.НачалоПериода				= СтрокаИсточник.ДатаПредыдущегоИзменения = ДатаНачалаПериода;
		
		Если СтрокаИсточник.ДатаПредыдущегоИзменения = ДатаНачалаПериода Тогда
			НоваяСтрока.ДатаЭкземпляра = ДатаНачалаПредПериода;
		Иначе
			НоваяСтрока.ДатаЭкземпляра = СтрокаИсточник.ДатаПредыдущегоИзменения;
		КонецЕсли;		
		
	КонецЦикла;	
	
	Возврат ТабРезультат;

КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Функция ЗаполнитьПоМСФО(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Сценарий = ДокументОбъект.Сценарий;
	ПериодОтчета = ДокументОбъект.ПериодОтчета;
	
	РеквизитыУП = РеквизитыУП(ДокументОбъект);
	КонсолидирующаяОрганизация = ДокументОбъект.ДополнительныеСвойства.КонсолидирующаяОрганизация;
	ВалютаГруппы = РеквизитыУП.ФункциональнаяВалюта;	
	
	ТаблицаПериметр = ПолучитьТаблицуПериметра(Сценарий, ПериодОтчета, КонсолидирующаяОрганизация);
	ТаблицаПериметр.Колонки.ИндивидуальнаяОрганизация.Имя = "ОбъектИнвестирования";
	ИзменениеДолей = ПолучитьТаблицаИзмененийПериода(Сценарий, ПериодОтчета, ТаблицаПериметр);
	ТабИнвестиции = ПолучитьТаблицуОборотовПрямыеИнвестиции(Сценарий, ПериодОтчета, ТаблицаПериметр, ВалютаГруппы);
	
	ДокументОбъект.ИзменениеДолей.Загрузить(ИзменениеДолей);
	ДокументОбъект.ИзменениеДолей.Сортировать("ОбъектИнвестирования,ДатаИзмененияДоли Возр");
	ОбработкаТабличныхЧастейКлиентСерверУХ.ПронумероватьКлючСтрокиВладельца(ДокументОбъект.ИзменениеДолей);
	
	ДокументОбъект.МетодДолевогоУчастия.Очистить();
	ЗаполнитьЧистыеАктивыПоИзменениюДолей(ДокументОбъект, КонсолидирующаяОрганизация, ИзменениеДолей);
		
	ЗагрузитьПрямыеИнвестиции(ДокументОбъект, ТабИнвестиции);
	
	ЗагрузитьДанныеДляРасчетаОбесцененияГудвила(ДокументОбъект, ТаблицаПериметр, КонсолидирующаяОрганизация);

	ОбработатьТЧ_ИзменениеДолей(ДокументОбъект, КонсолидирующаяОрганизация);
	
	ОбработатьТЧ_МетодДолевогоУчастия(ДокументОбъект, ДокументОбъект.МетодДолевогоУчастия);
	
КонецФункции

Процедура ЗагрузитьДанныеДляРасчетаОбесцененияГудвила(ДокументОбъект, ТаблицаПериметр, КонсолидирующаяОрганизация)
	
	РеквизитыУП = РеквизитыУП(ДокументОбъект);
	
   	ВидыИтога = МСФОВызовСервераУХ.ПолучитьСтруктуруСоЗначениямиПеречисления("ВидыБухгалтерскихИтогов");
		
	МасВидИтогаПоСчету = Новый Массив;
	МасВидИтогаПоСчету.Добавить(ВидыИтога.СКД);
	МасВидИтогаПоСчету.Добавить(ВидыИтога.СКК);
	
	ОтборВерсий = Новый Соответствие;	
	ОтборВерсий.Вставить("Сценарий",				ДокументОбъект.Сценарий);
	ОтборВерсий.Вставить("Организация",				КонсолидирующаяОрганизация);	
	ОтборВерсий.Вставить("Валюта", 					РеквизитыУП.ФункциональнаяВалюта);
	ОтборВерсий.Вставить("ВидОтчетаПоПоказателям", 	Истина);
	
	ОтборПоказателей = Новый Соответствие;
	ОтборПоказателей.Вставить("СчетБД",				Справочники.ФиксированныеСчетаУчетаБД.Гудвил.Счет);
	ОтборПоказателей.Вставить("ВидИтогаПоСчету",	МасВидИтогаПоСчету);	
	
	ПоляВыборки = Новый Соответствие;
	ПоляВыборки.Вставить("Организация",			"Организация");	
	ПоляВыборки.Вставить("ВидИтогаПоСчету",		"ВидИтогаПоСчету");
	ПоляВыборки.Вставить("Значение",			"Значение");	
		
	Запрос = Справочники.ВидыОтчетов.ПолучитьЗапросТаблицыЗначенийПоказателей(ОтборВерсий, ОтборПоказателей, Неопределено, ПоляВыборки);
	
	ТаблицаПриемник = Запрос.Выполнить().Выгрузить();
	ТаблицаПриемник.Колонки.Добавить("ГудвилНаОтчетнуюДату");
	ТаблицаПриемник.Колонки.Добавить("ЧистыеАктивыНаОтчетнуюДату");
	ТаблицаПриемник.Колонки.Организация.Имя = "ОбъектИнвестирования";
	
	Для каждого СтрокаТаб Из ТаблицаПриемник Цикл
	
		Если СтрокаТаб.ВидИтогаПоСчету = ВидыИтога.СКД Тогда
			СтрокаТаб.ГудвилНаОтчетнуюДату = СтрокаТаб.Значение;
		ИначеЕсли СтрокаТаб.ВидИтогаПоСчету = ВидыИтога.СКК Тогда
			СтрокаТаб.ГудвилНаОтчетнуюДату = -СтрокаТаб.Значение;
		КонецЕсли;
	
	КонецЦикла;
	
	//ЧА на конец ПериодаОтчета
	ОтборВерсий.Вставить("Организация", ТаблицаПериметр.ВыгрузитьКолонку("ОбъектИнвестирования"));
	
	ОтборПоказателей = Новый Соответствие;
	ОтборПоказателей.Вставить("СчетБД.РазделПланаСчетов",Справочники.РазделыПланаСчетов.Капитал);
	ОтборПоказателей.Вставить("ВидИтогаПоСчету",		МасВидИтогаПоСчету);
		
	Запрос = Справочники.ВидыОтчетов.ПолучитьЗапросТаблицыЗначенийПоказателей(ОтборВерсий, ОтборПоказателей, Неопределено, ПоляВыборки);
	ТаблицаИсточник = Запрос.Выполнить().Выгрузить();
	ТаблицаИсточник.Колонки.Добавить("ЧистыеАктивыНаОтчетнуюДату");
	
	Для каждого СтрокаТаб Из ТаблицаИсточник Цикл
		
		Если СтрокаТаб.ВидИтогаПоСчету = ВидыИтога.СКД Тогда
			СтрокаТаб.ЧистыеАктивыНаОтчетнуюДату = - СтрокаТаб.Значение;
		ИначеЕсли СтрокаТаб.ВидИтогаПоСчету = ВидыИтога.СКК Тогда
			СтрокаТаб.ЧистыеАктивыНаОтчетнуюДату = СтрокаТаб.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначений(ТаблицаИсточник, ТаблицаПриемник);	
	ТаблицаПриемник.Свернуть("ОбъектИнвестирования", "ГудвилНаОтчетнуюДату,ЧистыеАктивыНаОтчетнуюДату");
	ТаблицаПриемник.Индексы.Добавить("ОбъектИнвестирования");
	
	Для каждого СтрокаДоля Из ДокументОбъект.ИзменениеДолей Цикл
		Если СтрокаДоля.ДатаИзмененияДоли = ДокументОбъект.ПериодОтчета.ДатаОкончания Тогда
			ДанныеГудвила = ТаблицаПриемник.Найти(СтрокаДоля.ОбъектИнвестирования, "ОбъектИнвестирования");
			Если ДанныеГудвила <> Неопределено Тогда
				СтрокаДоля.ГудвилНаОтчетнуюДату = ДанныеГудвила.ГудвилНаОтчетнуюДату;
				СтрокаДоля.ЧистыеАктивыНаОтчетнуюДату = ДанныеГудвила.ЧистыеАктивыНаОтчетнуюДату;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

// Функция - Получить таблицу периметра по консолидирующей организации без учета элиминирующих
//
// Параметры:
//  ОбработкаОбъект	 - <Контекст обработки с реквизитами (Сценарий, ПериодОтчета, ОрганизацияКонсолидирующая)> - контекст обработки
// 
// Возвращаемое значение:
//   - Таблица значений (ВидОтношенияКГруппе,ГруппаКонтрагента,ИндивидуальнаяОрганизация)
//
Функция ПолучитьТаблицуПериметра(Сценарий, ПериодОтчета, ОрганизацияКонсолидирующая) Экспорт

	ОтборРегламента = Новый Соответствие;
	ОтборРегламента.Вставить("Сценарий", 										Сценарий);
	ОтборРегламента.Вставить("ПериодОтчета",									ПериодОтчета);
	ОтборРегламента.Вставить("КонсолидирующаяОрганизация", 						ОрганизацияКонсолидирующая);
	ОтборРегламента.Вставить("ИндивидуальнаяОрганизация.ЭлиминирующаяОрганизация",	Ложь);
	
	ПоляВыборки = Новый Соответствие;
	ПоляВыборки.Вставить("ВидОтношенияКГруппе", "ВидОтношенияКГруппе");
	ПоляВыборки.Вставить("ГруппаКонтрагента", 	"ОтношениеКГруппе");
	
	Возврат УправлениеРабочимиПроцессамиУХ.ПолучитьДанныеРегламента(ОтборРегламента, ПоляВыборки);	

КонецФункции

Функция ПолучитьТаблицаИзмененийПериода(Сценарий, ПериодОтчета, ТаблицаПериметр)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыИзмененияПериода.Период КАК Период,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИзмененияПериода.Регистратор) КАК Регистратор,
	|	СтатусыИзмененияПериода.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИзмененияПериода.ОтношениеКГруппе) КАК ОтношениеКГруппеКоличество,
	|	СУММА(СтатусыИзмененияПериода.ЭффективнаяДоля) КАК ЭффективнаяДоля,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыИзмененияПериода.Инвестор) КАК Инвестор,
	|	ВЫБОР МАКСИМУМ(ВЫБОР СтатусыИзмененияПериода.ОтношениеКГруппе.ВидОтношенияКГруппе
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Дочернее)
	|					ТОГДА 3
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное)
	|					ТОГДА 2
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|		КОГДА 3
	|			ТОГДА МАКСИМУМ(ВЫБОР
	|						КОГДА СтатусыИзмененияПериода.ОтношениеКГруппе.ВидОтношенияКГруппе = ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Дочернее)
	|							ТОГДА СтатусыИзмененияПериода.ОтношениеКГруппе
	|						ИНАЧЕ NULL
	|					КОНЕЦ)
	|		КОГДА 2
	|			ТОГДА МАКСИМУМ(ВЫБОР
	|						КОГДА СтатусыИзмененияПериода.ОтношениеКГруппе.ВидОтношенияКГруппе = ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Ассоциированное)
	|							ТОГДА СтатусыИзмененияПериода.ОтношениеКГруппе
	|						ИНАЧЕ NULL
	|					КОНЕЦ)
	|		КОГДА 1
	|			ТОГДА МАКСИМУМ(ВЫБОР
	|						КОГДА СтатусыИзмененияПериода.ОтношениеКГруппе.ВидОтношенияКГруппе = ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.Совместное)
	|							ТОГДА СтатусыИзмененияПериода.ОтношениеКГруппе
	|						ИНАЧЕ NULL
	|					КОНЕЦ)
	|		ИНАЧЕ МАКСИМУМ(ВЫБОР
	|					КОГДА СтатусыИзмененияПериода.ОтношениеКГруппе.ВидОтношенияКГруппе = ЗНАЧЕНИЕ(Перечисление.ВидыОтношенийКГруппе.ТретьиСтороны)
	|						ТОГДА СтатусыИзмененияПериода.ОтношениеКГруппе
	|					ИНАЧЕ NULL
	|				КОНЕЦ)
	|	КОНЕЦ КАК ОтношениеКГруппе,
	|	ЕСТЬNULL(МАКСИМУМ(СтатусыИзмененияПериода.СостояниеДо), ЛОЖЬ) КАК СостояниеДо
	|ПОМЕСТИТЬ втИзмененияСтатусов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Изменения.Период КАК Период,
	|		Изменения.Регистратор КАК Регистратор,
	|		Изменения.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|		Изменения.Инвестор КАК Инвестор,
	|		Изменения.ОтношениеКГруппе КАК ОтношениеКГруппе,
	|		Изменения.ЭффективнаяДоля КАК ЭффективнаяДоля,
	|		ЛОЖЬ КАК СостояниеДо
	|	ИЗ
	|		РегистрСведений.СтатусыОбъектовИнвестирования КАК Изменения
	|	ГДЕ
	|		Изменения.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И Изменения.Активность
	|		И Изменения.Сценарий = &Сценарий
	|		И Изменения.Инвестор В(&Инвестор)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(&ДатаОкончания, ДЕНЬ),
	|		СтатусыНаКонец.Регистратор,
	|		СтатусыНаКонец.ОбъектИнвестирования,
	|		СтатусыНаКонец.Инвестор,
	|		СтатусыНаКонец.ОтношениеКГруппе,
	|		СтатусыНаКонец.ЭффективнаяДоля,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.СтатусыОбъектовИнвестирования.СрезПоследних(
	|				&ДатаОкончания,
	|				Сценарий = &Сценарий
	|					И Инвестор В (&Инвестор)) КАК СтатусыНаКонец
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(СтатусыНаКонец.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&ДатаОкончаниеПред,
	|		СтатусыНаНачало.Регистратор,
	|		СтатусыНаНачало.ОбъектИнвестирования,
	|		СтатусыНаНачало.Инвестор,
	|		СтатусыНаНачало.ОтношениеКГруппе,
	|		СтатусыНаНачало.ЭффективнаяДоля,
	|		ИСТИНА
	|	ИЗ
	|		РегистрСведений.СтатусыОбъектовИнвестирования.СрезПоследних(
	|				&ДатаОкончаниеПред,
	|				Сценарий = &Сценарий
	|					И Инвестор В (&Инвестор)) КАК СтатусыНаНачало) КАК СтатусыИзмененияПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыИзмененияПериода.Период,
	|	СтатусыИзмененияПериода.ОбъектИнвестирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОбъектИнвестирования,
	|	СостояниеДо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИзмененияСтатусов.Период КАК Период,
	|	втИзмененияСтатусов.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	втИзмененияСтатусов.ОтношениеКГруппе КАК ОтношениеКГруппе,
	|	втИзмененияСтатусов.ЭффективнаяДоля КАК ЭффективнаяДоля,
	|	МАКСИМУМ(втИзмененияСтатусовПредыдущее.Период) КАК ПериодПред
	|ПОМЕСТИТЬ втДатыПред
	|ИЗ
	|	втИзмененияСтатусов КАК втИзмененияСтатусов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИзмененияСтатусов КАК втИзмененияСтатусовПредыдущее
	|		ПО втИзмененияСтатусов.Период > втИзмененияСтатусовПредыдущее.Период
	|			И втИзмененияСтатусов.ОбъектИнвестирования = втИзмененияСтатусовПредыдущее.ОбъектИнвестирования
	|ГДЕ
	|	НЕ втИзмененияСтатусов.СостояниеДо
	|	И НЕ втИзмененияСтатусов.ОбъектИнвестирования В (&Инвестор)
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзмененияСтатусов.Период,
	|	втИзмененияСтатусов.ОбъектИнвестирования,
	|	втИзмененияСтатусов.ОтношениеКГруппе,
	|	втИзмененияСтатусов.ЭффективнаяДоля
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПред,
	|	ОтношениеКГруппе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИзменение.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	втИзменение.Период КАК ДатаИзмененияДоли,
	|	ЕстьNULL(втИзменение.ПериодПред, &ДатаНачала) КАК ДатаПредыдущегоИзменения,
	|	втИзменение.ОтношениеКГруппе КАК ОтношениеКГруппеНаКонец,
	|	ЕстьNULL(втПред.ОтношениеКГруппе, &ТретьиСтороны) КАК ОтношениеКГруппеНаНачало,
	|	втИзменение.ЭффективнаяДоля КАК ЭффективнаяДоляНаКонец,
	|	ЕстьNULL(втПред.ЭффективнаяДоля, 0) КАК ЭффективнаяДоляНаНачало
	|ИЗ
	|	втДатыПред КАК втИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИзмененияСтатусов КАК втПред
	|		ПО втИзменение.ОбъектИнвестирования = втПред.ОбъектИнвестирования
	|			И втИзменение.ПериодПред = втПред.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектИнвестирования,
	|	ДатаИзмененияДоли");
			
	МатеринскиеОрганизации 	= Новый Массив;
	
	Для каждого СтрокаПериметра Из ТаблицаПериметр Цикл
		
		Если СтрокаПериметра.ВидОтношенияКГруппе = ПредопределенноеЗначение("Перечисление.ВидыОтношенийКГруппе.Материнское") Тогда
			МатеринскиеОрганизации.Добавить(СтрокаПериметра.ОбъектИнвестирования);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Инвестор", МатеринскиеОрганизации);
	
	Запрос.УстановитьПараметр("ТретьиСтороны", 		Справочники.ГруппыКонтрагентов.ПолучитьТретьиСтороны());
	Запрос.УстановитьПараметр("ДатаНачала", 		ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 		КонецДня(ПериодОтчета.ДатаОкончания));
	Запрос.УстановитьПараметр("ДатаОкончаниеПред", 	КонецДня(НачалоДня(ПериодОтчета.ДатаНачала)-2));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Функция - Получить таблицу оборотов прямые инвестиции
//
// Параметры:
//  Сценарий					 - <СправочникСсылка.Сценарии>	- сценарий для отбора движений прямых инвестиций
//  ПериодОтчета				 - <СправочникСсылка.Периоды>	- период отчет для определения дат начала и окончания оборотов
//  МассивОрганизаций			 - <Массив(СправочникСсылка.Организации)> - организации, между которыми выбираются Движения инвестиций
//  ВалютаПредставленияГруппы	 - <СправочникСсылка.Валюты>	- валюта, в которую требуется пересчитать суммы прямых инвестиций
// 
// Возвращаемое значение:
//   - ТаблицаЗначений(Дата, Остаток, ОбъектИнвестирования, Инвестор, ДоляПрямогоВладения, 
//			Инвестиции, ИнвестицииФВ, СтоимостьДоли, СтоимостьДолиФВ, Курс)
//
Функция ПолучитьТаблицуОборотовПрямыеИнвестиции(Сценарий, ПериодОтчета, ТаблицаПериметр, ВалютаПредставленияГруппы)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДвижениеИнвестицийОбороты.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	ДвижениеИнвестицийОбороты.Инвестор КАК Инвестор,
	|	ДвижениеИнвестицийОбороты.Инвестор.ФункциональнаяВалюта КАК ВалютаИнвестора,
	|	ДвижениеИнвестицийОбороты.Период КАК Период,
	|	ДвижениеИнвестицийОбороты.ИнвестицииОборот КАК ИнвестицииОборот,
	|	ДвижениеИнвестицийОбороты.БалансоваяСтоимостьРасход КАК БалансоваяСтоимостьРасход
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	РегистрНакопления.ДвижениеИнвестиций.Обороты(
	|			&ДатаНачалаПериода,
	|			&ДатаОкончанияПериода,
	|			Регистратор,
	|			Сценарий = &Сценарий
	|				И ОбъектИнвестирования В (&ОбъектыИнвестирования)
	|				И Инвестор В (&Инвесторы)) КАК ДвижениеИнвестицийОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеИнвестицийОстатки.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	ДвижениеИнвестицийОстатки.Инвестор КАК Инвестор,
	|	ДвижениеИнвестицийОстатки.ИнвестицииОстаток КАК ИнвестицииОстаток,
	|	ДвижениеИнвестицийОстатки.Инвестор.ФункциональнаяВалюта КАК ВалютаИнвестора
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.ДвижениеИнвестиций.Остатки(
	|			&ДатаНачалаПериода,
	|			Сценарий = &Сценарий
	|				И ОбъектИнвестирования В (&ОбъектыИнвестирования)
	|				И Инвестор В (&Инвесторы)) КАК ДвижениеИнвестицийОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТребуемыеКурсы.Валюта КАК Валюта,
	|	ТребуемыеКурсы.Период КАК Период
	|ПОМЕСТИТЬ втТребуемыеКурсы
	|ИЗ
	|	(ВЫБРАТЬ
	|		т.ВалютаИнвестора КАК Валюта,
	|		т.Период КАК Период
	|	ИЗ
	|		втОбороты КАК т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&ВалютаПредставленияГруппы,
	|		т.Период
	|	ИЗ
	|		втОбороты КАК т) КАК ТребуемыеКурсы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКурсыНаНачало.Валюта КАК Валюта,
	|	втКурсыНаНачало.Кратность КАК Кратность,
	|	втКурсыНаНачало.Курс КАК Курс
	|ПОМЕСТИТЬ втКурсыНаНачало
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаНачалаПериода,
	|			Валюта В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					т.Валюта
	|				ИЗ
	|					втТребуемыеКурсы КАК т)) КАК втКурсыНаНачало
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИнвестицииПериода.Валюта КАК Валюта,
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Курс КАК Курс,
	|	ВЫБОР
	|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетсяПредыдущийКурс,
	|	втИнвестицииПериода.Период КАК Период
	|ПОМЕСТИТЬ втКурсыБезПредыдущих
	|ИЗ
	|	втТребуемыеКурсы КАК втИнвестицииПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втИнвестицииПериода.Валюта = КурсыВалют.Валюта
	|			И втИнвестицииПериода.Период = КурсыВалют.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКурсыБезПредыдущих.Валюта КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ втПериодыПредыдущихКурсов
	|ИЗ
	|	втКурсыБезПредыдущих КАК втКурсыБезПредыдущих
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО втКурсыБезПредыдущих.Валюта = КурсыВалют.Валюта
	|			И (КурсыВалют.Период МЕЖДУ &ДатаНачалаПериода И втКурсыБезПредыдущих.Период)
	|			И (втКурсыБезПредыдущих.ТребуетсяПредыдущийКурс)
	|
	|СГРУППИРОВАТЬ ПО
	|	втКурсыБезПредыдущих.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКурсыБезПредыдущих.Период КАК Период,
	|	втКурсыБезПредыдущих.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА НЕ втКурсыБезПредыдущих.ТребуетсяПредыдущийКурс
	|			ТОГДА втКурсыБезПредыдущих.Кратность
	|		ИНАЧЕ ЕСТЬNULL(КурсыВалютПредыдущие.Кратность, КурсыВалютНаНачалоПериода.Кратность)
	|	КОНЕЦ КАК Кратность,
	|	ВЫБОР
	|		КОГДА НЕ втКурсыБезПредыдущих.ТребуетсяПредыдущийКурс
	|			ТОГДА втКурсыБезПредыдущих.Курс
	|		ИНАЧЕ ЕСТЬNULL(КурсыВалютПредыдущие.Курс, КурсыВалютНаНачалоПериода.Курс)
	|	КОНЕЦ КАК Курс
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	втКурсыБезПредыдущих КАК втКурсыБезПредыдущих
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПериодыПредыдущихКурсов КАК втПериодыПредыдущихКурсов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалютПредыдущие
	|			ПО втПериодыПредыдущихКурсов.Валюта = КурсыВалютПредыдущие.Валюта
	|				И втПериодыПредыдущихКурсов.Период = КурсыВалютПредыдущие.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаНачало КАК КурсыВалютНаНачалоПериода
	|			ПО втПериодыПредыдущихКурсов.Валюта = КурсыВалютНаНачалоПериода.Валюта
	|				И (втПериодыПредыдущихКурсов.Период ЕСТЬ NULL)
	|		ПО (втКурсыБезПредыдущих.ТребуетсяПредыдущийКурс)
	|			И втКурсыБезПредыдущих.Валюта = втПериодыПредыдущихКурсов.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаНачалаПериода КАК Дата,
	|	ИСТИНА КАК Остаток,
	|	ДвижениеИнвестиций.ОбъектИнвестирования КАК ОбъектИнвестирования,
	|	ДвижениеИнвестиций.Инвестор КАК Инвестор,
	|	0 КАК Инвестиции,
	|	0 КАК ИнвестицииФВ,
	|	0 КАК СтоимостьДоли,
	|	0 КАК СтоимостьДолиФВ,
	|	ВЫБОР
	|		КОГДА ДвижениеИнвестиций.ВалютаИнвестора = &ВалютаПредставленияГруппы
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(втВалютаПредставленияГруппы.Курс, 0) = 0
	|				ИЛИ ЕСТЬNULL(втКурсыВалют.Кратность, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втКурсыВалют.Курс * втВалютаПредставленияГруппы.Кратность / (втВалютаПредставленияГруппы.Курс * втКурсыВалют.Кратность)
	|	КОНЕЦ КАК Курс
	|ИЗ
	|	втОстатки КАК ДвижениеИнвестиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаНачало КАК втКурсыВалют
	|		ПО ДвижениеИнвестиций.ВалютаИнвестора = втКурсыВалют.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыНаНачало КАК втВалютаПредставленияГруппы
	|		ПО (втВалютаПредставленияГруппы.Валюта = &ВалютаПредставленияГруппы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДвижениеИнвестиций.Период, ДЕНЬ),
	|	ЛОЖЬ,
	|	ДвижениеИнвестиций.ОбъектИнвестирования,
	|	ДвижениеИнвестиций.Инвестор,
	|	0,
	|	ДвижениеИнвестиций.ИнвестицииОборот,
	|	0,
	|	ДвижениеИнвестиций.БалансоваяСтоимостьРасход,
	|	ВЫБОР
	|		КОГДА ДвижениеИнвестиций.ВалютаИнвестора = &ВалютаПредставленияГруппы
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(втВалютаПредставленияГруппы.Курс, 0) = 0
	|				ИЛИ ЕСТЬNULL(втКурсыВалют.Кратность, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втКурсыВалют.Курс * втВалютаПредставленияГруппы.Кратность / (втВалютаПредставленияГруппы.Курс * втКурсыВалют.Кратность)
	|	КОНЕЦ
	|ИЗ
	|	втОбороты КАК ДвижениеИнвестиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК втКурсыВалют
	|		ПО ДвижениеИнвестиций.ВалютаИнвестора = втКурсыВалют.Валюта
	|			И ДвижениеИнвестиций.Период = втКурсыВалют.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК втВалютаПредставленияГруппы
	|		ПО (втВалютаПредставленияГруппы.Валюта = &ВалютаПредставленияГруппы)
	|			И ДвижениеИнвестиций.Период = втВалютаПредставленияГруппы.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектИнвестирования,
	|	Дата");
	
	Инвесторы 				= Новый Массив;
	ОбъектыИнвестирования 	= Новый Массив;
	
	Для каждого СтрокаПериметра Из ТаблицаПериметр Цикл
		
		Если СтрокаПериметра.ВидОтношенияКГруппе = ПредопределенноеЗначение("Перечисление.ВидыОтношенийКГруппе.Материнское") Тогда
			Инвесторы.Добавить(СтрокаПериметра.ОбъектИнвестирования);
		ИначеЕсли СтрокаПериметра.ВидОтношенияКГруппе = ПредопределенноеЗначение("Перечисление.ВидыОтношенийКГруппе.Дочернее") Тогда
			Инвесторы.Добавить(СтрокаПериметра.ОбъектИнвестирования);
			ОбъектыИнвестирования.Добавить(СтрокаПериметра.ОбъектИнвестирования);
		Иначе
			ОбъектыИнвестирования.Добавить(СтрокаПериметра.ОбъектИнвестирования);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Сценарий", 					Сценарий);
	Запрос.УстановитьПараметр("ДатаНачалаПериода", 			НачалоДня(ПериодОтчета.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончанияПериода", 		КонецДня(ПериодОтчета.ДатаОкончания));
	Запрос.УстановитьПараметр("Инвесторы", 					Инвесторы);
	Запрос.УстановитьПараметр("ОбъектыИнвестирования", 		ОбъектыИнвестирования);
	Запрос.УстановитьПараметр("ВалютаПредставленияГруппы",	ВалютаПредставленияГруппы);
	
	ТабИнвестиции = Запрос.Выполнить().Выгрузить();	
	РассчитатьСуммыВВалютеПредставления(ТабИнвестиции);

	Возврат ТабИнвестиции;

КонецФункции

Процедура РассчитатьСуммыВВалютеПредставления(ТабИнвестиции)
	
	Перем СтрокаПред;
	
    КоличествоСтрок = ТабИнвестиции.Количество();
        
    ИнвестицииОстатокФВ = 0;
    ИнвестицииОстаток = 0;
    ИнвестицииОстатокПред = 0;
    СтоимостьДолиФВ = 0;
    СтоимостьДоли = 0;
    СтоимостьДолиПред = 0;
    
    Для ИндексСтроки = 0 По КоличествоСтрок-1 Цикл
        
        СтрокаТаб = ТабИнвестиции.Получить(ИндексСтроки);
        
        ПерваяСтрокаОрганизации = (СтрокаПред = Неопределено) 
        Или (СтрокаПред.ОбъектИнвестирования <> СтрокаТаб.ОбъектИнвестирования);
        
        Если ПерваяСтрокаОрганизации Тогда		
            
            ИнвестицииОстатокФВ 	= СтрокаТаб.ИнвестицииФВ;
			ИнвестицииОстатокПред	= 0;
			ИнвестицииОстаток		= ИнвестицииОстатокФВ * СтрокаТаб.Курс;            
            
            СтоимостьДолиФВ 		= СтрокаТаб.СтоимостьДолиФВ;
            СтоимостьДолиПред		= 0;
            СтоимостьДоли			= СтоимостьДолиФВ * СтрокаТаб.Курс;			
            
        Иначе
            
            ИнвестицииОстатокФВ 	= СтрокаТаб.ИнвестицииФВ + ИнвестицииОстатокФВ;
			ИнвестицииОстатокПред	= ИнвестицииОстаток;
			ИнвестицииОстаток		= ИнвестицииОстатокФВ * СтрокаТаб.Курс;            
            
            СтоимостьДолиФВ 		= СтрокаТаб.СтоимостьДолиФВ + СтоимостьДолиФВ;
            СтоимостьДолиПред		= СтоимостьДоли;
            СтоимостьДоли			= СтоимостьДолиФВ * СтрокаТаб.Курс;			
            
        КонецЕсли;							
        
        СтрокаТаб.Инвестиции 	= ИнвестицииОстаток - ИнвестицииОстатокПред;
        СтрокаТаб.СтоимостьДоли = СтоимостьДоли - СтоимостьДолиПред;
        
        СтрокаПред = СтрокаТаб;		
        
    КонецЦикла;

КонецПроцедуры

Процедура ЗагрузитьПрямыеИнвестиции(ДокументОбъект, ТаблицаИнвестиции)

	ТаблицаИнвестиции.Колонки.Добавить("КлючСтроки");
	ТаблицаИнвестиции.Индексы.Добавить("ОбъектИнвестирования,Дата");
	
	Для каждого СтрокаДоля Из ДокументОбъект.ИзменениеДолей Цикл	
		
		ОтборСтрок = Новый Структура("ОбъектИнвестирования, Дата", СтрокаДоля.ОбъектИнвестирования, СтрокаДоля.ДатаИзмененияДоли);
		СтрокаДоля.Инвестиции = 0;
		СтрокаДоля.СтоимостьДоли = 0;
		Для каждого СтрокаИнвестиция Из ТаблицаИнвестиции.НайтиСтроки(ОтборСтрок) Цикл
			СтрокаИнвестиция.КлючСтроки = СтрокаДоля.КлючСтроки;
			СтрокаДоля.Инвестиции = СтрокаДоля.Инвестиции + СтрокаИнвестиция.Инвестиции;
			СтрокаДоля.СтоимостьДоли = СтрокаДоля.СтоимостьДоли + СтрокаИнвестиция.СтоимостьДоли;
		КонецЦикла;
		
	КонецЦикла;	
	
	ТаблицаИнвестиции.Индексы.Очистить();
	Для Каждого СтрокаДляУдаления Из ТаблицаИнвестиции.НайтиСтроки(Новый Структура("КлючСтроки", Неопределено)) Цикл
		ТаблицаИнвестиции.Удалить(СтрокаДляУдаления);
	КонецЦикла;	
	
	ДокументОбъект.Инвестиции.Загрузить(ТаблицаИнвестиции);

КонецПроцедуры

Процедура ОбработатьТЧ_ИзменениеДолей(ДокументОбъект, КонсолидирующаяОрганизация)
			
	КолонкиИтогов = "ЧистыеАктивыПослеИзменения,ЧистыеАктивыДоИзменения";	
	ИтогиЧА = ОбработкаТабличныхЧастейКлиентСерверУХ.ПолучитьКэшИтоговДеталиПоКлючуСтроки(
											ДокументОбъект.МетодДолевогоУчастия, КолонкиИтогов);	
											
	Контекст = Новый Структура("Сценарий,ПериодОтчета,КонсолидирующаяОрганизация,Ссылка", 
						ДокументОбъект.Сценарий, ДокументОбъект.ПериодОтчета, КонсолидирующаяОрганизация, ДокументОбъект.Ссылка);
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Контекст", Контекст);	
	КэшированныеЗначения.Вставить("ИтогиЧА", ИтогиЧА);
	
	СтруктураДействий = Новый Структура;
		
	СтруктураДействий.Вставить("РассчитатьКоэффициентПериода", ДокументОбъект.ПериодОтчета);
	СтруктураДействий.Вставить("РассчитатьФинансовыйРезультатПериода");
	СтруктураДействий.Вставить("РассчитатьДолюГруппыВФинансовомРезультате");
	
	СтруктураДействий.Вставить("РассчитатьНДУ");
	СтруктураДействий.Вставить("РассчитатьГудвил");
	СтруктураДействий.Вставить("РассчитатьОбесценениеГудвила");
	СтруктураДействий.Вставить("РассчитатьДолюИнвестораВФинансовомРезультатеПоМДУ");
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_Инвестиции(ДокументОбъект.ИзменениеДолей, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

Процедура ЗаполнитьЧистыеАктивыПоИзменениюДолей(ДокументОбъект, КонсолидирующаяОрганизация, ТаблицаИзмененияПериода) Экспорт

	ТаблицаЧА = ПолучитьТаблицуЧистыеАктивы(ДокументОбъект, ТаблицаИзмененияПериода,  Истина);
	
	КлючиСтрок = ДокументОбъект.ИзменениеДолей.Выгрузить(, "КоэффициентЧА,ОбъектИнвестирования,ДатаИзмененияДоли,КлючСтроки");
	КлючиСтрок.Индексы.Добавить("ОбъектИнвестирования,ДатаИзмененияДоли");
	
	СтрокиДляОбработки = Новый Массив;
	
	Для Каждого СтрокаЧА Из ТаблицаЧА Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("ОбъектИнвестирования", 	СтрокаЧА.ОбъектИнвестирования);
		Отбор.Вставить("ДатаИзмененияДоли", 	СтрокаЧА.ДатаИзмененияДоли);
		
		СтрокиКлючСтроки = КлючиСтрок.НайтиСтроки(Отбор);
		
		Для каждого СтрокаКлючСтроки Из СтрокиКлючСтроки Цикл
			
			СтрокаПриемник = ДокументОбъект.МетодДолевогоУчастия.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаЧА);
			СтрокаПриемник.ОбъектИнвестирования = СтрокаЧА.ОбъектИнвестирования;
			СтрокаПриемник.КлючСтроки 			= СтрокаКлючСтроки.КлючСтроки;
			
			СтрокиДляОбработки.Добавить(СтрокаПриемник);			
			
			Прервать;//возможна только одна строка с КлючомСтроки
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработатьТЧ_МетодДолевогоУчастия(ДокументОбъект, СтрокиДляОбработки) Экспорт

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСчетДляМДУ");
	СтруктураДействий.Вставить("РассчитатьИзменениеЧистыхАктивов");
	СтруктураДействий.Вставить("РассчитатьФинансовыйРезультат");
	СтруктураДействий.Вставить("РассчитатьДолюВФинансовомРезультате");
	
	КэшПоКлючуСтроки = ОбработкаТабличныхЧастейКлиентСерверУХ.ПолучитьКэшВладельцаПоКлючуСтроки(ДокументОбъект.ИзменениеДолей);
	КэшированныеЗначения = Новый Структура("КэшПоКлючуСтроки", КэшПоКлючуСтроки);
	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_Инвестиции(СтрокиДляОбработки, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

Функция ПолучитьИменаСубконто() Экспорт 

	Возврат Новый Структура;
	
КонецФункции

Функция ПолучитьЧистыеАктивы() Экспорт

	

КонецФункции

Функция РеквизитыУП(ДокументОбъект)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("РеквизитыУП") Тогда
		Возврат ДокументОбъект.ДополнительныеСвойства.РеквизитыУП;
	КонецЕсли;
	
	Организация = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДокументОбъект.ДополнительныеСвойства, "КонсолидирующаяОрганизация");
	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		Организация = УправлениеРабочимиПроцессамиУХ.ПолучитьКонсолидирующуюОрганизацию(
						ДокументОбъект.Организация, ДокументОбъект.Сценарий, ДокументОбъект.ПериодОтчета);
																	
		ДокументОбъект.ДополнительныеСвойства.Вставить("КонсолидирующаяОрганизация", Организация);
																	
	КонецЕсли;
	
	//РеквизитыУП = МСФОВызовСервераУХ.ОсновныеРеквизитыУП(Организация, ДокументОбъект.Дата, ДокументОбъект.Сценарий);
	
	ИменаУП = "ФормироватьПроводкиМСФО, ПланСчетовМСФО, ФункциональнаяВалюта, ВалютаПредоставленияОтчетности, ВидОтчетаОСВ";
	ТабУП = МСФОВызовСервераУХ.ЗначенияУП(МСФОВызовСервераУХ.ПутиРеквизитовУП(
				ИменаУП, Организация, ДокументОбъект.Дата, ДокументОбъект.Сценарий));
	РеквизитыУП = МСФОВызовСервераУХ.ЗначенияПоОрганизацииУП(ТабУП);
    
	Если Не ЗначениеЗаполнено(РеквизитыУП.ВалютаПредоставленияОтчетности) Тогда
		
		ТекстОшибки = НСтр("ru = 'Для консолидирующей организации <%1> не указана валюта предоставления отчетности!'");
		ВызватьИсключение СтрШаблон(ТекстОшибки, Организация);
		
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("РеквизитыУП", РеквизитыУП);
	
	Возврат РеквизитыУП;

КонецФункции

#КонецОбласти

#КонецЕсли