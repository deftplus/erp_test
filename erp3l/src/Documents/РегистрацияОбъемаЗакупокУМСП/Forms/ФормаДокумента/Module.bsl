
#Область ОбработкаОсновныхСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьКатегорииПоКодам();
	ЗаполнитьТабличныйДокументНаСервере();
КонецПроцедуры


#КонецОбласти


#Область ОбработкаСобытийЭлементовФормы


&НаКлиенте
Процедура Заполнить(Команда)
	Обработчик = Новый ОписаниеОповещения(
		"ОбработкаВыбораКомандыЗаполнить", ЭтаФорма);
	ПоказатьВопрос(
		Обработчик,
		НСтр("ru='Данные будут очищены, и заполнены заново. Продолжить?'"),
		РежимДиалогаВопрос.ДаНет,
		,
		КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьУИД(Команда)
	ЦентрализованныеЗакупкиКлиентУХ.РедактироватьУИДОбъекта(Объект, НСтр("ru = 'Введите УИД'"));
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСтандартныйУИД(Команда)
	ЦентрализованныеЗакупкиКлиентУХ.УстановитьСтандартныйУИД(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияЗаказчикПриИзменении(Элемент)
	ОбработкаВыбораКомандыЗаполнить(КодВозвратаДиалога.Да, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ОбработкаВыбораКомандыЗаполнить(КодВозвратаДиалога.Да, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоказателейПриИзмененииСодержимогоОбласти(Элемент, Область)
	КодВидРесурса = ПолучитьКодИВидРесурсаИзИмениОбласти(
		Область.Имя, РазделительВидаПоказателяТД);
	Если НЕ ПустаяСтрока(КодВидРесурса.Код) Тогда
		СтрокаПоказателя = ПолучитьСтрокуПоказателя(КодВидРесурса.Код);
		Если СтрокаПоказателя <> Неопределено Тогда
			Модифицированность = Истина;
			СтрокаПоказателя[КодВидРесурса.ВидРесурса] = Область.Значение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



#КонецОбласти


#Область СлужебныеПроцедурыНаКлиенте


&НаКлиенте
Процедура ОбработкаВыбораКомандыЗаполнить(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
        ЗаполнитьНаСервере();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуПоказателя(Код)
	Отбор = Новый Структура("Код", Код);
	СтрокиПоОтбору = Объект.ЗначенияПоказателей.НайтиСтроки(Отбор);
	Если СтрокиПоОтбору.Количество() > 0 Тогда
		Возврат СтрокиПоОтбору[0];
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКодИВидРесурсаИзИмениОбласти(ИмяОбласти, РазделительВидаПоказателяТД)
	КодВидРесурса = Новый Структура("Код, ВидРесурса", "", "");
	Если НЕ ПустаяСтрока(ИмяОбласти) Тогда
		мИмен = СтрРазделить(ИмяОбласти, РазделительВидаПоказателяТД, Ложь);
		Если мИмен.Количество() = 2 Тогда
			КодВидРесурса.Код = мИмен[0];
			КодВидРесурса.ВидРесурса = мИмен[1];
		КонецЕсли;
	КонецЕсли;
	Возврат КодВидРесурса;
КонецФункции


#КонецОбласти


#Область СлужебныеПроцедурыНаСервере


&НаСервере
Процедура ЗаполнитьНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьСуммыЗакупок();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	ЗаполнитьТабличныйДокументНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокументНаСервере()
	РазделительВидаПоказателяТД =
		Документы.РегистрацияОбъемаЗакупокУМСП.ПолучитьРазделительКодаИИмениРесурса();
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаПоказателей = 
		ДокументОбъект.ПолучитьТабличныйДокументГодовогоОтчета(Ложь, Ложь);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКатегорииПоКодам()
	// Соответствие для быстрого получения ссылки на Справочник.КатегорииЗакупокДляИсключенияИзГОЗ
	КатегорииПоКодам_ = Новый Соответствие;
	Для Каждого Строка_ Из Объект.ЗначенияПоказателей Цикл
		КатегорияЗакупки = Строка_.КатегорияЗакупки;
		Если ЗначениеЗаполнено(КатегорияЗакупки) Тогда
			КатегорииПоКодам_[СокрЛП(КатегорияЗакупки.Код)] = КатегорияЗакупки;
		КонецЕсли;
	КонецЦикла;
	КатегорииПоКодам = Новый ФиксированноеСоответствие(КатегорииПоКодам_);
КонецПроцедуры


#КонецОбласти