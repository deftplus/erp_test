#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ОбработчикиСобытийДокумента


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ПроверитьСообщитьДокументНеУникальный(Отказ);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ВерсияКлассификатора =
		Документы.РегистрацияОбъемаЗакупокУМСП.КодПоследнейВерсииКлассификатора();
	Если ДанныеЗаполнения = Неопределено Тогда
		ПериодРегистрации = ОбщегоНазначенияУХ.ПолучитьПериодПоДате(
			ТекущаяДатаСеанса(), Перечисления.Периодичность.Год);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	ЗаполнитьСуммыЗакупок();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
	УИД_ЕИС = "";
КонецПроцедуры


#КонецОбласти


#Область ПрограммныйИнтерфейс


Процедура ПроверитьСообщитьДокументНеУникальный(Отказ)
	мДокументов = ЦентрализованныеЗакупкиУХ.ПолучитьДокументыПоОтбору(
		"РегистрацияОбъемаЗакупокУМСП",
		Новый Структура(
			"ОрганизацияЗаказчик, ПериодРегистрации, Проведен",
			 ОрганизацияЗаказчик, ПериодРегистрации, Истина),
		Ссылка);
	Если мДокументов.Количество() > 0 Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке(
			СтрШаблон(НСтр(
				"ru='Для организации ""%1"" на период %2 уже зарегистрирован объем закупок у МСП документом %3!'"),
		 		ОрганизацияЗаказчик,
				ПериодРегистрации,
				мДокументов[0]),
			Отказ,
			,
			СтатусСообщения.Важное);
	КонецЕсли;
КонецПроцедуры

// Заполнить табличную часть "ЗначенияПоказателей" по классификатору показателей
// и элементам справочника "КатегорииЗакупокДляИсключенияИзГОЗ".
//
Процедура ЗаполнитьПунктыИКатегорииЗакупок() Экспорт
	ЗначенияПоказателей.Очистить();
	Классификатор =
		Документы.РегистрацияОбъемаЗакупокУМСП.ПолучитьКлассификаторПоказателей(
			ВерсияКлассификатора);
			
	Значения = СоздатьШаблонСтрокиЗначенияПоказателя();
	// Раздел 1. Общая сумма закупок.
	Значения.Код = Классификатор[0].Код;
	Значения.Наименование = Классификатор[0].Наименование;
	ДобавитьОбновитьСтрокуЗначенияПоказателей(Значения, Ложь);
	
	// Раздел 1. Разбивка закупок СМП по категориям
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КатегорииЗакупокДляИсключенияИзГОЗ.Ссылка КАК КатегорияЗакупки,
		|	КатегорииЗакупокДляИсключенияИзГОЗ.НомерВОтчетеОЗакупкахУСМП КАК Номер,
		|	КатегорииЗакупокДляИсключенияИзГОЗ.НаименованиеПоказателяОтчета КАК Наименование
		|ИЗ
		|	Справочник.КатегорииЗакупокДляИсключенияИзГОЗ КАК КатегорииЗакупокДляИсключенияИзГОЗ
		|ГДЕ
		|	НЕ КатегорииЗакупокДляИсключенияИзГОЗ.ПометкаУдаления
		|	И КатегорииЗакупокДляИсключенияИзГОЗ.НомерВОтчетеОЗакупкахУСМП > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	КатегорииЗакупокДляИсключенияИзГОЗ.НомерВОтчетеОЗакупкахУСМП";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		Значения = СоздатьШаблонСтрокиЗначенияПоказателя();
		Значения.Код = "1." + Выборка.Номер;
		Значения.Наименование = Выборка.Наименование;
		Значения.КатегорияЗакупки = Выборка.КатегорияЗакупки;
		ДобавитьОбновитьСтрокуЗначенияПоказателей(Значения, Ложь);
	КонецЦикла;
	
	// Разделы со 2-го по 8-ой
	Для Ном = 1 По Классификатор.Количество()-1 Цикл
		КлассПоказателя = Классификатор[Ном];
		Значения = СоздатьШаблонСтрокиЗначенияПоказателя();
		Значения.Код = КлассПоказателя.Код;
		Значения.Наименование = КлассПоказателя.Наименование;
		ДобавитьОбновитьСтрокуЗначенияПоказателей(Значения, Ложь);
	КонецЦикла;
КонецПроцедуры

// Заполнить сумму и количество в табличной части "ЗначенияПоказателей"
// на основании данных базы.
//
Процедура ЗаполнитьСуммыЗакупок() Экспорт
	ЗаполнитьПунктыИКатегорииЗакупок();
	Если НЕ ЗначениеЗаполнено(ПериодРегистрации) ИЛИ
		НЕ ЗначениеЗаполнено(ОрганизацияЗаказчик) Тогда
	КонецЕсли;
	СтрокиПоКодам = ПолучитьСтрокиПоказателейВРазрезеКодов();
	РезультатЗапроса = ПолучитьРезультатЗапросаСтатистикиПоДоговорам(
		ОрганизацияЗаказчик,
		ПериодРегистрации.ДатаНачала,
		ПериодРегистрации.ДатаОкончания);
	ВыборкаСтатистики = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаСтатистики.Следующий() Цикл
		Код = ВыборкаСтатистики.Код + ВыборкаСтатистики.Номер;
		СтрокаПоказателя = СтрокиПоКодам[Код];
		Если СтрокаПоказателя <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(
				СтрокаПоказателя,
				ВыборкаСтатистики,
				"Сумма, Количество, СтоимостнойОбъемОплаты, КоличествоДоговоровПредыдущихПериодов");
		КонецЕсли;
	КонецЦикла;
	РасчитатьЗначенияКонтрольныхПоказателей(СтрокиПоКодам);
КонецПроцедуры

// Получить табличный документ годового отчета о закупке по правилам
// постановления правительства РФ №1383 от 15.11.2017 заполненный
// данными табличной части "ЗначенияПоказателей".
Функция ПолучитьТабличныйДокументГодовогоОтчета(ВыводитьЗаголовок,
												ВыводитьПодвал) Экспорт
	ТД = Новый ТабличныйДокумент;
	Макет = Документы.РегистрацияОбъемаЗакупокУМСП.ПолучитьМакет("ОбъемЗакупокУМСП");
	Если ВыводитьЗаголовок Тогда
		ВывестиЗаголовокТД(Макет, ТД);
	КонецЕсли;
	ВывестиШапкуТД(Макет, ТД);
	ВывестиЗначенияПоказателейТД(Макет, ТД);
	Если ВыводитьПодвал Тогда
		ВывестиПодвалТД(Макет, ТД);
	КонецЕсли;
	Возврат ТД;
КонецФункции

Функция СформироватьПечатнуюФормуОтчета() Экспорт 
	ПечатнаяФорма = ПолучитьТабличныйДокументГодовогоОтчета(Истина, Истина);
	ПечатнаяФорма.ТолькоПросмотр = Истина;
	ПечатнаяФорма.ОтображатьЗаголовки = Ложь;
	ПечатнаяФорма.ОтображатьСетку = Ложь;
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	Возврат ПечатнаяФорма;
КонецФункции

// Заполняет новые реквизиты версии 2019-12-09.
//
Функция ЗаполнитьНовыеРеквизитыДокументВерсии20161214(
										КэшКлассфикатораПоказателей) Экспорт
	ВерсияКлассификатора = "20161214";
	Если КэшКлассфикатораПоказателей = Неопределено Тогда
		КэшКлассфикатораПоказателей =
			Документы.РегистрацияОбъемаЗакупокУМСП.ПолучитьКлассификаторПоказателей(
				ВерсияКлассификатора);
	КонецЕсли;
	ЗаполнитьРеквизитыШапкиВерсии20191209(ВерсияКлассификатора);
	ЗаполнитьРеквизитыПоказателейРегистрацииОбъемаЗакупокУСМПВерсии20191209(
		КэшКлассфикатораПоказателей, ЗначенияПоказателей);
КонецФункции

#КонецОбласти


#Область ВнутренниеФункции


Функция СоздатьШаблонСтрокиЗначенияПоказателя()
	Значения = Новый Структура;
	Значения.Вставить("Код", "");
	Значения.Вставить("Наименование", "");
	Значения.Вставить("КатегорияЗакупки",
		Справочники.КатегорииЗакупокДляИсключенияИзГОЗ.ПустаяСсылка());
	Значения.Вставить("Сумма", 0);
	Значения.Вставить("Количество", 0);
	Значения.Вставить("СтоимостнойОбъемОплаты", 0);
	Значения.Вставить("КоличествоДоговоровПредыдущихПериодов", 0);
	Возврат Значения;
КонецФункции

// Добавить или обновить строку ТЧ ЗначенияПоказателей.
// Поиск осуществляется по номеру пункта и категории закупки.
// Параметры:
//	Значения - Структура, значения для заполнения строки ТЧ.
//		Поля соответствуют реквизитам ТЧ ЗначенияПоказателей.
//	Обновить - Булево, если Истина, то пытаемся найти строку по номеру пункта
//		и категории закупки, и обновить ее. Если Ложь, то добавляем новую строку.
// Возвращает:
//	СтрокаТабличнойЧасти, обновленная строка.
Функция ДобавитьОбновитьСтрокуЗначенияПоказателей(Значения, Обновить)
	СтрокаТЧ = Неопределено;
	Если Обновить Тогда
		Отбор = Новый Структура("Код");
		ЗаполнитьЗначенияСвойств(Отбор, Значения);
		СтрокиТЧ = ЗначенияПоказателей.НайтиСтроки(Отбор);
		Если СтрокиТЧ.Количество() > 0 Тогда
			СтрокаТЧ = СтрокиТЧ[0];
		КонецЕсли;
	КонецЕсли;
	Если СтрокаТЧ = Неопределено Тогда
		СтрокаТЧ = ЗначенияПоказателей.Добавить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаТЧ, Значения);
	
	Возврат СтрокаТЧ;
КонецФункции

Процедура ЗаполнитьРеквизитыШапкиВерсии20191209(ВерсияКлассификатора)
	Если ПустаяСтрока(ВерсияКлассификатора) Тогда
		ВерсияКлассификатора = ВерсияКлассификатора;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОрганизацияЗаказчик) Тогда
		ОрганизацияЗаказчик = Организация;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = Дата;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоказателейРегистрацииОбъемаЗакупокУСМПВерсии20191209(
														КлассфикаторПоказателей,
														ТЧЗначенияПоказателей)
	НомерРасшифровки = 1;
	Для Каждого СтрокаТЧ Из ТЧЗначенияПоказателей Цикл
		НомерПункта = СтрокаТЧ.УдалитьНомерПункта;
		Если НомерПункта = 1
					И ЗначениеЗаполнено(СтрокаТЧ.КатегорияЗакупки) Тогда
			СтрокаТЧ.Код = "1." + Строка(НомерРасшифровки);
			СтрокаТЧ.Наименование =
				СтрокаТЧ.КатегорияЗакупки.НаименованиеПоказателяОтчета;
			НомерРасшифровки = НомерРасшифровки + 1;
		ИначеЕсли НомерПункта > 1 Тогда
			СтрокаТЧ.Код = Строка(НомерПункта);
			ОписаниеПоказателя = КлассфикаторПоказателей[НомерПункта-1];
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ОписаниеПоказателя);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


#Область ЗаполнениеТабличногоДокумента


Процедура ВывестиЗаголовокТД(Макет, ТД)
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Если ЗначениеЗаполнено(Организация) Тогда
		Заголовок.Параметры.Год = Формат(ПериодРегистрации.ДатаНачала, "ДФ=yyyy");
		Заголовок.Параметры.НаименованиеПолное =
			?(ПустаяСтрока(Организация.НаименованиеПолное),
				Организация.Наименование,
				Организация.НаименованиеПолное);
		Заголовок.Параметры.ОКОПФ = Организация.НаименованиеОКОПФ;
		Заголовок.Параметры.Адрес = 
			УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Организация,
				УправлениеКонтактнойИнформациейВстраиваниеПереопределяемыйУХ.ВидКонтактнойИнформацииЮрАдресОрганизации(),
				'00010101');
		Заголовок.Параметры.ИНН = Организация.ИНН;
		Заголовок.Параметры.КПП = Организация.КПП;
	КонецЕсли;
	ТД.Вывести(Заголовок);
КонецПроцедуры

Процедура ВывестиПодвалТД(Макет, ТД)
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.УполномоченноеЛицо =
		?(ЗначениеЗаполнено(Ответственный), Ответственный.Наименование, "");
	Подвал.Параметры.Дата = Формат(Дата, "ДФ=dd.MM.yyyy");
	ТД.Вывести(Подвал);
КонецПроцедуры

Процедура ВывестиШапкуТД(Макет, ТД)
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТД.Вывести(Шапка);
КонецПроцедуры

Процедура ВывестиЗначенияПоказателейТД(Макет, ТД)
	ОбластьПоказатель = Макет.ПолучитьОбласть("Показатель");
	ОбластьПоказатель2 = Макет.ПолучитьОбласть("Показатель2");
	ОбластиВвода = ПолучитьОбластиВводаМакета(
		Макет,
		"Сумма, Количество, СтоимостнойОбъемОплаты, КоличествоДоговоровПредыдущихПериодов");
	Для Каждого СтрокаПоказателя Из ЗначенияПоказателей Цикл
		Если Лев(СтрокаПоказателя.Код, 2) = "1."
					И ЗначениеЗаполнено(СтрокаПоказателя.КатегорияЗакупки) Тогда
			ОбластьПоказатель2.Параметры.Заполнить(СтрокаПоказателя);
			ОбластьТД = ТД.Вывести(ОбластьПоказатель2);
			УстановитьИменаЯчеекДляВводаДанных(
				ОбластиВвода.Расшифровка, ТД, ОбластьТД, СтрокаПоказателя.Код);
		Иначе
			ОбластьПоказатель.Параметры.Заполнить(СтрокаПоказателя);
			ОбластьТД = ТД.Вывести(ОбластьПоказатель);
			УстановитьИменаЯчеекДляВводаДанных(
				ОбластиВвода.Показатель, ТД, ОбластьТД, СтрокаПоказателя.Код);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьИменаЯчеекДляВводаДанных(ОбластиВвода, ТД, ОбластьТД, Код)
	Разделитель = Документы.РегистрацияОбъемаЗакупокУМСП.ПолучитьРазделительКодаИИмениРесурса();
	Для Каждого ИмяОбласть Из ОбластиВвода Цикл
		Имя = ИмяОбласть.Ключ;
		ИсходнаяОбласть = ИмяОбласть.Значение;
		НоваяОбласть = ТД.Область(
			ОбластьТД.Верх,
			ИсходнаяОбласть.Лево,
			ОбластьТД.Верх + ИсходнаяОбласть.Низ - ИсходнаяОбласть.Верх,
			ИсходнаяОбласть.Право);
		НоваяОбласть.Имя = Код + Разделитель + Имя;
	КонецЦикла;
КонецПроцедуры

// Возвращает описание именованных областей макета, которые
// будут использоваться для ввода данных пользователем.
//
// Параметры:
//	Макет - ТабличныйДокумент - исходный макет.
//	СтрокаИменОбластей - Строка - имена областей для ввода числовых
//			значений, разделенные запятыми.
//
// Возвращает:
//	Структура:
//		- Показатель - Структура - описание областей строки показателя.
//				Имена реквизитов структуры - имена 
//		- Расшифровка - Структура - описание областей строки расшифровки
//				показателя №1. Формат аналогичен предыдущему реквизиту.
//
Функция ПолучитьОбластиВводаМакета(Макет, СтрокаИменОбластей)
	ИменаОбластей = СтрРазделить(СтрокаИменОбластей, ",", Ложь);
	ОбластиВвода = Новый Структура;
	ОбластиВВода.Вставить("Показатель",Новый Структура);
	ОбластиВВода.Вставить("Расшифровка",Новый Структура);
	Для Каждого Имя Из ИменаОбластей Цикл
		Имя = СокрЛП(Имя);
		ОбластиВВода.Показатель.Вставить(Имя, Макет.Область(Имя));
		// Области расшифровки
		ОбластиВВода.Расшифровка.Вставить(Имя, Макет.Область(Имя + "2"));
	КонецЦикла;
	Возврат ОбластиВвода;
КонецФункции

Функция ПолучитьРезультатЗапросаСтатистикиПоДоговорам(Организация,
														ДатаНачалаГода,
														ДатаКонцаГода)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатистикаДоговоровДляЕИС.КатегорияЗакупкиДляИсключенияИзГОЗ КАК КатегорияЗакупкиДляИсключенияИзГОЗ,
		|	СтатистикаДоговоровДляЕИС.НеУчитыватьПриРасчетеДолиЗакупокУСМП КАК НеУчитыватьПриРасчетеДолиЗакупокУСМП,
		|	СтатистикаДоговоровДляЕИС.НеВключенВПланЗакупкиЧасть15Ст4ФЗ223 КАК НеВключенВПланЗакупкиЧасть15Ст4ФЗ223,
		|	СтатистикаДоговоровДляЕИС.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков КАК ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков,
		|	СтатистикаДоговоровДляЕИС.ПриоритетУчастияМалогоИСреднегоПредпринимательства КАК ПриоритетУчастияМалогоИСреднегоПредпринимательства,
		|	СУММА(СтатистикаДоговоровДляЕИС.СуммаДоговораВВалютеРеглУчета) КАК Сумма,
		|	КОЛИЧЕСТВО(СтатистикаДоговоровДляЕИС.Договор) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0)
		|	КОНЕЦ КАК СтоимостнойОбъемОплаты,
		|	0 КАК КоличествоДоговоровПредыдущихПериодов,
		|	ЕСТЬNULL(РазмерыКонтрагентовДляЕИССрезПоследних.Размер, ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный)) КАК РазмерКонтрагента
		|ПОМЕСТИТЬ ВТ_Статистика
		|ИЗ
		|	РегистрСведений.СтатистикаДоговоровДляЕИС КАК СтатистикаДоговоровДляЕИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентамиФакт.Обороты(&ДатаНачалаГода, &ДатаКонцаГода, Период, Организация = &Организация) КАК РасчетыСКонтрагентамиФактОбороты
		|		ПО СтатистикаДоговоровДляЕИС.Договор = РасчетыСКонтрагентамиФактОбороты.ДоговорКонтрагента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыКонтрагентовДляЕИС.СрезПоследних(&ДатаКонцаГода, ) КАК РазмерыКонтрагентовДляЕИССрезПоследних
		|		ПО СтатистикаДоговоровДляЕИС.Договор.Контрагент = РазмерыКонтрагентовДляЕИССрезПоследних.Контрагент
		|ГДЕ
		|	СтатистикаДоговоровДляЕИС.ДатаПодписанияДоговора МЕЖДУ &ДатаНачалаГода И &ДатаКонцаГода
		|	И СтатистикаДоговоровДляЕИС.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатистикаДоговоровДляЕИС.КатегорияЗакупкиДляИсключенияИзГОЗ,
		|	СтатистикаДоговоровДляЕИС.НеУчитыватьПриРасчетеДолиЗакупокУСМП,
		|	СтатистикаДоговоровДляЕИС.НеВключенВПланЗакупкиЧасть15Ст4ФЗ223,
		|	СтатистикаДоговоровДляЕИС.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков,
		|	СтатистикаДоговоровДляЕИС.ПриоритетУчастияМалогоИСреднегоПредпринимательства,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0)
		|	КОНЕЦ,
		|	ЕСТЬNULL(РазмерыКонтрагентовДляЕИССрезПоследних.Размер, ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтатистикаДоговоровДляЕИС.КатегорияЗакупкиДляИсключенияИзГОЗ,
		|	СтатистикаДоговоровДляЕИС.НеУчитыватьПриРасчетеДолиЗакупокУСМП,
		|	СтатистикаДоговоровДляЕИС.НеВключенВПланЗакупкиЧасть15Ст4ФЗ223,
		|	СтатистикаДоговоровДляЕИС.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков,
		|	СтатистикаДоговоровДляЕИС.ПриоритетУчастияМалогоИСреднегоПредпринимательства,
		|	0,
		|	0,
		|	ВЫБОР
		|		КОГДА СУММА(ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0)) < 0
		|			ТОГДА 0
		|		ИНАЧЕ СУММА(ЕСТЬNULL(РасчетыСКонтрагентамиФактОбороты.СуммаПриход, 0))
		|	КОНЕЦ,
		|	КОЛИЧЕСТВО(СтатистикаДоговоровДляЕИС.Договор),
		|	ЕСТЬNULL(РазмерыКонтрагентовДляЕИССрезПоследних.Размер, ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный))
		|ИЗ
		|	РегистрСведений.СтатистикаДоговоровДляЕИС КАК СтатистикаДоговоровДляЕИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКонтрагентамиФакт.Обороты(&ДатаНачалаГода, &ДатаКонцаГода, Период, Организация = &Организация) КАК РасчетыСКонтрагентамиФактОбороты
		|		ПО СтатистикаДоговоровДляЕИС.Договор = РасчетыСКонтрагентамиФактОбороты.ДоговорКонтрагента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыКонтрагентовДляЕИС.СрезПоследних(&ДатаКонцаГода, ) КАК РазмерыКонтрагентовДляЕИССрезПоследних
		|		ПО СтатистикаДоговоровДляЕИС.Договор.Контрагент = РазмерыКонтрагентовДляЕИССрезПоследних.Контрагент
		|ГДЕ
		|	СтатистикаДоговоровДляЕИС.ДатаПодписанияДоговора < &ДатаНачалаГода
		|	И (СтатистикаДоговоровДляЕИС.ДатаОкончанияДоговора >= &ДатаНачалаГода
		|			ИЛИ СтатистикаДоговоровДляЕИС.ДатаОкончанияДоговора = ДАТАВРЕМЯ(1, 1, 1))
		|	И СтатистикаДоговоровДляЕИС.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатистикаДоговоровДляЕИС.КатегорияЗакупкиДляИсключенияИзГОЗ,
		|	СтатистикаДоговоровДляЕИС.НеУчитыватьПриРасчетеДолиЗакупокУСМП,
		|	СтатистикаДоговоровДляЕИС.НеВключенВПланЗакупкиЧасть15Ст4ФЗ223,
		|	СтатистикаДоговоровДляЕИС.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков,
		|	СтатистикаДоговоровДляЕИС.ПриоритетУчастияМалогоИСреднегоПредпринимательства,
		|	ЕСТЬNULL(РазмерыКонтрагентовДляЕИССрезПоследних.Размер, ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""1"" КАК Код,
		|	"""" КАК Номер,
		|	НЕОПРЕДЕЛЕНО КАК КатегорияЗакупки,
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.Сумма), 0) КАК Сумма,
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.Количество), 0) КАК Количество,
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.СтоимостнойОбъемОплаты), 0) КАК СтоимостнойОбъемОплаты,
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов), 0) КАК КоличествоДоговоровПредыдущихПериодов
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""1"",
		|	ВТ_Статистика.КатегорияЗакупкиДляИсключенияИзГОЗ.НомерВОтчетеОЗакупкахУСМП,
		|	ВТ_Статистика.КатегорияЗакупкиДляИсключенияИзГОЗ,
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.Сумма), 0),
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.Количество), 0),
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.СтоимостнойОбъемОплаты), 0),
		|	ЕСТЬNULL(СУММА(ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|	И ВТ_Статистика.КатегорияЗакупкиДляИсключенияИзГОЗ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗакупокДляИсключенияИзГОЗ.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Статистика.КатегорияЗакупкиДляИсключенияИзГОЗ.НомерВОтчетеОЗакупкахУСМП,
		|	ВТ_Статистика.КатегорияЗакупкиДляИсключенияИзГОЗ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""2"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""3"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	ВТ_Статистика.РазмерКонтрагента <> ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный)
		|	И НЕ ВТ_Статистика.ПриоритетУчастияМалогоИСреднегоПредпринимательства
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""4"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	(ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Микро)
		|			ИЛИ ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Малый))
		|	И НЕ ВТ_Статистика.ПриоритетУчастияМалогоИСреднегоПредпринимательства
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""5"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	ВТ_Статистика.РазмерКонтрагента <> ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный)
		|	И ВТ_Статистика.ПриоритетУчастияМалогоИСреднегоПредпринимательства
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""6"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	(ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Микро)
		|			ИЛИ ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Малый))
		|	И ВТ_Статистика.ПриоритетУчастияМалогоИСреднегоПредпринимательства
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""7"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	ВТ_Статистика.РазмерКонтрагента <> ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный)
		|	И ВТ_Статистика.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""8"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Сумма
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.Количество
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА 0
		|				ИНАЧЕ ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	(ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Микро)
		|			ИЛИ ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Малый))
		|	И ВТ_Статистика.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""9"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.СтоимостнойОбъемОплаты
		|				ИНАЧЕ ВТ_Статистика.СтоимостнойОбъемОплаты
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	ВТ_Статистика.РазмерКонтрагента <> ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Крупный)
		|	И ВТ_Статистика.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""10"",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.СтоимостнойОбъемОплаты
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0),
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА ВТ_Статистика.НеУчитыватьПриРасчетеДолиЗакупокУСМП
		|					ТОГДА ВТ_Статистика.КоличествоДоговоровПредыдущихПериодов
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0)
		|ИЗ
		|	ВТ_Статистика КАК ВТ_Статистика
		|ГДЕ
		|	(ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Микро)
		|			ИЛИ ВТ_Статистика.РазмерКонтрагента = ЗНАЧЕНИЕ(Перечисление.РазмерыКонтрагентовДляЕИС.Малый))
		|	И ВТ_Статистика.ПривлечениеМалогоИСреднегоПредпринимательстваКакПодрядчиков";
	Запрос.УстановитьПараметр("Организация", Организация);	
	Запрос.УстановитьПараметр("ДатаНачалаГода", ДатаНачалаГода);
	Запрос.УстановитьПараметр("ДатаКонцаГода", ДатаКонцаГода);
	Возврат Запрос.Выполнить();
КонецФункции

Функция ПолучитьСтрокиПоказателейВРазрезеКодов()
	СтрокиПоКодам = Новый Соответствие;
	Для Каждого Строка Из ЗначенияПоказателей Цикл
		СтрокиПоКодам[Строка.Код] = Строка;
	КонецЦикла;
	Возврат СтрокиПоКодам;
КонецФункции

Процедура РасчитатьЗначенияКонтрольныхПоказателей(СтрокиПоКодам)
	ИсключенСтоимостнойОбъемОплаты =
		ПолучитьИтогПоЗакупкамИсключеннымИзГОЗ("СтоимостнойОбъемОплаты");
	Если ИсключенСтоимостнойОбъемОплаты = 0 Тогда
		ИсключенСтоимостнойОбъемОплаты = 1;
	КонецЕсли;
	Если СтрокиПоКодам["11"] <> Неопределено Тогда
		СтрокиПоКодам["11"].СтоимостнойОбъемОплаты =
			(СтрокиПоКодам["3"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["5"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["7"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["9"].СтоимостнойОбъемОплаты)
			/ ИсключенСтоимостнойОбъемОплаты;
	КонецЕсли;
	Если СтрокиПоКодам["12"] <> Неопределено Тогда
		СтрокиПоКодам["12"].СтоимостнойОбъемОплаты =
			СтрокиПоКодам["5"].СтоимостнойОбъемОплаты
			/ ИсключенСтоимостнойОбъемОплаты;
	КонецЕсли;
	Если СтрокиПоКодам["13"] <> Неопределено Тогда
		СтрокиПоКодам["13"].СтоимостнойОбъемОплаты =
			(СтрокиПоКодам["4"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["6"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["8"].СтоимостнойОбъемОплаты
				+ СтрокиПоКодам["10"].СтоимостнойОбъемОплаты)
			/ ИсключенСтоимостнойОбъемОплаты;
	КонецЕсли;
	Если СтрокиПоКодам["14"] <> Неопределено Тогда
		СтрокиПоКодам["14"].СтоимостнойОбъемОплаты =
			СтрокиПоКодам["6"].СтоимостнойОбъемОплаты
			/ ИсключенСтоимостнойОбъемОплаты;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИтогПоЗакупкамИсключеннымИзГОЗ(ИмяКолонки)
	Результат = 0;
	Для Каждого Строка Из ЗначенияПоказателей Цикл
		Если ЗначениеЗаполнено(Строка.КатегорияЗакупки) Тогда
			Результат = Результат + Строка[ИмяКолонки];
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции


#КонецОбласти


#КонецОбласти


#КонецЕсли