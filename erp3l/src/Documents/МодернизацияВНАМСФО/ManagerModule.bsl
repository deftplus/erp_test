
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДополнительныеСвойства.ДляПроведения.Ссылка);
	
	Реквизиты = МСФОУХ.РеквизитыДокумента(Запрос, "РежимЗаполнения, АлгоритмРСБУ", , Отказ);
	Реквизиты.Вставить("ДанныеРежимаЗаполнения",	УчетМСФОПовтИспУХ.ПолучитьВидыУчетаРежимаЗаполнения(Реквизиты.РежимЗаполнения));
	ДополнительныеСвойства.ДляПроведения.Вставить("Реквизиты", Реквизиты);
	
	Если Отказ Тогда
		Возврат ДополнительныеСвойства;
	КонецЕсли;

	Отчеты.ПараметрыВНА.ЗаполнитьПараметрыЗапроса(Запрос, Реквизиты.Период, Реквизиты.Ссылка, Реквизиты.АлгоритмРСБУ); 
	
	Запрос.УстановитьПараметр("ВсеВНА", 		Ложь);
	Запрос.УстановитьПараметр("ВНА", 			Неопределено);// параметр не влияет на расчет	
	Запрос.УстановитьПараметр("Период",			Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("Сценарий",		Реквизиты.Сценарий);	
	Запрос.УстановитьПараметр("ВидыУчета", 		Перечисления.ВидыУчета.ВидыУчетаПоДаннымРежима(Реквизиты.ДанныеРежимаЗаполнения));
	Запрос.УстановитьПараметр("ВсеОрганизации", Ложь);
	Запрос.УстановитьПараметр("ФормироватьПроводкиМСФО", 	Реквизиты.ФормироватьПроводкиМСФО);
	Запрос.УстановитьПараметр("ЕстьМСФО", 		Реквизиты.ДанныеРежимаЗаполнения.ЕстьМСФО);
	Запрос.УстановитьПараметр("ЕстьНСБУ", 		Реквизиты.ДанныеРежимаЗаполнения.ЕстьНСБУ);
	Запрос.УстановитьПараметр("АлгоритмРСБУ", 	Реквизиты.АлгоритмРСБУ);
	Запрос.УстановитьПараметр("ТипыВНА",		УчетМСФОПовтИспУХ.ПолучитьОписаниеТиповВНА().Типы());
	
	НомераТаблиц = Новый Структура;
	ТекстЗапроса = Новый Массив;
	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ПараметрыВНА(НомераТаблиц)			);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_втТаблицаВНА(НомераТаблиц)			);	
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)		);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаВНА(НомераТаблиц)			);
	ТекстЗапроса.Добавить(	ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)	);	
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	ПроведениеСерверУХ.ДополнитьТаблицамиИзПакетаЗапросов(ДополнительныеСвойства.ТаблицыДляДвижений, Запрос, НомераТаблиц);

КонецФункции

Функция ТекстЗапроса_ТаблицаДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("втТаблицаДокумента", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаВНА.ВНА КАК ВНА,
	|	ТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ТаблицаВНА.ГруппаВНА.ПараметрыПереоценки.МетодПереоценки = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаПриПереоценкеВНА.ПропорциональныйПересчет) КАК ПропорциональныйПересчет,
	|	ТаблицаВНА.ГруппаВНА.ПараметрыПереоценки КАК ПараметрыПереоценки,
	|	ТаблицаВНА.ЛиквидационнаяСтоимостьМСФО КАК ЛиквидационнаяСтоимостьМСФО,
	|	ТаблицаВНА.ОбъемВыработкиМСФО КАК ОбъемВыработкиМСФО,
	|	ТаблицаВНА.ОбъемВыработкиНСБУ КАК ОбъемВыработкиНСБУ,
	|	ТаблицаВНА.СПИМСФО КАК СПИМСФО,
	|	ТаблицаВНА.СПИНСБУ КАК СПИНСБУ,
	|	ТаблицаВНА.СуммаМодернизацииМСФО КАК СуммаМодернизацииМСФО,
	|	ТаблицаВНА.СуммаМодернизацииНСБУ КАК СуммаМодернизацииНСБУ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетЗатратСубконто1МСФО) В
	|				(&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетЗатратСубконто1МСФО
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетЗатратСубконто2МСФО) В
	|				(&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетЗатратСубконто2МСФО
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаВНА.СчетЗатратСубконто3МСФО) В
	|				(&ТипыВНА)
	|			ТОГДА ТаблицаВНА.СчетЗатратСубконто3МСФО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсточникВНА,
	|	ТаблицаВНА.СчетЗатратМСФО КАК СчетЗатратМСФО,
	|	ТаблицаВНА.СчетЗатратСубконто1МСФО КАК СчетЗатратСубконто1МСФО,
	|	ТаблицаВНА.СчетЗатратСубконто2МСФО КАК СчетЗатратСубконто2МСФО,
	|	ТаблицаВНА.СчетЗатратСубконто3МСФО КАК СчетЗатратСубконто3МСФО,
	|	ТаблицаВНА.СторнироватьДанныеНСБУ КАК СторнироватьДанныеНСБУ
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	Документ.МодернизацияВНАМСФО.ВНА КАК ТаблицаВНА
	|ГДЕ
	|	ТаблицаВНА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаВНА.ВНА";	

КонецФункции

Функция ТекстЗапроса_ПараметрыВНА(НомераТаблиц)

	ПоляВыбораСтрокой = 
	"ВНА,
	|ГруппаВНА,
	|ПрофильРаспределения,
	|ВидУчета,
	|ПервоначальнаяСтоимость,	
	|Амортизация,
	|АмортизацияРасчет,
	|Переоценка,
	|РезервПереоценкиРасчет,
	|Подразделение,
	|НаправлениеДеятельности,	
	
	|ДатаВвода,
	|ЛиквидационнаяСтоимость,
	|КоэффициентУскорения,
	|ЛиквидационнаяСтоимость,
	|НачислятьАмортизацию,
	|ОбъемПродукцииРабот,
	|ПараметрВыработки,
	|СпособНачисленияАмортизации,
	|ПрофильРаспределения,
	
	|СчетУчетаПервоначальнойСтоимости,
	|СчетУчетаПервоначальнойСтоимостиСубконто1,
	|СчетУчетаПервоначальнойСтоимостиСубконто2, 
	|СчетУчетаПервоначальнойСтоимостиСубконто3,	
	|СчетНакопленнойАмортизации,
	|СчетНакопленнойАмортизацииСубконто1,
	|СчетНакопленнойАмортизацииСубконто2, 
	|СчетНакопленнойАмортизацииСубконто3";
	
	ЗапросПараметрыВНА = УчетМСФОПовтИспУХ.ПолучитьКэшированныйТекстЗапросаВНА(ПоляВыбораСтрокой, "втТаблицаРасчетВНА"); 
	
	ТекущийНомер = НомераТаблиц.Количество();	
	Для каждого НомерТаблицы Из ЗапросПараметрыВНА.НомераТаблиц Цикл		
		НомераТаблиц.Вставить(НомерТаблицы.Ключ, ТекущийНомер + НомерТаблицы.Значение);	
	КонецЦикла;
	
	ТекстЗапроса_ТаблицаВНА = 
	 "ВЫБРАТЬ
	 |	т.ВНА КАК ВНА
	 |ИЗ
	 |	втТаблицаДокумента КАК т
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	т.ИсточникВНА
	 |ИЗ
	 |	втТаблицаДокумента КАК т
	 |ГДЕ
	 |	т.ИсточникВНА <> НЕОПРЕДЕЛЕНО";
	
	Возврат СтрЗаменить(ЗапросПараметрыВНА.Текст, "&ВНА", ТекстЗапроса_ТаблицаВНА);
	
КонецФункции

Функция ТекстЗапроса_втТаблицаВНА(НомераТаблиц)
	
	// для АлгоритмаРСБУ - новое значение СтоимостьВычисленияАмортизации должно включать амортизацию текущего периода
	
	НомераТаблиц.Вставить("втТаблицаВНА", НомераТаблиц.Количество());
	
	Возврат
	"ВЫБРАТЬ
	|	т.ВНА КАК ВНА,
	|	т.ИсточникВНА КАК ИсточникВНА,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА т.СуммаМодернизацииМСФО
	|		ИНАЧЕ т.СуммаМодернизацииНСБУ
	|	КОНЕЦ КАК ИзменениеСтоимости,
	|	т.СуммаМодернизацииМСФО КАК ИзменениеСтоимостиМСФО,
	|	т.СуммаМодернизацииНСБУ КАК ИзменениеСтоимостиНСБУ,
	|	ЕСТЬNULL(р.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА 0
	|		ИНАЧЕ р.АмортизацияРасчет
	|	КОНЕЦ КАК ИзменениеАмортизации,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА 0
	|		ИНАЧЕ р.РезервПереоценкиРасчет
	|	КОНЕЦ КАК РезервПереоценкиРасчет,
	|	р.ГруппаВНА КАК ГруппаВНА,
	|	р.ВидУчета КАК ВидУчета,
	|	р.Подразделение КАК ПодразделениеДт,
	|	р.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	рИсточник.Подразделение КАК ПодразделениеКт,
	|	рИсточник.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	т.СторнироватьДанныеНСБУ КАК СторнироватьДанныеНСБУ,
	|	ВЫБОР
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА 0
	|		ИНАЧЕ р.АмортизацияРасчет
	|	КОНЕЦ КАК АмортизацияРасчет,
	|	р.ПрофильРаспределения КАК ПрофильРаспределения,
	|	т.СчетЗатратМСФО КАК СчетЗатратМСФО,
	|	т.СчетЗатратСубконто1МСФО КАК СчетЗатратСубконто1МСФО,
	|	т.СчетЗатратСубконто2МСФО КАК СчетЗатратСубконто2МСФО,
	|	т.СчетЗатратСубконто3МСФО КАК СчетЗатратСубконто3МСФО,
	|	р.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА т.ЛиквидационнаяСтоимостьМСФО
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость,
	|	р.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА т.ОбъемВыработкиМСФО
	|		ИНАЧЕ т.ОбъемВыработкиНСБУ
	|	КОНЕЦ КАК ОбъемПродукцииРабот,
	|	р.ПараметрВыработки КАК ПараметрВыработки,
	|	р.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	р.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СПИНСБУ
	|		ИНАЧЕ т.СПИМСФО
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА т.СПИНСБУ - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА т.СПИМСФО - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, МЕСЯЦ)
	|		ИНАЧЕ ВЫРАЗИТЬ(т.СПИМСФО - РАЗНОСТЬДАТ(р.ДатаВвода, &Период, ДЕНЬ) * 12 / 365 КАК ЧИСЛО(18, 3))
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА р.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|			ТОГДА р.ПервоначальнаяСтоимость + т.СуммаМодернизацииНСБУ - р.Амортизация - р.АмортизацияРасчет
	|		КОГДА &АлгоритмРСБУ
	|			ТОГДА р.ПервоначальнаяСтоимость + р.Переоценка + т.СуммаМодернизацииМСФО - т.ЛиквидационнаяСтоимостьМСФО - р.Амортизация - р.АмортизацияРасчет
	|		ИНАЧЕ р.ПервоначальнаяСтоимость + р.Переоценка + т.СуммаМодернизацииМСФО - т.ЛиквидационнаяСтоимостьМСФО - р.Амортизация - р.АмортизацияРасчет
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	р.СчетУчетаПервоначальнойСтоимости КАК СчетУчетаПервоначальнойСтоимости,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СчетУчетаПервоначальнойСтоимостиСубконто1,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СчетУчетаПервоначальнойСтоимостиСубконто2,
	|	р.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СчетУчетаПервоначальнойСтоимостиСубконто3,
	|	р.СчетНакопленнойАмортизации КАК СчетНакопленнойАмортизации,
	|	р.СчетНакопленнойАмортизацииСубконто1 КАК СчетНакопленнойАмортизацииСубконто1,
	|	р.СчетНакопленнойАмортизацииСубконто2 КАК СчетНакопленнойАмортизацииСубконто2,
	|	р.СчетНакопленнойАмортизацииСубконто3 КАК СчетНакопленнойАмортизацииСубконто3
	|ПОМЕСТИТЬ втТаблицаВНА
	|ИЗ
	|	втТаблицаДокумента КАК т
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК р
	|		ПО т.ВНА = р.ВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК рИсточник
	|		ПО т.ИсточникВНА = рИсточник.ВНА
	|			И (рИсточник.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО))";

КонецФункции

Функция ТекстЗапроса_ТаблицаВНА(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаВНА", НомераТаблиц.Количество());	
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	втТаблицаРасчетВНА.ВНА КАК ИсточникВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.МодернизацияВНА) КАК ВидОперации,
	|	втТаблицаРасчетВНА.ГруппаВНА КАК ИсточникГруппаВНА,
	|	втТаблицаВНА.ВидУчета КАК ВидУчета,
	|	втТаблицаВНА.ИзменениеСтоимости КАК СуммаВВалютеУчета,
	|	втТаблицаВНА.АмортизацияРасчет КАК Амортизация,
	|	втТаблицаВНА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	втТаблицаВНА.КоэффициентУскорения КАК КоэффициентУскорения,
	|	втТаблицаВНА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	втТаблицаВНА.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	втТаблицаВНА.ПараметрВыработки КАК ПараметрВыработки,
	|	втТаблицаВНА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	втТаблицаВНА.ПрофильРаспределения КАК СпособОтраженияРасходовПоАмортизации,
	|	втТаблицаВНА.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	втТаблицаВНА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	втТаблицаВНА.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	НЕ втТаблицаРасчетВНА.ВНА ЕСТЬ NULL КАК СписатьИсточник,
	|	&Период КАК ИсточникДатаПартии,
	|	1 КАК ИсточникКоличество,
	|	0 КАК Переоценка,
	|	0 КАК Обесценение,
	|	-втТаблицаВНА.РезервПереоценкиРасчет КАК РезервПереоценки
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаРасчетВНА КАК втТаблицаРасчетВНА
	|		ПО втТаблицаВНА.ИсточникВНА = втТаблицаРасчетВНА.ВНА
	|			И втТаблицаВНА.ВидУчета = втТаблицаРасчетВНА.ВидУчета
	|ГДЕ
	|	втТаблицаВНА.ИзменениеСтоимости <> 0";
	
КонецФункции

Функция ТекстЗапроса_ТаблицаПроводкиВНА(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПроводкиВНА", НомераТаблиц.Количество());
	
	Возврат 
 	МСФОВНАУХ.ТекстЗапроса_НачислениеАмортизацииМСФО()	
	+ " ОБЪЕДИНИТЬ ВСЕ " 
	+ МСФОВНАУХ.ТекстЗапроса_НачислениеРезерваПереоценкиМСФО()
	+ " ОБЪЕДИНИТЬ ВСЕ "
	+ ТекстЗапроса_Модернизация();

КонецФункции

Функция ТекстЗапроса_Модернизация()
	
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	втТаблицаВНА.ВНА КАК ВНА,
	|	втТаблицаВНА.ГруппаВНА КАК ГруппаВНА,
	|	ЗНАЧЕНИЕ(Справочник.ВидыОпераций.МодернизацияВНА) КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.НСБУ)
	|				И НЕ &ФормироватьПроводкиМСФО
	|				И втТаблицаВНА.СторнироватьДанныеНСБУ
	|			ТОГДА втТаблицаВНА.ИзменениеСтоимостиНСБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацииНСБУ,
	|	ВЫБОР
	|		КОГДА втТаблицаВНА.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ТОГДА втТаблицаВНА.ИзменениеСтоимостиМСФО
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацииМСФО,
	|	втТаблицаВНА.ПодразделениеДт КАК ПодразделениеДт,
	|	втТаблицаВНА.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
	|	втТаблицаВНА.ПодразделениеКт КАК ПодразделениеКт,
	|	втТаблицаВНА.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
	
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимости КАК СчетДт,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимости.СчетСсылка КАК СчетДтМСФО,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто1 КАК СубконтоДт1,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто2 КАК СубконтоДт2,
	|	втТаблицаВНА.СчетУчетаПервоначальнойСтоимостиСубконто3 КАК СубконтоДт3,
	|	втТаблицаВНА.СчетЗатратМСФО КАК СчетКт,
	|	втТаблицаВНА.СчетЗатратМСФО.СчетСсылка КАК СчетКтМСФО,
	|	втТаблицаВНА.СчетЗатратСубконто1МСФО КАК СубконтоКт1,
	|	втТаблицаВНА.СчетЗатратСубконто2МСФО КАК СубконтоКт2,
	|	втТаблицаВНА.СчетЗатратСубконто3МСФО КАК СубконтоКт3
	|ИЗ
	|	втТаблицаВНА КАК втТаблицаВНА
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ФормироватьПроводкиМСФО
	|				ТОГДА втТаблицаВНА.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчета.МСФО)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";

КонецФункции

Функция ТекстЗапроса_ТаблицаОшибок(НомераТаблиц)

	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаНаБалансе(НомераТаблиц));
	ТекстЗапроса.Добавить(МСФОВНАУХ.ТекстЗапроса_ПроверкаДублейВНА());	
	
	Возврат СтрСоединить(ТекстЗапроса, " ОБЪЕДИНИТЬ ВСЕ ");

КонецФункции

Процедура СформироватьДвижения(Движения, ДополнительныеСвойства, Отказ) Экспорт

	Реквизиты 				= ДополнительныеСвойства.ДляПроведения.Реквизиты;
	ТаблицаВНА 				= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВНА;
	ТаблицаПроводкиВНА 		= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПроводкиВНА;
	
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;
		
	НастройкиОтражения = МСФОВНАУХ.ПолучитьНастройкиОтражения();	
	НастройкиОтражения.Вставить("СтоимостьВНАМСФО", 			Истина);
	НастройкиОтражения.Вставить("ПараметрыАмортизацииВНАМСФО",	Истина);
	НастройкиОтражения.Вставить("СписатьИсточник", 				Истина);
	
	МСФОВНАУХ.ОтразитьДвиженияПараметровУчетаВНА(Движения, Реквизиты, ТаблицаВНА, НастройкиОтражения);
	
	ТаблицаПроводкиВНА.Колонки.Добавить("ИсточникВНАДт");
	ТаблицаПроводкиВНА.Колонки.Добавить("ИсточникВНАКт");
	ТаблицаПроводкиВНА.Колонки.Добавить("ИсточникГруппаВНА");
	ТаблицаПроводкиВНА.Колонки.Добавить("ИсточникВНА");
	
	Для каждого СтрокаВНА Из ТаблицаПроводкиВНА Цикл
		СтрокаВНА.ИсточникВНА = СтрокаВНА.ВНА;
		СтрокаВНА.ИсточникГруппаВНА = СтрокаВНА.ГруппаВНА;
		СтрокаВНА.ИсточникВНАДт = Истина;
		//для проводок модернизации Кт не меняем, для НА и переоценки - меняем
		СтрокаВНА.ИсточникВНАКт = ?(СтрокаВНА.ВидОперации = Справочники.ВидыОпераций.МодернизацияВНА, Неопределено, Истина);
	КонецЦикла;
	
	МСФОВНАУХ.ОтразитьПроводкиВНА(Движения, Реквизиты, ТаблицаПроводкиВНА, Отказ, НастройкиОтражения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ЗаполнитьЗависимостиРеквизитовДокумента(ФормаДокумента) Экспорт 
	
	ЗависимостиРеквизитов = Новый Массив;
	
	Реквизиты = Новый Структура;
	ФормаДокумента.КэшируемыеЗначения.Вставить("ЗависимостиРеквизитов", ЗависимостиРеквизитов);

КонецПроцедуры

Функция ПолучитьИменаСубконто() Экспорт 

	Результат = Новый Структура;
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетЗатратСубконто1НСБУ");
	Субконто.Вставить(2, "СчетЗатратСубконто2НСБУ");
	Субконто.Вставить(3, "СчетЗатратСубконто3НСБУ");
	
	Результат.Вставить("СчетЗатратНСБУ", Субконто);
	
	Субконто = Новый Соответствие;
	Субконто.Вставить(1, "СчетЗатратСубконто1МСФО");
	Субконто.Вставить(2, "СчетЗатратСубконто2МСФО");
	Субконто.Вставить(3, "СчетЗатратСубконто3МСФО");
	
	Результат.Вставить("СчетЗатратМСФО", Субконто);
	
	Результат.Вставить("ИсключенияСкрытияСубконто", Новый Структура("СчетЗатратМСФО,СчетЗатратНСБУ"));

	Возврат Результат;
	
КонецФункции

Функция ПолучитьСтруктуруДействий(ДляФормы = Ложь) Экспорт
	
	СтруктураДействий = Новый Структура;
	
	СоответствиеКолонок = Новый Структура;		
	
	СоответствиеКолонок.Вставить("СПИНСБУ",							"СПИМСФО");
	СоответствиеКолонок.Вставить("ОбъемВыработкиНСБУ",				"ОбъемВыработкиМСФО");
	СоответствиеКолонок.Вставить("КоэффициентУскоренияНСБУ",		"КоэффициентУскоренияМСФО");
	СоответствиеКолонок.Вставить("СуммаМодернизацииНСБУ",			"СуммаМодернизацииМСФО");
	СоответствиеКолонок.Вставить("СуммаМодернизацииВВалютеНСБУ",	"СуммаМодернизацииВВалютеМСФО");
				
	ЗаполнитьПоКолонкамИсточникам = Новый Структура("ТолькоНезаполненные,ЗаполнитьКолонкуИзменения,СоответствиеКолонок", 
															Ложь, Ложь, СоответствиеКолонок);
															
	СтруктураДействий.Вставить("ЗаполнитьПоКолонкамИсточникам", ЗаполнитьПоКолонкамИсточникам);
	
	ПараметрыВНА = Новый Структура;
	ПараметрыВНА.Вставить("ГруппаВНА", 				"ГруппаВНА");	
	ПараметрыВНА.Вставить("БалансоваяСтоимость", 	"БалансоваяСтоимость");
	
	Если Не Константы.АлгоритмНачиcленияАмортизацииАналогичноРСБУ.Получить() Тогда
		ПараметрыВНА.Вставить("АмортизацияРасчет", "АмортизацияРасчет");
	КонецЕсли;	
	
	СтруктураДействий.Вставить("ЗаполнитьПараметрыВНА", Новый Структура("МСФО", ПараметрыВНА));
		
	Возврат СтруктураДействий;

КонецФункции

#КонецОбласти

#КонецЕсли
