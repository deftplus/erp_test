
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	МСФОУХ.ОбновитьУсловноеОформлениеФормы(ЭтаФорма);	
	УправлениеФормой(ЭтаФорма);
	
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ДокументыОснованияПараллельногоУчета"
	 И ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ДокументыОснования.Очистить();
		Для Каждого СтрокаСписка Из ВыбранноеЗначение Цикл
			Если СтрокаСписка.Значение.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			СтрокаТаблицы = Объект.ДокументыОснования.Добавить();
			СтрокаТаблицы.ДокументОснование = СтрокаСписка.Значение;
		КонецЦикла;
		
		МСФОКлиентСерверУХ.УправлениеФормой(ЭтаФорма,, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументМСФО(Команда)
	МСФОКлиентУХ.СоздатьДокументМСФО(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДанными(Команда)
		
	ОбновитьКэширование();	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ВНА(Объект.ВНА, ПолучитьСтруктуруДействий(), КэшируемыеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодробноВНА(Команда)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Истина, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМА(Команда)
	
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.НематериальныеАктивы.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНЗС(Команда)
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМПЗ(Команда)
	КэшируемыеЗначения.Вставить("ТипВНА", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Элементы.ВНА.ДобавитьСтроку();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Заполнение

&НаКлиенте
Процедура ЗаполнитьПоОснованиям(Команда)
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДокументыОснования");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзУчетнойСистемы(Команда)
	
	ДанныеЗаполнения = Новый Структура("ИсточникЗаполнения", "ДанныеНСБУ");
	МСФОКлиентУХ.ЗаполнитьДокумент(ЭтаФорма, ДанныеЗаполнения, "ВНА");

КонецПроцедуры
	
&НаКлиенте
Процедура ЗаполнитьТекущимиДаннымиНСБУ(Команда)
		
	ОбновитьКэширование();	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ВНА(Объект.ВНА, ПолучитьСтруктуруДействий(), КэшируемыеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКолонкамНСБУ(Команда)
	ЗаполнитьПоКолонкамНСБУСервер();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВКолонкеПоВыделенным(Команда)
	МСФОКлиентУХ.УстановитьЗначениеВКолонкеПоВыделеннымСтрокам(ЭтаФорма, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущимиДаннымиМСФО(Команда)
	
	ОбновитьКэширование();	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьТЧ_ВНА(Объект.ВНА, ПолучитьСтруктуруДействий(), КэшируемыеЗначения);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	Для каждого СтрокаВНА Из Объект.ВНА Цикл
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, СтрокаВНА, Истина, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.УправлениеФормой(ЭтаФорма, "ВНА", Ложь);
	Объект.ВНА.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументОснованиеНеУказанГиперссылкаНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДобавитьДокументОснованиеНажатие(Элемент)
	
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА"); 
		
КонецПроцедуры

&НаКлиенте
Процедура ТекстДокументыОснованияНажатие(Элемент, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьСписокДокументовОснований(ЭтаФорма, "ВНА", СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	МСФОКлиентУХ.ОткрытьФормуРедактированияМногострочногоТекста(ЭтаФорма, Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)	
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТабличнойЧасти

&НаКлиенте
Процедура ОтобратьСтрокиРасхождений(Команда)
	
	Если (Элементы.ВНА.ОтборСтрок = Неопределено) ИЛИ НЕ Элементы.ВНА.ОтборСтрок.Свойство("ЕстьРасхождения") Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРасхождения", Истина);
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Истина;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиРасхождений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьСтрокиИзменений(Команда)
	
	Если Элементы.ВНА.ОтборСтрок = Неопределено Тогда
		
		Элементы.ВНА.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьИзменение", Истина);
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Истина;
		
	Иначе
		
		Элементы.ВНА.ОтборСтрок = Неопределено;
		Элементы.ВНАОтобратьСтрокиИзменений.Пометка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ОбновитьКэширование();	
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, ПолучитьСтруктуруДействий(), КэшируемыеЗначения);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруДействий()
	
	ЗаполнитьПараметрыВНА = Новый Структура("МСФО,НСБУ", Новый Структура, Новый Структура);
	
	ЗаполнитьПараметрыВНА.МСФО.Вставить("ГруппаВНА", "ГруппаВНА");
	ЗаполнитьПараметрыВНА.МСФО.Вставить("ЛиквидационнаяСтоимостьМСФО", "ЛиквидационнаяСтоимость");
	ЗаполнитьПараметрыВНА.МСФО.Вставить("СПИМСФО", "СПИ");
	ЗаполнитьПараметрыВНА.МСФО.Вставить("СпособНачисленияАмортизацииМСФО", "СпособНачисленияАмортизации");
	
	ЗаполнитьПараметрыВНА.НСБУ.Вставить("СПИНСБУ", "СПИ");	
	ЗаполнитьПараметрыВНА.НСБУ.Вставить("СпособНачисленияАмортизацииНСБУ", "СпособНачисленияАмортизации");
	
	СтруктураДействий = Новый Структура("ЗаполнитьПараметрыВНА",  ЗаполнитьПараметрыВНА);
	Возврат СтруктураДействий;

КонецФункции

&НаКлиенте
Процедура ВНАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
			
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МСФОКлиентСерверУХ.ОбновитьВыборТипаВНА(ЭтаФорма, НоваяСтрока, Копирование);
	
	Если КэшируемыеЗначения.Свойство("ИспользуютсяТК") И КэшируемыеЗначения.ИспользуютсяТК Тогда
		ТекущаяСтрока.СторнироватьДанныеНСБУ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАВНАОчистка(Элемент, СтандартнаяОбработка)
	Элементы.ВНАВНА.ВыбиратьТип = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы
&НаКлиенте
Процедура ВНАПослеУдаления(Элемент)
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	МСФОКлиентУХ.ТабличнаяЧастьПриОкончанииРедактирования(ЭтаФорма, Элемент, НоваяСтрока, ОтменаРедактирования);	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетВНАМСФОПриИзменении(Элемент)
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
	
	ОбновитьВидимостьГруппыПодробно();
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетЗатратНСБУПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ЗаполнитьСчетаМСФОИзТрансляции", Новый Структура("СчетЗатратМСФО", "СчетЗатратНСБУ"));
	СтруктураДействий.Вставить("ЗаполнитьДоступностьПоИменамСубконто", КэшируемыеЗначения.ИменаСубконто);
		
	КэшДокумента = Новый Структура("ШаблонТрансляции,ИменаСубконто", КэшируемыеЗначения.ШаблонТрансляции, КэшируемыеЗначения.ИменаСубконто);
	ОбработкаТабличныхЧастейКлиентСерверУХ.ОбработатьСтрокуТЧ_ВНА(ТекущаяСтрока, СтруктураДействий, КэшДокумента); 
	
	МСФОКлиентСерверУХ.ПриИзмененииСчетаТЧ(ЭтаФорма, Элемент, "ВНА");
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПередНачаломИзменения(Элемент, Отказ)
КонецПроцедуры

&НаКлиенте
Процедура ВНАВалютаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Истина, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАДатаСобытияНСБУПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Истина, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАДатаСобытияМСФОПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Ложь, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаМодернизацииНСБУПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Истина, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВНАСуммаМодернизацииМСФОПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммыВВалютеСтроки(ЭтаФорма, ТекущаяСтрока, Ложь, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВНАПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	МСФОКлиентСерверУХ.ОбновитьВидимостьСубконтоГруппыПодробно(ЭтаФорма, ТекущаяСтрока, "ВНА");
	МСФОКлиентСерверУХ.ОбновитьДоступностьЗависимыхРеквизитов(ЭтаФорма, ТекущаяСтрока, "ВНА");
	МСФОКлиентСерверУХ.ВидимостьПодробно(ЭтаФорма, Ложь, "ВНА");
	
	ОбновитьВидимостьГруппыПодробно();
			
КонецПроцедуры

&НаКлиенте
Процедура ВНАСтоимостьМСФОПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетЗатратСубконто1МСФОПриИзменении(Элемент)
	ЗаполнитьСуммуМодернизацииОстатком()
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетЗатратСубконто2МСФОПриИзменении(Элемент)
	ЗаполнитьСуммуМодернизацииОстатком()
КонецПроцедуры

&НаКлиенте
Процедура ВНАСчетЗатратСубконто3МСФОПриИзменении(Элемент)
	ЗаполнитьСуммуМодернизацииОстатком()
КонецПроцедуры

#КонецОбласти
 
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Стандартные

&НаСервере
Процедура ПодготовитьФормуНаСервере(ТекущийОбъект = Неопределено)
	
	ЭтаФорма.КэшируемыеЗначения = Новый Структура;	
	ЭтаФорма.КэшируемыеЗначения.Вставить("СпособыНачисленияАмортизации", 	МСФОВНАВызовСервераУХ.ПолучитьВозможныеСпособыНачисленияАмортизации());
	ЭтаФорма.КэшируемыеЗначения.Вставить("ИменаСубконто", 					Документы.МодернизацияВНАМСФО.ПолучитьИменаСубконто());
		
	СчетаГруппыПодробно = МСФОУХ.ПолучитьСчетаГруппыПодобно(ЭтаФорма, "ВНА");
	ЭтаФорма.КэшируемыеЗначения.Вставить("СчетаГруппыПодробно", СчетаГруппыПодробно);

	МСФОУХ.ПодготовитьФормуНаСервере(ЭтаФорма, "ВНА", , Истина, Истина);
	
	Если Объект.ВНА.Количество() Тогда
		ЗаполнитьРеквизитыВНАФормы(Объект.ВНА);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	МСФОКлиентСерверУХ.УправлениеФормой(Форма, "ВНА", Ложь);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыВНАФормы(СтрокиВНА)

	ОбъектыВНА = Новый Массив;
	Для каждого СтрокаВНА Из СтрокиВНА Цикл
		ОбъектыВНА.Добавить(СтрокаВНА.ВНА);
	КонецЦикла;
	
	ГраницаДоДокумента = МСФОВызовСервераУХ.ПолучитьГраницуДоДокумента(Объект.Дата, Объект.Ссылка);
	ВидыУчета = УчетМСФОПовтИспУХ.ПолучитьСписокВидовУчетаПоРежимуЗаполнения(Объект.РежимЗаполнения);
	
	ПараметрыВНА = МСФОВНАВызовСервераУХ.ПолучитьРеквизитыВНА(ГраницаДоДокумента, ОбъектыВНА, 
		Объект.Организация, ВидыУчета, Объект.Сценарий, "ВНА,ГруппаВНА,ВидУчета,СпособНачисленияАмортизации");
		
	Для каждого СтрокаВНА Из СтрокиВНА Цикл
		
		РеквизитыНСБУ = ПараметрыВНА.НСБУ.Получить(СтрокаВНА.ВНА);
		Если РеквизитыНСБУ <> Неопределено Тогда
			СтрокаВНА.СпособНачисленияАмортизацииНСБУ = РеквизитыНСБУ.СпособНачисленияАмортизации;
		КонецЕсли;	
		
		РеквизитыМСФО = ПараметрыВНА.МСФО.Получить(СтрокаВНА.ВНА);
		Если РеквизитыМСФО <> Неопределено Тогда
			СтрокаВНА.СпособНачисленияАмортизацииМСФО = РеквизитыМСФО.СпособНачисленияАмортизации;
		КонецЕсли;	

	КонецЦикла;
	
КонецПроцедуры
	
#КонецОбласти

#Область ЗаполнениеТЧ

&НаКлиенте
Процедура Подключаемый_ЗаполнитьДокумент(РезультатВопроса = Неопределено, ДанныеЗаполнения) Экспорт
	
	Если (РезультатВопроса <> Неопределено) И (РезультатВопроса <> КодВозвратаДиалога.Да) Тогда
		Возврат;	
	КонецЕсли;
    
    ЗаполнитьДокумент(ДанныеЗаполнения);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокумент(ДанныеЗаполнения)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Заполнить(ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);
	МСФОКлиентСерверУХ.ОбновитьВидимостьДокументыОснования(ЭтаФорма);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеРеквизитовСтрокиТЧ

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСуммыВВалютеСтроки(Форма, СтрокаВНА, ПересчитатьСуммаМодернизацииВВалютеНСБУ = Ложь, ПересчитатьСуммаМодернизацииВВалютеМСФО = Ложь)

	Если ПересчитатьСуммаМодернизацииВВалютеНСБУ Тогда
		МСФОКлиентСерверУХ.ПересчитатьСуммуВВалюте(Форма, СтрокаВНА.СуммаМодернизацииВВалютеНСБУ, 
		СтрокаВНА.СуммаМодернизацииНСБУ, СтрокаВНА.Валюта, Форма.Объект.Дата);
	КонецЕсли;
	
	Если ПересчитатьСуммаМодернизацииВВалютеМСФО Тогда
		МСФОКлиентСерверУХ.ПересчитатьСуммуВВалюте(Форма, СтрокаВНА.СуммаМодернизацииВВалютеМСФО, 
		СтрокаВНА.СуммаМодернизацииМСФО, СтрокаВНА.Валюта, Форма.Объект.Дата);
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоКолонкамНСБУСервер()
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(ЭтаФорма);	
КонецПроцедуры    

#КонецОбласти

#Область ЗаполнениеТЧ

&НаКлиенте
Процедура ОбновитьКэширование()
	
	ДатаРасчета = Объект.Дата;
	
	КэшируемыеЗначения.Вставить("Организация", 		Объект.Организация);
	КэшируемыеЗначения.Вставить("Сценарий", 		Объект.Сценарий);
	КэшируемыеЗначения.Вставить("ВидыУчета", 		УчетМСФОПовтИспУХ.ПолучитьСписокВидовУчетаПоРежимуЗаполнения(Объект.РежимЗаполнения));
	КэшируемыеЗначения.Вставить("Ссылка", 			Объект.Ссылка);
	КэшируемыеЗначения.Вставить("ДатаДокумента", 	Объект.Дата);
	КэшируемыеЗначения.Вставить("АлгоритмРСБУ",		ЛОЖЬ);//использовать текущие параметры ВНА для Алгоритма РСБУ
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьГруппыПодробно()

	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВНАЛиквидационнаяСтоимостьМСФО.Видимость = Не ТекущаяСтрока.СпособНачисленияАмортизацииМСФО.Пустая();
	Валютный = УчетМСФОПовтИспУХ.ПолучитьСвойстваСчета(ТекущаяСтрока.СчетЗатратМСФО).Валютный;
	Элементы.ВНАВалюта.Видимость = Валютный;
	Элементы.ВНАСуммаМодернизацииВВалютеНСБУ.Видимость = Валютный;
	Элементы.ВНАСуммаМодернизацииВВалютеМСФО.Видимость = Валютный;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммуМодернизацииОстатком()

	ИмяПоляСчета = "СчетЗатратМСФО";
	
	ТекущаяСтрока = Элементы.ВНА.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Субконто = МСФОКлиентСерверУХ.ПолучитьСубконтоСчета(ЭтаФорма, ИмяПоляСчета, ТекущаяСтрока);	
	Если Субконто = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаСсылка = Новый Структура("Дата,Ссылка", Объект.Дата, Объект.Ссылка);	
	ОстатокМСФО = МСФОВызовСервераУХ.ПолучитьОстатокПоСчетуСубконто(Объект.Организация, Объект.Сценарий, ДатаСсылка, ТекущаяСтрока[ИмяПоляСчета], Субконто);
	Если ОстатокМСФО <> 0 Тогда
		ТекущаяСтрока.СуммаМодернизацииМСФО = ОстатокМСФО;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

