#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.ПроизводствоБезЗаказа - документ, для которого выполняется инициализация параметров.
//	РежимЗаписи - РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("Проведение");
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если ПроведениеДокументов.СвойстваДокумента(ЭтотОбъект).ЭтоНовый Тогда
		ЭтотОбъект.ПолучитьСсылкуНового();
	КонецЕсли;
	
	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются Тогда
		ПобочныеИзделия.Очистить();
		МатериалыИРаботы.Очистить();
		Трудозатраты.Очистить();
	КонецЕсли;
	
	ПараметрыОкругления = Документы.ПроизводствоБезЗаказа.ПараметрыТЧДляОкругления();
	НоменклатураСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["ВыходныеИзделия"]);
	НоменклатураСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["ПобочныеИзделия"]);
	НоменклатураСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["МатериалыИРаботы"]);
	
	ПараметрыУказанияСерий =
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПроизводствоБезЗаказа);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.ВыходныеИзделия);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.ПобочныеИзделия);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.МатериалыИРаботы);
	
	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект,
													"ВыходныеИзделия",
													"МаксимальныйКодСтрокиВыходныеИзделия");
	
	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект,
													"Трудозатраты",
													"МаксимальныйКодСтрокиТрудозатраты");
	
	НайденныеСтроки = ВыходныеИзделия.НайтиСтроки(
		Новый Структура("НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию));
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Назначение = Неопределено;
	КонецЦикла;
	
	НайденныеСтроки = ПобочныеИзделия.НайтиСтроки(
		Новый Структура("НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию));
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Назначение = Неопределено;
	КонецЦикла;
	
	ПараметрыВыбораСтатейИАналитик = Документы.ПроизводствоБезЗаказа.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПередЗаписью(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	СтрокаТЧ = "ВыходныеИзделия,ПобочныеИзделия,МатериалыИРаботы";
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, СтрокаТЧ);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ЗаполнитьКлючиАналитики();
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасовВыходныеИзделия.Очистить();
			ВидыЗапасовПобочныеИзделия.Очистить();
			ВидыЗапасовМатериалыИРаботы.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	//Настройка счетов учета
	НастройкаСчетовУчетаСервер.ПередЗаписью(ЭтотОбъект,
		Документы.ПроизводствоБезЗаказа.ПараметрыНастройкиСчетовУчета());
	
	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());	
	
	ПроизводствоБезЗаказаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	Если Не ЗначениеЗаполнено(Автор) И ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
	ОбщегоНазначенияУТ.СинхронизироватьКлючи(ЭтотОбъект);
	
	Если Не Отказ
		И Не ПометкаУдаления Тогда
		Документы.ПроизводствоБезЗаказа.СформироватьПартииПроизводства(ЭтотОбъект);
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	ИнициализироватьДокумент();
	
	РаспоряжениеДляТрудозатрат	= Истина;
	ВидыЗапасовУказаныВручную	= Ложь;
	
	ВидыЗапасовМатериалыИРаботы.Очистить();
	ВидыЗапасовВыходныеИзделия.Очистить();
	ВидыЗапасовПобочныеИзделия.Очистить();
	
	СтрокаТЧ = "ВыходныеИзделия,ПобочныеИзделия,МатериалыИРаботы";
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ЭтотОбъект, СтрокаТЧ);
	
	ПроизводствоБезЗаказаЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка." + Метаданные().Имя)Тогда
		
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ПараметрыВыбораСтатейИАналитик = Документы.ПроизводствоБезЗаказа.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ИнициализироватьДокумент();
	
	Если Не ЗначениеЗаполнено(СпособРаспределенияЗатратНаВыходныеИзделия)
		И (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются) Тогда
		СпособРаспределенияЗатратНаВыходныеИзделия = Перечисления.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости;
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	#Область ПроверкаПолейГруппЗатрат

	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу
		ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.НомерГруппыЗатрат");
		МассивНепроверяемыхРеквизитов.Добавить("МатериалыИРаботы.НомерГруппыЗатрат");
		МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.НомерГруппыЗатрат");
		
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Назначение");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		ПроверитьЗаполнениеНазначения(Отказ);
	КонецЕсли;
	
	ПроверитьПривязкуЗатратКГруппамЗатрат(Отказ);
	
	#КонецОбласти

	#Область ПроверкаСклада

	МассивНепроверяемыхРеквизитов.Добавить("МатериалыИРаботы.Склад");
	ПроверитьСклады(Отказ);
	
	#КонецОбласти

	#Область ПроверкаХарактеристик

	ПараметрыПроверкиХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "ВыходныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "ПобочныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "МатериалыИРаботы";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	#КонецОбласти

	#Область ПроверкаСерий

	ПараметрыУказанияСерий =
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПроизводствоБезЗаказа);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.ВыходныеИзделия,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.ПобочныеИзделия,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.МатериалыИРаботы,
		Отказ,
		МассивНепроверяемыхРеквизитов);

	#КонецОбласти

	//++ НЕ УТКА
	#Область ПроверкаНазначенийДавальца

	ПроверитьВозможностьВыбораНазначенияДавальца("ВыходныеИзделия", Отказ);
	ПроверитьВозможностьВыбораНазначенияДавальца("ПобочныеИзделия", Отказ);
	ПроверитьВозможностьВыбораНазначенияДавальца("МатериалыИРаботы", Отказ);
	ПроверитьОтнесениеМатериаловДавальца(Отказ);
	
	ДавальческаяСхема.ПроверитьПодразделениеДоговораНазначения(ЭтотОбъект, "ВыходныеИзделия", Отказ);
	ДавальческаяСхема.ПроверитьПодразделениеДоговораНазначения(ЭтотОбъект, "ПобочныеИзделия", Отказ);
	
	#КонецОбласти
	//-- НЕ УТКА
	
	#Область ПроверкаКоличеств

	ПараметрыПроверкиКоличества = Документы.ПроизводствоБезЗаказа.ПараметрыТЧДляОкругления();
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["ВыходныеИзделия"]);
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["ПобочныеИзделия"]);
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["МатериалыИРаботы"]);
	
	#КонецОбласти

	#Область ПроверкаПолучателейИАналитик
	
	ПараметрыВыбораСтатейИАналитик = Документы.ПроизводствоБезЗаказа.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
	#КонецОбласти

	#Область ПроверкаНДС
	
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяТабличнойЧасти						= "ВыходныеИзделия";
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов			= "Получатель";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов			= "АналитикаРасходов";
	ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов		= "Получатель";
	ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
	
	ПараметрыПроверки.ИмяТабличнойЧасти = "ПобочныеИзделия";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
	
	#КонецОбласти
	
	ЗапасыСервер.ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ЭтотОбъект, Отказ, "ВыходныеИзделия");
	ЗапасыСервер.ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ЭтотОбъект, Отказ, "ПобочныеИзделия");
	
	Если Не РаспоряжениеДляТрудозатрат Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.Исполнитель");
	КонецЕсли;
	
	ПроверитьДолиСтоимости(Отказ);
	
	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции
		Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособРаспределенияЗатратНаВыходныеИзделия");
	КонецЕсли;
	
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ЭтотОбъект);
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

#Область ЗаполнениеВидовЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПерезаполнитьВидыЗапасов = ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	#Область ВидыЗапасовВыходныеИзделия
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхВыходныеИзделия();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыВыходныеИзделия(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("ВыходныеИзделия");
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Ложь,
																ПараметрыЗаполнения);
		
		ВидыЗапасовВыходныеИзделия.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов", "Количество");
		
		ЗаполнитьДополнительныеПоляВидовЗапасовВыходныеИзделия(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВидыЗапасовПобочныеИзделия
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхПобочныеИзделия();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыПобочныеИзделия(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("ПобочныеИзделия");
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Ложь,
																ПараметрыЗаполнения);
		
		ВидыЗапасовПобочныеИзделия.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов", "Количество");
		
		ЗаполнитьДополнительныеПоляВидовЗапасовПобочныеИзделия(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВидыЗапасовМатериалы
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхМатериалыИРаботы();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыМатериалыИРаботы(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("МатериалыИРаботы");
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполнения);
		
		ВидыЗапасовМатериалыИРаботы.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД",
											"Количество, КоличествоПоРНПТ");
		
		Если Не Отказ Тогда
			ЗаполнитьДополнительныеПоляВидовЗапасовМатериалыИРаботы(МенеджерВременныхТаблиц);
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	Если Не Отказ Тогда
		СтрокаТЧ = "ВидыЗапасовВыходныеИзделия,ВидыЗапасовПобочныеИзделия,ВидыЗапасовМатериалыИРаботы";
		
		ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, СтрокаТЧ);
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЗаполненияВидовЗапасов(ИмяТЧ)
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Очистить();
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	
	Если ИмяТЧ = "ВыходныеИзделия"
		ИЛИ ИмяТЧ = "ПобочныеИзделия"
		ИЛИ ИмяТЧ = "МатериалыИРаботы" Тогда
		
		Если ИмяТЧ = "ВыходныеИзделия" Тогда
			ИмяТЧВидыЗапасов ="ВидыЗапасовВыходныеИзделия";
		ИначеЕсли ИмяТЧ = "ПобочныеИзделия" Тогда
			ИмяТЧВидыЗапасов ="ВидыЗапасовПобочныеИзделия";
		ИначеЕсли ИмяТЧ = "МатериалыИРаботы" Тогда
			ИмяТЧВидыЗапасов ="ВидыЗапасовМатериалыИРаботы";
		КонецЕсли;
		
		ПараметрыЗаполнения.ИмяТЧВидыЗапасов = ИмяТЧВидыЗапасов;
		ПараметрыЗаполнения.ДокументДелаетИПриходИРасход = Истина;
		
		Если ИмяТЧ = "ВыходныеИзделия"
			ИЛИ ИмяТЧ = "ПобочныеИзделия" Тогда
			
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
			ПараметрыЗаполнения.ИмяТаблицыОстатков = "ПродукцияКОформлениюВыпуска";
			ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
			ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Ложь;
			ПараметрыЗаполнения.ВладелецТовараВШапке = Ложь;
			ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение(ИмяТЧ);
			ПараметрыЗаполнения.СторнируемыйДокумент = СторнируемыйДокумент;
			
		Иначе
			
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
			
			ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = "ПоХозяйственнойОперации";
			
			ДействияПоХозяйственнойОперации = Новый Соответствие;
			ДействияПоХозяйственнойОперации.Вставить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство, "Всегда");
			ДействияПоХозяйственнойОперации.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства, "Никогда");
			
			ПараметрыЗаполнения.ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации =
				ДействияПоХозяйственнойОперации;
			
			ПараметрыЗаполнения.ЕстьТаблицаПриходуемыхВидовЗапасов = Истина;
			ПараметрыЗаполнения.ИмяТаблицыПриходуемыхВидовЗапасов  = "ВТПриходуемыеВидыЗапасовИзделия";
			
		КонецЕсли;
		
	ИначеЕсли ИмяТЧ = "Проведение" Тогда
		
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
		ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение();
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'Неизвестное имя табличной части видов запасов: ""%ИмяТЧ%""';
								|en = 'Unknown name of table of inventory owner attributes: ""%ИмяТЧ%""'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяТЧ%", ИмяТЧ);
		Возврат ТекстИсключения;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовВыходныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель					КАК Получатель,
	|	ТаблицаТоваров.Спецификация					КАК Спецификация,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов	КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета		КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.КодСтроки					КАК КодСтроки,
	|	СУММА(ТаблицаТоваров.ДоляСтоимости)			КАК ДоляСтоимости,
	|	СУММА(ТаблицаТоваров.Количество)			КАК Количество,
	|	СУММА(ТаблицаТоваров.Сумма)					КАК Сумма
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.Спецификация,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.КодСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НаправлениеВыпуска,
	|	Получатель,
	|	Спецификация,
	|	Подразделение,
	|	АналитикаРасходов,
	|	АналитикаАктивовПассивов,
	|	НастройкаСчетовУчета,
	|	ИдентификаторСтроки,
	|	НомерГруппыЗатрат,
	|	ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.КодСтроки,
	|	Количество УБЫВ";
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		ДоляСтоимостиТоваров = ВыборкаТовары.ДоляСтоимости;
		СуммаТоваров = ВыборкаТовары.Сумма;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовВыходныеИзделия.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовВыходныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.НаправлениеВыпуска			= ВыборкаТовары.НаправлениеВыпуска;
			НоваяСтрока.Получатель					= ВыборкаТовары.Получатель;
			НоваяСтрока.Спецификация				= ВыборкаТовары.Спецификация;
			НоваяСтрока.Подразделение				= ВыборкаТовары.Подразделение;
			НоваяСтрока.АналитикаРасходов			= ВыборкаТовары.АналитикаРасходов;
			НоваяСтрока.АналитикаАктивовПассивов	= ВыборкаТовары.АналитикаАктивовПассивов;
			НоваяСтрока.НастройкаСчетовУчета		= ВыборкаТовары.НастройкаСчетовУчета;
			НоваяСтрока.ИдентификаторСтроки			= ВыборкаТовары.ИдентификаторСтроки;
			НоваяСтрока.ОформитьОтчетДавальцу		= ВыборкаТовары.ОформитьОтчетДавальцу;
			НоваяСтрока.КодСтроки					= ВыборкаТовары.КодСтроки;
			НоваяСтрока.НомерГруппыЗатрат			= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество					= Количество;
			НоваяСтрока.ДоляСтоимости				= Количество * ДоляСтоимостиТоваров / КоличествоТоваров;
			НоваяСтрока.Сумма						= Количество * СуммаТоваров / КоличествоТоваров;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров		= КоличествоТоваров - НоваяСтрока.Количество;
			ДоляСтоимостиТоваров	= ДоляСтоимостиТоваров - НоваяСтрока.ДоляСтоимости;
			СуммаТоваров			= СуммаТоваров - НоваяСтрока.Сумма;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасовВыходныеИзделия.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовВыходныеИзделия.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовПобочныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель					КАК Получатель,
	|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов	КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета		КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
	|	СУММА(ТаблицаТоваров.Количество)			КАК Количество,
	|	СУММА(ТаблицаТоваров.Сумма)					КАК Сумма
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Подразделение,
	|	НаправлениеВыпуска,
	|	ПодразделениеПолучатель,
	|	Получатель,
	|	СтатьяКалькуляции,
	|	АналитикаРасходов,
	|	АналитикаАктивовПассивов,
	|	НастройкаСчетовУчета,
	|	ИдентификаторСтроки,
	|	НомерГруппыЗатрат,
	|	ОформитьОтчетДавальцу,
	|	Количество УБЫВ";
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		СуммаТоваров = ВыборкаТовары.Сумма;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовПобочныеИзделия.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовПобочныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Подразделение				= ВыборкаТовары.Подразделение;
			НоваяСтрока.НаправлениеВыпуска			= ВыборкаТовары.НаправлениеВыпуска;
			НоваяСтрока.ПодразделениеПолучатель		= ВыборкаТовары.ПодразделениеПолучатель;
			НоваяСтрока.Получатель					= ВыборкаТовары.Получатель;
			НоваяСтрока.СтатьяКалькуляции			= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.АналитикаРасходов			= ВыборкаТовары.АналитикаРасходов;
			НоваяСтрока.АналитикаАктивовПассивов	= ВыборкаТовары.АналитикаАктивовПассивов;
			НоваяСтрока.НастройкаСчетовУчета		= ВыборкаТовары.НастройкаСчетовУчета;
			НоваяСтрока.ИдентификаторСтроки			= ВыборкаТовары.ИдентификаторСтроки;
			НоваяСтрока.ОформитьОтчетДавальцу		= ВыборкаТовары.ОформитьОтчетДавальцу;
			НоваяСтрока.НомерГруппыЗатрат			= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество					= Количество;
			НоваяСтрока.Сумма						= Количество * СуммаТоваров / КоличествоТоваров;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров	= КоличествоТоваров - НоваяСтрока.Количество;
			СуммаТоваров		= СуммаТоваров - НоваяСтрока.Сумма;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасовПобочныеИзделия.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовПобочныеИзделия.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовМатериалыИРаботы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции					КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.Подразделение						КАК Подразделение,
	|	ТаблицаТоваров.НомерГруппыЗатрат					КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|	СУММА(ТаблицаТоваров.Количество)					КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	СтатьяКалькуляции,
	|	Подразделение,
	|	НомерГруппыЗатрат,
	|	Количество УБЫВ";
	
	МассивВЗ = ВидыЗапасовМатериалыИРаботы.Выгрузить(, "ВидЗапасов").ВыгрузитьКолонку("ВидЗапасов");
	ТипыЗапасов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивВЗ, "ТипЗапасов");
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовМатериалыИРаботы.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовМатериалыИРаботы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			Если ТипыЗапасов[СтрокаЗапасов.ВидЗапасов] = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
				НоваяСтрока.ВидЗапасовПолучателя = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Организация, , ВыборкаТовары);
			Иначе
				НоваяСтрока.ВидЗапасовПолучателя = НоваяСтрока.ВидЗапасов;
			КонецЕсли;
			
			НоваяСтрока.СтатьяКалькуляции	= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.Подразделение		= ВыборкаТовары.Подразделение;
			НоваяСтрока.НомерГруппыЗатрат	= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество			= Количество;
			НоваяСтрока.КоличествоПоРНПТ	= Количество * СтрокаЗапасов.КоличествоПоРНПТ / СтрокаЗапасов.Количество;
			
			СтрокаЗапасов.Количество		= СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.КоличествоПоРНПТ	= СтрокаЗапасов.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			
			КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыПоиска = Новый Структура("Количество", 0);
	МассивУдаляемыхСтрок = ВидыЗапасовМатериалыИРаботы.НайтиСтроки(ПараметрыПоиска);
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовМатериалыИРаботы.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, Дата, Подразделение, ВыпускПодДеятельность";

	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТаблицыВыходныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|	ТаблицаТоваров.Получатель					КАК Получатель,
		|	ТаблицаТоваров.Спецификация					КАК Спецификация,
		|	ТаблицаТоваров.Подразделение				КАК Подразделение,
		|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|	ТаблицаТоваров.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
		|	ТаблицаТоваров.КодСтроки					КАК КодСтроки,
		|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаТоваров.Получатель					КАК Получатель,
		|		ТаблицаТоваров.Спецификация					КАК Спецификация,
		|		ТаблицаТоваров.Подразделение				КАК Подразделение,
		|		ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
		|		ТаблицаТоваров.КодСтроки					КАК КодСтроки,
		|		ТаблицаТоваров.ДоляСтоимости				КАК ДоляСтоимости,
		|		ТаблицаТоваров.Количество					КАК Количество,
		|		ТаблицаТоваров.Сумма						КАК Сумма
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаВидыЗапасов.Получатель					КАК Получатель,
		|		ТаблицаВидыЗапасов.Спецификация					КАК Спецификация,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
		|		ТаблицаВидыЗапасов.КодСтроки					КАК КодСтроки,
		|		-ТаблицаВидыЗапасов.ДоляСтоимости				КАК ДоляСтоимости,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
		|		-ТаблицаВидыЗапасов.Сумма						КАК Сумма
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.НаправлениеВыпуска,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.Спецификация,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.ОформитьОтчетДавальцу,
		|	ТаблицаТоваров.КодСтроки
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
		|	ИЛИ НЕ СУММА(ТаблицаТоваров.ДоляСтоимости) = 0
		|	ИЛИ НЕ СУММА(ТаблицаТоваров.Сумма) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеТаблицыПобочныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение				КАК Подразделение,
		|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|	ТаблицаТоваров.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
		|	ТаблицаТоваров.Получатель					КАК Получатель,
		|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.Подразделение					КАК Подразделение,
		|		ТаблицаТоваров.НаправлениеВыпуска				КАК НаправлениеВыпуска,
		|		ТаблицаТоваров.ПодразделениеПолучатель			КАК ПодразделениеПолучатель,
		|		ТаблицаТоваров.Получатель						КАК Получатель,
		|		ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.ОформитьОтчетДавальцу			КАК ОформитьОтчетДавальцу,
		|		ТаблицаТоваров.Количество						КАК Количество,
		|		ТаблицаТоваров.Сумма							КАК Сумма
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаВидыЗапасов.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
		|		ТаблицаВидыЗапасов.Получатель					КАК Получатель,
		|		ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
		|		-ТаблицаВидыЗапасов.Сумма						КАК Сумма
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.НаправлениеВыпуска,
		|	ТаблицаТоваров.ПодразделениеПолучатель,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.ОформитьОтчетДавальцу
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
		|	ИЛИ НЕ СУММА(ТаблицаТоваров.Сумма) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеТаблицыМатериалыИРаботы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.Склад						КАК Склад,
		|		ТаблицаТоваров.Подразделение				КАК Подразделение,
		|		ТаблицаТоваров.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.СкладОтгрузки				КАК СкладОтгрузки,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.Склад
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ВременныеТаблицыДанныхВыходныеИзделия()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата																КАК Дата,
	|	&Организация														КАК Организация,
	|	НЕОПРЕДЕЛЕНО														КАК Партнер,
	|	НЕОПРЕДЕЛЕНО														КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)			КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)							КАК Валюта,
	|	&ВыпускПодДеятельность												КАК ВыпускПодДеятельность,
	|	&ВыпускПодДеятельность												КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)		КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение														КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)						КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)					КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)							КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Получатель												КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Спецификация												КАК Спецификация,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов								КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета									КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу									КАК ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.КодСтроки												КАК КодСтроки,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.ДоляСтоимости											КАК ДоляСтоимости,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Склад													КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Спецификация												КАК Спецификация,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов								КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета									КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу									КАК ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.КодСтроки												КАК КодСтроки,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ТаблицаТоваров.ДоляСтоимости											КАК ДоляСтоимости,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)								КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска				КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.Спецификация						КАК Спецификация,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ОформитьОтчетДавальцу			КАК ОформитьОтчетДавальцу,
	|	ТаблицаВидыЗапасов.КодСтроки						КАК КодСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма							КАК Сумма,
	|	ТаблицаВидыЗапасов.ДоляСтоимости					КАК ДоляСтоимости,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.Спецификация					КАК Спецификация,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
	|	ТаблицаВидыЗапасов.КодСтроки					КАК КодСтроки,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма						КАК Сумма,
	|	ТаблицаВидыЗапасов.ДоляСтоимости				КАК ДоляСтоимости,
	|	Аналитика.МестоХранения							КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			ВыходныеИзделия);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовВыходныеИзделия);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременныеТаблицыДанныхПобочныеИзделия()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация														КАК Организация,
	|	НЕОПРЕДЕЛЕНО														КАК Партнер,
	|	НЕОПРЕДЕЛЕНО														КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)			КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)							КАК Валюта,
	|	&ВыпускПодДеятельность												КАК ВыпускПодДеятельность,
	|	&ВыпускПодДеятельность												КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)		КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение														КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)						КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)					КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)							КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Получатель												КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель									КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов								КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета									КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу									КАК ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Склад													КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель									КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов								КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.НастройкаСчетовУчета									КАК НастройкаСчетовУчета,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу									КАК ОформитьОтчетДавальцу,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска				КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.ПодразделениеПолучатель			КАК ПодразделениеПолучатель,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ОформитьОтчетДавальцу			КАК ОформитьОтчетДавальцу,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма							КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма						КАК Сумма,
	|	Аналитика.МестоХранения							КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			ПобочныеИзделия);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовПобочныеИзделия);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременныеТаблицыДанныхМатериалыИРаботы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Дата			КАК Дата,
	|	&Организация	КАК Организация,
	|	НЕОПРЕДЕЛЕНО	КАК Партнер,
	|	НЕОПРЕДЕЛЕНО	КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)	КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)	КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)	КАК Валюта,
	|	&ВыпускПодДеятельность КАК ВыпускПодДеятельность,
	|	&ВыпускПодДеятельность КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ЛОЖЬ			КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение	КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)	КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)	КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				КАК Характеристика,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ТаблицаТоваров.Серия						КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий			КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Склад						КАК Склад,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Количество					КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура					КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика				КАК Характеристика,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ТаблицаТоваров.Серия						КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий			КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Склад						КАК Склад,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Количество					КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)	КАК СтавкаНДС,
	|	0											КАК СуммаСНДС,
	|	0											КАК СуммаНДС,
	|	0											КАК СуммаВознаграждения,
	|	0											КАК СуммаНДСВознаграждения,
	|	ИСТИНА										КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ											КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	Аналитика.МестоХранения							КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов			КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД			КАК НомерГТД,
	|	ВТВидыЗапасовИзделия.Количество			КАК Количество
	|ПОМЕСТИТЬ ВидыЗапасовВыходныеИзделия
	|ИЗ
	|	&ВидыЗапасовВыходныеИзделия КАК ВТВидыЗапасовИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов			КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД			КАК НомерГТД,
	|	ВТВидыЗапасовИзделия.Количество			КАК Количество
	|ПОМЕСТИТЬ ВидыЗапасовПобочныеИзделия
	|ИЗ
	|	&ВидыЗапасовПобочныеИзделия КАК ВТВидыЗапасовИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)						КАК Период,
	|	&Организация									КАК Организация,
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов					КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД					КАК НомерГТД,
	|	СУММА(ВТВидыЗапасовИзделия.Количество)			КАК Количество,
	|	0												КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТПриходуемыеВидыЗапасовИзделия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ВТВидыЗапасовИзделия.ВидЗапасов			КАК ВидЗапасов,
	|		ВТВидыЗапасовИзделия.НомерГТД			КАК НомерГТД,
	|		ВТВидыЗапасовИзделия.Количество			КАК Количество
	|	ИЗ
	|		ВидыЗапасовВыходныеИзделия КАК ВТВидыЗапасовИзделия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ВТВидыЗапасовИзделия.ВидЗапасов			КАК ВидЗапасов,
	|		ВТВидыЗапасовИзделия.НомерГТД			КАК НомерГТД,
	|		ВТВидыЗапасовИзделия.Количество			КАК Количество
	|	ИЗ
	|		ВидыЗапасовПобочныеИзделия КАК ВТВидыЗапасовИзделия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВидыЗапасовМатериалыИРаботы.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ВидыЗапасовМатериалыИРаботы.ВидЗапасов					КАК ВидЗапасов,
	|		ВидыЗапасовМатериалыИРаботы.НомерГТД					КАК НомерГТД,
	|		ВидыЗапасовМатериалыИРаботы.Количество					КАК Количество
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВидыЗапасовМатериалыИРаботы КАК ВидыЗапасовМатериалыИРаботы
	|	ГДЕ
	|		ВидыЗапасовМатериалыИРаботы.Ссылка = &СторнируемыйДокумент
	|	) КАК ВТВидыЗапасовИзделия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			МатериалыИРаботы);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовМатериалыИРаботы);
	Запрос.УстановитьПараметр("СторнируемыйДокумент",	СторнируемыйДокумент);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
							НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация,
																											Дата));
	
	РеквизитыТЧ = "АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Количество";
	Запрос.УстановитьПараметр("ВидыЗапасовВыходныеИзделия",		ВидыЗапасовВыходныеИзделия.Выгрузить(, РеквизитыТЧ));
	Запрос.УстановитьПараметр("ВидыЗапасовПобочныеИзделия",		ВидыЗапасовПобочныеИзделия.Выгрузить(, РеквизитыТЧ));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение(ИмяТЧ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Назначение					КАК Назначение,
	|	ТаблицаТоваров.ОформитьОтчетДавальцу		КАК ОформитьОтчетДавальцу
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	&Организация									КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|					ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА СпрНазначения.Партнер
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА &Организация
	|	КОНЕЦ											КАК ВладелецТовара,
	|	СпрДоговора.Контрагент							КАК Контрагент,
	|	СпрНазначения.Договор							КАК Договор,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|				ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ											КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлючиАналитики.ТипМестаХранения, НЕОПРЕДЕЛЕНО) = Значение(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(КлючиАналитики.МестоХранения КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК ТипЗапасовРезервы
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = ТаблицаТоваров.Назначение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СпрДоговора
	|		ПО СпрНазначения.Договор = СпрДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка";
	
	ПараметрТаблицаТоваров = ЭтотОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, АналитикаУчетаНоменклатуры, Назначение, ОформитьОтчетДавальцу");
	
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",	ПараметрТаблицаТоваров);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки + &ПорядокВыходныеИзделия КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	&Организация									КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|					ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА СпрНазначения.Партнер
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА &Организация
	|	КОНЕЦ											КАК ВладелецТовара,
	|	СпрДоговора.Контрагент							КАК Контрагент,
	|	СпрНазначения.Договор							КАК Договор,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|				ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ											КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлючиАналитики.ТипМестаХранения, НЕОПРЕДЕЛЕНО) = Значение(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(КлючиАналитики.МестоХранения КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК ТипЗапасовРезервы
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = ТаблицаТоваров.Назначение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СпрДоговора
	|		ПО СпрНазначения.Договор = СпрДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|
	|ГДЕ
	|	ТаблицаТоваров.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки + &ПорядокПобочныеИзделия КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	&Организация									КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|					ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА СпрНазначения.Партнер
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА &Организация
	|	КОНЕЦ											КАК ВладелецТовара,
	|	СпрДоговора.Контрагент							КАК Контрагент,
	|	СпрНазначения.Договор							КАК Договор,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
	|				ИЛИ ТаблицаТоваров.ОформитьОтчетДавальцу
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ											КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлючиАналитики.ТипМестаХранения, НЕОПРЕДЕЛЕНО) = Значение(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(КлючиАналитики.МестоХранения КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска)
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК ТипЗапасовРезервы
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = ТаблицаТоваров.Назначение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СпрДоговора
	|		ПО СпрНазначения.Договор = СпрДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|
	|ГДЕ
	|	ТаблицаТоваров.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Ссылка",					Ссылка);
	Запрос.УстановитьПараметр("ПорядокВыходныеИзделия",	ПорядокТЧ("ВыходныеИзделия"));
	Запрос.УстановитьПараметр("ПорядокПобочныеИзделия",	ПорядокТЧ("ПобочныеИзделия"));
	
	Возврат ЗапасыСервер.ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗапросом(Запрос);
	
КонецФункции

Функция ПорядокТЧ(ИмяТЧ)
	
	КоличествоСтрокВоВсехТЧ = ВыходныеИзделия.Количество() + ПобочныеИзделия.Количество();
	
	Если ИмяТЧ = "ВыходныеИзделия" Тогда
		Возврат 0;
	ИначеЕсли ИмяТЧ = "ПобочныеИзделия" Тогда
		Возврат КоличествоСтрокВоВсехТЧ;
	Иначе
		ТекстИсключения = НСтр("ru = 'Табличной части ""%ИмяТЧ%"" не поставлен порядок';
								|en = 'The order is not set for the ""%ИмяТЧ%"" table'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяТЧ%", ИмяТЧ);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьКлючиАналитики()
	
#Область ЗаполнениеКлючейАналитикиУчетаНоменклатуры

	МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета
								(Перечисления.ХозяйственныеОперации.ВыпускПродукции,
								Подразделение,
								Подразделение,
								Неопределено);
	
	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.Вставить("Назначение", "Назначение");
	ИменаПолей.Вставить("Серия", "Серия");
	ИменаПолей.Вставить("СтатусУказанияСерий", "СтатусУказанияСерий");
	
	//ВыходныеИзделия
	ПроизвольныйСклад =
	"ВЫБОР
	|	КОГДА Коллекция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ Коллекция.Получатель
	|КОНЕЦ";
	
	ИменаПолей.Вставить("Товар", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("МногооборотнаяТара", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("Работа", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ВыходныеИзделия, МестаУчета, ИменаПолей);
	
	//ПобочныеИзделия
	ПроизвольныйСклад =
	"ВЫБОР
	|	КОГДА Коллекция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ТОГДА Коллекция.Подразделение
	|	ИНАЧЕ Коллекция.Получатель
	|КОНЕЦ";
	
	ИменаПолей.Вставить("Товар", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("МногооборотнаяТара", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("Работа", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ПобочныеИзделия, МестаУчета, ИменаПолей);
	
	//МатериалыИРаботы
	ИменаПолей.Вставить("Товар", "Склад");
	ИменаПолей.Вставить("МногооборотнаяТара", "Склад");
	ИменаПолей.Вставить("Работа", "Подразделение");
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(МатериалыИРаботы, МестаУчета, ИменаПолей);
	
#КонецОбласти
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата          = ТекущаяДатаСеанса();
	Автор = Пользователи.ТекущийПользователь();
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	ВидЦены       = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(ВидЦены);
	ВалютаЦены    = Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены).ВалютаЦены;
	Валюта        = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(ВалютаЦены);
	ГруппировкаЗатрат = ?(ЗначениеЗаполнено(ГруппировкаЗатрат), ГруппировкаЗатрат, Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются);
	
	ПараметрыЗаполнения = Документы.ПроизводствоБезЗаказа.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВыпускПодДеятельность, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполнения

//++ НЕ УТКА

Процедура ПроверитьВозможностьВыбораНазначенияДавальца(ИмяТЧ, Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти[ИмяТЧ].Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	ИсключатьЗаказыДавальца =
		НЕ (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям
			ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям
			ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки,
		|	ТаблицаТоваров.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО (Назначения.Ссылка = ТаблицаТоваров.Назначение)
		|ГДЕ
		|	&ИсключатьЗаказыДавальца
		|	И Назначения.ТипНазначения В (ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
		|									ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))";
	
	Запрос.УстановитьПараметр("ИсключатьЗаказыДавальца", ИсключатьЗаказыДавальца);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЭтотОбъект[ИмяТЧ].Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" выбрано давальческое назначение.
							|Давальческое назначение может быть выбрано только при группировке затрат по назначениям.';
							|en = 'Material provider assignment is selected in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list.
							|Material provider assignment can be selected only while grouping costs by assignments.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Назначение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОтнесениеМатериаловДавальца(Отказ)
	
	ПредставлениеПобочныеИзделия = ЭтотОбъект.Метаданные().ТабличныеЧасти.ПобочныеИзделия.Синоним;
	ПредставлениеМатериалыИРаботы = ЭтотОбъект.Метаданные().ТабличныеЧасти.МатериалыИРаботы.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыходныеИзделия.НомерГруппыЗатрат,
		|	ВЫРАЗИТЬ(ВыходныеИзделия.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ ВыходныеИзделия
		|ИЗ
		|	&ВыходныеИзделия КАК ВыходныеИзделия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПобочныеИзделия.НомерГруппыЗатрат,
		|	ПобочныеИзделия.НомерСтроки,
		|	ВЫРАЗИТЬ(ПобочныеИзделия.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ ПобочныеИзделия
		|ИЗ
		|	&ПобочныеИзделия КАК ПобочныеИзделия
		|ГДЕ
		|	НЕ ПобочныеИзделия.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИРаботы.НомерГруппыЗатрат,
		|	МатериалыИРаботы.НомерСтроки,
		|	ВЫРАЗИТЬ(МатериалыИРаботы.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ МатериалыИРаботы
		|ИЗ
		|	&МатериалыИРаботы КАК МатериалыИРаботы
		|ГДЕ
		|	НЕ МатериалыИРаботы.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПобочныеИзделия.НомерГруппыЗатрат,
		|	ПобочныеИзделия.НомерСтроки,
		|	ПобочныеИзделия.Назначение,
		|	ЛОЖЬ КАК Материал
		|ИЗ
		|	ПобочныеИзделия КАК ПобочныеИзделия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделия КАК ВыходныеИзделия
		|		ПО ПобочныеИзделия.НомерГруппыЗатрат = ВыходныеИзделия.НомерГруппыЗатрат
		|ГДЕ
		|	ПобочныеИзделия.Назначение.ТипНазначения В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
		|	И НЕ ПобочныеИзделия.Назначение.Партнер =
		|		ЕСТЬNULL(ВыходныеИзделия.Назначение.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МатериалыИРаботы.НомерГруппыЗатрат,
		|	МатериалыИРаботы.НомерСтроки,
		|	МатериалыИРаботы.Назначение,
		|	ИСТИНА
		|ИЗ
		|	МатериалыИРаботы КАК МатериалыИРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделия КАК ВыходныеИзделия
		|		ПО МатериалыИРаботы.НомерГруппыЗатрат = ВыходныеИзделия.НомерГруппыЗатрат
		|ГДЕ
		|	МатериалыИРаботы.Назначение.ТипНазначения В (
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеПродукция22),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))
		|	И НЕ МатериалыИРаботы.Назначение.Партнер =
		|		ЕСТЬNULL(ВыходныеИзделия.Назначение.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("ВыходныеИзделия", ЭтотОбъект.ВыходныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("ПобочныеИзделия", ЭтотОбъект.ПобочныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("МатериалыИРаботы", ЭтотОбъект.МатериалыИРаботы.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" неправильно указана группировка затрат.
									|Материалы давальца должны быть включены в себестоимость продукции того же давальца.';
									|en = 'Cost grouping is specified incorrectly in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list.
									|Materials of the material provider should be included in the product cost of the same material provider.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ?(Выборка.Материал,
																			ПредставлениеМатериалыИРаботы,
																			ПредставлениеПобочныеИзделия));
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(?(Выборка.Материал, "МатериалыИРаботы", "ПобочныеИзделия"),
																Выборка.НомерСтроки,
																"Назначение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры
//-- НЕ УТКА

Процедура ПроверитьДолиСтоимости(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.ВыходныеИзделия.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерГруппыЗатрат	КАК НомерГруппыЗатрат,
		|	ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура			КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика		КАК Характеристика,
		|	ТаблицаТоваров.ДоляСтоимости		КАК ДоляСтоимости
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|ГДЕ
		|	НЕ &ГруппировкаЗатрат В (ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции),
		|							ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерГруппыЗатрат					КАК НомерГруппыЗатрат,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаТоваров.Номенклатура)	КАК КоличествоНоменклатура,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаТоваров.Характеристика)	КАК КоличествоХарактеристика
		|ПОМЕСТИТЬ ИтогиПоГруппеЗатрат
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.НомерГруппыЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИтогиПоГруппеЗатрат КАК ИтогиПоГруппеЗатрат
		|		ПО ТаблицаТоваров.НомерГруппыЗатрат = ИтогиПоГруппеЗатрат.НомерГруппыЗатрат
		|ГДЕ
		|	ТаблицаТоваров.ДоляСтоимости = 0
		|	И (ИтогиПоГруппеЗатрат.КоличествоНоменклатура > 1
		|		ИЛИ ИтогиПоГруппеЗатрат.КоличествоХарактеристика > 1)
		|";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",		ЭтотОбъект.ВыходныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("ГруппировкаЗатрат",	ЭтотОбъект.ГруппировкаЗатрат);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не указана доля стоимости.';
								|en = 'Cost share is not specified in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыходныеИзделия", Выборка.НомерСтроки, "ДоляСтоимости");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеНазначения(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.ВыходныеИзделия.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Для Каждого ТекИзделие Из ВыходныеИзделия Цикл
		Если (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям
				ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям)
			И Не ЗначениеЗаполнено(ТекИзделие.Назначение)
			И Не ТекИзделие.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию Тогда
			
			ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не заполнено назначение.';
									|en = 'Assignment is required in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ТекИзделие.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыходныеИзделия", ТекИзделие.НомерСтроки, "Назначение");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьСклады(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.МатериалыИРаботы.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.Склад КАК Склад,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|	ПО СпрНоменклатура.Ссылка = ТаблицаТоваров.Номенклатура
		|ГДЕ
		|	ТаблицаТоваров.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	И НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЭтотОбъект.МатериалыИРаботы.Выгрузить(, "НомерСтроки, Склад, Номенклатура"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не указан склад.';
								|en = 'Warehouse is not specified in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("МатериалыИРаботы", Выборка.НомерСтроки, "Склад");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПривязкуЗатратКГруппамЗатрат(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыходныеИзделия.НомерГруппыЗатрат КАК НомерГруппыЗатрат
	|ПОМЕСТИТЬ ВтВыходныеИзделия
	|ИЗ
	|	&ВыходныеИзделия КАК ВыходныеИзделия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерГруппыЗатрат
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПобочныеИзделия.НомерСтроки КАК НомерСтроки,
	|	ПобочныеИзделия.НомерГруппыЗатрат КАК НомерГруппыЗатрат
	|ПОМЕСТИТЬ ВтПобочныеИзделия
	|ИЗ
	|	&ПобочныеИзделия КАК ПобочныеИзделия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерГруппыЗатрат
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	МатериалыИРаботы.НомерГруппыЗатрат КАК НомерГруппыЗатрат
	|ПОМЕСТИТЬ ВтМатериалыИРаботы
	|ИЗ
	|	&МатериалыИРаботы КАК МатериалыИРаботы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерГруппыЗатрат
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Трудозатраты.НомерСтроки КАК НомерСтроки,
	|	Трудозатраты.НомерГруппыЗатрат КАК НомерГруппыЗатрат
	|ПОМЕСТИТЬ ВтТрудозатраты
	|ИЗ
	|	&Трудозатраты КАК Трудозатраты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерГруппыЗатрат
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ИмяТЧПобочныеИзделия КАК ИмяТЧ,
	|	&ПредставлениеТЧПобочныеИзделия КАК ПредставлениеТЧ,
	|	ПобочныеИзделия.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВтПобочныеИзделия КАК ПобочныеИзделия
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВыходныеИзделия КАК ВыходныеИзделия
	|	ПО ВыходныеИзделия.НомерГруппыЗатрат = ПобочныеИзделия.НомерГруппыЗатрат
	|
	|ГДЕ
	|	ВыходныеИзделия.НомерГруппыЗатрат ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИмяТЧМатериалыИРаботы КАК ИмяТЧ,
	|	&ПредставлениеТЧМатериалыИРаботы КАК ПредставлениеТЧ,
	|	МатериалыИРаботы.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВтМатериалыИРаботы КАК МатериалыИРаботы
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВыходныеИзделия КАК ВыходныеИзделия
	|	ПО ВыходныеИзделия.НомерГруппыЗатрат = МатериалыИРаботы.НомерГруппыЗатрат
	|
	|ГДЕ
	|	ВыходныеИзделия.НомерГруппыЗатрат ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИмяТЧТрудозатраты КАК ИмяТЧ,
	|	&ПредставлениеТЧТрудозатраты КАК ПредставлениеТЧ,
	|	Трудозатраты.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВтТрудозатраты КАК Трудозатраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВыходныеИзделия КАК ВыходныеИзделия
	|	ПО ВыходныеИзделия.НомерГруппыЗатрат = Трудозатраты.НомерГруппыЗатрат
	|
	|ГДЕ
	|	ВыходныеИзделия.НомерГруппыЗатрат ЕСТЬ NULL
	|";
	
	Запрос.УстановитьПараметр("ВыходныеИзделия", ВыходныеИзделия.Выгрузить(, "НомерГруппыЗатрат"));
	Запрос.УстановитьПараметр("ПобочныеИзделия", ПобочныеИзделия.Выгрузить(, "НомерСтроки, НомерГруппыЗатрат"));
	Запрос.УстановитьПараметр("МатериалыИРаботы", МатериалыИРаботы.Выгрузить(, "НомерСтроки, НомерГруппыЗатрат"));
	Запрос.УстановитьПараметр("Трудозатраты", Трудозатраты.Выгрузить(, "НомерСтроки, НомерГруппыЗатрат"));
	
	ОписаниеТЧ = Метаданные().ТабличныеЧасти;
	
	Запрос.УстановитьПараметр("ИмяТЧПобочныеИзделия", ОписаниеТЧ.ПобочныеИзделия.Имя);
	Запрос.УстановитьПараметр("ИмяТЧМатериалыИРаботы", ОписаниеТЧ.МатериалыИРаботы.Имя);
	Запрос.УстановитьПараметр("ИмяТЧТрудозатраты", ОписаниеТЧ.Трудозатраты.Имя);
	
	Запрос.УстановитьПараметр("ПредставлениеТЧПобочныеИзделия", ОписаниеТЧ.ПобочныеИзделия.Синоним);
	Запрос.УстановитьПараметр("ПредставлениеТЧМатериалыИРаботы", ОписаниеТЧ.МатериалыИРаботы.Синоним);
	Запрос.УстановитьПараметр("ПредставлениеТЧТрудозатраты", ОписаниеТЧ.Трудозатраты.Синоним);
	
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" указана группа затрат, несуществующая в документе.';
								|en = 'Line %НомерСтроки% of ""%ПредставлениеТЧ%"" list contains a cost group absent in the document.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", Выборка.ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Выборка.ИмяТЧ, Выборка.НомерСтроки, "ГруппаЗатрат");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Функция ПараметрыСинхронизацииКлючей()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("Справочник.ПартииПроизводства", "ПометкаУдаления");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
