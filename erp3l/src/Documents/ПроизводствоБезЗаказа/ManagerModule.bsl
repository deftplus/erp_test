#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	//++ НЕ УТКА
	МеханизмыДокумента.Добавить("МеждународныйУчет");
	МеханизмыДокумента.Добавить("ПриемВПереработку");
	//-- НЕ УТКА
	МеханизмыДокумента.Добавить("ПриемНаОтветхранение");
	МеханизмыДокумента.Добавить("Производство");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СерийныйУчет");
	МеханизмыДокумента.Добавить("АдресныйСклад");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетРабот");
	
	ПроизводствоБезЗаказаЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

#КонецОбласти

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Организация, Подразделение");
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Организация, Подразделение";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(
		ОписаниеРеквизитов, "Ответственный", Параметры);
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Ответственный";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "ГруппировкаЗатрат", Параметры);
	
КонецПроцедуры

#Область СтандартныеПодсистемыКоманды

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ПроизводствоСервер.ДобавитьКомандуСоздатьВыпускПродукцииБезЗаказаНаОсновании(КомандыСозданияНаОсновании);
	Документы.АктВыполненныхВнутреннихРабот.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.ВыработкаСотрудников.ДобавитьКомандуСоздатьНаОснованииСозданиеВыработкиСотрудников(КомандыСозданияНаОсновании);
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСозданияНаОсновании);
	
	ИсправлениеДокументов.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	ПроизводствоБезЗаказаЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Производство без заказа".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - описание добавленной команды
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.ДеревоСебестоимостиПродукции.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	ПроизводствоБезЗаказаЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	#Область ПечатьВыпускаПродукции

	Если ПравоДоступа("Чтение", Метаданные.Документы.ПроизводствоБезЗаказа) Тогда
		
		// Выпуск продукции
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная";
		КомандаПечати.Представление = НСтр("ru = 'Выпуск продукции';
											|en = 'Product release'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;

#КонецОбласти

#Область ПечатьПередачиМатериалов

	Если ПравоДоступа("Чтение", Метаданные.Документы.ПроизводствоБезЗаказа) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПередачаМатериаловВПроизводство";
		КомандаПечати.Представление = НСтр("ru = 'Передача материалов в производство';
											|en = 'Transfer of materials to production'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
#КонецОбласти

	#Область ПечатьЗаданиеНаОтборРазмещениеТоваров
	
	// Задание на отбор товаров
	Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати(
		КомандыПечати,
		"ЗаданиеНаОтбор");
	
	// Задание на размещение товаров
	Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати(
		КомандыПечати,
		"ЗаданиеНаРазмещение");
	
	#КонецОбласти

	ПроизводствоБезЗаказаЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	Возврат "Подразделение, Дата";
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
//	Параметры:
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//	Возвращаемое значение:
//			Структура - Структура параметров указания серий для объекта.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	#Область ВыходныеИзделия
	
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта	= "Документ.ПроизводствоБезЗаказа";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад		= "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары		= "ВыходныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии			= "ВыходныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям	=
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры	=
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПроизводствоПродукции);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерийТЧ.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("ВыходныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область ПобочныеИзделия
	
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта	= "Документ.ПроизводствоБезЗаказа";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад		= "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары		= "ПобочныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии			= "ПобочныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям	=
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры	=
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПроизводствоПродукции);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерийТЧ.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("ПобочныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область МатериалыИРаботы
	
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта	= "Документ.ПроизводствоБезЗаказа";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад		= "Склад";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары		= "МатериалыИРаботы";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии			= "МатериалыИРаботы";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям	=
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры	=
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Склад");
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерийТЧ.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии =
		НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерийТЧ);
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("МатериалыИРаботы", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий.
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = "";
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ВыходныеИзделия"
		Или ПараметрыУказанияСерий.ИмяТЧТовары = "ПобочныеИзделия"
		Или ПараметрыУказанияСерий.ИмяТЧТовары = "ПодобраннаяМаркируемаяПродукция"
		Или ПараметрыУказанияСерий.ИмяТЧТовары = "Товары" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "МатериалыИРаботы" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийМатериалыИРаботы();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Заполнение

// Формирует список документов, на основании переданных параметров.
//	Параметры:
//		Параметры - Структура - параметры для формирования документов.
//			Имеет структуру {ИзделияПоСпецификации, ДанныеШапки, ГруппировкаЗатрат}, все ключи являются обязательными.
//			ИзделияПоСпецификации - таблица значений, содержащая перечень выпущенной продукции, распределяемой по правилам.
//			ДанныеШапки - Структура - данные заполнения шапки документов.
//			ГруппировкаЗатрат - тип группировки затрат.
//		СписокОбъектов - Структура - список сформированных документов.
//
Процедура ДокументыПоПараметрам(Параметры, СписокОбъектов) Экспорт
	
	ТаблицаПродукции = ПолучитьИзВременногоХранилища(Параметры.ИзделияПоСпецификации);
	
	ЗаполнитьГруппыЗатратВКоллекции(ТаблицаПродукции);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДанныеСпецификацииПоСпискуПродукции(ТаблицаПродукции, Параметры, МенеджерВременныхТаблиц);
	
	СформироватьДокументы(Параметры, МенеджерВременныхТаблиц, СписокОбъектов);
	
КонецПроцедуры

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	// Шаблон для выходных изделий
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.Давальческое21));
	ШаблонНазначения.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказов",
																	Истина,
																	"Объект.ВыходныеИзделия.Назначение",
																	"ВыходныеИзделияПотребность");
	
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования =
		"Объект.ВыходныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ВыходныеИзделия.Получатель";
	
	// Потребности в выпущенных работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказовРаботами",
																	Истина,
																	"Объект.ВыходныеИзделия.Назначение",
																	"ВыходныеИзделияПотребностьВРаботах");
	
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования =
		"Объект.ВыходныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.Подразделение";
	
	// Шаблон для побочных изделий
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ПобочныеИзделия.Назначение");
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.Давальческое21));
	ШаблонНазначения.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	// Потребности в побочных изделиях на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказов",
																	Истина,
																	"Объект.ПобочныеИзделия.Назначение",
																	"ПобочныеИзделияПотребность");
	
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования =
		"Объект.ПобочныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ПобочныеИзделия.Получатель";
	
	// Потребности в побочных работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказовРаботами",
																	Истина,
																	"Объект.ПобочныеИзделия.Назначение",
																	"ПобочныеИзделияПотребностьВРаботах");
	
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования =
		"Объект.ПобочныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.Подразделение";
	
	// Шаблон для материалов
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.МатериалыИРаботы.Назначение");
	ШаблонНазначения.ТипыНазначений.Удалить(ШаблонНазначения.ТипыНазначений.Найти(Перечисления.ТипыНазначений.Давальческое21));
	ШаблонНазначения.НаправлениеДеятельности = "Объект.НаправлениеДеятельности";
	
	// Остатки материалов в кладовой.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы,
																	"ОбеспечениеЗаказов",
																	Истина,
																	"Объект.МатериалыИРаботы.Назначение",
																	"МатериалыИРаботыВНаличии");
	
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования =
		"Объект.МатериалыИРаботы.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.МатериалыИРаботы.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.МатериалыИРаботы.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.МатериалыИРаботы.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура            = "Объект.ВыходныеИзделия.Номенклатура";
	СвязиПараметровВыбора.Характеристика          = "Объект.ВыходныеИзделия.Характеристика";
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.Дата";
	СвязиПараметровВыбора.НаправлениеДеятельности = "Объект.ВыходныеИзделия.НаправлениеДеятельности";
	
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.ВыходныеИзделия.Спецификация", СвязиПараметровВыбора);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры распределения затрат на выходные изделия.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров распределения затрат.
//
// Возвращаемое значение:
//  Структура - параметры, уточняющие особенности распределения затрат на выходные изделия.
//
Функция ПараметрыРаспределенияЗатрат(Объект) Экспорт
	
	ПараметрыРаспределенияЗатрат = ПроизводствоКлиентСервер.ПараметрыРаспределенияЗатратНаВыходныеИзделия("ВыходныеИзделия", Объект.СпособРаспределенияЗатратНаВыходныеИзделия);
	
	Если Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу
		Или Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются
		Или Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям
		Или Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям Тогда
		
		ПараметрыРаспределенияЗатрат.РассчитыватьПолеДоляСтоимостиПроцент = Истина;
		ПараметрыРаспределенияЗатрат.РассчитыватьПризнакЕстьОшибкиЗаполнения = Истина;
		ПараметрыРаспределенияЗатрат.РассчитыватьПризнакДоляСтоимостиОбязательна = Истина;
		
		Если Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям
			Или Объект.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям Тогда
			
			ПараметрыРаспределенияЗатрат.ПолеГруппировкиЗатрат = "НомерГруппыЗатрат";
			ПараметрыРаспределенияЗатрат.ПолеПредставленияГруппировкиЗатрат = "ГруппаЗатрат";
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыРаспределенияЗатрат;
	
КонецФункции

#КонецОбласти

#Область ГруппировкаЗатрат

// Возвращает перечень полей, идентифицирующих группу затрат.
//	Параметры:
//		ГруппировкаЗатрат - ПеречислениеСсылка.ГруппировкиЗатратВПроизводствеБезЗаказа - тип группировки затрат.
//	Возвращаемое значение:
//		СписокЗначений - перечень полей, идентифицирующих группу затрат.
//
Функция ПереченьПолейГруппыЗатрат(ГруппировкаЗатрат) Экспорт
	
	СписокПолей = Новый СписокЗначений;
	КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции Тогда
		СписокПолей.Добавить("Номенклатура",	НСтр("ru = 'Номенклатура';
													|en = 'Items'", КодЯзыка));
		СписокПолей.Добавить("Характеристика",	НСтр("ru = 'Характеристика';
														|en = 'Variant'", КодЯзыка));
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям Тогда
		СписокПолей.Добавить("Спецификация",	НСтр("ru = 'Спецификация';
													|en = 'Bill of materials'", КодЯзыка));
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям Тогда
		СписокПолей.Добавить("Спецификация",	НСтр("ru = 'Спецификация';
													|en = 'Bill of materials'", КодЯзыка));
		СписокПолей.Добавить("Назначение",		НСтр("ru = 'Назначение';
														|en = 'Assignment'", КодЯзыка));
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям Тогда
		СписокПолей.Добавить("Номенклатура",	НСтр("ru = 'Номенклатура';
													|en = 'Items'", КодЯзыка));
		СписокПолей.Добавить("Характеристика",	НСтр("ru = 'Характеристика';
														|en = 'Variant'", КодЯзыка));
		СписокПолей.Добавить("Назначение",		НСтр("ru = 'Назначение';
														|en = 'Assignment'", КодЯзыка));
	КонецЕсли;
	
	Возврат СписокПолей;
	
КонецФункции

// Возвращает строку, содержащую перечень путей получения идентифицирующих группу затрат полей.
//	Параметры:
//		ИмяТаблицы - Строка - имя источника получения идентифицирующих группу затрат полей.
//		СписокПолей - СписокЗначений - перечень полей, идентифицирующих группу затрат.
//	Возвращаемое значение:
//		Строка - строка, содержащая перечень путей получения идентифицирующих группу затрат полей.
//
Функция ТекстЗапросаПоПолямГруппыЗатрат(ИмяТаблицы, СписокПолей) Экспорт
	
	ТекстЗапросаПоПолям = "";
	
	Для Каждого ТекПоле Из СписокПолей Цикл
		
		ТекстЗапросаПоПолям = ТекстЗапросаПоПолям + ", " + ИмяТаблицы + "." + ТекПоле.Значение;
		
	КонецЦикла;
	
	Возврат ТекстЗапросаПоПолям;
	
КонецФункции

// Возвращает структуру, содержащую перечень идентифицирующих группу затрат полей.
//	Параметры:
//		СписокПолей - СписокЗначений - перечень полей, идентифицирующих группу затрат.
//	Возвращаемое значение:
//		Структура - структура, содержащая перечень идентифицирующих группу затрат полей.
//
Функция СтруктураПоискаГруппыЗатрат(СписокПолей) Экспорт
	
	СтруктураПоиска = Новый Структура;
	
	Для Каждого ТекПоле Из СписокПолей Цикл
		СтруктураПоиска.Вставить(ТекПоле.Значение);
	КонецЦикла;
	
	Возврат СтруктураПоиска;
	
КонецФункции

#КонецОбласти

#Область ВыборСтатейИАналитик

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатей = Новый Массив;
	
	// Выходные изделия
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным					= "Объект.ВыходныеИзделия";
	ПараметрыВыбора.Статья						= "Получатель";
	ПараметрыВыбора.ТипСтатьи					= "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов			= Истина;
	ПараметрыВыбора.АналитикаРасходов			= "АналитикаРасходов";
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов	= Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	ЭлементыФормы = ПараметрыВыбора.ЭлементыФормы;
	ЭлементыФормы.Статья.Добавить("ВыходныеИзделияПолучатель");
	ЭлементыФормы.АналитикаРасходов.Добавить("ВыходныеИзделияАналитикаРасходов");
	ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ВыходныеИзделияАналитикаАктивовПассивов");
	
	ПараметрыВыбораСтатей.Добавить(ПараметрыВыбора);
	
	// Побочные изделия
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	
	ПараметрыВыбора.ПутьКДанным					= "Объект.ПобочныеИзделия";
	ПараметрыВыбора.Статья						= "Получатель";
	ПараметрыВыбора.ТипСтатьи					= "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов			= Истина;
	ПараметрыВыбора.АналитикаРасходов			= "АналитикаРасходов";
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов	= Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	ЭлементыФормы = ПараметрыВыбора.ЭлементыФормы;
	ЭлементыФормы.Статья.Добавить("ПобочныеИзделияПолучатель");
	ЭлементыФормы.АналитикаРасходов.Добавить("ПобочныеИзделияАналитикаРасходов");
	ЭлементыФормы.АналитикаАктивовПассивов.Добавить("ПобочныеИзделияАналитикаАктивовПассивов");
	
	ПараметрыВыбораСтатей.Добавить(ПараметрыВыбора);
	
	Возврат ПараметрыВыбораСтатей;
	
КонецФункции

#КонецОбласти

#Область НастройкаСчетовУчета

// Возвращает параметры настройки счетов учета в документе.
//  
// Возвращаемое значение:
//  см. НастройкаСчетовУчетаСервер.ПараметрыНастройки
//
Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	ПараметрыНастроек = Новый Массив;
	
	// Выходные изделия
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	ПараметрыНастройки.ПутьКДанным				= "Объект.ВыходныеИзделия";
	ПараметрыНастройки.СтатьяАктивовПассивов	= "Получатель";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ВыходныеИзделияПредставлениеОтраженияОперации");
	
	ПараметрыНастройки.СкрыватьНедоступныйСчетУчетаВСтроках = Истина;
	ПараметрыНастройки.УсловияДоступностиСчетаУчетаВСтроках.Вставить(
		"НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	
	ПараметрыНастроек.Добавить(ПараметрыНастройки);
	
	// Побочные изделия
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ДоступностьПоОперации	= Истина;
	ПараметрыНастройки.ТипСтатьи				= "ТипСтатьи";
	ПараметрыНастройки.ПутьКДанным				= "Объект.ПобочныеИзделия";
	ПараметрыНастройки.СтатьяАктивовПассивов	= "Получатель";
	
	ПараметрыНастройки.ЭлементыФормы.Добавить("ПобочныеИзделияПредставлениеОтраженияОперации");
	
	ПараметрыНастройки.СкрыватьНедоступныйСчетУчетаВСтроках = Истина;
	ПараметрыНастройки.УсловияДоступностиСчетаУчетаВСтроках.Вставить(
		"НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	
	ПараметрыНастроек.Добавить(ПараметрыНастройки);
	
	Возврат ПараметрыНастроек;
	
КонецФункции

#КонецОбласти

#Область УчетНДС

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект		- ДокументОбъект.ПроизводствоБезЗаказа, ДанныеФормыСтруктура	- документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация							= Объект.Организация;
	ПараметрыЗаполнения.Дата								= Объект.Дата;
	ПараметрыЗаполнения.НаправлениеДеятельности				= Объект.НаправлениеДеятельности;
	ПараметрыЗаполнения.ВыпускПродукцииИРабот				= Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область Округление

// Возвращает параметры для округления
// 
// Возвращаемое значение:
// 	Структура - элементы содержат структуру параметров округления 
// 				см. НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества
// 
Функция ПараметрыТЧДляОкругления() Экспорт
	
	ПараметрыТЧ = Новый Структура;
	
	ИмяТЧ = "ВыходныеИзделия";
	ИмяПоляСклад = "Получатель";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);

	ИмяТЧ = "ПобочныеИзделия";
	ИмяПоляСклад = "Получатель";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
	
	ИмяТЧ = "МатериалыИРаботы";
	ИмяПоляСклад = "Склад";
	ПараметрыТЧ.Вставить(ИмяТЧ, НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества());
	ПараметрыТЧ[ИмяТЧ].ИмяТЧ = ИмяТЧ;
	ПараметрыТЧ[ИмяТЧ].ДополнительныеПоля.Вставить(ИмяПоляСклад, ИмяТЧ + "." + ИмяПоляСклад);
	ПараметрыТЧ[ИмяТЧ].УсловиеОтбораСтрокПоДополнительнымПолям = 
			ПроизводствоСервер.УсловиеОтбораСтрокДляОкругления(ИмяТЧ, ИмяПоляСклад);
		
	Возврат ПараметрыТЧ;	

КонецФункции

#КонецОбласти

#Область ПечатьЗаданияНаОтборРазмещениеТоваров

// Возвращает правила печати печатной формы Задания на отбор (размещение) товаров.
//
// Возвращаемое значение:
//	Массив - элементами, которого является структура (См. Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ДобавитьКомандуПечати)
//
Функция ПравилаПечатиЗаданияНаОтборРазмещение() Экспорт
	
	ПравилаПечати = Новый Массив;
	
	// Материалы и работы
	ПравилаПечатиЗадания = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ПравилаПечатиЗаданияНаОтборРазмещение();
	ПравилаПечатиЗадания.СкладыВТЧ = Истина;
	ПравилаПечатиЗадания.ИмяТЧТовары = "МатериалыИРаботы";
	ПравилаПечатиЗадания.ИспользуютсяИсправленияДокумента = Истина;
	
	ПравилаПечати.Добавить(ПравилаПечатиЗадания);
	
	// Выходные изделия
	ПравилаПечатиЗадания = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ПравилаПечатиЗаданияНаОтборРазмещение();
	ПравилаПечатиЗадания.ОперацияПоступления = Истина;
	ПравилаПечатиЗадания.СкладыВТЧ = Истина;
	ПравилаПечатиЗадания.ИмяТЧТовары = "ВыходныеИзделия";
	ПравилаПечатиЗадания.ИмяПоляСклад = "Получатель";
	ПравилаПечатиЗадания.ИспользуютсяИсправленияДокумента = Истина;
	
	ПравилаПечати.Добавить(ПравилаПечатиЗадания);
	
	// Побочные изделия
	ПравилаПечатиЗадания = Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров.ПравилаПечатиЗаданияНаОтборРазмещение();
	ПравилаПечатиЗадания.ОперацияПоступления = Истина;
	ПравилаПечатиЗадания.СкладыВТЧ = Истина;
	ПравилаПечатиЗадания.ИмяТЧТовары = "ПобочныеИзделия";
	ПравилаПечатиЗадания.ИмяПоляСклад = "Получатель";
	ПравилаПечатиЗадания.ИспользуютсяИсправленияДокумента = Истина;
	
	ПравилаПечати.Добавить(ПравилаПечатиЗадания);
	
	Возврат ПравилаПечати;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Формирует представление объекта метаданных на основном языке.
// Возвращаемое значение:
// Строка - Представление объекта метаданных на основном языке.
//
Функция ПредставлениеОбъектаНаОсновномЯзыке() Экспорт
	
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	ПредставлениеОбъекта = НСтр(
		"ru = 'Производство без заказа';
		|en = 'Backflush production'",
		КодОсновногоЯзыка);
		
	Возврат ПредставлениеОбъекта;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

// Формирует перечень групп затрат и заполняет поле "НомерГруппыЗатрат" в переданной коллекции.
//	Параметры:
//		Коллекция - ТаблицаЗначений - коллекция, в которой необходимо заполнить номера групп затрат.
//
Процедура ЗаполнитьГруппыЗатратВКоллекции(Коллекция)
	
	Для Каждого ТекСтрока Из Коллекция Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Назначение) Тогда
			Если ТекСтрока.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям Тогда
				ТекСтрока.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям;
			ИначеЕсли ТекСтрока.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции Тогда
				ТекСтрока.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаПродукции.Организация,
		|	ТаблицаПродукции.ГруппировкаЗатрат,
		|	ТаблицаПродукции.Подразделение,
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Спецификация
		|ПОМЕСТИТЬ ТаблицаПродукции
		|ИЗ
		|	&ТаблицаПродукции КАК ТаблицаПродукции
		|ГДЕ
		|	НЕ ТаблицаПродукции.Количество = 0
		|	И НЕ ТаблицаПродукции.ОшибкаВНастройкахМодели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПродукции.Организация КАК Организация,
		|	ТаблицаПродукции.ГруппировкаЗатрат КАК ГруппировкаЗатрат,
		|	ТаблицаПродукции.Подразделение КАК Подразделение,
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Спецификация
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|ИТОГИ ПО
		|	Организация,
		|	Подразделение,
		|	ГруппировкаЗатрат";
	
	Запрос.УстановитьПараметр("ТаблицаПродукции",		Коллекция);
	
	РезультатДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИндексГруппы = 1;
	
	Для Каждого ТекОрганизация Из РезультатДерево.Строки Цикл
		
		Для Каждого ТекПодразделение Из ТекОрганизация.Строки Цикл
			
			Для Каждого ТекГруппировкаЗатрат Из ТекПодразделение.Строки Цикл
				
				СписокПолей = ПереченьПолейГруппыЗатрат(ТекГруппировкаЗатрат.ГруппировкаЗатрат);
				ОбязательныеПоляГруппировки = "Организация, Подразделение, ГруппировкаЗатрат";
				ПоляГруппировки = "";
				
				Для Каждого ТекПоле Из СписокПолей Цикл
					ПоляГруппировки = ПоляГруппировки + ", " + ТекПоле.Значение;
				КонецЦикла;
				
				ПоляГруппировки = ОбязательныеПоляГруппировки + ПоляГруппировки;
				
				СтруктураПоиска = Новый Структура(ОбязательныеПоляГруппировки);
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекГруппировкаЗатрат);
				
				ГруппыЗатрат = Коллекция.Скопировать(СтруктураПоиска);
				ГруппыЗатрат.Свернуть(ПоляГруппировки);
				
				СтруктураПоиска = Новый Структура(ПоляГруппировки);
				
				Для Каждого ТекГруппа Из ГруппыЗатрат Цикл
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекГруппа);
					
					Строки = Коллекция.НайтиСтроки(СтруктураПоиска);
					Для Каждого ТекСтрока Из Строки Цикл
						ТекСтрока.НомерГруппыЗатрат = ИндексГруппы;
					КонецЦикла;
					
					ИндексГруппы = ИндексГруппы + 1;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

// Формирует временные таблицы по данным спецификации для переданного списка продукции.
//
Процедура ДанныеСпецификацииПоСпискуПродукции(ТаблицаПродукции, Параметры, МенеджерВременныхТаблиц) Экспорт
	
	ПереченьДанных = Параметры.ПереченьДанных;
	ДанныеШапки    = Параметры.ДанныеШапки;
	
	СписокНоменклатуры = Справочники.РесурсныеСпецификации.СписокНоменклатуры();
	// Поля группировки
	СписокНоменклатуры.Колонки.Добавить("НомерГруппыЗатрат");
	СписокНоменклатуры.Колонки.Добавить("Подразделение");
	
	Для Каждого ТекСтрока Из ТаблицаПродукции Цикл
		
		Если Не ТекСтрока.ОтражатьЗатратыДокументом Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СписокНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.НачалоПроизводства = ДанныеШапки.Дата;
		
	КонецЦикла;
	
	ДанныеПродукции = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоСпискуНоменклатуры(
		СписокНоменклатуры,
		Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных(),
		Истина,
		"НомерГруппыЗатрат,Подразделение");
	
	Если Не ПереченьДанных.Найти("ВозвратныеОтходы") = Неопределено Тогда
		ИсключитьВозвратныеОтходыИзВыходныхИзделий(ТаблицаПродукции, ДанныеПродукции);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ИнициализироватьТаблицыДанныхСпецификаций(ТаблицаПродукции, МенеджерВременныхТаблиц);
	
	Если Не ПереченьДанных.Найти("ВозвратныеОтходы") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + ТекстЗапросаВозвратныеОтходы();
	КонецЕсли;
	
	Если Не ПереченьДанных.Найти("МатериалыИУслуги") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + ТекстЗапросаМатериалы();
	КонецЕсли;
	
	Если Не ПереченьДанных.Найти("Трудозатраты") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + ТекстЗапросаТрудозатраты();
	КонецЕсли;
	
	Индекс = 0;
	ПолучитьДанныеЗатрат = Не ПереченьДанных.Найти("ВозвратныеОтходы") = Неопределено
							ИЛИ Не ПереченьДанных.Найти("МатериалыИУслуги") = Неопределено
							ИЛИ Не ПереченьДанных.Найти("Трудозатраты") = Неопределено;
	
	Для Каждого ТекСтрока Из ДанныеПродукции Цикл
		
		Если ТекСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НомерГруппыЗатрат", ТекСтрока.НомерГруппыЗатрат);
		Запрос.УстановитьПараметр("Подразделение", ТекСтрока.Подразделение);
		
		Если Не ПереченьДанных.Найти("ВозвратныеОтходы") = Неопределено Тогда
			Запрос.УстановитьПараметр("ВозвратныеОтходы", ТекСтрока.ВозвратныеОтходы);
		КонецЕсли;
		
		Если Не ПереченьДанных.Найти("МатериалыИУслуги") = Неопределено Тогда
			Запрос.УстановитьПараметр("МатериалыИУслуги", ТекСтрока.МатериалыИУслуги);
		КонецЕсли;
		
		Если Не ПереченьДанных.Найти("Трудозатраты") = Неопределено Тогда
			Запрос.УстановитьПараметр("Трудозатраты", ТекСтрока.Трудозатраты);
		КонецЕсли;
		
		Если ПолучитьДанныеЗатрат Тогда
			Запрос.Выполнить();
		КонецЕсли;
		
		Индекс = Индекс + 1;
	КонецЦикла;
	
	ЗаполнитьНазначениеМатериаловПоОбособленнымОстаткам(МенеджерВременныхТаблиц, Параметры);
	
КонецПроцедуры

// Заполняет назначение материалов на основании остатков
//
Процедура ЗаполнитьНазначениеМатериаловПоОбособленнымОстаткам(МенеджерВременныхТаблиц, Параметры)
	
	Если Параметры.ПереченьДанных.Найти("МатериалыИУслуги") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаПродукции.НомерГруппыЗатрат	КАК НомерГруппыЗатрат,
		|	ТаблицаПродукции.Организация		КАК Организация,
		|	ТаблицаПродукции.Назначение			КАК Назначение,
		|	НазначенияДавальца.Ссылка			КАК НазначениеДавальца
		|ПОМЕСТИТЬ НазначенияПродукции
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
		|	ПО СпрНазначения.Ссылка = ТаблицаПродукции.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК НазначенияДавальца
		|	ПО НазначенияДавальца.НаправлениеДеятельности = СпрНазначения.НаправлениеДеятельности
		|		И НазначенияДавальца.Партнер = СпрНазначения.Партнер
		|		И НазначенияДавальца.Договор = СпрНазначения.Договор
		|		И НазначенияДавальца.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22)
		|ГДЕ
		|	ТаблицаПродукции.ГруппировкаЗатрат В
		|		(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям),
		|		ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям))
		|	И НЕ ТаблицаПродукции.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПродукции.Организация,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.НомерГруппыЗатрат,
		|	НазначенияДавальца.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат	КАК НомерГруппыЗатрат,
		|	КлючиАналитики.КлючАналитики		КАК АналитикаУчетаНоменклатуры,
		|	НазначенияПродукции.Организация		КАК Организация,
		|	НазначенияПродукции.Назначение		КАК Назначение
		|ПОМЕСТИТЬ АналитикаОстатков
		|ИЗ
		|	МатериалыИУслуги КАК МатериалыИУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НазначенияПродукции КАК НазначенияПродукции
		|		ПО МатериалыИУслуги.НомерГруппыЗатрат = НазначенияПродукции.НомерГруппыЗатрат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
		|		ПО (КлючиАналитики.Номенклатура = МатериалыИУслуги.Номенклатура)
		|			И (КлючиАналитики.Характеристика = МатериалыИУслуги.Характеристика)
		|			И (КлючиАналитики.МестоХранения = МатериалыИУслуги.Склад)
		|			И (КлючиАналитики.Назначение = НазначенияПродукции.Назначение)
		|			И (КлючиАналитики.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	НазначенияПродукции.Назначение,
		|	НазначенияПродукции.Организация,
		|	КлючиАналитики.КлючАналитики,
		|	МатериалыИУслуги.НомерГруппыЗатрат
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат		КАК НомерГруппыЗатрат,
		|	КлючиАналитики.КлючАналитики			КАК АналитикаУчетаНоменклатуры,
		|	НазначенияПродукции.Организация			КАК Организация,
		|	НазначенияПродукции.НазначениеДавальца	КАК Назначение
		|ИЗ
		|	МатериалыИУслуги КАК МатериалыИУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НазначенияПродукции КАК НазначенияПродукции
		|		ПО МатериалыИУслуги.НомерГруппыЗатрат = НазначенияПродукции.НомерГруппыЗатрат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
		|		ПО (КлючиАналитики.Номенклатура = МатериалыИУслуги.Номенклатура)
		|			И (КлючиАналитики.Характеристика = МатериалыИУслуги.Характеристика)
		|			И (КлючиАналитики.МестоХранения = МатериалыИУслуги.Склад)
		|			И (КлючиАналитики.Назначение = НазначенияПродукции.НазначениеДавальца)
		|			И (КлючиАналитики.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка))
		|ГДЕ
		|	НЕ НазначенияПродукции.НазначениеДавальца = НазначенияПродукции.Назначение
		|СГРУППИРОВАТЬ ПО
		|	НазначенияПродукции.НазначениеДавальца,
		|	НазначенияПродукции.Организация,
		|	КлючиАналитики.КлючАналитики,
		|	МатериалыИУслуги.НомерГруппыЗатрат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры,
		|	НазначенияПродукции.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АналитикаОстатков.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
		|	АналитикаОстатков.Назначение КАК Назначение,
		|	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			&Дата,
		|			(АналитикаУчетаНоменклатуры, Организация) В
		|				(ВЫБРАТЬ
		|					АналитикаОстатков.АналитикаУчетаНоменклатуры,
		|					АналитикаОстатков.Организация
		|				ИЗ
		|					АналитикаОстатков КАК АналитикаОстатков)) КАК ТоварыОрганизацийОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ АналитикаОстатков КАК АналитикаОстатков
		|		ПО (АналитикаОстатков.АналитикаУчетаНоменклатуры = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
		|			И (АналитикаОстатков.Организация = ТоварыОрганизацийОстатки.Организация)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения,
		|	АналитикаОстатков.Назначение,
		|	АналитикаОстатков.НомерГруппыЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	СУММА(МатериалыИУслуги.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(МатериалыИУслуги.Количество) КАК Количество
		|ИЗ
		|	МатериалыИУслуги КАК МатериалыИУслуги
		|
		|СГРУППИРОВАТЬ ПО
		|	МатериалыИУслуги.Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.НомерГруппыЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МатериалыИУслуги";
		
	Запрос.УстановитьПараметр("Дата", Параметры.ДанныеШапки.Дата);
	Результат = Запрос.ВыполнитьПакет();
	
	Индекс = Результат.ВГраница();
	ОстаткиМатериалов	= Результат[Индекс - 2].Выбрать();
	МатериалыИУслуги	= Результат[Индекс - 1].Выгрузить();
	
	ПоляОтбора = "НомерГруппыЗатрат, Номенклатура, Характеристика, Склад";
	МатериалыИУслуги.Индексы.Добавить(ПоляОтбора);
	ОтборТоваров = Новый Структура(ПоляОтбора);
	
	Пока ОстаткиМатериалов.Следующий() Цикл
		
		КоличествоТоваров = ОстаткиМатериалов.Количество;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ОстаткиМатериалов);
		
		Для Каждого СтрокаМатериалов Из МатериалыИУслуги.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаМатериалов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаМатериалов.Количество);
			
			НоваяСтрока = МатериалыИУслуги.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериалов);
			
			НоваяСтрока.Назначение			= ОстаткиМатериалов.Назначение;
			НоваяСтрока.Количество			= Количество;
			НоваяСтрока.КоличествоУпаковок	= Количество
				/ Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(НоваяСтрока.Упаковка, НоваяСтрока.Номенклатура);
			
			СтрокаМатериалов.Количество = СтрокаМатериалов.Количество - НоваяСтрока.Количество;
			СтрокаМатериалов.КоличествоУпаковок = СтрокаМатериалов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			
			КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = МатериалыИУслуги.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		МатериалыИУслуги.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.КоличествоУпаковок КАК КоличествоУпаковок,
		|	МатериалыИУслуги.Количество КАК Количество
		|ПОМЕСТИТЬ МатериалыИУслуги
		|ИЗ
		|	&МатериалыИУслуги КАК МатериалыИУслуги";
	Запрос.УстановитьПараметр("МатериалыИУслуги", МатериалыИУслуги);
	Запрос.Выполнить();
КонецПроцедуры

// Создает и заполняет документы на основании переданных параметров.
// 
// Параметры:
// 	Параметры - Структура - Описание
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Описание
// 	СписокОбъектов - Массив - Описание
Процедура СформироватьДокументы(Параметры, МенеджерВременныхТаблиц, СписокОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПродукцияПоГруппамЗатрат()
					+ ТекстЗапросаВозвратныеОтходыПоГруппамЗатрат()
					+ ТекстЗапросаМатериалыПоГруппамЗатрат()
					+ ТекстЗапросаТрудозатратыПоГруппамЗатрат();
	
	ВидЦен = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ();
	
	Запрос.УстановитьПараметр("Дата", Параметры.ДанныеШапки.Дата);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦен);
	Запрос.УстановитьПараметр("ЗаполнятьАвтоматически", Параметры.ЗаполнятьАвтоматически);
	
	Результат = Запрос.ВыполнитьПакет();
	Индекс = Результат.ВГраница();
	
	Продукция			= Результат[Индекс - 4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВозвратныеОтходы	= Результат[Индекс - 3].Выгрузить();
	МатериалыИРаботы	= Результат[Индекс - 2].Выгрузить();
	Трудозатраты		= Результат[Индекс].Выгрузить();
	
	СтруктураПоиска = Новый Структура("НомерГруппыЗатрат");
	
	Для Каждого ТекОрганизация Из Продукция.Строки Цикл
		Для Каждого ТекГруппировкаЗатрат Из ТекОрганизация.Строки Цикл
			Для Каждого ТекПодразделение Из ТекГруппировкаЗатрат.Строки Цикл
				Для Каждого ТекСпособРаспределения Из ТекПодразделение.Строки Цикл
					ТекДокумент = Документы.ПроизводствоБезЗаказа.СоздатьДокумент();
					ТекДокумент.ПолучитьСсылкуНового();
					ТекДокумент.ВидЦены = ВидЦен;
					
					СписокОбъектов.Добавить(ТекДокумент);
					
					ТекДокумент.Заполнить(Новый Структура("Организация", ТекСпособРаспределения.Организация));
					
					ЗаполнитьЗначенияСвойств(ТекДокумент, Параметры.ДанныеШапки);
					ЗаполнитьЗначенияСвойств(ТекДокумент, ТекСпособРаспределения);
					
					СписокГруппЗатрат = Новый Массив;
					
					Для Каждого ТекИзделие Из ТекСпособРаспределения.Строки Цикл
						НоваяСтрока = ТекДокумент.ВыходныеИзделия.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекИзделие);
						СписокГруппЗатрат.Добавить(ТекИзделие.НомерГруппыЗатрат);
					КонецЦикла;
					
					СписокГруппЗатрат = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокГруппЗатрат);
					
					Для Каждого ТекГруппа Из СписокГруппЗатрат Цикл
						
						СтруктураПоиска.НомерГруппыЗатрат = ТекГруппа;
						
						Для Каждого ТекСтрока Из ВозвратныеОтходы.НайтиСтроки(СтруктураПоиска) Цикл
							ЗаполнитьЗначенияСвойств(ТекДокумент.ПобочныеИзделия.Добавить(), ТекСтрока);
						КонецЦикла;
						
						Для Каждого ТекСтрока Из МатериалыИРаботы.НайтиСтроки(СтруктураПоиска) Цикл
							ЗаполнитьЗначенияСвойств(ТекДокумент.МатериалыИРаботы.Добавить(), ТекСтрока);
						КонецЦикла;
						
						Для Каждого ТекСтрока Из Трудозатраты.НайтиСтроки(СтруктураПоиска) Цикл
							ЗаполнитьЗначенияСвойств(ТекДокумент.Трудозатраты.Добавить(), ТекСтрока);
						КонецЦикла;
						
					КонецЦикла;
					
					ПараметрыУказанияСерий =
						НоменклатураСервер.ПараметрыУказанияСерий(ТекДокумент, Документы.ПроизводствоБезЗаказа);
					НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ТекДокумент, ПараметрыУказанияСерий.ВыходныеИзделия);
					НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ТекДокумент, ПараметрыУказанияСерий.ПобочныеИзделия);
					НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ТекДокумент, ПараметрыУказанияСерий.МатериалыИРаботы);
					
					ПеренестиСерииУказываемыеОтдельно(ТекДокумент, "ВыходныеИзделия");
					ПеренестиСерииУказываемыеОтдельно(ТекДокумент, "ПобочныеИзделия");
					
					ПараметрыРаспределенияЗатратСтруктура =
						Документы.ПроизводствоБезЗаказа.ПараметрыРаспределенияЗатрат(ТекДокумент);
					ПараметрыРаспределенияЗатрат =
						Новый ФиксированнаяСтруктура(ПараметрыРаспределенияЗатратСтруктура);
					
					ПроизводствоСервер.РассчитатьДолюСтоимости(ТекДокумент, ПараметрыРаспределенияЗатрат);
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Помещает таблицу продукции в ВТ, создает пустые ВТ для затрат
//
Процедура ИнициализироватьТаблицыДанныхСпецификаций(ТаблицаПродукции, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстВозвратныеОтходы =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ПобочныеИзделия.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	ПобочныеИзделия.Подразделение КАК Подразделение,
		|	ПобочныеИзделия.НаправлениеВыпуска КАК НаправлениеВыпуска,
		|	ПобочныеИзделия.Получатель КАК Получатель,
		|	ПобочныеИзделия.Номенклатура КАК Номенклатура,
		|	ПобочныеИзделия.Характеристика КАК Характеристика,
		|	ПобочныеИзделия.Серия КАК Серия,
		|	ПобочныеИзделия.Назначение КАК Назначение,
		|	ПобочныеИзделия.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	ПобочныеИзделия.Упаковка КАК Упаковка,
		|	ПобочныеИзделия.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ПобочныеИзделия.Количество КАК Количество
		|ПОМЕСТИТЬ ВозвратныеОтходы
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ПобочныеИзделия
		|;
		|";
	
	ТекстМатериалыИРаботы =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	МатериалыИРаботы.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	МатериалыИРаботы.Склад КАК Склад,
		|	МатериалыИРаботы.Подразделение КАК Подразделение,
		|	МатериалыИРаботы.Номенклатура КАК Номенклатура,
		|	МатериалыИРаботы.Характеристика КАК Характеристика,
		|	МатериалыИРаботы.Назначение КАК Назначение,
		|	МатериалыИРаботы.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	МатериалыИРаботы.Упаковка КАК Упаковка,
		|	МатериалыИРаботы.КоличествоУпаковок КАК КоличествоУпаковок,
		|	МатериалыИРаботы.Количество КАК Количество
		|ПОМЕСТИТЬ МатериалыИУслуги
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК МатериалыИРаботы
		|;
		|";
	
	ТекстТрудозатраты =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	Трудозатраты.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	Трудозатраты.Подразделение КАК Подразделение,
		|	Трудозатраты.ВидРабот КАК ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	Трудозатраты.Количество КАК Количество
		|ПОМЕСТИТЬ Трудозатраты
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.Трудозатраты КАК Трудозатраты
		|;
		|";
	
	Запрос.Текст = ТекстЗапросаПродукция()
					+ ТекстВозвратныеОтходы
					+ ТекстМатериалыИРаботы
					+ ТекстТрудозатраты;
	Запрос.УстановитьПараметр("ТаблицаПродукции", ТаблицаПродукции);
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает текст запроса для помещения таблицы продукции в ВТ.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаПродукция()
	Возврат
		"ВЫБРАТЬ
		|	ТаблицаПродукции.НомерГруппыЗатрат,
		|	ТаблицаПродукции.Организация,
		|	ТаблицаПродукции.ГруппировкаЗатрат,
		|	ТаблицаПродукции.Подразделение,
		|	ТаблицаПродукции.НаправлениеВыпуска,
		|	ТаблицаПродукции.Получатель,
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Серия,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Спецификация,
		|	ТаблицаПродукции.Количество
		|ПОМЕСТИТЬ ТаблицаПродукции
		|ИЗ
		|	&ТаблицаПродукции КАК ТаблицаПродукции
		|ГДЕ
		|	НЕ ТаблицаПродукции.Количество = 0
		|	И НЕ ТаблицаПродукции.ОшибкаВНастройкахМодели
		|;
		|";
		
КонецФункции

// Возвращает текст запроса объединения данных спецификации с существующей ВТ
// в части возвратных отходов.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаВозвратныеОтходы()
	Возврат
		"ВЫБРАТЬ
		|	&НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	ВозвратныеОтходы.ПодразделениеЭтапа КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ВозвратныеОтходы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОПерации.ВыпускПродукцииВПодразделение)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОПерации.ВыпускПродукцииНаСклад)
		|	КОНЕЦ КАК НаправлениеВыпуска,
		|	ВЫБОР
		|		КОГДА ВозвратныеОтходы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ТОГДА &Подразделение
		|		ИНАЧЕ ВозвратныеОтходы.Склад
		|	КОНЕЦ КАК Получатель,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Упаковка,
		|	ВозвратныеОтходы.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ВозвратныеОтходы.Количество КАК Количество
		|ПОМЕСТИТЬ ВозвратныеОтходыСпецификации
		|ИЗ
		|	&ВозвратныеОтходы КАК ВозвратныеОтходы
		|ГДЕ
		|	НЕ ВозвратныеОтходы.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПолуфабрикатыПроизводимыеВПроцессе)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратныеОтходы.НомерГруппыЗатрат,
		|	ВозвратныеОтходы.Подразделение,
		|	ВозвратныеОтходы.НаправлениеВыпуска,
		|	ВозвратныеОтходы.Получатель,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Упаковка,
		|	ВозвратныеОтходы.КоличествоУпаковок,
		|	ВозвратныеОтходы.Количество
		|ПОМЕСТИТЬ ВозвратныеОтходыПодготовительная
		|ИЗ
		|	ВозвратныеОтходыСпецификации КАК ВозвратныеОтходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратныеОтходы.НомерГруппыЗатрат,
		|	ВозвратныеОтходы.Подразделение,
		|	ВозвратныеОтходы.НаправлениеВыпуска,
		|	ВозвратныеОтходы.Получатель,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Упаковка,
		|	ВозвратныеОтходы.КоличествоУпаковок,
		|	ВозвратныеОтходы.Количество
		|ИЗ
		|	ВозвратныеОтходы КАК ВозвратныеОтходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВозвратныеОтходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВозвратныеОтходыСпецификации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратныеОтходы.НомерГруппыЗатрат,
		|	ВозвратныеОтходы.Подразделение,
		|	ВозвратныеОтходы.НаправлениеВыпуска,
		|	ВозвратныеОтходы.Получатель,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Упаковка,
		|	ВозвратныеОтходы.КоличествоУпаковок,
		|	ВозвратныеОтходы.Количество
		|ПОМЕСТИТЬ ВозвратныеОтходы
		|ИЗ
		|	ВозвратныеОтходыПодготовительная КАК ВозвратныеОтходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВозвратныеОтходыПодготовительная
		|;
		|";
		
КонецФункции

// Возвращает текст запроса объединения данных спецификации с существующей ВТ
// в части материалов и работ.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаМатериалы()
	Возврат
		"ВЫБРАТЬ
		|	&НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	МатериалыИУслуги.ПодразделениеЭтапа КАК Подразделение,
		|	МатериалыИУслуги.Склад КАК Склад,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.КоличествоУпаковок КАК КоличествоУпаковок,
		|	МатериалыИУслуги.Количество КАК Количество
		|ПОМЕСТИТЬ МатериалыИУслугиСпецификации
		|ИЗ
		|	&МатериалыИУслуги КАК МатериалыИУслуги
		|ГДЕ
		|	НЕ МатериалыИУслуги.СпособПолученияМатериала =
		|		ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	ЕСТЬNULL(МатериалыИУслуги.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.КоличествоУпаковок КАК КоличествоУпаковок,
		|	МатериалыИУслуги.Количество КАК Количество
		|ПОМЕСТИТЬ МатериалыИУслугиПодготовительная
		|ИЗ
		|	МатериалыИУслугиСпецификации КАК МатериалыИУслуги
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.КоличествоУпаковок,
		|	МатериалыИУслуги.Количество
		|ИЗ
		|	МатериалыИУслуги КАК МатериалыИУслуги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МатериалыИУслуги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МатериалыИУслугиСпецификации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.КоличествоУпаковок,
		|	МатериалыИУслуги.Количество
		|ПОМЕСТИТЬ МатериалыИУслуги
		|ИЗ
		|	МатериалыИУслугиПодготовительная КАК МатериалыИУслуги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МатериалыИУслугиПодготовительная
		|;
		|";
		
КонецФункции

// Возвращает текст запроса объединения данных спецификации с существующей ВТ
// в части трудозатрат.
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаТрудозатраты()
	
	Возврат
		"ВЫБРАТЬ
		|	&НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	Трудозатраты.ПодразделениеЭтапа КАК Подразделение,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции,
		|	Трудозатраты.Количество КАК Количество
		|ПОМЕСТИТЬ ТрудозатратыСпецификации
		|ИЗ
		|	&Трудозатраты КАК Трудозатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Трудозатраты.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	Трудозатраты.Подразделение КАК Подразделение,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции,
		|	Трудозатраты.Количество КАК Количество
		|ПОМЕСТИТЬ ТрудозатратыПодготовительная
		|ИЗ
		|	ТрудозатратыСпецификации КАК Трудозатраты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Трудозатраты.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	Трудозатраты.Подразделение КАК Подразделение,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции,
		|	Трудозатраты.Количество КАК Количество
		|ИЗ
		|	Трудозатраты КАК Трудозатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Трудозатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТрудозатратыСпецификации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Трудозатраты.НомерГруппыЗатрат КАК НомерГруппыЗатрат,
		|	Трудозатраты.Подразделение КАК Подразделение,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции,
		|	Трудозатраты.Количество КАК Количество
		|ПОМЕСТИТЬ Трудозатраты
		|ИЗ
		|	ТрудозатратыПодготовительная КАК Трудозатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТрудозатратыПодготовительная
		|;
		|";
		
КонецФункции

// Возвращает текст запроса для формирования итоговой таблицы
// в части продукции.
Функция ТекстЗапросаПродукцияПоГруппамЗатрат()
	
	Возврат
		"ВЫБРАТЬ
		|	ТаблицаПродукции.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
		|	ТаблицаПродукции.Организация					КАК Организация,
		|	ТаблицаПродукции.ГруппировкаЗатрат				КАК ГруппировкаЗатрат,
		|	ТаблицаПродукции.Подразделение					КАК Подразделение,
		|	ТаблицаПродукции.НаправлениеВыпуска				КАК НаправлениеВыпуска,
		|	ТаблицаПродукции.Получатель						КАК Получатель,
		|	ТаблицаПродукции.Номенклатура					КАК Номенклатура,
		|	ТаблицаПродукции.Характеристика					КАК Характеристика,
		|	ТаблицаПродукции.Серия							КАК Серия,
		|	ТаблицаПродукции.Назначение						КАК Назначение,
		|	ТаблицаПродукции.Спецификация					КАК Спецификация,
		|	СУММА(ТаблицаПродукции.Количество)				КАК Количество,
		|	СУММА(ТаблицаПродукции.Количество)				КАК КоличествоУпаковок,
		|	СУММА(ЕСТЬNULL(ДолиСтоимости.ДоляСтоимости, 0))	КАК ДоляСтоимости,
		|	СпрРесурсныеСпецификации.СпособРаспределенияЗатратНаВыходныеИзделия КАК СпособРаспределенияЗатратНаВыходныеИзделия
		|ИЗ
		|	ТаблицаПродукции КАК ТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ДолиСтоимости
		|		ПО (ДолиСтоимости.Ссылка = ТаблицаПродукции.Спецификация)
		|			И (ДолиСтоимости.Номенклатура = ТаблицаПродукции.Номенклатура
		|				ИЛИ (ДолиСтоимости.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|					И ДолиСтоимости.ВидНоменклатуры = ТаблицаПродукции.Номенклатура.ВидНоменклатуры))
		|			И (ДолиСтоимости.Характеристика = ТаблицаПродукции.Характеристика
		|				ИЛИ ДолиСтоимости.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации КАК СпрРесурсныеСпецификации
		|		ПО СпрРесурсныеСпецификации.Ссылка = ТаблицаПродукции.Спецификация
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПродукции.Спецификация,
		|	ТаблицаПродукции.Номенклатура,
		|	ТаблицаПродукции.НаправлениеВыпуска,
		|	ТаблицаПродукции.НомерГруппыЗатрат,
		|	СпрРесурсныеСпецификации.СпособРаспределенияЗатратНаВыходныеИзделия,
		|	ТаблицаПродукции.Характеристика,
		|	ТаблицаПродукции.Организация,
		|	ТаблицаПродукции.Назначение,
		|	ТаблицаПродукции.Получатель,
		|	ТаблицаПродукции.Серия,
		|	ТаблицаПродукции.Подразделение,
		|	ТаблицаПродукции.ГруппировкаЗатрат
		|ИТОГИ ПО
		|	Организация,
		|	ГруппировкаЗатрат,
		|	Подразделение,
		|	СпособРаспределенияЗатратНаВыходныеИзделия
		|;
		|";
		
КонецФункции

// Возвращает текст запроса для формирования итоговой таблицы
// в части возвратных отходов
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаВозвратныеОтходыПоГруппамЗатрат() Экспорт
	Возврат
		"ВЫБРАТЬ
		|	ВозвратныеОтходы.НомерГруппыЗатрат,
		|	ВозвратныеОтходы.Подразделение,
		|	ВозвратныеОтходы.НаправлениеВыпуска,
		|	ВозвратныеОтходы.Получатель,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Упаковка,
		|	СУММА(ВозвратныеОтходы.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ВозвратныеОтходы.Количество) КАК Количество,
		|	ЦеныНоменклатуры.Цена КАК Цена,
		|	СУММА(ВозвратныеОтходы.Количество * ЦеныНоменклатуры.Цена) КАК Сумма
		|ИЗ
		|	ВозвратныеОтходы КАК ВозвратныеОтходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, ) КАК ЦеныНоменклатуры
		|		ПО (ЦеныНоменклатуры.ВидЦены = &ВидЦены)
		|			И (ЦеныНоменклатуры.Номенклатура = ВозвратныеОтходы.Номенклатура)
		|			И (ЦеныНоменклатуры.Характеристика = ВозвратныеОтходы.Характеристика)
		|ГДЕ
		|	&ЗаполнятьАвтоматически
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратныеОтходы.Упаковка,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.НаправлениеВыпуска,
		|	ВозвратныеОтходы.СтатьяКалькуляции,
		|	ВозвратныеОтходы.Получатель,
		|	ВозвратныеОтходы.Характеристика,
		|	ВозвратныеОтходы.Номенклатура,
		|	ВозвратныеОтходы.Серия,
		|	ВозвратныеОтходы.Назначение,
		|	ВозвратныеОтходы.Подразделение,
		|	ЦеныНоменклатуры.Цена,
		|	ВозвратныеОтходы.НомерГруппыЗатрат
		|;
		|";
		
КонецФункции

// Возвращает текст запроса для формирования итоговой таблицы
// в части материалов и работ
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаМатериалыПоГруппамЗатрат() Экспорт
	Возврат
		"ВЫБРАТЬ
		|	МатериалыИУслуги.НомерГруппыЗатрат,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	СУММА(МатериалыИУслуги.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(МатериалыИУслуги.Количество) КАК Количество
		|ИЗ
		|	МатериалыИУслуги КАК МатериалыИУслуги
		|ГДЕ
		|	&ЗаполнятьАвтоматически
		|
		|СГРУППИРОВАТЬ ПО
		|	МатериалыИУслуги.Назначение,
		|	МатериалыИУслуги.СтатьяКалькуляции,
		|	МатериалыИУслуги.Упаковка,
		|	МатериалыИУслуги.Склад,
		|	МатериалыИУслуги.Подразделение,
		|	МатериалыИУслуги.Номенклатура,
		|	МатериалыИУслуги.Характеристика,
		|	МатериалыИУслуги.НомерГруппыЗатрат
		|;
		|";
		
КонецФункции

// Возвращает текст запроса для получения бригад подразделений
//
Функция ТекстЗапросаБригадыТрудозатрат()
	
	Возврат
		"ВЫБРАТЬ
		|	Трудозатраты.Подразделение,
		|	МАКСИМУМ(СпрБригады.Ссылка) КАК Бригада
		|ПОМЕСТИТЬ БригадыТрудозатрат
		|ИЗ
		|	Трудозатраты КАК Трудозатраты
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Бригады КАК СпрБригады
		|	ПО СпрБригады.Подразделение = Трудозатраты.Подразделение
		|ГДЕ
		|	&ЗаполнятьАвтоматически
		|
		|СГРУППИРОВАТЬ ПО
		|	Трудозатраты.Подразделение
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СпрБригады.Ссылка) = 1
		|;
		|";
		
КонецФункции

// Возвращает текст запроса для формирования итоговой таблицы
// в части трудозатрат
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаТрудозатратыПоГруппамЗатрат() Экспорт
	
	Возврат ТекстЗапросаБригадыТрудозатрат() +
		"ВЫБРАТЬ
		|	Трудозатраты.НомерГруппыЗатрат,
		|	Трудозатраты.Подразделение,
		|	БригадыТрудозатрат.Бригада КАК Исполнитель,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.СтатьяКалькуляции,
		|	СУММА(Трудозатраты.Количество) КАК Количество
		|ИЗ
		|	Трудозатраты КАК Трудозатраты
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ БригадыТрудозатрат КАК БригадыТрудозатрат
		|	ПО БригадыТрудозатрат.Подразделение = Трудозатраты.Подразделение
		|
		|ГДЕ
		|	&ЗаполнятьАвтоматически
		|
		|СГРУППИРОВАТЬ ПО
		|	Трудозатраты.СтатьяКалькуляции,
		|	Трудозатраты.ВидРабот,
		|	Трудозатраты.Подразделение,
		|	БригадыТрудозатрат.Бригада,
		|	Трудозатраты.НомерГруппыЗатрат
		|;
		|";
		
КонецФункции

// В таблице продукции могут присутствовать возвратные отходы, количество которых покрывается
// нормативными данными. Такие строки необходимо удалить из таблицы продукции.
Процедура ИсключитьВозвратныеОтходыИзВыходныхИзделий(ТаблицаПродукции, ДанныеПродукции)
	
	Отборы = Новый Структура("НомерГруппыЗатрат, Номенклатура, Характеристика");
	
	Для Каждого ТекСтруктура Из ДанныеПродукции Цикл
		
		Если ТекСтруктура = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Отборы.НомерГруппыЗатрат = ТекСтруктура.НомерГруппыЗатрат;
		
		ВозвратныеОтходы = ТекСтруктура.ВозвратныеОтходы.СкопироватьКолонки();
		ВозвратныеОтходы.Колонки.Добавить("Назначение",	Новый ОписаниеТипов("СправочникСсылка.Назначения"));
		ВозвратныеОтходы.Колонки.Добавить("Серия",		Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		
		Для Каждого ТекОтход Из ТекСтруктура.ВозвратныеОтходы Цикл
			ЗаполнитьЗначенияСвойств(Отборы, ТекОтход, "Номенклатура, Характеристика");
			СтрокиПродукции = ТаблицаПродукции.НайтиСтроки(Отборы);
			Для Каждого ТекПродукция Из СтрокиПродукции Цикл
				
				Количество = Мин(ТекПродукция.Количество, ТекОтход.Количество);
				
				НоваяСтрока = ВозвратныеОтходы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекОтход);
				НоваяСтрока.Назначение			= ТекПродукция.Назначение;
				НоваяСтрока.Серия				= ТекПродукция.Серия;
				НоваяСтрока.Количество			= Количество;
				НоваяСтрока.КоличествоУпаковок	= НоваяСтрока.Количество
					* НоваяСтрока.ДанныеУпаковки.Знаменатель / НоваяСтрока.ДанныеУпаковки.Числитель;
				
				ТекПродукция.Количество	= ТекПродукция.Количество - Количество;
				ТекОтход.Количество		= ТекОтход.Количество - Количество;
				
			КонецЦикла;
			
			Если СтрокиПродукции.Количество() = 0 Тогда
				НоваяСтрока = ВозвратныеОтходы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекОтход);
			КонецЕсли;
		КонецЦикла;
		
		ТекСтруктура.ВозвратныеОтходы = ВозвратныеОтходы;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ТаблицаПродукции.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ТаблицаПродукции.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет таблицу серий на основании исходной
Процедура ПеренестиСерииУказываемыеОтдельно(Документ, ИмяТЧ)
	
	Если ИмяТЧ = "ВыходныеИзделия" Тогда
		ИмяТабличнойЧастиСерии = "ВыходныеИзделияСерии";
	ИначеЕсли ИмяТЧ = "ПобочныеИзделия" Тогда
		ИмяТабличнойЧастиСерии = "ПобочныеИзделияСерии";
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Документ[ИмяТЧ] Цикл
		Если (ТекСтрока.СтатусУказанияСерий = 3
				ИЛИ ТекСтрока.СтатусУказанияСерий = 5
				ИЛИ ТекСтрока.СтатусУказанияСерий = 7
				ИЛИ ТекСтрока.СтатусУказанияСерий = 9)
			И ЗначениеЗаполнено(ТекСтрока.Серия) Тогда
			ЗаполнитьЗначенияСвойств(Документ[ИмяТабличнойЧастиСерии].Добавить(), ТекСтрока);
			ТекСтрока.СтатусУказанияСерий = ТекСтрока.СтатусУказанияСерий + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

#Область Инициализация

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры);
		
		//++ НЕ УТКА
		ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры);
		//-- НЕ УТКА
		
		ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры);
		
		ПроизводствоБезЗаказаЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	ЗапланироватьПоступлениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ОформитьПоступлениеТоваровПоОдноходовке(Запрос, ТекстыЗапроса, Регистры);
	
	ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры);
	ОформитьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, ПустаяСсылка().Метаданные());
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Номер,
		|	Реквизиты.Ссылка,
		|	Реквизиты.Проведен,
		|	Реквизиты.ПометкаУдаления,
		|	Реквизиты.Организация,
		|	Реквизиты.Подразделение,
		|	Реквизиты.ГруппировкаЗатрат,
		|	Реквизиты.ВыпускПодДеятельность,
		|	Реквизиты.НаправлениеДеятельности,
		|	Реквизиты.ВидЦены,
		|	Реквизиты.ВидыЗапасовУказаныВручную,
		|	Реквизиты.Валюта,
		|	Реквизиты.Ответственный,
		|	Реквизиты.Автор,
		|	Реквизиты.Комментарий,
		|	Реквизиты.Исправление,
		|	Реквизиты.СторнируемыйДокумент,
		|	Реквизиты.ИсправляемыйДокумент,
		|	Реквизиты.РаспоряжениеДляТрудозатрат
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр("АналитическийУчетПоГруппамПродукции",
								ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
							ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.ПроизводствоБезЗаказа")));
								
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением",
							ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта,
		Неопределено,
		Запрос.Параметры.Дата,
		Запрос.Параметры.Организация);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаВидЗапасовУмолчанию(Запрос)
	
	Если Запрос.Параметры.Свойство("ВидЗапасовУмолчанию") Тогда
		Возврат;
	КонецЕсли;
	
	ВидЗапасовУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Запрос.Параметры.Организация, Неопределено);
	Запрос.УстановитьПараметр("ВидЗапасовУмолчанию", ВидЗапасовУмолчанию);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	//++ НЕ УТКА
	ТекстЗапросаВтТаблицаЗаказовДавальцаПоНазначениям(Запрос, ТекстыЗапроса);
	//-- НЕ УТКА
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.СтатьяКалькуляции
	|ИЗ
	|	(
	// аналитика подразделения при выпуске продукции на склад или списании на расходы
	|	ВЫБРАТЬ
	|		&Подразделение										КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаТовары.Назначение							КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|		
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ СпрСклады.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ СпрСклады.ЦеховаяКладовая)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Аналитика подразделения при выпуске продукции на склад или списании на расходы без назначения.
	|	ВЫБРАТЬ
	|		&Подразделение										КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|		
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ СпрСклады.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ СпрСклады.ЦеховаяКладовая)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика получателя продукции без назначения
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Получатель							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//++ НЕ УТКА
	// аналитика получателя работы по продукции давальца
	|	ВЫБРАТЬ
	|		ТаблицаЗаказовДавальцаПоНазначениям.Подразделение	КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаЗаказовДавальцаПоНазначениям.НазначениеРабот	КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|			ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ОформитьОтчетДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика получателя работы по продукции давальца без назначения
	|	ВЫБРАТЬ
	|		ТаблицаЗаказовДавальцаПоНазначениям.Подразделение	КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|			ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ОформитьОтчетДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//-- НЕ УТКА
	// Аналитика подразделения при выпуске возвратных отходов на склад или списании на расходы.
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаТовары.Назначение							КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|		
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ СпрСклады.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ СпрСклады.ЦеховаяКладовая)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Аналитика подразделения при выпуске возвратных отходов на склад или списании на расходы без назначения.
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|		
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И (ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ СпрСклады.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ СпрСклады.ЦеховаяКладовая)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика получателя возвратных отходов без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//++ НЕ УТКА
	// аналитика получателя работы по возвратным отходам давальца
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаЗаказовДавальцаПоНазначениям.Подразделение	КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаЗаказовДавальцаПоНазначениям.НазначениеРабот	КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|			ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ОформитьОтчетДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика получателя работы по возвратным отходам давальца без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаЗаказовДавальцаПоНазначениям.Подразделение	КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|			ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ОформитьОтчетДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//-- НЕ УТКА
	// аналитика партии производства получателя возвратных отходов
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаТовары.Назначение							КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ТаблицаТовары.СтатьяКалькуляции						КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика партии производства получателя возвратных отходов без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ТаблицаТовары.СтатьяКалькуляции						КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика партии производства подразделения материалов и работ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ТаблицаТовары.Назначение							КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ТаблицаТовары.СтатьяКалькуляции						КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика партии производства подразделения материалов и работ без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Подразделение							КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ТаблицаТовары.СтатьяКалькуляции						КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика отправителя материалов и работ без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад									КАК Склад,
	|		ТаблицаТовары.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ												КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// аналитика комитента
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.ВидЗапасов.ВладелецТовара						КАК Склад,
	|		ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура							КАК Номенклатура,
	|		ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика						КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)		КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	КАК Серия,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ВидыЗапасовМатериалыИРаботы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)) КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И ТаблицаТовары.Серия = Аналитика.Серия
	|			И ТаблицаТовары.Склад = Аналитика.МестоХранения
	|			И ТаблицаТовары.Назначение = Аналитика.Назначение
	|			И ТаблицаТовары.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.СтатьяКалькуляции";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ЗапросАналитики = Новый Запрос;
	ЗапросАналитики.Текст = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение", Запрос.Параметры.Подразделение);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.ПроизводствоБезЗаказа";
	СинонимТаблицыДокумента      = "";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("УчитыватьСебестоимостьТоваровПоНазначениям",
		Формат(ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоНазначениям"), "БЛ=Ложь; БИ=Истина"));
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "ВыпускПродукции" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаВыпускПродукции(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТабличнаяЧасть";
		
	ИначеЕсли ИмяРегистра = "РаспределениеЗапасовДвижения" Тогда
		
		Запрос = Новый Запрос();
		ТекстыЗапроса = Новый СписокЗначений();
		СинонимТаблицыДокумента = "ТабЧасть";
		ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТрудозатратыКОформлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТрудозатратыКОформлению(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТрудозатраты";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Неопределено, ТекстыЗапроса, Неопределено);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Неопределено, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
	
	//++ НЕ УТКА	
	ИначеЕсли ИмяРегистра = "УслугиДавальцуКОформлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	//-- НЕ УТКА	
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса 
								|формирования движений по регистру %ИмяРегистра%.';
								|en = 'In the %ПолноеИмяДокумента% document, adaptation of request for generating records 
								|of the %ИмяРегистра% register is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос)
	
	Если Не Запрос.Параметры.Свойство("АналитикаУчетаПартийТоваров") Тогда
		ОтборПоАналитикеПартии = Новый Структура("Дата, ВидЦенности",
												Запрос.Параметры.Дата,
												Перечисления.ВидыЦенностей.Товары);
		Запрос.УстановитьПараметр("АналитикаУчетаПартийТоваров",
									Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(ОтборПоАналитикеПартии));
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("АналитикаУчетаПартийРабот") Тогда
		ОтборПоАналитикеПартии = Новый Структура("Дата, ВидЦенности",
												Запрос.Параметры.Дата,
												Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги);
		Запрос.УстановитьПараметр("АналитикаУчетаПартийРабот",
									Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(ОтборПоАналитикеПартии));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ПроизводствоБезЗаказаЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламетированном учете.
// 
// Возвращаемое значение:
// 	см. ПроизводствоБезЗаказаЛокализация.ТекстЗапросаВТОтраженияВРеглУчете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ПроизводствоБезЗаказаЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область ТекстыЗапросовПроведения

#Область ТекстыЗапросовВременныеТаблицы

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Подразделения.Ссылка							КАК Ссылка,
	|	Подразделения.ХозяйственнаяОперация 			КАК ХозяйственнаяОперация,
	|	Подразделения.Подразделение						КАК Подразделение,
	|	МИНИМУМ(Подразделения.ДополнительнаяЗапись)		КАК ДополнительнаяЗапись
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	(
	// Выпускающее подразделение
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка											КАК Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)	КАК ХозяйственнаяОперация,
	|		&Подразделение													КАК Подразделение,
	|		ЛОЖЬ															КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Получатель возвратных отходов
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка											КАК Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Подразделение									КАК Подразделение,
	|		ИСТИНА															КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И НЕ ДанныеДокумента.Подразделение = &Подразделение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Склад материалов и работ
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка																КАК Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Подразделение														КАК Подразделение,
	|		ИСТИНА																				КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И НЕ ДанныеДокумента.Подразделение = &Подразделение) КАК Подразделения
	|
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.Ссылка,
	|	Подразделения.Подразделение,
	|	Подразделения.ХозяйственнаяОперация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВидыЗапасовВыходныеИзделия""	КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки	КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО					КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО					КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО					КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|	КОНЕЦ							КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ТаблицаДокумента.КодСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ							КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовВыходныеИзделия КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ВыходныеИзделия""				КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки	КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО					КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО					КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО					КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ТаблицаДокумента.КодСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ							КАК КодСтроки
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик,
																								Запрос,
																								ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТовары";
	
	УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	//++ НЕ УТКА
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаЗаказовДавальцаПоНазначениям", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаЗаказовДавальцаПоНазначениям(Запрос, ТекстыЗапроса, "ВидыЗапасов");
	КонецЕсли;
	//-- НЕ УТКА
	
	ТекстЗапроса = 
	// Выходные изделия (товары) по получателю
	"ВЫБРАТЬ
	|	ТаблицаТовары.НаправлениеВыпуска					КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(КлючиАналитикиОтправителя.КлючАналитики, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	ТаблицаТовары.ВидЗапасов							КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО										КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий		КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	ТаблицаТовары.Спецификация							КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ОформитьОтчетДавальцу
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаТовары.Сумма
	|	КОНЕЦ												КАК Сумма,
	|	0													КАК СуммаЗабалансовая,
	|		
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторФинЗаписи			КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукции) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ТаблицаТовары.Подразделение
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ЛОЖЬ												КАК Работа,
	|	ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)			КАК ЦеховаяКладовая,
	|	ЛОЖЬ												КАК РаботаДляДавальца
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовВыходныеИзделия КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И ТаблицаТовары.Ссылка.Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасовВыходныеИзделия""
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выходные изделия (работы) по получателю
	|ВЫБРАТЬ
	|	ТаблицаТовары.НаправлениеВыпуска					КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО										КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО										КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий		КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ СпрНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА СпрНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	ТаблицаТовары.Спецификация							КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.Сумма									КАК Сумма,
	|	0													КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукции) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ТаблицаТовары.Подразделение
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ИСТИНА												КАК Работа,
	|	ЛОЖЬ												КАК ЦеховаяКладовая,
	|	ЛОЖЬ												КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа КАК Операция
	|		ПО Операция.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВыходныеИзделия""
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Работа по выходным изделиям (товарам) давальца
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)	КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)				КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(КлючиАналитикиОтправителя.КлючАналитики, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики				КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО										КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов							КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий		КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	ТаблицаТовары.Спецификация							КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.Сумма									КАК Сумма,
	|	0													КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторФинЗаписи			КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукции) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ТаблицаТовары.Подразделение
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ИСТИНА												КАК Работа,
	|	ЛОЖЬ												КАК ЦеховаяКладовая,
	|	ИСТИНА												КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовВыходныеИзделия КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаЗаказовДавальцаПоНазначениям.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.НазначениеРабот
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И ТаблицаТовары.Ссылка.Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.НомерСтроки		= ТаблицаТовары.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти	= ""ВидыЗапасовВыходныеИзделия""
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ОформитьОтчетДавальцу
	//-- НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Побочные изделия (товары) по получателю
	|ВЫБРАТЬ
	|	ТаблицаТовары.НаправлениеВыпуска					КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)	КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(КлючиАналитикиОтправителя.КлючАналитики, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	ТаблицаТовары.ВидЗапасов							КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО										КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	&АналитикаУчетаПартийТоваров						КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО										КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТаблицаТовары.Сумма
	|	КОНЕЦ												КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ТаблицаТовары.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ												КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторФинЗаписи			КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукцииФиксированнаяСтоимость) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ ТаблицаТовары.ПодразделениеПолучатель
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ЛОЖЬ												КАК Работа,
	|	ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)			КАК ЦеховаяКладовая,
	|	ЛОЖЬ												КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовПобочныеИзделия КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И ТаблицаТовары.Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Побочные изделия (работы) по получателю
	|ВЫБРАТЬ
	|	ТаблицаТовары.НаправлениеВыпуска					КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)	КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО										КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО										КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	&АналитикаУчетаПартийРабот							КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО										КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.Сумма									КАК Сумма,
	|	0													КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукцииФиксированнаяСтоимость) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ ТаблицаТовары.ПодразделениеПолучатель
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ИСТИНА												КАК Работа,
	|	ЛОЖЬ												КАК ЦеховаяКладовая,
	|	ЛОЖЬ												КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Работа по побочным изделиям (товарам) давальца
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)			КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)	КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ИЛИ ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(КлючиАналитикиОтправителя.КлючАналитики, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ												КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики				КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО										КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов							КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ТаблицаТовары.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК СтатьяРасходов,
	|	&АналитикаУчетаПартийТоваров						КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка						КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ КлючиАналитикиПолучателя.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА КлючиАналитикиПолучателя.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО										КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлючиАналитикиПолучателя.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <>
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА КлючиАналитикиПолучателя.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ &ВыпускПодДеятельность
	|	КОНЕЦ 												КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО										КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО										КАК Спецификация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)	КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество							КАК Количество,
	|	0													КАК КоличествоПоРНПТ,
	|	0													КАК Сумма,
	|	0													КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторФинЗаписи			КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукцииФиксированнаяСтоимость) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ ТаблицаТовары.ПодразделениеПолучатель
	|	КОНЕЦ												КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов					КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ИСТИНА												КАК Работа,
	|	ЛОЖЬ												КАК ЦеховаяКладовая,
	|	ИСТИНА												КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовПобочныеИзделия КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаЗаказовДавальцаПоНазначениям.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.НазначениеРабот
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И ТаблицаТовары.Ссылка.Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТаблицаТовары.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ОформитьОтчетДавальцу
	//-- НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Побочные изделия (товары) по партии
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)	КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики		КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	ТаблицаТовары.ВидЗапасов											КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов											КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК СтатьяРасходов,
	|	&АналитикаУчетаПартийТоваров								КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка								КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА НЕ СпрПартииПроизводства.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА СпрПартииПроизводства.ГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК КорАналитикаФинансовогоУчета,
	|	СпрПартииПроизводства.ВидДеятельностиНДС	КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО																КАК Спецификация,
	|	ТаблицаТовары.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|	-1 * ТаблицаТовары.Количество									КАК Количество,
	|	0																КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		0
	|	ИНАЧЕ
	|		-1 * ТаблицаТовары.Сумма
	|	КОНЕЦ																				КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		-1 * ТаблицаТовары.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ																				КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторФинЗаписи				КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукцииФиксированнаяСтоимость) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ ТаблицаТовары.ПодразделениеПолучатель
	|	КОНЕЦ																				КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов							КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ЛОЖЬ																					КАК Работа,
	|	ЛОЖЬ																					КАК ЦеховаяКладовая,
	|	ЛОЖЬ																					КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовПобочныеИзделия КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаТовары.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ТаблицаТовары.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Побочные изделия (работы) по партии
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)	КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики		КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО																КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК СтатьяРасходов,
	|	&АналитикаУчетаПартийРабот									КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка								КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА НЕ СпрПартииПроизводства.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА СпрПартииПроизводства.ГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК КорАналитикаФинансовогоУчета,
	|	СпрПартииПроизводства.ВидДеятельностиНДС	КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО																КАК Спецификация,
	|	ТаблицаТовары.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|	-1 * ТаблицаТовары.Количество									КАК Количество,
	|	0																КАК КоличествоПоРНПТ,
	|	-1 * ТаблицаТовары.Сумма											КАК Сумма,
	|	0																							КАК СуммаЗабалансовая,
	|	
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыпускПродукцииФиксированнаяСтоимость) КАК НастройкаХозяйственнойОперации,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Подразделение
	|		ИНАЧЕ ТаблицаТовары.ПодразделениеПолучатель
	|	КОНЕЦ																				КАК ПодразделениеПолучательРасходов,
	|	ТаблицаТовары.АналитикаРасходов							КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТовары.НастройкаСчетовУчета				КАК НастройкаСчетовУчета,
	|	ИСТИНА																			КАК Работа,
	|	ЛОЖЬ																					КАК ЦеховаяКладовая,
	|	ЛОЖЬ																					КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаТовары.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ТаблицаТовары.СтатьяКалькуляции
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Работы по партии
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики		КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	НЕОПРЕДЕЛЕНО																КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка								КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА НЕ СпрПартииПроизводства.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА СпрПартииПроизводства.ГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																КАК КорАналитикаФинансовогоУчета,
	|	СпрПартииПроизводства.ВидДеятельностиНДС	КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО																КАК Спецификация,
	|	ТаблицаТовары.СтатьяКалькуляции							КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество								КАК Количество,
	|	0														КАК КоличествоПоРНПТ,
	|	0																							КАК Сумма,
	|	0																							КАК СуммаЗабалансовая,
	|	
	|	НЕОПРЕДЕЛЕНО											КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРасходовНаПартииПроизводства) КАК НастройкаХозяйственнойОперации,
	|
	|	НЕОПРЕДЕЛЕНО																КАК ПодразделениеПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО																КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																КАК НастройкаСчетовУчета,
	|	ИСТИНА																			КАК Работа,
	|	ЛОЖЬ																					КАК ЦеховаяКладовая,
	|	ЛОЖЬ																					КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаТовары.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ТаблицаТовары.СтатьяКалькуляции
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Материалы по партии
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК НаправлениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиАналитикиПолучателя.КлючАналитики				КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	ТаблицаТовары.ВидЗапасов													КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя							КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПартий,
	|	СпрПартииПроизводства.Ссылка										КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА НЕ СпрПартииПроизводства.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА СпрПартииПроизводства.ГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																						КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаФинансовогоУчета,
	|	СпрПартииПроизводства.ВидДеятельностиНДС			КАК ВидДеятельностиНДС,
	|	ТаблицаТовары.НомерГТД													КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО																		КАК Спецификация,
	|	ТаблицаТовары.СтатьяКалькуляции									КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Количество													КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ												КАК КоличествоПоРНПТ,
	|	0																									КАК Сумма,
	|	0																									КАК СуммаЗабалансовая,
	|	
	|	НЕОПРЕДЕЛЕНО											КАК ИдентификаторСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки					КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРасходовНаПартииПроизводства) КАК НастройкаХозяйственнойОперации,
	|	
	|	НЕОПРЕДЕЛЕНО																		КАК ПодразделениеПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК НастройкаСчетовУчета,
	|	ЛОЖЬ																							КАК Работа,
	|	ЕСТЬNULL(ТаблицаТовары.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая, ЛОЖЬ)	КАК ЦеховаяКладовая,
	|	ЛОЖЬ																							КАК РаботаДляДавальца
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовМатериалыИРаботы КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателя
	|		ПО КлючиАналитикиПолучателя.Номенклатура = ТаблицаТовары.АналитикаУчетаНоменклатуры.Номенклатура
	|		И КлючиАналитикиПолучателя.Характеристика = ТаблицаТовары.АналитикаУчетаНоменклатуры.Характеристика
	|		И КлючиАналитикиПолучателя.Серия = ТаблицаТовары.АналитикаУчетаНоменклатуры.Серия
	|		И КлючиАналитикиПолучателя.МестоХранения = ТаблицаТовары.Подразделение
	|		И КлючиАналитикиПолучателя.Назначение = ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение
	|		И КлючиАналитикиПолучателя.СтатьяКалькуляции = ТаблицаТовары.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТовары.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	втТовары.НаправлениеВыпуска									КАК НаправлениеВыпуска,
	|	втТовары.ХозяйственнаяОперация								КАК ХозяйственнаяОперация,
	|	втТовары.АналитикаУчетаНоменклатурыПоОтправителю			КАК АналитикаУчетаНоменклатурыПоОтправителю,
	|	КлючиНоменклатурыПоОтправителюБезНазначения.КлючАналитики	КАК АналитикаУчетаНоменклатурыПоОтправителюБезНазначения,
	|	втТовары.АналитикаУчетаНоменклатурыПоПолучателю				КАК АналитикаУчетаНоменклатурыПоПолучателю,
	|	КлючиНоменклатурыПолучательБезНазначения.КлючАналитики		КАК АналитикаУчетаНоменклатурыПоПолучателюБезНазначения,
	|	втТовары.ВидЗапасов											КАК ВидЗапасов,
	|	СпрВидыЗапасов.ВидЗапасовВладельца							КАК ВидЗапасовВладельца,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации			КАК РеализацияЗапасовДругойОрганизации,
	|	втТовары.КорВидЗапасов										КАК КорВидЗапасов,
	|	КлючиНоменклатурыПоОтправителю.МестоХранения				КАК Склад,
	|	КлючиНоменклатурыПолучатель.МестоХранения					КАК Получатель,
	|	КлючиНоменклатурыПолучатель.Номенклатура					КАК Номенклатура,
	|	КлючиНоменклатурыПолучатель.Характеристика					КАК Характеристика,
	|	втТовары.СтатьяРасходов										КАК СтатьяРасходов,
	|	втТовары.АналитикаУчетаПартий								КАК АналитикаУчетаПартий,
	|	втТовары.ПартияПроизводства									КАК ПартияПроизводства,
	|	втТовары.АналитикаФинансовогоУчета							КАК АналитикаФинансовогоУчета,
	|	втТовары.КорАналитикаФинансовогоУчета						КАК КорАналитикаФинансовогоУчета,
	|	втТовары.ВидДеятельностиНДС									КАК ВидДеятельностиНДС,
	|	втТовары.НомерГТД											КАК НомерГТД,
	|	втТовары.СтатьяКалькуляции									КАК СтатьяКалькуляции,
	|	втТовары.Спецификация										КАК Спецификация,
	|	втТовары.Количество											КАК Количество,
	|	втТовары.КоличествоПоРНПТ									КАК КоличествоПоРНПТ,
	|	втТовары.Сумма												КАК Сумма,
	|	ВЫРАЗИТЬ(втТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(втТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(втТовары.СуммаЗабалансовая * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаЗабалансоваяУпр,
	|	ВЫРАЗИТЬ(втТовары.СуммаЗабалансовая * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаЗабалансоваяРегл,
	|	втТовары.ИдентификаторСтроки								КАК ИдентификаторСтроки,
	|	втТовары.ИдентификаторФинЗаписи								КАК ИдентификаторФинЗаписи,
	|	втТовары.НастройкаХозяйственнойОперации					КАК НастройкаХозяйственнойОперации,
	|	втТовары.ПодразделениеПолучательРасходов					КАК ПодразделениеПолучательРасходов,
	|	втТовары.АналитикаРасходов									КАК АналитикаРасходов,
	|	втТовары.АналитикаАктивовПассивов							КАК АналитикаАктивовПассивов,
	|	втТовары.НастройкаСчетовУчета								КАК НастройкаСчетовУчета,
	|	АналитикаКомитента.КлючАналитики							КАК АналитикаКомитента,
	|	ВЫБОР КОГДА СпрВидыЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетовСКомитентом.КлючАналитики
	|	КОНЕЦ														КАК АналитикаУчетаПоПартнерам,
	|	втТовары.Работа												КАК Работа,
	|	втТовары.ЦеховаяКладовая									КАК ЦеховаяКладовая,
	|	втТовары.РаботаДляДавальца									КАК РаботаДляДавальца
	|ПОМЕСТИТЬ втВидыЗапасов
	|ИЗ
	|	втТовары КАК втТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатурыПоОтправителю
	|			ПО втТовары.АналитикаУчетаНоменклатурыПоОтправителю = КлючиНоменклатурыПоОтправителю.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНоменклатурыПоОтправителюБезНазначения
	|			ПО КлючиНоменклатурыПоОтправителюБезНазначения.Номенклатура = КлючиНоменклатурыПоОтправителю.Номенклатура
	|			И КлючиНоменклатурыПоОтправителюБезНазначения.Характеристика = КлючиНоменклатурыПоОтправителю.Характеристика
	|			И КлючиНоменклатурыПоОтправителюБезНазначения.Серия = КлючиНоменклатурыПоОтправителю.Серия
	|			И КлючиНоменклатурыПоОтправителюБезНазначения.МестоХранения = КлючиНоменклатурыПоОтправителю.МестоХранения
	|			И КлючиНоменклатурыПоОтправителюБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И КлючиНоменклатурыПоОтправителюБезНазначения.СтатьяКалькуляции = КлючиНоменклатурыПоОтправителю.СтатьяКалькуляции
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиНоменклатурыПолучатель
	|			ПО втТовары.АналитикаУчетаНоменклатурыПоПолучателю = КлючиНоменклатурыПолучатель.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНоменклатурыПолучательБезНазначения
	|			ПО КлючиНоменклатурыПолучательБезНазначения.Номенклатура = КлючиНоменклатурыПолучатель.Номенклатура
	|			И КлючиНоменклатурыПолучательБезНазначения.Характеристика = КлючиНоменклатурыПолучатель.Характеристика
	|			И КлючиНоменклатурыПолучательБезНазначения.Серия = КлючиНоменклатурыПолучатель.Серия
	|			И КлючиНоменклатурыПолучательБезНазначения.МестоХранения = КлючиНоменклатурыПолучатель.МестоХранения
	|			И КлючиНоменклатурыПолучательБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И КлючиНоменклатурыПолучательБезНазначения.СтатьяКалькуляции = КлючиНоменклатурыПолучатель.СтатьяКалькуляции
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|			ПО СпрВидыЗапасов.Ссылка = втТовары.ВидЗапасов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|			ПО КлючиНоменклатурыПолучатель.Номенклатура = АналитикаКомитента.Номенклатура
	|			И КлючиНоменклатурыПолучатель.Характеристика = АналитикаКомитента.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомитента.Назначение
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|			И СпрВидыЗапасов.ВладелецТовара = АналитикаКомитента.МестоХранения
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаКомитента.СтатьяКалькуляции
	|			И СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовСКомитентом
	|			ПО АналитикаРасчетовСКомитентом.Организация = &Организация
	|			И АналитикаРасчетовСКомитентом.Партнер = СпрВидыЗапасов.ВладелецТовара
	|			И АналитикаРасчетовСКомитентом.Контрагент = СпрВидыЗапасов.Контрагент
	|			И АналитикаРасчетовСКомитентом.Договор = СпрВидыЗапасов.Договор
	|			И АналитикаРасчетовСКомитентом.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|			ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|			И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|			И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|			И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата													КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	&Организация											КАК Организация,
	|	ВтВидыЗапасов.ПодразделениеПолучательРасходов			КАК Подразделение,
	|	ВтВидыЗапасов.СтатьяРасходов							КАК СтатьяРасходов,
	|	ВтВидыЗапасов.АналитикаРасходов							КАК АналитикаРасходов,
	|	&НаправлениеДеятельности								КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО											КАК ВидДеятельностиНДС,
	|	ВтВидыЗапасов.Сумма										КАК СуммаСНДС,
	|	ВтВидыЗапасов.Сумма										КАК СуммаБезНДС,
	|	ВтВидыЗапасов.СуммаУпр									КАК СуммаБезНДСУпр,
	|	ВтВидыЗапасов.СуммаРегл									КАК СуммаСНДСРегл,
	|	ВтВидыЗапасов.СуммаРегл									КАК СуммаБезНДСРегл,
	|	0														КАК ПостояннаяРазница,
	|	0														КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю	КАК АналитикаУчетаНоменклатуры,
	|	
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи				КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеТоваровПоТребованию) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И ВтВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И НЕ ВтВидыЗапасов.Сумма = 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТКА

Функция ТекстЗапросаВтТаблицаЗаказовДавальцаПоНазначениям(Запрос, ТекстыЗапроса, ПрефиксТЧ = "")
	
	Если ПрефиксТЧ = "ВидыЗапасов" Тогда
		ИмяТЧВыходныеИзделия = "ВидыЗапасовВыходныеИзделия";
		ИмяТЧПобочныеИзделия = "ВидыЗапасовПобочныеИзделия";
	Иначе
		ИмяТЧВыходныеИзделия = "ВыходныеИзделия";
		ИмяТЧПобочныеИзделия = "ПобочныеИзделия";
	КонецЕсли;
	
	ИмяТаблицы = "ВтТаблицаЗаказовДавальцаПоНазначениям";
	ТекстЗапроса = ДавальческаяСхема.ТекстЗапросаВтТаблицаЗаказовДавальцаПоНазначениям(
						"ПроизводствоБезЗаказа",
						ИмяТЧВыходныеИзделия,
						ИмяТЧПобочныеИзделия,
						?(ЗначениеЗаполнено(ПрефиксТЧ), "АналитикаУчетаНоменклатуры.Назначение", "Назначение"));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТКА

#КонецОбласти

//++ НЕ УТКА

Функция ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиДавальцуКОформлению";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаЗаказовДавальцаПоНазначениям", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаЗаказовДавальцаПоНазначениям(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)							КАК ВидДвижения,
	|	&Дата															КАК Период,
	|	ТаблицаЗаказовДавальцаПоНазначениям.Договор						КАК Договор,
	|	ТаблицаЗаказовДавальцаПоНазначениям.ЗаказДавальца				КАК ЗаказДавальца,
	|	ТаблицаТовары.Номенклатура										КАК Номенклатура,
	|	ТаблицаТовары.Характеристика									КАК Характеристика,
	|	ТаблицаТовары.Количество										КАК КОформлению,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка)	КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)					КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|		ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ОформитьОтчетДавальцу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)							КАК ВидДвижения,
	|	&Дата															КАК Период,
	|	ТаблицаЗаказовДавальцаПоНазначениям.Договор						КАК Договор,
	|	ТаблицаЗаказовДавальцаПоНазначениям.ЗаказДавальца				КАК ЗаказДавальца,
	|	ТаблицаТовары.Номенклатура										КАК Номенклатура,
	|	ТаблицаТовары.Характеристика									КАК Характеристика,
	|	ТаблицаТовары.Количество										КАК КОформлению,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка)	КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)					КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаЗаказовДавальцаПоНазначениям КАК ТаблицаЗаказовДавальцаПоНазначениям
	|		ПО ТаблицаТовары.Назначение = ТаблицаЗаказовДавальцаПоНазначениям.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ОформитьОтчетДавальцу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТКА

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// приход продукции и возвратных отходов по получателю
	|ВЫБРАТЬ
	|	&Дата													КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	втВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю	КАК АналитикаУчетаНоменклатуры,
	|	&Организация											КАК Организация,
	|	втВидыЗапасов.ВидЗапасов								КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)				КАК НомерГТД,
	|	втВидыЗапасов.Количество								КАК Количество,
	|	втВидыЗапасов.КоличествоПоРНПТ							КАК КоличествоПоРНПТ,
	|	втВидыЗапасов.ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	втВидыЗапасов.ВидДеятельностиНДС						КАК НалогообложениеНДС,
	|	втВидыЗапасов.Номенклатура								КАК Номенклатура,
	|	втВидыЗапасов.Характеристика							КАК Характеристика,
	|	ИСТИНА													КАК Первичное
	|ИЗ
	|	втВидыЗапасов КАК втВидыЗапасов
	|
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// списание материалов из кладовых
	|ВЫБРАТЬ
	|	&Дата													КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)					КАК ВидДвижения,
	|	втВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю	КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА втВидыЗапасов.ВидЗапасовВладельца.Организация
	|		ИНАЧЕ &Организация
	|	КОНЕЦ													КАК Организация,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА втВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ втВидыЗапасов.ВидЗапасов
	|	КОНЕЦ													КАК ВидЗапасов,
	|	втВидыЗапасов.НомерГТД									КАК НомерГТД,
	|	втВидыЗапасов.Количество								КАК Количество,
	|	втВидыЗапасов.КоличествоПоРНПТ							КАК КоличествоПоРНПТ,
	|	втВидыЗапасов.ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	втВидыЗапасов.ВидДеятельностиНДС						КАК НалогообложениеНДС,
	|	втВидыЗапасов.Номенклатура								КАК Номенклатура,
	|	втВидыЗапасов.Характеристика							КАК Характеристика,
	|	ИСТИНА													КАК Первичное
	|ИЗ
	|	втВидыЗапасов КАК втВидыЗапасов
	|
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И НЕ втВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|	И НЕ втВидыЗапасов.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	&Дата													КАК Период,
	|	ВтВидыЗапасов.Склад										КАК Склад,
	|	ВтВидыЗапасов.ВидЗапасовВладельца.Организация			КАК ОрганизацияВладелец,
	|	ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю	КАК АналитикаУчетаНоменклатуры,
	|	ВтВидыЗапасов.ВидЗапасов								КАК ВидЗапасовПродавца,
	|	втВидыЗапасов.НомерГТД									КАК НомерГТД,
	|	ВтВидыЗапасов.Номенклатура								КАК Номенклатура,
	|	ВтВидыЗапасов.Характеристика							КАК Характеристика,
	|	ВтВидыЗапасов.Количество								КАК Количество,
	|	ВтВидыЗапасов.ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	втВидыЗапасов.ВидДеятельностиНДС						КАК НалогообложениеНДС
	|ИЗ
	|	втВидыЗапасов КАК втВидыЗапасов
	|ГДЕ
	|	втВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И втВидыЗапасов.НаправлениеВыпуска =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И НЕ втВидыЗапасов.ХозяйственнаяОперация =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|	И НЕ втВидыЗапасов.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОформитьПоступлениеТоваровПоОдноходовке(Запрос, ТекстыЗапроса, Регистры)

	ОформитьПоступлениеТоваровПоОдноходовкеТовары(Запрос, ТекстыЗапроса, Регистры);
	ОформитьПоступлениеТоваровПоОдноходовкеВозвратныеОтходы(Запрос, ТекстыЗапроса, Регистры);
	
КонецПроцедуры

Процедура ОформитьПоступлениеТоваровПоОдноходовкеТовары(Запрос, ТекстыЗапроса, Регистры)

	ТекстЗапросаДокумента = 
	"ВЫБРАТЬ
	|	ИсточникДанных.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ИсточникДанных.Ссылка				КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	НЕОПРЕДЕЛЕНО						КАК Договор,
	|	НЕОПРЕДЕЛЕНО						КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Ссылка.Дата			КАК Дата,
	|	ИсточникДанных.Номенклатура			КАК Номенклатура,
	|	ИсточникДанных.Характеристика		КАК Характеристика,
	|	ИсточникДанных.Назначение			КАК Назначение,
	|	ИсточникДанных.Серия				КАК Серия,
	|	ИсточникДанных.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ИсточникДанных.Получатель			КАК Склад,
	|	ИсточникДанных.Ссылка.Подразделение	КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Количество			КАК Количество,
	|	ИСТИНА								КАК ЭтоНакладная,
	|	ЛОЖЬ								КАК ПоступлениеПоЗаказам,
	|	ЛОЖЬ								КАК ЭтоКорректировкаВнутриНакладной
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|	И ТИПЗНАЧЕНИЯ(ИсточникДанных.Получатель) = ТИП(Справочник.Склады)
	|";
	
	ТекущийОбъектМетаданных = Метаданные.Документы.ПроизводствоБезЗаказа;
	
	ДополнительныеПоляСоединенияССериями = Новый Массив();
	ДополнительныеПоляСоединенияССериями.Добавить("Получатель");
	
	ПараметрыМодульногоПроведения = СкладыСервер.ПараметрыМодульногоПроведения();
	ПараметрыМодульногоПроведения.ИмяТЧСерии = "ВыходныеИзделияСерии";
	ПараметрыМодульногоПроведения.ДополнительныеПоляСоединенияССериями = ДополнительныеПоляСоединенияССериями;
	
	СкладыСервер.ОформитьПоступлениеТоваровПоОдноходовкеСНастройкойСоединенияСерий(Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаДокумента,
		ТекущийОбъектМетаданных,
		ПараметрыМодульногоПроведения);

КонецПроцедуры

Процедура ОформитьПоступлениеТоваровПоОдноходовкеВозвратныеОтходы(Запрос, ТекстыЗапроса, Регистры)

	ТекстЗапросаДокумента = 
	"ВЫБРАТЬ
	|	ИсточникДанных.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ИсточникДанных.Ссылка				КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	НЕОПРЕДЕЛЕНО						КАК Договор,
	|	НЕОПРЕДЕЛЕНО						КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Ссылка.Дата			КАК Дата,
	|	ИсточникДанных.Номенклатура			КАК Номенклатура,
	|	ИсточникДанных.Характеристика		КАК Характеристика,
	|	ИсточникДанных.Назначение			КАК Назначение,
	|	ИсточникДанных.Серия				КАК Серия,
	|	ИсточникДанных.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ИсточникДанных.Получатель			КАК Склад,
	|	ИсточникДанных.Подразделение		КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Количество			КАК Количество,
	|	ИСТИНА								КАК ЭтоНакладная,
	|	ЛОЖЬ								КАК ПоступлениеПоЗаказам,
	|	ЛОЖЬ								КАК ЭтоКорректировкаВнутриНакладной
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|	И ТИПЗНАЧЕНИЯ(ИсточникДанных.Получатель) = ТИП(Справочник.Склады)
	|";
	
	ТекущийОбъектМетаданных = Метаданные.Документы.ПроизводствоБезЗаказа;
	
	ДополнительныеПоляСоединенияССериями = Новый Массив();
	ДополнительныеПоляСоединенияССериями.Добавить("Получатель");
	
	ПараметрыМодульногоПроведения = СкладыСервер.ПараметрыМодульногоПроведения();
	ПараметрыМодульногоПроведения.ИмяТЧСерии = "ПобочныеИзделияСерии";
	ПараметрыМодульногоПроведения.ДополнительныеПоляСоединенияССериями = ДополнительныеПоляСоединенияССериями;
	
	СкладыСервер.ОформитьПоступлениеТоваровПоОдноходовкеСНастройкойСоединенияСерий(Запрос,
		ТекстыЗапроса,
		Регистры,
		ТекстЗапросаДокумента,
		ТекущийОбъектМетаданных,
		ПараметрыМодульногоПроведения);

КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// приход продукции и возвратных отходов по получателю
	|ВЫБРАТЬ
	|	&Дата											КАК Период,
	|	&Ссылка											КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	ВтВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)	КАК ТипЗаписи,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.ЦеховаяКладовая
	|			ИЛИ втВидыЗапасов.Работа
	|			ТОГДА ВтВидыЗапасов.ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ											КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВтВидыЗапасов.Работа
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА НЕ ВтВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ											КАК РазделУчета,
	|	&Организация									КАК Организация,
	|	ВтВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателюБезНазначения
	|	КОНЕЦ											КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Партия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ЦеховаяКладовая
	|				ИЛИ ВтВидыЗапасов.Работа
	|			ТОГДА ВтВидыЗапасов.АналитикаФинансовогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК АналитикаФинансовогоУчета,
	|	втВидыЗапасов.ВидДеятельностиНДС				КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО									КАК КорОрганизация,
	|	ВтВидыЗапасов.КорВидЗапасов						КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА НЕ ВтВидыЗапасов.РаботаДляДавальца
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ											КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО									КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									КАК КорПартия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И НЕ &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО									КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО									КАК НастройкаСчетовУчета,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО									КАК КорНаправлениеДеятельности,
	|	ВтВидыЗапасов.Количество						КАК Количество,
	|	ВтВидыЗапасов.СуммаУпр							КАК Стоимость,
	|	ВтВидыЗапасов.СуммаУпр							КАК СтоимостьБезНДС,
	|	ВтВидыЗапасов.СуммаРегл							КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ВтВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.ЦеховаяКладовая
	|			ИЛИ втВидыЗапасов.Работа
	|			ТОГДА ВтВидыЗапасов.СуммаЗабалансоваяУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьЗабалансовая,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.ЦеховаяКладовая
	|			ИЛИ втВидыЗапасов.Работа
	|			ТОГДА ВтВидыЗапасов.СуммаЗабалансоваяРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьЗабалансоваяРегл,

	|	
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи		КАК ИдентификаторФинЗаписи,
	|	ВЫБОР 
	|		КОГДА втВидыЗапасов.ЦеховаяКладовая
	|			ИЛИ втВидыЗапасов.Работа
	|			ТОГДА ВтВидыЗапасов.НастройкаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ											КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход продукции и возвратных отходов в подразделение при выпуске на честный склад или списании на расходы.
	|ВЫБРАТЬ
	|	&Дата											КАК Период,
	|	&Ссылка											КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			КАК ВидДвижения,
	|	ВтВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)	КАК ТипЗаписи,
	|	ВтВидыЗапасов.ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ											КАК РазделУчета,
	|	&Организация									КАК Организация,
	|	ВтВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ											КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Партия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК АналитикаУчетаПартий,
	|	ВтВидыЗапасов.АналитикаФинансовогоУчета			КАК АналитикаФинансовогоУчета,
	|	втВидыЗапасов.ВидДеятельностиНДС				КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО									КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО									КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО									КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО									КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									КАК КорПартия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И НЕ &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО									КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО									КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО									КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО									КАК НастройкаСчетовУчета,
	|	НЕОПРЕДЕЛЕНО									КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО									КАК КорНаправлениеДеятельности,
	|	ВтВидыЗапасов.Количество						КАК Количество,
	|	ВтВидыЗапасов.СуммаУпр							КАК Стоимость,
	|	ВтВидыЗапасов.СуммаУпр							КАК СтоимостьБезНДС,
	|	ВтВидыЗапасов.СуммаРегл							КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ВтВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СтоимостьУпр,
	|	ВтВидыЗапасов.СуммаЗабалансоваяУпр				КАК СтоимостьЗабалансовая,
	|	ВтВидыЗапасов.СуммаЗабалансоваяРегл				КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи		КАК ИдентификаторФинЗаписи,
	|	ВтВидыЗапасов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И НЕ ВтВидыЗапасов.ЦеховаяКладовая
	|	ИЛИ втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход продукции и возвратных отходов при выпуске на склад или списании на расходы.
	|ВЫБРАТЬ
	|	&Дата													КАК Период,
	|	&Ссылка													КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)					КАК ВидДвижения,
	|	втВидыЗапасов.ИдентификаторСтроки						КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)		КАК ТипЗаписи,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		 И ВтВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ВЫБОР
	|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС В
	|							(ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
	|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) 
	|		 И ВтВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА втВидыЗапасов.НаправлениеВыпуска
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ													КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ													КАК РазделУчета,
	|	&Организация											КАК Организация,
	|	ВтВидыЗапасов.ВидЗапасов														КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ													КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													КАК Партия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													КАК АналитикаУчетаПартий,
	|	ВтВидыЗапасов.АналитикаФинансовогоУчета					КАК АналитикаФинансовогоУчета,
	|	втВидыЗапасов.ВидДеятельностиНДС						КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВтВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ													КАК КорРазделУчета,
	|	&Организация											КАК КорОрганизация,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВтВидыЗапасов.ВидЗапасов
	|	КОНЕЦ													КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателюБезНазначения
	|	КОНЕЦ													КАК КорАналитикаУчетаНоменклатуры,
	|	втВидыЗапасов.ВидДеятельностиНДС						КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													КАК КорПартия,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО											КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО											КАК СтатьяКалькуляции,
	|	втВидыЗапасов.ПодразделениеПолучательРасходов			КАК Подразделение,
	|	втВидыЗапасов.СтатьяРасходов							КАК СтатьяРасходовСписания,
	|	втВидыЗапасов.АналитикаРасходов							КАК АналитикаРасходов,
	|	втВидыЗапасов.СтатьяРасходов							КАК СтатьяАктивовПассивов,
	|	втВидыЗапасов.АналитикаАктивовПассивов					КАК АналитикаАктивовПассивов,
	|	втВидыЗапасов.НастройкаСчетовУчета						КАК НастройкаСчетовУчета,
	|	НЕОПРЕДЕЛЕНО											КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА &НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ													КАК КорНаправлениеДеятельности,
	|	втВидыЗапасов.Количество								КАК Количество,
	|	ВтВидыЗапасов.СуммаУпр									КАК Стоимость,
	|	ВтВидыЗапасов.СуммаУпр									КАК СтоимостьБезНДС,
	|	ВтВидыЗапасов.СуммаРегл									КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ВтВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ													КАК СтоимостьУпр,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ВтВидыЗапасов.СуммаЗабалансоваяУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ													КАК СтоимостьЗабалансовая,
	|	ВЫБОР
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ВтВидыЗапасов.СуммаЗабалансоваяРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ													КАК СтоимостьЗабалансоваяРегл,
	|	
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи				КАК ИдентификаторФинЗаписи,
	|	ВЫБОР 
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		 И ВтВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ВЫБОР
	|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС В
	|							(ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаВСоставОС)
	|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		КОГДА втВидыЗапасов.НаправлениеВыпуска =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеТоваровПоТребованию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И НЕ ВтВидыЗапасов.ЦеховаяКладовая
	|	ИЛИ втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход материалов и работ на партию производства
	|ВЫБРАТЬ
	|	&Дата																				КАК Период,
	|	&Ссылка																				КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)												КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО																		КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеНаДругиеПартии)						КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОГДА ВтВидыЗапасов.Работа
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА НЕ ВтВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ																				КАК РазделУчета,
	|	&Организация																		КАК Организация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВтВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВтВидыЗапасов.АналитикаКомитента
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ																				КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО																		КАК Партия,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ																				КАК КорРазделУчета,
	|	&Организация																		КАК КорОрганизация,
	|	ВтВидыЗапасов.КорВидЗапасов															КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателюБезНазначения
	|	КОНЕЦ																				КАК КорАналитикаУчетаНоменклатуры,
	|	втВидыЗапасов.ВидДеятельностиНДС													КАК КорВидДеятельностиНДС,
	|	втВидыЗапасов.ПартияПроизводства													КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаУчетаПартий,
	|	ВтВидыЗапасов.АналитикаФинансовогоУчета												КАК КорАналитикаФинансовогоУчета,
	|	ВтВидыЗапасов.СтатьяКалькуляции														КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО																		КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК НастройкаСчетовУчета,
	|	ВтВидыЗапасов.АналитикаУчетаПоПартнерам												КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО																		КАК КорНаправлениеДеятельности,
	|	ВтВидыЗапасов.Количество															КАК Количество,
	|	0																					КАК Стоимость,
	|	0																					КАК СтоимостьБезНДС,
	|	0																					КАК СтоимостьРегл,
	|	0																					КАК СтоимостьУпр,
	|	0																					КАК СтоимостьЗабалансовая,
	|	0																					КАК СтоимостьЗабалансоваяРегл,
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи											КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРасходовНаПартииПроизводства) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|
	|ГДЕ
	|	ВтВидыЗапасов.НаправлениеВыпуска =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И НЕ ВтВидыЗапасов.ХозяйственнаяОперация =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материалов, работ, возвратных отходов по партии производства
	|ВЫБРАТЬ
	|	&Дата																				КАК Период,
	|	&Ссылка																				КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)												КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО																		КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ХозяйственнаяОперация =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|	КОНЕЦ																				КАК ТипЗаписи,
	|	ВтВидыЗапасов.ХозяйственнаяОперация													КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ																				КАК РазделУчета,
	|	&Организация																		КАК Организация,
	|	ВтВидыЗапасов.КорВидЗапасов															КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателюБезНазначения
	|	КОНЕЦ																				КАК АналитикаУчетаНоменклатуры,
	|	втВидыЗапасов.ПартияПроизводства													КАК Партия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПартий,
	|	ВтВидыЗапасов.АналитикаФинансовогоУчета												КАК АналитикаФинансовогоУчета,
	|	втВидыЗапасов.ВидДеятельностиНДС													КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																		КАК КорРазделУчета,
	|	&Организация																		КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ВтВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		КОГДА НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ВтВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ																				КАК КорАналитикаУчетаНоменклатуры,
	|	втВидыЗапасов.ВидДеятельностиНДС													КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																		КАК КорПартия,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И НЕ &ФИФОСкользящаяОценка
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорАналитикаУчетаПартий,
	|	ВтВидыЗапасов.КорАналитикаФинансовогоУчета											КАК КорАналитикаФинансовогоУчета,
	|	ВтВидыЗапасов.СтатьяКалькуляции														КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО																		КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК НастройкаСчетовУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО																		КАК КорНаправлениеДеятельности,
	|	ВтВидыЗапасов.Количество															КАК Количество,
	|	ВтВидыЗапасов.СуммаУпр																КАК Стоимость,
	|	ВтВидыЗапасов.СуммаУпр																КАК СтоимостьБезНДС,
	|	ВтВидыЗапасов.СуммаРегл																КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА ВтВидыЗапасов.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ 						                                            КАК СтоимостьУпр,
	|	ВтВидыЗапасов.СуммаЗабалансоваяУпр													КАК СтоимостьЗабалансовая,
	|	ВтВидыЗапасов.СуммаЗабалансоваяРегл													КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи											КАК ИдентификаторФинЗаписи,
	|	ВтВидыЗапасов.НастройкаХозяйственнойОперации									КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|
	|ГДЕ
	|	ВтВидыЗапасов.НаправлениеВыпуска =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход комиссионного материала с товаров принятых
	|ВЫБРАТЬ
	|	&Дата																				КАК Период,
	|	&Ссылка																				КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)												КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО																		КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)								КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)	КАК РазделУчета,
	|	&Организация																		КАК Организация,
	|	ВтВидыЗапасов.ВидЗапасов															КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ																				КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО																		КАК Партия,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																		КАК КорРазделУчета,
	|	&Организация																		КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																		КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО																		КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО																		КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО																		КАК НастройкаСчетовУчета,
	|	ВтВидыЗапасов.АналитикаУчетаПоПартнерам												КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО																		КАК КорНаправлениеДеятельности,
	|	ВтВидыЗапасов.Количество															КАК Количество,
	|	0																					КАК Стоимость,
	|	0																					КАК СтоимостьБезНДС,
	|	0																					КАК СтоимостьРегл,
	|	0																					КАК СтоимостьУпр,
	|	0																					КАК СтоимостьЗабалансовая,
	|	0																					КАК СтоимостьЗабалансоваяРегл,
	|
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи											КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРасходовНаПартииПроизводства) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|ГДЕ
	|	ВтВидыЗапасов.НаправлениеВыпуска =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И ВтВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// приход работ по расчитываемой стоимости по получателю
	"ВЫБРАТЬ
	|	&Дата									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	ВыходныеИзделия.Получатель				КАК Подразделение,
	|	ВыходныеИзделия.Номенклатура			КАК Номенклатура,
	|	ВыходныеИзделия.Характеристика			КАК Характеристика,
	|	ВыходныеИзделия.Назначение				КАК Назначение,
	|	ВыходныеИзделия.Количество				КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ВыходныеИзделия
	|ГДЕ
	|	ВыходныеИзделия.Ссылка = &Ссылка
	|	И ВыходныеИзделия.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// приход работ по фиксированной стоимости по получателю
	|ВЫБРАТЬ
	|	&Дата									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	ПобочныеРаботы.Получатель				КАК Подразделение,
	|	ПобочныеРаботы.Номенклатура				КАК Номенклатура,
	|	ПобочныеРаботы.Характеристика			КАК Характеристика,
	|	ПобочныеРаботы.Назначение				КАК Назначение,
	|	ПобочныеРаботы.Количество				КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ПобочныеРаботы
	|ГДЕ
	|	ПобочныеРаботы.Ссылка = &Ссылка
	|	И ПобочныеРаботы.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// расход работ
	|ВЫБРАТЬ
	|	&Дата									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	РасходРабот.Подразделение				КАК Подразделение,
	|	РасходРабот.Номенклатура				КАК Номенклатура,
	|	РасходРабот.Характеристика				КАК Характеристика,
	|	РасходРабот.Назначение					КАК Назначение,
	|	РасходРабот.Количество					КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК РасходРабот
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО РасходРабот.Номенклатура = СпрНоменклатура.Ссылка
	|		И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|ГДЕ
	|	РасходРабот.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Организация								КАК Организация,
	|	&Подразделение								КАК Подразделение,
	|	&Дата										КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|			И НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|			ТОГДА КлючиАналитикиОтправителя.КлючАналитики
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		КОГДА НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|			И НЕ  ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|			ТОГДА КлючиАналитикиОтправителяБезНазначения.КлючАналитики
	|		ИНАЧЕ КлючиАналитикиПолучателяБезНазначения.КлючАналитики
	|	КОНЕЦ										КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.Количество					КАК Количество,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ТабличнаяЧасть.Получатель ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|			ТОГДА ТабличнаяЧасть.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ										КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателяБезНазначения
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиПолучателяБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиПолучателяБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиАналитикиПолучателяБезНазначения.Назначение
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиПолучателяБезНазначения.Серия
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.МестоХранения = КлючиАналитикиПолучателяБезНазначения.МестоХранения
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиПолучателяБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И &Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителяБезНазначения
	|		ПО КлючиАналитикиОтправителя.Номенклатура = КлючиАналитикиОтправителяБезНазначения.Номенклатура
	|		И КлючиАналитикиОтправителя.Характеристика = КлючиАналитикиОтправителяБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиАналитикиОтправителяБезНазначения.Назначение
	|		И КлючиАналитикиОтправителя.Серия = КлючиАналитикиОтправителяБезНазначения.Серия
	|		И КлючиАналитикиОтправителя.МестоХранения = КлючиАналитикиОтправителяБезНазначения.МестоХранения
	|		И КлючиАналитикиОтправителя.СтатьяКалькуляции = КлючиАналитикиОтправителяБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация								КАК Организация,
	|	&Подразделение								КАК Подразделение,
	|	&Дата										КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|			И НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|			ТОГДА КлючиАналитикиОтправителя.КлючАналитики
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		КОГДА НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|			И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|			И НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|			ТОГДА КлючиАналитикиОтправителяБезНазначения.КлючАналитики
	|		ИНАЧЕ КлючиАналитикиПолучателяБезНазначения.КлючАналитики
	|	КОНЕЦ										КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.Количество					КАК Количество,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ТабличнаяЧасть.Получатель ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|			ТОГДА ТабличнаяЧасть.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ										КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиПолучателяБезНазначения
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиПолучателяБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиПолучателяБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиАналитикиПолучателяБезНазначения.Назначение
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиПолучателяБезНазначения.Серия
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.МестоХранения = КлючиАналитикиПолучателяБезНазначения.МестоХранения
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиПолучателяБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителя
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиОтправителя.Номенклатура
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиОтправителя.Характеристика
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Серия = КлючиАналитикиОтправителя.Серия
	|		И &Подразделение = КлючиАналитикиОтправителя.МестоХранения
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.Назначение = КлючиАналитикиОтправителя.Назначение
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.СтатьяКалькуляции = КлючиАналитикиОтправителя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиОтправителяБезНазначения
	|		ПО КлючиАналитикиОтправителя.Номенклатура = КлючиАналитикиОтправителяБезНазначения.Номенклатура
	|		И КлючиАналитикиОтправителя.Характеристика = КлючиАналитикиОтправителяБезНазначения.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиАналитикиОтправителяБезНазначения.Назначение
	|		И КлючиАналитикиОтправителя.Серия = КлючиАналитикиОтправителяБезНазначения.Серия
	|		И ТабличнаяЧасть.АналитикаУчетаНоменклатуры.МестоХранения = КлючиАналитикиОтправителяБезНазначения.МестоХранения
	|		И КлючиАналитикиОтправителя.СтатьяКалькуляции = КлючиАналитикиОтправителяБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// отгрузка материалов из цеховой кладовой
	|ВЫБРАТЬ
	|	&Дата																	КАК Период,
	|	ТаблицаТовары.Номенклатура												КАК Номенклатура,
	|	ТаблицаТовары.Характеристика											КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ																	КАК Назначение,
	|	ТаблицаТовары.Серия														КАК Серия,
	|	ТаблицаТовары.Количество												КАК Количество,
	|	ТаблицаТовары.Склад														КАК Отправитель,
	|	СпрСклады.Подразделение													КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве)	КАК СкладскаяОперация,
	|	&Ссылка																	КАК Документ,
	|	НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|		ИЛИ &Дата < СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке			КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Склад
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// производство продукции в кладовую
	|ВЫБРАТЬ
	|	&Дата																	КАК Период,
	|	ТаблицаТовары.Номенклатура												КАК Номенклатура,
	|	ТаблицаТовары.Характеристика											КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ																	КАК Назначение,
	|	ТаблицаТовары.Серия														КАК Серия,
	|	ТаблицаТовары.Количество												КАК Количество,
	|	ТаблицаТовары.Получатель												КАК Отправитель,
	|	ТаблицаТовары.Получатель												КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции)	КАК СкладскаяОперация,
	|	&Ссылка																	КАК Документ,
	|	НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Дата < СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении			КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// производство продукции в кладовую
	|ВЫБРАТЬ
	|	&Дата																	КАК Период,
	|	ТаблицаТовары.Номенклатура												КАК Номенклатура,
	|	ТаблицаТовары.Характеристика											КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ																	КАК Назначение,
	|	ТаблицаТовары.Серия														КАК Серия,
	|	ТаблицаТовары.Количество												КАК Количество,
	|	ТаблицаТовары.Получатель												КАК Отправитель,
	|	ТаблицаТовары.Получатель												КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции)	КАК СкладскаяОперация,
	|	&Ссылка																	КАК Документ,
	|	НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Дата < СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении			КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделияСерии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// производство возвратных отходов в кладовую
	|ВЫБРАТЬ
	|	&Дата															КАК Период,
	|	ТаблицаТовары.Номенклатура										КАК Номенклатура,
	|	ТаблицаТовары.Характеристика									КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ															КАК Назначение,
	|	ТаблицаТовары.Серия												КАК Серия,
	|	ТаблицаТовары.Количество										КАК Количество,
	|	ТаблицаТовары.Получатель										КАК Отправитель,
	|	ТаблицаТовары.Получатель										КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции)	КАК СкладскаяОперация,
	|	&Ссылка															КАК Документ,
	|	НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Дата < СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// производство возвратных отходов в кладовую
	|ВЫБРАТЬ
	|	&Дата															КАК Период,
	|	ТаблицаТовары.Номенклатура										КАК Номенклатура,
	|	ТаблицаТовары.Характеристика									КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ															КАК Назначение,
	|	ТаблицаТовары.Серия												КАК Серия,
	|	ТаблицаТовары.Количество										КАК Количество,
	|	ТаблицаТовары.Получатель										КАК Отправитель,
	|	ТаблицаТовары.Получатель										КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции)	КАК СкладскаяОперация,
	|	&Ссылка															КАК Документ,
	|	НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Дата < СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделияСерии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО СпрСклады.Ссылка = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыходныеИзделия.НомерСтроки					КАК НомерСтроки,
	|	&Дата										КАК ДатаПоступления,
	|	КлючиАналитики.Номенклатура					КАК Номенклатура,
	|	КлючиАналитики.Характеристика				КАК Характеристика,
	|	КлючиАналитики.Серия						КАК Серия,
	|	КлючиАналитики.Назначение					КАК Назначение,
	|	ВыходныеИзделия.ВидЗапасов					КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовВыходныеИзделия КАК ВыходныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ВыходныеИзделия.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО ВыходныеИзделия.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|			И КлючиАналитики.Номенклатура = ПоступленияТоваров.Номенклатура
	|			И КлючиАналитики.Характеристика = ПоступленияТоваров.Характеристика
	|			И КлючиАналитики.Серия = ПоступленияТоваров.Серия
	|			И КлючиАналитики.Назначение = ПоступленияТоваров.Назначение
	|			И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|ГДЕ
	|	ВыходныеИзделия.Ссылка = &Ссылка
	|	И (ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Дата)
	|	И ВыходныеИзделия.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПобочныеИзделия.НомерСтроки					КАК НомерСтроки,
	|	&Дата										КАК ДатаПоступления,
	|	КлючиАналитики.Номенклатура					КАК Номенклатура,
	|	КлючиАналитики.Характеристика				КАК Характеристика,
	|	КлючиАналитики.Серия						КАК Серия,
	|	КлючиАналитики.Назначение					КАК Назначение,
	|	ПобочныеИзделия.ВидЗапасов					КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)	КАК НомерГТД
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВидыЗапасовПобочныеИзделия КАК ПобочныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ПобочныеИзделия.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО ПобочныеИзделия.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|			И КлючиАналитики.Номенклатура = ПоступленияТоваров.Номенклатура
	|			И КлючиАналитики.Характеристика = ПоступленияТоваров.Характеристика
	|			И КлючиАналитики.Серия = ПоступленияТоваров.Серия
	|			И КлючиАналитики.Назначение = ПоступленияТоваров.Назначение
	|			И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|ГДЕ
	|	ПобочныеИзделия.Ссылка = &Ссылка
	|	И (ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Дата)
	|	И ПобочныеИзделия.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата																				КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)												КАК ВидДвижения,
	|	&Организация																		КАК Организация,
	|	ВтВидыЗапасов.Получатель 															КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 																		КАК НаправлениеДеятельности,
	|	ВтВидыЗапасов.СтатьяРасходов														КАК Статья,
	|	ВтВидыЗапасов.АналитикаАктивовПассивов												КАК Аналитика,
	|	ВтВидыЗапасов.СуммаУпр																КАК Сумма
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И ВтВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И НЕ ВтВидыЗапасов.Сумма = 0
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы(Ложь);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	ВтВидыЗапасов.Получатель КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВтВидыЗапасов.СтатьяРасходов КАК Статья,
	|	ВтВидыЗапасов.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтВидыЗапасов.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	ВтВидыЗапасов.СуммаРегл КАК СуммаРегл,
	|	ВтВидыЗапасов.СуммаУпр КАК СуммаУпр,
	|	ВтВидыЗапасов.СуммаУпр КАК СуммаСНДС,
	|	ВтВидыЗапасов.СуммаУпр КАК СуммаБезНДС,
	|
	|	ВтВидыЗапасов.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ВтВидыЗапасов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтВидыЗапасов КАК ВтВидыЗапасов
	|ГДЕ
	|	втВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	И ВтВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И НЕ ВтВидыЗапасов.Сумма = 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Дата																				КАК Период,
		|	ВЫБОР
		|		КОГДА ВтВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			ТОГДА ВЫБОР
		|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС В
		|							(ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
		|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ВтВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|	КОНЕЦ																				КАК ХозяйственнаяОперация,
		|	&Организация																		КАК Организация,
		|	ВтВидыЗапасов.ПодразделениеПолучательРасходов										КАК Подразделение,
		|	ВтВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю								КАК АналитикаУчетаНоменклатуры,
		|	&Подразделение																		КАК Склад,
		|	ВтВидыЗапасов.ВидЗапасов															КАК ВидЗапасов,
		|	ВтВидыЗапасов.ВидЗапасов.ТипЗапасов													КАК ТипЗапасов,
		|	ВтВидыЗапасов.СтатьяРасходов														КАК СтатьяДоходовРасходов,
		|	ВтВидыЗапасов.АналитикаРасходов														КАК АналитикаРасходов,
		|	ВтВидыЗапасов.АналитикаАктивовПассивов												КАК АналитикаАктивовПассивов,
		|	ВтВидыЗапасов.Количество															КАК Количество,
		|	ВтВидыЗапасов.СуммаУпр																КАК Стоимость,
		|	ВтВидыЗапасов.СуммаУпр																КАК СтоимостьБезНДС,
		|	ВтВидыЗапасов.СуммаРегл																КАК СтоимостьРегл,
		|	ВЫБОР
		|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|			ТОГДА ВтВидыЗапасов.ВидЗапасов
		|		ИНАЧЕ ВтВидыЗапасов.Номенклатура
		|	КОНЕЦ																				КАК ИсточникГФУНоменклатуры
		|ИЗ
		|	ВтВидыЗапасов КАК ВтВидыЗапасов
		|ГДЕ
		|	ВтВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата                                КАК Период,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.НаправлениеВыпуска В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|			И НЕ ВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|		ИНАЧЕ ВидыЗапасов.ХозяйственнаяОперация
	|	КОНЕЦ                                КАК ХозяйственнаяОперация,
	|	&Организация                         КАК Организация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВидыЗапасов.Склад) = ТИП(Справочник.Склады)
	|			ТОГДА ВЫРАЗИТЬ(ВидыЗапасов.Склад КАК Справочник.Склады).Подразделение
	|		ИНАЧЕ ВидыЗапасов.Склад
	|	КОНЕЦ                                КАК Подразделение,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ                                КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Склад                    КАК Склад,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасов.ТипЗапасов
	|	КОНЕЦ                                КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                КАК ВидЗапасов,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателюБезНазначения
	|	КОНЕЦ                                КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Получатель               КАК КорСклад,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.КорВидЗапасов = НЕОПРЕДЕЛЕНО
	|			ТОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов
	|		ИНАЧЕ ВидыЗапасов.КорВидЗапасов.ТипЗапасов
	|	КОНЕЦ                                КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.КорВидЗапасов = НЕОПРЕДЕЛЕНО
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.КорВидЗапасов
	|	КОНЕЦ                                КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество               КАК Количество,
	|	ВидыЗапасов.Количество               КАК КорКоличество,
	|
	|	0                                    КАК Стоимость,
	|	0                                    КАК СтоимостьБезНДС,
	|	0                                    КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.Номенклатура
	|	КОНЕЦ                                КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			И ВидыЗапасов.КорВидЗапасов = НЕОПРЕДЕЛЕНО
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ВидыЗапасов.КорВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.Номенклатура
	|	КОНЕЦ                                КАК КорИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                         КАК ДокументДвижения,
	|	&Организация                         КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	НЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю =
	|			НЕОПРЕДЕЛЕНО
	|	И НЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю =
	|			ВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю
	|	И НЕ ВидыЗапасов.НаправлениеВыпуска =
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТрудозатратыКОформлению";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Дата									КАК Период,
	|	&Организация							КАК Организация,
	|	СпрПартииПроизводства.Ссылка			КАК ПартияПроизводства,
	|	ТаблицаТрудозатраты.Ссылка				КАК Распоряжение,
	|	ТаблицаТрудозатраты.ВидРабот			КАК ВидРабот,
	|	ТаблицаТрудозатраты.Исполнитель			КАК Исполнитель,
	|	ТаблицаТрудозатраты.Подразделение		КАК Подразделение,
	|	ТаблицаТрудозатраты.КодСтроки			КАК КодСтрокиРаспоряжения,
	|	ТаблицаТрудозатраты.Количество			КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.Трудозатраты КАК ТаблицаТрудозатраты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = &Ссылка
	|		И СпрПартииПроизводства.Код = ТаблицаТрудозатраты.НомерГруппыЗатрат
	|		И НЕ СпрПартииПроизводства.ПометкаУдаления
	|ГДЕ
	|	ТаблицаТрудозатраты.Ссылка = &Ссылка
	|	И &РаспоряжениеДляТрудозатрат";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаВидЗапасовУмолчанию(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Дата                                     КАК Период,
	|	ВидыЗапасов.ВидЗапасов                    КАК ВидЗапасов,
	|	ВидыЗапасов.АналитикаКомитента            КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов.Валюта             КАК Валюта,
	|	ВидыЗапасов.НомерГТД                      КАК НомерГТД,
	|	0                                         КАК Количество,
	|	0                                         КАК СуммаВыручки,
	|	ВидыЗапасов.Количество                    КАК КоличествоСписано,
	|	0                                         КАК КоличествоКОформлению,
	|	0                                         КАК КоличествоКОформлениюПоРНПТ,
	|	0                                         КАК СуммаВыручкиКОформлению,
	|	ВидыЗапасов.Количество                    КАК КоличествоСписаноКОформлению,
	|	ВидыЗапасов.КоличествоПоРНПТ              КАК КоличествоСписаноКОформлениюПоРНПТ,
	|	Аналитика.Номенклатура                    КАК Номенклатура,
	|	Аналитика.Характеристика                  КАК Характеристика,
	|	ВидыЗапасов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	&ВидЗапасовУмолчанию                      КАК КорВидЗапасов,
	|	ВидыЗапасов.ВидДеятельностиНДС            КАК НалогообложениеНДС,
	|	ВидыЗапасов.ИдентификаторФинЗаписи      КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеКомиссионныхТоваров) КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю = Аналитика.Ссылка
	|
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка									КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО							КАК РазделительЗаписи,
	|	&Дата									КАК ДатаДокументаИБ,
	|	&Номер									КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных				КАК ТипСсылки,
	|	&Организация							КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение			КАК Подразделение,
	|	&Ответственный							КАК Ответственный,
	|	&Автор									КАК Автор,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100))	КАК Комментарий,
	|	&Валюта									КАК Валюта,
	|	0										КАК Сумма,
	|	&Проведен								КАК Проведен,
	|	&ПометкаУдаления						КАК ПометкаУдаления,
	|	ДанныеДокумента.ДополнительнаяЗапись	КАК ДополнительнаяЗапись,
	|	""""									КАК Дополнительно,
	|	&Дата									КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать							КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.Подразделение			КАК МестоХранения,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&Дата									КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|ИЗ
	|	ВтОснований КАК ДанныеДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДанныхДокумента = 
	"ВЫБРАТЬ
	|	ДанныеИсточника.Ссылка				КАК Ссылка,
	|	ДанныеИсточника.Ссылка.Дата			КАК Период,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ДанныеИсточника.Ссылка				КАК Накладная,
	|	ДанныеИсточника.Ссылка.Исправление	КАК Исправление,
	|	ДанныеИсточника.Ссылка.ИсправляемыйДокумент	КАК ИсправляемыйДокумент,
	|	ДанныеИсточника.Подразделение		КАК Получатель,
	|	ДанныеИсточника.Склад				КАК Склад,
	|	ДанныеИсточника.Номенклатура		КАК Номенклатура,
	|	ДанныеИсточника.Характеристика		КАК Характеристика,
	|	ДанныеИсточника.Назначение			КАК Назначение,
	|	ДанныеИсточника.Серия				КАК Серия,
	|	ДанныеИсточника.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ДанныеИсточника.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК Отменено,
	|	ИСТИНА								КАК ЭтоНакладная,
	|	ЛОЖЬ								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ДанныеИсточника
	|
	|ГДЕ
	|	ДанныеИсточника.Ссылка В(&Ссылка)
	|	И НЕ ДанныеИсточника.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|";
	
	СкладыСервер.ЗапланироватьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанныхДокумента);
	
КонецПроцедуры

Процедура ОформитьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДанныхДокумента = 
	"ВЫБРАТЬ
	|	ДанныеИсточника.Ссылка				КАК Ссылка,
	|	ДанныеИсточника.Ссылка.Дата			КАК Период,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ДанныеИсточника.Ссылка				КАК Накладная,
	|	ДанныеИсточника.Ссылка.Исправление	КАК Исправление,
	|	ДанныеИсточника.Ссылка.ИсправляемыйДокумент	КАК ИсправляемыйДокумент,
	|	ДанныеИсточника.Подразделение		КАК Получатель,
	|	ДанныеИсточника.Склад				КАК Склад,
	|	ДанныеИсточника.Номенклатура		КАК Номенклатура,
	|	ДанныеИсточника.Характеристика		КАК Характеристика,
	|	ДанныеИсточника.Назначение			КАК Назначение,
	|	ДанныеИсточника.Серия				КАК Серия,
	|	ДанныеИсточника.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ДанныеИсточника.Количество			КАК Количество,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ЛОЖЬ								КАК ОтгрузкаПоЗаказу
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ДанныеИсточника
	|ГДЕ
	|	ДанныеИсточника.Ссылка В(&Ссылка)
	|	И НЕ ДанныеИсточника.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|";
	
	СкладыСервер.ОформитьОтгрузкуТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДанныхДокумента);
	
КонецПроцедуры

Процедура ЗапланироватьПоступлениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаДокумента = 
	"ВЫБРАТЬ
	|	ИсточникДанных.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ИсточникДанных.Ссылка				КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	НЕОПРЕДЕЛЕНО						КАК Договор,
	|	НЕОПРЕДЕЛЕНО						КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Ссылка.Дата			КАК Дата,
	|	ИсточникДанных.Номенклатура			КАК Номенклатура,
	|	ИсточникДанных.Характеристика		КАК Характеристика,
	|	ИсточникДанных.Назначение			КАК Назначение,
	|	ИсточникДанных.Серия				КАК Серия,
	|	ИсточникДанных.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ИсточникДанных.Получатель			КАК Склад,
	|	ИсточникДанных.Ссылка.Подразделение	КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Количество			КАК Количество,
	|	ИСТИНА								КАК ЭтоНакладная,
	|	ЛОЖЬ								КАК ПоступлениеПоЗаказам
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|	И ТИПЗНАЧЕНИЯ(ИсточникДанных.Получатель) = ТИП(Справочник.Склады)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсточникДанных.Ссылка				КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО						КАК Заказ,
	|	ИсточникДанных.Ссылка				КАК Накладная,
	|	ЛОЖЬ								КАК Исправление,
	|	НЕОПРЕДЕЛЕНО						КАК ИсправляемыйДокумент,
	|	НЕОПРЕДЕЛЕНО						КАК Договор,
	|	НЕОПРЕДЕЛЕНО						КАК Соглашение,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным) КАК ВариантПриемкиТоваров,
	|	ИсточникДанных.Ссылка.Дата			КАК Дата,
	|	ИсточникДанных.Номенклатура			КАК Номенклатура,
	|	ИсточникДанных.Характеристика		КАК Характеристика,
	|	ИсточникДанных.Назначение			КАК Назначение,
	|	ИсточникДанных.Серия				КАК Серия,
	|	ИсточникДанных.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ЛОЖЬ								КАК СверхЗаказа,
	|	ИсточникДанных.Получатель			КАК Склад,
	|	ИсточникДанных.Подразделение		КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ИсточникДанных.Количество			КАК Количество,
	|	ИСТИНА								КАК ЭтоНакладная,
	|	ЛОЖЬ								КАК ПоступлениеПоЗаказам
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка В (&Ссылка)
	|	И ТИПЗНАЧЕНИЯ(ИсточникДанных.Получатель) = ТИП(Справочник.Склады)
	|";
	
	СкладыСервер.ЗапланироватьПоступлениеТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаДокумента);
	
КонецПроцедуры

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабЧасть.Подразделение
		|		ИНАЧЕ
		|			ТабЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|	
		|	ТабЧасть.Назначение     КАК Назначение,
		|	ТабЧасть.Количество     КАК Количество,
		|	НЕОПРЕДЕЛЕНО            КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ИСТИНА                  КАК КонтрольСвободногоОстатка,
		|	ЛОЖЬ                    КАК ИгнорироватьРезервыПриКонтролеОстатков
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТабЧасть";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Получатель     КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	ТабЧасть.Количество     КАК Количество,
		|	ЛОЖЬ                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО            КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|		И (НЕ ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|			ИЛИ ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении > ТабЧасть.Ссылка.Дата
		|			ИЛИ ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ)
		|		ИЛИ ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		// Сторно приходного ордера по старым назначениям.
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                              КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                         КАК Период,
		|	ТабЧасть.Номенклатура                        КАК Номенклатура,
		|	ТабЧасть.Характеристика                      КАК Характеристика,
		|	ТабЧасть.Получатель                          КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	-ТабЧасть.Количество                         КАК Количество,
		|	ЛОЖЬ                                         КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                                 КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ
		|		И ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Получатель     КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТабЧасть.Назначение
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.Количество     КАК Количество,
		|	ТабЧасть.Ссылка         КАК Заказ,
		|	ТабЧасть.Ссылка.Дата    КАК ДатаПоступления,
		|	ИСТИНА                  КАК ДоступенДляРасхода,
		|	ЛОЖЬ                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО            КАК РаспоряжениеВГрафике,
		|	0                       КАК КоличествоВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата";
	
	РаспределениеЗапасовДвижения.ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Получатель     КАК Склад,
		|	ТабЧасть.Назначение     КАК Назначение,
		|	ТабЧасть.Количество     КАК Количество,
		|	ЛОЖЬ                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО            КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|		И (НЕ ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|			ИЛИ ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении > ТабЧасть.Ссылка.Дата
		|			ИЛИ ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ)
		|		ИЛИ ТабЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		// Сторно приходного ордера по старым назначениям.
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка                              КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата                         КАК Период,
		|	ТабЧасть.Номенклатура                        КАК Номенклатура,
		|	ТабЧасть.Характеристика                      КАК Характеристика,
		|	ТабЧасть.Получатель                          КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	-ТабЧасть.Количество                         КАК Количество,
		|	ЛОЖЬ                                         КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО                                 КАК РаспоряжениеВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ
		|		И ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата";
	
	РаспределениеЗапасовДвижения.ПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка         КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата    КАК Период,
		|	ТабЧасть.Номенклатура   КАК Номенклатура,
		|	ТабЧасть.Характеристика КАК Характеристика,
		|	ТабЧасть.Получатель     КАК Склад,
		|	
		|	ВЫБОР КОГДА ТабЧасть.Назначение.ДвиженияПоСкладскимРегистрам = ЛОЖЬ ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТабЧасть.Назначение
		|		КОНЕЦ КАК Назначение,
		|	
		|	ТабЧасть.Количество     КАК Количество,
		|	ТабЧасть.Ссылка         КАК Заказ,
		|	ТабЧасть.Ссылка.Дата    КАК ДатаПоступления,
		|	ИСТИНА                  КАК ДоступенДляРасхода,
		|	ЛОЖЬ                    КАК ПоГрафику,
		|	НЕОПРЕДЕЛЕНО            КАК РаспоряжениеВГрафике,
		|	0                       КАК КоличествоВГрафике
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
		|		И ТабЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении <= ТабЧасть.Ссылка.Дата";
	
	РаспределениеЗапасовДвижения.ЗапланироватьПриходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

#Область ПартионныйУчет

Функция ОписаниеРегистровУчетаЗатратИСебестоимости(Документ) Экспорт
	
	ОписаниеРегистров = Новый Массив;
	ОписаниеРегистров.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	Возврат ОписаниеРегистров;
	
КонецФункции

Функция УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Массив;
	
	Если Запрос <> Неопределено Тогда
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено, ТекстыЗапроса = Неопределено) Экспорт
	
	ДополнительныеТаблицы = Новый Массив;
	ДополнительныеТаблицы.Добавить("ВтВидыЗапасов");
	
	Если Запрос <> Неопределено Тогда
	
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[0], ТекстыЗапроса) Тогда
			ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДополнительныеТаблицы;
	
КонецФункции

Функция ОписаниеОперацийУчетаСебестоимости(Документ) Экспорт
	
	ОписаниеОпераций = Новый Массив;
	
	#Область ВнутреннееПоступление_Выпуск
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 							  КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов				  			  КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													  КАК Партия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС					  КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.ВыпускПодДеятельность					  КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий 				  КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													  КАК КорАналитикаУчетаПартий,
	|	0 														  КАК КодСтроки,
	|
	// Корреспондирующие поля
	|	ВЫБОР КОГДА НЕ ТаблицаВидыЗапасов.РаботаДляДавальца
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|			ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|			ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителюБезНазначения
	|	КОНЕЦ													КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорВидЗапасов						КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО											КАК КорГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО											КАК КорВидДеятельностиНДС,
	|
	// Поля аналитики финансового учета
	|	НЕОПРЕДЕЛЕНО 						КАК Сделка,
	|	ТаблицаДокумента.Подразделение 		КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 						КАК Менеджер,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая ИЛИ ТаблицаВидыЗапасов.Работа
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаФинансовогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ								КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 						 		КАК Количество,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки 				 		КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК Стоимость,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СуммаРегл 								КАК СтоимостьРегл,
	|	0                                   				 		КАК НДСРегл,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьУпр,
	|	0 													 		КАК НДСУпр,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая ИЛИ ТаблицаВидыЗапасов.Работа
	|		ТОГДА ТаблицаВидыЗапасов.СуммаЗабалансоваяУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая ИЛИ ТаблицаВидыЗапасов.Работа
	|		ТОГДА ТаблицаВидыЗапасов.СуммаЗабалансоваяРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьЗабалансоваяРегл,
	|	0													 		КАК ДопРасходы,
	|	0													 		КАК ДопРасходыБезНДС,
	|	0															КАК ДопРасходыРегл,
	|	0															КАК ДопРасходыУпр,
	|	0 												 			КАК ПостояннаяРазница,
	|	0 													 		КАК ВременнаяРазница,
	|	0													 		КАК КорСтоимость,
	|
	// Прочие поля
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТаблицаВидыЗапасов.Работа
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА НЕ ТаблицаВидыЗапасов.ЦеховаяКладовая
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ																		КАК РазделУчета,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая ИЛИ ТаблицаВидыЗапасов.Работа
	|		ТОГДА ТаблицаВидыЗапасов.ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ																		КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи 									КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая ИЛИ ТаблицаВидыЗапасов.Работа
	|		ТОГДА ТаблицаВидыЗапасов.НастройкаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ																		КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаВидыЗапасов.НаправлениеВыпуска В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ВнутреннееПоступление_Дополнение
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 							   КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов				  			   КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22	И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													   КАК Партия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС					   КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.ВыпускПодДеятельность					   КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий 				  КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22	И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													  КАК КорАналитикаУчетаПартий,
	|	0 														  КАК КодСтроки,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО											  КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО											  КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО											  КАК КорГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО											  КАК КорВидДеятельностиНДС,
	|
	// Поля аналитики финансового учета
	|	НЕОПРЕДЕЛЕНО 									КАК Сделка,
	|	ТаблицаДокумента.Подразделение 					КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 									КАК Менеджер,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета	КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 						 		КАК Количество,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки 				 		КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК Стоимость,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СуммаРегл 								КАК СтоимостьРегл,
	|	0                                   				 		КАК НДСРегл,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьУпр,
	|	0 													 		КАК НДСУпр,
	|	ТаблицаВидыЗапасов.СуммаЗабалансоваяУпр						КАК СтоимостьЗабалансовая,
	|	ТаблицаВидыЗапасов.СуммаЗабалансоваяРегл					КАК СтоимостьЗабалансоваяРегл,
	|	0													 		КАК ДопРасходы,
	|	0													 		КАК ДопРасходыБезНДС,
	|	0															КАК ДопРасходыРегл,
	|	0															КАК ДопРасходыУпр,
	|	0 												 			КАК ПостояннаяРазница,
	|	0 													 		КАК ВременнаяРазница,
	|	0													 		КАК КорСтоимость,
	|
	// Прочие поля
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ																		КАК РазделУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)							КАК ТипЗаписи,
	|	ТаблицаВидыЗапасов.ХозяйственнаяОперация									КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи 									КАК ИдентификаторФинЗаписи,
	|	ТаблицаВидыЗапасов.НастройкаХозяйственнойОперации 							КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И (ТаблицаВидыЗапасов.НаправлениеВыпуска В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	  И НЕ ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ИЛИ ТаблицаВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию))";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ВнутреннееПоступление_ПартияПроизводства
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Описание документа
	|	ТаблицаДокумента.Дата 	КАК Период,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
	|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
	|
	// Поля учета номенклатуры
	|	ТаблицаДокумента.Организация 							   КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоПолучателю  КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорВидЗапасов				  		   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ПартияПроизводства					   КАК Партия,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС					   КАК ВидДеятельностиНДС,
	|	ТаблицаДокумента.ВыпускПодДеятельность					   КАК ВидДеятельностиНДСДокумента,
	|
	// Поля аналитики учета партий
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий 				  КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22	И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 													  КАК КорАналитикаУчетаПартий,
	|	0 														  КАК КодСтроки,
	|
	// Корреспондирующие поля
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПоОтправителю
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ													  КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО											  КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.КорАналитикаФинансовогоУчета			  КАК КорГруппаПродукции,
	|	ТаблицаВидыЗапасов.ВидДеятельностиНДС					  КАК КорВидДеятельностиНДС,
	|
	// Поля аналитики финансового учета
	|	НЕОПРЕДЕЛЕНО 									КАК Сделка,
	|	ТаблицаДокумента.Подразделение 					КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО 									КАК Менеджер,
	|	ТаблицаВидыЗапасов.АналитикаФинансовогоУчета	КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ТаблицаВидыЗапасов.Количество 						 		КАК Количество,
	|	НЕОПРЕДЕЛЕНО 				 								КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК Стоимость,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СуммаРегл 								КАК СтоимостьРегл,
	|	0                                   				 		КАК НДСРегл,
	|	ТаблицаВидыЗапасов.СуммаУпр 						 		КАК СтоимостьУпр,
	|	0 													 		КАК НДСУпр,
	|	ТаблицаВидыЗапасов.СуммаЗабалансоваяУпр						КАК СтоимостьЗабалансовая,
	|	ТаблицаВидыЗапасов.СуммаЗабалансоваяРегл					КАК СтоимостьЗабалансоваяРегл,
	|	0													 		КАК ДопРасходы,
	|	0													 		КАК ДопРасходыБезНДС,
	|	0															КАК ДопРасходыРегл,
	|	0															КАК ДопРасходыУпр,
	|	0 												 			КАК ПостояннаяРазница,
	|	0 													 		КАК ВременнаяРазница,
	|	0													 		КАК КорСтоимость,
	|
	// Прочие поля
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ																		КАК РазделУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)							КАК ТипЗаписи,
	|	ТаблицаВидыЗапасов.ХозяйственнаяОперация									КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи									КАК ИдентификаторФинЗаписи,
	|	ТаблицаВидыЗапасов.НастройкаХозяйственнойОперации							КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО ИСТИНА
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&Ссылка)
	|	И ТаблицаВидыЗапасов.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И ТаблицаВидыЗапасов.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)";
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление,
		ТекстЗапроса);
	
	#КонецОбласти
	
	Возврат ОписаниеОпераций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ПартииПроизводства

// Формирует партии производства документа.
// Параметры:
//  Объект - ДокументОбъект.ПроизводствоБезЗаказа, ДокументСсылка.ПроизводствоБезЗаказа - объект, для которого необходимо сформировать партии производства.
//
Процедура СформироватьПартииПроизводства(Объект) Экспорт
	
	Реквизиты = Объект;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ПроизводствоБезЗаказа") Тогда
		
		СписокРеквизитов =
			"Ссылка, Дата, Организация, ГруппировкаЗатрат, НаправлениеДеятельности, ВыпускПодДеятельность";
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, СписокРеквизитов);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка",						Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Дата",						Реквизиты.Дата);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("ГруппировкаЗатрат",			Реквизиты.ГруппировкаЗатрат);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",	Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",		Реквизиты.ВыпускПодДеятельность);
	
	Запрос.УстановитьПараметр("ПартионныйУчетВерсии22",
		РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22(Реквизиты.Дата));
	
	СформироватьТаблицуПродукции(Объект, Запрос);
	
	ТекстВыборкаПолейПартий = ТекстВыборкаПолейПартий();
	Справочники.ПартииПроизводства.СформироватьПартииПроизводства(
		Запрос,
		ТекстВыборкаПолейПартий,
		Истина,
		Истина);
	
КонецПроцедуры

Процедура СформироватьТаблицуПродукции(Объект, Запрос)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка							КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки		КАК НомерСтроки,
	|	ТаблицаТовары.НомерГруппыЗатрат	КАК НомерГруппыЗатрат,
	|	ТаблицаТовары.Номенклатура		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика	КАК Характеристика,
	|	ТаблицаТовары.Спецификация		КАК Спецификация,
	|	ТаблицаТовары.Назначение		КАК Назначение
	|ПОМЕСТИТЬ ТаблицаПродукция
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И &УсловиеСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТовары.НомерГруппыЗатрат
	|";
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ПроизводствоБезЗаказа") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаПродукция", "Документ.ПроизводствоБезЗаказа.ВыходныеИзделия");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСсылка", "ТаблицаТовары.Ссылка = &Ссылка");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСсылка", "ИСТИНА");
		Запрос.УстановитьПараметр("ТаблицаПродукция", Объект.ВыходныеИзделия.Выгрузить());
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстВыборкаПолейПартий()
	
	Возврат
	"ВЫБРАТЬ
	|	&Ссылка											КАК Документ,
	|	&ГруппировкаЗатрат								КАК ГруппировкаЗатрат,
	|	ТаблицаПродукция.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
	|	&Организация									КАК Организация,
	|	НЕОПРЕДЕЛЕНО									КАК ТипПроцесса,
	|	ВЫБОР
	|		КОГДА &ГруппировкаЗатрат В
	|				(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям))
	|			ТОГДА &НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ											КАК НаправлениеДеятельности,
	|	&ВыпускПодДеятельность							КАК ВидДеятельностиНДС,
	|	ОсновныеИзделия.Номенклатура					КАК ОсновноеИзделиеНоменклатура,
	|	ОсновныеИзделия.Характеристика					КАК ОсновноеИзделиеХарактеристика,
	|	ВЫБОР
	|		КОГДА &ГруппировкаЗатрат В
	|				(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям))
	|			ТОГДА ТаблицаПродукция.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ГруппировкаЗатрат В
	|				(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям))
	|			ТОГДА ТаблицаПродукция.Характеристика
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Характеристика,
	|	СпрОсновныхИзделий.ГруппаАналитическогоУчета	КАК ГруппаПродукции,
	|	ВЫБОР
	|		КОГДА &ГруппировкаЗатрат В
	|				(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям))
	|			ТОГДА ТаблицаПродукция.Спецификация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Спецификация,
	|	ВЫБОР
	|		КОГДА &ГруппировкаЗатрат В
	|				(ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям))
	|			ТОГДА ТаблицаПродукция.Назначение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ											КАК Назначение
	|ПОМЕСТИТЬ ВТПоляПартийПроизводства
	|ИЗ
	|	ТаблицаПродукция КАК ТаблицаПродукция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераСтрокОсновныхИзделий КАК НомераСтрокОсновныхИзделий
	|	ПО НомераСтрокОсновныхИзделий.НомерГруппыЗатрат = ТаблицаПродукция.НомерГруппыЗатрат
	|	И НомераСтрокОсновныхИзделий.Ссылка = &Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПродукция КАК ОсновныеИзделия
	|	ПО ОсновныеИзделия.НомерСтроки = НомераСтрокОсновныхИзделий.НомерСтроки
	|	И ОсновныеИзделия.Ссылка = &Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрОсновныхИзделий
	|	ПО СпрОсновныхИзделий.Ссылка = ОсновныеИзделия.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|	ПО СпрНазначения.Ссылка = ТаблицаПродукция.Назначение
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.ПроизводствоБезЗаказа)
	|";
	
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|						ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|						ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|			И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|		И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|		И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|		И Товары.Серия = ТоварыДляЗапроса.Серия
	|		И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|		И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|		И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|		И ТоварыДляЗапроса.Получатель = СерииДляЗапроса.Получатель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Получатель)
	|		И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийМатериалыИРаботы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = Товары.Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки,
	|	Статусы.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области
//                                              в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Накладная",
			НСтр("ru = 'Выпуск продукции';
				|en = 'Product release'"),
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПередачаМатериаловВПроизводство") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПередачаМатериаловВПроизводство",
			НСтр("ru = 'Передача материалов в производство';
				|en = 'Transfer of materials to production'"),
			ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	ПроизводствоБезЗаказаЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДвижениеПродукцииИМатериалов.ПФ_MXL_Накладная");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ДанныеДокумента.Номер						КАК Номер,
	|	ДанныеДокумента.Дата						КАК Дата,
	|	ДанныеДокумента.ИсправляемыйДокумент.Номер	КАК НомерИсправляемогоДокумента,
	|	ДанныеДокумента.ИсправляемыйДокумент.Дата	КАК ДатаИсправляемогоДокумента,
	|	ДанныеДокумента.Организация					КАК Организация,
	|	ДанныеДокумента.Организация.Префикс			КАК Префикс
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Получатель                            КАК Склад,
	|	ТаблицаТовары.Ссылка.Подразделение                  КАК Подразделение,
	|	ТаблицаТовары.Упаковка                              КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                    КАК Количество,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТовары.Получатель) = ТИП(Справочник.Склады)
	|	И НЕ ТаблицаТовары.Получатель.ЦеховаяКладовая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Получатель,
	|	ТаблицаСерии.Ссылка.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделияСерии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Получатель = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивДокументов)
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТовары.Получатель) = ТИП(Справочник.Склады)
	|	И НЕ ТаблицаТовары.Получатель.ЦеховаяКладовая
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Получатель,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Получатель                            КАК Склад,
	|	ТаблицаТовары.Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Упаковка                              КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                    КАК Количество,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТовары.Получатель) = ТИП(Справочник.Склады)
	|	И НЕ ТаблицаТовары.Получатель.ЦеховаяКладовая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Получатель,
	|	ТаблицаТовары.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделияСерии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Получатель = ТаблицаТовары.Получатель
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивДокументов)
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТовары.Получатель) = ТИП(Справочник.Склады)
	|	И НЕ ТаблицаТовары.Получатель.ЦеховаяКладовая
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Получатель,
	|	ТаблицаТовары.Подразделение,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                                         КАК Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)                                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                                                   КАК Номенклатура,
	|	&КодАртикул                                                                  КАК КодАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное 								 КАК ТоварНаименование,
	|	ТаблицаТовары.Характеристика 												 КАК Характеристика,
	|	ТаблицаТовары.Характеристика.Наименование 									 КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Серия.Наименование 											 КАК СерияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Наименование
	|	КОНЕЦ 																		 КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаТовары.Количество) 											 КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства) КАК НаправлениеВыпуска,
	|	ТаблицаТовары.Склад.Представление                                            КАК ПредставлениеПолучателя,
	|	ТаблицаТовары.Подразделение.Представление                                    КАК ПредставлениеПодразделения,
	|	&ТипПолучателяСклад                                                          КАК ТипПолучателя
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Наименование
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(ТипПолучателя)
	|ПО
	|	Ссылка,
	|	ПредставлениеПодразделения,
	|	ПредставлениеПолучателя";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
		"&КодАртикул", 
		?(ИмяКолонкиКодов = "", """""", "ТаблицаТовары.Номенклатура." + ИмяКолонкиКодов));

	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	Запрос.УстановитьПараметр("ТипПолучателяСклад",         НСтр("ru = 'Склад';
																|en = 'Warehouse'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_Накладная";
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		ВыборкаПоПодразделениям = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПодразделениям.Следующий() Цикл
			ВыборкаПоПолучателям = ВыборкаПоПодразделениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоПолучателям.Следующий() Цикл
				Если Не ПервыйДокумент Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				НомерСтраницы = 1;
				
				ПервыйДокумент    = Ложь;
				НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				
				// Выводим общие реквизиты шапки
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
				ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				ОбластьМакета.Параметры.ПредставлениеПодразделения = ВыборкаПоПолучателям.ПредставлениеПодразделения;
				ОбластьМакета.Параметры.ПредставлениеПолучателя = ВыборкаПоПолучателям.ПредставлениеПолучателя;
				ОбластьМакета.Параметры.ТипПолучателя = ВыборкаПоПолучателям.ТипПолучателя;
				
				ПараметрыОбласти = Новый Структура;
				ПараметрыОбласти.Вставить(
					"ТекстЗаголовка",
					ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
						ДанныеПечати,
						НСтр("ru = 'Выпуск продукции';
							|en = 'Product release'", ОбщегоНазначения.КодОсновногоЯзыка())));
				ПараметрыОбласти.Вставить(
					"ПредставлениеОрганизации",
					ФормированиеПечатныхФорм.ОписаниеОрганизации(
						ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
							ДанныеПечати.Организация,
							ДанныеПечати.Дата),
						"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны"));
				
				ОбластьМакета.Параметры.Заполнить(ПараметрыОбласти);
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Создаем массив для проверки вывода
				МассивВыводимыхОбластей = Новый Массив;
				
				// Выводим многострочную часть докмента
				ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть(?(ИмяКолонкиКодов = "", "ЗаголовокТаб", "ЗаголовокТабСКодом"));
				ОбластьМакета           = Макет.ПолучитьОбласть(?(ИмяКолонкиКодов = "", "Строка",       "СтрокаСКодом"));
				ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
				
				Если ИмяКолонкиКодов <> "" Тогда
					ОбластьЗаголовокТаблицы.Параметры.Колонка = ПредставлениеКолонкиКодов;
				КонецЕсли;
				
				СтрокаТовары = ВыборкаПоПолучателям.Выбрать();
				КоличествоСтрок = СтрокаТовары.Количество();
				НомерСтроки = 0;
				ПараметрыСтрокиТовары = Новый Структура("НомерСтроки,ТоварНаименование");
				Пока СтрокаТовары.Следующий() Цикл
					
					ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
					ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
					
					НомерСтроки = НомерСтроки + 1;
					
					ПараметрыСтрокиТовары.НомерСтроки = НомерСтроки;
					ПараметрыСтрокиТовары.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
																	СтрокаТовары.ТоварНаименование, 
																	СтрокаТовары.ХарактеристикаНаименование,,
																	СтрокаТовары.СерияНаименование,
																	ДопПараметрыПредставлениеНоменклатуры);
																	
					ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
					ОбластьМакета.Параметры.Заполнить(ПараметрыСтрокиТовары);
					
					Если НомерСтроки = 1 Тогда
						
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы =
							СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Страница %1';
																						|en = 'Page %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
																					НомерСтраницы);
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					Иначе
						
						МассивВыводимыхОбластей.Очистить();
						МассивВыводимыхОбластей.Добавить(ОбластьМакета);
						
						Если НомерСтроки = КоличествоСтрок Тогда
							
							МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
							
						КонецЕсли;
						
						Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
							
							НомерСтраницы = НомерСтраницы + 1;
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы =
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Страница %1';
																							|en = 'Page %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
																						НомерСтраницы);
							ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
							
						КонецЕсли;
						
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				КонецЦикла;
				
				// Выводим подвал документа
				ОбластьПодвала.Параметры.ИтоговаяСтрока =
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Всего наименований %1';
																				|en = 'Total items %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
																			СтрокаТовары.Количество());
				
				ТабличныйДокумент.Вывести(ОбластьПодвала);
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
																НомерСтрокиНачало,
																ОбъектыПечати,
																ДанныеПечати.Ссылка);
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ДопКолонка = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос= Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка							КАК Ссылка,
	|	Реквизиты.Номер								КАК Номер,
	|	Реквизиты.Дата								КАК Дата,
	|	Реквизиты.ИсправляемыйДокумент.Номер		КАК НомерИсправляемогоДокумента,
	|	Реквизиты.ИсправляемыйДокумент.Дата			КАК ДатаИсправляемогоДокумента,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Реквизиты.Организация)	КАК Организация,
	|	Реквизиты.Организация.Префикс				КАК Префикс
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа КАК Реквизиты
	|	ПО Реквизиты.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ЕСТЬNULL(ТаблицаТовары.Склад.ЦеховаяКладовая, ИСТИНА)
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.Номер,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация.Префикс,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Реквизиты.Организация)
	|УПОРЯДОЧИТЬ ПО
	|	Реквизиты.Ссылка
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка								КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Склад)			КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Подразделение)	КАК Подразделение,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&ДопКолонка,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ 
	|			ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ												КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок					КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ЕСТЬNULL(ТаблицаТовары.Склад.ЦеховаяКладовая, ИСТИНА)
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Подразделение,
	|	Склад
	|";
	
	Если ВыводитьДопКолонку Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопКолонка,", "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонка,");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопКолонка,", "");
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВПроизводство";

	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, ДатаИсправляемогоДокумента, НомерИсправляемогоДокумента");
	СинонимДокумента = Строка(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);

	Макет =
		УправлениеПечатью.МакетПечатнойФормы("Документ.ДвижениеПродукцииИМатериалов.ПФ_MXL_ПередачаМатериаловВПроизводство");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	Если ВыводитьДопКолонку Тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаДопКолонка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыДопКолонка");
	Иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	КонецЕсли;
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		ВыборкаПоПодразделениям = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПодразделениям.Следующий() Цикл
			ВыборкаПоСкладам = ВыборкаПоПодразделениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСкладам.Следующий() Цикл
				
				НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
				
				Если Не ПервыйДокумент Тогда
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				ПервыйДокумент = Ложь;
				
				// Вывод заголовка.
				ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДанныеПечати);
				ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоСкладам);
				
				ПараметрыОбласти = Новый Структура;
				ПараметрыОбласти.Вставить(
					"ТекстЗаголовка",
					ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
						РеквизитыДокумента,
						СинонимДокумента));
				ПараметрыОбласти.Вставить("Организация", ДанныеПечати.Организация);
				
				ОбластьЗаголовок.Параметры.Заполнить(ПараметрыОбласти);
				
				ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
					ТабДокумент,
					Макет,
					ОбластьЗаголовок,
					ВыборкаПоДокументам.Ссылка);
				
				ТабДокумент.Вывести(ОбластьЗаголовок);
				
				// Вывод шапки.
				Если ВыводитьДопКолонку Тогда
					ОбластьШапкаТаблицы.Параметры.ДопКолонка = ПредставлениеКолонкиКодов;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьШапкаТаблицы);
				
				// Вывод строк документа.
				
				ВыборкаСтроки = ВыборкаПоСкладам.Выбрать();
				Пока ВыборкаСтроки.Следующий() Цикл
					
					ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
					ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
					
					ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
					
					ОбластьСтрока.Параметры.Номенклатура = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						ВыборкаСтроки.Номенклатура,
						ВыборкаСтроки.Характеристика,
						,
						,
						ДопПараметрыПредставлениеНоменклатуры);
					
					ТабДокумент.Вывести(ОбластьСтрока);
					
				КонецЦикла;
				
				// Вывод подвала.
				ТабДокумент.Вывести(ОбластьПодписи);

				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
					ТабДокумент,
					НомерСтрокиНачало,
					ОбъектыПечати,
					ВыборкаПоДокументам.Ссылка);

			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

// Порядок обработки изменения направления деятельности.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения
// Возвращаемое значение:
// 	см. НаправленияДеятельностиСервер.ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности
//
Функция ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности(Форма) Экспорт
	
	ПорядокОбработкиДокумента = НаправленияДеятельностиСервер.ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности();
	ПорядокОбработкиДокумента.ИменаТабличныхЧастейДляОчисткиНекорректныхНазначений = "ВыходныеИзделия,ПобочныеИзделия,МатериалыИРаботы";
	ТаблицаУсловий = НаправленияДеятельностиСервер.УсловияОбработкиНазначенийВСтроках("ТипНоменклатуры");
	ПорядокОбработкиДокумента.УсловияОбработкиСтрок.Вставить("ВыходныеИзделия",  ТаблицаУсловий);
	ПорядокОбработкиДокумента.УсловияОбработкиСтрок.Вставить("ПобочныеИзделия",  ТаблицаУсловий);
	ПорядокОбработкиДокумента.УсловияОбработкиСтрок.Вставить("МатериалыИРаботы", ТаблицаУсловий);
	
	Возврат ПорядокОбработкиДокумента;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПроизводствоБезЗаказа.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.25";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("15c2a40b-3a72-44e8-8d89-1784a5452d35");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПроизводствоБезЗаказа.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заменяет количество в упаковке на количество в единице хранения и очищает упаковку для штучных товаров, которые учитываются в мерных единицах в табличных частях ""Выходные изделия"", ""Побочные изделия"" и ""Материалы"", если количество в единице хранения дробное.
	|Заполняет реквизит ""Идентификатор фин. записи"" табличной части ""Виды запасов (выходные изделия)"" и ""Виды запасов (побочные изделия)"".
	|Заполняет реквизит ""Идентификатор строки"" в табличных частях.
	|Заполняет реквизит ""Настройка счетов учета"".';
	|en = 'Replaces the quantity in the package with the quantity in the storage unit and clears the package for piece goods, which are recorded in measured units in the “Finished products”, “By-products” and “Materials” tables, if the quantity in the storage unit is fractional.
	|Populates the ""Fin. record ID"" attribute of ""Inventory owner attributes (finished products)"" and ""Inventory owner attributes (by-products)"" tables.
	|Populates the ""Line ID"" attribute in tables.
	|Fills in the ""Ledger account settings"" attribute.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПроизводствоБезЗаказа.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.Склады.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.УпаковкиЕдиницыИзмерения.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПроизводствоБезЗаказа.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПроизводствоБезЗаказа.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.Склады.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ТаблицаДокументов
	|ГДЕ
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабличнаяЧасть
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|				ПО ТабличнаяЧасть.Получатель = СпрСклады.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|				ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|				ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|				ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|			И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|			И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|			И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0)))
	|	ИЛИ 
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабличнаяЧасть
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|				ПО ТабличнаяЧасть.Получатель = СпрСклады.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|				ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|				ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|				ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|			И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|			И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|			И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0)))
	|	ИЛИ 
	|	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТабличнаяЧасть
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|				ПО ТабличнаяЧасть.Склад = СпрСклады.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|				ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|				ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|				ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|			И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|			И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|			И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0)))
	|	ИЛИ	ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ВидыЗапасовВыходныеИзделия КАК ТабличнаяЧасть
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабличнаяЧасть.ИдентификаторФинЗаписи = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ВидыЗапасовПобочныеИзделия КАК ТабличнаяЧасть
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабличнаяЧасть.ИдентификаторФинЗаписи = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТабЧасть
	|		ГДЕ
	|			ТабЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабЧасть.ИдентификаторСтроки = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ВидыЗапасовМатериалыИРаботы КАК ТабЧасть
	|		ГДЕ
	|			ТабЧасть.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабЧасть.ИдентификаторСтроки = """")
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабЧастьТоварыВыходныеИзделия
	|		ГДЕ
	|			ТабЧастьТоварыВыходныеИзделия.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабЧастьТоварыВыходныеИзделия.УдалитьСчетУчета <> &СчетУчетаПустаяСсылка
	|			И ТабЧастьТоварыВыходныеИзделия.НастройкаСчетовУчета = &НастройкиСчетовУчетаПустаяСсылка)
	|	ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабЧастьТоварыПобочныеИзделия
	|		ГДЕ
	|			ТабЧастьТоварыПобочныеИзделия.Ссылка = ТаблицаДокументов.Ссылка
	|			И ТабЧастьТоварыПобочныеИзделия.УдалитьСчетУчета <> &СчетУчетаПустаяСсылка
	|			И ТабЧастьТоварыПобочныеИзделия.НастройкаСчетовУчета = &НастройкиСчетовУчетаПустаяСсылка)
	|	
	|	";
	
	Запрос.УстановитьПараметр("СчетУчетаПустаяСсылка", РеглУчетКлиентСервер.СсылкаПланСчетов());
	Запрос.УстановитьПараметр("НастройкиСчетовУчетаПустаяСсылка", Справочники.НастройкиСчетовУчетаПрочихОпераций.ПустаяСсылка());
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры	

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПроизводствоБезЗаказа";	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
					Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
			
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа КАК Шапка
	|		ПО ТаблицаДокументов.Ссылка = Шапка.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	""ВыходныеИзделия"" КАК ИмяТЧ,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабличнаяЧасть
	|		ПО ТаблицаДокументов.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО ТабличнаяЧасть.Получатель = СпрСклады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|		ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|		ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|ГДЕ
	|	НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|	И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|	И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|	И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	""ПобочныеИзделия"" КАК ИмяТЧ,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабличнаяЧасть
	|		ПО ТаблицаДокументов.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО ТабличнаяЧасть.Получатель = СпрСклады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|		ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|		ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|ГДЕ
	|	НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|	И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|	И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|	И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	""МатериалыИРаботы"" КАК ИмяТЧ,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТабличнаяЧасть
	|		ПО ТаблицаДокументов.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|		ПО ТабличнаяЧасть.Склад = СпрСклады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрЕдиницыХранения
	|		ПО СпрНоменклатура.ЕдиницаИзмерения = СпрЕдиницыХранения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|		ПО ТабличнаяЧасть.Упаковка = СпрУпаковки.Ссылка
	|ГДЕ
	|	НЕ ЕСТЬNULL(СпрСклады.ЦеховаяКладовая, ЛОЖЬ)
	|	И СпрЕдиницыХранения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|	И СпрУпаковки.ТипИзмеряемойВеличины В (ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем), 
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь),
	|										   ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|	И ТабличнаяЧасть.Количество <> ВЫРАЗИТЬ(ТабличнаяЧасть.Количество КАК ЧИСЛО(15, 0))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаДокументов", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапроса;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ОбрабатываемыеДокументы = МассивРезультатов[0].Выгрузить();
	
	ТаблицаСтрокКорректировкиКоличествоУпаковок = МассивРезультатов[1].Выгрузить();
	ТаблицаСтрокКорректировкиКоличествоУпаковок.Индексы.Добавить("Ссылка");
	
	СтруктураОтбора = Новый Структура("Ссылка"); 
	
	Для каждого ДанныеДокумента Из ОбрабатываемыеДокументы Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ДанныеДокумента.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
								ДанныеДокумента.Ссылка, ДанныеДокумента.ВерсияДанных, Параметры.Очередь);
			
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДанныеДокумента); 
			
			МассивСтрок = ТаблицаСтрокКорректировкиКоличествоУпаковок.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаТаблицы Из МассивСтрок Цикл
				СтрокаТЧ = ДокументОбъект[СтрокаТаблицы.ИмяТЧ][СтрокаТаблицы.ИндексСтроки];
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТаблицы, "КоличествоУпаковок, Упаковка");	
			КонецЦикла;
			
			ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, 
				"ВидыЗапасовВыходныеИзделия,ВидыЗапасовПобочныеИзделия,МатериалыИРаботы,ВидыЗапасовМатериалыИРаботы");
			
			НастройкаСчетовУчетаСервер.ЗаполнитьНастройкиСчетовУчета(ДокументОбъект);
			
			ТЧВидыЗапасовДляЗаполненияНастроекСчетовУчета = Новый Соответствие();
			ТЧВидыЗапасовДляЗаполненияНастроекСчетовУчета.Вставить("ВидыЗапасовВыходныеИзделия", "ВыходныеИзделия");
			ТЧВидыЗапасовДляЗаполненияНастроекСчетовУчета.Вставить("ВидыЗапасовПобочныеИзделия", "ПобочныеИзделия");
			НастройкаСчетовУчетаСервер.ЗаполнитьНастройкиСчетовУчетаВидыЗапасов(ДокументОбъект,
				ТЧВидыЗапасовДляЗаполненияНастроекСчетовУчета);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
				
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать документ: %1 по причине: %2';
											|en = 'Cannot process the document: %1. Reason: %2'"),
									   ДанныеДокумента.Ссылка, 
									   ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									 УровеньЖурналаРегистрации.Предупреждение,
									 Метаданные.Документы.ПроизводствоБезЗаказа,
									 ,
									 ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;	
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
										Параметры.Очередь, ПолноеИмяОбъекта);
		
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли
