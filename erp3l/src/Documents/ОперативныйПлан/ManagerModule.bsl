#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СтандартныеПодсистемыКоманды

// Добавляет команду создания объекта на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - Добавленная Команда.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	МетаданныеДокумента = ПустаяСсылка().Метаданные();
	
	Если ПравоДоступа("Добавление", МетаданныеДокумента) Тогда
		
		КомандаСоздатьНаОсновании						= КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер				= МетаданныеДокумента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление			= ОбщегоНазначения.ПредставлениеОбъекта(МетаданныеДокумента);
		КомандаСоздатьНаОсновании.РежимЗаписи			= "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
// 	КомандыСозданияНаОсновании - ТаблицаЗначений - перечень команд
// 	Параметры - Структура - параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	// ОперПлан
	Команда = Документы.ОперативныйПлан.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Важность = "Важное";
	КонецЕсли;
	
	// ЗНО
	Команда = СозданиеНаОснованииОПК.ДобавитьКоманду_ЗаявкуНаОплату(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Порядок = 30;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда,
			"Предназначение",
			Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств);
	КонецЕсли;
	
	// ОПДС
	Команда = СозданиеНаОснованииОПК.ДобавитьКоманду_ОжидаемуюОплату(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Порядок = 40;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда,
			"Предназначение",
			Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств);
	КонецЕсли;
	
	// Заявка на расход
	Команда = СозданиеНаОснованииОПК.ДобавитьКоманду_ЗаявкуНаРасход(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Порядок = 30;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда,
			"Предназначение",
			Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов);
	КонецЕсли;
	
	// Планируемый доход
	Команда = СозданиеНаОснованииОПК.ДобавитьКоманду_ПланируемыйДоход(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Порядок = 40;
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(
			Команда,
			"Предназначение",
			Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов);
	КонецЕсли;
	
	Команда = Документы.ОтражениеФактическихДанныхБюджетирования.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Важность = "СмТакже";
	КонецЕсли;

	Команда = СозданиеНаОснованииОПК.ДобавитьКоманду_НачисленияОперацийМСФО(КомандыСозданияНаОсновании);
	Если Команда <> неопределено Тогда
		Команда.Важность = "СмТакже";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКлючевымиАналитиками

// Возвращает признак наличия совпадающих по ключевым аналитикам документов, следующих за документом, переданном в параметре.
//
// Параметры:
//  ДокументСсылка	 - ДокументСсылка.ОперативныйПлан - Документ
//
// Возвращаемое значение:
//   Булево		 - Истина - если есть документы
//
Функция ЕстьПоследующиеДокументы(ДокументСсылка) экспорт

	МассивДокументов = ПолучитьМассивПоследующихДокументов(ДокументСсылка);
	
	Возврат МассивДокументов.Количество() > 0;
	
КонецФункции // ЕстьПоследующиеДокументы()

#КонецОбласти 

#Область ОперативноеПланированиеИКонтроль

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ИнициализироватьЗапрос(Запрос, ДокументСсылка);
	
	// Если в справочнике периоды нет требуемых элементов, то прекращаем собирать данные
	ВидОперации = Запрос.Параметры.ВидОперации;
	Если ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов ИЛИ ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование Тогда
		ДополнительныеСвойства.ДляПроведения.Вставить("КонтролироватьПериодыПланирования", Ложь);
	КонецЕсли;
	Если НЕ КонтрольЛимитовУХ.ПодготовитьТаблицуДатИПериодов(Запрос, ДокументСсылка, ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчета(Запрос);
	
	ПараметрыОП = ДополнительныеСвойства.ДляПроведения.ПараметрыОперПланирования;
	
	РазрешеноУстанавливатьПланИЛимиты = ПараметрыОП.ИспользоватьЛимитирование;
	
	Запрос.УстановитьПараметр("РазрешеноУстанавливатьПланИЛимиты", РазрешеноУстанавливатьПланИЛимиты);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	Если Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование Тогда
		ТаблицаОперацииБюджетов(Запрос, ТекстыЗапроса, Регистры);
		// Требуется регистрация оперативного плана
		ТаблицаОперативныйПланПоБюджетам(Запрос, ТекстыЗапроса, Регистры);
		// Требуется регистрация потребностей номенклатуры
		Если Запрос.Параметры.ТребуетсяРегистрацияПотребностей Тогда
			ТаблицаПотребностиВНоменклатуре(Запрос, ТекстыЗапроса, Регистры);
		КонецЕсли;
	ИначеЕсли Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов Тогда
		ТаблицаЛимитыПоБюджетам(Запрос, ТекстыЗапроса, Регистры);
	ИначеЕсли Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование Тогда
		ТаблицаЛимитыПоБюджетамРезервы(Запрос, ТекстыЗапроса, Регистры);
		ТаблицаНазначениеРезервов(Запрос, ТекстыЗапроса, Регистры);
	ИначеЕсли Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование Тогда
		ТаблицаОперацииБюджетовПланРезерв(Запрос, ТекстыЗапроса, Регистры);
		// Требуется регистрация оперативного плана
		ТаблицаОперативныйПланПоБюджетам(Запрос, ТекстыЗапроса, Регистры);
		// Требуется регистрация потребностей номенклатуры
		Если Запрос.Параметры.ТребуетсяРегистрацияПотребностей Тогда
			ТаблицаПотребностиВНоменклатуре(Запрос, ТекстыЗапроса, Регистры);
		КонецЕсли;
		
		ТаблицаПлановССуммамиЛимитирования(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	ПроведениеСерверОПК.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	Если Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование Тогда
		ТаблицаЛимитов = КонтрольЛимитовУХ.ПолучитьТаблицуЛимитов(Запрос, Запрос.Параметры.Дата, Ложь);
		ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЛимитыПоБюджетам", ТаблицаЛимитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоВидуОперативногоПлана(ДокументОбъект, ДанныеЗаполнения, ОчищатьТаблицуДвижений = Истина) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("СправочникСсылка.ВидыОперативныхПланов") Тогда
		Возврат;
	КонецЕсли;
	
	//
	ДокументОбъект.ВидОперативногоПлана = ДанныеЗаполнения;
	
	//
	ПоляНастройки = "Предназначение, СуммаРазрядность,СуммаПослеЗапятой,КолвоРазрядность,КолвоПослеЗапятой, ВидГоризонта, КоличествоПериодов, ПервыйПериод";
	
	СтруктураРеквизитов = Новый Структура(ПоляНастройки);
	СтруктураРеквизитов.Вставить("НастройкаАналитик");
	
	РеквизитыНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ВидОперативногоПлана, СтруктураРеквизитов);
	ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыНастройки, ПоляНастройки);
	
	// Если введена недопустимая для вида бюджета операция
	ДатаНастроекЛимитирования = ПолучитьДатуНастроекЛимитирования(ДокументОбъект);
	Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов 
		 И НЕ ОперативноеПланированиеПовтИспУХ.ОперативныйПланМожетФормироватьЛимиты(ДокументОбъект.Предназначение, ДатаНастроекЛимитирования) Тогда
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование;
	КонецЕсли; 
	
	//
	ОпределитьГоризонт(ДокументОбъект);
	
	//
	ДокументОбъект.НастройкаАналитик.Очистить();
	Если ОчищатьТаблицуДвижений Тогда
		ДокументОбъект.ДвиженияОперации.Очистить();
		ДокументОбъект.РезультатыКонтроля.Очистить();
		ДокументОбъект.СуммаДокумента = ДокументОбъект.ДвиженияОперации.Итог("Сумма");
	КонецЕсли;
	
	Если РеквизитыНастройки.НастройкаАналитик.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//
	ДокументОбъект.НастройкаАналитик.Загрузить(РеквизитыНастройки.НастройкаАналитик.Выгрузить());
	
	//
	УбратьНеИспользуемыеАналитики(ДокументОбъект);
	
	// Установка значения аналитик шапки
	Для каждого Строка Из ДокументОбъект.НастройкаАналитик Цикл
		
		Если Строка.Использование <> Перечисления.ИспользованиеАналитик.КлючеваяАналитика
			ИЛИ НЕ ЗначениеЗаполнено(Строка.ЗначениеАналитики) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизитаДокумента = Документы.ОперативныйПлан.ПолучитьИмяРеквизитаПоВидуАналитики(Строка.Аналитика);
		Если ИмяРеквизитаДокумента = неопределено Тогда
			Продолжить;
		ИначеЕсли ИмяРеквизитаДокумента = "Валюта" Тогда
			ДокументОбъект.ВалютаДокумента = Строка.ЗначениеАналитики;
		ИначеЕсли ИмяРеквизитаДокумента = "ВидБюджета" Тогда
			// запрещено устанавливать вид бюджета
		Иначе
			ДокументОбъект[ИмяРеквизитаДокумента ] = Строка.ЗначениеАналитики;
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьПоВидуОперации()

Процедура ОпределитьГоризонт(ДокОбъект, ПараметрыОП = неопределено) экспорт
	
	//
	ЗаполнитьПараметрыГоризонта(ДокОбъект, ПараметрыОП);
	
	ЭтоЛимитыРезервы = ДокОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов
		ИЛИ ДокОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование;
	
	Если НЕ ЗначениеЗаполнено(ДокОбъект.ПериодОтчета)
		ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокОбъект.ПериодОтчета, "Периодичность") <> ДокОбъект.Периодичность Тогда
		
		ДокОбъект.ДатаНачала=ТекущаяДатаСеанса()+24*60*60;
		
		Если ЭтоЛимитыРезервы Тогда
			ДокОбъект.ПериодОтчета = ОперативноеПланированиеПовтИспУХ.ПериодПоДатеИПериодичности(НачалоГода(ДокОбъект.ДатаНачала), ДокОбъект.Периодичность);
		Иначе
			ДокОбъект.ПериодОтчета = ВстраиваниеОПКПереопределяемый.глОтносительныйПериодПоДате(ДокОбъект.ДатаНачала, ДокОбъект.Периодичность,0);
		КонецЕсли;
		
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ДокОбъект.ПериодОтчета) Тогда
		ДокОбъект.ДатаНачала = ОперативноеПланированиеПовтИспУХ.ПараметрыПериода(ДокОбъект.ПериодОтчета).ДатаНачала;
	КонецЕсли;
	
	Если ЭтоЛимитыРезервы Тогда
		ДокОбъект.ПериодОтчетаОкончание = ОперативноеПланированиеПовтИспУХ.ПериодПоДатеИПериодичности(КонецГода(ДокОбъект.ДатаНачала), ДокОбъект.Периодичность);
		
	ИначеЕсли ДокОбъект.ВидГоризонта = ПредопределенноеЗначение("Перечисление.ВидыГоризонтовПланирования.СвободныйГоризонт") Тогда
		
		Если НЕ ЗначениеЗаполнено(ДокОбъект.ПериодОтчетаОкончание) 
			 ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокОбъект.ПериодОтчетаОкончание, "Периодичность") <> ДокОбъект.Периодичность Тогда
			ДокОбъект.ПериодОтчетаОкончание = ВстраиваниеОПКПереопределяемый.ПолучитьСледующийПериод(ДокОбъект.ПериодОтчета, ДокОбъект.КоличествоПериодов-1);
		КонецЕсли;
		
	ИначеЕсли ДокОбъект.ВидГоризонта = ПредопределенноеЗначение("Перечисление.ВидыГоризонтовПланирования.ФиксированныйГоризонт") Тогда
		
		ФиксированныйГоризонт = РегистрыСведений.ПараметрыОперативногоПланирования.ПолучитьФиксированныйГоризонтПоДате(
			ДокОбъект.Периодичность,
			ДокОбъект.ПервыйПериод,
			ДокОбъект.КоличествоПериодов,
			ДокОбъект.ДатаНачала);
		
		ДокОбъект.ПериодОтчета = ФиксированныйГоризонт.ПериодНачала;
		ДокОбъект.ПериодОтчетаОкончание = ФиксированныйГоризонт.ПериодОкончания;
		
	ИначеЕсли ДокОбъект.ВидГоризонта = ПредопределенноеЗначение("Перечисление.ВидыГоризонтовПланирования.СкользящийГоризонт") Тогда
		ДокОбъект.ПериодОтчетаОкончание = ВстраиваниеОПКПереопределяемый.ПолучитьСледующийПериод(
			ДокОбъект.ПериодОтчета, ДокОбъект.КоличествоПериодов-1);
	Иначе
		ДокОбъект.ПериодОтчетаОкончание = ДокОбъект.ПериодОтчета;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокОбъект.ПериодОтчетаОкончание) Тогда
		ДокОбъект.ДатаОкончания = ОперативноеПланированиеПовтИспУХ.ПараметрыПериода(ДокОбъект.ПериодОтчетаОкончание).ДатаОкончания;
	КонецЕсли;
	
	//
	ЗаполнитьТЧПериоды(ДокОбъект.Периоды, ДокОбъект.ПериодОтчета, ДокОбъект.ПериодОтчетаОкончание);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыГоризонта(ДокументОбъект, ПараметрыОП = неопределено) Экспорт
	
	//
	Если ТиПЗнч(ПараметрыОП) <> Тип("Структура") Тогда
		ДатаНастроекЛимитирования = ПолучитьДатуНастроекЛимитирования(ДокументОбъект);
		ПараметрыОП = ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(ДокументОбъект.Предназначение, ДатаНастроекЛимитирования);
	КонецЕсли;
	
	ВидыОП = Перечисления.ВидыОперацийОперативныйПлан;
	Если ДокументОбъект.ВидОперации = ВидыОП.ВводЛимитов ИЛИ ДокументОбъект.ВидОперации = ВидыОП.Резервирование Тогда
		ДокументОбъект.ВидГоризонта = ПараметрыОП.ВидГоризонтаЛимитирования;
		ДокументОбъект.Периодичность = ПараметрыОП.ПериодичностьЛимитирования;
		ДокументОбъект.КоличествоПериодов = ПараметрыОП.КоличествоПериодовЛимитирования;
		ДокументОбъект.ПервыйПериод = ПараметрыОП.ПервыйПериодЛимитирования;
	Иначе
		ДокументОбъект.Периодичность = ПараметрыОП.ПериодичностьОперативногоПланирования;
		ИменаРеквизитов = "ВидГоризонта, КоличествоПериодов, ПервыйПериод";
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ВидОперативногоПлана, ИменаРеквизитов);
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты, ИменаРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает имя реквизита в шапке по виду аналитики
Функция ПолучитьИмяРеквизитаПоВидуАналитики(АналитикаСсылка) экспорт
	
	Если ТипЗнч(АналитикаСсылка) <> Тип("СправочникСсылка.АналитикиОперативногоПланирования") Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Если АналитикаСсылка.Предопределенный Тогда
		Возврат АналитикаСсылка.ИмяПредопределенныхДанных;
	КонецЕсли; 
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти 

#Область ОтражениеДвижений
	
Процедура ОтразитьОперацииБюджетов(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОперацииБюджетов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОперацииБюджетов.Записывать = Истина;
	Движения.ОперацииБюджетов.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьПотребностиВНоменклатуре(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПотребностиВНоменклатуре;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПотребностиВНоменклатуре.Записывать = Истина;
	Движения.ПотребностиВНоменклатуре.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьНазначениеРезервов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Если Отказ ИЛИ НЕ ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаНазначениеРезервов") Тогда
		Возврат;
	КонецЕсли;
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНазначениеРезервов;
	
	Если Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НазначениеРезервов.Записывать = Истина;
	Движения.НазначениеРезервов.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти 

#Область КонтрольНаличияПериодов
	
// Функция возвращает текст запроса, который формирует временную таблицу запроса ВТ_ДатыОпераций с колонками
//   Дата 		- Дата - Дата операции по документу
//	 ВидБюджета - ПеречислениеСсылка.ПредназначенияЭлементовСтруктурыОтчета - Вид бюджета, по которому будет операция
// Текст запроса уникален для каждого вида документа
//
Функция ТексЗапроса_ДатыОперацийДокумента() экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Период.ДатаНачала КАК Дата,
	|	ВидыБюджетов.Ссылка КАК ВидБюджета
	|ПОМЕСТИТЬ ВТ_ДатыОпераций
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыБюджетов КАК ВидыБюджетов
	|		ПО Данные.Предназначение = ВидыБюджетов.Предназначение
	|ГДЕ
	|	Данные.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 

#Область ИсточникиДляКонтроляДокумента

Функция ИсточникиДокумента(Объект) Экспорт
	
	Источники = Новый Соответствие;
	
	// 1. Источник для контроля бюджетных лимитов и резервов
	КонтрольУХ.ДобавитьИсточник(
		Источники, 
		КонтрольУХБюджетныеЛимиты, 
		Источник_БюджетныеЛимитыРезервы(Объект));
	
	Возврат Источники;
	
КонецФункции

#КонецОбласти 

//
Функция ПолучитьТаблицуПериодов(ПериодНачало, ПериодОкончание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Периодичность",	ПериодНачало.Периодичность);
	Запрос.УстановитьПараметр("ДатаНачала", 	ПериодНачало.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончание",	ПериодОкончание.ДатаНачала);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Периоды.Ссылка КАК Период
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ
	|	Периоды.Периодичность = &Периодичность
	|	И Периоды.Произвольный = ЛОЖЬ
	|	И Периоды.ДатаНачала >= &ДатаНачала
	|	И Периоды.ДатаНачала <= &ДатаОкончание
	|
	|УПОРЯДОЧИТЬ ПО
	|	Периоды.ДатаНачала";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура заполняет таблицу периодов документа ОперПлан
Процедура ЗаполнитьТЧПериоды(ТабличнаяЧасть, ПериодНачало, ПериодОкончание) Экспорт
	
	ТабличнаяЧасть.Загрузить(Документы.ОперативныйПлан.ПолучитьТаблицуПериодов(ПериодНачало, ПериодОкончание));
	
КонецПроцедуры

// Процедура заполняет документ по документу планирования
Процедура ЗаполнитьПоДокументуПланирования(ДокОбъект, ДокументОснование) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		ДокОбъект.ДокументПланирования = неопределено;
		Возврат;
	КонецЕсли;
	
	Реквизиты = "Проведен,"
		+ "ВидОперации, ВидОперативногоПлана, ВалютаДокумента, Предназначение, ДокументПланирования, РежимВводаДокументаПланирования,"
		+ "ВидГоризонта, Периодичность, КоличествоПериодов, ПервыйПериод,"
		+ "ДатаНачала, ДатаОкончания, ПериодОтчета, ПериодОтчетаОкончание,"
		+ "ЦФО, Проект, Организация, Контрагент, ДоговорКонтрагента, ПриходРасход,"
		+ "СтатьяБюджета, Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6,"
		+ "МестоПоставки, Менеджер, Приоритет, Номенклатура, Характеристика, ИсходнаяНоменклатура,"
		+ "ЕдиницаИзмерения, Коэффициент, Цена, ЭтоКатегорияНоменклатуры, ХарактеристикиИспользуются,"
		+ "СуммаРазрядность, СуммаПослеЗапятой, КолвоРазрядность, КолвоПослеЗапятой, СуммаРазрядностьВвод,"
		+ "СуммаПослеЗапятойВвод, КолвоРазрядностьВвод, КолвоПослеЗапятойВвод,"
		+ "НазначениеРезерва_Контрагент, НазначениеРезерва_ДоговорКонтрагента";
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, Реквизиты);
	Если РеквизитыОснования.Проведен = Ложь Тогда
		ДокОбъект.ДокументПланирования = неопределено;
		ВызватьИсключение НСтр("ru = 'Ввод на основании непроведенного документа невозможен.'");
	КонецЕсли;
	
	// Заполняем настройку аналитик по виду опер.плана
	ЗаполнитьЗначенияСвойств(ДокОбъект, РеквизитыОснования,, "Проведен, ДокументПланирования, РежимВводаДокументаПланирования");
	Документы.ОперативныйПлан.ЗаполнитьПоВидуОперативногоПлана(ДокОбъект, ДокОбъект.ВидОперативногоПлана, Ложь);
	Документы.ОперативныйПлан.ОпределитьГоризонт(ДокОбъект);
	
	// Вычисляем режим ввода документа основания и сам документ-основание
	Если РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование
		ИЛИ РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование Тогда
		Если РеквизитыОснования.РежимВводаДокументаПланирования = 0 Тогда
			// Ввод на основании первичного резервирования 
			ДокОбъект.РежимВводаДокументаПланирования = 1;
			ДокОбъект.ДокументПланирования = ДокументОснование;
		ИначеЕсли РеквизитыОснования.РежимВводаДокументаПланирования = 1 Тогда
			// ввод на основании корректировки
			ДокОбъект.РежимВводаДокументаПланирования = 1;
			ДокОбъект.ДокументПланирования = РеквизитыОснования.ДокументПланирования;
		ИначеЕсли РеквизитыОснования.РежимВводаДокументаПланирования = 2 Тогда
			// Ввод на основании переноса. Также как и на основании первичного резервирования
			ДокОбъект.РежимВводаДокументаПланирования = 1;
			ДокОбъект.ДокументПланирования = ДокументОснование;
		КонецЕсли;
	Иначе
		ДокОбъект.РежимВводаДокументаПланирования = 0;
		ДокОбъект.ДокументПланирования = неопределено;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоДокументуПланирования()

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("ВидБюджета")
		И Параметры.Отбор.Свойство("ВидОперации")
		И ЗначениеЗаполнено(Параметры.Отбор.ВидБюджета)
		И ЗначениеЗаполнено(Параметры.Отбор.ВидОперации) Тогда
		
		ВидОПРезерв = Перечисления.ВидыОперацийОперативныйПлан.Резервирование;
		ЭтоРезервирование = Ложь;
		Если ТипЗнч(Параметры.Отбор.ВидОперации) = Тип("ФиксированныйМассив") Тогда
			ЭтоРезервирование = Параметры.Отбор.ВидОперации.Найти(ВидОПРезерв) <> неопределено;
		Иначе
			ЭтоРезервирование = Параметры.Отбор.ВидОперации = ВидОПРезерв;
		КонецЕсли;
		
		Если НЕ ЭтоРезервирование Тогда
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Предназначение", Параметры.Отбор.ВидБюджета);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЛимитыПоБюджетамОбороты.ДокументРезервирования КАК ДокументРезервирования
		|ИЗ
		|	РегистрНакопления.ЛимитыПоБюджетам.Обороты(
		|			,
		|			,
		|			,
		|			Предназначение = &Предназначение
		|				И ДокументРезервирования <> ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)) КАК ЛимитыПоБюджетамОбороты";
		Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументРезервирования");
		Параметры.Отбор.Вставить("Ссылка", Результат);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДатуНастроекЛимитирования(ДокументОбъект) Экспорт
	
	Если ЗначениеЗаполнено(ДокументОбъект.ДатаНачала) Тогда
		Возврат ДокументОбъект.ДатаНачала;
	ИначеЕсли ЗначениеЗаполнено(ДокументОбъект.ПериодОтчета) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ПериодОтчета, "ДатаНачала");
	Иначе
		Возврат ДокументОбъект.Дата;
	КонецЕсли;
	
КонецФункции

// Процедура заполняет табличную часть документа по формулам или по правилу заполнения по источникам данных планирования,
// предназначена для заполнения документа в фоне.
//
// Параметры:
//  Параметры  - Структура - Настройки для заполнения
//  АдресХранилища - Строка - Адрес временного хранилища, в которое будет помещен результат работы задания.
//
Процедура ЗаполнитьДокумент(Знач Параметры, Знач АдресХранилища) Экспорт 
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(Параметры.КлючОбщихНастроек, 
		"НастройкиФоновогоЗадания_"+Параметры.УникальныйИдентификатор);
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("Периоды", Настройки.Периоды);
	Параметры.Вставить("НастройкаАналитик", Настройки.НастройкаАналитик);
	
	Параметры.Вставить("ЗаполняемаяТЧ", Настройки.ЗаполняемаяТЧ);
	ТаблицаПланов = ПолучитьТаблицуОперацийБюджетов(Параметры);
	ПоместитьВоВременноеХранилище(ТаблицаПланов, АдресХранилища);
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ХранилищеОбщихНастроекУдалить(Параметры.КлючОбщихНастроек, 
		"НастройкиФоновогоЗадания_"+Параметры.УникальныйИдентификатор, Пользователи.ТекущийПользователь());
	
КонецПроцедуры

Функция СхемаКТ(Объект) Экспорт
	
	//
	КТ = КроссТаблицыУХ;
	ВидыОпераций = Перечисления.ВидыОперацийОперативныйПлан;
	ПараметрыЦЗ = ВстраиваниеОПКПереопределяемый.ПараметрыЦентрализованныхЗакупок();
	
	
	СхемаКТ = Новый Структура;
	
	//
	СхемаКТ.Вставить("ЭтоВводЛимитов",					Объект.ВидОперации = ВидыОпераций.ВводЛимитов);
	СхемаКТ.Вставить("ЭтоРезервирование",				Объект.ВидОперации = ВидыОпераций.Резервирование);
	СхемаКТ.Вставить("ЭтоПланирование",					Объект.ВидОперации = ВидыОпераций.Планирование);
	СхемаКТ.Вставить("ЭтоПланированиеРезервирование",	Объект.ВидОперации = ВидыОпераций.ПланированиеИРезервирование);
	
	//
	СхемаКТ.Вставить("ЭтоБДДС",	ВстраиваниеОПККлиентСерверПереопределяемый.ЭтоБДДС(Объект.Предназначение));
	СхемаКТ.Вставить("ЭтоБДР",	ВстраиваниеОПККлиентСерверПереопределяемый.ЭтоБДР(Объект.Предназначение));
	СхемаКТ.Вставить("ЭтоБЗ",	ВстраиваниеОПККлиентСерверПереопределяемый.ЭтоБюджетДвиженияРесурсов(Объект.Предназначение));
	
	//
	//СхемаКТ.Вставить("Показатели",					КТ.Новый_Показатели());
	СхемаКТ.Вставить("Ресурсы",						КТ.Новый_Ресурсы());
	СхемаКТ.Вставить("ПараметрыПериодичности",		КТ.Новый_ПараметрыПериодичности());
	
	// 
	СхемаКТ.Вставить("Показатели",					Новый Структура);
	
	ОбновитьСхемуПриИзмененииРежимаВводаДокументаПланирования(СхемаКТ, Объект);
	
	//
	КТ.УстановитьПараметрыПериодичности(
		СхемаКТ,
		Объект.Периодичность,
		"ДФ=ММММгггг",
		Истина,
		НСтр("ru = 'Периоды бюджетирования'"));
		
	//
	ТребуетсяКоличество = СхемаКТ.ЭтоБЗ И СхемаКТ.ЭтоПланирование;
	Если ТребуетсяКоличество Тогда
		ПредставлениеРазрядности = ПредставлениеРазрядности(Объект.КолвоРазрядность);
		ФорматВывода = ПолучитьФорматЧисла(Объект.КолвоРазрядность, Объект.КолвоПослеЗапятой);
		Если НЕ ЗначениеЗаполнено(ФорматВывода) Тогда
			ФорматВывода = "ЧДЦ=3";
		КонецЕсли;
		КТ.ДобавитьРесурс(СхемаКТ, "Количество", НСтр("ru = 'Кол-во'"), 15, 3, , , 8, ФорматВывода, ПредставлениеРазрядности);
	КонецЕсли; 
	
	// Сумма
	ПредставлениеРазрядности = ПредставлениеРазрядности(Объект.СуммаРазрядность);
	ФорматВывода = ПолучитьФорматЧисла(Объект.СуммаРазрядность, Объект.СуммаПослеЗапятой);
	Если НЕ ЗначениеЗаполнено(ФорматВывода) Тогда
		ФорматВывода = "ЧДЦ=";
	КонецЕсли;
	КТ.ДобавитьРесурс(СхемаКТ, "Сумма", "Σ", 18, 2, , , 8, ФорматВывода, ПредставлениеРазрядности);
	
	#Область ПараметрыПреобразования
	
	// Соответствие вида аналитики реквизитам кросс-таблицы
	СхемаКТ.Вставить("РеквизитПоАналитике",	СоответствиеВидаАналитикиРеквизитуФормы(Объект.Предназначение));
	
	// Настройка аналитик
	НастройкаАналитик = Объект.НастройкаАналитик.Выгрузить();
	
	// При необходимости добавить Характеристику на тот же уровень, что и номенклатура
	Если ПараметрыЦЗ.ИспользоватьХарактеристикиНоменклатуры Тогда
		СтрокаНоменклатура = НастройкаАналитик.Найти(Справочники.АналитикиОперативногоПланирования.Номенклатура);
		СтрокаХарактеристика = НастройкаАналитик.Найти(Справочники.АналитикиОперативногоПланирования.Характеристика);
		Если СтрокаНоменклатура <> Неопределено И СтрокаХарактеристика = Неопределено Тогда
			ИндексНоменклатуры = НастройкаАналитик.Индекс(СтрокаНоменклатура);
			Строка = НастройкаАналитик.Вставить(ИндексНоменклатуры+1);
			Строка.Аналитика = Справочники.АналитикиОперативногоПланирования.Характеристика;
			Строка.ГруппаСтрок = СтрокаНоменклатура.ГруппаСтрок;
			Строка.Использование = СтрокаНоменклатура.Использование;
			Строка.НомерСтроки = НастройкаАналитик.Количество();
			Строка.ИсходныйНомерСтроки = НастройкаАналитик.Количество();
			Строка.ОбязательноеЗаполнение = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//
	Использование = Новый Соответствие;
	Использование.Вставить(Перечисления.ИспользованиеАналитик.КлючеваяАналитика,	"Шапка");
	Использование.Вставить(Перечисления.ИспользованиеАналитик.Строка, 				"Строка");
	Использование.Вставить(Перечисления.ИспользованиеАналитик.Колонка,				"Колонка");
	Использование.Вставить(Перечисления.ИспользованиеАналитик.Уточняется,			"Расшифровка");
	Использование.Вставить(Перечисления.ИспользованиеАналитик.НеИспользуется,		"НеИспользуется");
	
	//
	СтруктураАналитик = Новый Структура;
	РеквизитыАналитики = "Аналитика, Использование, ГруппаСтрок, ЗначениеАналитики, ОбязательноеЗаполнение";
	
	//
	Аналитики = Новый Структура;
	Аналитики.Вставить("Шапка",				"");
	Аналитики.Вставить("Колонка",			"");
	Аналитики.Вставить("Строка",			"");
	Аналитики.Вставить("Расшифровка",		"");
	Аналитики.Вставить("НеИспользуется",	"");
	Аналитики.Вставить("мШапка",			Новый Массив);
	Аналитики.Вставить("мКолонка",			Новый Массив);
	Аналитики.Вставить("мСтрока",			Новый Массив);
	Аналитики.Вставить("мРасшифровка",		Новый Массив);
	Аналитики.Вставить("мНеИспользуется",	Новый Массив);
	
	Для каждого СтрокаНастройки Из НастройкаАналитик Цикл
		
		//
		Ключ = Использование.Получить(СтрокаНастройки.Использование);
		Если Ключ = неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		//
		ОписаниеРеквизита = СхемаКТ.РеквизитПоАналитике[СтрокаНастройки.Аналитика];
		Если ОписаниеРеквизита = неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//
		Аналитики[Ключ] = Аналитики[Ключ] + ?(Аналитики[Ключ]="", "", ",") + ОписаниеРеквизита.Имя;
		Аналитики["м"+Ключ].Добавить(ОписаниеРеквизита.Имя);
		
		//
		СтруктураАналитики = Новый Структура(РеквизитыАналитики);
		ЗаполнитьЗначенияСвойств(СтруктураАналитики, 		СтрокаНастройки,	РеквизитыАналитики);
		СтруктураАналитик.Вставить(ОписаниеРеквизита.Имя,	СтруктураАналитики);
		
	КонецЦикла; 
	
	//
	СхемаКТ.Вставить("СтруктураАналитик",				СтруктураАналитик);
	СхемаКТ.Вставить("Аналитики",             			Аналитики);
	
	// Ограничение типов статьи бюджета для разных видов бюджетов
	ОписаниеСтатьиБюджета = СхемаКТ.РеквизитПоАналитике[Справочники.АналитикиОперативногоПланирования.СтатьяБюджета];
	Если ОписаниеСтатьиБюджета <> неопределено Тогда
		
		ВидыБюджетов = Перечисления.ПредназначенияЭлементовСтруктурыОтчета;
		Соответствие = Новый Соответствие;
		Соответствие.Вставить(ВидыБюджетов.БюджетДвиженияДенежныхСредств,
				Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));
		Соответствие.Вставить(ВидыБюджетов.БюджетДоходовИРасходов,
				Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходовИРасходов"));
		Соответствие.Вставить(ВидыБюджетов.БюджетДвиженияРесурсов,
				Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияРесурсов"));
		Соответствие.Вставить(ВидыБюджетов.ПустаяСсылка(), Новый ОписаниеТипов("Неопределено"));
			
		ОписаниеСтатьиБюджета.Вставить("ОграничениеТипа", 			Соответствие);
		ОписаниеСтатьиБюджета.Вставить("ОграничениеТипаИсточник",	"Предназначение");
		
	КонецЕсли;
	
	// Функциональная опция используется ли характеристики для номенклатуры?
	ОписаниеНоменклатуры = СхемаКТ.РеквизитПоАналитике[Справочники.АналитикиОперативногоПланирования.Номенклатура];
	Если ОписаниеНоменклатуры <> неопределено Тогда
		ИмяФункОпции = "ИспользоватьХарактеристикиНоменклатуры";
		ОписаниеНоменклатуры.Вставить(
			ИмяФункОпции,
			ВстраиваниеОПКПереопределяемый.ФункОпцияИспользоватьХарактеристикиНоменклатуры());
	КонецЕсли;
	
	#КонецОбласти 
	
	СхемаКТ.Вставить("ДоступенДокументПланирования", СхемаКТ.ЭтоРезервирование ИЛИ СхемаКТ.ЭтоПланированиеРезервирование);
	
	//
	Если СхемаКТ.СтруктураАналитик.Свойство("СтатьяБюджета") Тогда
		СхемаКТ.СтруктураАналитик.СтатьяБюджета.Вставить("ТолькоЛимитируемые", СхемаКТ.ЭтоВводЛимитов ИЛИ СхемаКТ.ЭтоРезервирование);
	КонецЕсли;
	
	Возврат СхемаКТ;
	
КонецФункции

Процедура ОбновитьСхемуПриИзмененииРежимаВводаДокументаПланирования(СхемаКТ, Объект) Экспорт
	
	СхемаКТ.Вставить("ЭтоПереносМеждуДокументамиРезервирования",
					(СхемаКТ.ЭтоРезервирование ИЛИ СхемаКТ.ЭтоПланированиеРезервирование) И Объект.РежимВводаДокументаПланирования = 2);
	
	Если СхемаКТ.ЭтоПереносМеждуДокументамиРезервирования Тогда
		// Это перенос из одного резерва в другой
		СхемаКТ.Показатели.Вставить("Исходное",		КроссТаблицыУХ.Новый_Показатель("Исходное",  "Исх_", НСтр("ru = 'Исходное'"),  Истина,	Истина));
		СхемаКТ.Показатели.Вставить("Изменение",	КроссТаблицыУХ.Новый_Показатель("Изменение", "Изм_", НСтр("ru = 'Перенести'"), Ложь, 	Истина, ДопустимыйЗнак.Неотрицательный));
		СхемаКТ.Показатели.Вставить("Результат",	КроссТаблицыУХ.Новый_Показатель("Результат", "Рез_", НСтр("ru = 'Остаток'"),   Ложь, 	Ложь, ДопустимыйЗнак.Неотрицательный));
	Иначе
		СхемаКТ.Показатели.Вставить("Исходное",		КроссТаблицыУХ.Новый_Показатель("Исходное",  "Исх_", НСтр("ru = 'Исходное'"), Истина,	Ложь));
		СхемаКТ.Показатели.Вставить("Изменение",	КроссТаблицыУХ.Новый_Показатель("Изменение", "Изм_", НСтр("ru = '∆'"),		  Ложь, 	Ложь));
		СхемаКТ.Показатели.Вставить("Результат",	КроссТаблицыУХ.Новый_Показатель("Результат", "Рез_", НСтр("ru = 'Новое'"),    Ложь, 	Истина, ДопустимыйЗнак.Неотрицательный));
	КонецЕсли;

КонецПроцедуры

#Область ОбработчикиОбновления

Процедура ДобавитьВидБюджетаВНастройкуАналитикОперПлана() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперативныйПлан.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ВидБюджета) КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ИспользованиеАналитик.КлючеваяАналитика) КАК Использование,
	|	ОперативныйПлан.Предназначение КАК ЗначениеАналитики,
	|	"""" КАК ГруппаСтрок,
	|	ЛОЖЬ КАК ОбязательноеЗаполнение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоКорпоративные.ПустаяСсылка) КАК ТипДанных
	|ИЗ
	|	Документ.ОперативныйПлан КАК ОперативныйПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперативныйПлан.НастройкаАналитик КАК ОперативныйПланНастройкаАналитик
	|		ПО ОперативныйПлан.Ссылка = ОперативныйПланНастройкаАналитик.Ссылка
	|			И (ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ВидБюджета) = ОперативныйПланНастройкаАналитик.Аналитика)
	|ГДЕ
	|	ОперативныйПланНастройкаАналитик.Аналитика ЕСТЬ NULL";
	
	Выборка  = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Строка = Объект.НастройкаАналитик.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Выборка);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьВидБюджетаИУбратьНеИспользуемыеАналитики() экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыОперативныхПлановНастройкаАналитик.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыОперативныхПланов.НастройкаАналитик КАК ВидыОперативныхПлановНастройкаАналитик
	|ГДЕ
	|	ВидыОперативныхПлановНастройкаАналитик.Использование = ЗНАЧЕНИЕ(Перечисление.ИспользованиеАналитик.НеИспользуется)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОперативныхПланов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыОперативныхПланов КАК ВидыОперативныхПланов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыОперативныхПланов.НастройкаАналитик КАК ВидыОперативныхПлановНастройкаАналитик
	|		ПО ВидыОперативныхПланов.Ссылка = ВидыОперативныхПлановНастройкаАналитик.Ссылка
	|			И (ВидыОперативныхПлановНастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ВидБюджета))
	|ГДЕ
	|	ВидыОперативныхПлановНастройкаАналитик.Аналитика ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОперативныйПлан.Ссылка
	|ИЗ
	|	Документ.ОперативныйПлан КАК ОперативныйПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперативныйПлан.НастройкаАналитик КАК ОперативныйПланНастройкаАналитик
	|		ПО ОперативныйПланНастройкаАналитик.Ссылка = ОперативныйПлан.Ссылка
	|			И (ОперативныйПланНастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ВидБюджета))
	|ГДЕ
	|	ОперативныйПланНастройкаАналитик.Аналитика ЕСТЬ NULL";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	// Убираем неиспользуемые аналитики
	Если НЕ Пакет[0].Пустой() Тогда
		
		Выборка = Пакет[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Спр = Выборка.Ссылка.ПолучитьОбъект();
			
			Поз = 0;
			Пока Поз < Спр.НастройкаАналитик.Количество() Цикл
				
				Строка = Спр.НастройкаАналитик[Поз];
				
				Если Строка.Использование = Перечисления.ИспользованиеАналитик.НеИспользуется Тогда
					Спр.НастройкаАналитик.Удалить(Строка);
				Иначе
					Поз = Поз + 1;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Спр);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Добавляем аналитику планирования ВидБюджета
	Если НЕ Пакет[1].Пустой() Тогда
		
		Выборка = Пакет[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Спр = Выборка.Ссылка.ПолучитьОбъект();
			
			Строка = Спр.НастройкаАналитик.Добавить();
			Строка.Аналитика = Справочники.АналитикиОперативногоПланирования.ВидБюджета;
			Строка.Использование = Перечисления.ИспользованиеАналитик.КлючеваяАналитика;
			Строка.ЗначениеАналитики = Спр.Предназначение;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Спр);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредназначениеВТабличнойЧасти() экспорт // Было ОбновитьДанныеДокументаОперПлан() // Было ОбновитьДанныеДокумента()
	
	// ВидБюджета в табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперативныйПланДвиженияОперации.Ссылка КАК Ссылка,
	|	ОперативныйПланДвиженияОперации.Ссылка.Предназначение КАК Предназначение
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ОперативныйПланДвиженияОперации
	|ГДЕ
	|	ОперативныйПланДвиженияОперации.Предназначение <> ОперативныйПланДвиженияОперации.Ссылка.Предназначение
	|
	|СГРУППИРОВАТЬ ПО
	|	ОперативныйПланДвиженияОперации.Ссылка,
	|	ОперативныйПланДвиженияОперации.Ссылка.Предназначение";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого Строка Из Док.ДвиженияОперации Цикл
			Если НЕ ЗначениеЗаполнено(Строка.Предназначение) Тогда
				Строка.Предназначение = Выборка.Предназначение;
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Док);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область ПланыДокумента

// Процедура возвращает таблицу планов документа
//
// Параметры:
//  Источник  - ДокументСсылка, ДокументОбъект, Форма.Объект - Документ планирования
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица планов документа
//
Функция ПланыДокумента(Источник) Экспорт
	
	Запрос = Новый Запрос;
	
	Запросы = Новый Массив;
	
	//
	Если ТипЗнч(Источник) = ТипЗнч(ПустаяСсылка()) Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник, "Ссылка, Дата, Предназначение, ВидОперации, РежимВводаДокументаПланирования, ДокументПланирования");
		Для Каждого КлючЗначение Из Реквизиты Цикл
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		
		Запросы.Добавить("ВЫБРАТЬ * ПОМЕСТИТЬ ВТ_ТабличнаяЧасть ИЗ Документ.ОперативныйПлан.ДвиженияОперации ГДЕ Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОперативныйПлан")
		ИЛИ (ТипЗнч(Источник) = Тип("ДанныеФормыСтруктура") И Источник.Свойство("Ссылка") И ТипЗнч(Источник.Ссылка) = ТипЗнч(ПустаяСсылка())) Тогда
		Запросы.Добавить("ВЫБРАТЬ * ПОМЕСТИТЬ ВТ_ТабличнаяЧасть ИЗ &Таблица КАК Таблица");
		Запрос.УстановитьПараметр("Таблица", Источник.ДвиженияОперации.Выгрузить());
		ДанныеОбъекта = Источник;
		
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("Дата", Источник.Дата);
		Запрос.УстановитьПараметр("Предназначение", Источник.Предназначение);
		Запрос.УстановитьПараметр("ВидОперации", Источник.ВидОперации);
		Запрос.УстановитьПараметр("РежимВводаДокументаПланирования", Источник.РежимВводаДокументаПланирования);
		Запрос.УстановитьПараметр("ДокументПланирования", Источник.ДокументПланирования);
	Иначе
		Возврат КонтрольЛимитовУХ.Новый_ТаблицаПланыДокумента();
	КонецЕсли;
	
	// Преобразование планов
	Запросы.Добавить(ТекстЗапроса_ПланыДокумента(""));
	
	Запрос.Текст = СтрСоединить(Запросы, ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета());
	
	ТаблицаПланов = Запрос.Выполнить().Выгрузить(); 
	
	Возврат ТаблицаПланов;
	
КонецФункции

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСКлючевымиАналитиками

// Функция возвращает массив совпадающих по ключевым аналитикам документов, следующих за документом, переданном в параметре.
//
// Параметры:
//  Документ	 - ДокументСсылка.ОперативныйПлан - Документ
//
// Возвращаемое значение:
//   Массив		 - Массив совпадающих по ключевым аналитикам документов, следующих за документом, переданном в параметре.
//
Функция ПолучитьМассивПоследующихДокументов(ДокументСсылка)

	Если ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ОперативныйПлан") Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализацииДляПоискаПоследующих(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	Запрос.Текст = ТекстЗапроса_ВТ_НастройкаАналитикДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_СписокКлючевыхРеквизитовДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_ПризнакиКлючевыхАналитикДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_КлючевыеРеквизитыДокументаСПериодами();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_КлючевыеРеквизитыДокументов();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ПоследующиеДокументыПоКлючевымРеквизитам();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли; 
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Документ");
	
КонецФункции // ПолучитьПоследующихДокументов()

Функция ПолучитьТаблицуКлючейАналитик()
	
	ТаблицаКлючейАналитик = Новый ТаблицаЗначений;
	ТаблицаКлючейАналитик.Колонки.Добавить("Реквизит", ОбщегоНазначения.ОписаниеТипаСтрока(30));
	
	ОписаниеКлючей = "КлючПредназначение, КлючРаздел, КлючВидОперативногоПлана, КлючОрганизация, КлючЦФО, КлючПроект, КлючВалюта, КлючПриходРасход,
					|КлючСтатьяБюджета, КлючАналитика1, КлючАналитика2, КлючАналитика3, КлючАналитика4, КлючАналитика5, КлючАналитика6, КлючДокументПланирования,
					|КлючКонтрагент, КлючДоговорКонтрагента, КлючНоменклатура, КлючМестоПоставки, КлючМенеджер, КлючПриоритет";
	СтруктураКлючей = Новый Структура(ОписаниеКлючей);
	Для каждого КлючЗначениеКлюч Из СтруктураКлючей Цикл
		ТаблицаКлючейАналитик.Колонки.Добавить(КлючЗначениеКлюч.Ключ, Новый ОписаниеТипов("Булево"));
	КонецЦикла; 
	
	СтруктураАналитикКлючей = ПолучитьСтруктуруАналитикИКлючей();
	Для каждого КлючЗначение Из СтруктураАналитикКлючей Цикл
	
		Строка = ТаблицаКлючейАналитик.Добавить();
		Строка.Реквизит = КлючЗначение.Ключ;
		Строка[КлючЗначение.Значение] = Истина;
	
	КонецЦикла; 
	
	Возврат ТаблицаКлючейАналитик;
КонецФункции

Функция ПолучитьСтруктуруАналитикИКлючей()
	
	Рез = Новый Соответствие;
	Рез.Вставить("Предназначение", 			"КлючПредназначение");
	Рез.Вставить("Раздел", 					"КлючРаздел");
	Рез.Вставить("ВидОперативногоПлана", 	"КлючВидОперативногоПлана");
	Рез.Вставить("Организация",				"КлючОрганизация");
	Рез.Вставить("ЦФО",						"КлючЦФО");
	Рез.Вставить("Проект",					"КлючПроект");
	Рез.Вставить("Валюта",					"КлючВалюта");
	Рез.Вставить("ПриходРасход",			"КлючПриходРасход");
	Рез.Вставить("СтатьяБюджета",			"КлючСтатьяБюджета");
	Рез.Вставить("Аналитика1",				"КлючАналитика1");
	Рез.Вставить("Аналитика2",				"КлючАналитика2");
	Рез.Вставить("Аналитика3",				"КлючАналитика3");
	Рез.Вставить("Аналитика4",				"КлючАналитика4");
	Рез.Вставить("Аналитика5",				"КлючАналитика5");
	Рез.Вставить("Аналитика6",				"КлючАналитика6");
	Рез.Вставить("ДокументПланирования",	"КлючДокументПланирования");
	Рез.Вставить("Контрагент",				"КлючКонтрагент");
	Рез.Вставить("ДоговорКонтрагента",		"КлючДоговорКонтрагента");
	Рез.Вставить("Номенклатура",			"КлючНоменклатура");
	Рез.Вставить("МестоПоставки",			"КлючМестоПоставки");
	Рез.Вставить("Менеджер",				"КлючМенеджер");
	Рез.Вставить("Приоритет",				"КлючПриоритет");
	
	Возврат Рез;
	
КонецФункции // ПолучитьСтруктуруАналитикИКлючей()

Функция ПолучитьТаблицуСоответствияАналитикРеквизитам()
	
	//
	ТаблицаАналитикИРеквизитов = Новый ТаблицаЗначений;
	ТаблицаАналитикИРеквизитов.Колонки.Добавить("Реквизит",	ОбщегоНазначения.ОписаниеТипаСтрока(30));
	ТаблицаАналитикИРеквизитов.Колонки.Добавить("Аналитика", Новый ОписаниеТипов("СправочникСсылка.АналитикиОперативногоПланирования"));
	
	//
	АОП = Справочники.АналитикиОперативногоПланирования;
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Организация,		"Организация");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.ЦФО,				"ЦФО");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Проект,				"Проект");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Валюта,				"Валюта");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.ПриходРасход,		"ПриходРасход");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.СтатьяБюджета,		"СтатьяБюджета");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика1,			"Аналитика1");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика2,			"Аналитика2");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика3,			"Аналитика3");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика4,			"Аналитика4");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика5,			"Аналитика5");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Аналитика6,			"Аналитика6");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.ДокументПланирования,"ДокументПланирования");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Контрагент,			"Контрагент");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.ДоговорКонтрагента,	"ДоговорКонтрагента");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Номенклатура,		"Номенклатура");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.МестоПоставки,		"МестоПоставки");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Менеджер,			"Менеджер");
	ДобавитАналитикуИРеквизит(ТаблицаАналитикИРеквизитов, 	АОП.Приоритет,			"Приоритет");
	
	Возврат ТаблицаАналитикИРеквизитов;
	
КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапроса_ПоследующиеДокументыПоКлючевымРеквизитам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КлючевыеРеквизитыДокументов.Документ КАК Документ
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючевыеРеквизитыДокументов КАК КлючевыеРеквизитыДокументов
	|		ПО КлючевыеРеквизитыДокумента.Предназначение = КлючевыеРеквизитыДокументов.Предназначение
	|			И КлючевыеРеквизитыДокумента.Период = КлючевыеРеквизитыДокументов.Период
	|			И КлючевыеРеквизитыДокумента.ВидОперативногоПлана = КлючевыеРеквизитыДокументов.ВидОперативногоПлана
	|			И КлючевыеРеквизитыДокумента.Организация = КлючевыеРеквизитыДокументов.Организация
	|			И КлючевыеРеквизитыДокумента.ЦФО = КлючевыеРеквизитыДокументов.ЦФО
	|			И КлючевыеРеквизитыДокумента.Проект = КлючевыеРеквизитыДокументов.Проект
	|			И КлючевыеРеквизитыДокумента.ПриходРасход = КлючевыеРеквизитыДокументов.ПриходРасход
	|			И КлючевыеРеквизитыДокумента.СтатьяБюджета = КлючевыеРеквизитыДокументов.СтатьяБюджета
	|			И КлючевыеРеквизитыДокумента.Аналитика1 = КлючевыеРеквизитыДокументов.Аналитика1
	|			И КлючевыеРеквизитыДокумента.Аналитика2 = КлючевыеРеквизитыДокументов.Аналитика2
	|			И КлючевыеРеквизитыДокумента.Аналитика3 = КлючевыеРеквизитыДокументов.Аналитика3
	|			И КлючевыеРеквизитыДокумента.Аналитика4 = КлючевыеРеквизитыДокументов.Аналитика4
	|			И КлючевыеРеквизитыДокумента.Аналитика5 = КлючевыеРеквизитыДокументов.Аналитика5
	|			И КлючевыеРеквизитыДокумента.Аналитика6 = КлючевыеРеквизитыДокументов.Аналитика6
	|			И КлючевыеРеквизитыДокумента.Валюта = КлючевыеРеквизитыДокументов.Валюта
	|			И КлючевыеРеквизитыДокумента.Номенклатура = КлючевыеРеквизитыДокументов.Номенклатура
	|			И КлючевыеРеквизитыДокумента.МестоПоставки = КлючевыеРеквизитыДокументов.МестоПоставки
	|			И КлючевыеРеквизитыДокумента.Контрагент = КлючевыеРеквизитыДокументов.Контрагент
	|			И КлючевыеРеквизитыДокумента.ДоговорКонтрагента = КлючевыеРеквизитыДокументов.ДоговорКонтрагента
	|			И КлючевыеРеквизитыДокумента.Менеджер = КлючевыеРеквизитыДокументов.Менеджер
	|			И КлючевыеРеквизитыДокумента.Приоритет = КлючевыеРеквизитыДокументов.Приоритет
	|			И КлючевыеРеквизитыДокумента.ДокументПланирования = КлючевыеРеквизитыДокументов.ДокументПланирования
	|ГДЕ
	|	КлючевыеРеквизитыДокументов.Документ.МоментВремени > КлючевыеРеквизитыДокумента.Документ.МоментВремени
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючевыеРеквизитыДокументов.МоментВремени";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти 

#КонецОбласти 

#Область ОперативноеПланированиеИКонтроль

Процедура УбратьНеИспользуемыеАналитики(ДокументОбъект)
	
	// переводим в состояние неИспользуется
	МассивНеЛимитируемыхАналитик = Новый Массив;
	
	// Для операций связанных с лимитированием делаем Аналитики ПриходРасход, Контрагент, Договор неиспользуемыми.
	ЭтоЛимиты = ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов 
		ИЛИ ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование;
	Если ЭтоЛимиты Тогда
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.ПриходРасход);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Контрагент);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.ДоговорКонтрагента);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Организация);
		
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Номенклатура);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Характеристика);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.МестоПоставки);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Менеджер);
		МассивНеЛимитируемыхАналитик.Добавить(Справочники.АналитикиОперативногоПланирования.Приоритет);
		
	КонецЕсли;
	
	//
	Для каждого Строка Из ДокументОбъект.НастройкаАналитик Цикл
		
		Если МассивНеЛимитируемыхАналитик.Найти(Строка.Аналитика)=неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//
		Строка.Использование = Перечисления.ИспользованиеАналитик.НеИспользуется;
		
	КонецЦикла;
	
	// Если строк не осталось, а расшифровка есть, то перемещаем расшифровку в строки. И настройку групп делаем.
	СтруктураПоиска = Новый Структура("Использование", Перечисления.ИспользованиеАналитик.Строка);
	МассивАналитикСтроки = ДокументОбъект.НастройкаАналитик.НайтиСтроки(СтруктураПоиска);
	Если МассивАналитикСтроки.Количество() = 0 Тогда
		
		СтруктураПоиска.Использование = Перечисления.ИспользованиеАналитик.Уточняется;
		МассивАналитикРасшифровки = ДокументОбъект.НастройкаАналитик.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасшифровки Из МассивАналитикРасшифровки Цикл
			СтрокаРасшифровки.Использование = Перечисления.ИспользованиеАналитик.Строка;
			Если СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.СтатьяБюджета Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г1";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика1 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика2 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика3 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика4 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика5 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			ИначеЕсли СтрокаРасшифровки.Аналитика = Справочники.АналитикиОперативногоПланирования.Аналитика6 Тогда
				СтрокаРасшифровки.ГруппаСтрок = "Г2";
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитАналитикуИРеквизит(ТаблицаСоответствия, Аналитика, ИмяРеквизита)
	
	Строка = ТаблицаСоответствия.Добавить();
	Строка.Реквизит = ИмяРеквизита;
	Строка.Аналитика = Аналитика;
	
КонецПроцедуры	

#Область Запросы_ОперативныйПлан

#Область ТекстыЗапросов

Функция ТекстЗапроса_ВТ_НастройкаАналитикДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОперативныйПланНастройкаАналитик.Аналитика КАК Аналитика,
	|	ОперативныйПланНастройкаАналитик.Использование КАК Использование
	|ПОМЕСТИТЬ ВТ_НастройкаАналитикДокумента
	|ИЗ
	|	Документ.ОперативныйПлан.НастройкаАналитик КАК ОперативныйПланНастройкаАналитик
	|ГДЕ
	|	ОперативныйПланНастройкаАналитик.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_ВТ_КлючевыеРеквизитыДокументов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОперативныйПлан.Ссылка КАК Документ,
	|	ОперативныйПлан.Дата КАК Дата,
	|	ОперативныйПлан.МоментВремени КАК МоментВремени,
	|	ОперативныйПлан.Предназначение КАК Предназначение,
	|	ОперативныйПлан.ВидОперативногоПлана КАК ВидОперативногоПлана,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючОрганизация
	|			ТОГДА ОперативныйПлан.Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючЦФО
	|			ТОГДА ОперативныйПлан.ЦФО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЦФО,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПроект
	|			ТОГДА ОперативныйПлан.Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета
	|			ТОГДА ОперативныйПлан.СтатьяБюджета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяБюджета,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика1
	|			ТОГДА ОперативныйПлан.Аналитика1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика1,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика2
	|			ТОГДА ОперативныйПлан.Аналитика2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика2,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика3
	|			ТОГДА ОперативныйПлан.Аналитика3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика3,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика4
	|			ТОГДА ОперативныйПлан.Аналитика4
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика4,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика5
	|			ТОГДА ОперативныйПлан.Аналитика5
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика5,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика6
	|			ТОГДА ОперативныйПлан.Аналитика6
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика6,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючВалюта
	|			ТОГДА ОперативныйПлан.ВалютаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход
	|			ТОГДА ОперативныйПлан.ПриходРасход
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПриходРасход,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура
	|			ТОГДА ОперативныйПлан.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки
	|			ТОГДА ОперативныйПлан.МестоПоставки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК МестоПоставки,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМенеджер
	|			ТОГДА ОперативныйПлан.Менеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриоритет
	|			ТОГДА ОперативныйПлан.Приоритет
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент = ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОперативныйПлан.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОперативныйПлан.Контрагент = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ОперативныйПлан.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента
	|			ТОГДА ОперативныйПлан.ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДокументПланирования = ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОперативныйПлан.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.ВводЛимитов)
	|				И ОперативныйПлан.Предназначение = ЗНАЧЕНИЕ(Перечисление.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов)
	|			ТОГДА ОперативныйПлан.Ссылка
	|		КОГДА ОперативныйПлан.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.Резервирование)
	|			ТОГДА ОперативныйПлан.Ссылка
	|		ИНАЧЕ ОперативныйПлан.ДокументПланирования
	|	КОНЕЦ КАК ДокументПланирования,
	|	ОперативныйПланПериоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_КлючевыеРеквизитыДокументов
	|ИЗ
	|	ВТ_ПризнакиКлючевыхАналитикДокумента КАК ПризнакиКлючевыхАналитикДокумента,
	|	Документ.ОперативныйПлан КАК ОперативныйПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперативныйПлан.Периоды КАК ОперативныйПланПериоды
	|		ПО ОперативныйПлан.Ссылка = ОперативныйПланПериоды.Ссылка
	|ГДЕ
	|	ОперативныйПлан.Проведен = ИСТИНА
	|		И ОперативныйПлан.Предназначение = &Предназначение
	|		И ОперативныйПлан.ВидОперации В (&ТребуемыеОперацииДокумента)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_ВТ_ПериодыДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОперативныйПланПериоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыДокумента
	|ИЗ
	|	Документ.ОперативныйПлан.Периоды КАК ОперативныйПланПериоды
	|ГДЕ
	|	ОперативныйПланПериоды.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти 

#КонецОбласти 

#КонецОбласти

#Область ИсточникиДляКонтроляДокумента

Функция ПолучитьТаблицуЛимитов(Объект)
	
	//
	СписокКолонок = "Период, Предназначение, СтатьяБюджета, Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6, ЦФО, Проект, Валюта";
	ТаблицаПланов = Объект.ДвиженияОперации.Выгрузить(,СписокКолонок+", СуммаИзменение");
	
	//
	ТаблицаПланов.Колонки.СуммаИзменение.Имя = "Лимит";
	ТаблицаПланов.Колонки.Добавить("Зарезервировано", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Добавить("Заявлено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Добавить("Исполнено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	
	//
	ТаблицаПланов.Колонки.Период.Имя = "ПериодОтчета";
	
	// Документы планирования и резервирования
	ТаблицаПланов.Колонки.Добавить("ДокументПланирования",
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументПланирования.Тип);
	ТаблицаПланов.Колонки.Добавить("ДокументРезервирования", 
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументРезервирования.Тип);
	ТаблицаПланов.ЗаполнитьЗначения(Документы.ОперативныйПлан.ПустаяСсылка(), "ДокументРезервирования");
	
	// Период
	ТаблицаПланов.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПланов.ЗаполнитьЗначения(Объект.Дата, "Период");
	
	Возврат ТаблицаПланов;
	
КонецФункции

Функция ПолучитьТаблицуЛимитаДляРезерва(Объект)
	
	//
	СписокКолонок = "Период, Предназначение, СтатьяБюджета, Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6, ЦФО, Проект, Валюта";
	ТаблицаПланов = Объект.ДвиженияОперации.Выгрузить(,СписокКолонок+", Сумма");
	
	//
	ТаблицаПланов.Колонки.Добавить("Лимит", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Сумма.Имя = "Зарезервировано";
	ТаблицаПланов.Колонки.Добавить("Заявлено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Добавить("Исполнено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	
	//
	ТаблицаПланов.Колонки.Период.Имя = "ПериодОтчета";
	
	// Документы планирования и резервирования
	ТаблицаПланов.Колонки.Добавить("ДокументПланирования", 
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументПланирования.Тип);
	ТаблицаПланов.Колонки.Добавить("ДокументРезервирования", 
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументРезервирования.Тип);
	Если Объект.РежимВводаДокументаПланирования = 0 Тогда
		ТаблицаПланов.ЗаполнитьЗначения(Объект.Ссылка, "ДокументРезервирования");
	ИначеЕсли Объект.РежимВводаДокументаПланирования = 1 Тогда
		ТаблицаПланов.ЗаполнитьЗначения(Объект.ДокументПланирования, "ДокументРезервирования");
	ИначеЕсли Объект.РежимВводаДокументаПланирования = 2 Тогда
		ТаблицаПланов.ЗаполнитьЗначения(Объект.Ссылка, "ДокументРезервирования");
	КонецЕсли;
	
	// Период
	ТаблицаПланов.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПланов.ЗаполнитьЗначения(Объект.Дата, "Период");
	
	Возврат ТаблицаПланов;
	
КонецФункции


Функция ПолучитьТаблицуЛимитаДляПланаРезерва(Объект)
	
	//
	ТаблицаПланов = ПланыДокумента(Объект);
	
	//
	ТаблицаПланов.Колонки.Добавить("Лимит", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Сумма.Имя = "Зарезервировано";
	ТаблицаПланов.Колонки.Добавить("Заявлено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаПланов.Колонки.Добавить("Исполнено", ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	
	// Документы планирования и резервирования
	ТаблицаПланов.Колонки.ДокументПланирования.Имя = "ДокументРезервирования";
	
	ТаблицаПланов.Колонки.Добавить("ДокументПланирования", 
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументПланирования.Тип);
	
	Возврат ТаблицаПланов;
	
КонецФункции

Функция ПолучитьТаблицуЛимитаДляПланирования(Объект)
	
	//
	СписокКолонок = "Период, Предназначение, СтатьяБюджета, Аналитика1, Аналитика2, Аналитика3, Аналитика4, Аналитика5, Аналитика6, ЦФО, Проект, Валюта";
	ТаблицаПланов = Объект.ДвиженияОперации.Выгрузить(,СписокКолонок+", Сумма");
	
	// Готовим результат
	Результат = ТаблицаПланов.Скопировать(, СписокКолонок + ", Сумма");
	
	// Ресурсы
	Результат.Колонки.Добавить("Лимит",					Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18, 2)));
	Результат.Колонки.Добавить("Зарезервировано",		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18, 2)));
	Результат.Колонки.Сумма.Имя = "Заявлено";
	Результат.Колонки.Добавить("Исполнено",				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18, 2)));
	
	//
	Результат.Колонки.Период.Имя = "ПериодОтчета";
	
	//
	Результат.Колонки.Добавить("ПриходРасход", 			Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДвиженийПриходРасход"));
	Результат.Колонки.Добавить("Контрагент", 			Метаданные.ОпределяемыеТипы.Контрагенты.Тип);
	Результат.Колонки.Добавить("ДоговорКонтрагента",	Метаданные.ОпределяемыеТипы.Договоры.Тип);
	Результат.Колонки.Добавить("Организация", 			Метаданные.ОпределяемыеТипы.Организации.Тип);
	
	// Документы планирования и резервирования
	Результат.Колонки.Добавить("ДокументПланирования",	
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументПланирования.Тип);
	Результат.Колонки.Добавить("ДокументРезервирования", 
		Метаданные.РегистрыНакопления.ЛимитыПоБюджетам.Измерения.ДокументРезервирования.Тип);
	Результат.ЗаполнитьЗначения(Документы.ОперативныйПлан.ПустаяСсылка(), "ДокументРезервирования");
	
	// Период
	Результат.Колонки.Добавить("Период", 				ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	Результат.ЗаполнитьЗначения(Объект.Дата, "Период");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ТекстыЗапросов

#Область ИнициализацияЗапроса

// Процедура инициализирует запрос данными таблиц, переданных в параметрах
Процедура ИнициализироватьЗапрос(Запрос, Объект)
	
	Если Запрос.МенеджерВременныхТаблиц = неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИначеЕсли Запрос.МенеджерВременныхТаблиц.Таблицы.Количество() > 0 Тогда
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	ПараметрыЦЗ = ВстраиваниеОПКПереопределяемый.ПараметрыЦентрализованныхЗакупок();
	
	ТаблицаПериодов = неопределено;
	ТаблицаНастройкаАналитик = неопределено;
	
	ТипОбъекта = ТипЗнч(Объект);
	
	СтруктураРеквизитов = ПолучитьОписаниеРеквизитовДокумента();
	
	Если ТипОбъекта = Тип("Структура") Тогда
		
		Если НЕ Объект.Свойство("НастройкаАналитик") Тогда
			ВызватьИсключение НСтр("ru = 'В объекте отсутствует таблица настроек аналитик.'");
		ИначеЕсли НЕ Объект.Свойство("Периоды") Тогда
			ВызватьИсключение НСтр("ru = 'В объекте отсутствует таблица периодов.'");
		КонецЕсли;
		
		ТаблицаНастройкаАналитик = Объект.НастройкаАналитик;
		ТаблицаПериодов = Объект.Периоды;
		
		РеквизитыДокумента = ЗначенияСвойствОбъекта(Объект, СтруктураРеквизитов);
		
	ИначеЕсли ТипОбъекта = Тип("ДокументСсылка.ОперативныйПлан") Тогда
		
		СтруктураРеквизитов.Вставить("Периоды");
		СтруктураРеквизитов.Вставить("НастройкаАналитик");
		СтруктураРеквизитов.Вставить("НазначениеРезерва_Контрагент");
		СтруктураРеквизитов.Вставить("НазначениеРезерва_ДоговорКонтрагента");
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, СтруктураРеквизитов);
		
		//
		ТаблицаНастройкаАналитик = РеквизитыДокумента.НастройкаАналитик.Выгрузить();
		ТаблицаПериодов = РеквизитыДокумента.Периоды.Выгрузить();
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ОперативныйПлан")
		 ИЛИ (ТипОбъекта = Тип("ДанныеФормыСтруктура") И Объект.Свойство("Ссылка") 
			И ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОперативныйПлан")) Тогда
	
		ТаблицаНастройкаАналитик = Объект.НастройкаАналитик.Выгрузить(, "Аналитика, Использование");
		ТаблицаПериодов = Объект.Периоды.Выгрузить(, "Период");
		
		РеквизитыДокумента = ЗначенияСвойствОбъекта(Объект, СтруктураРеквизитов);
		
	Иначе
		Возврат;
	КонецЕсли;
	
	//
	Для Каждого КлючЗначение Из РеквизитыДокумента Цикл
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("АналитикаОрганизацияПустая", НЕ ЗначениеЗаполнено(Запрос.Параметры.Организация));
	Запрос.УстановитьПараметр("АналитикаКонтрагентПустая", НЕ ЗначениеЗаполнено(Запрос.Параметры.Организация));
	Запрос.УстановитьПараметр("АналитикаДоговорПустая", НЕ ЗначениеЗаполнено(Запрос.Параметры.Организация));
	
	Запрос.УстановитьПараметр("АналитикаОрганизацияИспользуется", 
		ТаблицаНастройкаАналитик.Найти(Справочники.АналитикиОперативногоПланирования.Организация, "Аналитика") <> неопределено);
	Запрос.УстановитьПараметр("АналитикаКонтрагентИспользуется",
		ТаблицаНастройкаАналитик.Найти(Справочники.АналитикиОперативногоПланирования.Контрагент, "Аналитика") <> неопределено);
	Запрос.УстановитьПараметр("АналитикаДоговорИспользуется", 
		ТаблицаНастройкаАналитик.Найти(Справочники.АналитикиОперативногоПланирования.ДоговорКонтрагента, "Аналитика") <> неопределено);
	
	// Если при отладчике установить значение Истина, то виртуальные таблицы уничтожаться не будут
	Запрос.УстановитьПараметр("НеУничтожатьВТ", Ложь);
	Запрос.УстановитьПараметр("ЭтоНовый", НЕ ЗначениеЗаполнено(Запрос.Параметры.Ссылка));
	
	//
	ТребуетсяРегистрацияПотребностей = ПараметрыЦЗ.Использовать
		И Запрос.Параметры.Предназначение = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов 
		И Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование
		И НЕ Запрос.Параметры.НеРегистрироватьПотребностьВНоменклатуре;
	Запрос.УстановитьПараметр("ТребуетсяРегистрацияПотребностей", ТребуетсяРегистрацияПотребностей);	
	
	// 
	Если НЕ ЗначениеЗаполнено(Запрос.Параметры.Контрагент) Тогда
		Запрос.Параметры.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	// ВТ_ПериодыДокумента
	ОбщегоНазначенияОПК.ЗагрузитьТаблицуВоВременнуюТаблицуЗапроса(
		Запрос,
		"ВТ_ПериодыДокумента", 
		ТаблицаПериодов);
	
	// ВТ_НастройкаАналитикДокумента
	ОбщегоНазначенияОПК.ЗагрузитьТаблицуВоВременнуюТаблицуЗапроса(
		Запрос,
		"ВТ_НастройкаАналитикДокумента",
		ТаблицаНастройкаАналитик);
	
	//
	УстановитьПараметрыВидаОпераций(Запрос);
	Если Запрос.Параметры.ЭтоЛимиты Тогда
		ОчиститьАналитикиПланирования(Запрос);	// Убрать лишние аналитики документа, не нужные для лимитирования
	КонецЕсли;
	
	//
	Запрос.Текст = "";
	
	ДобавитьОписанияКлючевыхАналитик(Запрос);
	
	// 
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_СписокКлючевыхРеквизитовДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_ПризнакиКлючевыхАналитикДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_КлючевыеРеквизитыДокумента();
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета();
	Запрос.Текст = Запрос.Текст + ТекстЗапроса_ВТ_КлючиОперПлана();
	Запрос.Выполнить();
	
	// Дополнить параметры запроса признаками ключевых аналитик
	КлючевыеРеквизиты = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_КлючевыеРеквизитыДокумента").ПолучитьДанные().Выгрузить();
	Если КлючевыеРеквизиты.Количество() = 1 Тогда
		Данные = КлючевыеРеквизиты[0];
		Для каждого Колонка Из КлючевыеРеквизиты.Колонки Цикл
			Если СтрНачинаетсяС(Колонка.Имя, "Ключ") Тогда
				Запрос.УстановитьПараметр(Колонка.Имя, Данные[Колонка.Имя]);
			ИначеЕсли СтрНачинаетсяС(Колонка.Имя, "ТребуетсяОтборПоКлючам") Тогда
				Запрос.УстановитьПараметр(Колонка.Имя, Данные[Колонка.Имя]);
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

// Процедура инициализирует запрос для поиска предыдущих/последующих документов
Процедура ЗаполнитьПараметрыИнициализацииДляПоискаПоследующих(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Предназначение КАК Предназначение,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	|	ДанныеДокумента.ВидОперативногоПлана КАК ВидОперативногоПлана,
	|	ДанныеДокумента.РежимВводаДокументаПланирования КАК РежимВводаДокументаПланирования,
	|	ДанныеДокумента.ЦФО КАК ЦФО,
	|	ДанныеДокумента.Проект КАК Проект,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.ПриходРасход КАК ПриходРасход,
	|	ДанныеДокумента.СтатьяБюджета КАК СтатьяБюджета,
	|	ДанныеДокумента.Аналитика1 КАК Аналитика1,
	|	ДанныеДокумента.Аналитика2 КАК Аналитика2,
	|	ДанныеДокумента.Аналитика3 КАК Аналитика3,
	|	ДанныеДокумента.Аналитика4 КАК Аналитика4,
	|	ДанныеДокумента.Аналитика5 КАК Аналитика5,
	|	ДанныеДокумента.Аналитика6 КАК Аналитика6,
	|	ДанныеДокумента.ДокументПланирования КАК ДокументПланирования,
	|	ДанныеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.МестоПоставки КАК МестоПоставки,
	|	ДанныеДокумента.Номенклатура КАК Номенклатура,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|	ДанныеДокумента.Приоритет КАК Приоритет
	|ИЗ
	|	Документ.ОперативныйПлан КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	Реквизиты = ТаблицаРеквизитов[0];
	
	Для Каждого Колонка Из ТаблицаРеквизитов.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	// 
	Если НЕ ЗначениеЗаполнено(Запрос.Параметры.Контрагент) Тогда
		Запрос.Параметры.Контрагент = неопределено;
	КонецЕсли;
	
	//
	УстановитьПараметрыВидаОпераций(Запрос);
	
	// Убрать лишние аналитики документа, не нужные для лимитирования
	ОчиститьАналитикиПланирования(Запрос);
	
	// Добавляем временные таблицы с описанием аналитик оперативного планирования
	ДобавитьОписанияКлючевыхАналитик(Запрос);
	
	// Для проверки последовательности необходимо заменить документ планирования
	ВидыОпераций = Перечисления.ВидыОперацийОперативныйПлан;
	Если Запрос.Параметры.ВидОперации = ВидыОпераций.Резервирование
		ИЛИ Запрос.Параметры.ВидОперации = ВидыОпераций.ПланированиеИРезервирование Тогда
		// Необходимо проверять цепочку по документу планирования
		Если Запрос.Параметры.РежимВводаДокументаПланирования = 0 Тогда
			Запрос.Параметры.ДокументПланирования = Запрос.Параметры.Ссылка;
		ИначеЕсли Запрос.Параметры.РежимВводаДокументаПланирования = 1 Тогда
			// менять документ планирования не надо.
		ИначеЕсли Запрос.Параметры.РежимВводаДокументаПланирования = 2 Тогда
			Запрос.Параметры.ДокументПланирования = Запрос.Параметры.Ссылка;
			//todo надо еще проверять и резерв-источник 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыВидаОпераций(Запрос)
	
	ТребуемыеОперации = Новый Массив;
	Если Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов Тогда
		//
		ТребуемыеОперации.Добавить(Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов);
		Запрос.УстановитьПараметр("ЭтоЛимиты", Истина);	//  Необходим для зачистки ключевых аналитик документа
	ИначеЕсли Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование Тогда
		//
		ТребуемыеОперации.Добавить(Перечисления.ВидыОперацийОперативныйПлан.Резервирование);
		//Запрос.УстановитьПараметр("ЭтоЛимиты", Ложь); //  Необходим для зачистки ключевых аналитик документа
		Запрос.УстановитьПараметр("ЭтоЛимиты", Истина); //  Необходим для зачистки ключевых аналитик документа
	ИначеЕсли Запрос.Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование Тогда
		ТребуемыеОперации.Добавить(Перечисления.ВидыОперацийОперативныйПлан.Планирование);
		Запрос.УстановитьПараметр("ЭтоЛимиты", Ложь); //  Необходим для зачистки ключевых аналитик документа
	Иначе
		ТребуемыеОперации.Добавить(Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование);
		Запрос.УстановитьПараметр("ЭтоЛимиты", Ложь); //  Необходим для зачистки ключевых аналитик документа
	КонецЕсли;
	Запрос.УстановитьПараметр("ТребуемыеОперацииДокумента", ТребуемыеОперации);
	
КонецПроцедуры
 
Функция ТекстЗапроса_ВТ_СписокКлючевыхРеквизитовДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НастройкаАналитик.Реквизит КАК Реквизит
	|ПОМЕСТИТЬ ВТ_СписокКлючевыхРеквизитовДокумента
	|ИЗ
	|	ВТ_НастройкаАналитикДокумента КАК ОперативныйПланНастройкаАналитик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НастройкаАналитик КАК НастройкаАналитик
	|		ПО ОперативныйПланНастройкаАналитик.Аналитика = НастройкаАналитик.Аналитика
	|			И (ОперативныйПланНастройкаАналитик.Использование = ЗНАЧЕНИЕ(Перечисление.ИспользованиеАналитик.КлючеваяАналитика))
	|ГДЕ
	|	ОперативныйПланНастройкаАналитик.Использование = ЗНАЧЕНИЕ(Перечисление.ИспользованиеАналитик.КлючеваяАналитика)
	|	И (&ЭтоЛимиты = ЛОЖЬ
	|			ИЛИ НЕ(НастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ПриходРасход)
	|					ИЛИ НастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Организация)
	|					ИЛИ НастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.Контрагент)
	|					ИЛИ НастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ДоговорКонтрагента)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкаАналитик.Реквизит
	|ИЗ
	|	ВТ_НастройкаАналитик КАК НастройкаАналитик
	|ГДЕ
	|	НастройкаАналитик.Аналитика = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ДокументПланирования)
	|	И (&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.Резервирование)
	|	ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Предназначение""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Раздел""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ВидОперативногоПлана""";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_ВТ_ПризнакиКлючевыхАналитикДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Ключи.КлючПредназначение) КАК КлючПредназначение,
	|	МАКСИМУМ(Ключи.КлючРаздел) КАК КлючРаздел,
	|	МАКСИМУМ(Ключи.КлючЦФО) КАК КлючЦФО,
	|	МАКСИМУМ(Ключи.КлючПроект) КАК КлючПроект,
	|	МАКСИМУМ(Ключи.КлючВалюта) КАК КлючВалюта,
	|	МАКСИМУМ(Ключи.КлючПриходРасход) КАК КлючПриходРасход,
	|	МАКСИМУМ(Ключи.КлючСтатьяБюджета) КАК КлючСтатьяБюджета,
	|	МАКСИМУМ(Ключи.КлючАналитика1) КАК КлючАналитика1,
	|	МАКСИМУМ(Ключи.КлючАналитика2) КАК КлючАналитика2,
	|	МАКСИМУМ(Ключи.КлючАналитика3) КАК КлючАналитика3,
	|	МАКСИМУМ(Ключи.КлючАналитика4) КАК КлючАналитика4,
	|	МАКСИМУМ(Ключи.КлючАналитика5) КАК КлючАналитика5,
	|	МАКСИМУМ(Ключи.КлючАналитика6) КАК КлючАналитика6,
	|	МАКСИМУМ(Ключи.КлючНоменклатура) КАК КлючНоменклатура,
	|	МАКСИМУМ(Ключи.КлючМестоПоставки) КАК КлючМестоПоставки,
	|	МАКСИМУМ(Ключи.КлючДокументПланирования) КАК КлючДокументПланирования,
	|	МАКСИМУМ(Ключи.КлючВидОперативногоПлана) КАК КлючВидОперативногоПлана,
	|	МАКСИМУМ(Ключи.КлючКонтрагент) КАК КлючКонтрагент,
	|	МАКСИМУМ(Ключи.КлючДоговорКонтрагента) КАК КлючДоговорКонтрагента,
	|	МАКСИМУМ(Ключи.КлючОрганизация) КАК КлючОрганизация,
	|	МАКСИМУМ(Ключи.КлючМенеджер) КАК КлючМенеджер,
	|	МАКСИМУМ(Ключи.КлючПриоритет) КАК КлючПриоритет
	|ПОМЕСТИТЬ ВТ_ПризнакиКлючевыхАналитикДокумента
	|ИЗ
	|	ВТ_СписокКлючевыхРеквизитовДокумента КАК СписокКлючевыхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ключи КАК Ключи
	|		ПО СписокКлючевыхРеквизитов.Реквизит = Ключи.Реквизит";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_ВТ_КлючевыеРеквизитыДокумента()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПредназначение = ИСТИНА
	|			ТОГДА &Предназначение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Предназначение,
	|	&ВидОперации КАК Раздел,
	|	&ВидОперативногоПлана КАК ВидОперативногоПлана,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючОрганизация = ИСТИНА
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючЦФО = ИСТИНА
	|			ТОГДА &ЦФО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЦФО,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПроект = ИСТИНА
	|			ТОГДА &Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход = ИСТИНА
	|			ТОГДА &ПриходРасход
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПриходРасход,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета = ИСТИНА
	|			ТОГДА &СтатьяБюджета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяБюджета,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика1 = ИСТИНА
	|			ТОГДА &Аналитика1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика1,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика2 = ИСТИНА
	|			ТОГДА &Аналитика2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика2,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика3 = ИСТИНА
	|			ТОГДА &Аналитика3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика3,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика4 = ИСТИНА
	|			ТОГДА &Аналитика4
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика4,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика5 = ИСТИНА
	|			ТОГДА &Аналитика5
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика5,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика6 = ИСТИНА
	|			ТОГДА &Аналитика6
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика6,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючВалюта = ИСТИНА
	|			ТОГДА &ВалютаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент = ИСТИНА
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента = ИСТИНА
	|			ТОГДА &ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДокументПланирования = ИСТИНА
	|			ТОГДА &ДокументПланирования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПланирования,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура = ИСТИНА
	|			ТОГДА &Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки = ИСТИНА
	|			ТОГДА &МестоПоставки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК МестоПоставки,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМенеджер = ИСТИНА
	|			ТОГДА &Менеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриоритет = ИСТИНА
	|			ТОГДА &Приоритет
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Приоритет,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПредназначение КАК КлючПредназначение,
	|	ПризнакиКлючевыхАналитикДокумента.КлючРаздел КАК КлючРаздел,
	|	ПризнакиКлючевыхАналитикДокумента.КлючЦФО КАК КлючЦФО,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПроект КАК КлючПроект,
	|	ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК КлючОрганизация,
	|	ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета КАК КлючСтатьяБюджета,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика1 КАК КлючАналитика1,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика2 КАК КлючАналитика2,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика3 КАК КлючАналитика3,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика4 КАК КлючАналитика4,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика5 КАК КлючАналитика5,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика6 КАК КлючАналитика6,
	|	ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент КАК КлючКонтрагент,
	|	ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента КАК КлючДоговорКонтрагента,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход КАК КлючПриходРасход,
	|	ПризнакиКлючевыхАналитикДокумента.КлючВалюта КАК КлючВалюта,
	|	ПризнакиКлючевыхАналитикДокумента.КлючДокументПланирования КАК КлючДокументПланирования,
	|	ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура КАК КлючНоменклатура,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки КАК КлючМестоПоставки,
	|	ИСТИНА КАК КлючВидОперативногоПлана,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМенеджер КАК КлючМенеджер,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПриоритет КАК КлючПриоритет,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючМенеджер
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПриоритет КАК ТребуетсяОтборПоКлючамПотребностей,
	|	ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура КАК ТребуетсяОтборПоКлючамНоменклатуры,
	|	ПризнакиКлючевыхАналитикДокумента.КлючЦФО
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПроект
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК ТребуетсяОтборПоКлючамСтруктуры,
	|	ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход КАК ТребуетсяОтборПоКлючамСтатейБюджета,
	|	ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК ТребуетсяОтборПоКлючамПартнеров
	|ПОМЕСТИТЬ ВТ_КлючевыеРеквизитыДокумента
	|ИЗ
	|	ВТ_ПризнакиКлючевыхАналитикДокумента КАК ПризнакиКлючевыхАналитикДокумента";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапроса_ВТ_КлючевыеРеквизитыДокументаСПериодами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПредназначение = ИСТИНА
	|			ТОГДА &Предназначение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Предназначение,
	|	&ВидОперации КАК Раздел,
	|	&ВидОперативногоПлана КАК ВидОперативногоПлана,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючОрганизация = ИСТИНА
	|			ТОГДА &Организация
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючЦФО = ИСТИНА
	|			ТОГДА &ЦФО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЦФО,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПроект = ИСТИНА
	|			ТОГДА &Проект
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход = ИСТИНА
	|			ТОГДА &ПриходРасход
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПриходРасход,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета = ИСТИНА
	|			ТОГДА &СтатьяБюджета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяБюджета,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика1 = ИСТИНА
	|			ТОГДА &Аналитика1
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика1,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика2 = ИСТИНА
	|			ТОГДА &Аналитика2
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика2,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика3 = ИСТИНА
	|			ТОГДА &Аналитика3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика3,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика4 = ИСТИНА
	|			ТОГДА &Аналитика4
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика4,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика5 = ИСТИНА
	|			ТОГДА &Аналитика5
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика5,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючАналитика6 = ИСТИНА
	|			ТОГДА &Аналитика6
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Аналитика6,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючВалюта = ИСТИНА
	|			ТОГДА &ВалютаДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент = ИСТИНА
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента = ИСТИНА
	|			ТОГДА &ДоговорКонтрагента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючДокументПланирования = ИСТИНА
	|			ТОГДА &ДокументПланирования
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПланирования,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура = ИСТИНА
	|			ТОГДА &Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки = ИСТИНА
	|			ТОГДА &МестоПоставки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК МестоПоставки,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючМенеджер = ИСТИНА
	|			ТОГДА &Менеджер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Менеджер,
	|	ВЫБОР
	|		КОГДА ПризнакиКлючевыхАналитикДокумента.КлючПриоритет = ИСТИНА
	|			ТОГДА &Приоритет
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Приоритет,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПредназначение КАК КлючПредназначение,
	|	ПризнакиКлючевыхАналитикДокумента.КлючРаздел КАК КлючРаздел,
	|	ПризнакиКлючевыхАналитикДокумента.КлючЦФО КАК КлючЦФО,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПроект КАК КлючПроект,
	|	ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК КлючОрганизация,
	|	ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета КАК КлючСтатьяБюджета,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика1 КАК КлючАналитика1,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика2 КАК КлючАналитика2,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика3 КАК КлючАналитика3,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика4 КАК КлючАналитика4,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика5 КАК КлючАналитика5,
	|	ПризнакиКлючевыхАналитикДокумента.КлючАналитика6 КАК КлючАналитика6,
	|	ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент КАК КлючКонтрагент,
	|	ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента КАК КлючДоговорКонтрагента,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход КАК КлючПриходРасход,
	|	ПризнакиКлючевыхАналитикДокумента.КлючВалюта КАК КлючВалюта,
	|	ПризнакиКлючевыхАналитикДокумента.КлючДокументПланирования КАК КлючДокументПланирования,
	|	ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура КАК КлючНоменклатура,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки КАК КлючМестоПоставки,
	|	ИСТИНА КАК КлючВидОперативногоПлана,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМенеджер КАК КлючМенеджер,
	|	ПризнакиКлючевыхАналитикДокумента.КлючПриоритет КАК КлючПриоритет,
	|	ПризнакиКлючевыхАналитикДокумента.КлючМестоПоставки
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючМенеджер
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПриоритет КАК ТребуетсяОтборПоКлючамПотребностей,
	|	ПризнакиКлючевыхАналитикДокумента.КлючНоменклатура КАК ТребуетсяОтборПоКлючамНоменклатуры,
	|	ПризнакиКлючевыхАналитикДокумента.КлючЦФО
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПроект
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК ТребуетсяОтборПоКлючамСтруктуры,
	|	ПризнакиКлючевыхАналитикДокумента.КлючСтатьяБюджета
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючПриходРасход КАК ТребуетсяОтборПоКлючамСтатейБюджета,
	|	ПризнакиКлючевыхАналитикДокумента.КлючКонтрагент
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючДоговорКонтрагента
	|		ИЛИ ПризнакиКлючевыхАналитикДокумента.КлючОрганизация КАК ТребуетсяОтборПоКлючамПартнеров,
	|	ОперативныйПланПериоды.Период КАК Период,
	|	ИСТИНА КАК КлючПериод
	|ПОМЕСТИТЬ ВТ_КлючевыеРеквизитыДокумента
	|ИЗ
	|	ВТ_ПризнакиКлючевыхАналитикДокумента КАК ПризнакиКлючевыхАналитикДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперативныйПлан.Периоды КАК ОперативныйПланПериоды
	|		ПО (ОперативныйПланПериоды.Ссылка = &Ссылка)";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти 

#Область Ключи

Процедура ИнициализироватьКлючиАналитикиУчета(Запрос)
	
	ИмяПараметра = "КлючиАналитикиУчетаИнициализированы";
	
	Если Запрос.Параметры.Свойство(ИмяПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.СтатьяБюджета КАК СтатьяБюджета,
	|	Ключи.Аналитика1 КАК Аналитика1,
	|	Ключи.Аналитика2 КАК Аналитика2,
	|	Ключи.Аналитика3 КАК Аналитика3,
	|	Ключи.Аналитика4 КАК Аналитика4,
	|	Ключи.Аналитика5 КАК Аналитика5,
	|	Ключи.Аналитика6 КАК Аналитика6,
	|	Ключи.ПриходРасход КАК ПриходРасход
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ТаблицаОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтатейБюджетов КАК Ключи
	|		ПО ТаблицаОперации.АналитикаСтатейБюджетов = Ключи.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтатейБюджетов КАК Аналитика
	|		ПО (Ключи.СтатьяБюджета = Аналитика.СтатьяБюджета)
	|			И (Ключи.Аналитика1 = Аналитика.Аналитика1)
	|			И (Ключи.Аналитика2 = Аналитика.Аналитика2)
	|			И (Ключи.Аналитика3 = Аналитика.Аналитика3)
	|			И (Ключи.Аналитика4 = Аналитика.Аналитика4)
	|			И (Ключи.Аналитика5 = Аналитика.Аналитика5)
	|			И (Ключи.Аналитика6 = Аналитика.Аналитика6)
	|			И (Ключи.ПриходРасход = Аналитика.ПриходРасход)
	|ГДЕ
	|	ТаблицаОперации.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.МестоПоставки КАК МестоПоставки,
	|	Ключи.Приоритет КАК Приоритет,
	|	Ключи.Менеджер КАК Менеджер
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ТаблицаОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияПотребностей КАК Ключи
	|		ПО ТаблицаОперации.АналитикаПотребностей = Ключи.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияПотребностей КАК Аналитика
	|		ПО (Ключи.МестоПоставки = Аналитика.МестоПоставки)
	|			И (Ключи.Приоритет = Аналитика.Приоритет)
	|			И (Ключи.Менеджер = Аналитика.Менеджер)
	|ГДЕ
	|	ТаблицаОперации.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	Ключи.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ключи.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ТаблицаОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияНоменклатуры КАК Ключи
	|		ПО ТаблицаОперации.АналитикаНоменклатуры = Ключи.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияНоменклатуры КАК Аналитика
	|		ПО (Ключи.Номенклатура = Аналитика.Номенклатура)
	|			И (Ключи.Характеристика = Аналитика.Характеристика)
	|			И (Ключи.ЕдиницаИзмерения = Аналитика.ЕдиницаИзмерения)
	|			И (Ключи.Коэффициент = Аналитика.Коэффициент)
	|ГДЕ
	|	ТаблицаОперации.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Организация КАК Организация,
	|	Ключи.Контрагент КАК Контрагент,
	|	Ключи.Договор КАК Договор
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ТаблицаОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Ключи
	|		ПО ТаблицаОперации.АналитикаПартнеров = Ключи.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (Ключи.Организация = Аналитика.Организация)
	|			И (Ключи.Контрагент = Аналитика.Контрагент)
	|			И (Ключи.Договор = Аналитика.Договор)
	|ГДЕ
	|	ТаблицаОперации.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.ЦФО КАК ЦФО,
	|	Ключи.Проект КАК Проект,
	|	Ключи.Организация КАК Организация
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ТаблицаОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтруктуры КАК Ключи
	|		ПО ТаблицаОперации.АналитикаСтруктуры = Ключи.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтруктуры КАК Аналитика
	|		ПО (Ключи.ЦФО = Аналитика.ЦФО)
	|			И (Ключи.Проект = Аналитика.Проект)
	|			И (Ключи.Организация = Аналитика.Организация)
	|ГДЕ
	|	ТаблицаОперации.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL";
	
	Результат = ЗапросАналитик.ВыполнитьПакет();
	
	//
	Выборка = Результат[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаПланированияСтатейБюджетов.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	//
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаПланированияПотребностей.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	//
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаПланированияНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	// Партнеры
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	// Структура
	Выборка = Результат[4].Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаПланированияСтруктуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	//
	Запрос.УстановитьПараметр(ИмяПараметра, Истина);
	
КонецПроцедуры

// Функция возвращает текст запроса для отбора требуемых для опер.плана ключей учета потребностей
Функция ТекстЗапроса_ВТ_КлючиОперПлана()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АналитикаПланированияПотребностей.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_КлючиПотребностей
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияПотребностей КАК АналитикаПланированияПотребностей
	|		ПО (ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамПотребностей = ИСТИНА)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючПриоритет = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Приоритет = АналитикаПланированияПотребностей.Приоритет)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючМенеджер = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Менеджер = АналитикаПланированияПотребностей.Менеджер)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючМестоПоставки = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.МестоПоставки = АналитикаПланированияПотребностей.МестоПоставки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаПланированияНоменклатуры.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_КлючиНоменклатуры
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияНоменклатуры КАК АналитикаПланированияНоменклатуры
	|		ПО (ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамНоменклатуры = ИСТИНА)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючНоменклатура = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Номенклатура = АналитикаПланированияНоменклатуры.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаПланированияСтруктуры.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_КлючиСтруктуры
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтруктуры КАК АналитикаПланированияСтруктуры
	|		ПО (ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамСтруктуры = ИСТИНА)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючЦФО = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.ЦФО = АналитикаПланированияСтруктуры.ЦФО)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючПроект = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Проект = АналитикаПланированияСтруктуры.Проект)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючОрганизация = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Организация = АналитикаПланированияСтруктуры.Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаПланированияСтатейБюджетов.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_КлючиСтатейБюджета
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаПланированияСтатейБюджетов КАК АналитикаПланированияСтатейБюджетов
	|		ПО (ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамСтатейБюджета = ИСТИНА)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючСтатьяБюджета = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.СтатьяБюджета = АналитикаПланированияСтатейБюджетов.СтатьяБюджета)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючПриходРасход = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.ПриходРасход = АналитикаПланированияСтатейБюджетов.ПриходРасход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_КлючиПартнеров
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ПО (ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамПартнеров = ИСТИНА)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючКонтрагент = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Контрагент = АналитикаУчетаПоПартнерам.Контрагент)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючДоговорКонтрагента = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.ДоговорКонтрагента = АналитикаУчетаПоПартнерам.Договор)
	|			И (ВТ_КлючевыеРеквизитыДокумента.КлючОрганизация = ЛОЖЬ
	|				ИЛИ ВТ_КлючевыеРеквизитыДокумента.Организация = АналитикаУчетаПоПартнерам.Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|ИЗ
	|	ВТ_КлючевыеРеквизитыДокумента КАК ВТ_КлючевыеРеквизитыДокумента
	|ГДЕ
	|	ВТ_КлючевыеРеквизитыДокумента.ТребуетсяОтборПоКлючамПартнеров = ИСТИНА
	|		И &АналитикаКонтрагентИспользуется = ЛОЖЬ
	|			ИЛИ (ВТ_КлючевыеРеквизитыДокумента.КлючКонтрагент = ИСТИНА
	|				И &АналитикаКонтрагентПустая = ИСТИНА)
	|		И &АналитикаДоговорИспользуется = ЛОЖЬ
	|			ИЛИ (ВТ_КлючевыеРеквизитыДокумента.КлючДоговорКонтрагента = ИСТИНА
	|				И &АналитикаДоговорПустая = ИСТИНА)
	|		И &АналитикаОрганизацияИспользуется = ЛОЖЬ
	|			ИЛИ (ВТ_КлючевыеРеквизитыДокумента.КлючОрганизация = ИСТИНА
	|				И &АналитикаОрганизацияПустая = ИСТИНА)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 

#Область ОперативноеПланированиеИКонтроль

Процедура ДобавитьОписанияКлючевыхАналитик(Запрос)
	
	ТекстЗапросаПередВыполнением = Запрос.Текст;
	
	ТаблицаКлючейАналитик = ПолучитьТаблицуКлючейАналитик();
	ТаблицаАналитикИРеквизитов = ПолучитьТаблицуСоответствияАналитикРеквизитам();
	
	Запрос.УстановитьПараметр("ТаблицаКлючейАналитик", 		ТаблицаКлючейАналитик);
	Запрос.УстановитьПараметр("ТаблицаАналитикИРеквизитов", ТаблицаАналитикИРеквизитов);
	
	Запрос.Текст = "";
	Если Запрос.МенеджерВременныхТаблиц <> неопределено Тогда
		Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_Ключи") <> неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
			"УНИЧТОЖИТЬ ВТ_Ключи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
		КонецЕсли;
		Если Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТ_НастройкаАналитик") <> неопределено Тогда
			Запрос.Текст = Запрос.Текст + 
			"УНИЧТОЖИТЬ ВТ_НастройкаАналитик
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	ТКА.Реквизит КАК Реквизит,
	|	ТКА.КлючПредназначение КАК КлючПредназначение,
	|	ТКА.КлючРаздел КАК КлючРаздел,
	|	ТКА.КлючЦФО КАК КлючЦФО,
	|	ТКА.КлючПроект КАК КлючПроект,
	|	ТКА.КлючВалюта КАК КлючВалюта,
	|	ТКА.КлючПриходРасход КАК КлючПриходРасход,
	|	ТКА.КлючСтатьяБюджета КАК КлючСтатьяБюджета,
	|	ТКА.КлючАналитика1 КАК КлючАналитика1,
	|	ТКА.КлючАналитика2 КАК КлючАналитика2,
	|	ТКА.КлючАналитика3 КАК КлючАналитика3,
	|	ТКА.КлючАналитика4 КАК КлючАналитика4,
	|	ТКА.КлючАналитика5 КАК КлючАналитика5,
	|	ТКА.КлючАналитика6 КАК КлючАналитика6,
	|	ТКА.КлючНоменклатура КАК КлючНоменклатура,
	|	ТКА.КлючМестоПоставки КАК КлючМестоПоставки,
	|	ТКА.КлючДокументПланирования КАК КлючДокументПланирования,
	|	ТКА.КлючКонтрагент КАК КлючКонтрагент,
	|	ТКА.КлючДоговорКонтрагента КАК КлючДоговорКонтрагента,
	|	ТКА.КлючОрганизация КАК КлючОрганизация,
	|	ТКА.КлючВидОперативногоПлана КАК КлючВидОперативногоПлана,
	|	ТКА.КлючМенеджер КАК КлючМенеджер,
	|	ТКА.КлючПриоритет КАК КлючПриоритет
	|ПОМЕСТИТЬ ВТ_Ключи
	|ИЗ
	|	&ТаблицаКлючейАналитик КАК ТКА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТАР.Аналитика КАК Аналитика,
	|	ТАР.Реквизит КАК Реквизит
	|ПОМЕСТИТЬ ВТ_НастройкаАналитик
	|ИЗ
	|	&ТаблицаАналитикИРеквизитов КАК ТАР";
	
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаПередВыполнением;
	
КонецПроцедуры

#КонецОбласти 

#Область ТаблицаОперативныйПланПоБюджетам

Процедура ТаблицаОперативныйПланПоБюджетам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОперативныйПланПоБюджетам";
	
	// Данные документа
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВТ_ДвиженияОперацииИзменение.Предназначение КАК Предназначение,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ДвиженияОперацииИзменение.Валюта КАК Валюта,
	|	ВТ_ДвиженияОперацииИзменение.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.ЦФО КАК ЦФО,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Проект КАК Проект,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Организация КАК Организация,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика1 КАК Аналитика1,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика2 КАК Аналитика2,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика3 КАК Аналитика3,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика4 КАК Аналитика4,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика5 КАК Аналитика5,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.Аналитика6 КАК Аналитика6,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов.ПриходРасход КАК ПриходРасход,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров.Контрагент КАК Контрагент,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров.Договор КАК ДоговорКонтрагента,
	|	СУММА(ВТ_ДвиженияОперацииИзменение.Сумма) КАК Зарезервировано,
	|	СУММА(ВТ_ДвиженияОперацииИзменение.Сумма) КАК Сумма
	|ИЗ
	|	ВТ_ДвиженияОперацииИзменение КАК ВТ_ДвиженияОперацииИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДвиженияОперацииИзменение.Предназначение,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета,
	|	ВТ_ДвиженияОперацииИзменение.Валюта,
	|	ВТ_ДвиженияОперацииИзменение.ДокументПланирования,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТ_ДвиженияОперацииИзменение.Сумма) <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти 

#Область ПотребностиВНоменклатуре
	
Процедура ТаблицаПотребностиВНоменклатуре(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПотребностиВНоменклатуре";
	
	// Данные документа
	Если НЕ ПроведениеСерверОПК.ЕстьТаблицаЗапроса("ВТ_КурсПересчетаДляПотребностейВНоменклатуре", ТекстыЗапроса) Тогда
		ТаблицаВТ_КурсПересчетаДляПотребностейВНоменклатуре(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверОПК.ЕстьТаблицаЗапроса("ВТ_ТаблицаСтавокНДС", ТекстыЗапроса) Тогда
		ТаблицаВТ_ТаблицаСтавокНДС(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.Приоритет КАК Приоритет,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.Менеджер КАК Менеджер,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.МестоПоставки КАК МестоПоставки,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Характеристика КАК Характеристика,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Коэффициент КАК Коэффициент,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Организация КАК Организация,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Проект КАК Проект,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров.Договор КАК ДоговорСПокупателем,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета КАК ПериодПотребности,
	|	ВТ_ДвиженияОперацииИзменение.Валюта Как Валюта,	
	|	ЕСТЬNULL(ВТ_ТаблицаСтавокНДС.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК СтавкаНДС,
	|	СУММА(ВТ_ДвиженияОперацииИзменение.Количество * ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Коэффициент) КАК КоличествоПотребность,
	|	СУММА(ВТ_ДвиженияОперацииИзменение.Сумма) КАК СуммаПотребность
	|ИЗ
	|	ВТ_ДвиженияОперацииИзменение КАК ВТ_ДвиженияОперацииИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСтавокНДС КАК ВТ_ТаблицаСтавокНДС
	|		ПО ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Номенклатура.ВидСтавкиНДС = ВТ_ТаблицаСтавокНДС.ВидСтавкиНДС
	|			И ВТ_ДвиженияОперацииИзменение.ПериодОтчета.ДатаОкончания > ВТ_ТаблицаСтавокНДС.ДатаДействуетС
	|			И ВТ_ДвиженияОперацииИзменение.ПериодОтчета.ДатаОкончания <= ВТ_ТаблицаСтавокНДС.ДатаДействуетПо,
	|	ВТ_КурсПересчетаДляПотребностейВНоменклатуре КАК КурсПересчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Коэффициент,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Характеристика,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров.Договор,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета,
	|	ЕСТЬNULL(ВТ_ТаблицаСтавокНДС.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)),
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Организация,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.Менеджер,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.МестоПоставки,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.Номенклатура,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры.ЕдиницаИзмерения,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры.Проект,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей.Приоритет,
	|	ВТ_ДвиженияОперацииИзменение.Валюта
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВТ_ДвиженияОперацииИзменение.Количество) <> 0
	|		ИЛИ СУММА(ВТ_ДвиженияОперацииИзменение.Сумма) <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТаблицаВТ_КурсПересчетаДляПотребностейВНоменклатуре(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_КурсПересчетаДляПотребностейВНоменклатуре";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КурсыВалютыОбъекта.Курс, 1) * ЕСТЬNULL(КурсВалютыЗК.Кратность, 1) / ЕСТЬNULL(КурсыВалютыОбъекта.Кратность, 1) / ЕСТЬNULL(КурсВалютыЗК.Курс, 1) КАК Курс
	|ПОМЕСТИТЬ ВТ_КурсПересчетаДляПотребностейВНоменклатуре
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&Дата,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					ВалютаУчетаЦентрализованныхЗакупок.Значение КАК Значение
	|				ИЗ
	|					Константа.ВалютаУчетаЦентрализованныхЗакупок КАК ВалютаУчетаЦентрализованныхЗакупок)) КАК КурсВалютыЗК,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &ВалютаДокумента) КАК КурсыВалютыОбъекта";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

Процедура ТаблицаВТ_ТаблицаСтавокНДС(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_ТаблицаСтавокНДС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Общая) КАК ВидСтавкиНДС,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаДействуетС,
	|	ДАТАВРЕМЯ(2018, 12, 31, 0, 0, 0) КАК ДатаДействуетПО,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18) КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаСтавокНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Общая),
	|	ДАТАВРЕМЯ(2019, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.ОбщаяРасчетная),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(2018, 12, 31, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.ОбщаяРасчетная),
	|	ДАТАВРЕМЯ(2019, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Пониженная),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.ПониженнаяРасчетная),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Нулевая),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДАТАВРЕМЯ(3000, 1, 1, 0, 0, 0),
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры


#КонецОбласти 

Процедура ТаблицаОперацииБюджетов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаОперацииБюджетов";
	
	// Данные документа
	Если НЕ ПроведениеСерверОПК.ЕстьТаблицаЗапроса("ВТ_ДвиженияОперации", ТекстыЗапроса) Тогда
		ТаблицаВТ_ДвиженияОперации(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверОПК.ЕстьТаблицаЗапроса("ВТ_ДвиженияОперацииИсходные", ТекстыЗапроса) Тогда
		ТаблицаВТ_ДвиженияОперацииИсходные(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверОПК.ЕстьТаблицаЗапроса("ВТ_ДвиженияОперацииИзменение", ТекстыЗапроса) Тогда
		ТаблицаВТ_ДвиженияОперацииИзменение(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ДвиженияОперацииИзменение.Период КАК Период,
	|	ВТ_ДвиженияОперацииИзменение.Ссылка КАК Ссылка,
	|	ВТ_ДвиженияОперацииИзменение.Предназначение КАК Предназначение,
	|	ВТ_ДвиженияОперацииИзменение.Раздел КАК Раздел,
	|	ВТ_ДвиженияОперацииИзменение.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ВТ_ДвиженияОперацииИзменение.Валюта КАК Валюта,
	|	ВТ_ДвиженияОперацииИзменение.Сумма КАК Сумма,
	|	ВТ_ДвиженияОперацииИзменение.Количество КАК Количество
	|ИЗ
	|	ВТ_ДвиженияОперацииИзменение КАК ВТ_ДвиженияОперацииИзменение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТаблицаВТ_ДвиженияОперации(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_ДвиженияОперации";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Предназначение КАК Предназначение,
	|	&ВидОперации КАК Раздел,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование)
	|			И &РежимВводаДокументаПланирования = 1
	|			ТОГДА &ДокументПланирования
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование)
	|			И &РежимВводаДокументаПланирования <> 1
	|			ТОГДА &Ссылка
	|		ИНАЧЕ &ДокументПланирования
	|	КОНЕЦ КАК ДокументПланирования,
	|	ОперативныйПланДвиженияОперации.Период КАК ПериодОтчета,
	|	ОперативныйПланДвиженияОперации.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ОперативныйПланДвиженияОперации.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ОперативныйПланДвиженияОперации.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ОперативныйПланДвиженияОперации.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ОперативныйПланДвиженияОперации.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ОперативныйПланДвиженияОперации.Валюта КАК Валюта,
	|	ОперативныйПланДвиженияОперации.Сумма КАК Сумма,
	|	ОперативныйПланДвиженияОперации.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ДвиженияОперации
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ОперативныйПланДвиженияОперации
	|ГДЕ
	|	ОперативныйПланДвиженияОперации.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецФункции

Функция ТаблицаВТ_ДвиженияОперацииИсходные(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_ДвиженияОперацииИсходные";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Предназначение КАК Предназначение,
	|	&ВидОперации КАК Раздел,
	|	ОперативныйПланДвиженияОперацииИсходные.ДокументПланирования КАК ДокументПланирования,
	|	ОперативныйПланДвиженияОперацииИсходные.Период КАК ПериодОтчета,
	|	ОперативныйПланДвиженияОперацииИсходные.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ОперативныйПланДвиженияОперацииИсходные.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ОперативныйПланДвиженияОперацииИсходные.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ОперативныйПланДвиженияОперацииИсходные.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ОперативныйПланДвиженияОперацииИсходные.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ОперативныйПланДвиженияОперацииИсходные.Валюта КАК Валюта,
	|	ОперативныйПланДвиженияОперацииИсходные.Сумма КАК Сумма,
	|	ОперативныйПланДвиженияОперацииИсходные.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ДвиженияОперацииИсходные
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперацииИсходные КАК ОперативныйПланДвиженияОперацииИсходные
	|ГДЕ
	|	ОперативныйПланДвиженияОперацииИсходные.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецФункции

Процедура ТаблицаВТ_ДвиженияОперацииИзменение(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВТ_ДвиженияОперацииИзменение";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	Запрос1.Ссылка КАК Ссылка,
	|	Запрос1.Предназначение КАК Предназначение,
	|	Запрос1.Раздел КАК Раздел,
	|	Запрос1.ДокументПланирования КАК ДокументПланирования,
	|	Запрос1.ПериодОтчета КАК ПериодОтчета,
	|	Запрос1.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	Запрос1.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	Запрос1.АналитикаПотребностей КАК АналитикаПотребностей,
	|	Запрос1.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	Запрос1.АналитикаПартнеров КАК АналитикаПартнеров,
	|	Запрос1.Валюта КАК Валюта,
	|	СУММА(Запрос1.Сумма) КАК Сумма,
	|	СУММА(Запрос1.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_ДвиженияОперацииИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ДвиженияОперации.Ссылка КАК Ссылка,
	|		ВТ_ДвиженияОперации.Предназначение КАК Предназначение,
	|		ВТ_ДвиженияОперации.Раздел КАК Раздел,
	|		ВТ_ДвиженияОперации.ДокументПланирования КАК ДокументПланирования,
	|		ВТ_ДвиженияОперации.ПериодОтчета КАК ПериодОтчета,
	|		ВТ_ДвиженияОперации.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|		ВТ_ДвиженияОперации.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|		ВТ_ДвиженияОперации.АналитикаПотребностей КАК АналитикаПотребностей,
	|		ВТ_ДвиженияОперации.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|		ВТ_ДвиженияОперации.АналитикаПартнеров КАК АналитикаПартнеров,
	|		ВТ_ДвиженияОперации.Валюта КАК Валюта,
	|		ВТ_ДвиженияОперации.Сумма КАК Сумма,
	|		ВТ_ДвиженияОперации.Количество КАК Количество
	|	ИЗ
	|		ВТ_ДвиженияОперации КАК ВТ_ДвиженияОперации
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ДвиженияОперацииИсходные.Ссылка,
	|		ВТ_ДвиженияОперацииИсходные.Предназначение,
	|		ВТ_ДвиженияОперацииИсходные.Раздел,
	|		ВТ_ДвиженияОперацииИсходные.ДокументПланирования,
	|		ВТ_ДвиженияОперацииИсходные.ПериодОтчета,
	|		ВТ_ДвиженияОперацииИсходные.АналитикаСтруктуры,
	|		ВТ_ДвиженияОперацииИсходные.АналитикаСтатейБюджетов,
	|		ВТ_ДвиженияОперацииИсходные.АналитикаПотребностей,
	|		ВТ_ДвиженияОперацииИсходные.АналитикаНоменклатуры,
	|		ВТ_ДвиженияОперацииИсходные.АналитикаПартнеров,
	|		ВТ_ДвиженияОперацииИсходные.Валюта,
	|		-ВТ_ДвиженияОперацииИсходные.Сумма,
	|		-ВТ_ДвиженияОперацииИсходные.Количество
	|	ИЗ
	|		ВТ_ДвиженияОперацииИсходные КАК ВТ_ДвиженияОперацииИсходные) КАК Запрос1
	|
	|СГРУППИРОВАТЬ ПО
	|	Запрос1.Валюта,
	|	Запрос1.Предназначение,
	|	Запрос1.Ссылка,
	|	Запрос1.Раздел,
	|	Запрос1.ДокументПланирования,
	|	Запрос1.АналитикаСтруктуры,
	|	Запрос1.АналитикаПотребностей,
	|	Запрос1.АналитикаНоменклатуры,
	|	Запрос1.ПериодОтчета,
	|	Запрос1.АналитикаСтатейБюджетов,
	|	Запрос1.АналитикаПартнеров
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Запрос1.Сумма) <> 0
	|		ИЛИ СУММА(Запрос1.Количество) <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
КонецПроцедуры

// Процедура заполняет табличную часть документа из регистра
// Параметры:
//  Параметры  - Структура - Настройки для заполнения
//  АдресХранилища - Строка - Адрес временного хранилища, в которое будет помещен результат работы задания.
//
Функция ПолучитьТаблицуОперацийБюджетов(Знач Параметры)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИнициализироватьЗапрос(Запрос, Параметры);
	
	Если Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование Тогда
	
		//
		Запрос.Текст = 
			ТекстЗапроса_ВТ_ОперацииБюджетов(НЕ Запрос.Параметры.ЭтоНовый)
			+ ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета()
			+ ТекстЗапроса_ВТ_ОперацииБюджетовПоКлючевымАналитикам(Ложь, Истина);
			
	ИначеЕсли Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов Тогда
		
		//
		Запрос.Текст = 
			ТекстЗапроса_ВТ_ЛимитыПоБюджетам()
			+ ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета()
			+ ТекстЗапроса_ВТ_ЛимитыПоБюджетамПоКлючевымАналитикам(Ложь, Истина);
		
	ИначеЕсли Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование Тогда
		
		Если Параметры.РежимВводаДокументаПланирования = 0 И Параметры.Свойство("ЗаполнитьОстаткамиСвободногоЛимита") Тогда
			ТекстЗапроса = ТекстЗапроса_ВТ_ЛимитыПоБюджетам_Резервы_ЗаполнитьОстаткамиСвободногоЛимита();
		Иначе
			ТекстЗапроса = ТекстЗапроса_ВТ_ЛимитыПоБюджетам_Резервы();
		КонецЕсли;
		
		//
		Запрос.Текст = 
			ТекстЗапроса
			+ ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета()
			+ ТекстЗапроса_ВТ_ЛимитыПоБюджетамПоКлючевымАналитикам(Ложь, Истина);
			
	ИначеЕсли Параметры.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование Тогда
		
		//
		Запрос.Текст = 
			ТекстЗапроса_ВТ_ОперацииБюджетов(НЕ Запрос.Параметры.ЭтоНовый)
			+ ОбщегоНазначенияОПК.ТекстРазделителяЗапросовПакета()
			+ ТекстЗапроса_ВТ_ОперацииБюджетовПоКлючевымАналитикам(Ложь, Истина);
			
	КонецЕсли;	
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

//
Функция ТекстЗапроса_ВТ_ОперацииБюджетов(БезУчетаДвиженийТекущегоДокумента = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОперативныйПланПоБюджетамОбороты.Предназначение КАК Предназначение,
	|	ОперативныйПланПоБюджетамОбороты.Раздел КАК Раздел,
	|	ОперативныйПланПоБюджетамОбороты.ПериодОтчета КАК ПериодОтчета,
	|	ОперативныйПланПоБюджетамОбороты.Валюта КАК Валюта,
	|	ОперативныйПланПоБюджетамОбороты.ДокументПланирования КАК ДокументПланирования,
	|	ОперативныйПланПоБюджетамОбороты.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ОперативныйПланПоБюджетамОбороты.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ОперативныйПланПоБюджетамОбороты.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ОперативныйПланПоБюджетамОбороты.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ОперативныйПланПоБюджетамОбороты.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ОперативныйПланПоБюджетамОбороты.КоличествоОборот КАК Количество,
	|	ОперативныйПланПоБюджетамОбороты.СуммаОборот КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОперацииБюджетов
	|ИЗ
	|	РегистрНакопления.ОперацииБюджетов.Обороты(
	|			,
	|			,
	|			,
	|			Раздел = &Раздел
	|				И (НЕ &КлючПредназначение 
	|					ИЛИ Предназначение В
	|						(ВЫБРАТЬ
	|							КлючиДокумента.Предназначение КАК Предназначение 
	|						ИЗ
	|							ВТ_КлючевыеРеквизитыДокумента КАК КлючиДокумента))
	|				И ДокументПланирования = ВЫБОР
	|					КОГДА &КлючДокументПланирования
	|						ТОГДА &ДокументПланирования
	|					ИНАЧЕ ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|				КОНЕЦ
	|				И ПериодОтчета В
	|					(ВЫБРАТЬ
	|						ПериодыДокумента.Период КАК Период
	|					ИЗ
	|						ВТ_ПериодыДокумента КАК ПериодыДокумента)
	|				И (НЕ &ТребуетсяОтборПоКлючамСтруктуры
	|					ИЛИ АналитикаСтруктуры В
	|						(ВЫБРАТЬ
	|							ВТ_Ключи.КлючАналитики КАК КлючАналитики
	|						ИЗ
	|							ВТ_КлючиСтруктуры КАК ВТ_Ключи))
	|				И (НЕ &ТребуетсяОтборПоКлючамСтатейБюджета
	|					ИЛИ АналитикаСтатейБюджетов В
	|						(ВЫБРАТЬ
	|							ВТ_Ключи.КлючАналитики КАК КлючАналитики
	|						ИЗ
	|							ВТ_КлючиСтатейБюджета КАК ВТ_Ключи))
	|				И (НЕ &ТребуетсяОтборПоКлючамПартнеров
	|					ИЛИ АналитикаПартнеров В
	|						(ВЫБРАТЬ
	|							ВТ_Ключи.КлючАналитики КАК КлючАналитики
	|						ИЗ
	|							ВТ_КлючиПартнеров КАК ВТ_Ключи))
	|				И (НЕ &ТребуетсяОтборПоКлючамПотребностей
	|					ИЛИ АналитикаПотребностей В
	|						(ВЫБРАТЬ
	|							ВТ_Ключи.КлючАналитики КАК КлючАналитики
	|						ИЗ
	|							ВТ_КлючиПотребностей КАК ВТ_Ключи))
	|				И (НЕ &ТребуетсяОтборПоКлючамНоменклатуры
	|					ИЛИ АналитикаНоменклатуры В
	|						(ВЫБРАТЬ
	|							ВТ_Ключи.КлючАналитики КАК КлючАналитики
	|						ИЗ
	|							ВТ_КлючиНоменклатуры КАК ВТ_Ключи))
	|				И (НЕ &КлючВалюта
	|					ИЛИ Валюта В
	|						(ВЫБРАТЬ
	|							КлючиДокумента.Валюта КАК Валюта
	|						ИЗ
	|							ВТ_КлючевыеРеквизитыДокумента КАК КлючиДокумента))) КАК ОперативныйПланПоБюджетамОбороты";
	
	Возврат ТекстЗапроса;

КонецФункции

//
Функция ТекстЗапроса_ВТ_ОперацииБюджетовПоКлючевымАналитикам(ФормироватьВременнуюТаблицу = Истина, РазворачиватьКлючи = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ОперацииБюджетов.Предназначение КАК Предназначение,
	|	ВТ_ОперацииБюджетов.Раздел КАК Раздел,
	|	ВТ_ОперацииБюджетов.ПериодОтчета КАК Период,
	|	ВТ_ОперацииБюджетов.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ОперацииБюджетов.Валюта КАК Валюта,
	|	ВТ_ОперацииБюджетов.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ВТ_ОперацииБюджетов.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ВТ_ОперацииБюджетов.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ВТ_ОперацииБюджетов.АналитикаПартнеров КАК АналитикаПартнеров,
	|	&КлючиРазвернуты КАК КлючиРазвернуты,
	|	ВТ_ОперацииБюджетов.Количество КАК Количество,
	|	ВТ_ОперацииБюджетов.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОперацииБюджетовПоКлючевымАналитикам
	|ИЗ 
	|	ВТ_ОперацииБюджетов КАК ВТ_ОперацииБюджетов";
	
	Если НЕ ФормироватьВременнуюТаблицу Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ОперацииБюджетовПоКлючевымАналитикам", "");
	КонецЕсли; 
	
	Если РазворачиватьКлючи Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КлючиРазвернуты", "ИСТИНА");
		
		ТекстДляЗамены = "КАК КлючиРазвернуты,";
		ТекстЗамены = ТекстДляЗамены + "
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтруктуры.ЦФО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ЦФО,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтруктуры.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтруктуры.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаПартнеров.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаПартнеров.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.СтатьяБюджета, НЕОПРЕДЕЛЕНО) КАК СтатьяБюджета,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика1, НЕОПРЕДЕЛЕНО) КАК Аналитика1,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика2, НЕОПРЕДЕЛЕНО) КАК Аналитика2,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика3, НЕОПРЕДЕЛЕНО) КАК Аналитика3,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика4, НЕОПРЕДЕЛЕНО) КАК Аналитика4,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика5, НЕОПРЕДЕЛЕНО) КАК Аналитика5,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.Аналитика6, НЕОПРЕДЕЛЕНО) КАК Аналитика6,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаСтатейБюджетов.ПриходРасход, ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПриходРасход.ПустаяСсылка)) КАК ПриходРасход,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаПотребностей.МестоПоставки, ЗНАЧЕНИЕ(Справочник.МестаПоставки.ПустаяСсылка)) КАК МестоПоставки,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаПотребностей.Приоритет, ЗНАЧЕНИЕ(Справочник.ПриоритетыПотребностей.ПустаяСсылка)) КАК Приоритет,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаПотребностей.Менеджер, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Менеджер,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаНоменклатуры.Номенклатура, неопределено) КАК Номенклатура,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаНоменклатуры.Характеристика, неопределено) КАК Характеристика,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаНоменклатуры.ЕдиницаИзмерения, неопределено) КАК ЕдиницаИзмерения,
			|	ЕСТЬNULL(ВТ_ОперацииБюджетов.АналитикаНоменклатуры.Коэффициент,1) КАК Коэффициент,";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ТекстДляЗамены, ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КлючиРазвернуты", "ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

//
Функция ТекстЗапроса_ВТ_ЛимитыПоБюджетам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛимитыПоБюджетамОбороты.Предназначение КАК Предназначение,
	|	ЛимитыПоБюджетамОбороты.ПериодЛимитирования КАК ПериодОтчета,
	|	ЛимитыПоБюджетамОбороты.ЦФО КАК ЦФО,
	|	ЛимитыПоБюджетамОбороты.Проект КАК Проект,
	|	ЛимитыПоБюджетамОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	ЛимитыПоБюджетамОбороты.Аналитика1 КАК Аналитика1,
	|	ЛимитыПоБюджетамОбороты.Аналитика2 КАК Аналитика2,
	|	ЛимитыПоБюджетамОбороты.Аналитика3 КАК Аналитика3,
	|	ЛимитыПоБюджетамОбороты.Аналитика4 КАК Аналитика4,
	|	ЛимитыПоБюджетамОбороты.Аналитика5 КАК Аналитика5,
	|	ЛимитыПоБюджетамОбороты.Аналитика6 КАК Аналитика6,
	|	ЛимитыПоБюджетамОбороты.Валюта КАК Валюта,
	|	ЛимитыПоБюджетамОбороты.ЛимитОборот + ЛимитыПоБюджетамОбороты.КорректировкаОборот КАК Сумма
	|ПОМЕСТИТЬ ВТ_ЛимитыПоБюджетам
	|ИЗ
	|	РегистрНакопления.ЛимитыПоБюджетам.Обороты(
	|			,
	|			,
	|			,
	|			(НЕ &КлючПредназначение
	|					ИЛИ Предназначение = &Предназначение)
	|				И ДокументРезервирования = ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка)
	|				И ПериодЛимитирования В
	|					(ВЫБРАТЬ
	|						ПериодыДокумента.Период КАК Период
	|					ИЗ
	|						ВТ_ПериодыДокумента КАК ПериодыДокумента)
	|				И (НЕ &КлючЦФО 
	|					ИЛИ ЦФО = &ЦФО)
	|				И (НЕ &КлючПроект
	|					ИЛИ Проект = &Проект)
	|				И (НЕ &КлючСтатьяБюджета
	|					ИЛИ (СтатьяБюджета = &СтатьяБюджета И Аналитика1 = &Аналитика1 И Аналитика2 = &Аналитика2 И Аналитика3 = &Аналитика3 И Аналитика4 = &Аналитика4 И Аналитика5 = &Аналитика5 И Аналитика6 = &Аналитика6))
	|				И (НЕ &КлючВалюта
	|					ИЛИ Валюта = &ВалютаДокумента)) КАК ЛимитыПоБюджетамОбороты";
	
	Возврат ТекстЗапроса;

КонецФункции

//
Функция ТекстЗапроса_ВТ_ЛимитыПоБюджетам_Резервы()
	
	Возврат 
	"ВЫБРАТЬ
	|	ЛимитыПоБюджетамОбороты.Предназначение КАК Предназначение,
	|	ЛимитыПоБюджетамОбороты.ПериодЛимитирования КАК ПериодОтчета,
	|	ЛимитыПоБюджетамОбороты.ЦФО КАК ЦФО,
	|	ЛимитыПоБюджетамОбороты.Проект КАК Проект,
	|	ЛимитыПоБюджетамОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	ЛимитыПоБюджетамОбороты.Аналитика1 КАК Аналитика1,
	|	ЛимитыПоБюджетамОбороты.Аналитика2 КАК Аналитика2,
	|	ЛимитыПоБюджетамОбороты.Аналитика3 КАК Аналитика3,
	|	ЛимитыПоБюджетамОбороты.Аналитика4 КАК Аналитика4,
	|	ЛимитыПоБюджетамОбороты.Аналитика5 КАК Аналитика5,
	|	ЛимитыПоБюджетамОбороты.Аналитика6 КАК Аналитика6,
	|	ЛимитыПоБюджетамОбороты.Валюта КАК Валюта,
	|	ЛимитыПоБюджетамОбороты.ЗарезервированоОборот КАК Сумма
	|ПОМЕСТИТЬ ВТ_ЛимитыПоБюджетам
	|ИЗ
	|	РегистрНакопления.ЛимитыПоБюджетам.Обороты(
	|			,
	|			,
	|			,
	|			(НЕ &КлючПредназначение 
	|					ИЛИ Предназначение = &Предназначение)
	|				И ДокументРезервирования = &ДокументПланирования
	|				И ПериодЛимитирования В
	|					(ВЫБРАТЬ
	|						ПериодыДокумента.Период КАК Период
	|					ИЗ
	|						ВТ_ПериодыДокумента КАК ПериодыДокумента)
	|				И (НЕ &КлючЦФО 
	|					ИЛИ ЦФО = &ЦФО)
	|				И (НЕ &КлючПроект
	|					ИЛИ Проект = &Проект)
	|				И (НЕ &КлючСтатьяБюджета
	|					ИЛИ (СтатьяБюджета = &СтатьяБюджета И Аналитика1 = &Аналитика1 И Аналитика2 = &Аналитика2 И Аналитика3 = &Аналитика3 И Аналитика4 = &Аналитика4 И Аналитика5 = &Аналитика5 И Аналитика6 = &Аналитика6))
	|				И (НЕ &КлючВалюта
	|					ИЛИ Валюта = &ВалютаДокумента)) КАК ЛимитыПоБюджетамОбороты";
	
КонецФункции

// запрос возвращает остатки лимита по 
Функция ТекстЗапроса_ВТ_ЛимитыПоБюджетам_Резервы_ЗаполнитьОстаткамиСвободногоЛимита()
	
	Возврат
	"ВЫБРАТЬ
	|	ЛимитыПоБюджетамОбороты.Предназначение КАК Предназначение,
	|	ЛимитыПоБюджетамОбороты.ПериодЛимитирования КАК ПериодОтчета,
	|	ЛимитыПоБюджетамОбороты.ЦФО КАК ЦФО,
	|	ЛимитыПоБюджетамОбороты.Проект КАК Проект,
	|	ЛимитыПоБюджетамОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	ЛимитыПоБюджетамОбороты.Аналитика1 КАК Аналитика1,
	|	ЛимитыПоБюджетамОбороты.Аналитика2 КАК Аналитика2,
	|	ЛимитыПоБюджетамОбороты.Аналитика3 КАК Аналитика3,
	|	ЛимитыПоБюджетамОбороты.Аналитика4 КАК Аналитика4,
	|	ЛимитыПоБюджетамОбороты.Аналитика5 КАК Аналитика5,
	|	ЛимитыПоБюджетамОбороты.Аналитика6 КАК Аналитика6,
	|	ЛимитыПоБюджетамОбороты.Валюта КАК Валюта,
	|	ЛимитыПоБюджетамОбороты.ЛимитОборот + ЛимитыПоБюджетамОбороты.КорректировкаОборот - ЛимитыПоБюджетамОбороты.ЗарезервированоОборот - ЛимитыПоБюджетамОбороты.ЗаявленоОборот - ЛимитыПоБюджетамОбороты.ИсполненоОборот КАК Сумма
	|ПОМЕСТИТЬ ВТ_ЛимитыПоБюджетам
	|ИЗ
	|	РегистрНакопления.ЛимитыПоБюджетам.Обороты(
	|			,
	|			,
	|			,
	|			(НЕ &КлючПредназначение
	|				ИЛИ Предназначение = &Предназначение)
	|				И ПериодЛимитирования В
	|					(ВЫБРАТЬ
	|						ПериодыДокумента.Период КАК Период
	|					ИЗ
	|						ВТ_ПериодыДокумента КАК ПериодыДокумента)
	|				И (НЕ &КлючЦФО
	|					ИЛИ ЦФО = &ЦФО)
	|				И (НЕ &КлючПроект
	|					ИЛИ Проект = &Проект)
	|				И (НЕ &КлючСтатьяБюджета
	|					ИЛИ СтатьяБюджета = &СтатьяБюджета
	|						И Аналитика1 = &Аналитика1
	|						И Аналитика2 = &Аналитика2
	|						И Аналитика3 = &Аналитика3
	|						И Аналитика4 = &Аналитика4
	|						И Аналитика5 = &Аналитика5
	|						И Аналитика6 = &Аналитика6)
	|				И (НЕ &КлючВалюта
	|					ИЛИ Валюта = &ВалютаДокумента)) КАК ЛимитыПоБюджетамОбороты
	|ГДЕ
	|	ЛимитыПоБюджетамОбороты.ЛимитОборот + ЛимитыПоБюджетамОбороты.КорректировкаОборот - ЛимитыПоБюджетамОбороты.ЗарезервированоОборот - ЛимитыПоБюджетамОбороты.ЗаявленоОборот - ЛимитыПоБюджетамОбороты.ИсполненоОборот > 0";
	
КонецФункции

//
Функция ТекстЗапроса_ВТ_ЛимитыПоБюджетамПоКлючевымАналитикам(ФормироватьВременнуюТаблицу = Истина, РазворачиватьКлючи = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ЛимитыПоБюджетам.Предназначение КАК Предназначение,
	|	ВТ_ЛимитыПоБюджетам.ПериодОтчета КАК Период,
	|	ВТ_ЛимитыПоБюджетам.ЦФО КАК ЦФО,
	|	ВТ_ЛимитыПоБюджетам.Проект КАК Проект,
	|	ВТ_ЛимитыПоБюджетам.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ЛимитыПоБюджетам.Аналитика1 КАК Аналитика1,
	|	ВТ_ЛимитыПоБюджетам.Аналитика2 КАК Аналитика2,
	|	ВТ_ЛимитыПоБюджетам.Аналитика3 КАК Аналитика3,
	|	ВТ_ЛимитыПоБюджетам.Аналитика4 КАК Аналитика4,
	|	ВТ_ЛимитыПоБюджетам.Аналитика5 КАК Аналитика5,
	|	ВТ_ЛимитыПоБюджетам.Аналитика6 КАК Аналитика6,
	|	ВТ_ЛимитыПоБюджетам.Валюта КАК Валюта,
	|	ИСТИНА КАК КлючиРазвернуты,
	|	ВТ_ЛимитыПоБюджетам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ЛимитыПоБюджетамПоКлючевымАналитикам
	|ИЗ 
	|	ВТ_ЛимитыПоБюджетам КАК ВТ_ЛимитыПоБюджетам";
	
	Если НЕ ФормироватьВременнуюТаблицу Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ЛимитыПоБюджетамПоКлючевымАналитикам", "");
	КонецЕсли; 
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ТаблицаЛимитыПоБюджетам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаЛимитыПоБюджетам";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	Запрос1.Предназначение КАК Предназначение,
	|	Запрос1.ДокументРезервирования КАК ДокументРезервирования,
	|	Запрос1.Период КАК ПериодЛимитирования,
	|	Запрос1.ЦФО КАК ЦФО,
	|	Запрос1.Проект КАК Проект,
	|	Запрос1.СтатьяБюджета КАК СтатьяБюджета,
	|	Запрос1.Аналитика1 КАК Аналитика1,
	|	Запрос1.Аналитика2 КАК Аналитика2,
	|	Запрос1.Аналитика3 КАК Аналитика3,
	|	Запрос1.Аналитика4 КАК Аналитика4,
	|	Запрос1.Аналитика5 КАК Аналитика5,
	|	Запрос1.Аналитика6 КАК Аналитика6,
	|	Запрос1.Валюта КАК Валюта,
	|	0 КАК Лимит,
	|	СУММА(Запрос1.Сумма) КАК Корректировка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОперативныйПланДвиженияОперации.Предназначение КАК Предназначение,
	|		ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка) КАК ДокументРезервирования,
	|		ОперативныйПланДвиженияОперации.Период КАК Период,
	|		ОперативныйПланДвиженияОперации.ЦФО КАК ЦФО,
	|		ОперативныйПланДвиженияОперации.Проект КАК Проект,
	|		ОперативныйПланДвиженияОперации.СтатьяБюджета КАК СтатьяБюджета,
	|		ОперативныйПланДвиженияОперации.Аналитика1 КАК Аналитика1,
	|		ОперативныйПланДвиженияОперации.Аналитика2 КАК Аналитика2,
	|		ОперативныйПланДвиженияОперации.Аналитика3 КАК Аналитика3,
	|		ОперативныйПланДвиженияОперации.Аналитика4 КАК Аналитика4,
	|		ОперативныйПланДвиженияОперации.Аналитика5 КАК Аналитика5,
	|		ОперативныйПланДвиженияОперации.Аналитика6 КАК Аналитика6,
	|		ОперативныйПланДвиженияОперации.Валюта КАК Валюта,
	|		НЕОПРЕДЕЛЕНО КАК ДокументПланирования,
	|		ОперативныйПланДвиженияОперации.Сумма КАК Сумма
	|	ИЗ
	|		Документ.ОперативныйПлан.ДвиженияОперации КАК ОперативныйПланДвиженияОперации
	|	ГДЕ
	|		ОперативныйПланДвиженияОперации.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныйПланДвиженияОперацииИсходные.Предназначение,
	|		ЗНАЧЕНИЕ(Документ.ОперативныйПлан.ПустаяСсылка),
	|		ОперативныйПланДвиженияОперацииИсходные.Период,
	|		ОперативныйПланДвиженияОперацииИсходные.ЦФО,
	|		ОперативныйПланДвиженияОперацииИсходные.Проект,
	|		ОперативныйПланДвиженияОперацииИсходные.СтатьяБюджета,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика1,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика2,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика3,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика4,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика5,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика6,
	|		ОперативныйПланДвиженияОперацииИсходные.Валюта,
	|		НЕОПРЕДЕЛЕНО,
	|		-ОперативныйПланДвиженияОперацииИсходные.Сумма
	|	ИЗ
	|		Документ.ОперативныйПлан.ДвиженияОперацииИсходные КАК ОперативныйПланДвиженияОперацииИсходные
	|	ГДЕ
	|		ОперативныйПланДвиженияОперацииИсходные.Ссылка = &Ссылка) КАК Запрос1
	|
	|СГРУППИРОВАТЬ ПО
	|	Запрос1.Валюта,
	|	Запрос1.Предназначение,
	|	Запрос1.Период,
	|	Запрос1.ДокументРезервирования,
	|	Запрос1.ЦФО,
	|	Запрос1.Проект,
	|	Запрос1.СтатьяБюджета,
	|	Запрос1.Аналитика1,
	|	Запрос1.Аналитика2,
	|	Запрос1.Аналитика3,
	|	Запрос1.Аналитика4,
	|	Запрос1.Аналитика5,
	|	Запрос1.Аналитика6
	|
	|ИМЕЮЩИЕ
	|	СУММА(Запрос1.Сумма) <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТаблицаЛимитыПоБюджетамРезервы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаЛимитыПоБюджетам";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	Запрос1.Предназначение КАК Предназначение,
	|	Запрос1.ДокументРезервирования КАК ДокументРезервирования,
	|	Запрос1.Период КАК ПериодЛимитирования,
	|	Запрос1.ЦФО КАК ЦФО,
	|	Запрос1.Проект КАК Проект,
	|	Запрос1.СтатьяБюджета КАК СтатьяБюджета,
	|	Запрос1.Аналитика1 КАК Аналитика1,
	|	Запрос1.Аналитика2 КАК Аналитика2,
	|	Запрос1.Аналитика3 КАК Аналитика3,
	|	Запрос1.Аналитика4 КАК Аналитика4,
	|	Запрос1.Аналитика5 КАК Аналитика5,
	|	Запрос1.Аналитика6 КАК Аналитика6,
	|	Запрос1.Валюта КАК Валюта,
	|	СУММА(Запрос1.Сумма) КАК Зарезервировано
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОперативныйПланДвиженияОперации.Предназначение КАК Предназначение,
	|		ВЫБОР
	|			КОГДА &РежимВводаДокументаПланирования = 1
	|				ТОГДА &ДокументПланирования
	|			ИНАЧЕ &Ссылка
	|		КОНЕЦ КАК ДокументРезервирования,
	|		ОперативныйПланДвиженияОперации.Период КАК Период,
	|		ОперативныйПланДвиженияОперации.ЦФО КАК ЦФО,
	|		ОперативныйПланДвиженияОперации.Проект КАК Проект,
	|		ОперативныйПланДвиженияОперации.СтатьяБюджета КАК СтатьяБюджета,
	|		ОперативныйПланДвиженияОперации.Аналитика1 КАК Аналитика1,
	|		ОперативныйПланДвиженияОперации.Аналитика2 КАК Аналитика2,
	|		ОперативныйПланДвиженияОперации.Аналитика3 КАК Аналитика3,
	|		ОперативныйПланДвиженияОперации.Аналитика4 КАК Аналитика4,
	|		ОперативныйПланДвиженияОперации.Аналитика5 КАК Аналитика5,
	|		ОперативныйПланДвиженияОперации.Аналитика6 КАК Аналитика6,
	|		ОперативныйПланДвиженияОперации.Валюта КАК Валюта,
	|		НЕОПРЕДЕЛЕНО КАК ДокументПланирования,
	|		ОперативныйПланДвиженияОперации.Сумма КАК Сумма
	|	ИЗ
	|		Документ.ОперативныйПлан.ДвиженияОперации КАК ОперативныйПланДвиженияОперации
	|	ГДЕ
	|		ОперативныйПланДвиженияОперации.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныйПланДвиженияОперацииИсходные.Предназначение,
	|		&ДокументПланирования,
	|		ОперативныйПланДвиженияОперацииИсходные.Период,
	|		ОперативныйПланДвиженияОперацииИсходные.ЦФО,
	|		ОперативныйПланДвиженияОперацииИсходные.Проект,
	|		ОперативныйПланДвиженияОперацииИсходные.СтатьяБюджета,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика1,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика2,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика3,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика4,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика5,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика6,
	|		ОперативныйПланДвиженияОперацииИсходные.Валюта,
	|		НЕОПРЕДЕЛЕНО,
	|		-ОперативныйПланДвиженияОперацииИсходные.Сумма
	|	ИЗ
	|		Документ.ОперативныйПлан.ДвиженияОперацииИсходные КАК ОперативныйПланДвиженияОперацииИсходные
	|	ГДЕ
	|		ОперативныйПланДвиженияОперацииИсходные.Ссылка = &Ссылка
	|		И &РежимВводаДокументаПланирования = 1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныйПланДвиженияОперацииИсходные.Предназначение,
	|		&ДокументПланирования,
	|		ОперативныйПланДвиженияОперацииИсходные.Период,
	|		ОперативныйПланДвиженияОперацииИсходные.ЦФО,
	|		ОперативныйПланДвиженияОперацииИсходные.Проект,
	|		ОперативныйПланДвиженияОперацииИсходные.СтатьяБюджета,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика1,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика2,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика3,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика4,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика5,
	|		ОперативныйПланДвиженияОперацииИсходные.Аналитика6,
	|		ОперативныйПланДвиженияОперацииИсходные.Валюта,
	|		НЕОПРЕДЕЛЕНО,
	|		-ОперативныйПланДвиженияОперацииИсходные.Сумма
	|	ИЗ
	|		Документ.ОперативныйПлан.ДвиженияОперацииИсходные КАК ОперативныйПланДвиженияОперацииИсходные
	|	ГДЕ
	|		ОперативныйПланДвиженияОперацииИсходные.Ссылка = &Ссылка
	|		И &РежимВводаДокументаПланирования = 2) КАК Запрос1
	|
	|СГРУППИРОВАТЬ ПО
	|	Запрос1.Валюта,
	|	Запрос1.Предназначение,
	|	Запрос1.Период,
	|	Запрос1.ДокументРезервирования,
	|	Запрос1.ЦФО,
	|	Запрос1.Проект,
	|	Запрос1.СтатьяБюджета,
	|	Запрос1.Аналитика1,
	|	Запрос1.Аналитика2,
	|	Запрос1.Аналитика3,
	|	Запрос1.Аналитика4,
	|	Запрос1.Аналитика5,
	|	Запрос1.Аналитика6
	|
	|ИМЕЮЩИЕ
	|	СУММА(Запрос1.Сумма) <> 0";
	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТаблицаНазначениеРезервов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаНазначениеРезервов";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВЫБОР
	|		КОГДА &РежимВводаДокументаПланирования = 0
	|			ТОГДА &Ссылка
	|		КОГДА &РежимВводаДокументаПланирования = 1
	|			ТОГДА &ДокументПланирования
	|		КОГДА &РежимВводаДокументаПланирования = 2
	|			ТОГДА &Ссылка
	|	КОНЕЦ КАК ДокументРезервирования,
	|	&НазначениеРезерва_Контрагент КАК Контрагент,
	|	&НазначениеРезерва_ДоговорКонтрагента КАК ДоговорКонтрагента
	|ГДЕ
	|	&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОперативныйПлан.Резервирование)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ПолучитьОписаниеРеквизитовДокумента()
	
	ИменаРеквизитов = 
		"Ссылка,Регистратор,Дата,Период,Предназначение,ВидОперации,Раздел,ВидОперативногоПлана,
		|ЦФО,Проект,Организация,Контрагент,ДоговорКонтрагента,ПриходРасход,
		|СтатьяБюджета,Аналитика1,Аналитика2,Аналитика3,Аналитика4,Аналитика5,Аналитика6,ДокументПланирования,
		|ВалютаДокумента,МестоПоставки,Номенклатура,Менеджер,Приоритет,НеРегистрироватьПотребностьВНоменклатуре,
		|РежимВводаДокументаПланирования";
	
	СтруктураРеквизитов = Новый Структура(ИменаРеквизитов);
	
	СтруктураРеквизитов.Регистратор = "Ссылка";
	СтруктураРеквизитов.Раздел = "ВидОперации";
	СтруктураРеквизитов.Период = "Дата";
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Убрать лишние аналитики документа, не нужные для лимитирования
Процедура ОчиститьАналитикиПланирования(Запрос)
	
	Если Запрос.Параметры.ЭтоЛимиты Тогда
		
		// Аналитики для лимитирования не используются 
		Запрос.УстановитьПараметр("ПриходРасход", 				Перечисления.ВидыДвиженийПриходРасход.ПустаяСсылка());
		Запрос.УстановитьПараметр("Организация", 				Новый (Метаданные.ОпределяемыеТипы.Организации.Тип.Типы()[0]));
		Запрос.УстановитьПараметр("Контрагент", 				неопределено);
		Запрос.УстановитьПараметр("ДоговорКонтрагента", 		Новый (Метаданные.ОпределяемыеТипы.Договоры.Тип.Типы()[0]));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

// Функция возвращает структуру 
Функция ЗначенияСвойствОбъекта(Объект, СтруктураРеквизитов = неопределено)

	Результат = Новый Структура;
	Для каждого Поле Из СтруктураРеквизитов Цикл
		
		ПутьКДанным = Поле.Значение;
		Если НЕ ЗначениеЗаполнено(ПутьКДанным) Тогда
			ПутьКДанным = Поле.Ключ;
		КонецЕсли;
		
		Результат.Вставить(Поле.Ключ, Объект[ПутьКДанным]);
	КонецЦикла; 

	Возврат Результат;
	
КонецФункции

Функция СоответствиеВидаАналитикиРеквизитуФормы(ВидБюджета = неопределено)
	
	Результат = Новый Соответствие;
	
	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикиОперативногоПланирования.Ссылка КАК ВидАналитики,
	|	АналитикиОперативногоПланирования.Предопределенный КАК Предопределенный,
	|	ВЫБОР
	|		КОГДА АналитикиОперативногоПланирования.Ссылка = ЗНАЧЕНИЕ(Справочник.АналитикиОперативногоПланирования.ВидБюджета)
	|			ТОГДА ""Предназначение""
	|		КОГДА АналитикиОперативногоПланирования.Предопределенный
	|			ТОГДА АналитикиОперативногоПланирования.ИмяПредопределенныхДанных
	|		ИНАЧЕ АналитикиОперативногоПланирования.Наименование
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА АналитикиОперативногоПланирования.Предопределенный
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АналитикиОперативногоПланирования.ТипДанных
	|	КОНЕЦ КАК ТипДанных
	|ИЗ
	|	Справочник.АналитикиОперативногоПланирования КАК АналитикиОперативногоПланирования
	|ГДЕ
	|	АналитикиОперативногоПланирования.ПометкаУдаления = ЛОЖЬ";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТипДанных = ОперативноеПланированиеПовтИспУХ.ПолучитьТипАналитикиОперПланирования(Выборка.ВидАналитики, ВидБюджета);
		Если ТипДанных = неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеАналитики = Новый_ОписаниеАналитики(Выборка.Имя, ТипДанных);
		Результат.Вставить(Выборка.ВидАналитики, ОписаниеАналитики);
			
	КонецЦикла;
	
	Если Результат[Справочники.АналитикиОперативногоПланирования.Валюта] <> неопределено Тогда
		Результат[Справочники.АналитикиОперативногоПланирования.Валюта].ИмяРеквизитаШапки = "ВалютаДокумента";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция Новый_ОписаниеАналитики(Имя, Тип, ИмяРеквизитаШапки = неопределено)
	
	Если ИмяРеквизитаШапки = неопределено Тогда
		ИмяРеквизитаШапки = Имя;
	КонецЕсли;
	
	Возврат Новый Структура("Имя, Тип, ИмяРеквизитаШапки", Имя, Тип, ИмяРеквизитаШапки);
	
КонецФункции

Функция ПолучитьФорматЧисла(Разрядность, ПослеЗапятой)
	
	//
	Если Разрядность = "Единицы" Тогда
		ЧС = неопределено;
	ИначеЕсли Разрядность = "Тысячи" Тогда
		ЧС = 3;
	ИначеЕсли Разрядность = "Миллионы" Тогда
		ЧС = 6;
	ИначеЕсли Разрядность = "Миллиарды" Тогда
		ЧС = 9;
	Иначе
		Возврат "";
	КонецЕсли;
	
	//
	ЧДЦ = ПослеЗапятой;
	
	//"ЧДЦ=2; ЧС=3";
	Результат = "ЧДЦ=" + Формат(ЧДЦ,"ЧДЦ=0; ЧГ=0");
	Если ЧС <> неопределено Тогда
		Результат = Результат + "; ЧС=" + Формат(ЧС, "ЧДЦ=0; ЧГ=0");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеРазрядности(Разрядность)
	
	//
	Если Разрядность = "Единицы" Тогда
		Возврат "";
	ИначеЕсли Разрядность = "Тысячи" Тогда
		Возврат НСтр("ru='тыс.'");
	ИначеЕсли Разрядность = "Миллионы" Тогда
		Возврат НСтр("ru='млн.'");
	ИначеЕсли Разрядность = "Миллиарды" Тогда
		Возврат НСтр("ru='млрд.'");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Процедура ТаблицаОперацииБюджетовПланРезерв(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВТ_ТабличнаяЧасть";
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОперативныйПланДвиженияОперации.Ссылка КАК Ссылка,
	|	ОперативныйПланДвиженияОперации.Период КАК Период,
	|	ОперативныйПланДвиженияОперации.Номенклатура КАК Номенклатура,
	|	ОперативныйПланДвиженияОперации.Характеристика КАК Характеристика,
	|	ОперативныйПланДвиженияОперации.Цена КАК Цена,
	|	ОперативныйПланДвиженияОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОперативныйПланДвиженияОперации.Коэффициент КАК Коэффициент,
	|	ОперативныйПланДвиженияОперации.СтатьяБюджета КАК СтатьяБюджета,
	|	ОперативныйПланДвиженияОперации.Аналитика1 КАК Аналитика1,
	|	ОперативныйПланДвиженияОперации.Аналитика2 КАК Аналитика2,
	|	ОперативныйПланДвиженияОперации.Аналитика3 КАК Аналитика3,
	|	ОперативныйПланДвиженияОперации.Аналитика4 КАК Аналитика4,
	|	ОперативныйПланДвиженияОперации.Аналитика5 КАК Аналитика5,
	|	ОперативныйПланДвиженияОперации.Аналитика6 КАК Аналитика6,
	|	ОперативныйПланДвиженияОперации.МестоПоставки КАК МестоПоставки,
	|	ОперативныйПланДвиженияОперации.Валюта КАК Валюта,
	|	ОперативныйПланДвиженияОперации.ПриходРасход КАК ПриходРасход,
	|	ОперативныйПланДвиженияОперации.Контрагент КАК Контрагент,
	|	ОперативныйПланДвиженияОперации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОперативныйПланДвиженияОперации.ЦФО КАК ЦФО,
	|	ОперативныйПланДвиженияОперации.Проект КАК Проект,
	|	ОперативныйПланДвиженияОперации.Организация КАК Организация,
	|	ОперативныйПланДвиженияОперации.Комментарий КАК Комментарий,
	|	ОперативныйПланДвиженияОперации.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ОперативныйПланДвиженияОперации.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ОперативныйПланДвиженияОперации.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ОперативныйПланДвиженияОперации.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ОперативныйПланДвиженияОперации.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ОперативныйПланДвиженияОперации.Предназначение КАК Предназначение,
	|	ОперативныйПланДвиженияОперации.Менеджер КАК Менеджер,
	|	ОперативныйПланДвиженияОперации.Приоритет КАК Приоритет,
	|	ОперативныйПланДвиженияОперации.Сумма КАК Сумма,
	|	ОперативныйПланДвиженияОперации.СуммаИсходное КАК СуммаИсходное,
	|	ОперативныйПланДвиженияОперации.СуммаИзменение КАК СуммаИзменение,
	|	ОперативныйПланДвиженияОперации.Количество КАК Количество,
	|	ОперативныйПланДвиженияОперации.КоличествоИсходное КАК КоличествоИсходное,
	|	ОперативныйПланДвиженияОперации.КоличествоИзменение КАК КоличествоИзменение
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	Документ.ОперативныйПлан.ДвиженияОперации КАК ОперативныйПланДвиженияОперации
	|ГДЕ
	|	ОперативныйПланДвиженияОперации.Ссылка = &Ссылка
	|	И (ОперативныйПланДвиженияОперации.Сумма <> 0 
	|	ИЛИ ОперативныйПланДвиженияОперации.СуммаИсходное <> 0 
	|	ИЛИ ОперативныйПланДвиженияОперации.СуммаИзменение <> 0 
	|	ИЛИ ОперативныйПланДвиженияОперации.Количество <> 0 
	|	ИЛИ ОперативныйПланДвиженияОперации.КоличествоИсходное <> 0 
	|	ИЛИ ОперативныйПланДвиженияОперации.КоличествоИзменение <> 0)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	ИмяРегистра = "ТаблицаОперацииБюджетов";
	
	ТекстЗапроса = ТекстЗапроса_ПланыДокумента("ВТ_ДвиженияОперацииИзменение");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	// Таблица для движений по регистру
	ИмяРегистра = "ТаблицаОперацииБюджетов";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ДвиженияОперацииИзменение.Ссылка КАК Регистратор,
	|	ВТ_ДвиженияОперацииИзменение.Период КАК Период,
	|	ВТ_ДвиженияОперацииИзменение.Предназначение КАК Предназначение,
	|	ВТ_ДвиженияОперацииИзменение.Раздел КАК Раздел,
	|	ВТ_ДвиженияОперацииИзменение.ДокументПланирования КАК ДокументПланирования,
	|	ВТ_ДвиженияОперацииИзменение.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПартнеров КАК АналитикаПартнеров,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаПотребностей КАК АналитикаПотребностей,
	|	ВТ_ДвиженияОперацииИзменение.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	ВТ_ДвиженияОперацииИзменение.Валюта КАК Валюта,
	|	ВТ_ДвиженияОперацииИзменение.Сумма КАК Сумма,
	|	ВТ_ДвиженияОперацииИзменение.Количество КАК Количество
	|ИЗ
	|	ВТ_ДвиженияОперацииИзменение КАК ВТ_ДвиженияОперацииИзменение";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#Область ИсточникиДляКонтроляДокумента

Функция Источник_БюджетныеЛимитыРезервы(Объект)
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ВводЛимитов Тогда
		Результат = ПолучитьТаблицуЛимитов(Объект);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование Тогда
		Результат = ПолучитьТаблицуЛимитаДляРезерва(Объект);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.ПланированиеИРезервирование Тогда
		Результат = ПолучитьТаблицуЛимитаДляПланаРезерва(Объект);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Планирование Тогда
		Результат = ПолучитьТаблицуЛимитаДляПланирования(Объект);
	Иначе
		Возврат неопределено;
	КонецЕсли;
	
	// Параметры
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Дата", 						Объект.Дата);
	
	// Необходимые параметры
	ДопПараметры.Вставить("Ссылка", 					Объект.Ссылка);
	ДопПараметры.Вставить("Регистратор", 				Объект.Ссылка);
	ДопПараметры.Вставить("ЭтоНовый", 					НЕ ЗначениеЗаполнено(Объект.Ссылка));
	
	ДопПараметры.Вставить("ЭтоОперПлан", Истина);
	ФормированиеРезерва = Объект.ВидОперации = Перечисления.ВидыОперацийОперативныйПлан.Резервирование;
	ДопПараметры.Вставить("ЭтоФормированиеРезерва", ФормированиеРезерва);
	ДопПараметры.Вставить("ДатаКонтроляЛимита", Объект.Дата);
	
	//
	Источник = Новый Структура;
	
	//
	Источник.Вставить("Параметры", ДопПараметры);
	Источник.Вставить("ПланыДокумента", Результат);
	
	Возврат Источник;
	
КонецФункции

#КонецОбласти 

Процедура ТаблицаПлановССуммамиЛимитирования(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВТ_ТаблицаПлановССуммамиЛимитирования";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВТ_ДвиженияОперации.Предназначение КАК Предназначение,
	|	ВТ_ДвиженияОперации.ПериодОтчета КАК ПериодОтчета,
	|	ВТ_ДвиженияОперации.Валюта КАК Валюта,
	|	ВТ_ДвиженияОперации.АналитикаСтруктуры.ЦФО КАК ЦФО,
	|	ВТ_ДвиженияОперации.АналитикаСтруктуры.Проект КАК Проект,
	|	ВТ_ДвиженияОперации.АналитикаСтруктуры.Организация КАК Организация,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.СтатьяБюджета КАК СтатьяБюджета,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика1 КАК Аналитика1,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика2 КАК Аналитика2,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика3 КАК Аналитика3,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика4 КАК Аналитика4,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика5 КАК Аналитика5,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.Аналитика6 КАК Аналитика6,
	|	ВТ_ДвиженияОперации.АналитикаСтатейБюджетов.ПриходРасход КАК ПриходРасход,
	|	ВТ_ДвиженияОперации.АналитикаПартнеров.Контрагент КАК Контрагент,
	|	ВТ_ДвиженияОперации.АналитикаПартнеров.Договор КАК ДоговорКонтрагента,
	|	неопределено КАК ДокументПланирования,
	|	ВТ_ДвиженияОперации.ДокументПланирования КАК ДокументРезервирования,
	|	0 КАК Лимит,
	|	ВТ_ДвиженияОперации.Сумма КАК Зарезервировано,
	|	0 КАК Заявлено,
	|	0 КАК Исполнено
	|ПОМЕСТИТЬ ВТ_ТаблицаПлановССуммамиЛимитирования
	|ИЗ
	|	ВТ_ДвиженияОперацииИзменение КАК ВТ_ДвиженияОперации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры


// Функция - Текст запроса планы документа. Возвращает планы документа для операции ПланированиеРезервирование
//
// Параметры:
//  ВременнаяТаблица - Булево, Строка	 - Имя временной таблицы. Если "", тогда сохранение во временную таблицу не производится
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапроса_ПланыДокумента(ВременнаяТаблица = неопределено)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	&Предназначение КАК Предназначение,
	|	&ВидОперации КАК Раздел,
	|	ВложенныйЗапрос.ДокументПланирования КАК ДокументПланирования,
	|	Запрос.ПериодОтчета КАК ПериодОтчета,
	|	Запрос.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|	Запрос.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|	Запрос.АналитикаПартнеров КАК АналитикаПартнеров,
	|	Запрос.АналитикаПотребностей КАК АналитикаПотребностей,
	|	Запрос.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|	Запрос.Валюта КАК Валюта,
	|	Запрос.ЦФО КАК ЦФО,
	|	Запрос.Проект КАК Проект,
	|	Запрос.Организация КАК Организация,
	|	Запрос.СтатьяБюджета КАК СтатьяБюджета,
	|	Запрос.Аналитика1 КАК Аналитика1,
	|	Запрос.Аналитика2 КАК Аналитика2,
	|	Запрос.Аналитика3 КАК Аналитика3,
	|	Запрос.Аналитика4 КАК Аналитика4,
	|	Запрос.Аналитика5 КАК Аналитика5,
	|	Запрос.Аналитика6 КАК Аналитика6,
	|	ВложенныйЗапрос.Коэффициент * Запрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.Коэффициент * Запрос.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ПланыДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ТабличнаяЧасть.Период КАК ПериодОтчета,
	|		ВТ_ТабличнаяЧасть.АналитикаСтруктуры КАК АналитикаСтруктуры,
	|		ВТ_ТабличнаяЧасть.АналитикаСтатейБюджетов КАК АналитикаСтатейБюджетов,
	|		ВТ_ТабличнаяЧасть.АналитикаПартнеров КАК АналитикаПартнеров,
	|		ВТ_ТабличнаяЧасть.АналитикаПотребностей КАК АналитикаПотребностей,
	|		ВТ_ТабличнаяЧасть.АналитикаНоменклатуры КАК АналитикаНоменклатуры,
	|		ВТ_ТабличнаяЧасть.Валюта КАК Валюта,
	|		ВТ_ТабличнаяЧасть.ЦФО КАК ЦФО,
	|		ВТ_ТабличнаяЧасть.Проект КАК Проект,
	|		ВТ_ТабличнаяЧасть.Организация КАК Организация,
	|		ВТ_ТабличнаяЧасть.СтатьяБюджета КАК СтатьяБюджета,
	|		ВТ_ТабличнаяЧасть.Аналитика1 КАК Аналитика1,
	|		ВТ_ТабличнаяЧасть.Аналитика2 КАК Аналитика2,
	|		ВТ_ТабличнаяЧасть.Аналитика3 КАК Аналитика3,
	|		ВТ_ТабличнаяЧасть.Аналитика4 КАК Аналитика4,
	|		ВТ_ТабличнаяЧасть.Аналитика5 КАК Аналитика5,
	|		ВТ_ТабличнаяЧасть.Аналитика6 КАК Аналитика6,
	|		ВЫБОР
	|			КОГДА &РежимВводаДокументаПланирования = 2
	|					И ВТ_ТабличнаяЧасть.СуммаИсходное < -ВТ_ТабличнаяЧасть.СуммаИзменение
	|				ТОГДА -ВТ_ТабличнаяЧасть.СуммаИсходное
	|			ИНАЧЕ ВТ_ТабличнаяЧасть.СуммаИзменение
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА &РежимВводаДокументаПланирования = 2
	|					И ВТ_ТабличнаяЧасть.КоличествоИсходное < -ВТ_ТабличнаяЧасть.КоличествоИзменение
	|				ТОГДА ВТ_ТабличнаяЧасть.КоличествоИсходное
	|			ИНАЧЕ ВТ_ТабличнаяЧасть.КоличествоИзменение
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|	ГДЕ
	|		(ВТ_ТабличнаяЧасть.Количество <> 0
	|				ИЛИ ВТ_ТабличнаяЧасть.КоличествоИсходное <> 0
	|				ИЛИ ВТ_ТабличнаяЧасть.КоличествоИзменение <> 0
	|				ИЛИ ВТ_ТабличнаяЧасть.Сумма <> 0
	|				ИЛИ ВТ_ТабличнаяЧасть.СуммаИсходное <> 0
	|				ИЛИ ВТ_ТабличнаяЧасть.СуммаИзменение <> 0)) КАК Запрос,
	|	(ВЫБРАТЬ
	|		&Ссылка КАК ДокументПланирования,
	|		1 КАК Коэффициент
	|	ГДЕ
	|		&РежимВводаДокументаПланирования = 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&ДокументПланирования,
	|		1
	|	ГДЕ
	|		&РежимВводаДокументаПланирования = 1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&ДокументПланирования,
	|		1
	|	ГДЕ
	|		&РежимВводаДокументаПланирования = 2
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Ссылка,
	|		-1
	|	ГДЕ
	|		&РежимВводаДокументаПланирования = 2) КАК ВложенныйЗапрос
	|ГДЕ
	|	(Запрос.Сумма <> 0
	|			ИЛИ Запрос.Количество <> 0)";
	
	Если ВременнаяТаблица = "" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ПланыДокумента", "");
	ИначеЕсли ТипЗнч(ВременнаяТаблица) = Тип("Строка") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ПланыДокумента", "ПОМЕСТИТЬ "+ВременнаяТаблица);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 

#КонецЕсли
