#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция ПараметрыРасчетаСекции(ИмяСекции, ОписаниеГрафика) Экспорт 
	
	Результат = ФинансоваяМатематикаКлиентСервер.СтруктураПараметровРасчетаПроцентов();
	Если ИмяСекции = "КомиссииЗаОткрытие" Тогда
		
		Результат.ДатаНачала = ДатаНачалаДействия;
		Результат.ДатаОкончания = ДатаОкончанияДействия;
		Результат.ПравилоПереноса = ПереносДатСНерабочихДней;
		Результат.ИзменятьПроцентныйПериод = ИзменяетсяДлительностьПроцентногоПериодаПриПереносе;
		Результат.ПроизводственныйКалендарь = ПроизводственныеКалендари.ВыгрузитьКолонку("ПроизводственныйКалендарь");
		Результат.ПериодичностьУплаты = ПериодичностьУплатыПроцентов;
		Результат.ДатаОтсчетаПроцентныхПериодов = ДатаОтсчетаПроцентныхПериодов;
		Результат.ДатаПервойВыборки = ?(ГрафикРасчетов.Количество(), ГрафикРасчетов[0].Дата, ДатаНачалаДействия);
		Результат.ДатаНачалаДействия = ДатаНачалаДействия;
		Результат.ДатаПервогоПогашения = ДатаОкончанияПервогоПроцентногоПериода;
		Результат.ТочкаОтсчетаСдвигаДатыУплаты = ТочкаОтсчетаСдвигаДатыУплаты;
		Результат.СдвигДатыУплаты = СдвигДатыУплатыПроцентов;
		Результат.ТипПроцентнойСтавки = Перечисления.ТипыСтавокДляРасчетаПериодическихОпераций.Фиксированная;
		Результат.ПроцентнаяСтавка = ПроцентнаяСтавка;
		Результат.ВыплачиватьПроцентыПериодически = ВыплачиватьПроцентыПериодически;
		Результат.ВыплачиватьПроцентыВДатыПогашенияТела = ВыплачиватьПроцентыВДатыРаскрытия;
		Результат.ОперацииИзмененияБазы = ФинансовыеИнструментыУХ.ТаблицаИзмененияБазыИзГрафика(ГрафикРасчетов, ОписаниеГрафика);
		Результат.БазаДляРасчетаПроцентов = БазаДляРасчетаПроцентов;
		Результат.ГраницаФактическихДанных = ГраницаФактическихДанных;

		// Проанализируем график в части факта.		
		Результат.ДатаПоследнегоНачисления = ФинансовыеИнструментыУХ.ДатаПоследнегоНачисленияСекцииГрафика(ГрафикРасчетов, ОписаниеГрафика["КомиссииЗаОткрытие"], ГраницаФактическихДанных);		
		Результат.СуммаНакопленнойЗадолженности = ФинансовыеИнструментыУХ.ОстатокЗадолженностиСекцииГрафика(ГрафикРасчетов, ОписаниеГрафика["КомиссииЗаОткрытие"], ГраницаФактическихДанных);
			
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура ПересчитатьСекциюГрафика(ИмяСекции, ОписаниеГрафика, ОперацииГрафика, ДопПараметры = Неопределено, Отказ = Ложь) Экспорт
	
	Если ИмяСекции = "ОсновнойДолг" Тогда
		ФинансовыеИнструментыУХ.НачальноеЗаполнениеОсновногоДолга(ЭтотОбъект, ИмяСекции, ОписаниеГрафика, ОперацииГрафика);
	ИначеЕсли ИмяСекции = "КомиссииЗаОткрытие" Тогда
		ФинансовыеИнструментыУХ.ПересчитатьСекциюГрафика(ЭтотОбъект, ИмяСекции, ОписаниеГрафика, ОперацииГрафика, ДопПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВычисляемыеРеквизитыПоДаннымДоговора(ДоговорОбъект) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаНачалаДействия) Тогда
		ДатаНачалаДействия = ДоговорОбъект.ДатаНачалаДействия;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
		ИмяРеквизитаСрокДействия = ДоговорыКонтрагентовВстраиваниеУХКлиентСервер.ИмяРеквизитаСрокДействияДоговора(
			ТипЗнч(ДоговорКонтрагента));
		ДатаОкончанияДействия = ДоговорОбъект[ИмяРеквизитаСрокДействия];
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не ДополнительныеСвойства.Свойство("ОписаниеГрафика") Тогда
		ОписаниеГрафика = Документы.ВерсияСоглашенияАккредитив.ОписаниеГрафика();
		ДополнительныеСвойства.Вставить("ОписаниеГрафика", ОписаниеГрафика);
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовУХ.ПередЗаписьюВерсииСоглашения(ЭтотОбъект, Отказ, РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовУХ.ПриЗаписиВерсииСоглашения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	РаботаСДоговорамиКонтрагентовУХ.ПриКопированииВерсииСоглашения(ЭтотОбъект, ОбъектКопирования);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	ВидБюджетаДоговора = Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств;
	ДополнительныеСвойства.ДляПроведения.Вставить(
		"ПараметрыОперПланирования", ОперативноеПланированиеПовтИспУХ.ПолучитьПараметрыОперПланирования(ВидБюджетаДоговора));
	ДополнительныеСвойства.ДляПроведения.Вставить("КонтролироватьПериодыПланирования", Истина);
	ДополнительныеСвойства.ДляПроведения.Вставить("КонтролироватьПериодыЛимитирования", Ложь);
	
	Документы.ВерсияСоглашенияАккредитив.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ВыполнятьБюджетирование = РаботаСДоговорамиКонтрагентовУХ.ВыполнятьБюджетирование(РежимИспользованияГрафика);
	Если ВыполнятьБюджетирование Тогда
		КонтрольЛимитовУХ.ВыполнитьПроверкуНаличияПериодов(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РаботаСДоговорамиКонтрагентовУХ.ОтразитьВерсииРасчетов(ДополнительныеСвойства, Движения, Отказ);
	РаботаСДоговорамиКонтрагентовУХ.ОтразитьРасчетыСКонтрагентамиГрафики(ДополнительныеСвойства, Движения, Отказ);
	КонтрольЛимитовУХ.ОтразитьОперативныйПланПоБюджету(ДополнительныеСвойства, Движения, Отказ);
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаЛимитыПоБюджетам") Тогда
		КонтрольЛимитовУХ.ОтразитьЛимитыПоБюджетам(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУХ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);	
	ПроведениеСерверУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

	РаботаСДоговорамиКонтрагентовУХ.ОбновитьПозицииЗаявокПоГрафику(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
			
	ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);	
	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);	
	ПроведениеСерверУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	// Общая логика для всех договорных документов.
	РаботаСДоговорамиКонтрагентовУХ.ОбработкаЗаполненияВерсииСоглашения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	Если НЕ ГрафикРасчетов.Количество()
		И Сумма > 0 Тогда
		
		СтруктураДействий = Новый Структура;
		Секции = Новый Массив;
		Секции.Добавить("ОсновнойДолг");
		Секции.Добавить("КомиссииЗаОткрытие");
		СтруктураДействий.Вставить("Пересчитать", Новый Структура("СекцииГрафика", Секции));
		
		ОписаниеГрафика = Документы.ВерсияСоглашенияАккредитив.ОписаниеГрафика(ВидДоговораУХ);
		ОперацииГрафика = РаботаСДоговорамиКонтрагентовУХ.ОперацииГрафика(ОписаниеГрафика, ЭтотОбъект);
		ФинансовыеИнструментыУХ.ПересчетГрафика(ЭтотОбъект, 0, ОписаниеГрафика, ОперацииГрафика, СтруктураДействий);		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	РаботаСДоговорамиКонтрагентовУХ.ОбработкаПроверкиЗаполненияВерсииСоглашения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
