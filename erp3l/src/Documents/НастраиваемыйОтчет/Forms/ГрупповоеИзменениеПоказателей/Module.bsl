
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период			 = Параметры.Период;
	Организация		 = Параметры.Организация;
	Валюта			 = Параметры.ОсновнаяВалюта;
	Сценарий		 = Параметры.Сценарий;
	ВидОтчета		 = Параметры.ВидОтчета;
	ИсходныйПериод	 = Параметры.ИсходныйПериод;
	
	Если ЭтоАдресВременногоХранилища(Параметры.ТаблицаЯчеекАдрес) Тогда
		
		ТабПоказателей=ПолучитьИзВременногоХранилища(Параметры.ТаблицаЯчеекАдрес);
		ИсходнаяТаблицаАдрес=ПоместитьВоВременноеХранилище(ТабПоказателей,Новый УникальныйИдентификатор);
		
		ТаблицаЗначенийПоказателей.Загрузить(ТабПоказателей);	
	Иначе
		// Пропускаем загрузку таблицы значений показателей.
	КонецЕсли;

	Если Параметры.ОтДостигнутого Тогда
		Элементы.Декорация3.Заголовок = СтрЗаменить(Элементы.Декорация3.Заголовок,"+","-");
		Элементы.ГруппаТекущиеДанные.Видимость = Истина;
		ОтборДанных = Истина;
	    Элементы.ТаблицаЗначенийПоказателейДанныеДляРасчета.Видимость = Истина;
	Иначе
		Элементы.Декорация7.Заголовок = СтрЗаменить(Элементы.Декорация3.Заголовок,"+","-");
		Элементы.ГруппаИзменениеЗначений.Видимость = Истина;
		ИзменениеНаПроцент = Истина;
		Элементы.Процент.Доступность = Истина;
		Элементы.ТаблицаЗначенийПоказателейАбсКоррекция.Видимость = Истина; 
		Элементы.ТаблицаЗначенийПоказателейОтнКоррекция.Видимость = Истина; 	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЗначенияПоказателей(Команда)
	ЗаполнитьТаблицуЗначений();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЗначений()
	
	
	ИсходнаяТаблица = ПолучитьИзВременногоХранилища(ИсходнаяТаблицаАдрес);
	
	Если Период   = Справочники.Периоды.ПустаяСсылка() 
	 ИЛИ Сценарий = Справочники.Сценарии.ПустаяСсылка()
	  ИЛИ Организация = Справочники.Организации.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	Дельта = Период.ДатаНачала - УправлениеОтчетамиУХ.ПолучитьДатуИзПараметра(Период, "ПериодыНачало", -1);
	Индекс = Окр((ИсходныйПериод.ДатаНачала - Период.ДатаНачала) / Дельта, 0);

	Для каждого стр из ТаблицаЗначенийПоказателей Цикл		
		   стр.ЗначениеЧисло=0;
	КонецЦикла;
	
	
	ДатаНачалаАнализа = УправлениеОтчетамиУХ.ПолучитьДатуИзПараметра(Период, "ПериодыНачало", - ?(ЗначениеЗаполнено(ГлубинаАнализа), ГлубинаАнализа, 2));
	Запрос = Новый Запрос;
		
	/////////////////////////////////////////////////////////////////////////////////////
	///ПОДГОТОВИМ ТЕКСТ ВЛОЖЕННОГО ЗАПРОСА ПО РЕГИСТРАМ И ЕГО ПАРАМЕТРЫ
			
	ЗапросВерсии=Новый Запрос;
	ЗапросВерсии.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВерсииЗначенийПоказателей.Ссылка
	|ИЗ
	|	Справочник.ВерсииЗначенийПоказателей КАК ВерсииЗначенийПоказателей
	|ГДЕ
	|	ВерсииЗначенийПоказателей.Организация = &Организация
	|	И ВерсииЗначенийПоказателей.Проект = &Проект
	|	И ВерсииЗначенийПоказателей.Сценарий = &Сценарий
	|	И ВерсииЗначенийПоказателей.Валюта = &Валюта
	|	И ВерсииЗначенийПоказателей.ПериодОтчета.ДатаНачала МЕЖДУ &ДатаНачалаАнализа И &ДатаНачала
	|   И ВерсииЗначенийПоказателей.ПериодОтчета.Периодичность = &Периодичность";
		
	
	ЗапросВерсии.УстановитьПараметр("Сценарий",    Сценарий);
	ЗапросВерсии.УстановитьПараметр("ДатаНачала",  Период.ДатаНачала);
	ЗапросВерсии.УстановитьПараметр("ДатаНачалаАнализа", ДатаНачалаАнализа);
	ЗапросВерсии.УстановитьПараметр("ВидОтчета",   ВидОтчета);
	ЗапросВерсии.УстановитьПараметр("Организация", Организация);
	ЗапросВерсии.УстановитьПараметр("Проект", Проект);
	ЗапросВерсии.УстановитьПараметр("Валюта",      Валюта);
	ЗапросВерсии.УстановитьПараметр("Показатель",  ИсходнаяТаблица.ВыгрузитьКолонку("Показатель"));
	ЗапросВерсии.УстановитьПараметр("Периодичность", Период.Периодичность);
	
	ТекСписокВерсий=Новый СписокЗначений;
	ТекСписокВерсий.ЗагрузитьЗначения(ЗапросВерсии.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	ТабТекущихРаскрытий = ЗаполнитьТаблицуРаскрытий(ИсходнаяТаблица.ВыгрузитьКолонку("Показатель"), ТекСписокВерсий, Валюта);
	ТабТекущихРаскрытий.Колонки.Добавить("АбсКоррекция",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18, 5));
	ТабТекущихРаскрытий.Колонки.Добавить("ОтнКоррекция",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5, 2));
	ТабТекущихРаскрытий.Колонки.Удалить("ИтоговоеЗначение");
	ТабТекущихРаскрытий.Колонки.Добавить("ИтоговоеЗначение",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18, 5));
	ТабТекущихРаскрытий.Колонки.Добавить("ОтнТекущего",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5, 2));
    ТабТекущихРаскрытий.Колонки.Добавить("ТекущееЗначение",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18, 5));
	
	ТабТекущихРаскрытий.Колонки["Значение"].Имя="ЗначениеЧисло";

	
	Если ТекСписокВерсий.Количество()=0 Тогда	
		РассчитатьТаблицуПоказателей(ТабТекущихРаскрытий);
		Возврат;
	КонецЕсли;
	
	ОтборПоказателей=Новый Соответствие;
	ОтборПоказателей.Вставить("#### В (&Показатель)",Новый Структура("Показатель",ИсходнаяТаблица.ВыгрузитьКолонку("Показатель")));
	
	
		
	
	ДанныеЗапроса=Новый Структура;
	ДанныеЗапроса.Вставить("ВидОтчета",ВидОтчета);
	ДанныеЗапроса.Вставить("СписокВерсий",ТекСписокВерсий);
	ДанныеЗапроса.Вставить("ВыводитьСинтетику",Истина);
	ДанныеЗапроса.Вставить("ВыводитьАналитику",Ложь);
	ДанныеЗапроса.Вставить("ОтборПоказателей",ОтборПоказателей);
	ДанныеЗапроса.Вставить("ТолькоЧисловые",Истина);
	
	ДополнительныеПоля=Новый Соответствие;
	ДополнительныеПоля.Вставить("ВерсииЗначенийПоказателей.ПериодОтчета","ПериодОтчета");
	ДополнительныеПоля.Вставить("ВерсииЗначенийПоказателей.ПериодОтчета.ДатаНачала","ДатаНачала");
		
	ДанныеЗапроса.Вставить("ДополнительныеПоля",ДополнительныеПоля);
		
	СтруктураЗапроса=УправлениеОтчетамиУХ.ПодготовитьТекстЗапросаКРегистрам(ДанныеЗапроса);
	
	Если НЕ СтруктураЗапроса.Свойство("ТекстЗапроса") Тогда
		
		Возврат
		
	Иначе
		
		ТекстВложенногоЗапроса=СтруктураЗапроса.ТекстЗапроса;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;	
	
	Для Каждого СтрПараметр ИЗ СтруктураЗапроса.СтруктураПараметров Цикл
		
		Запрос.УстановитьПараметр(СтрПараметр.Ключ,СтрПараметр.Значение);
		
	КонецЦикла;
	
	/////////////////////////////////////////////////////////////////////////////////////////////////
	
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	СУММА(ЗначенияПоказателейОтчетов.Значение) КАК ЗначениеЧисло,
	|	ЗначенияПоказателейОтчетов.Показатель, 
	|	ЗначенияПоказателейОтчетов.ПериодОтчета КАК ПериодОтчета,
	|   ЗначенияПоказателейОтчетов.ПериодОтчета.ДатаНачала КАК Дата
	|ИЗ
	|	("+ТекстВложенногоЗапроса+") КАК ЗначенияПоказателейОтчетов";
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО 
	|ЗначенияПоказателейОтчетов.Показатель,
	|ЗначенияПоказателейОтчетов.ПериодОтчета";
	
	ИсходнаяТаблицаЗначенийПоказателя = Запрос.Выполнить().Выгрузить();
	
	Если НЕ  ИспользоватьПрогноз Тогда
		ОбщаяТаблицаЗначенийПоказателя = ИсходнаяТаблицаЗначенийПоказателя.Скопировать(Новый Структура("ПериодОтчета", Период));			
		ОбщаяТаблицаЗначенийПоказателя.Колонки.Добавить("КоэффициентДостоверности", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5, 2));
	Иначе
		Базис = Новый Структура("ДатаНачала, Период, КоличествоПериодов", Период.ДатаНачала, ,1);
		Если Период.Периодичность = Перечисления.Периодичность.Год Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.Год;
		ИначеЕсли Период.Периодичность = Перечисления.Периодичность.Полугодие Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.Полугодие;
		ИначеЕсли Период.Периодичность = Перечисления.Периодичность.Месяц Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.Месяц;
		ИначеЕсли Период.Периодичность = Перечисления.Периодичность.Декада Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.Декада;
		ИначеЕсли Период.Периодичность = Перечисления.Периодичность.День Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.День;
		ИначеЕсли Период.Периодичность = Перечисления.Периодичность.Квартал Тогда
			Базис.Период = ТипЕдиницыИнтервалаВремениАнализаДанных.Квартал;
		КонецЕсли;
		
		ОбщаяТаблицаЗначенийПоказателя = ИсходнаяТаблицаЗначенийПоказателя.СкопироватьКолонки();
		ОбщаяТаблицаЗначенийПоказателя.Колонки.Добавить("КоэффициентДостоверности", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5, 2));
		СтрокаСжатия    = "Показатель";
		СтруктураОтбора = Новый Структура("Показатель");
				
		НаборИсходныхДанных = ИсходнаяТаблицаЗначенийПоказателя.Скопировать(,СтрокаСжатия);
		НаборИсходныхДанных.Свернуть(СтрокаСжатия);
		
		Для Каждого Элемент Из НаборИсходныхДанных Цикл
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, Элемент);
			СтруктураОтвета = УправлениеОтчетамиУХ.РасчетТренда(ИсходнаяТаблицаЗначенийПоказателя.Скопировать(СтруктураОтбора, "Дата, ЗначениеЧисло"),  "Дата", "ЗначениеЧисло", , Базис, ГлубинаАнализа, Индекс);
			Если СтруктураОтвета <> Неопределено Тогда
				НоваяСтрока = ОбщаяТаблицаЗначенийПоказателя.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураОтбора);
				НоваяСтрока.ЗначениеЧисло = СтруктураОтвета.Значение;
				НоваяСтрока.КоэффициентДостоверности = Окр(СтруктураОтвета.Адекватность * 100, 2);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщаяТаблицаЗначенийПоказателя.Колонки.Добавить("ОтнКоррекция", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(5, 2));
	ОбщаяТаблицаЗначенийПоказателя.Колонки.Добавить("ИтоговоеЗначение", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18, 2));
	
	СтруктураОтбора = Новый Структура;	
			
	ТекТаблицаДанных = ОбщаяТаблицаЗначенийПоказателя.Скопировать( , "ЗначениеЧисло, Показатель, ОтнКоррекция, КоэффициентДостоверности, ИтоговоеЗначение");
			
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст="ВЫБРАТЬ *
	|Поместить ТекущиеПоказатели
	|ИЗ &ТекущиеЗначения КАК ТекущиеЗначения";
	
	Запрос.УстановитьПараметр("ТекущиеЗначения",РеквизитФормыВЗначение("ТаблицаЗначенийПоказателей"));
	Запрос.Выполнить();
	
	Запрос.Текст="ВЫБРАТЬ *
	|Поместить НовыеЗначения
	|ИЗ &НовыеЗначения КАК НовыеЗначения";
	
	Запрос.УстановитьПараметр("НовыеЗначения",ТекТаблицаДанных);
	Запрос.Выполнить();
		
	Запрос.Текст="ВЫБРАТЬ
	             |	ТекущиеПоказатели.Показатель,
	             |	ТекущиеПоказатели.ТекущееЗначение,
	             |	НовыеЗначения.ЗначениеЧисло,
	             |	НовыеЗначения.ОтнКоррекция,
	             |	НовыеЗначения.КоэффициентДостоверности,
	             |	НовыеЗначения.ИтоговоеЗначение
	             |ИЗ
	             |	ТекущиеПоказатели КАК ТекущиеПоказатели
	             |		ЛЕВОЕ СОЕДИНЕНИЕ НовыеЗначения КАК НовыеЗначения
	             |		ПО ТекущиеПоказатели.Показатель = НовыеЗначения.Показатель";
				 
	НоваяТаблицаДанных=Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗначенийПоказателей.Очистить();
	
	ОбщегоНазначенияУХ.ЗагрузитьВТаблицуЗначений(НоваяТаблицаДанных,ТаблицаЗначенийПоказателей);
	
	РассчитатьТаблицуПоказателей(ТабТекущихРаскрытий);
	
КонецПроцедуры

Процедура РассчитатьТаблицуПоказателей(ТабТекущихРаскрытий=Неопределено)
	
	Для Каждого СтрПоказатель ИЗ ТаблицаЗначенийПоказателей Цикл
		
		Если ИзменениеНаПроцент Тогда
			
			СтрПоказатель.ОтнКоррекция=Процент;
			РассчитатьСтрокуПоказателя(СтрПоказатель,"ОтнКоррекция");
			
		Иначе
			
			СтрПоказатель.АбсКоррекция=СуммаИзменения;
			РассчитатьСтрокуПоказателя(СтрПоказатель,"АбсКоррекция");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТабТекущихРаскрытий<>Неопределено Тогда
		Для Каждого СтрПоказатель ИЗ ТабТекущихРаскрытий Цикл
			
			ДанныеДляРасчета=?(ОтборДанных,СтрПоказатель.ЗначениеЧисло,СтрПоказатель.ТекущееЗначение);
			
			СтрПоказатель.ИтоговоеЗначение = ДанныеДляРасчета;
						
		КонецЦикла;
		
	КонецЕсли;
	
	АдресТабТекущихРаскрытий=ПоместитьВоВременноеХранилище(ТабТекущихРаскрытий,Новый УникальныйИдентификатор);
	
КонецПроцедуры // РассчитатьТаблицуПоказателей() 

Процедура РассчитатьСтрокуПоказателя(ТекДанные, ИзмененнаяКолонка)
	
	
	ДанныеДляРасчета=?(ОтборДанных,ТекДанные.ЗначениеЧисло,ТекДанные.ТекущееЗначение);
	
	Если ИзмененнаяКолонка="ОтнКоррекция" Тогда
		
		ТекДанные.АбсКоррекция=ДанныеДляРасчета * ТекДанные.ОтнКоррекция / 100;
		ТекДанные.ИтоговоеЗначение = ДанныеДляРасчета + ТекДанные.АбсКоррекция;
		
	ИначеЕсли ИзмененнаяКолонка="АбсКоррекция" Тогда
		
		ТекДанные.ОтнКоррекция=?(ДанныеДляРасчета=0,0,((ДанныеДляРасчета+ТекДанные.АбсКоррекция)/ДанныеДляРасчета)-1)*100;
		ТекДанные.ИтоговоеЗначение = ДанныеДляРасчета + ТекДанные.АбсКоррекция;
		
	ИначеЕсли  ИзмененнаяКолонка="ИтоговоеЗначение" Тогда
		
		ТекДанные.АбсКоррекция=ТекДанные.ИтоговоеЗначение-ДанныеДляРасчета;
		ТекДанные.ОтнКоррекция=?(ДанныеДляРасчета=0,0,((ДанныеДляРасчета+ТекДанные.АбсКоррекция)/ДанныеДляРасчета)-1)*100;
		
	КонецЕсли;

	ТекДанные.ОтнТекущего=?(ТекДанные.ТекущееЗначение=0,0,(ТекДанные.ИтоговоеЗначение-ТекДанные.ТекущееЗначение)/ТекДанные.ТекущееЗначение)*100;	
	
КонецПроцедуры // РассчитатьСтрокуПоказателя()

&НаКлиенте
Процедура ИзменениеНаСуммуПриИзменении(Элемент)
	Элементы.СуммаИзменения.Доступность = ИзменениеНаСумму;
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеНаПроцентПриИзменении(Элемент)
	Элементы.Процент.Доступность = ИзменениеНаПроцент;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПрогнозПриИзменении(Элемент)
	Элементы.ГлубинаАнализа.Доступность = ИспользоватьПрогноз;
	Элементы.ТаблицаЗначенийПоказателейКоэффициентДостоверности.Видимость = ИспользоватьПрогноз;	
		
КонецПроцедуры

&НаКлиенте
Процедура Декорация3Нажатие(Элемент)
	
	Если СтрНайти(Элемент.Заголовок,"+")>0 Тогда
	     Элементы.ГруппаТекущиеДанные.Видимость=Истина;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"+","-");
		 Элементы.ТаблицаЗначенийПоказателейДанныеДляРасчета.Видимость=Истина;
		 ОтборДанных=Истина;
	Иначе
		 Элементы.ГруппаТекущиеДанные.Видимость=Ложь;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"-","+");
		 Элементы.ТаблицаЗначенийПоказателейДанныеДляРасчета.Видимость=Ложь;
		 ОтборДанных=Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация7Нажатие(Элемент)
	
	Если СтрНайти(Элемент.Заголовок,"+")>0 Тогда
	     Элементы.ГруппаИзменениеЗначений.Видимость=Истина;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"+","-");
		 Элементы.ТаблицаЗначенийПоказателейАбсКоррекция.Видимость = Истина; 
		 Элементы.ТаблицаЗначенийПоказателейОтнКоррекция.Видимость = Истина; 
	Иначе
		 Элементы.ГруппаИзменениеЗначений.Видимость=Ложь;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"-","+");
         Элементы.ТаблицаЗначенийПоказателейАбсКоррекция.Видимость = Ложь; 
		 Элементы.ТаблицаЗначенийПоказателейОтнКоррекция.Видимость = Ложь; 

	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация5Нажатие(Элемент)
	
	Если СтрНайти(Элемент.Заголовок,"+")>0 Тогда
	     Элементы.ГруппаПрогнозДинамики.Видимость=Истина;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"+","-");
		 Элементы.ТаблицаЗначенийПоказателейКоэффициентДостоверности.Видимость = Истина; 
		  
	Иначе
		 Элементы.ГруппаПрогнозДинамики.Видимость=Ложь;
		 Элемент.Заголовок=СтрЗаменить(Элемент.Заголовок,"-","+");
         Элементы.ТаблицаЗначенийПоказателейКоэффициентДостоверности.Видимость = Ложь; 

	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СтруктураДанных=ПодготовитьПараметры();	
	
	Оповестить("ИзменитьПоказатели"
			   ,СтруктураДанных
			   , ЭтаФорма);
			   
	Если Не ПустаяСтрока(Комментарий) Тогда
	   
	   Для Каждого СтрПоказатель ИЗ ТаблицаЗначенийПоказателей Цикл
		   
		   СтрокаШаблона = НСтр("ru = 'Значение показателя: %1. '");
		   
		   СтрокаКомментария = "";
		   Если Не ПустаяСтрока(СтрокаШаблона) тогда
			   СтрокаКомментария = СтрШаблон(СтрокаШаблона, Строка(СтрПоказатель.ИтоговоеЗначение));	
		   КонецЕсли;
		   
		   ТекстКомментария = ?(ЗначениеЗаполнено(СтрПоказатель.ИтоговоеЗначение), СтрокаКомментария, "") + Комментарий;
		   Если ЗначениеЗаполнено(ТекстКомментария) Тогда
			   Комментарии = ВладелецФормы.ДобавитьКомментарийВСоответствие(СтрПоказатель.Показатель, ТекстКомментария).Скопировать();
		   КонецЕсли;
		   
		   Оповестить("ЗаписанКомментарий", СтрПоказатель.Показатель, ЭтаФорма);
		   
	   КонецЦикла;
	   
	КонецЕсли;
    ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметры()
	
	ТЗЗначений= РеквизитФормыВЗначение("ТаблицаЗначенийПоказателей");
	ТзЗначенийАдрес= ПоместитьВоВременноеХранилище(ТЗЗначений.Скопировать(),Новый УникальныйИдентификатор);
	
	СтруктураДанных=Новый Структура;
	СтруктураДанных.Вставить("РабочаяТаблица",ТзЗначенийАдрес);
	СтруктураДанных.Вставить("ОбработкаРаскрытий","Пересчитать");
	СтруктураДанных.Вставить("АдресТабТекущихРаскрытий",АдресТабТекущихРаскрытий);
    СтруктураДанных.Вставить("ОтборДанных",ОтборДанных);

	Возврат СтруктураДанных;
	
КонецФункции

&НаКлиенте
Процедура ГлубинаАнализаПриИзменении(Элемент)
	
	ЗаполнитьТаблицуЗначений();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТаблицуРаскрытий(ГруппаРаскрытия = Неопределено, СписокВерсий = Неопределено, ВалютаЗаполнения = Неопределено)
				
		Запрос=Новый Запрос;
		
		ДанныеЗапроса=Новый Структура;
		ДанныеЗапроса.Вставить("ВидОтчета",ВидОтчета);
		ДанныеЗапроса.Вставить("СписокВерсий",СписокВерсий);
		ДанныеЗапроса.Вставить("ВыводитьСинтетику",Ложь);
		ДанныеЗапроса.Вставить("ВыводитьАналитику",Истина);
		ДанныеЗапроса.Вставить("МаксКоличествоАналитик",ПараметрыСеанса.ЧислоДопАналитик);
		ДанныеЗапроса.Вставить("ПринудительнаяТипизация",Истина);
				
		Если НЕ ГруппаРаскрытия = Неопределено Тогда
			
			ОтборПоказателей=Новый Соответствие;
			ОтборПоказателей.Вставить("####.Ссылка В (&МассивПоказателей)",Новый Структура("МассивПоказателей",ГруппаРаскрытия));
			
			ДанныеЗапроса.Вставить("ОтборПоказателей",ОтборПоказателей);
						
		КонецЕсли;
		
		СтруктураЗапроса=УправлениеОтчетамиУХ.ПодготовитьТекстЗапросаКРегистрам(ДанныеЗапроса);
		
		Если НЕ СтруктураЗапроса.Свойство("ТекстЗапроса") Тогда
			
			ВнТаблицаРаскрытия = Новый ТаблицаЗначений;
			ВнТаблицаРаскрытия.Колонки.Добавить("Показатель",Новый ОписаниеТипов("СправочникСсылка.ПоказателиОтчетов"));
			ВнТаблицаРаскрытия.Колонки.Добавить("АналитикаВалюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
			ВнТаблицаРаскрытия.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка, Число, Булево, Дата", Новый КвалификаторыЧисла(18, 5), Новый КвалификаторыСтроки(500), Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
			ВнТаблицаРаскрытия.Колонки.Добавить("ЗначениеВалюта",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,5));
			ВнТаблицаРаскрытия.Колонки.Добавить("ГруппаРаскрытия", Новый ОписаниеТипов("СправочникСсылка.ГруппыРаскрытия"));
			ВнТаблицаРаскрытия.Колонки.Добавить("ЧислоАналитикГруппыРаскрытия", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(1));
			ВнТаблицаРаскрытия.Колонки.Добавить("ИтоговоеЗначение", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
			ВнТаблицаРаскрытия.Колонки.Добавить("Техническая", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
			
			Для Инд = 1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
				ВнТаблицаРаскрытия.Колонки.Добавить("Аналитика" + строка(Инд),Метаданные.ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.Тип);
			КонецЦикла;
			
			Возврат ВнТаблицаРаскрытия;
			
		КонецЕсли;
		
		Запрос.Текст=СтруктураЗапроса.ТекстЗапроса;
		
				
		Для Каждого СтрПараметр ИЗ СтруктураЗапроса.СтруктураПараметров Цикл
			
			Запрос.УстановитьПараметр(СтрПараметр.Ключ,СтрПараметр.Значение);
			
		КонецЦикла;
		
		ТекТаблицаРаскрытия=Запрос.Выполнить().Выгрузить();
		ТекТаблицаРаскрытия.Колонки.Добавить("Техническая", ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
				
		Возврат ТекТаблицаРаскрытия;					
		
КонецФункции




