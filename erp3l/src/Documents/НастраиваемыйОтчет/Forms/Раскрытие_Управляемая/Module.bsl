
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТЗ = ПолучитьИзВременногоХранилища(Параметры.СсылкаНаТаблицу).Получить();
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		
		МассивРеквизитов = Новый Массив;
	
		Для Каждого Колонка Из ТЗ.Колонки Цикл
			Если НЕ Колонка.ТипЗначения.СодержитТип(Тип("Структура")) Тогда
				МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ИсходнаяТаблицаРаскрытия", , Ложь));
				МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТаблицаРаскрытия", , Ложь));
			КонецЕсли;
		КонецЦикла;
		
		ИзменитьРеквизиты(МассивРеквизитов);
		
		ЗначениеВРеквизитФормы(ТЗ, "ИсходнаяТаблицаРаскрытия");
		ЗначениеВРеквизитФормы(ТЗ, "ТаблицаРаскрытия");
		
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МакетРаскрытияПодвал = Параметры.МакетРаскрытияПодвал;
	МакетРаскрытияШапка  = Параметры.МакетРаскрытияШапка;
	МакетРаскрытияСтрока = Параметры.МакетРаскрытияСтрока;
	
	Если ЗначениеЗаполнено(Параметры.ПоказателиРаскрытия) Тогда
		ТаблицаПоказателей.Очистить();
		Для Каждого Элемент ИЗ Параметры.ПоказателиРаскрытия Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаПоказателей.Добавить(), Элемент);
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЧисловыеПоказатели) Тогда
		Для Каждого Элемент Из Параметры.ЧисловыеПоказатели Цикл
			СписокКодовЧисловыхПоказателей.Добавить(Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Размерность          = Параметры.Размерность;
	УровеньТочности      = Параметры.УровеньТочности;
	
	ГруппаРаскрытия      = Параметры.ГруппаРаскрытия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СгенерироватьМакетРаскрытия();
	
КонецПроцедуры

&НаСервере
Функция СгенерироватьМакетРаскрытия() Экспорт
	
	ДоступныеПрефиксыАналитик = Новый Структура;
	
	КодГруппыРаскрытия = СокрЛП(ГруппаРаскрытия.Код);
	
	Макет = Новый ТабличныйДокумент;
	
	Вн_ТаблицаРаскрытия = РеквизитФормыВЗначение("ИсходнаяТаблицаРаскрытия");
	
	Если Вн_ТаблицаРаскрытия.Количество() = 0 Тогда
		
		ВывестиСекциюВМакет(Макет, МакетРаскрытияШапка);
		ВывестиСекциюВМакет(Макет, МакетРаскрытияСтрока);
		ВывестиСекциюВМакет(Макет, МакетРаскрытияПодвал);
		
	ИначеЕсли МакетРаскрытияСтрока <> Неопределено Тогда
		
		ДоступныеПрефиксыАналитик = Новый Соответствие();
		
		Для НомерАналитики = 1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			Префикс = КодГруппыРаскрытия + "_Аналитика" + НомерАналитики;
			Если Вн_ТаблицаРаскрытия.Колонки.Найти("Аналитика" + НомерАналитики) <> Неопределено Тогда
				ДоступныеПрефиксыАналитик.Вставить(Префикс, НомерАналитики);
			КонецЕсли;
		КонецЦикла;
		
		МакетТаблЧасти = Новый ТабличныйДокумент;
		СуммыПоПоказателям = Новый Структура;
		
		Для Каждого Стр Из Вн_ТаблицаРаскрытия Цикл // для каждой строки таблицы раскрытий
			МассивОбластей = Новый Массив;
			КопияМакетаРаскрытия = МакетРаскрытияСтрока.ПолучитьОбласть(); // создаем копию макета раскрытия
			
			Для Каждого Обл Из КопияМакетаРаскрытия.Области Цикл
				МассивОбластей.Добавить(Обл);
			КонецЦикла;
			
			Для Каждого Обл Из МассивОбластей Цикл // обходим по областям
				Если Обл.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Прямоугольник ИЛИ Обл.СодержитЗначение <> Истина Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяОбласти = Обл.Имя;
				ЭтоОбластьРеквизитаОднойИзАналитик = Ложь;
				НомерАналитики = Неопределено;
				
				Для Каждого Префикс Из ДоступныеПрефиксыАналитик Цикл
					Если СтрНайти(ИмяОбласти, Префикс.Ключ) = 1 Тогда
						ЭтоОбластьРеквизитаОднойИзАналитик = Истина;
						НомерАналитики = Префикс.Значение;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если ЭтоОбластьРеквизитаОднойИзАналитик Тогда
					ЗначениеАналитики = Стр["Аналитика" + НомерАналитики];
					КлючевоеБуквосочетание = "_Аналитика" + НомерАналитики;
					ИмяРеквизита = Сред(ИмяОбласти, СтрНайти(ИмяОбласти, КлючевоеБуквосочетание) + СтрДлина(КлючевоеБуквосочетание) + 1);
					Попытка // возможно несоответствие типов
						//Если глОсновнойЯзык <> 0 И НЕ ПустаяСтрока(ИмяРеквизита) И ВРЕГ(ИмяРеквизита) = "НАИМЕНОВАНИЕ" Тогда
						//	ИмяРеквизита = ИмяРеквизита + глОсновнойЯзык;
						//КонецЕсли;
						Обл.Значение = ?(ПустаяСтрока(ИмяРеквизита), ЗначениеАналитики, ЗначениеАналитики[ИмяРеквизита]);
					Исключение КонецПопытки;
					
					Обл.Имя = Обл.Имя + "_" + Вн_ТаблицаРаскрытия.Индекс(Стр);
					Обл.Расшифровка = Истина;
				Иначе
					Префикс = КодГруппыРаскрытия + "_Показатель_";
					
					Для Каждого Элемент Из ТаблицаПоказателей Цикл
						Пок = Элемент.Код;
						ПрефиксПоказателя = Префикс + СокрЛП(Пок);
						ДлинаПрефикса = СтрДлина(ПрефиксПоказателя);
						Если Лев(СокрЛП(ИмяОбласти), ДлинаПрефикса) = ПрефиксПоказателя И (Сред(ИмяОбласти, ДлинаПрефикса + 1, 1) = "" ИЛИ (Сред(ИмяОбласти, ДлинаПрефикса + 1, 1) = "_" И НЕ ОбщегоНазначенияУХ.ЕстьНеЦифрыВСтроке(Сред(ИмяОбласти, ДлинаПрефикса + 2)))) Тогда
							ЗначениеПоказателя = Стр[СокрЛП(Пок) + "_Отображение"];
							Попытка // возможно несоответствие типов
								Если ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
									Обл.ТипЗначения = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Размерность, УровеньТочности));
								КонецЕсли;
								Обл.Значение    = ЗначениеПоказателя;
							Исключение КонецПопытки;
							Обл.Имя = СокрЛП(Обл.Имя) + "_" + Вн_ТаблицаРаскрытия.Индекс(Стр);
							Обл.Расшифровка = Истина;
							
							СуммПок = 0;
							Если СуммыПоПоказателям.Свойство(СокрЛП(Пок), СуммПок) Тогда
								
								Если ТипЗнч(ЗначениеПоказателя) <> Тип("Число") Тогда
									Продолжить;
								КонецЕсли;
								
								Если Элемент.ВидИтога = Перечисления.ВидыИтоговПоказателя.Сумма
								 ИЛИ НЕ ЗначениеЗАполнено(Элемент.ВидИтога)
								 ИЛИ Элемент.ВидИтога = Перечисления.ВидыИтоговПоказателя.Среднее Тогда
									СуммыПоПоказателям[СокрЛП(Пок)] = СуммПок + ?(ТипЗнч(ЗначениеПоказателя) = Тип("Число"), ЗначениеПоказателя, 0);
								ИначеЕсли Элемент.ВидИтога = Перечисления.ВидыИтоговПоказателя.Максимум И СуммПок < ЗначениеПоказателя Тогда
										СуммыПоПоказателям[СокрЛП(Пок)] = ЗначениеПоказателя;
									ИначеЕсли Элемент.ВидИтога = Перечисления.ВидыИтоговПоказателя.Минимум И СуммПок > ЗначениеПоказателя Тогда
										СуммыПоПоказателям[СокрЛП(Пок)] = ЗначениеПоказателя;
								КонецЕсли;
							Иначе
								СуммыПоПоказателям.Вставить(СокрЛП(Пок), ?(ТипЗнч(ЗначениеПоказателя) = Тип("Число"), ЗначениеПоказателя, 0));
							КонецЕсли;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			МакетТаблЧасти.Вывести(КопияМакетаРаскрытия); // выводим строку - макет раскрытия со значениями в основной макет раскрытий
		КонецЦикла;
		
		Для Каждого Пок Из ТаблицаПоказателей Цикл
			Если Пок.ВидИтога = Перечисления.ВидыИтоговПоказателя.Среднее Тогда
				СуммыПоПоказателям[СокрЛП(Пок.Код)] = СуммыПоПоказателям[СокрЛП(Пок.Код)] / Вн_ТаблицаРаскрытия.Количество();
			КонецЕсли;
		КонецЦикла;
		
		ОбластьСКодомРаскрытия = Макет.Области.Найти(КодГруппыРаскрытия);
		Если ОбластьСКодомРаскрытия <> Неопределено Тогда
			ОбластьСКодомРаскрытия.Имя = "";
		КонецЕсли;
		Для Каждого Эл Из СуммыПоПоказателям Цикл
			ИмяПок = Эл.Ключ;
			
			Если МакетРаскрытияШапка <> Неопределено Тогда
				СоотвОбл = МакетРаскрытияШапка.Области.Найти(КодГруппыРаскрытия + "_" + ИмяПок + "_СУММА");
				Если СоотвОбл <> Неопределено И СоотвОбл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И СоотвОбл.СодержитЗначение = Истина Тогда
					Попытка
						СписокФорматов    = Документы.НастраиваемыйОтчет.ПолучитьСписокПараметровФормата(СоотвОбл.Формат);
						СписокФорматов.Вставить("ЧДЦ", Строка(УровеньТочности));
						СоотвОбл.Значение = Эл.Значение;
						СоотвОбл.Формат   = Документы.НастраиваемыйОтчет.ПреобразоватьВСтрокуФормата(СписокФорматов);
					Исключение КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			Если МакетРаскрытияПодвал <> Неопределено Тогда
				СоотвОбл = МакетРаскрытияПодвал.Области.Найти(КодГруппыРаскрытия + "_" + ИмяПок + "_СУММА");
				Если СоотвОбл <> Неопределено И СоотвОбл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И СоотвОбл.СодержитЗначение = Истина Тогда
					Попытка
						СписокФорматов    = Документы.НастраиваемыйОтчет.ПолучитьСписокПараметровФормата(СоотвОбл.Формат);
						СписокФорматов.Вставить("ЧДЦ", Строка(УровеньТочности));
						СоотвОбл.Значение = Эл.Значение;
						СоотвОбл.Формат   = Документы.НастраиваемыйОтчет.ПреобразоватьВСтрокуФормата(СписокФорматов);
					Исключение КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		ВывестиСекциюВМакет(Макет, МакетРаскрытияШапка);
		ВывестиСекциюВМакет(Макет, МакетТаблЧасти);
		ОбластьТабличнаяЧасть = Макет.Области.Найти(КодГруппыРаскрытия);
		Если ОбластьТабличнаяЧасть <> Неопределено Тогда
			ОбластьТабличнаяЧасть.Имя = "";
		КонецЕсли;
		Макет.Область(?(МакетРаскрытияШапка = Неопределено, 1, МакетРаскрытияШапка.ВысотаТаблицы + 1), 0, Макет.ВысотаТаблицы, 0).Имя = КодГруппыРаскрытия;
		ВывестиСекциюВМакет(Макет, МакетРаскрытияПодвал);
	КонецЕсли;
	Макет.Область(1, 0, Макет.ВысотаТаблицы, 0).Видимость = Истина;
	ПрименитьПараметрыОтображения();
		
	Возврат Макет;
	
КонецФункции


&НаСервере
Процедура ВывестиСекциюВМакет(Макет, Секция) Экспорт
	
	Если Секция <> Неопределено Тогда
		Макет.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьПараметрыОтображения()
	
	ТаблДок = Макет;
	
	Для Каждого Обл Из ТаблДок.Области Цикл
		
		Если Обл.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Прямоугольник ИЛИ Обл.СодержитЗначение <> Истина Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяОбласти = Обл.Имя;
		Если Прав(ИмяОбласти, 6) <> "_СУММА" Тогда
			
			КоординатаПоследнего_ = СтрНайти(ИмяОбласти, "_");
			
			Если КоординатаПоследнего_ > 0 Тогда
				Длина = СтрДлина(ИмяОбласти);
				КодПодчеркивания = КодСимвола("_");
				Для Инд = 0 По Длина - КоординатаПоследнего_ Цикл
					Если КодСимвола(ИмяОбласти, Длина - Инд) = КодПодчеркивания Тогда
						КоординатаПоследнего_ = Длина - Инд;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			
				Окончание = Сред(ИмяОбласти, КоординатаПоследнего_ + 1);
				
				Если НЕ ОбщегоНазначенияУХ.ЕстьНеЦифрыВСтроке(Окончание) И НЕ ПустаяСтрока(Окончание) Тогда
					КодПоказателя = Лев(ИмяОбласти, КоординатаПоследнего_ - 1);
					Вхождение_Показатель_ = СтрНайти(КодПоказателя, "_Показатель_");
					Если Вхождение_Показатель_ <>0 Тогда
						КодПоказателя = Сред(КодПоказателя, Вхождение_Показатель_ + СтрДлина("_Показатель_"));
					КонецЕсли;
				Иначе
					КодПоказателя = ИмяОбласти;
				КонецЕсли;
			Иначе
				КодПоказателя = ИмяОбласти;
			КонецЕсли;
			
			Если СписокКодовЧисловыхПоказателей.НайтиПоЗначению(КодПоказателя) <> Неопределено Тогда
				СписокПараметров = Документы.НастраиваемыйОтчет.ПолучитьСписокПараметровФормата(Обл.Формат);
				СписокПараметров.Вставить("ЧДЦ", УровеньТочности);
				Обл.Формат = Документы.НастраиваемыйОтчет.ПреобразоватьВСтрокуФормата(СписокПараметров);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
