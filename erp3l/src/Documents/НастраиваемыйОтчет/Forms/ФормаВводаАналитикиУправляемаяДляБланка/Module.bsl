
&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЕстьИзменение = Ложь;
	
	Для Инд=1 По ЧислоДопАналитик Цикл
		
		Если ИсходнаяАналитика.Свойство("Аналитика"+Инд) Тогда
			ЕстьИзменение = ЕстьИзменение ИЛИ НЕ (ЭтаФорма["Аналитика" + Инд] = ИсходнаяАналитика["Аналитика" + Инд]);
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(ЭтаФорма["Аналитика" + Инд]) Тогда
			
			ТекущаяАналитика.Вставить("Аналитика"+Инд,ЭтаФорма["Аналитика" + Инд]);
			
		//КонецЕсли;
		
	КонецЦикла;
	
	Если Операция = "Копирование" и НЕ ЕстьИзменение Тогда
		//начали копировать строку, но аналитику не поменяли. Это равносильно изменению текущей строки.
		//предупредим пользователя, что он может потерять старые данные
		Оповещение = Новый ОписаниеОповещения("КомандаОКЗавершение", ЭтотОбъект);
		ПоказатьВопрос(, Нстр("ru = 'Относительно копируемой строки не была изменена ни одна ключевая аналитика.
						|Значения в текущей строке раскрытия будут замещены на текущие. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ОбработатьЗакрытиеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОКЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если НЕ РезультатВопроса = КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    ОбработатьЗакрытиеФормы();

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормы()
    
    Перем Значение, ПараметрыОбработки, СтрПоказатель;
    
    Для Каждого СтрПоказатель Из ТекущаяАналитика.Показатели Цикл
		
		Значение=ЭтаФорма[СокрЛП(СтрПоказатель.Код)];
		
		Если ТипЗнч(Значение)=Тип("Число") Тогда
			
			Значение = Значение*?(СтрПоказатель.НеМасштабируется,1,ТекущийДелитель);
			СтрПоказатель.Вставить("Значение", Значение);
			
		Иначе
			
			СтрПоказатель.Вставить("Значение", Значение);
			
		КонецЕсли
		
	КонецЦикла;     
    
    ПараметрыОбработки = Новый Структура;
    ПараметрыОбработки.Вставить("Операция",				Операция);
    ПараметрыОбработки.Вставить("ТекущаяАналитика",		ИсходнаяАналитика);
    ПараметрыОбработки.Вставить("НоваяАналитика",		ТекущаяАналитика);
    
    Оповестить("ИзмененоРаскрытиеВТелеОтчета",ПараметрыОбработки,Параметры.ИдентификаторРодителя);
    
    Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаСервере
Функция ВернутьТекстЗаголовка(ДанныеОбъекта,НомерОсновногоЯзыка)
	
	ТекстЗаголовка=?(НомерОсновногоЯзыка=0,ДанныеОбъекта.Наименование,ДанныеОбъекта["Наименование"+НомерОсновногоЯзыка]);

	Если ПустаяСтрока(ТекстЗаголовка) Тогда
		
		Возврат ДанныеОбъекта.Наименование;
		
	Иначе
		
		Возврат ТекстЗаголовка;
		
	КонецЕсли;
	
КонецФункции // ВернутьТекстЗаголовка() 
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТекущаяАналитика", 	ИсходнаяАналитика); 
	Параметры.Свойство("ТекущаяАналитика", 	ТекущаяАналитика);
	Параметры.Свойство("Операция", 			Операция);
	Параметры.Свойство("Организация", 		Организация);
	Параметры.Свойство("Проект", 			Проект);
	
	ТекущийДелитель=Параметры.ТекущийДелитель;
	
	СтрокаШаблона = Нстр("ru = '%1 строки аналитического раскрытия'");
	
	ТекстЗаголовка = "";
	Если Не ПустаяСтрока(СтрокаШаблона) тогда
		ТекстЗаголовка = СтрШаблон(СтрокаШаблона, Операция);
	Иначе
		ТекстЗаголовка = Операция;
	КонецЕсли;
	
	Заголовок = ТекстЗаголовка;
	
	СтруктураАналитики = Новый Структура;	
	ГруппаРаскрытия = ТекущаяАналитика.Показатель.ГруппаРаскрытия;
	
	Если НЕ ЗначениеЗаполнено(ГруппаРаскрытия) Тогда
		
		ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не удалось определить группу аналитических раскрытий для выбранной ячейки.'"), Отказ,,СтатусСообщения.Информация);
		Возврат;
		
	КонецЕсли;
	
	Если ГруппаРаскрытия.Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияДенежныхСредств Тогда
		
		ИмяСправочникаСтатьи="СтатьиДвиженияДенежныхСредств";
		
	ИначеЕсли ГруппаРаскрытия.Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДоходовИРасходов Тогда
		
		ИмяСправочникаСтатьи="СтатьиДоходовИРасходов";
		
	ИначеЕсли ГруппаРаскрытия.Предназначение=Перечисления.ПредназначенияЭлементовСтруктурыОтчета.БюджетДвиженияРесурсов Тогда
		
		ИмяСправочникаСтатьи="СтатьиДвиженияРесурсов";
		
	КонецЕсли; 
		
	СтрАналитики=ОбщегоНазначенияУХ.ПолучитьДанныеГруппыРаскрытия(ТекущаяАналитика.Показатель);
	ЧислоДопАналитик=ПараметрыСеанса.ЧислоДопАналитик;
	
	Инд=1;
	
	НомерОсновногоЯзыка=Параметры.НомерОсновногоЯзыка;
	
	Для Каждого КлючИЗначение ИЗ СтрАналитики Цикл
		
		Если СтрНайти(КлючИЗначение.Ключ,"ВидАналитики")=0 Тогда
			
			Продолжить;
			
		ИначеЕсли СтрНайти(КлючИЗначение.Ключ,"ВидАналитикиВалютаДт")>0 Тогда
			
			ТекВидАналитики=КлючИЗначение.Значение;
			
			Если НЕ ЗначениеЗаполнено(ТекВидАналитики.ВидАналитики) Тогда
				Элементы["ГруппаАналитикаВалюта"].Видимость = Ложь;
			Иначе
				
				Элементы["НадписьАналитикаВалюта"].Заголовок = ВернутьТекстЗаголовка(ТекВидАналитики,НомерОсновногоЯзыка);
				Элементы["ГруппаАналитикаВалюта"].Видимость=Истина;
				Элементы["АналитикаВалюта"].ОграничениеТипа = ТекВидАналитики.ТипЗначения;
				
				ЭтаФорма["АналитикаВалюта"] = ТекВидАналитики.ТипЗначения.ПривестиЗначение(Неопределено);
				
				Если ТекущаяАналитика.Свойство("ИмяГруппировки") И СтрНайти(ТекущаяАналитика.ИмяГруппировки,"Аналитика")>0 Тогда
					
					Если НЕ (Операция="Добавление" И ТекущаяАналитика.ИмяГруппировки="АналитикаВалюта") Тогда
						
						ТекущаяАналитика.Свойство("АналитикаВалюта",ЭтаФорма["АналитикаВалюта"]);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если Инд<=ЧислоДопАналитик Тогда
				
				ТекВидАналитики=КлючИЗначение.Значение;
				
				Если НЕ ЗначениеЗаполнено(ТекВидАналитики.ВидАналитики) Тогда
					Элементы["ГруппаАналитика" + Инд].Видимость = Ложь;
				Иначе
					Элементы["НадписьАналитика" + Инд].Заголовок = ВернутьТекстЗаголовка(ТекВидАналитики,НомерОсновногоЯзыка);
					Элементы["ГруппаАналитика" + Инд].Видимость=Истина;
					Элементы["Аналитика" + Инд].ОграничениеТипа = ТекВидАналитики.ТипЗначения;
					
					ЭтаФорма["Аналитика" + Инд] = ТекВидАналитики.ТипЗначения.ПривестиЗначение(Неопределено);
					
					Если ТекущаяАналитика.Свойство("ИмяГруппировки") И СтрНайти(ТекущаяАналитика.ИмяГруппировки,"Аналитика")>0 Тогда
						
						Если НЕ (Операция="Добавление" И ТекущаяАналитика.ИмяГруппировки="Аналитика" + Инд) Тогда
							
							ТекущаяАналитика.Свойство("Аналитика" + Инд,ЭтаФорма["Аналитика" + Инд]);
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ТекВидАналитики.Свойство("Владелец") Тогда
					
					МассивОтбора=Новый Массив;
					
					СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец", ТекВидАналитики.Владелец);
					МассивОтбора.Добавить(СвязьВладелец);
					
					НовыеСвязи = Новый ФиксированныйМассив(МассивОтбора);
					
					Элементы["Аналитика" + Инд].СвязиПараметровВыбора=НовыеСвязи;
					
				КонецЕсли;
				
				Инд=Инд+1;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивРеквизитов = Новый Массив;
	
	Для каждого СтрПоказатель из ТекущаяАналитика.Показатели Цикл
				
		Если ((НЕ ЗначениеЗаполнено(СтрПоказатель.ТипЗначения)) 
			ИЛИ СтрПоказатель.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Число) Тогда
			ОписаниеТипов = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповЧисла(18,5);
		ИначеЕсли СтрПоказатель.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Булево Тогда
			ОписаниеТипов = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево();
		ИначеЕсли СтрПоказатель.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Дата Тогда
			ОписаниеТипов = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя);
		ИначеЕсли СтрПоказатель.ТипЗначения = Перечисления.ТипыЗначенийПоказателейОтчетов.Строка Тогда
			ОписаниеТипов = ОбщегоНазначенияУХ.ПолучитьОписаниеТиповСтроки(1000);
		КонецЕсли;
		
		Реквизит = Новый РеквизитФормы(СокрЛП(СтрПоказатель.Код), ОписаниеТипов,, СтрПоказатель.Наименование);
		
		МассивРеквизитов.Добавить(Реквизит); 
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Если НЕ Операция = "Добавление" Тогда 
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма,ИсходнаяАналитика);
		
	КонецЕсли;
	
	Для каждого СтрПоказатель из ТекущаяАналитика.Показатели Цикл
		
		Если СтрПоказатель.Показатель=ТекущаяАналитика.Показатель Тогда
			
			Показатель = ЭтаФорма.Элементы.Добавить(СокрЛП(СтрПоказатель.Код), Тип("ПолеФормы"), Элементы.ГруппаПоказателей);
			Показатель.Вид = ВидПоляФормы.ПолеВвода;
			Показатель.Заголовок = ?(НомерОсновногоЯзыка=0,Стрпоказатель.Наименование,ВернутьТекстЗаголовка(СтрПоказатель.Показатель.Ссылка,НомерОсновногоЯзыка));
			Показатель.ПутьКДанным = СокрЛП(СтрПоказатель.Код);
			
			Показатель.ТолькоПросмотр=СтрПоказатель.НеРедактируется;
			
			Если НЕ Операция = "Добавление" Тогда
				ЭтаФорма[СокрЛП(СтрПоказатель.Код)] = ИсходнаяАналитика.Значение;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаНачалоВыбора(Инд, Элемент, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(СтрАналитики["ВидАналитики"+Инд].ВидАналитики) Тогда
		
		СтандартнаяОбработка=Ложь;
		Возврат;
		
	ИначеЕсли СтрАналитики["ВидАналитики"+Инд].ТипЗначения.СодержитТип(Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ")) Тогда
		
		СтандартнаяОбработка = Ложь;
    	Владелец = СтрАналитики["ВидАналитики"+Инд].ВидАналитики;
    	СтруктураПараметров = Новый Структура;
    	СтруктураПараметров.Вставить("Отбор", Новый Структура("Владелец", Владелец));
    	    	
    	Если ЗначениеЗаполнено(ЭтаФорма["Аналитика"+Инд]) Тогда
    		СтруктураПараметров.Вставить("НачальноеЗначениеВыбора", ЭтаФорма["Аналитика"+Инд]);
    	КонецЕсли;
    	
    	ОткрытьФорму("Справочник.ПроизвольныйКлассификаторУХ.ФормаВыбора", СтруктураПараметров, Элемент);
		
	ИначеЕсли СтрАналитики["ВидАналитики"+Инд].ТаблицаАналитики="Справочник.Проекты" И ЗначениеЗаполнено(Проект) Тогда
		
		СтандартнаяОбработка = Ложь;
     	СтруктураПараметров = Новый Структура;
    	СтруктураПараметров.Вставить("Отбор", Новый Структура("Родитель,Проект", Проект,Ложь));
    	    	
    	Если ЗначениеЗаполнено(ЭтаФорма["Аналитика"+Инд]) Тогда
    		СтруктураПараметров.Вставить("НачальноеЗначениеВыбора", ЭтаФорма["Аналитика"+Инд]);
    	КонецЕсли;
    	
    	ОткрытьФорму("Справочник.Проекты.ФормаВыбора", СтруктураПараметров, Элемент);
		
	ИначеЕсли СтрАналитики["ВидАналитики"+Инд].ТаблицаАналитики="Справочник.ДоговорыКонтрагентов" Тогда
		
		СтандартнаяОбработка = Ложь;
     	СтруктураПараметров = Новый Структура;
    	СтруктураПараметров=Новый Структура("Отбор",Новый Структура("Организация",Организация));
    	    	
    	Если ЗначениеЗаполнено(ЭтаФорма["Аналитика"+Инд]) Тогда
    		СтруктураПараметров.Вставить("НачальноеЗначениеВыбора", ЭтаФорма["Аналитика"+Инд]);
    	КонецЕсли;
    	
    	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", СтруктураПараметров, Элемент);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(ИмяСправочникаСтатьи) Тогда
		
		СтандартнаяОбработка=Ложь;
		ОткрытьФорму("Справочник."+ИмяСправочникаСтатьи+".ФормаВыбора",Новый Структура("ГруппаРаскрытия",ГруппаРаскрытия),Элемент);
		
	Иначе
		
		АналитикаНачалоВыбора(1, Элемент, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора(2, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора(3, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора(4, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаВалютаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора("ВалютаДт", Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Аналитика5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора(5, Элемент, СтандартнаяОбработка);
		
КонецПроцедуры

&НаКлиенте
Процедура Аналитика6НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АналитикаНачалоВыбора(6, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры
