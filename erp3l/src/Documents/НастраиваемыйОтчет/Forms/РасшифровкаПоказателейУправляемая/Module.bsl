
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РабочийОбъект=ОбщегоНазначенияУХ.ПолучитьРабочийОбъект(Параметры.РабочийОбъектАдрес);
	// Проверка корректности получения объекта.
	Если РабочийОбъект = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось получить рабочий объект для расшифровки'");
		ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
		Возврат;	
	Иначе
		// Выполняем далее.
	КонецЕсли;
	ИспользуетсяДляРасшифровкиАналитики = ЗначениеЗаполнено(Параметры.СтруктураОтбора);
		
	// Проверим на заполнение данных через трансляционные корректировки
	
	мМассивПоказателей = РабочийОбъект.ВернутьМассивПоказателейПоКодам(Параметры.МассивКодовПоказателей,"Таблица");
	
	Если мМассивПоказателей.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиКонсолидация
		ИЛИ РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиСвернувПоАналитикам
		ИЛИ РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиСвернувПоПроектам
		ИЛИ РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиСвернувПоОрганизациямПроекта
		ИЛИ РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиСвернувПоПериоду
		ИЛИ РабочийОбъект.СпособФормированияОтчета = Перечисления.СпособыФормированияОтчетов.АвтоматическиЭлиминация Тогда
		
		мМассивПоказателей = РабочийОбъект.ВернутьМассивПоказателейПоКодам(Параметры.МассивКодовПоказателей);
		ПолеТабличногоДокумента.Вывести(РабочийОбъект.ВернутьТабличныйДокументРасшифровки(Истина, , мМассивПоказателей));
		
		Элементы.ОтображатьНаименования.Видимость=Ложь;
		
	Иначе
		
		Для Индекс=0 По мМассивПоказателей.Количество()-1 Цикл
			
			Показатель=мМассивПоказателей[Индекс].Ссылка;
			
			ИмяТаблицыСинтетики=?(РабочийОбъект.мТаблицаВидовАналитикВидаОтчета.Количество()=0,"ЗначенияПоказателейОтчетовСинтетика","ЗначенияПоказателейОтчетов"+РабочийОбъект.мТаблицаВидовАналитикВидаОтчета.Количество());
			
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗначенияПоказателейОтчетовСинтетика.Версия,
			|	ЗначенияПоказателейОтчетовСинтетика.Версия.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрСведений."+ИмяТаблицыСинтетики+" КАК ЗначенияПоказателейОтчетовСинтетика
			|ГДЕ
			|	ЗначенияПоказателейОтчетовСинтетика.Версия.ЭкземплярОтчета = &ЭкземплярОтчета
			|	И ЗначенияПоказателейОтчетовСинтетика.Показатель = &Показатель
			|	И (ЗначенияПоказателейОтчетовСинтетика.Версия.Регистратор ССЫЛКА Документ.Трансляция
			|			ИЛИ ЗначенияПоказателейОтчетовСинтетика.Версия.Регистратор ССЫЛКА Документ.ТрансформационнаяКорректировка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗначенияПоказателейОтчетовСинтетика.Версия.Код УБЫВ";
			
			Запрос.УстановитьПараметр("ЭкземплярОтчета",РабочийОбъект.Ссылка);
			Запрос.УстановитьПараметр("Показатель",Показатель);
			
			Результат=Запрос.Выполнить().Выбрать();
			
			Если НЕ (Результат.Следующий() И ПодготовитьРасшифровкуДанныхТрансформации(Результат.Регистратор,Показатель)) Тогда
				
				мМассивПоказателей = РабочийОбъект.ВернутьМассивПоказателейПоКодам(Параметры.МассивКодовПоказателей,"Таблица");
				ТабПримечаний=РабочийОбъект.ВернутьТаблицуПримечаний(мМассивПоказателей);
				
				Если ТабПримечаний.Количество()>0 Тогда
					
					ЗначениеВРеквизитФормы(ТабПримечаний,"ТаблицаПримечаний");
					ЗначениеВРеквизитФормы(мМассивПоказателей,"ТаблицаПоказателей");
					
				Иначе
					
					СтруктураРасшифровка=ПолучитьСтруктуруРасшифровки(РабочийОбъект,мМассивПоказателей[Индекс], Параметры.СтруктураОтбора);
					
					ТекстОшибки=СтруктураРасшифровка.ТекстОшибки;			
					ПолеТабличногоДокумента.Вывести(СтруктураРасшифровка.ТабДокумент);
					
					Если СтруктураРасшифровка.Свойство("КодыНаименованияОперандов") Тогда
						
						Для Каждого Строка ИЗ СтруктураРасшифровка.КодыНаименованияОперандов Цикл
							
							НоваяСтрока=КодыНаименованияОперандов.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруРасшифровки(РабочийОбъект,Показатель,СтруктураОтбора=Неопределено)
	
	 ОбработкаРасшифровки=Обработки.РасшифровкаРассчитанныхЗначений.Создать();
	 
	 Возврат ОбработкаРасшифровки.ОбработатьРасшифровкуАналитикПоказателяПоПравилуОбработки(РабочийОбъект.ПодготовитьСтруктуруПеременныхДляРасчета(),Показатель,СтруктураОтбора);
	
КонецФункции // ПолучитьСтруктуруРасшифровки()
 
Функция ПодготовитьРасшифровкуДанныхТрансформации(ДокументТрансляции,Показатель)
	
	ОбработкаОбъект=Обработки.КорректировкиЗначенийПоказателей.Создать();
	
	ЗаполнитьЗначенияСвойств(ОбработкаОбъект,ДокументТрансляции);
	
	Если ТипЗнч(ДокументТрансляции)=Тип("ДокументСсылка.Трансляция") Тогда
		
		ОбработкаОбъект.ИмяОбъектаМетаданных="Трансляция";
		
	ИначеЕсли ТипЗнч(ДокументТрансляции)=Тип("ДокументСсылка.ТрансформационнаяКорректировка") Тогда
		
		ОбработкаОбъект.ИмяОбъектаМетаданных="ТрансформационнаяКорректировка";
		
	КонецЕсли;
	
	ОбработкаОбъект.ИнициализироватьКонтекст();
	
	Если ОбработкаОбъект.мСоответствиеДляПоискаПоСсылке[Показатель]=Неопределено Тогда
		
		Возврат Ложь;
		
	Иначе
		
		АдресХранилищаПеременныхДляРасчета=ПоместитьВоВременноеХранилище(ОбщегоНазначенияУХ.ПолучитьСтруктуруРеквизитовОбъекта(ОбработкаОбъект,ОбработкаОбъект.ПодготовитьСтруктуруПеременныхДляРасчета()),ЭтаФорма.УникальныйИдентификатор);
		ОсновнаяВалюта=ДокументТрансляции.ОсновнаяВалюта;
		
		Возврат Истина;
		
	КонецЕсли;
		
КонецФункции // РасшифроватьДанныеТрансляции() 


&НаКлиенте
Процедура ОтобразитьПримечание(Операнд)
		
	ТаблДок = Неопределено;
	ИспользуемаяИБ = Неопределено;
	ДанныеРасшифровки=РасшифроватьОперанд(Операнд, ИспользуемаяИБ);
	
	Если ТипЗнч(ДанныеРасшифровки)=Тип("ТабличныйДокумент") Тогда
		
		ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаРасшифровкиВИБ_Управляемая", Новый Структура("Результат, ИспользуемаяИБ", ДанныеРасшифровки, ИспользуемаяИБ));
		
	ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Структура") Тогда
		
		Если ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии")
			ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии") Тогда
			
			ОткрытьФорму("Отчет.ОтчетПоРегиструБухгалтерииБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
			
		ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрНакопления")
			ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрНакопления")Тогда
			
			ОткрытьФорму("Отчет.ОтчетПоРегиструНакопленияБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
			
		ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеПроизвольныйЗапрос") Тогда
			
			Имя = "Отчет.ОтчетПоПроизвольномуЗапросуВИБ.Форма.ФормаОтчета";
			ОткрытьФорму(Имя, ДанныеРасшифровки, , Новый УникальныйИдентификатор);
			
		ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеПроизвольныйЗапрос") Тогда
			
			ОткрытьФорму("Отчет.ОтчетПоПроизвольномуЗапросуТек.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
			
		КонецЕсли;
		
	Иначе
		ОткрытьДокументыРасшифровки();
	КонецЕсли;
			
КонецПроцедуры // ОтобразитьПримечание(); 

&НаСервере
Процедура ВывестиРасшифровку()
	
	МассивПоказателей=РеквизитФормыВЗначение("ТаблицаПоказателей");
	
	РабочийОбъект=ОбщегоНазначенияУХ.ПолучитьРабочийОбъект(Параметры.РабочийОбъектАдрес);
	
	СтруктураРасшифровка=ПолучитьСтруктуруРасшифровки(РабочийОбъект,МассивПоказателей[0], Параметры.СтруктураОтбора);
				
	ТекстОшибки=СтруктураРасшифровка.ТекстОшибки;			
	ПолеТабличногоДокумента.Вывести(СтруктураРасшифровка.ТабДокумент);
	
	Если СтруктураРасшифровка.Свойство("КодыНаименованияОперандов") Тогда
		
		Для Каждого Строка ИЗ СтруктураРасшифровка.КодыНаименованияОперандов Цикл
			
			НоваяСтрока=КодыНаименованияОперандов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	МассивПоказателей=Неопределено;
			
КонецПроцедуры // ВывестиРасшифровку() 

&НаКлиенте
Процедура ТаблицаПримечаний_ПослеВыбора(ЗначениеВыбора, ДополнительныеПараметры) Экспорт
	// Обработаем выбранное значение.
	ЗакрыватьФорму = Ложь;
	Если НЕ (ЗначениеВыбора=Неопределено ИЛИ ЗначениеВыбора.Значение=0) Тогда
		ОтобразитьПримечание(ЗначениеВыбора.Значение);
		ЗакрыватьФорму = Истина;
	Иначе
		ВывестиРасшифровку();
		ТекстОшибки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ТекстОшибки", "");
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			Сообщить(ТекстОшибки);
			Если ПолеТабличногоДокумента.ВысотаТаблицы=0 Тогда
				ЗакрыватьФорму = Истина;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	// Закроем форму, если переданы некорректные данные.
	Если ЗакрыватьФорму Тогда
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть();
		Иначе
			// Форма уже закрыта.
		КонецЕсли;
	Иначе
		// Не требуется закрытие.
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ПустаяСтрока(АдресХранилищаПеременныхДляРасчета) Тогда
		
		СтруктураПараметров=Новый Структура;
		СтруктураПараметров.Вставить("ПоказательОтчета",Показатель);
		СтруктураПараметров.Вставить("АдресХранилищаПеременныхДляРасчета",АдресХранилищаПеременныхДляРасчета);
		СтруктураПараметров.Вставить("мТекущаяВалюта",ОсновнаяВалюта);
		СтруктураПараметров.Вставить("СтруктураОтбора",Параметры.СтруктураОтбора);
	
		ОткрытьФорму("Обработка.РасшифровкаРассчитанныхЗначений.Форма",СтруктураПараметров);
		Закрыть();
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		
		Сообщить(ТекстОшибки);
		
		Если ПолеТабличногоДокумента.ВысотаТаблицы=0 Тогда
			
			Отказ=Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицаПримечаний.Количество()>0 Тогда
		
		СписокДействий=Новый СписокЗначений;
		СписокДействий.Добавить(0, НСтр("ru = 'Стандартная расшифровка'"));
		Для Каждого Примечание ИЗ ТаблицаПримечаний Цикл
			
			СписокДействий.Добавить(Примечание.Ссылка,Примечание.НаименованиеПоказателя+": "+Примечание.НаименованиеОтчета+", "+Примечание.НаименованиеПоказателяОтбора);
			
		КонецЦикла;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ТекстОшибки", ТекстОшибки);
		Оповещение = Новый ОписаниеОповещения("ТаблицаПримечаний_ПослеВыбора", ЭтотОбъект, СтруктураПараметров);
        СписокДействий.ПоказатьВыборЭлемента(Оповещение, НСтр("ru = 'Выберите способ расшифровки'"));

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОперанда(Операнд)
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетов.Ссылка,
	|	ИсточникиДанныхДляРасчетов.СпособПолучения,
	|	ИсточникиДанныхДляРасчетов.ПоказательТекущегоОтчета,
	|	ИсточникиДанныхДляРасчетов.ПоказательОтбор.Код КАК ПоказательОтборКод,
	|	ИсточникиДанныхДляРасчетов.ПравилаИспользованияПолейЗапроса.(
	|		Ссылка,
	|		НомерСтроки,
	|		Поле,
	|		Синоним,
	|		АналитикаОперанда,
	|		КодАналитики,
	|		НастройкаСоответствия,
	|		РеквизитАналитики,
	|		ТаблицаАналитики,
	|		ТаблицаАналитикиВИБ,
	|		НеИспользоватьДляСинхронизации,
	|		СпособЗаполнения,
	|		ФиксированноеЗначение,
	|		РеквизитОбъекта
	|	) КАК ПравилаИспользованияПолейЗапроса
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК ИсточникиДанныхДляРасчетов
	|ГДЕ
	|	ИсточникиДанныхДляРасчетов.Ссылка = &Операнд";
	
	Запрос.УстановитьПараметр("Операнд",Операнд);
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
					 	
КонецФункции

&НаСервере
Функция РасшифроватьОперанд(Операнд, ИспользуемаяИБ)
	
	РабочийОбъект=ОбщегоНазначенияУХ.ПолучитьРабочийОбъект(Параметры.РабочийОбъектАдрес);
			
	СтрОперанд= ПолучитьДанныеОперанда(Операнд);
		
	Если СтрОперанд.СпособПолучения=Перечисления.СпособыПолученияОперандов.ВнутренниеДанныеПоказательОтчета Тогда
		
		МассивСервер=Новый Массив;
		МассивСервер.Добавить(СокрЛП(СтрОперанд.ПоказательОтборКод));
		
		МассивПоказателей=Новый ФиксированныйМассив(МассивСервер);
		
		Если СтрОперанд.ПоказательТекущегоОтчета Тогда
						
			Возврат МассивПоказателей;
						
		Иначе	
			
			ТабЗапросы=УправлениеОтчетамиУХ.ПолучитьДанныеОперандовДляРасчета(,,,,Операнд).мТабПоказателиЗапросы;
			
			Если ТабЗапросы.Количество()=0 Тогда
				ОбщегоНазначенияУХ.СообщитьОбОшибке(Нстр("ru = 'Не удалось определить данные операнда для расчета.'"),,, СтатусСообщения.Внимание);
				Возврат Неопределено;
			КонецЕсли;
				
			ДанныеОтчетов=УправлениеОтчетамиУХ.ПолучитьТаблицуОтчетовРасшифровки(РабочийОбъект,ТабЗапросы[0]);
			
			ТабСписокОтчетов=ДанныеОтчетов.ТабСписокОтчетов;			
			ДокументыРасшифровки.Очистить();
			
			Для Каждого СтрОтчет ИЗ ТабСписокОтчетов Цикл
				
				НоваяСтрока=ДокументыРасшифровки.Добавить();
				
				Если ЗначениеЗаполнено(СтрОтчет.Регистратор) Тогда
					
					НоваяСтрока.ИмяОбъекта=СтрОтчет.Регистратор.Метаданные().Имя;
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрОтчет);
				НоваяСтрока.Ссылка=СтрОтчет.Регистратор;
				
			КонецЦикла;		
			
			Если ЗначениеЗаполнено(Параметры.СтруктураОтбора) Тогда
				
				СтруктураАналитики=Новый Структура;
				
				Для Каждого КлючИЗначение ИЗ Параметры.СтруктураОтбора Цикл
					
					СтрокаИсточник=СтрОперанд.ПравилаИспользованияПолейЗапроса.Найти(КлючИЗначение.Ключ,"КодАналитики");
					
					Если НЕ СтрокаИсточник=Неопределено Тогда
						
						ПутьКАналитике=ОбщегоНазначенияУХ.РазложитьСтрокуВМассивПодстрок(СтрокаИсточник.Поле,".");
						
						СтруктураАналитики.Вставить(ПутьКАналитике[0],КлючИЗначение.Значение);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;						
						
		КонецЕсли;
		
	Иначе
		
		КонтекстОтчета=Неопределено;
		Результат = УправлениеОтчетамиУХ.РасшифроватьДанныеОперанда(СтрОперанд.Ссылка, КонтекстОтчета,Параметры.СтруктураОтбора,РабочийОбъект);
		
		Если ТипЗнч(Результат)=Тип("Структура") И Результат.Свойство("Расшифровка77") Тогда
			
			Возврат ПоместитьВоВременноеХранилище(Результат,ЭтаФорма.УникальныйИдентификатор);
			
		Иначе
			
			Если ТипЗнч(КонтекстОтчета) = Тип("Структура") Тогда
				КонтекстОтчета.Свойство("ИспользуемаяИБ", ИспользуемаяИБ);
			КонецЕсли;
			
			Возврат Результат;
			
		КонецЕсли;
		
	КонецЕсли;
			
КонецФункции // РасшифроватьОперанд()

&НаКлиенте
Процедура ОткрытьДокументыРасшифровки(СтруктураОтбора=Неопределено)
	
	Если ДокументыРасшифровки.Количество()>0 Тогда
		
		Для Каждого СтрДокумент ИЗ ДокументыРасшифровки Цикл
			
			СтруктураПараметров=Новый Структура;
			
			Если ЗначениеЗаполнено(СтрДокумент.Ссылка) Тогда
				
				ИмяФормыОбъекта="Документ."+СтрДокумент.ИмяОбъекта+".ФормаОбъекта";
				
				СтруктураПараметров.Вставить("Ключ",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("ДокументКлюч",СтрДокумент.Ссылка);
				СтруктураПараметров.Вставить("МассивПоказателей",МассивПоказателей);
				СтруктураПараметров.Вставить("мТекущаяВалюта",Параметры.мТекущаяВалюта);
				СтруктураПараметров.Вставить("СтруктураОтбора",СтруктураАналитики);
				
				Если СтрДокумент.ИмяОбъекта="НастраиваемыйОтчет" И МассивПоказателей.Количество()=1
					И ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура") Тогда
					
					Форма=ПолучитьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);
					Форма.Открыть();
					Форма.ОткрытьФормуРаскрытияПоАналитике(МассивПоказателей[0],,СтруктураАналитики);
					
				Иначе
					
					ОткрытьФорму(ИмяФормыОбъекта,СтруктураПараметров);
					
				КонецЕсли;
												
			Иначе
				
				ДокументСсылка=ПолучитьЭкземплярОтчета(СтрДокумент.Организация,СтрДокумент.ПериодОтчета,
							СтрДокумент.Сценарий,СтрДокумент.ВидОтчета,,Истина,Истина,,?(ЗначениеЗаполнено(СтрДокумент.Проект),СтрДокумент.Проект,Неопределено));
				
				Если ЗначениеЗаполнено(ДокументСсылка) Тогда
					
					СтруктураПараметров.Вставить("Ключ",ДокументСсылка);
					СтруктураПараметров.Вставить("ДокументКлюч",ДокументСсылка);
					СтруктураПараметров.Вставить("МассивПоказателей",МассивПоказателей);
					СтруктураПараметров.Вставить("мТекущаяВалюта",Параметры.мТекущаяВалюта);
					СтруктураПараметров.Вставить("СтруктураОтбора",СтруктураАналитики);
					
					Если ТипЗнч(Параметры.СтруктураОтбора)=Тип("Структура") Тогда
						
						Форма=ПолучитьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);
						Форма.Открыть();
						Форма.ОткрытьФормуРаскрытияПоАналитике(МассивПоказателей[0],,СтруктураАналитики);
						
					Иначе
						
						ОткрытьФорму("Документ.НастраиваемыйОтчет.ФормаОбъекта",СтруктураПараметров);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОткрытьДокументыРасшифровки()

&НаСервереБезКонтекста
Функция ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
	ОсновнаяВалюта=Неопределено,ПроверятьНаличие=Истина,СоздаватьНовые=Истина,Комментарий="",Проект=Неопределено)
	
	Возврат Документы.НастраиваемыйОтчет.ПолучитьЭкземплярОтчета(Организация,ПериодОтчета,Сценарий,ВидОтчета,
			ОсновнаяВалюта,ПроверятьНаличие,СоздаватьНовые,Комментарий,Проект,Ложь);
		
КонецФункции // ПолучитьЭкземплярОтчета()

&НаСервереБезКонтекста
Функция ВернутьСтруктуруВызоваОкнаОтчетаРасшифровки(Расшифровка)
	
	МассивРасшифровки = Новый Массив;
	МассивРасшифровки.Добавить(Расшифровка.Показатель.Код);
	
	Возврат Новый Структура("Ключ, МассивПоказателей"
							, Расшифровка.Регистратор
							, Новый ФиксированныйМассив(МассивРасшифровки));
	
	
	
КонецФункции
						

&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
		
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.ИсточникиДанныхДляРасчетов") Тогда
		Возврат;
	КонецЕсли;
		
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка=Ложь;
		
		Если Расшифровка.Свойство("Регистратор") Тогда
			
			ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаДокументаУправляемая", ВернутьСтруктуруВызоваОкнаОтчетаРасшифровки(Расшифровка));
			
		ИначеЕсли Расшифровка.Свойство("Операнд") Тогда
			
			ТаблДок = Неопределено;
			ИспользуемаяИБ = Неопределено;
			
			ДанныеРасшифровки=РасшифроватьОперанд(Расшифровка.Операнд, ИспользуемаяИБ);
			
			Если ТипЗнч(ДанныеРасшифровки)=Тип("ТабличныйДокумент") Тогда
				
				ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаРасшифровкиВИБ_Управляемая", Новый Структура("Результат, ИспользуемаяИБ", ДанныеРасшифровки, ИспользуемаяИБ));
				
			ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Структура") Тогда

				Если ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии")
					ИЛИ ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии") Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоРегиструБухгалтерииБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрНакопления")
					ИЛИ ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрНакопления")Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоРегиструНакопленияБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеПроизвольныйЗапрос") Тогда
					
					Имя = "Отчет.ОтчетПоПроизвольномуЗапросуВИБ.Форма.ФормаОтчета";
					ОткрытьФорму(Имя, ДанныеРасшифровки, , Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения = ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеПроизвольныйЗапрос") Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоПроизвольномуЗапросуТек.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("ФиксированныйМассив") Тогда
				
				ВладелецФормы.ВыделитьОбластиПоказателей(ДанныеРасшифровки);
				ВладелецФормы.Активизировать();
				
			ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Строка") Тогда
				
				ИмяФормы = "Обработка.СтандартнаяОтчетность77.Форма"; 
				ОткрытьФорму(ИмяФормы, Новый Структура("АдресХранилищаПеременныхДляРасчета", ДанныеРасшифровки));
	
			Иначе
				
				ОткрытьДокументыРасшифровки();
					
			КонецЕсли;	
				
		ИначеЕсли Расшифровка.Свойство("ОперандРаскрытия") Тогда
			
			ТаблДок = Неопределено;
			ИспользуемаяИБ = Неопределено;
			ДанныеРасшифровки=РасшифроватьОперанд(Расшифровка.ОперандРаскрытия, ИспользуемаяИБ);
			
			Если ТипЗнч(ДанныеРасшифровки)=Тип("ТабличныйДокумент") Тогда
				
				ОткрытьФорму("Документ.НастраиваемыйОтчет.Форма.ФормаРасшифровкиВИБ_Управляемая", Новый Структура("Результат, ИспользуемаяИБ", ДанныеРасшифровки, ИспользуемаяИБ));
				
			ИначеЕсли ТипЗнч(ДанныеРасшифровки)=Тип("Структура") Тогда
				
				Если ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрБухгалтерии")
					ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии") Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоРегиструБухгалтерииБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеРегистрНакопления")
					ИЛИ ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеРегистрНакопления")Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоРегиструНакопленияБД.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнешниеДанныеПроизвольныйЗапрос") Тогда
					
					Имя = "Отчет.ОтчетПоПроизвольномуЗапросуВИБ.Форма.ФормаОтчета";
					ОткрытьФорму(Имя, ДанныеРасшифровки, , Новый УникальныйИдентификатор);
					
				ИначеЕсли ДанныеРасшифровки.СпособПолучения=ПредопределенноеЗначение("Перечисление.СпособыПолученияОперандов.ВнутренниеДанныеПроизвольныйЗапрос") Тогда
					
					ОткрытьФорму("Отчет.ОтчетПоПроизвольномуЗапросуТек.Форма.ФормаОтчета",ДанныеРасшифровки,,Новый УникальныйИдентификатор);
					
				КонецЕсли;
				
			Иначе
				ОткрытьДокументыРасшифровки();
			КонецЕсли;
			
		ИначеЕсли ИспользуетсяДляРасшифровкиАналитики Тогда
			Оповестить("РасшифроватьОперанд", Расшифровка, ЭтаФорма.ВладелецФормы);
		КонецЕсли;
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьНаименованияПриИзменении(Элемент)
	
	ОбластьФормулы=ПолеТабличногоДокумента.Область("ТекстПроцедуры");
	
	ТекущийТекст=ОбластьФормулы.Текст;
	ОбластьПоиска=ПолеТабличногоДокумента.Область(1,2,ПолеТабличногоДокумента.ВысотаТаблицы,ПолеТабличногоДокумента.ШиринаТаблицы);
	
	Для Каждого Строка ИЗ КодыНаименованияОперандов Цикл
		
		Если ОтображатьНаименования=1 Тогда
			
			ТекущийТекст=СтрЗаменить(ТекущийТекст,Строка.КодУпрощеннойФормулы,"["+Строка.Наименование+"]");
			
			ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.КодУпрощеннойФормулы,,ОбластьПоиска,,Истина);
			
			Пока ТекОбласть<>Неопределено Цикл	
				
				Если НЕ ТекОбласть.СодержитЗначение Тогда
					
					ТекОбласть.Текст=Строка.Наименование;
					
				КонецЕсли;
				
				ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.КодУпрощеннойФормулы,ТекОбласть,ОбластьПоиска,,Истина);		
				
			КонецЦикла;
			
		Иначе
			
			ТекущийТекст=СтрЗаменить(ТекущийТекст,"["+Строка.Наименование+"]",Строка.КодУпрощеннойФормулы);
			
			ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.Наименование,,ОбластьПоиска,,Истина);
			
			Пока ТекОбласть<>Неопределено Цикл	
				
				Если НЕ ТекОбласть.СодержитЗначение Тогда
					
					ТекОбласть.Текст=Строка.КодУпрощеннойФормулы;
					
				КонецЕсли;
				
				ТекОбласть=ПолеТабличногоДокумента.НайтиТекст(Строка.Наименование,ТекОбласть,ОбластьПоиска,,Истина);
								
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбластьФормулы.Текст=ТекущийТекст;
				
КонецПроцедуры



