
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		КлючФормы(),
		Неопределено);
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
	КонецЕсли;
	
	Если НЕ УправлениеПроизводством.ИспользуетсяГрафикПроизводства() Тогда
		Элементы.РассчитатьГрафик.Видимость = Ложь;
		Элементы.ГруппаПараметрыРасчетаГрафика.Видимость = Ложь;
		РассчитатьГрафик = Ложь;
		ПриРасчетеГрафикаЗадействоватьРезерв = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗаказНаПроизводство2_2.ОбособленноеОбеспечениеМатериаловИРабот)    КАК Обособленно,
		|	МАКСИМУМ(НЕ ЗаказНаПроизводство2_2.ОбособленноеОбеспечениеМатериаловИРабот) КАК Необособленно
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство2_2
		|ГДЕ
		|	ЗаказНаПроизводство2_2.Ссылка В(&Ссылки)");
	Запрос.УстановитьПараметр("Ссылки", Параметры.Распоряжения);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Элементы.ИспользоватьОбособленныйЗапас.Видимость = Выборка.Необособленно;
	Элементы.ИспользоватьНеобособленныйЗапас.Видимость = Выборка.Обособленно;
	
	ИспользоватьАналоги = ПолучитьФункциональнуюОпцию("ИспользоватьАналогиМатериалов");
	Элементы.ЗаменятьМатериалыНаАналоги.Видимость = ИспользоватьАналоги;
	Элементы.ЗаменятьПФНаАналоги.Видимость = ИспользоватьАналоги;
	Элементы.ДекорацияОтступ3.Видимость = ИспользоватьАналоги;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезервироватьМатериалыПриИзменении(Элемент)
	
	Если НЕ РезервироватьМатериалы Тогда
		ИспользоватьОбособленныйЗапас = Ложь;
		ИспользоватьНеобособленныйЗапас = Ложь;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "РезервироватьМатериалы");
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменятьМатериалыНаАналогиПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГрафикПриИзменении(Элемент)
	
	Если НЕ РассчитатьГрафик Тогда
		ПриРасчетеГрафикаЗадействоватьРезерв = Ложь;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "РассчитатьГрафик");
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриРасчетеГрафикаЗадействоватьРезервПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьЭтапыКВыполнениюПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура РезервироватьПФПриИзменении(Элемент)
	
	Если НЕ РезервироватьПФ Тогда
		ЗаменятьПФНаАналоги = Ложь;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "РезервироватьПФ");
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбособленныйЗапасПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНеобособленныйЗапасПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменятьПФНаАналогиПриИзменении(Элемент)
	
	СохранитьНастройкиФормыКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Закрыть(ПараметрыФормированияЭтапов());
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПотребности(Команда)
	
	Отбор = Новый Структура;
	Если Параметры.Распоряжения.Количество() = 1 Тогда
		Отбор.Вставить("Распоряжение", Параметры.Распоряжения[0]);
	Иначе
		Отбор.Вставить("Распоряжение", Параметры.Распоряжения);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	ОткрытьФорму("Отчет.ПотребностиКФормированиюЭтаповПроизводства.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьНастройкиФормыКлиент()
	
	Настройки = Новый Структура;
	Настройки.Вставить("РезервироватьМатериалы",               РезервироватьМатериалы);
	Настройки.Вставить("РезервироватьПФ",                      РезервироватьПФ);
	Настройки.Вставить("ЗаменятьМатериалыНаАналоги",           ЗаменятьМатериалыНаАналоги);
	Настройки.Вставить("ЗаменятьПФНаАналоги",                  ЗаменятьПФНаАналоги);
	Настройки.Вставить("ИспользоватьОбособленныйЗапас",        ИспользоватьОбособленныйЗапас);
	Настройки.Вставить("ИспользоватьНеобособленныйЗапас",      ИспользоватьНеобособленныйЗапас);
	Настройки.Вставить("РассчитатьГрафик",                     РассчитатьГрафик);
	Настройки.Вставить("ПриРасчетеГрафикаЗадействоватьРезерв", ПриРасчетеГрафикаЗадействоватьРезерв);
	Настройки.Вставить("ПередатьЭтапыКВыполнению",             ПередатьЭтапыКВыполнению);
	
	СохранитьНастройкиФормыСервер(Настройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормыСервер(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючФормы(), Неопределено, Настройки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция КлючФормы()
	
	Возврат "Документ.ЭтапПроизводства2_2.Форма.ПараметрыФормированияДокументов";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("РезервироватьМатериалы")
		ИЛИ Инициализация Тогда
		
		Элементы.ИспользоватьОбособленныйЗапас.Доступность = Форма.РезервироватьМатериалы;
		Элементы.ИспользоватьНеобособленныйЗапас.Доступность = Форма.РезервироватьМатериалы;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("РассчитатьГрафик")
		ИЛИ Инициализация Тогда
		
		Элементы.ПриРасчетеГрафикаЗадействоватьРезерв.Доступность = Форма.РассчитатьГрафик;
		
	КонецЕсли;
	
	Если Форма.ИспользоватьАналоги Тогда
		
		Если СтруктураРеквизитов.Свойство("РезервироватьПФ")
			ИЛИ Инициализация Тогда
		
			Элементы.ЗаменятьПФНаАналоги.Доступность = Форма.РезервироватьПФ;
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормированияЭтапов()
	
	ИсключаяСвойства = ?(ИспользоватьАналоги, "", "ЗаменятьМатериалыНаАналоги, ЗаменятьПФНаАналоги");
	
	Результат = Документы.ЭтапПроизводства2_2.ПараметрыФормированияЭтапов();
	ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект,, ИсключаяСвойства);
	Результат.Распоряжения = Параметры.Распоряжения;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
