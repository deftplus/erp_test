
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);	
		
	Если ДанныеЗаполнения = Неопределено Тогда 
		
		ИнициализироватьДокумент();
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда 
		
		Если ДанныеЗаполнения.Свойство("ЗаполнитьДокумент") 
			И ДанныеЗаполнения.ЗаполнитьДокумент = Истина Тогда
			
			ТекущиеДанныеЗаполнения = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(ДанныеЗаполнения);
			
			Если Не ТекущиеДанныеЗаполнения.Свойство("КлассВНА") Тогда
				ТекущиеДанныеЗаполнения.Вставить("КлассВНА", Неопределено);			
			КонецЕсли;
			
			Если Не ТекущиеДанныеЗаполнения.Свойство("РежимЗаполнения") Тогда
				ТекущиеДанныеЗаполнения.Вставить("РежимЗаполнения", Перечисления.РежимЗаполненияВидовУчета.НСБУИМСФО);			
			КонецЕсли;
			
			ИнициализироватьДокумент(ТекущиеДанныеЗаполнения);
			ЗаполнитьИзПодсистемыНСБУ(Неопределено);

		ИначеЕсли ДанныеЗаполнения.Свойство("ИсточникЗаполнения") 
			И ДанныеЗаполнения.ИсточникЗаполнения = "ДанныеНСБУ" Тогда
			
			ЗаполнитьИзПодсистемыНСБУ(Неопределено);
			
		ИначеЕсли ДанныеЗаполнения.Свойство("ИсточникЗаполнения")
			И ДанныеЗаполнения.ИсточникЗаполнения = "ДокументыОснования" Тогда
			
			ЗаполнитьПоОснованиям(ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"));
			
		ИначеЕсли ДанныеЗаполнения.Свойство("АдресТаблицы") Тогда
			
			МСФОВызовСервераУХ.ЗаполнитьПоТаблицеЗагрузки(ЭтотОбъект, ДанныеЗаполнения);
			
		Иначе
			
			ИнициализироватьДокумент();
			
		КонецЕсли;		
		
	ИначеЕсли ТипЗнч(Ссылка) = ТипДанныхЗаполнения Тогда
		
		ИнициализироватьДокумент(ДанныеЗаполнения);
		ЗаполнитьПоОснованиям(ДанныеЗаполнения, Истина);
		
	ИначеЕсли Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда		
		
		ЗаполнитьПоОснованиям(ДанныеЗаполнения);
		
	Иначе
		
		ИнициализироватьДокумент();
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
			
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МСФОВНАВызовСервераУХ.ОбновитьПроверяемыеРеквизитыТаблицыПоРежимуЗаполнения(ПроверяемыеРеквизиты, ЭтотОбъект, "ВНА");
	МСФОВызовСервераУХ.ПроверитьПериодОтчета(ЭтотОбъект, Истина, Истина, Отказ);
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВНА.КоррСчетМСФО");
	Если ЭтотОбъект.РежимЗаполнения = ПредопределенноеЗначение("Перечисление.РежимЗаполненияВидовУчета.НСБУ") Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонОшибки = НСтр("ru = 'В строке <%1> не указан корр счет МСФО'");
	ШаблонОшибкиТрансляции = НСтр("ru = 'В строке <%1> не указан корр счет МСФО(возможно для счета НСБУ <%2> не заполнено сопоставление в шаблоне трансляции)'");
	Для каждого СтрокаВНА Из ЭтотОбъект.ВНА Цикл
	
		Если СтрокаВНА.ВидОперации = ПредопределенноеЗначение("Справочник.ВидыОпераций.ИзменениеПараметровАмортизации") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтрокаВНА.КоррСчетМСФО.Пустая() Тогда
			Продолжить;			
		КонецЕсли;
		
		Отказ = Истина;
		НомерСтроки = Формат(СтрокаВНА.НомерСтроки, "ЧГ=0");
		
		Если СтрокаВНА.КоррСчетНСБУ.Пустая() Тогда
			ТекстОшибки = СтрШаблон(ШаблонОшибки, НомерСтроки);
		Иначе	
			ТекстОшибки = СтрШаблон(ШаблонОшибкиТрансляции, НомерСтроки, СтрокаВНА.КоррСчетНСБУ);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , СтрШаблон("Объект.ВНА.[%1].КоррСчетМСФО", НомерСтроки-1));
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПроведениеСерверУХ.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("РежимЗаписи") 
		И (ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение) Тогда
		МСФОВНАУХ.СинхронизироватьСостояниеДокументовСобытий(Ссылка, Неопределено, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ВводСобытийВНАМСФО.ПодготовитьПараметрыПроведения(ДополнительныеСвойства, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Если МСФОВНАУХ.ЕстьОшибкиПроведения(ДополнительныеСвойства, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСерверУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);	
	МСФОВНАУХ.СформироватьДокументыСобытия(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУХ.ОбработкаПроведения_ЗаписьИКонтроль(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)	
	ПроведениеСерверУХ.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Процедура ИнициализироватьДокумент(ДокументИсточник = Неопределено)
	
	МСФОУХ.ОбработкаЗаполнения(ЭтотОбъект, ДокументИсточник, Перечисления.РежимЗаполненияВидовУчета.НСБУИМСФО);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЗаполнения

Процедура ЗаполнитьПоОснованиям(МассивДокументыОснования, ЗаполнитьДокумент = Ложь)
	
	Если ЭтотОбъект.РежимЗаполнения = ПредопределенноеЗначение("Перечисление.РежимЗаполненияВидовУчета.МСФО") Тогда
	
		Если ЗаполнитьДокумент Тогда
			МСФОВызовСервераУХ.ЗаполнитьКонтекстПоОснованиям(ЭтотОбъект, МассивДокументыОснования);
		КонецЕсли;
		
		МСФОВызовСервераУХ.ЗаполнитьДокументИзРежимаНСБУ(
								ЭтотОбъект, 
								МассивДокументыОснования, 
								"ВНА");
								
	Иначе
		ЗаполнитьИзПодсистемыНСБУ(МассивДокументыОснования);
	КонецЕсли;	
		
КонецПроцедуры

Процедура ЗаполнитьИзПодсистемыНСБУ(ДокументыОснованияИсточник = Неопределено)
	
	ПараметрыЗаполнения = МСФОКлиентСерверУХ.ПолучитьПараметрыЗаполнения(ЭтотОбъект, ДокументыОснованияИсточник);
	ИсточникЗаполнения = МСФОВНАУХ.ПолучитьДанные_ВводСобытийВНА(ПараметрыЗаполнения);
	
	ЭтотОбъект.ВНА.Загрузить(ИсточникЗаполнения.ВНА);
	ЭтотОбъект.ДокументыОснования.Загрузить(ИсточникЗаполнения.ДокументыОснования);
	
	КонтекстФормы = Новый Структура("Элементы,Объект,КэшируемыеЗначения", Новый Массив, ЭтотОбъект, Новый Структура);
	РеквизитыТЧ = Метаданные.НайтиПоТипу(ПараметрыЗаполнения.ТипДокумента).ТабличныеЧасти.ВНА.Реквизиты;
	Для каждого РеквизитТЧ Из РеквизитыТЧ Цикл
		КонтекстФормы.Элементы.Добавить(Новый Структура("ПутьКДанным", "Объект.ВНА." + РеквизитТЧ.Имя));	
	КонецЦикла;
	
	МСФОУХ.ЗаполнитьПоКолонкамНСБУСервер(КонтекстФормы);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

