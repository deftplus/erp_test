#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
// Ищет протокол отмены закупки по закупочной процедуре лота.
// 
Функция ПолучитьПоЛоту(Лот) Экспорт
	Возврат ПолучитьДляЗакупки(Лот.Владелец);
КонецФункции

// Ищет протокол отмены закупки по закупочной процедуре.
// 
Функция ПолучитьДляЗакупки(ЗакупочнаяПроцедура) Экспорт
	Возврат 
		ЦентрализованныеЗакупкиУХ.ПолучитьДокументЗакупочнойПроцедуры(
			"ПротоколОтменыЗакупочнойПроцедуры",
			ЗакупочнаяПроцедура,
			Неопределено);
КонецФункции

// Проверяет, что для закупки можно создать протокол отмены.
//
// Параметры:
//  ЗакупочнаяПроцедура - Справочник.ЗакупочныеПроцедуры -
// 		закупка для которой необходимо создать протокол.
//	ПричиныОтказа - Массив(Строка) - массив с описанием сообщений
//		пользователю почему нельзя создать.
// Возвращаемое значение:
//	Булево - Истина - можно создавать. Ложь - нельзя создавать,
//		в переменной Ошибки содержится описание причин.
//
Функция ПроверитьВозможностьСоздатьДляЗакупки(
										ЗакупочнаяПроцедура,
										ПричиныОтказа) Экспорт
	Если ПричиныОтказа = Неопределено Тогда
		ПричиныОтказа = Новый Массив;
	КонецЕсли;
	Если ЗакупочнаяПроцедура.ПометкаУдаления Тогда
		ПричиныОтказа.Добавить(НСтр("ru='Закупка "
			+ ЗакупочнаяПроцедура + " помечена на удаление!'"));
	КонецЕсли;
	Если НЕ ЦентрализованныеЗакупкиУХ.ОбъектУтвержден(ЗакупочнаяПроцедура) Тогда
		ПричиныОтказа.Добавить(
			НСтр("ru='Закупка не утверждена!'"));
	КонецЕсли;
	СуществующийПротокол = ПолучитьДляЗакупки(
			ЗакупочнаяПроцедура);
		Если ЗначениеЗаполнено(СуществующийПротокол) Тогда
			ПричиныОтказа.Добавить(НСтр(СтрШаблон(
				"ru='Уже введен %1!'",
				СуществующийПротокол)));
		КонецЕсли;
	ПротоколОтмены =
		ЦентрализованныеЗакупкиУХ.ПолучитьДокументЗакупочнойПроцедуры(
				"ПротоколВыбораПобедителей",
				ЗакупочнаяПроцедура,
				Неопределено);
	Если ЗначениеЗаполнено(ПротоколОтмены) Тогда
		ПричиныОтказа.Добавить(СтрШаблон(
			НСтр("ru='Для закупочной процедуры уже введен протокол выбора победителей %1!'"), 
			ПротоколОтмены));
		Возврат Ложь;
	КонецЕсли;
	Возврат ПричиныОтказа.Количество() = 0;
КонецФункции


#КонецЕсли