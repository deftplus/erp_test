
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭкземплярОтчетаИсточник=Параметры.ЭкземплярОтчетаИсточник;
	ЭкземплярОтчетаПриемник=Параметры.ЭкземплярОтчетаПриемник;
	ПоказательИсточник=Параметры.ПоказательИсточник;
	ПоказательПриемник=Параметры.ПоказательПриемник;
	ИсходноеЗначение=Параметры.ИсходноеЗначение;
	ПроцентПереноса=100;
	ЗначениеКПереносу=ИсходноеЗначение;
	ОсновнаяВалюта=Параметры.ОсновнаяВалюта;
	
	ИсходнаяТаблицаАналитики = ПолучитьИзВременногоХранилища(Параметры.ТаблицаЗначенийАналитикАдрес);
	//МассивАналитики =ПроцедурыПреобразованияДанныхУХ.ПолучитьМассивСтруктурИЗТаблицы(ТаблицаЗначенийАналитик);
	
	УровеньТочности=Параметры.УровеньТочности;
	
	Организация=Параметры.Организация;
	
	Если  ЗначениеЗаполнено(ПоказательПриемник.ГруппаРаскрытия) Тогда
	//	ИсходнаяТаблицаАналитики=ПроцедурыПреобразованияДанныхУХ.ПолучитьТаблицуИзМассиваСтруктур(МассивАналитики);
		ЗаполнитьТаблицуРаскрытия(ИсходнаяТаблицаАналитики,ПоказательПриемник.ГруппаРаскрытия);
	КонецЕсли;
	
	СпособВставки="Замещение";
	СпособПереноса=Параметры.СпособПереноса;
	
	Если Параметры.СпособПереноса="Копирование" Тогда
		
		Элементы.ГруппаСинтетика.Заголовок="Параметры копирования";
		Элементы.ПроцентПереноса.Заголовок="Процент копирования";
		Элементы.ЗначениеКПереносу.Заголовок="Значение для вставки";
		
		Если ТаблицаАналитики.Количество()>0 Тогда
			
			Элементы["ПроцентПереноса_Раскрытие"].Заголовок="Процент копирования";
			Элементы["ЗначениеКПереносу_Раскрытие"].Заголовок="Значение для вставки";
			
		КонецЕсли;
		
		ЭтаФорма.Заголовок="Копирование значения показателя";
				
	ИначеЕсли Параметры.СпособПереноса="Перенос" Тогда
		
		Элементы.ГруппаСинтетика.Заголовок="Параметры переноса";
		Элементы.ПроцентПереноса.Заголовок="Процент переноса";
		Элементы.ЗначениеКПереносу.Заголовок="Переносимое значение";
		
		Если ТаблицаАналитики.Количество()>0 Тогда
			
			Элементы["ПроцентПереноса_Раскрытие"].Заголовок="Процент переноса";
			Элементы["ЗначениеКПереносу_Раскрытие"].Заголовок="Переносимое значение";
			
		КонецЕсли;
		
		ЭтаФорма.Заголовок="Перенос значения показателя";
		
	КонецЕсли;
	
	Элементы.ГруппаАналитика.Видимость=(ТаблицаАналитики.Количество()>0);
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРаскрытия(ИсходнаяТаблицаАналитики,ГруппаРаскрытияПриемник)
	
	СтруктураПерекладки=Новый Структура;
	ТекстСвертки="";
	ТекТаблицаРаскрытия=РеквизитФормыВЗначение("ТаблицаАналитики");
	
	ГруппаРаскрытияИсточник=ПоказательИсточник.ГруппаРаскрытия;
	
	МассивКолонокДанных=Новый Массив;
	
	Для Каждого Колонка ИЗ ТекТаблицаРаскрытия.Колонки Цикл
		МассивКолонокДанных.Добавить(Колонка.Имя);
	КонецЦикла;
	
	РеквизитыКДобавлению=Новый Массив;
	РеквизитыКУдалению=Новый Массив;
	
	Если СпособПереноса="Перенос" Тогда
		
		Для Инд=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			ВидАналитикиИсточник=ГруппаРаскрытияИсточник["ВидАналитики"+Инд];
			
			Если ПустаяСтрока(ВидАналитикиИсточник) Тогда
				
				Продолжить;
				
			КонецЕсли;	
			
			ЭтаФорма["ТипАналитики"+Инд]=ВидАналитикиИсточник.ТипЗначения;
			ЭтаФорма["ВидАналитики"+Инд]=ВидАналитикиИсточник;
				
			РеквизитыКДобавлению.Добавить(Новый РеквизитФормы("Аналитика"+Инд, ЭтаФорма["ТипАналитики"+Инд], "ТаблицаАналитики"));
			
			СтруктураПерекладки.Вставить("Аналитика"+Инд,"Аналитика"+Инд);
						
			ТекТаблицаРаскрытия.Колонки.Добавить("Аналитика"+Инд,ЭтаФорма["ТипАналитики"+Инд],Строка(ВидАналитикиИсточник));
			
		КонецЦикла;
			
	Иначе
		
		Для Инд=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
			
			ВидАналитики = ГруппаРаскрытияПриемник["ВидАналитики"+Инд];
			
			Если ПустаяСтрока(ВидАналитики) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ТекТипАналитики=ВидАналитики.ТипЗначения;
			
			Для ИндексИсточник=1 По ПараметрыСеанса.ЧислоДопАналитик Цикл
				
				ВидАналитикиИсточник=ГруппаРаскрытияИсточник["ВидАналитики"+ИндексИсточник];
				
				Если ПустаяСтрока(ВидАналитикиИсточник) ИЛИ (НЕ ВидАналитикиИсточник=ВидАналитики) Тогда
					
					Продолжить;
					
				КонецЕсли;	
				
				ЭтаФорма["ТипАналитики"+Инд]=ТекТипАналитики;
				ЭтаФорма["ВидАналитики"+Инд]=ВидАналитики;
					
				РеквизитыКДобавлению.Добавить(Новый РеквизитФормы("Аналитика"+Инд, ЭтаФорма["ТипАналитики"+Инд], "ТаблицаАналитики"));
				
				СтруктураПерекладки.Вставить("Аналитика"+Инд,"Аналитика"+ИндексИсточник);
				
				ТекстСвертки=ТекстСвертки+",Аналитика"+Инд;
				
				ТекТаблицаРаскрытия.Колонки.Добавить("Аналитика"+Инд,ТекТипАналитики,Строка(ВидАналитики));
				
				Прервать;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если СтруктураПерекладки.Количество()=0 Тогда // Не обнаружено совпадающих по типу аналитик источника и приемника
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаИсточник ИЗ ИсходнаяТаблицаАналитики Цикл
			
			НоваяСтрока=ТекТаблицаРаскрытия.Добавить();
			
			Для Каждого Реквизит ИЗ СтруктураПерекладки Цикл
				
				НоваяСтрока[Реквизит.Ключ]=СтрокаИсточник[Реквизит.Значение];
				
			КонецЦикла;
			
			НоваяСтрока.ИсходноеЗначение=СтрокаИсточник.Значение;
			НоваяСтрока.ЗначениеКПереносу=СтрокаИсточник.Значение;
			НоваяСтрока.ПроцентПереноса=100;
			
		КонецЦикла;
		
		Если ПоказательПриемник.ТипЗначения=Перечисления.ТипыЗначенийПоказателейОтчетов.Число Тогда
			ТекТаблицаРаскрытия.Свернуть(Сред(ТекстСвертки,2),"ИсходноеЗначение,ЗначениеКПереносу,ПроцентПереноса");
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	////////////////////////////////////////////////////////////////////////////////////////
	
	// Формируем колонки таблицы
	
	КолонкаКонтрагент="";
	КолонкаДоговор="";	
	
	Для Каждого СтрКолонка ИЗ СтруктураПерекладки Цикл			
		
		Колонка=ТекТаблицаРаскрытия.Колонки[СтрКолонка.Ключ];
		
		ЭтаФорма.Элементы.Добавить(Колонка.Имя,Тип("ПолеФормы"),ЭтаФорма.Элементы.ТаблицаАналитики);	
		
		ЭтаФорма.Элементы[Колонка.Имя].ПутьКДанным="ТаблицаАналитики."+Колонка.Имя;
		ЭтаФорма.Элементы[Колонка.Имя].Вид=ВидПоляФормы.ПолеВвода;
		ЭтаФорма.Элементы[Колонка.Имя].ДоступныеТипы=Колонка.ТипЗначения;
		ЭтаФорма.Элементы[Колонка.Имя].КнопкаВыбора=Истина;
		ЭтаФорма.Элементы[Колонка.Имя].КнопкаОчистки=Истина;
		ЭтаФорма.Элементы[Колонка.Имя].ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложениеЭлемента.Право;
		
		ЭтаФорма.Элементы[Колонка.Имя].Заголовок=Колонка.Заголовок;
		ЭтаФорма.Элементы[Колонка.Имя].КнопкаОткрытия=Истина;
		
		ОграничениеТипа = ЭтаФорма["ТипАналитики" + Прав(Колонка.Имя, 1)];
		
		Если ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ПроизвольныйКлассификаторУХ")) Тогда
			
			МассивОтбора=Новый Массив;
			
			СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец", "ВидАналитики" + Прав(Колонка.Имя, 1));
			МассивОтбора.Добавить(СвязьВладелец);
			
			Если ЭтаФорма["ВидАналитики" + Прав(Колонка.Имя, 1)].РазделятьПоОрганизациям Тогда	
				СвязьОрганизация = Новый СвязьПараметраВыбора("Отбор.Организация", "Организация");
				МассивОтбора.Добавить(СвязьОрганизация);
			КонецЕсли;
			
			НовыеСвязи = Новый ФиксированныйМассив(МассивОтбора);
			
			ЭтаФорма.Элементы[Колонка.Имя].СвязиПараметровВыбора=НовыеСвязи;
			
		ИначеЕсли ОграничениеТипа.СодержитТип(ДенежныеСредстваВстраиваниеУХКлиентСервер.ТипБанковскиеСчетаОрганизаций()) Тогда
			
			МассивОтбора=Новый Массив;
			
			СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец", "Организация");
			МассивОтбора.Добавить(СвязьВладелец);
			
			НовыеСвязи = Новый ФиксированныйМассив(МассивОтбора);
			
			ЭтаФорма.Элементы[Колонка.Имя].СвязиПараметровВыбора=НовыеСвязи;
			
		ИначеЕсли ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда	
			
			КолонкаДоговор=Колонка.Имя;
			
		ИначеЕсли ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
			
			КолонкаКонтрагент=Колонка.Имя;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(КолонкаДоговор) Тогда
		
		МассивОтбора=Новый Массив;
		
		СвязьОрганизация = Новый СвязьПараметраВыбора("Отбор.Организация", "Организация");
		МассивОтбора.Добавить(СвязьОрганизация);
		
		//Если НЕ ПустаяСтрока(КолонкаКонтрагент) Тогда
		//	
		//	СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец","Элементы.ТаблицаРаскрытия.ТекущиеДанные."+КолонкаКонтрагент);
		//	МассивОтбора.Добавить(СвязьВладелец);
		//	
		//КонецЕсли;
		
		НовыеСвязи = Новый ФиксированныйМассив(МассивОтбора);
		
		ЭтаФорма.Элементы[КолонкаДоговор].СвязиПараметровВыбора=НовыеСвязи;
		
	КонецЕсли;
	
	Для Каждого ИмяКолонки ИЗ МассивКолонокДанных Цикл
		
		Колонка=ТекТаблицаРаскрытия.Колонки[ИмяКолонки];
		ИмяЭлементаФормы=ИмяКолонки+"_Раскрытие";
			
		ЭтаФорма.Элементы.Добавить(ИмяЭлементаФормы,Тип("ПолеФормы"),ЭтаФорма.Элементы.ТаблицаАналитики);	
		
		ЭтаФорма.Элементы[ИмяЭлементаФормы].ПутьКДанным="ТаблицаАналитики."+Колонка.Имя;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].Вид=ВидПоляФормы.ПолеВвода;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].ДоступныеТипы=Колонка.ТипЗначения;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].КнопкаВыбора=Истина;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].КнопкаОчистки=Истина;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложениеЭлемента.Право;
		
		ЭтаФорма.Элементы[ИмяЭлементаФормы].Заголовок = Колонка.Заголовок;
		ЭтаФорма.Элементы[ИмяЭлементаФормы].КнопкаОткрытия = Ложь;
				
		Если НЕ ИмяКолонки="ПроцентПереноса" Тогда
			ЭтаФорма.ЭтаФорма.Элементы[ИмяЭлементаФормы].ОтображатьВПодвале=Истина;
			ЭтаФорма.ЭтаФорма.Элементы[ИмяЭлементаФормы].ПутьКДаннымПодвала=ИмяКолонки;
			ОбщееЧислоЗнаков = 18 + УровеньТочности;
			ЭтаФорма.Элементы[ИмяЭлементаФормы].Формат =  "ЧЦ=" + ОбщееЧислоЗнаков + "; ЧДЦ=" + УровеньТочности;
		КонецЕсли;
		
		Если ИмяКолонки="ИсходноеЗначение" Тогда
			
			ЭтаФорма.Элементы[ИмяЭлементаФормы].ТолькоПросмотр=Истина;
			
		КонецЕсли;
			
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТекТаблицаРаскрытия,"ТаблицаАналитики");
		
КонецПроцедуры // ЗаполнитьТаблицуРаскрытия()

&НаСервере
Функция ПодготовитьСтруктуруПереноса()
	
	СтруктураПереноса=Новый Структура;
	СтруктураПереноса.Вставить("ЭкземплярОтчетаИсточник",ЭкземплярОтчетаИсточник);
	СтруктураПереноса.Вставить("ЭкземплярОтчетаПриемник",ЭкземплярОтчетаПриемник);
	СтруктураПереноса.Вставить("ПоказательИсточник",ПоказательИсточник);
	СтруктураПереноса.Вставить("ПоказательПриемник",ПоказательПриемник);
	СтруктураПереноса.Вставить("СпособВставки",СпособВставки);
	СтруктураПереноса.Вставить("СпособПереноса",СпособПереноса);
	СтруктураПереноса.Вставить("ЗначениеКПереносу",ЗначениеКПереносу);
	СтруктураПереноса.Вставить("ИсходноеЗначение",ИсходноеЗначение);
	СтруктураПереноса.Вставить("ОсновнаяВалюта",ОсновнаяВалюта);
	//СтруктураПереноса.Вставить("ТаблицаАналитики",ПоместитьВоВременноеХранилище(ПроцедурыПреобразованияДанныхУХ.ПолучитьМассивСтруктурИЗТаблицы(РеквизитФормыВЗначение("ТаблицаАналитики")),Новый УникальныйИдентификатор) );
    СтруктураПереноса.Вставить("ТаблицаАналитики",ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("ТаблицаАналитики"),Новый УникальныйИдентификатор));
	
	Возврат СтруктураПереноса; 
		
КонецФункции // ПодготовитьСтруктуруПереноса() 

&НаКлиенте
Процедура ТаблицаАналитикиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования ИЛИ СтрНайти(Элементы.ТаблицаАналитики.ТекущийЭлемент.Имя,"Аналитика")>0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные=Элементы.ТаблицаАналитики.ТекущиеДанные;
	
	Если Элементы.ТаблицаАналитики.ТекущийЭлемент.Имя="ЗначениеКПереносу_Раскрытие" Тогда
		
		ТекДанные.ПроцентПереноса=?(ТекДанные.ИсходноеЗначение=0,100,(1-(ТекДанные.ИсходноеЗначение-ТекДанные.ЗначениеКПереносу)/ТекДанные.ИсходноеЗначение)*100);
				
	ИначеЕсли Элементы.ТаблицаАналитики.ТекущийЭлемент.Имя="ПроцентПереноса_Раскрытие" Тогда
		
		ТекДанные.ЗначениеКПереносу=ТекДанные.ИсходноеЗначение*ТекДанные.ПроцентПереноса/100;
		
	КонецЕсли;
	
	ЗначениеКПереносу=ТаблицаАналитики.Итог("ЗначениеКПереносу");
	ПроцентПереноса=?(ИсходноеЗначение=0,100,(1-(ИсходноеЗначение-ЗначениеКПереносу)/ИсходноеЗначение)*100);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПереносаПриИзменении(Элемент)
	
	ЗначениеКПереносу=ИсходноеЗначение*ПроцентПереноса/100;
	ОбновитьДанныеРаскрытия();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеКПереносуПриИзменении(Элемент)
	
	ПроцентПереноса=?(ИсходноеЗначение=0,100,(1-(ИсходноеЗначение-ЗначениеКПереносу)/ИсходноеЗначение)*100);		
	ОбновитьДанныеРаскрытия();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеРаскрытия()
	
	Если ТаблицаАналитики.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрАналитика ИЗ ТаблицаАналитики Цикл
		
		СтрАналитика.ПроцентПереноса=ПроцентПереноса;
		СтрАналитика.ЗначениеКПереносу=СтрАналитика.ИсходноеЗначение*СтрАналитика.ПроцентПереноса/100;
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьДанныеРаскрытия() 

&НаКлиенте
Процедура Ок(Команда)
	
	
	Оповестить("ПеренестиПоказатели",ПодготовитьСтруктуруПереноса());
	
	Закрыть();
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАналитикиПослеУдаления(Элемент)
	
	ЗначениеКПереносу=ТаблицаАналитики.Итог("ЗначениеКПереносу");
	ПроцентПереноса=?(ИсходноеЗначение=0,100,(1-(ИсходноеЗначение-ЗначениеКПереносу)/ИсходноеЗначение)*100);
		
КонецПроцедуры







