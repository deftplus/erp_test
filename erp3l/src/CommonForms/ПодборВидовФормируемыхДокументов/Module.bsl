
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПоВидамОбъектов();	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВидамОбъектов()
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДокументыБД.Ссылка КАК ВидДокумента,
	             |	ЛОЖЬ КАК Отбирать,
	             |	ДокументыБД.ЭтоГруппа КАК ЭтоГруппа
	             |ИЗ
	             |	Справочник.ДокументыБД КАК ДокументыБД
	             |ГДЕ
	             |	ДокументыБД.ИспользуетсяВПроцессе = ИСТИНА
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ЭтоГруппа ИЕРАРХИЯ";
				 			 
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией),"ДеревоВидовДокументов");	
	
КонецПроцедуры // ЗаполнитьПоВидамОтчетов()


&НаСервере
Функция ПолучитьМассивВидовДокументов()
	
	МассивВидовДокументов=Новый Массив;
	ДеревоДокументов=РеквизитФормыВЗначение("ДеревоВидовДокументов");
	
	МассивОтобранных=ДеревоДокументов.Строки.НайтиСтроки(Новый Структура("Отбирать,ЭтоГруппа",Истина,Ложь),Истина);
	
	Для Каждого СтрВидДокумента ИЗ МассивОтобранных Цикл
		
		МассивВидовДокументов.Добавить(СтрВидДокумента.ВидДокумента);
		
	КонецЦикла;
	
	Возврат МассивВидовДокументов;
		
КонецФункции // ПолучитьМассивВидовДокументов()

&НаКлиенте
Процедура ДеревоВидовДокументовОтбиратьПриИзменении(Элемент)
	
	ТекЗначениеФлага=Элементы.ДеревоВидовДокументов.ТекущиеДанные.Отбирать;
	
	Для Каждого Элемент ИЗ Элементы.ДеревоВидовДокументов.ТекущиеДанные.ПолучитьЭлементы() Цикл
		
		Элемент.Отбирать=ТекЗначениеФлага;
		ОбновитьФлагиПоПодчиненным(ТекЗначениеФлага,Элемент);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФлагиПоПодчиненным(ЗначениеФлага,ЭлементКоллекции)
	
	Для Каждого Элемент ИЗ ЭлементКоллекции.ПолучитьЭлементы() Цикл
		
		Элемент.Отбирать=ЗначениеФлага;
		ОбновитьФлагиПоПодчиненным(ЗначениеФлага,Элемент);
		
	КонецЦикла;
			
КонецПроцедуры // ОбновитьФлагиПоПодчиненным() 


&НаКлиенте
Процедура Ок(Команда)
	
	Оповестить("ВыбраныВидыДокументов",ПолучитьМассивВидовДокументов());
	Закрыть();
	
КонецПроцедуры
	
	
	
