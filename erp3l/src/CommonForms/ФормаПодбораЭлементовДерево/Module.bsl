
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектМД=Метаданные.Справочники[Параметры.ИмяСправочника];
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("СписокЭлементов",Параметры.СписокЭлементов);
	
	Если ОбъектМД.Иерархический Тогда
	
		Запрос.Текст="ВЫБРАТЬ
		|	РабочийСправочник.Ссылка,
		|	РабочийСправочник.ПометкаУдаления,
		|	"+?(ОбъектМД.ВидИерархии=Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов,"РабочийСправочник.ЭтоГруппа","ЛОЖЬ")+" КАК ЭтоГруппа,
		|	ВЫБОР Когда Ссылка В (&СписокЭлементов) Тогда 1 Иначе 0 Конец КАК Использовать
		|ИЗ
		|	Справочник."+Параметры.ИмяСправочника+" КАК РабочийСправочник";
		
		Если ТипЗнч(Параметры.СписокДоступныхЭлементов)=Тип("СписокЗначений") Тогда
			
			Запрос.Текст=Запрос.Текст+"
			|ГДЕ РабочийСправочник.Ссылка В(&СписокДоступныхЭлементов)";
			Запрос.УстановитьПараметр("СписокДоступныхЭлементов",Параметры.СписокДоступныхЭлементов);
			
		КонецЕсли;
		
		Если Параметры.ИмяСправочника="Периоды" Тогда
			
			Запрос.Текст=Запрос.Текст+"
			|Упорядочить ПО РабочийСправочник.ДатаНачала Иерархия";
			
		Иначе
			
			Запрос.Текст=Запрос.Текст+"
			|Упорядочить ПО РабочийСправочник.Наименование Иерархия";
			
		КонецЕсли;
		
		ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией),"ДеревоЭлементов");
		
	Иначе
		
		Запрос.Текст="ВЫБРАТЬ
		|	Ссылка,
		|	ПометкаУдаления,
		|	Ложь КАК ЭтоГруппа,
		|	ВЫБОР Когда Ссылка В (&СписокЭлементов) Тогда 1 Иначе 0 Конец КАК Использовать
		|ИЗ
		|	Справочник."+Параметры.ИмяСправочника+" КАК РабочийСправочник";
		
		Если ТипЗнч(Параметры.СписокДоступныхЭлементов)=Тип("СписокЗначений") Тогда
			
			Запрос.Текст=Запрос.Текст+"
			|ГДЕ РабочийСправочник.Ссылка В(&СписокДоступныхЭлементов)";
			Запрос.УстановитьПараметр("СписокДоступныхЭлементов",Параметры.СписокДоступныхЭлементов);
			
		КонецЕсли;
		
		Запрос.Текст=Запрос.Текст+"
		|Упорядочить ПО РабочийСправочник.Наименование";
		
		ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией),"ДеревоЭлементов");
		
	КонецЕсли;
	
	Если Параметры.СписокЭлементов.Количество()>0 Тогда
		
		ОбновитьФлажкиДерева(Параметры.СписокЭлементов);
		
	КонецЕсли;
	
	Элементы.ДеревоЭлементовУстановитьФлажки.Видимость=(Не Параметры.ИмяСправочника="Периоды");	
	ЭтаФорма.Заголовок=ОбъектМД.Синоним;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовПередУдалением(Элемент, Отказ)
	
	Отказ=Истина;
	
	Если Не Элементы.ДеревоЭлементов.ТекущиеДанные=Неопределено Тогда
		
		Элементы.ДеревоЭлементов.ТекущиеДанные.ПометкаУдаления=НЕ Элементы.ДеревоЭлементов.ТекущиеДанные.ПометкаУдаления;
		
		Если Элементы.ДеревоЭлементов.ТекущиеДанные.ПометкаУдаления Тогда
			
			Элементы.ДеревоЭлементов.ТекущиеДанные.Использовать=0;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ=Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Поле.Имя="ДеревоЭлементовСсылка" Тогда
		
		Если Не Элементы.ДеревоЭлементов.ТекущиеДанные=Неопределено Тогда
			
			ПоказатьЗначение(,Элементы.ДеревоЭлементов.ТекущиеДанные.Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФлажокРодителя(Родитель)
	
	ВнПодчиненныеЭлементы = Родитель.ПолучитьЭлементы();
	
	ТекущееСостояние = -1;
	
	Для Каждого Элемент Из ВнПодчиненныеЭлементы Цикл
		
		Если ТекущееСостояние = -1 Тогда
			ТекущееСостояние = Элемент.Использовать;
		ИначеЕсли ТекущееСостояние <> Элемент.Использовать Тогда
			ТекущееСостояние = 2;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Родитель.Использовать = ?(ТекущееСостояние=0,Родитель.Использовать,ТекущееСостояние);
	РодительРодителя = Родитель.ПолучитьРодителя();
	
	Если РодительРодителя <> Неопределено Тогда
		
		ИзменитьФлажокРодителя(РодительРодителя);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовВыбратьПриИзменении(Элемент)
		
	ТекущаяСтрока = ДеревоЭлементов.НайтиПоИдентификатору(Элементы.ДеревоЭлементов.ТекущаяСтрока);
	
	Если ТекущаяСтрока.Использовать = 2 Тогда
		
		Если ТекущаяСтрока.ПолучитьЭлементы().Количество()>0 Тогда // Исключаем узел из выборки
			
			Возврат;
			
		Иначе
			
			ТекущаяСтрока.Использовать=0;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменитьФлажкиПодчиненныхЭлементов(ТекущаяСтрока.ПолучитьЭлементы(), ТекущаяСтрока.Использовать);
	Родитель = ТекущаяСтрока.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
	//	ИзменитьФлажокРодителя(Родитель);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФлажкиПодчиненныхЭлементов(КоллекцияЭлементов, ЗначениеФлажка)
	
	Для Каждого Элемент Из КоллекцияЭлементов Цикл
		
		Элемент.Использовать = ЗначениеФлажка;
		
		Если НЕ Параметры.ИмяСправочника="Периоды" Тогда
			
			ИзменитьФлажкиПодчиненныхЭлементов(Элемент.ПолучитьЭлементы(), ЗначениеФлажка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФлажкиДерева(МассивВыбранныхЭлементов)
	
	ТекущееДерево = РеквизитФормыВЗначение("ДеревоЭлементов");
	
	Для Каждого Элемент Из МассивВыбранныхЭлементов Цикл
		
		НайденнаяСтрока = ТекущееДерево.Строки.Найти(Элемент.Значение, "Ссылка",Истина);
		
		Если НайденнаяСтрока <> Неопределено Тогда
			НайденнаяСтрока.Использовать = 1;
			Если НайденнаяСтрока.Родитель <> Неопределено Тогда
				ОбновитьПризнакИспользованияУРодителя(НайденнаяСтрока.Родитель);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТекущееДерево, "ДеревоЭлементов");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПризнакИспользованияУРодителя(Родитель)
	
	ТекущееИспользование = -1;
	
	Для Каждого Строка Из Родитель.Строки Цикл
		
		Если ТекущееИспользование = -1 Тогда
			ТекущееИспользование = Строка.Использовать;
		ИначеЕсли ТекущееИспользование <> Строка.Использовать Тогда
			ТекущееИспользование = 2;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекущееИспользование=2 ИЛИ Параметры.СписокЭлементов.НайтиПоЗначению(Родитель.Ссылка)=Неопределено Тогда
		
		Родитель.Использовать=2;
		
	Иначе
		
		Родитель.Использовать=ТекущееИспользование;
		
	КонецЕсли;
	
	Если Родитель.Родитель <> Неопределено Тогда
		ОбновитьПризнакИспользованияУРодителя(Родитель.Родитель);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьСписокЭлементов()
	
	ТекущееДерево = РеквизитФормыВЗначение("ДеревоЭлементов");
	МассивСтрок=ТекущееДерево.Строки.НайтиСтроки(Новый Структура("Использовать,ЭтоГруппа",1,Ложь),Истина);
	
	СписокЭлементов=Новый СписокЗначений;
	
	Для Каждого Строка ИЗ МассивСтрок Цикл
		
		СписокЭлементов.Добавить(Строка.Ссылка);
		
	КонецЦикла;
	
	Возврат СписокЭлементов;	
	
КонецФункции // ВернутьСписокЭлементов() 



&НаКлиенте
Процедура ВыбратьЭлементы(Команда)
	
	ОповеститьОВыборе(ВернутьСписокЭлементов());
		
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьПризнакИспользования(1);
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьПризнакИспользования(0);
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПризнакИспользования(Значение)
	
	Для Каждого Элемент ИЗ ДеревоЭлементов.ПолучитьЭлементы() Цикл
		
		Элемент.Использовать=Значение;
		УстановитьПризнакИспользованияПодчиненных(Элемент.ПолучитьЭлементы(),Значение);
		
	КонецЦикла;
		
КонецПроцедуры // УстановитьПризнакИспользования() 

&НаКлиенте
Процедура УстановитьПризнакИспользованияПодчиненных(КоллекцияЭлементов,Значение)
	
	Для Каждого Элемент ИЗ КоллекцияЭлементов Цикл
		
		Элемент.Использовать=Значение;
		УстановитьПризнакИспользованияПодчиненных(Элемент.ПолучитьЭлементы(),Значение);
		
	КонецЦикла;
	
КонецПроцедуры // УстановитьПризнакИспользованияПодчиненных() 


