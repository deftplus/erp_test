#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.Владелец = Параметры.Владелец;
	
	Если НЕ ПроверитьСообщитьЗаполненВладелец(Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	ХранениеВДокументообороте = 
		ПолучитьФункциональнуюОпцию("ИспользоватьИнтеграциюС1СДокументооборот");
		
	ПапкаСвязанныхФайлов = Константы.ПапкаСвязанныхФайлов.Получить();
	Если Не ХранениеВДокументообороте 
		И Не ЗначениеЗаполнено(ПапкаСвязанныхФайлов) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаФункционалНедоступен;
	Иначе
		Если ХранениеВДокументообороте Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжидаетсяПодключение;
		Иначе
			ДоступенФункционалПомеченныеНаУдаление = Истина;
			Элементы.ПометитьНаУдалениеСнятьПометку.Видимость = Истина;
			Элементы.ПоказыватьУдаленные.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	Если ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент() Тогда
		Элементы.ДобавитьСоСканера.Видимость = Ложь;
	КонецЕсли;
	Заголовок = СтрШаблон("Связанные файлы: %1", Строка(Владелец));
	Если Не ХранениеВДокументообороте Тогда
		ЗаполнитьСвязанныеФайлы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ХранениеВДокументообороте Тогда
		ПроверитьПодключение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьПодключениеЗавершение", ЭтаФорма, Неопределено);
	ИнтеграцияС1СДокументооборотКлиент.ПроверитьПодключение(ОписаниеОповещения, ЭтаФорма, "ПроверитьПодключение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеЗавершение(Результат, Параметры) Экспорт
	
	ОбработатьФормуСогласноВерсииСервиса();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормуСогласноВерсииСервиса()
	
	ВерсияСервиса = ИнтеграцияС1СДокументооборот.ВерсияСервиса();
	
	Если ПустаяСтрока(ВерсияСервиса) Тогда // идет подключение
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжидаетсяПодключение;
		
	Иначе // версия известна
		
		Если ВерсияСервиса = "0.0.0.0" Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДокументооборотНедоступен;
		Иначе
			ВерсииДоступны = ИнтеграцияС1СДокументооборот.ДоступенФункционалВерсииСервиса("1.4.6.1", Истина);
			ДоступенФункционалПомеченныеНаУдаление = ИнтеграцияС1СДокументооборот.
				ДоступенФункционалВерсииСервиса("2.0.6.3", Истина);
			Элементы.ПометитьНаУдалениеСнятьПометку.Видимость = ДоступенФункционалПомеченныеНаУдаление;
			Элементы.ПоказыватьУдаленные.Видимость = ДоступенФункционалПомеченныеНаУдаление;
			Элементы.ОткрытьВерсииФайла.Доступность = ВерсииДоступны;
			ЗаполнитьСвязанныеФайлы();
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСвязанныеФайлы;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Запись_Файл" Тогда
		ЗаполнитьСвязанныеФайлы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОткрытьНастройкиНажатие(Элемент)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияУХ.Форма.ТехнологическиеНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиАвторизацииНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ДекорацияНастройкиАвторизацииНажатиеЗавершение", ЭтаФорма);
	ИмяФормыПараметров = "Обработка.ИнтеграцияС1СДокументооборот.Форма.АвторизацияВ1СДокументооборот";
	 
	ОткрытьФорму(ИмяФормыПараметров,, ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиАвторизацииНажатиеЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Истина Тогда
		ИнтеграцияС1СДокументооборотВызовСервера.УстановитьВерсиюСервисаВПараметрыСеанса();
		ОбработатьФормуСогласноВерсииСервиса();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСвязанныеФайлы

&НаКлиенте
Процедура СвязанныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлДляПросмотра(Элементы.СвязанныеФайлы.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыВерсииФайла

&НаКлиенте
Процедура ВерсииФайлаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьВерсиюДляПросмотра(Элементы.ВерсииФайла.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИзФайлаНаДиске(Команда)
	ДобавитьФайл();	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзШаблона(Команда)
	
	ПараметрыДобавления = Новый Структура;
	ПараметрыДобавления.Вставить("ВладелецФайла", Владелец);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборШаблона", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ПредопределенноеЗначение("Справочник.ПапкиФайлов.Шаблоны"));
	ОбработчикПродолжения = Новый ОписаниеОповещения("ДобавитьИзШаблонаПослеВыбораШаблона", ЭтотОбъект, ПараметрыДобавления);
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбора", ПараметрыФормы, , , , , ОбработчикПродолжения, 
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоСканера(Команда)
	
	Если ХранениеВДокументообороте Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация();
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла", Владелец);
		ПараметрыФормы.Вставить("ИдентификаторКлиента", СистемнаяИнформация.ИдентификаторКлиента);
		ПараметрыФормы.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Неопределено);
		ПараметрыФормы.Вставить("ХранениеВДокументообороте", ХранениеВДокументообороте);
		ПараметрыФормы.Вставить("ДокументID", ДокументID);
		ПараметрыФормы.Вставить("ДокументТип", ДокументТип);
		
		ОткрытьФорму("Обработка.Сканирование.Форма.РезультатСканирования", ПараметрыФормы,
			ЭтаФорма, , , , Новый ОписаниеОповещения("ДобавитьСоСканераЗавершение", ЭтаФорма));
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДляПросмотра(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСвязанныеФайлы Тогда
		Если Элементы.СвязанныеФайлы.ТекущиеДанные <> Неопределено Тогда
			ОткрытьФайлДляПросмотра(Элементы.СвязанныеФайлы.ТекущиеДанные);
		КонецЕсли;
	Иначе
		Если Элементы.ВерсииФайла.ТекущиеДанные <> Неопределено Тогда
			ОткрытьВерсиюДляПросмотра(Элементы.ВерсииФайла.ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлы(Команда)
	
	ЗаполнитьСвязанныеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеСнятьПометку(Команда)
	
	ТекущиеДанные = Элементы.СвязанныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПометкаУдаления Тогда
		ТекстВопроса = НСтр("ru = 'Снять пометку удаления с файла ""%1""?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Пометить на удаление файл ""%1""?'");
	КонецЕсли;
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстВопроса,
		ТекущиеДанные.Наименование);
		
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПометитьНаУдалениеСнятьПометкуЗавершение", ЭтаФорма, ТекущиеДанные);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	ЗаполнитьСвязанныеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлНаДиск(Команда)
	
	ТекущиеДанные = Элементы.СвязанныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ХранениеВДокументообороте Тогда
		ИнтеграцияС1СДокументооборотКлиент.СохранитьФайлКак(ТекущиеДанные.СвязанныйФайл, 
			ТекущиеДанные.Наименование, 
			ТекущиеДанные.Расширение, 
			УникальныйИдентификатор);
	Иначе
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляСохранения(
			ТекущиеДанные.СвязанныйФайл,,
			УникальныйИдентификатор);
		РаботаСФайламиСлужебныйКлиент.СохранитьКак(Неопределено, ДанныеФайла, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаНаДиске(Команда)
	
	ТекущиеДанные = Элементы.СвязанныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОбновитьИзФайлаЗавершение", ЭтотОбъект);
	Если ХранениеВДокументообороте Тогда
		ИнтеграцияС1СДокументооборотКлиент.ОбновитьИзФайлаНаДиске(ТекущиеДанные.СвязанныйФайл,
			ТекущиеДанные.Наименование,
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор,
			ОбработчикЗавершения);
	Иначе
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайла(ТекущиеДанные.СвязанныйФайл);
		РаботаСФайламиСлужебныйКлиент.ОбновитьИзФайлаНаДискеСОповещением(
			ОбработчикЗавершения,
			ДанныеФайла,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВерсииФайла(Команда)
	
	Если Элементы.СвязанныеФайлы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ХранениеВДокументообороте Тогда
		ВерсииДоступны = ИнтеграцияС1СДокументооборотКлиентПовтИсп.ДоступенФункционалВерсииСервиса("1.4.6.1");
		Если Не ВерсииДоступны Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Используемая версия 1С:Документооборота не поддерживает
			|работу с версиями файлов из интегрированной системы'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ТекущийФайл = Элементы.СвязанныеФайлы.ТекущиеДанные.СвязанныйФайл;
	ЗаполнитьВерсииФайла();
	Заголовок = СтрШаблон(НСтр("ru = 'Версии файла ""%1""'"), Элементы.СвязанныеФайлы.ТекущиеДанные.Наименование);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВерсииФайла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВерсиюФайла(Команда)
	
	ТекущиеДанные = Элементы.СвязанныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ДобавитьВерсиюФайлаЗавершение", ЭтотОбъект);
	Если ХранениеВДокументообороте Тогда
		ИнтеграцияС1СДокументооборотКлиент.ОбновитьИзФайлаНаДиске(ТекущиеДанные.СвязанныйФайл,
			ТекущиеДанные.Наименование,
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор,
			ОбработчикЗавершения);
	Иначе // БСП
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайла(ТекущиеДанные.СвязанныйФайл);
		РаботаСФайламиСлужебныйКлиент.ОбновитьИзФайлаНаДискеСОповещением(
			ОбработчикЗавершения,
			ДанныеФайла,
			УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСпискуФайлов(Команда)
	
	Заголовок = СтрШаблон("Связанные файлы: %1", Строка(Владелец));
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСвязанныеФайлы;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВерсии(Команда)
	
	ЗаполнитьВерсииФайла();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВерсиюНаДиск(Команда)
	
	ТекущиеДанные = Элементы.ВерсииФайла.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ХранениеВДокументообороте Тогда
		ИнтеграцияС1СДокументооборотКлиент.СохранитьВерсиюКак(ТекущиеДанные.ВерсияФайла, 
			ТекущиеДанные.Наименование, 
			ТекущиеДанные.Расширение,
			УникальныйИдентификатор);
	Иначе // здесь
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляСохранения(
			ТекущиеДанные.ВерсияФайла,
			УникальныйИдентификатор);
		РаботаСФайламиСлужебныйКлиент.СохранитьКак(Неопределено, ДанныеФайла, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет таблицу связанных файлов
&НаСервере
Процедура ЗаполнитьСвязанныеФайлы()
	
	МассивОписанийФайлов = СвязанныеФайлыВызовСервера.СвязанныеФайлыПоВладельцу(
		Владелец, ДокументID, ДокументТип, ПоказыватьУдаленные);
	
	СвязанныеФайлы.Очистить();
	Для каждого ОписаниеФайла из МассивОписанийФайлов Цикл
		СвязанныйФайл = СвязанныеФайлы.Добавить();
		ЗаполнитьЗначенияСвойств(СвязанныйФайл, ОписаниеФайла);
	КонецЦикла;
	
	
КонецПроцедуры

// Заполняет таблицу версий файла
&НаСервере
Процедура ЗаполнитьВерсииФайла()
	
	ВерсииФайла.Очистить();
	Если Не ЗначениеЗаполнено(ТекущийФайл) Тогда
		Возврат;
	КонецЕсли;
	
	МассивОписанийВерсий = СвязанныеФайлыВызовСервера.ВерсииФайла(ТекущийФайл, ПоказыватьУдаленные);
	Для каждого ОписаниеВерсии из МассивОписанийВерсий Цикл
		ВерсияФайла = ВерсииФайла.Добавить();
		ЗаполнитьЗначенияСвойств(ВерсияФайла, ОписаниеВерсии);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик завершения добавления файла из шаблона
&НаКлиенте
Процедура ДобавитьИзШаблонаПослеВыбораШаблона(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавленныйФайл = СвязанныеФайлыВызовСервера.ДобавитьФайлИзШаблона(Параметры.ВладелецФайла, 
		Результат,
		ДокументID,
		ДокументТип);
		
	Если ДобавленныйФайл <> Неопределено Тогда
		ЗаполнитьСвязанныеФайлы();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик завершения добавления файла со сканера
&НаКлиенте
Процедура ДобавитьСоСканераЗавершение(Результат, Параметры) Экспорт
	
	ЗаполнитьСвязанныеФайлы();
	
КонецПроцедуры

// Обработчик завершения обновления файла с диска
&НаКлиенте
Процедура ОбновитьИзФайлаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаполнитьСвязанныеФайлы();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик завершения добавления версии файла с диска
&НаКлиенте
Процедура ДобавитьВерсиюФайлаЗавершение(Результат, Параметры) Экспорт
	
	ЗаполнитьВерсииФайла();
	
КонецПроцедуры

// Открывает файл для просмотра
&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(ВыбраннаяСтрока)
	
	Если ТипЗнч(ВыбраннаяСтрока.СвязанныйФайл) = Тип("Строка") Тогда
	
		ИдентификаторФайла = ВыбраннаяСтрока.СвязанныйФайл;
		Расширение = ВыбраннаяСтрока.Расширение;
		Имя = ВыбраннаяСтрока.Наименование;
		Размер = ВыбраннаяСтрока.Размер;
		ДатаМодификацииУниверсальная = ВыбраннаяСтрока.ДатаТекущейВерсии;
		КаталогДляСохраненияДанных = ИнтеграцияС1СДокументооборотВызовСервера.ЛокальныйКаталогФайлов();
		
		ИнтеграцияС1СДокументооборотКлиент.ОткрытьФайл(ИдентификаторФайла, Имя, Расширение,
			УникальныйИдентификатор);
			
	ИначеЕсли ТипЗнч(ВыбраннаяСтрока.СвязанныйФайл) = Тип("СправочникСсылка.Файлы") Тогда
			
		ДанныеФайла = СвязанныеФайлыВызовСервера.ПолучитьДанныеФайлаДляОткрытия(
				ВыбраннаяСтрока.СвязанныйФайл, УникальныйИдентификатор);

		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает версию для просмотра
&НаКлиенте
Процедура ОткрытьВерсиюДляПросмотра(ВыбраннаяСтрока)
	
	Если ТипЗнч(ВыбраннаяСтрока.ВерсияФайла) = Тип("Строка") Тогда
	
		ИдентификаторВерсии = ВыбраннаяСтрока.ВерсияФайла;
		Расширение = ВыбраннаяСтрока.Расширение;
		Имя = ВыбраннаяСтрока.Наименование;
		Размер = ВыбраннаяСтрока.Размер;
		ДатаМодификации = ВыбраннаяСтрока.ДатаМодификации;
		КаталогДляСохраненияДанных = ИнтеграцияС1СДокументооборотВызовСервера.ЛокальныйКаталогФайлов();
		
		ИнтеграцияС1СДокументооборотКлиент.ОткрытьВерсиюФайла(ИдентификаторВерсии,
			Имя,
			Расширение,
			УникальныйИдентификатор);
			
	ИначеЕсли ТипЗнч(ВыбраннаяСтрока.ВерсияФайла) = Тип("СправочникСсылка.ВерсииФайлов") Тогда
			
		ДанныеФайла = СвязанныеФайлыВызовСервера.ПолучитьДанныеФайлаДляОткрытия(
				ВыбраннаяСтрока.ВерсияФайла, УникальныйИдентификатор);
		
		РаботаСФайламиСлужебныйКлиент.ОткрытьВерсиюФайла(
			Неопределено,
			ДанныеФайла,
			УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

// Помечает или снимает пометку удаления с файла в выбранной строке
&НаКлиенте
Процедура ПометитьНаУдалениеСнятьПометкуЗавершение(Результат, ВыбраннаяСтрока) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СвязанныеФайлыВызовСервера.ПометитьНаУдалениеСнятьПометку(ВыбраннаяСтрока.СвязанныйФайл);
	ЗаполнитьСвязанныеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл()
	// выбрать и записать новый файл
	ОписаниеОбработчикаДобавленияФайла = Новый ОписаниеОповещения(
						"ОбработчикДобавленияФайла", ЭтаФорма);
	СвязанныеФайлыКлиентУХ.ДобавитьФайлВИБ(Владелец, ДокументID,
		ОписаниеОбработчикаДобавленияФайла,	ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикДобавленияФайла(ДобавленныйФайл, ДопПараметры) Экспорт
	Если ДобавленныйФайл <> Неопределено Тогда
		ЗаполнитьСвязанныеФайлы();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьСообщитьЗаполненВладелец(Отказ)
	Если НЕ ЗначениеЗаполнено(Владелец) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Форма не может быть открыта. Не указан владелец файлов!'");
		Сообщение.Сообщить();
	КонецЕсли;
	Возврат НЕ Отказ;
КонецФункции


#КонецОбласти


