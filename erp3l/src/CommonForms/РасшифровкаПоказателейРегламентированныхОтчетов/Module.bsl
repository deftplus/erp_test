
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МакетРасшифровки = ПолучитьОбщийМакет("РасшифровкаПоказателейРегламентированныхОтчетов");
	
	ИсходнаяТаблицаРасшифровок = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаРасшифровки);
	
	Если ТипЗнч(ИсходнаяТаблицаРасшифровок) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсходнаяТаблицаРасшифровок.Колонки.Найти("Организация") = Неопределено Тогда
		ИсходнаяТаблицаРасшифровок.Колонки.Добавить("Организация");
	КонецЕсли;
	
	ИсходнаяТаблицаРасшифровок.Индексы.Добавить("ИмяПоказателя");
	
	ЕстьПоказателиИзСписка = Ложь;
	
	Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
		Если ИсходнаяТаблицаРасшифровок.Найти(ИмяПоказателя, "ИмяПоказателя") <> Неопределено Тогда
			ЕстьПоказателиИзСписка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьПоказателиИзСписка Тогда
		Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
			ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
		КонецЦикла;
		
	Иначе
		ВыведенныеПоказатели = Новый ТаблицаЗначений;
		ВыведенныеПоказатели.Колонки.Добавить("ИмяПоказателя");
		ВыведенныеПоказатели.Индексы.Добавить("ИмяПоказателя");
		
		Для Каждого СтрокаТаблицыРасшифровки Из ИсходнаяТаблицаРасшифровок Цикл
			Если ВыведенныеПоказатели.Найти(СтрокаТаблицыРасшифровки.ИмяПоказателя, "ИмяПоказателя") = Неопределено Тогда
				
				ИмяПоказателя = СтрокаТаблицыРасшифровки.ИмяПоказателя;
				ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
				
				ВыведенныйПоказатель = ВыведенныеПоказатели.Добавить();
				ВыведенныйПоказатель.ИмяПоказателя = ИмяПоказателя;
			КонецЕсли;
		КонецЦикла;
		
		Если Параметры.Свойство("ЗаголовокРасшифровки") Тогда
			ЭтаФорма.Заголовок = Параметры.ЗаголовокРасшифровки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПолеРасшифровки

&НаКлиенте
Процедура ПолеРасшифровкиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		Если Расшифровка.Свойство("Отчет") Тогда
			
			НаименованиеПоказателя = Неопределено;
			НаименованиеСтроки = Неопределено;
			
			// Наименование показателя регламентированного отчета
			Расшифровка.Свойство("НаименованиеПоказателя", НаименованиеПоказателя);
			
			// Наименование текущей строки расшифровки
			Расшифровка.Свойство("НаименованиеСтроки", НаименованиеСтроки);
			
			ОткрытьФормуРасшифровки(Расшифровка.Отчет, НаименованиеСтроки, НаименованиеПоказателя);
			
		ИначеЕсли Расшифровка.Свойство("СписокПунктовМеню") 
			И Расшифровка.СписокПунктовМеню.Количество() > 1 Тогда
			
			ДополнительныеПараметры = Новый Структура("ДоступныеРасшифровки", Расшифровка);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыборИзМенюЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВыборИзМеню(ОписаниеОповещения, Расшифровка.СписокПунктовМеню, Элемент);
			
		ИначеЕсли Расшифровка.Свойство("Ссылка") Тогда
			
			ПоказатьЗначение(, Расшифровка.Ссылка);
			
		ИначеЕсли Расшифровка.Свойство("ИмяПоказателя") Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("АдресВременногоХранилищаРасшифровки", АдресРасшифровкиДетальныеЗаписи);
			ПараметрыФормы.Вставить("ИДИменПоказателей", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Расшифровка.ИмяПоказателя));
			
			ОткрытьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, ЭтотОбъект, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуРасшифровки(Расшифровка, НаименованиеСтроки, НаименованиеПоказателя)
	
	ИмяФормыОтчета = Расшифровка.ИмяОтчета;
			
	ПараметрыФормы = Новый Структура;
	
	Если ИмяФормыОтчета = "ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов" Тогда
		// Имя формы и другие ее параметры переданы через общий механизм расшифровок,
		// например из НалогНаПрибыльДекларация.ДобавитьЗаписиРасшифровкиПоказателяБРО()
		// Адрес временного хранилища в тот момент, очевидно, не мог быть определен.
		// Но это тот же адрес, который используется для формирования этого (вызывающего, уже существующего) экземпляра формы.
		ПараметрыФормы.Вставить("АдресВременногоХранилищаРасшифровки", Параметры.АдресВременногоХранилищаРасшифровки);
	КонецЕсли;
	
	Если Расшифровка.Свойство("ПараметрыФормы") Тогда
		Для Каждого ЭлементНастройки Из Расшифровка.ПараметрыФормы Цикл
			ПараметрыФормы.Вставить(ЭлементНастройки.Ключ, ЭлементНастройки.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если Расшифровка.Свойство("ПользовательскиеНастройки") Тогда
		ПараметрыФормы.Вставить("ПользовательскиеНастройки", Расшифровка.ПользовательскиеНастройки);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("НаименованиеПоказателя", НаименованиеПоказателя);
	ПараметрыФормы.Вставить("НаименованиеСтроки",     НаименованиеСтроки);
	ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы, , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзМенюЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДоступныеРасшифровки = ДополнительныеПараметры.ДоступныеРасшифровки;
		
		НаименованиеСтроки = Неопределено;
		НаименованиеПоказателя = Неопределено;
		
		// Наименование показателя регламентированного отчета
		ДоступныеРасшифровки.Свойство("НаименованиеПоказателя", НаименованиеПоказателя);
		
		// Наименование текущей строки расшифровки
		ДоступныеРасшифровки.Свойство("НаименованиеСтроки", НаименованиеСтроки);
		
		Расшифровка = Новый Структура;
		Если ДоступныеРасшифровки.Свойство(Результат.Значение, Расшифровка) Тогда
			ОткрытьФормуРасшифровки(Расшифровка.Отчет, НаименованиеСтроки, НаименованиеПоказателя);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоказателя(МакетРасшифровки, ТаблицаРасшифровок, ИмяПоказателя)
	
	СекцияЗаголовок = МакетРасшифровки.ПолучитьОбласть("Заголовок");
	СекцияИтог      = МакетРасшифровки.ПолучитьОбласть("Итог");
	СекцияПлюс      = МакетРасшифровки.ПолучитьОбласть("Плюс");
	СекцияМинус     = МакетРасшифровки.ПолучитьОбласть("Минус");
	СекцияСлагаемое = МакетРасшифровки.ПолучитьОбласть("Слагаемое");
	
	СекцияНазваниеОрг         = МакетРасшифровки.ПолучитьОбласть("НазваниеОрг");
	СекцияНазваниеОргБезПлюса = МакетРасшифровки.ПолучитьОбласть("НазваниеОргБезПлюса");
	
	СтрокиРасшифровки = ТаблицаРасшифровок.НайтиСтроки(Новый Структура("ИмяПоказателя", ИмяПоказателя));
	
	Если СтрокиРасшифровки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	Организации = Новый ТаблицаЗначений;
	Организации.Колонки.Добавить("Организация");
	Организации.Колонки.Добавить("Сумма");
	
	// Конкретная ячейка регламетированного отчета может расшифровываться либо в виде суммы/разности нескольких показателей,
	// либо таблицей детальных записей. 
	// В первом случае в ТаблицаРасшифровок будет несколько записей с одинаковым ИмяПоказателя.
	// Во втором случае в ТаблицаРасшифровок будет только одна строка с данным ИмяПоказателя, а в ее поле ДополнительныеПараметры
	// будет содержаться адрес таблицы детальных записей во временном хранилище.
	ДетальныеЗаписи = Неопределено;
	
	Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
		
		Если ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура") 
			 И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("ДетальныеЗаписи") Тогда
			// Расшифровка через таблицу детальных записей.
			ДетальныеЗаписи = СтрокаРасшифровки.ДополнительныеПараметры.ДетальныеЗаписи;
			// В строках таблицы присутствуют поля Организация и Сумма.
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ДетальныеЗаписи, Организации);
			
			Если Не ЭтоАдресВременногоХранилища(АдресРасшифровкиДетальныеЗаписи)
				 И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("ДетальныеЗаписиТаблицаРасшифровки") Тогда
				АдресРасшифровкиДетальныеЗаписи = ПоместитьВоВременноеХранилище(СтрокаРасшифровки.ДополнительныеПараметры.ДетальныеЗаписиТаблицаРасшифровки, УникальныйИдентификатор);
			КонецЕсли;	
		Иначе
			
			Если ЗначениеЗаполнено(СтрокаРасшифровки.Организация) Тогда
				Организация = СтрокаРасшифровки.Организация;
			Иначе
				Если ТаблицаРасшифровок.Колонки.Найти("ДополнительныеПараметры") <> Неопределено
				   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
				   И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Организация") Тогда
					Если ЗначениеЗаполнено(СтрокаРасшифровки.ДополнительныеПараметры.Организация) Тогда
						Организация = СтрокаРасшифровки.ДополнительныеПараметры.Организация;
					КонецЕсли;
				КонецЕсли;
				СтрокаРасшифровки.Организация = Организация;
			КонецЕсли;
			
			НоваяСтрока = Организации.Добавить();
			НоваяСтрока.Организация = Организация;
			НоваяСтрока.Сумма = СтрокаРасшифровки.Сумма;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Организации.Свернуть("Организация", "Сумма");
	ПоНесколькимОрганизациям = (Организации.Количество() > 1);
	
	// Вывод пустого заголовка (заполнение произойдет при выводе строки с непустым полем НаименованиеПоказателя).
	ПолеРасшифровки.Вывести(СекцияЗаголовок);
	
	ИтоговаяСумма = 0;
	ПерваяОрганизация = Истина;
	Для Каждого Организация Из Организации Цикл
		
		Если ПерваяОрганизация Тогда
			СекцияОрганизации = СекцияНазваниеОргБезПлюса;
			ПерваяОрганизация = Ложь;
		Иначе
			СекцияОрганизации = СекцияНазваниеОрг;
		КонецЕсли;
		
		Если ПоНесколькимОрганизациям Тогда
			СекцияОрганизации.Параметры.ИтогПоОрганизации = Организация.Сумма;
			СекцияОрганизации.Параметры.НазваниеОрганизации = ?(ЗначениеЗаполнено(Организация.Организация),
				Организация.Организация,
				НСтр("ru = 'Без указания организации';
					|en = 'Without company specification'"));
			ПолеРасшифровки.Вывести(СекцияОрганизации);
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
			
			// Расшифровку в виде таблице детальных записей выводим в особом порядке
			Если ДетальныеЗаписи <> Неопределено Тогда
				ВывестиДетальныеЗаписиПоОрганизации(СтрокаРасшифровки, ДетальныеЗаписи, Организация.Организация, МакетРасшифровки, ПоНесколькимОрганизациям);
				ИтоговаяСумма = ИтоговаяСумма + Организация.Сумма;
				Продолжить;
			КонецЕсли;	
			
			Если СтрокаРасшифровки.Организация <> Организация.Организация Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ПустаяСтрока(СтрокаРасшифровки.НаименованиеПоказателя) Тогда
				ПолеРасшифровки.Области.НаименованиеЗаголовок.Значение = СтрокаРасшифровки.НаименованиеПоказателя;
				Заголовок = СтрокаРасшифровки.НаименованиеПоказателя + " - расшифровка значения";
			КонецЕсли;
			
			Если НЕ ПерваяСтрока Тогда
				Если СтрокаРасшифровки.ЗнакОперации = "-" Тогда
					ПолеРасшифровки.Вывести(СекцияМинус);
				Иначе
					ПолеРасшифровки.Вывести(СекцияПлюс);
				КонецЕсли;
			Иначе
				ПерваяСтрока = Ложь;
			КонецЕсли;
			
			ПолеРасшифровки.Вывести(СекцияСлагаемое);
			
			ПолеРасшифровки.Области.СлагаемоеНаименование.Значение = ПолноеНаименованиеСлагаемого(СтрокаРасшифровки.НаименованиеСлагаемого) + ПолучитьНаименованиеДополнительныхПараметров(СтрокаРасшифровки.ДополнительныеПараметры);
			ПолеРасшифровки.Области.СлагаемоеСумма.Значение        = СтрокаРасшифровки.Сумма;
			
			Если СтрокаРасшифровки.ДополнительныеПараметры <> Неопределено
			   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
			   И (СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Отчет") 
			      Или СтрокаРасшифровки.ДополнительныеПараметры.Свойство("СписокПунктовМеню")) Тогда
				РасшифровкаОбласти = СтрокаРасшифровки.ДополнительныеПараметры;
				Если ТипЗнч(РасшифровкаОбласти) = Тип("Структура") Тогда
					// Наименование показателя регламентированного отчета
					РасшифровкаОбласти.Вставить("НаименованиеПоказателя", СтрокаРасшифровки.НаименованиеПоказателя);
					// Наименование текущей строки расшифровки
					РасшифровкаОбласти.Вставить("НаименованиеСтроки", ПолеРасшифровки.Области.СлагаемоеНаименование.Значение);
				КонецЕсли;
				ПолеРасшифровки.Области.СлагаемоеНаименование.Расшифровка = РасшифровкаОбласти;
				ПолеРасшифровки.Области.СлагаемоеСумма.Расшифровка = РасшифровкаОбласти;
			КонецЕсли;
			
			ИтоговаяСумма = ИтоговаяСумма + СтрокаРасшифровки.Сумма;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Вывод итога.
	ПолеРасшифровки.Вывести(СекцияИтог);
	ПолеРасшифровки.Области.ИтогСумма.Значение = ИтоговаяСумма;
			
КонецПроцедуры

&НаСервере
Процедура ВывестиДетальныеЗаписиПоОрганизации(СтрокаРасшифровки, ДетальныеЗаписи, Организация, МакетРасшифровки, ПоНесколькимОрганизациям)
	
	СекцияСлагаемое = МакетРасшифровки.ПолучитьОбласть("Слагаемое");
	
	Если Не ПустаяСтрока(СтрокаРасшифровки.НаименованиеПоказателя) Тогда
		ПолеРасшифровки.Области.НаименованиеЗаголовок.Значение = СтрокаРасшифровки.НаименованиеПоказателя;
		Заголовок = СтрШаблон(Нстр("ru = '%1 - расшифровка значения';
									|en = '%1 - value details'"), СтрокаРасшифровки.НаименованиеПоказателя);
	КонецЕсли;
		
	КоллекцияДетальныеЗаписи = ?(ПоНесколькимОрганизациям,
		ДетальныеЗаписи.НайтиСтроки(Новый Структура("Организация", Организация)),
		ДетальныеЗаписи);
	
	Для каждого ДетальнаяЗапись Из КоллекцияДетальныеЗаписи Цикл
		
		ПолеРасшифровки.Вывести(СекцияСлагаемое);
		ПолеРасшифровки.Области.СлагаемоеНаименование.Значение = ДетальнаяЗапись.Аналитика;
		ПолеРасшифровки.Области.СлагаемоеСумма.Значение        = ДетальнаяЗапись.Сумма;
		
		Если ЗначениеЗаполнено(ДетальнаяЗапись.Ссылка) Тогда
			ПолеРасшифровки.Области.СлагаемоеНаименование.Расшифровка = Новый Структура("Ссылка",ДетальнаяЗапись.Ссылка);
		КонецЕсли;	
		Если ЗначениеЗаполнено(ДетальнаяЗапись.ИмяПоказателя) Тогда
			ПолеРасшифровки.Области.СлагаемоеСумма.Расшифровка = Новый Структура("ИмяПоказателя", ДетальнаяЗапись.ИмяПоказателя);
		КонецЕсли;	
		
	КонецЦикла; 
	
КонецПроцедуры	

// Возвращает полное наименования слагаемого после обработки макросов в имени
//
// Параметры
//   НаименованиеСлагаемого - Строка - Исходное наименование слагаемого
//
// Возвращаемое значение:
//   Строка  - Обработанное наименование слагаемого
//
&НаСервере
Функция ПолноеНаименованиеСлагаемого(Знач НаименованиеСлагаемого)
	
	Если СтрНайти(НаименованиеСлагаемого, "!СКДР") = 1 Тогда
		Возврат "Развернутое сальдо на конец периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СККР") = 1 Тогда
		Возврат "Развернутое сальдо на конец периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СНД") = 1 Тогда
		Возврат "Сальдо на начало периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СНК") = 1 Тогда
		Возврат "Сальдо на начало периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СКД") = 1 Тогда
		Возврат "Сальдо на конец периода по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!СКК") = 1 Тогда
		Возврат "Сальдо на конец периода по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!ДО") = 1 Тогда
		Возврат "Оборот по дебету счета " + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!КО") = 1 Тогда
		Возврат "Оборот по кредиту счета " + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли СтрНайти(НаименованиеСлагаемого, "!ОБ") = 1 Тогда
		КодыСчетов = СокрЛП(Сред(НаименованиеСлагаемого, 4));
		ПозицияПробела = СтрНайти(КодыСчетов, " ");
		КодСчетаДт = СокрЛП(Лев(КодыСчетов, ПозицияПробела));
		КодСчетаКт = СокрЛП(Сред(КодыСчетов, ПозицияПробела + 1));
		
		Возврат "Оборот с дебета счета " + КодСчетаДт + " в кредит счета " + КодСчетаКт;
		
	Иначе
		Возврат(НаименованиеСлагаемого);
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеДополнительныхПараметров(ДополнительныеПараметры)
	
	НаименованиеДополнительныхПараметров = "";
	
	Если ДополнительныеПараметры <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.Свойство("Субконто1") Тогда
			Субконто = ДополнительныеПараметры.Субконто1;
			
			НаименованиеСубконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Субконто.ВидСубконто, "Наименование");
			ЗначениеСубконто     = Субконто.ЗначениеСубконто;
			
			Если ЗначениеСубконто <> Неопределено Тогда
				Если ТипЗнч(ЗначениеСубконто) = Тип("СписокЗначений") Тогда
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + "Субконто " + НаименованиеСубконто + " принимает "+?(ЗначениеСубконто.Количество()=1,"значение", "одно из следующих значений")+":" + Символы.ПС;
					Для Каждого Эл Из ЗначениеСубконто Цикл
						НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + Эл.Значение + ", ";
					КонецЦикла;
					НаименованиеДополнительныхПараметров = Лев(НаименованиеДополнительныхПараметров, СтрДлина(НаименованиеДополнительныхПараметров) - 2) + "; ";
				Иначе
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + "Субконто " + НаименованиеСубконто + " принимает значение " + ЗначениеСубконто + ";";
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НаименованиеДополнительныхПараметров;
	
КонецФункции

#КонецОбласти