
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Настройка структуры аналитического отчета '");
	Если НЕ ПустаяСтрока(Параметры.НаименованиеОтчета) Тогда
		Заголовок = Заголовок + "(" + Параметры.НаименованиеОтчета + ")";
	КонецЕсли;
	
	КомпоновщикНастроекПользовательский.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Параметры.URLСхемы));
	Параметры.Свойство("РасширеннаяНастройка", РасширеннаяНастройка);
	
	Если РасширеннаяНастройка Тогда
		КомпоновщикНастроекПользовательский.ЗагрузитьНастройки(Параметры.КомпоновщикНастроек.ПолучитьНастройки());
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.Расширенная;
	Иначе
		
		Вн_КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		Вн_КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Параметры.URLСхемы));
		Вн_КомпоновщикНастроек.ЗагрузитьНастройки(Параметры.КомпоновщикНастроек.ПолучитьНастройки());
		
		Для Каждого ТекТип Из ТипДиаграммы Цикл
			Элементы.ТипДиаграммы.СписокВыбора.Добавить(ТекТип);
		КонецЦикла;
		
		Элементы.ПредставлениеЭлементаОтчета.СписокВыбора.Добавить(Перечисления.ПредставленияЭлементовОтчетов.Таблица, Нстр("ru = 'Таблица'"), , БиблиотекаКартинок.Таблица);
		Элементы.ПредставлениеЭлементаОтчета.СписокВыбора.Добавить(Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица, Нстр("ru = 'Кросс - таблица'"), , БиблиотекаКартинок.КроссТаблица);
		Элементы.ПредставлениеЭлементаОтчета.СписокВыбора.Добавить(Перечисления.ПредставленияЭлементовОтчетов.Диаграмма, Нстр("ru = 'Диаграмма'"), , БиблиотекаКартинок.Диаграмма);
		
		Если Вн_КомпоновщикНастроек.Настройки.Структура.Количество() = 0 Тогда
			
			НоваяСтрока = Вн_КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ТиповыеОтчетыУХ.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
			ТиповыеОтчетыУХ.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
			
		КонецЕсли;
		
		// Скопируем настройки в компоновщик из компоновщика отчета
		ТиповыеОтчетыУХ.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Выбор,         Вн_КомпоновщикНастроек.Настройки.Выбор);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Отбор,         Вн_КомпоновщикНастроек.Настройки.Отбор);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.Порядок,       Вн_КомпоновщикНастроек.Настройки.Порядок);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.УсловноеОформление,   Вн_КомпоновщикНастроек.Настройки.УсловноеОформление, Ложь);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля, Вн_КомпоновщикНастроек.Настройки.ПользовательскиеПоля);
		ТиповыеОтчетыУХ.ЗаполнитьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных, Вн_КомпоновщикНастроек.Настройки.ПараметрыДанных);
		ТиповыеОтчетыУХ.ЗаполнитьЭлементы(КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода, Вн_КомпоновщикНастроек.Настройки.ПараметрыВывода);
		
		
		ЭлементОтчета = Вн_КомпоновщикНастроек.Настройки.Структура[0];
		ТипЭлементаОтчета = ТипЗнч(ЭлементОтчета);
		ПредставлениеЭлементаОтчета = ТиповыеОтчетыУХ.ПолучитьПредставлениеПоЭлементуСтруктуры(ЭлементОтчета);
		
		Элемент = КомпоновщикНастроекПользовательский.Настройки.Структура.Добавить(ТипЭлементаОтчета);
		
		Элементы.НастройкиСкрытыеЭлемент.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Элемент);
		// Настройки компоновщика отчета
		
		
		ТипДиаграммыОтчета = КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ChartType")).Значение;
		
		Если ТипЭлементаОтчета = Тип("ГруппировкаКомпоновкиДанных") Тогда
			
			ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "ПоляГруппировки", Истина);
		
		ИначеЕсли ТипЭлементаОтчета = Тип("ТаблицаКомпоновкиДанных") Тогда
			
			ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Строки", Истина);
			ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Колонки", Ложь);
					
		ИначеЕсли ТипЭлементаОтчета = Тип("ДиаграммаКомпоновкиДанных") Тогда
			
			ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Серии", Истина);
			ДобавитьПоляГруппировки(ЭлементОтчета, Элемент, "Точки", Ложь);
			
		КонецЕсли;
		
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.Пользовательская;
		
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С НАСТРОЙКАМИ КОМПОНОВЩИКА НАСТРОЕК.
//

&НаСервере
Процедура ОбновитьЭлементыФормы()
	

	СписокРесурсов = ТиповыеОтчетыУХ.ПолучитьСписокДоступныхРесурсов(КомпоновщикНастроекПользовательский);
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		Элементы.ПанельСтруктураОтчета.ТекущаяСтраница = Элементы.СтраницаТаблица;
	Иначе
		Элементы.ПанельСтруктураОтчета.ТекущаяСтраница = Элементы.СтраницаНеТаблица;
	КонецЕсли;
	
	Элементы.ТипДиаграммы.Видимость = (ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма);
	
	
	Если КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных.Элементы.Количество() = 0 Тогда
		Элементы.ПанельОтборПорядок.ТекущаяСтраница = Элементы.СтраницаБезПараметров;
	Иначе
		Элементы.ПанельОтборПорядок.ТекущаяСтраница = Элементы.СтраницаПараметры;
	КонецЕсли;
	
	Картинка = ТиповыеОтчетыУХ.ПолучитьКартинкуПредставленияЭлементаОтчета(ПредставлениеЭлементаОтчета);
	Если Картинка <> Неопределено Тогда
		КартинкаЗаголовка = Картинка;
	КонецЕсли;
	
	Если ПредставлениеЭлементаОтчета = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		Элементы.ПанельОформления.ТекущаяСтраница = Элементы.ЦветаДиаграммы;
	Иначе
		Элементы.ПанельОформления.ТекущаяСтраница = Элементы.ОформлениеПоказателей;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоляГруппировки(Элемент, ЭлементПользователя, ТипСтруктуры = "Строки", ПервоеИзмерение = Истина)
	
	// Добавим строки
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		СтрокиПользователя = ЭлементПользователя;
	Иначе
		// Добавляем фиктивную группировку без полей группировки
		СтрокиПользователя = ЭлементПользователя[ТипСтруктуры].Добавить();
	КонецЕсли;
	
	Если ПервоеИзмерение Тогда
		Элементы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(СтрокиПользователя);
	Иначе
		Элементы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(СтрокиПользователя);
	КонецЕсли;
	
	// Есть хотя бы одна строка группировки с хотя бы одним полем группировки
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		Группировка_Элемент = Элемент;
		ГруппировкиЕсть = Истина;
	ИначеЕсли ТипСтруктуры <> "ПоляГруппировки"
		    И Элемент[ТипСтруктуры].Количество() > 0 Тогда
	    // Получим первую группировку
		Группировка_Элемент = Элемент[ТипСтруктуры][0];
		ГруппировкиЕсть = Истина;
	Иначе
		ГруппировкиЕсть = Ложь;
	КонецЕсли;
	
	Пока ГруппировкиЕсть Цикл
		// Если ни одного поля группировки нет, значит в отчете есть детальные записи
		Если Группировка_Элемент.ПоляГруппировки.Элементы.Количество() = 0 Тогда
			ВыводитьДетальныеЗаписи = Истина;
			Прервать;
		КонецЕсли;
		// Определяем первое поле в очередной группировке и добавляем в пользовательские поля группировки
		ПолеГруппировки = Группировка_Элемент.ПоляГруппировки.Элементы[0];
		ПолеГруппировкиПользователя = СтрокиПользователя.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ПолеГруппировкиПользователя, ПолеГруппировки);
		Если Группировка_Элемент.Структура.Количество() = 0 Тогда
			Прервать;
		Иначе
			// Переходим на уровень ниже по группировкам
			Группировка_Элемент = Группировка_Элемент.Структура[0];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ДобавитьГруппировки(ЭлементОтчета, Элемент, ТипСтруктуры)
	
	// Добавим в компоновщик настроек строки группировки таблицы
	Если ТипСтруктуры = "ПоляГруппировки" Тогда
		СтрокиЭлемента = Элемент;
		ЭлементОтчета.ПоляГруппировки.Элементы.Очистить();
		ЭлементОтчета.Структура.Очистить();
	Иначе
		СтрокиЭлемента = Элемент[ТипСтруктуры][0];
		ЭлементОтчета[ТипСтруктуры].Очистить();
	КонецЕсли;
	
	Если СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() <> 0 Тогда
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = ЭлементОтчета;
		Иначе
			НоваяСтрока = ЭлементОтчета[ТипСтруктуры].Добавить();
		КонецЕсли;
	Иначе
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = ЭлементОтчета;
		Иначе
			НоваяСтрока = ЭлементОтчета[ТипСтруктуры];
		КонецЕсли;
	КонецЕсли;
	
	Если ТипСтруктуры = "ПоляГруппировки" И СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() = 0 Тогда
		НоваяСтрока = ЭлементОтчета.Родитель;
		ЭлементОтчета.Родитель.Структура.Удалить(ЭлементОтчета);
	КонецЕсли;
		
	Для каждого СтрокаГруппировки Из СтрокиЭлемента.ПоляГруппировки.Элементы Цикл
		НовоеПолеГруппировки = НоваяСтрока.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(НовоеПолеГруппировки, СтрокаГруппировки);
		ТиповыеОтчетыУХ.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
		ТиповыеОтчетыУХ.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
		Если СтрокиЭлемента.ПоляГруппировки.Элементы.Индекс(СтрокаГруппировки) = СтрокиЭлемента.ПоляГруппировки.Элементы.Количество() - 1 Тогда
			Прервать;
		КонецЕсли;
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = НоваяСтрока.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		Иначе
			НоваяСтрока = НоваяСтрока.Структура.Добавить();
		КонецЕсли;
	КонецЦикла;
	
	// Обработка вывода детальных записей
	Если ВыводитьДетальныеЗаписи И (ТипСтруктуры = "Строки" ИЛИ ТипСтруктуры = "ПоляГруппировки") Тогда
		Если ТипСтруктуры = "ПоляГруппировки" Тогда
			НоваяСтрока = НоваяСтрока.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		Иначе
			Если ТипЗнч(НоваяСтрока) = Тип("ГруппировкаТаблицыКомпоновкиДанных") Тогда
				НоваяСтрока = НоваяСтрока.Структура.Добавить();
			Иначе
				НоваяСтрока = НоваяСтрока.Добавить();
			КонецЕсли;
		КонецЕсли;
		ТиповыеОтчетыУХ.ДобавитьАвтоВыбранноеПоле(НоваяСтрока);
		ТиповыеОтчетыУХ.ДобавитьАвтоЭлементПорядка(НоваяСтрока);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕДАКТИРОВАНИЯ В РЕЖИМЕ РАСШИРЕННОЙ НАСТРОЙКИ.
//

&НаКлиенте
Процедура ПоляГруппировкиНедоступны()
	
	Элементы.СтраницыПолейГруппировки.ТекущаяСтраница = Элементы.НедоступныеНастройкиПолейГруппировки;
					
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПоляДоступны(ЭлементСтруктуры)
	
	Если КомпоновщикНастроекПользовательский.Настройки.НаличиеВыбораУЭлемента(ЭлементСтруктуры) Тогда
				
		ЛокальныеВыбранныеПоля = Истина;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
			
	Иначе
			
		ЛокальныеВыбранныеПоля = Ложь;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиВыбранныхПолей;
			
	КонецЕсли;
		
	Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Ложь;
					
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПоляНедоступны()
	
	ЛокальныеВыбранныеПоля = Ложь;
	Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Истина;
	Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НедоступныеНастройкиВыбранныхПолей;
					
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоступен(ЭлементСтруктуры)
	
	Если КомпоновщикНастроекПользовательский.Настройки.НаличиеОтбораУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныйОтбор = Истина;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
			
	Иначе
		
		ЛокальныйОтбор = Ложь;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиОтбора;
			
	КонецЕсли;
			
	Элементы.ЛокальныйОтбор.ТолькоПросмотр = Ложь;
	
КонецПроцедуры
		
&НаКлиенте
Процедура ОтборНедоступен()
	
	ЛокальныйОтбор = Ложь;
	Элементы.ЛокальныйОтбор.ТолькоПросмотр = Истина;
	Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НедоступныеНастройкиОтбора;
		
КонецПроцедуры

&НаКлиенте
Процедура ПорядокДоступен(ЭлементСтруктуры)
	
	Если КомпоновщикНастроекПользовательский.Настройки.НаличиеПорядкаУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныйПорядок = Истина;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
					
	Иначе
		
		ЛокальныйПорядок = Ложь;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПорядка;
					
	КонецЕсли;
			
	Элементы.ЛокальныйПорядок.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПорядокНедоступен()
	
	ЛокальныйПорядок = Ложь;
	Элементы.ЛокальныйПорядок.ТолькоПросмотр = Истина;
	Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НедоступныеНастройкиПорядка;
		
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеДоступно(ЭлементСтруктуры)
	
	Если КомпоновщикНастроекПользовательский.Настройки.НаличиеУсловногоОформленияУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальноеУсловноеОформление = Истина;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
					
	Иначе
		
		ЛокальноеУсловноеОформление = Ложь;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.ОтключенныеНастройкиУсловногоОформления;
					
	КонецЕсли;
			
	Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура УсловноеОформлениеНедоступно()
	
	ЛокальноеУсловноеОформление = Ложь;
	Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Истина;
	Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НедоступныеНастройкиУсловногоОформления;
		
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыводаДоступны(ЭлементСтруктуры)
	
	Если КомпоновщикНастроекПользовательский.Настройки.НаличиеПараметровВыводаУЭлемента(ЭлементСтруктуры) Тогда
		
		ЛокальныеПараметрыВывода = Истина;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
					
	Иначе
		
		ЛокальныеПараметрыВывода = Ложь;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПараметровВывода;
					
	КонецЕсли;
			
	Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыводаНедоступны()
	
	ЛокальныеПараметрыВывода = Ложь;
	Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Истина;
	Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НедоступныеНастройкиПараметровВывода;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураПриАктивизацииПоля(Элемент)
		
	Перем ВыбраннаяСтраница;
	
	Если Элементы.Структура.ТекущийЭлемент.Имя = "СтруктураНаличиеВыбора" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПолейВыбора;
		
	ИначеЕсли Элементы.Структура.ТекущийЭлемент.Имя = "СтруктураНаличиеОтбора" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаОтбора;
		
	ИначеЕсли Элементы.Структура.ТекущийЭлемент.Имя = "СтруктураНаличиеПорядка" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПорядка;
		
	ИначеЕсли Элементы.Структура.ТекущийЭлемент.Имя = "СтруктураНаличиеУсловногоОформления" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаУсловногоОформления;
		
	ИначеЕсли Элементы.Структура.ТекущийЭлемент.Имя = "СтруктураНаличиеПараметровВывода" Тогда
		
		ВыбраннаяСтраница = Элементы.СтраницаПараметровВывода;
		
	КонецЕсли;
	
	Если ВыбраннаяСтраница <> Неопределено Тогда
		
		Элементы.ПанельНастройкиЭлемента.ТекущаяСтраница = ВыбраннаяСтраница;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтруктураПриАктивизацииСтроки(Элемент)
	
	ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
	ТипЭлемента = ТипЗнч(ЭлементСтруктуры); 
	
	Если ТипЭлемента = Неопределено  ИЛИ
		 ТипЭлемента = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		 ТипЭлемента = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		 
		ПоляГруппировкиНедоступны();
		ВыбранныеПоляНедоступны();
		ОтборНедоступен();
		ПорядокНедоступен();
		УсловноеОформлениеНедоступно();
		ПараметрыВыводаНедоступны();
		
	ИначеЕсли ТипЭлемента = Тип("НастройкиКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		ПоляГруппировкиНедоступны();
		
		ЛокальныеВыбранныеПоля = Истина;
		Элементы.ЛокальныеВыбранныеПоля.ТолькоПросмотр = Истина;
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
		
		ЛокальныйОтбор = Истина;
		Элементы.ЛокальныйОтбор.ТолькоПросмотр = Истина;
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
		
		ЛокальныйПорядок = Истина;
		Элементы.ЛокальныйПорядок.ТолькоПросмотр = Истина;
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
		
		ЛокальноеУсловноеОформление = Истина;
		Элементы.ЛокальноеУсловноеОформление.ТолькоПросмотр = Истина;
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
		
		ЛокальныеПараметрыВывода = Истина;
		Элементы.ЛокальныеПараметрыВывода.ТолькоПросмотр = Истина;
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
		
	ИначеЕсли ТипЭлемента = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		 	  ТипЭлемента = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		 
		Элементы.СтраницыПолейГруппировки.ТекущаяСтраница = Элементы.НастройкиПолейГруппировки;
			
		ВыбранныеПоляДоступны(ЭлементСтруктуры);
		ОтборДоступен(ЭлементСтруктуры);
		ПорядокДоступен(ЭлементСтруктуры);
		УсловноеОформлениеДоступно(ЭлементСтруктуры);
		ПараметрыВыводаДоступны(ЭлементСтруктуры);
		
	ИначеЕсли ТипЭлемента = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		      ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ПоляГруппировкиНедоступны();
		ВыбранныеПоляДоступны(ЭлементСтруктуры);
		ОтборНедоступен();
		ПорядокНедоступен();
		УсловноеОформлениеДоступно(ЭлементСтруктуры);
		ПараметрыВыводаДоступны(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныеВыбранныеПоляПриИзменении(Элемент)
	
	Если ЛокальныеВыбранныеПоля Тогда
		
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.НастройкиВыбранныхПолей;
			
	Иначе
		
		Элементы.СтраницыПолейВыбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиВыбранныхПолей;

		ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
		КомпоновщикНастроекПользовательский.Настройки.ОчиститьВыборЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйОтборПриИзменении(Элемент)
	
	Если ЛокальныйОтбор Тогда
		
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.НастройкиОтбора;
			
	Иначе
		
		Элементы.СтраницыОтбора.ТекущаяСтраница = Элементы.ОтключенныеНастройкиОтбора;

		ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
		КомпоновщикНастроекПользовательский.Настройки.ОчиститьОтборЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйПорядокПриИзменении(Элемент)
	
	Если ЛокальныйПорядок Тогда
		
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.НастройкиПорядка;
					
	Иначе
		
		Элементы.СтраницыПорядка.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПорядка;
					
		ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
		КомпоновщикНастроекПользовательский.Настройки.ОчиститьПорядокЭлемента(ЭлементСтруктуры);
		
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ЛокальноеУсловноеОформлениеПриИзменении(Элемент)

	Если ЛокальноеУсловноеОформление Тогда
		
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.НастройкиУсловногоОформления;
					
	Иначе
		
		Элементы.СтраницыУсловногоОформления.ТекущаяСтраница = Элементы.ОтключенныеНастройкиУсловногоОформления;
					
		ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
		КомпоновщикНастроекПользовательский.Настройки.ОчиститьУсловноеОформлениеЭлемента(ЭлементСтруктуры);
					
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныеПараметрыВыводаПриИзменении(Элемент)
	
	Если ЛокальныеПараметрыВывода Тогда
		
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.НастройкиПараметровВывода;
					
	Иначе
		
		Элементы.СтраницыПараметровВывода.ТекущаяСтраница = Элементы.ОтключенныеНастройкиПараметровВывода;
					
		ЭлементСтруктуры = КомпоновщикНастроекПользовательский.Настройки.ПолучитьОбъектПоИдентификатору(Элементы.Структура.ТекущаяСтрока);
		КомпоновщикНастроекПользовательский.Настройки.ОчиститьПараметрыВыводаЭлемента(ЭлементСтруктуры);
	КонецЕсли;
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕДАКТИРОВАНИЯ СОСТАВА СТРОК/КОЛОНОК/ПОЛЕЙ.
//


/////////////////////////////////////////////////////////


&НаКлиенте
Функция ПолеДоступно(Поле, ТабличноеПоле, ТипЭлемента = Неопределено)
	
	Если ТипЗнч(ТабличноеПоле.Значение) = Тип("ПоляГруппировкиКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляПолейГруппировок.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ПолеГруппировкиКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ВыбранныеПоляКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляВыбора.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ВыбранноеПолеКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ПорядокКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляПорядка.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ЭлементПорядкаКомпоновкиДанных");
	ИначеЕсли ТипЗнч(ТабличноеПоле.Значение) = Тип("ОтборКомпоновкиДанных") Тогда
		МожноДобавить = (ТабличноеПоле.Значение.ДоступныеПоляОтбора.НайтиПоле(Поле) <> Неопределено);
		ТипЭлемента = Тип("ЭлементОтбораКомпоновкиДанных");
	Иначе
		МожноДобавить = Ложь;
	КонецЕсли;
	
	Возврат МожноДобавить;
		
КонецФункции

&НаСервере
Процедура ИзменитьПредставлениеОтчета(СтароеПредставление, НовоеПредставление)
	
	
	Если СтароеПредставление = НовоеПредставление Тогда
		Возврат;
	КонецЕсли;
	
	НовыйТипЭлемента = ТиповыеОтчетыУХ.ПолучитьТипЭлементаПоПредставлению(НовоеПредставление);
	НовыйЭлемент = КомпоновщикНастроекПользовательский.Настройки.Структура.Добавить(НовыйТипЭлемента);
	
	Если НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		ТиповыеОтчетыУХ.ДобавитьАвтоВыбранноеПоле(НовыйЭлемент);
	КонецЕсли;
	
	Если СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0];
		СтруктураКолонок = Неопределено;
	ИначеЕсли СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Строки[0];
		СтруктураКолонок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Колонки[0];
	ИначеЕсли СтароеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		СтруктураСтрок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Серии[0];
		СтруктураКолонок = КомпоновщикНастроекПользовательский.Настройки.Структура[0].Точки[0];
	КонецЕсли;
	
	Если НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Таблица Тогда
		
		Группировки = НовыйЭлемент;
		ТиповыеОтчетыУХ.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		Элементы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Группировки);
		
	ИначеЕсли НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.КроссТаблица Тогда
		
		Группировки = НовыйЭлемент.Строки.Добавить();
		ТиповыеОтчетыУХ.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		Элементы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Группировки);
		
		Группировки = НовыйЭлемент.Колонки.Добавить();
		ТиповыеОтчетыУХ.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураКолонок);
		Элементы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Группировки);
		
		Если ВыводитьДетальныеЗаписи тогда
			
			ЕстьДетальныеПоля = ложь;
			
			Для каждого Поле из КомпоновщикНастроекПользовательский.Настройки.Выбор.Элементы Цикл
				
				ПоляПроверки = КомпоновщикНастроекПользовательский.Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Поле.Поле);
				
				Если ПоляПроверки <> Неопределено и НЕ ПоляПроверки.Ресурс тогда
					
					ЕстьДетальныеПоля = истина;
					Прервать;
					
				КонецЕсли;
			КонецЦикла;
			
			ВыводитьДетальныеЗаписи = ЕстьДетальныеПоля И ВыводитьДетальныеЗаписи;
		
		КонецЕсли;
		
	ИначеЕсли НовоеПредставление = Перечисления.ПредставленияЭлементовОтчетов.Диаграмма Тогда
		
		Группировки = НовыйЭлемент.Серии.Добавить();
		ТиповыеОтчетыУХ.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураСтрок);
		Элементы.НастройкиСкрытыеГруппировкиСтрок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Группировки);
		
		Группировки = НовыйЭлемент.Точки.Добавить();
		ТиповыеОтчетыУХ.СкопироватьНастройкиКомпоновкиДанных(Группировки, СтруктураКолонок);
		Элементы.НастройкиСкрытыеГруппировкиКолонок.ТекущаяСтрока = КомпоновщикНастроекПользовательский.Настройки.ПолучитьИдентификаторПоОбъекту(Группировки);
		
	КонецЕсли;
	
	КомпоновщикНастроекПользовательский.Настройки.Структура.Удалить(КомпоновщикНастроекПользовательский.Настройки.Структура[0]);
	СтароеПредставление = НовоеПредставление;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеЭлементаОтчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ИзменитьПредставлениеОтчета(ПредставлениеЭлементаОтчета, ВыбранноеЗначение);
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеЭлементаОтчетаПриИзменении(Элемент)
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОповеститьОВыборе(ЗаполнитьКомпоновщикНастроекОтчета(РасширеннаяНастройка));
	
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьКомпоновщикНастроекОтчета(РасширеннаяНастройка)
	
	Если РасширеннаяНастройка Тогда
		Возврат Новый ФиксированнаяСтруктура("РасширеннаяНастройка, НастройкиОтчета", Истина, КомпоновщикНастроекПользовательский.ПолучитьНастройки());
	Иначе
		Вн_КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		Вн_КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Параметры.URLСхемы));
		НастройкиОтчета = Вн_КомпоновщикНастроек.ПолучитьНастройки();
		
		// Настройки компоновщика отчета
		Элемент = КомпоновщикНастроекПользовательский.Настройки.Структура[0];
		ТипЭлемента = ТипЗнч(Элемент);
		
		ЭлементОтчета = НастройкиОтчета.Структура.Добавить(ТипЭлемента);
		Если ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
			ТиповыеОтчетыУХ.ДобавитьАвтоВыбранноеПоле(ЭлементОтчета);
		КонецЕсли;
		
		// Скопируем настройки в компоновщик из компоновщика отчета
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НастройкиОтчета.Выбор, КомпоновщикНастроекПользовательский.Настройки.Выбор);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НастройкиОтчета.Отбор, КомпоновщикНастроекПользовательский.Настройки.Отбор);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НастройкиОтчета.Порядок, КомпоновщикНастроекПользовательский.Настройки.Порядок);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НастройкиОтчета.УсловноеОформление, КомпоновщикНастроекПользовательский.Настройки.УсловноеОформление, Ложь);
		ТиповыеОтчетыУХ.СкопироватьЭлементы(НастройкиОтчета.ПользовательскиеПоля, КомпоновщикНастроекПользовательский.Настройки.ПользовательскиеПоля);
		ТиповыеОтчетыУХ.ЗаполнитьЭлементы(НастройкиОтчета.ПараметрыДанных, КомпоновщикНастроекПользовательский.Настройки.ПараметрыДанных);
		ТиповыеОтчетыУХ.ЗаполнитьЭлементы(НастройкиОтчета.ПараметрыВывода, КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода);
		
		Если ТипЭлемента = Тип("ГруппировкаКомпоновкиДанных") Тогда
			
			ДобавитьГруппировки(ЭлементОтчета, Элемент, "ПоляГруппировки");
			
		ИначеЕсли ТипЭлемента = Тип("ТаблицаКомпоновкиДанных") Тогда
			
			ДобавитьГруппировки(ЭлементОтчета, Элемент, "Строки");
			ДобавитьГруппировки(ЭлементОтчета, Элемент, "Колонки");
					
		ИначеЕсли ТипЭлемента = Тип("ДиаграммаКомпоновкиДанных") Тогда
			
			ДобавитьГруппировки(ЭлементОтчета, Элемент, "Серии");
			ДобавитьГруппировки(ЭлементОтчета, Элемент, "Точки");
			
		КонецЕсли;
		
		Возврат Новый ФиксированнаяСтруктура("РасширеннаяНастройка, НастройкиОтчета", РасширеннаяНастройка, НастройкиОтчета);
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееПоле()
	
	Возврат КомпоновщикНастроекПользовательский.Настройки.ДоступныеПоляГруппировок.ПолучитьОбъектПоИдентификатору(Элементы.ТабличноеПолеДоступныеПоля.ТекущаяСтрока);
	
КонецФункции

&НаКлиенте
Процедура НастройкаПользовательскихПолей_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	Если ВыбранноеЗначение <> Неопределено Тогда
		КомпоновщикНастроекПользовательский = ВыбранноеЗначение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПользовательскихПолей(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КомпоновщикНастроек", КомпоновщикНастроекПользовательский);
	ОписаниеОЗакрытии = Новый ОписаниеОповещения("НастройкаПользовательскихПолей_Завершение", ЭтотОбъект);
	Результат = ОткрытьФорму("Обработка.КонструкторПользовательскихПолей.Форма.Форма_Управляемая", СтруктураПараметров, , , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДиаграммыПриИзменении(Элемент)
	
	ЗначениеПараметра = КомпоновщикНастроекПользовательский.Настройки.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ChartType"));
	ЗначениеПараметра.Значение = ТипДиаграммыОтчета;
	ЗначениеПараметра.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиВыводаИОформления_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	Если ВыбранноеЗначение <> Неопределено Тогда
		КомпоновщикНастроекПользовательский = ВыбранноеЗначение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиВыводаИОформления(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КомпоновщикНастроек", КомпоновщикНастроекПользовательский);
	ОписаниеОЗакрытии = Новый ОписаниеОповещения("НастройкиВыводаИОформления_Завершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ФормаДополнительнойНастройкиОтчета_Управляемая", СтруктураПараметров, , , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры



