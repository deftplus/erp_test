
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДополнительныеЯзыкиУХ.УстановитьЗаголовкиДопЯзыков(ЭтаФорма);
	
	ТаблицаАналитики=Параметры.ТаблицаАналитики;
	
	Владелец=Параметры.Владелец;	
	
	Если ЗначениеЗаполнено(Параметры.ТипЗначенияВладельца) Тогда
				
		Элементы.Владелец.ОграничениеТипа=Параметры.ТипЗначенияВладельца;
		Элементы.Владелец.Видимость=Истина;
		
	Иначе
		
		Элементы.Владелец.Видимость=Ложь;
		
	КонецЕсли;
	
	ОбновитьТаблицуЭлементов();		
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуЭлементов()
	
	МетаданныеОбъекта=ОбщегоНазначенияУХ.ПолучитьОбъектМетаданныхПоТаблицеАналитики(ТаблицаАналитики);
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ТаблицаЭлементов.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ДанныеИзменены,
	|	ТаблицаЭлементов.Наименование КАК Наименование,
	|	ТаблицаЭлементов.Наименование1 КАК Наименование1,
	|	ТаблицаЭлементов.Наименование2 КАК Наименование2,";
	
	Если МетаданныеОбъекта.Иерархический И МетаданныеОбъекта.ВидИерархии=Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда 
		
		Запрос.Текст=Запрос.Текст+"
		
		|	ВЫБОР
		|		КОГДА ТаблицаЭлементов.ЭтоГруппа
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ТаблицаЭлементов.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ТипЭлемента";
		
	Иначе
		
		Запрос.Текст=Запрос.Текст+"
		
		|	ВЫБОР
		|		КОГДА ТаблицаЭлементов.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ТипЭлемента";
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"
	|ИЗ
	|	"+ТаблицаАналитики+" КАК ТаблицаЭлементов";
	
	Если ЗначениеЗаполнено(Владелец) Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|ГДЕ
		|	 ТаблицаЭлементов.Владелец=&Владелец";
		
		Запрос.УстановитьПараметр("Владелец",Владелец);
		
	КонецЕсли;
	
	Запрос.Текст=Запрос.Текст+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаЭлементов");	
	
КонецПроцедуры // ОбновитьТаблицуЭлементов() 

&НаКлиенте
Процедура Записать(Команда)
	
	  ЗаписатьИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ЗаписатьИзменения() Тогда
		
		Закрыть();
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИзменения()
	
	ЕстьОшибки=Ложь;
	
	Для Каждого Строка ИЗ ТаблицаЭлементов Цикл
		
		Если НЕ Строка.ДанныеИзменены Тогда
			
			Продолжить;
			
		Иначе
			
			Попытка
				
				СправочникОбъект=Строка.Ссылка.ПолучитьОбъект();
				СправочникОбъект.Наименование1=Строка.Наименование1;
				СправочникОбъект.Наименование2=Строка.Наименование2;
				СправочникОбъект.ОбменДанными.Загрузка=Истина;
				СправочникОбъект.Записать();
				Строка.ДанныеИзменены=Ложь;
				
			Исключение
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Не удалось изменить наименования на дополнительных языках для элемента "+Строка.Наименование+": !'"+ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				Сообщение.Сообщить();
				
				ЕстьОшибки=Истина;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НЕ ЕстьОшибки;
			
КонецФункции // ЗаписатьИзменения() 
	

&НаКлиенте
Процедура ВладелецОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьТаблицуЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ОбновитьТаблицуЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		
		Элементы.ТаблицаЭлементов.ТекущиеДанные.ДанныеИзменены=Истина;
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = // порядок существенен в дальнейшем алгоритме
	"Таблицы Microsoft Excel (*.xls, *.xlsx)|*.xls; *.xlsx";
	
	ДопПараметры = Новый Структура("ДиалогВыбораФайла", ДиалогВыбораФайла);
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаВыбораФайла", ЭтотОбъект, ДопПараметры);
	ДиалогВыбораФайла.Показать(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт 
    
    ДиалогВыбораФайла = ДополнительныеПараметры.ДиалогВыбораФайла;    
    
    Если НЕ (ВыбранныеФайлы <> Неопределено) Тогда
        Возврат;
    КонецЕсли;
    
    ПолноеИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
    
    Файл = Новый Файл(ПолноеИмяФайла);
    Расширение = НРег(Сред(Файл.Расширение, 2)); // начинается точкой
    
    Если Расширение = "xls" ИЛИ Расширение = "xlsx" Тогда
        ТипФайлаИсточника = 2;
    Иначе
        ТипФайлаИсточника = 0;
    КонецЕсли;
    
    Если ТипФайлаИсточника = 0 Тогда
        ОбщегоНазначенияУХ.СообщитьОбОшибке("Не удалось определить тип импортируемого файла!");
        Возврат;
    КонецЕсли;
    
    АдресХранилища = "";
	
	ДопПараметры = Новый Структура("Расширение, ТипФайлаИсточника", 
									Расширение, ТипФайлаИсточника);
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаВыбораФайлаЗавершение", ЭтотОбъект, ДопПараметры);
	
	НачатьПомещениеФайла(Оповещение, АдресХранилища, ПолноеИмяФайла, Ложь, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбораФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    АдресХранилища 		= Адрес;
    ПолноеИмяФайла 		= ВыбранноеИмяФайла;
	Расширение 			= ДополнительныеПараметры.Расширение;
	ТипФайлаИсточника 	= ДополнительныеПараметры.ТипФайлаИсточника;
	
	ТекстОшибки = "";
	
	Excel_Настройки = Неопределено;
	ExcelApplication = ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Создать(Excel_Настройки);
	
	Если ExcelApplication = Неопределено Тогда
		ВызватьИсключение "Не удалось создать COM-объект Microsoft Excel.";
	КонецЕсли;
	
	Workbook = ExcelApplication.Workbooks.Open(ПолноеИмяФайла);
	
	СписокЛистов = Новый СписокЗначений;
	Для НомерЛиста = 1 По Workbook.Sheets.Count Цикл
		СписокЛистов.Добавить(НомерЛиста, Workbook.Sheets(НомерЛиста).Name);
	КонецЦикла;
	
	Workbook.Close(False);
	
	ОбщегоНазначенияMicrosoftExcelКлиентСерверУХ.Закрыть(ExcelApplication, Excel_Настройки);
	
	Workbook=Неопределено;
	
	Если СписокЛистов.Количество() = 0 Тогда
		ОбщегоНазначенияУХ.СообщитьОбОшибке("Загрузка не удалась: выбранный файл не содержит листов!");
		Возврат;
	КонецЕсли;
	
	ВыбранныйЛист = Неопределено;
	
	ДопПараметры = Новый Структура("АдресХранилища, Расширение", АдресХранилища, Расширение);
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаВыбораЛиста", ЭтотОбъект, ДопПараметры);
	СписокЛистов.ПоказатьВыборЭлемента(Оповещение, "Выберите лист:", СписокЛистов[0]);
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаВыбораЛиста(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт 
    
    АдресХранилища = ДополнительныеПараметры.АдресХранилища;
    Расширение = ДополнительныеПараметры.Расширение;
        
    ВыбранныйЛист = ВыбранныйЭлемент;
    
    Если ВыбранныйЛист = Неопределено Тогда
        Возврат;
    КонецЕсли;
			
	ДанныеИмпортироватьНаСервере(АдресХранилища, ВыбранныйЛист.Значение, Расширение); 
			
КонецПроцедуры

&НаСервере
Процедура ДанныеИмпортироватьНаСервере(АдресХранилища, ИмяЛиста, Расширение)
	
	ТаблицаДанных=ДополнительныеЯзыкиУХ.ЗагрузитьТаблицуТекстовИзExcel(АдресХранилища, ИмяЛиста, Расширение);
	
	Если ТаблицаДанных=Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ТекущиеДанные.Ссылка КАК Ссылка,
	|	ТекущиеДанные.ТипЭлемента КАК ТипЭлемента,
	|	ТекущиеДанные.Наименование КАК Наименование,
	|	ТекущиеДанные.Наименование1 КАК Наименование1,
	|	ТекущиеДанные.Наименование2 КАК Наименование2
	|ПОМЕСТИТЬ ТекущиеДанные
	|ИЗ
	|	&ТекущиеДанные КАК ТекущиеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ";
	
	Для Каждого Колонка ИЗ ТаблицаДанных.Колонки Цикл
		
		Запрос.Текст=Запрос.Текст+"	
		|	НовыеДанные."+Колонка.Имя+" КАК "+Колонка.Имя+",";
		
	КонецЦикла;
	
	Запрос.Текст=Запрос.Текст+"
	|	НовыеДанные.Наименование КАК Наименование
	|ПОМЕСТИТЬ НовыеДанные
	|ИЗ
	|	&НовыеДанные КАК НовыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|ТекущиеДанные.Наименование КАК Наименование,";
	
	Если ТаблицаДанных.Колонки.Найти("Наименование1")=Неопределено Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|ТекущиеДанные.Наименование1 КАК НовоеНаименование1,";
		
	Иначе
		
		Запрос.Текст=Запрос.Текст+"
		|	ВЫБОР
		|		КОГДА НовыеДанные.Наименование1 ЕСТЬ NULL
		|			ТОГДА ТекущиеДанные.Наименование1
		|		ИНАЧЕ НовыеДанные.Наименование1
		|	КОНЕЦ КАК НовоеНаименование1,";
		
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("Наименование2")=Неопределено Тогда
		
		Запрос.Текст=Запрос.Текст+"
		|ТекущиеДанные.Наименование2 КАК НовоеНаименование2,";
		
	Иначе
		
		Запрос.Текст=Запрос.Текст+"
		|	ВЫБОР
		|		КОГДА НовыеДанные.Наименование2 ЕСТЬ NULL
		|			ТОГДА ТекущиеДанные.Наименование2
		|		ИНАЧЕ НовыеДанные.Наименование2
		|	КОНЕЦ КАК НовоеНаименование2,";
		
	КонецЕсли;

	Запрос.Текст=Запрос.Текст+"	
	|	ТекущиеДанные.Ссылка КАК Ссылка,
	|	ТекущиеДанные.ТипЭлемента КАК ТипЭлемента,
	|	ТекущиеДанные.Наименование1 КАК СтароеНаименование1,
	|	ТекущиеДанные.Наименование2 КАК СтароеНаименование2
	|Поместить ДанныеКОбновлению
	|ИЗ
	|	ТекущиеДанные КАК ТекущиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ НовыеДанные КАК НовыеДанные
	|		ПО ТекущиеДанные.Наименование = НовыеДанные.Наименование
	|;
	|ВЫБРАТЬ ДанныеКОбновлению.Ссылка, 
	|ДанныеКОбновлению.Наименование, 
	|ДанныеКОбновлению.ТипЭлемента,
	|ДанныеКОбновлению.НовоеНаименование1 КАК Наименование1,
	|ДанныеКОбновлению.НовоеНаименование2 КАК Наименование2,
	|ВЫБОР КОГДА ДанныеКОбновлению.НовоеНаименование1=ДанныеКОбновлению.СтароеНаименование1 И ДанныеКОбновлению.НовоеНаименование2=ДанныеКОбновлению.СтароеНаименование2 Тогда Ложь
	|Иначе Истина КОНЕЦ КАК ДанныеИзменены
	|ИЗ ДанныеКОбновлению КАК ДанныеКОбновлению";
	
	Запрос.УстановитьПараметр("ТекущиеДанные",РеквизитФормыВЗначение("ТаблицаЭлементов"));
	Запрос.УстановитьПараметр("НовыеДанные",ТаблицаДанных);
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаЭлементов");
		
КонецПроцедуры // ДанныеИмпортироватьНаСервере()


