
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Бланк 								= Параметры.Бланк;
	Контекст  							= ПолучитьИзВременногоХранилища(Параметры.АдресТаблицИнтерфейса);
	АдресТаблицИнтерфейса	 			= Параметры.АдресТаблицИнтерфейса; 
	СтруктураФильтровАдрес 				= Параметры.СтруктураФильтровАдрес;
	Периодичность 						= Параметры.Периодичность;
	глОтборы 							= Параметры.глОтборы;	
	тКэшНастроекБыстрыхОтборовАдрес 	= Параметры.тКэшНастроекБыстрыхОтборовАдрес;
	ТекущийОбъект 						= Параметры.ТекущийОбъект;
	
	СоздатьРеквизитыФильтры(Контекст.ТаблицаСтраницы);
	ОбновитьПолеФильтров(Контекст.ТаблицаСтраницы);
	ЗаполнитьПоляФильтров(Контекст.ТаблицаСтраницы);			
	
	УстановитьДоступностьЭлементов();

	
КонецПроцедуры


&НаСервере
Процедура СоздатьРеквизитыФильтры(ТаблицаДоступныеПоля)

	МассивНовыхРеквизитов = Новый Массив;
	Для Каждого нПоле Из ТаблицаДоступныеПоля Цикл
		
		Если нПоле.Код = "Фильтр_Сценарии" ИЛИ  нПоле.Код = "Фильтр_Валюты" ИЛИ нПоле.Код = "Фильтр_Организации" ИЛИ нПоле.Код = "Фильтр_Проекты" Тогда
			 Продолжить;
		КонецЕсли;
		
		НовыйРеквизит  = Новый РеквизитФормы(нПоле.Код, Новый ОписаниеТипов(нПоле.ТипСтрока), , нПоле.Наименование);
		МассивНовыхРеквизитов.Добавить(НовыйРеквизит);
		
	КонецЦикла;
    ИзменитьРеквизиты(МассивНовыхРеквизитов);
    
КонецПроцедуры

&НаСервере
Процедура  ОбновитьПолеФильтров(СтруктураСтраниц)
	
	ПодгруппаФильтры = Элементы.Найти("ГрПрочиеОтборы");
			
	Для Каждого СтрПоле из СтруктураСтраниц Цикл
		КодПоля = СтрПоле.Код;
		
		Если КодПоля = "Фильтр_Сценарии" ИЛИ  КодПоля = "Фильтр_Валюты" ИЛИ КодПоля = "Фильтр_Организации" ИЛИ КодПоля = "Фильтр_Проекты" Тогда
			 Продолжить;
		КонецЕсли;

		
		ЭлементТаблицаДанных =  Элементы.Найти("Элемент_"+КодПоля);	
		Если  ЭлементТаблицаДанных = Неопределено Тогда
			ЭлементТаблицаДанных  = Элементы.Добавить("Элемент_"+КодПоля, Тип("ПолеФормы"), ПодгруппаФильтры);
			ЭлементТаблицаДанных.ПутьКДанным  = КодПоля;
			ЭлементТаблицаДанных.Вид = ВидПоляФормы.ПолеВвода;
			//ЭлементТаблицаДанных.ЦветФона = Новый Цвет(245,245,245);
			ЭлементТаблицаДанных.УстановитьДействие("ПриИзменении","НарисоватьТаблицу");
			ЭлементТаблицаДанных.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево; 
			ЭлементТаблицаДанных.Ширина = 30;
			ЭлементТаблицаДанных.РастягиватьПоГоризонтали = Истина;
			ЭлементТаблицаДанных.АвтоМаксимальнаяШирина = Ложь;
			ЭлементТаблицаДанных.ЦветРамки = Новый Цвет(160,160,160);
			ЭлементТаблицаДанных.КнопкаОткрытия = Ложь;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеОтборов();
	
	  СтруктураФильтров = ПолучитьИзВременногоХранилища(СтруктураФильтровАдрес);
	
	
	  Контекст  = ПолучитьИзВременногоХранилища(АдресТаблицИнтерфейса);
	  ПредставлениеОтборов = СокрЛП(Строка(Бланк))+"  "+"Период: с "+ПериодПланированияОтборНачало+" по "+ПериодПланированияОтборОкончание+" ";
	  
	  Если ЗначениеЗаполнено(ПериодПланированияОтборНачало) Тогда
		  СтруктураФильтров.Вставить("ГоризонтДатаНачала",ПериодПланированияОтборНачало.ДатаНачала);
	  КонецЕсли;
	  
	  Если ЗначениеЗаполнено(ПериодПланированияОтборОкончание) Тогда
	  	  СтруктураФильтров.Вставить("ГоризонтДатаОкончания",ПериодПланированияОтборОкончание.ДатаОкончания);
	  КонецЕсли;

	  
	  Для Каждого СтрПоле из Контекст.ТаблицаСтраницы Цикл
		  ПредставлениеОтборов =ПредставлениеОтборов+СтрПоле.Наименование+":"+ЭтаФорма[СтрПоле.Код]+" ";  
		  СтруктураФильтров.Вставить(СтрПоле.Код,ЭтаФорма[СтрПоле.Код])
	  КонецЦикла;
	
	  СтруктураФильтровАдрес = ПоместитьВоВременноеХранилище(СтруктураФильтров,СтруктураФильтровАдрес);
	
	  тКэшНастроекБыстрыхОтборов =  ПолучитьИзВременногоХранилища(тКэшНастроекБыстрыхОтборовАдрес);
	  ТекущиеОтборы = тКэшНастроекБыстрыхОтборов.НайтиСтроки(Новый Структура ("ИмяОбъекта",ТекущийОбъект));

	   Для Каждого Стр Из ТекущиеОтборы Цикл
		  
		   Если  стр.Фильтр = "Фильтр_Периоды" Тогда
			   
			   Стр.Фиксировать = ЗафиксироватьПериод;
			   
		   ИначеЕсли  стр.Фильтр = "Фильтр_Сценарии" Тогда
			   
			   Стр.Фиксировать = ЗафиксироватьСценарий;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Организации" Тогда
			   
			   Стр.Фиксировать = ЗафиксироватьОрганизацию;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Валюты" Тогда
			   
			   Стр.Фиксировать = ЗафиксироватьВалюту;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Проекты" Тогда
		   	   
			   Стр.Фиксировать = ЗафиксироватьПроект;

		   КонецЕсли;	   
		  
	  КонецЦикла;	  

	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляФильтров(ТаблицаСтраницы);
	
	  СтруктураФильтров 		 = 	ПолучитьИзВременногоХранилища(СтруктураФильтровАдрес);	  
	  тКэшНастроекБыстрыхОтборов =  ПолучитьИзВременногоХранилища(тКэшНастроекБыстрыхОтборовАдрес);
	  
	  ЗаполнитьОтборПоПериодам(СтруктураФильтров.ГоризонтДатаНачала,СтруктураФильтров.ГоризонтДатаОкончания);
	  
	  Для Каждого СтрПоле из ТаблицаСтраницы Цикл
		  Если СтруктураФильтров.Свойство(СтрПоле.Код) Тогда  
			  ЭтаФорма[СтрПоле.Код] = СтруктураФильтров[СтрПоле.Код];
		  КонецЕсли;	  
	  КонецЦикла;
		
	  ТекущиеОтборы = тКэшНастроекБыстрыхОтборов.НайтиСтроки(Новый Структура ("ИмяОбъекта,Фиксировать",ТекущийОбъект,Истина));
	  
	  Для Каждого Стр Из ТекущиеОтборы Цикл
		  
		   Если  стр.Фильтр = "Фильтр_Периоды" Тогда
			   
			   ЗафиксироватьПериод = Стр.Фиксировать;
			   
		   ИначеЕсли  стр.Фильтр = "Фильтр_Сценарии" Тогда
			   
			  ЗафиксироватьСценарий =  Стр.Фиксировать;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Организации" Тогда
			   
			   ЗафиксироватьОрганизацию =  Стр.Фиксировать;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Валюты" Тогда
			   
			    ЗафиксироватьВалюту =  Стр.Фиксировать;

		   ИначеЕсли  стр.Фильтр = "Фильтр_Проекты" Тогда
		   	   
			    ЗафиксироватьПроект =  Стр.Фиксировать;

		   КонецЕсли;	   
		 		  
	  КонецЦикла;	  
	
	
КонецПроцедуры

Процедура ЗаполнитьОтборПоПериодам(ГоризонтДатаНачала,ГоризонтДатаОкончания);
	
	
	Если Периодичность = Перечисления.Периодичность.Месяц Тогда
		
		ГоризонтДатаНачала = НачалоМесяца(ГоризонтДатаНачала);
		ГоризонтДатаОкончания = НачалоДня(КонецМесяца(ГоризонтДатаОкончания));
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда	
		
		ГоризонтДатаНачала = НачалоКвартала(ГоризонтДатаНачала);
		ГоризонтДатаОкончания = НачалоДня(КонецКвартала(ГоризонтДатаОкончания));
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда	
		
		ГоризонтДатаНачала = НачалоГода(ГоризонтДатаНачала);
		ГоризонтДатаОкончания = НачалоДня(КонецГода(ГоризонтДатаОкончания));
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда	
		
		ГоризонтДатаНачала = НачалоНедели(ГоризонтДатаНачала);
		ГоризонтДатаОкончания = НачалоДня(КонецНедели(ГоризонтДатаОкончания));	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Периоды.Ссылка КАК ПериодОтбор,
	               |	Периоды.ДатаНачала
	               |ИЗ
	               |	Справочник.Периоды КАК Периоды
	               |ГДЕ
	               |	Периоды.ДатаНачала = &ГоризонтДатаНачала
	               |	И Периоды.ПометкаУдаления = ЛОЖЬ
	               |	И Периоды.Произвольный = ЛОЖЬ
	               |	И Периоды.Периодичность = &Периодичность
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Периоды.Ссылка,
	               |	Периоды.ДатаОкончания
	               |ИЗ
	               |	Справочник.Периоды КАК Периоды
	               |ГДЕ
	               |	Периоды.ДатаОкончания = &ГоризонтДатаОкончания
	               |	И Периоды.ПометкаУдаления = ЛОЖЬ
	               |	И Периоды.Произвольный = ЛОЖЬ
	               |	И Периоды.Периодичность = &Периодичность";
	
	Запрос.УстановитьПараметр("Периодичность",Периодичность);
	Запрос.УстановитьПараметр("ГоризонтДатаНачала",ГоризонтДатаНачала);
	Запрос.УстановитьПараметр("ГоризонтДатаОкончания",ГоризонтДатаОкончания);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество()>0 Тогда
		
		ПериодПланированияОтборНачало = Результат[0].ПериодОтбор;
		ГоризонтДатаНачала =            Результат[0].ДатаНачала;
		
	КонецЕсли;	
	
	Если Результат.Количество()>1 Тогда
		
		ПериодПланированияОтборОкончание = Результат[1].ПериодОтбор;
		ГоризонтДатаОкончания 			 = Результат[1].ДатаНачала;

		
	КонецЕсли;	
	
	
КонецПроцедуры



&НаКлиенте
Процедура Применить(Команда)
	
	СформироватьПредставлениеОтборов();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СтруктураФильтровАдрес",СтруктураФильтровАдрес);
	СтруктураПараметров.Вставить("Бланк",Бланк);
	СтруктураПараметров.Вставить("ПредставлениеОтборов",ПредставлениеОтборов);
	
		
	
	Оповестить("СТ_ИзмененОтбор",СтруктураПараметров);
	Закрыть();
		
КонецПроцедуры

Процедура УстановитьДоступностьЭлементов()
	
	  Элементы.ПериодПланированияОтборНачало.Доступность 	= ЗафиксироватьПериод;
	  Элементы.ПериодПланированияОтборОкончание.Доступность = ЗафиксироватьПериод;
	  
	  Элементы.Фильтр_Сценарии.Доступность = ЗафиксироватьСценарий;
	  Элементы.Фильтр_Организации.Доступность = ЗафиксироватьОрганизацию;
      Элементы.Фильтр_Проекты.Доступность = ЗафиксироватьПроект;
      Элементы.Фильтр_Валюты.Доступность = ЗафиксироватьВалюту;
	  
	  
КонецПроцедуры	

&НаКлиенте
Процедура ПериодИзОбщихОтборовПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов()

КонецПроцедуры


&НаКлиенте
Процедура ЗафиксироватьСценарийПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов()

КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьОрганизациюПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов()

КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВалютуПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов()

КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьПроектПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов()

КонецПроцедуры


 
 
 
 
