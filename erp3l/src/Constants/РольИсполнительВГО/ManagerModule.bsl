
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура НачальноеЗаполнение() Экспорт

	ИмяКонстанты = "РольИсполнительВГО";
	НаименованиеРоли = НСтр("ru = 'Исполнитель сверки ВГО'", ОбщегоНазначения.КодОсновногоЯзыка());
	СформироватьКонстанту(ИмяКонстанты, НаименованиеРоли);
	
	ИмяКонстанты = "РольКураторВГО";
	НаименованиеРоли = НСтр("ru = 'Куратор сверки ВГО'", ОбщегоНазначения.КодОсновногоЯзыка());
	СформироватьКонстанту(ИмяКонстанты, НаименованиеРоли);

КонецПроцедуры

Процедура СформироватьКонстанту(ИмяКонстанты, НаименованиеРоли)
	
	Если Не Константы[ИмяКонстанты].Получить().Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаРоль = Справочники.РолиКонтактныхЛиц.НайтиПоНаименованию(НаименованиеРоли);
	Если Не ЗначениеЗаполнено(СсылкаРоль) Тогда
		
		ОбъектРоль = Справочники.РолиКонтактныхЛиц.СоздатьЭлемент();
		ОбъектРоль.Наименование = НаименованиеРоли;
		ОбъектРоль.УстановитьНовыйКод();
		//ОбъектРоль.ПроверятьУникальность = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектРоль);
		СсылкаРоль = ОбъектРоль.Ссылка;
		
	КонецЕсли;
	
	Константы[ИмяКонстанты].Установить(СсылкаРоль);		
	
КонецПроцедуры

Процедура ПереходНаКонстанты() Экспорт

	Если Метаданные.РегистрыСведений.Найти("УдалитьОтветственныеЗаСверкуВГОПоОрганизациям") = Неопределено Тогда
		Возврат;//удален рс	
	КонецЕсли;

	НачальноеЗаполнение();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(т.ПериодСценария) КАК ПериодСценария,
	|	МАКСИМУМ(т.Сценарий) КАК Сценарий
	|ПОМЕСТИТЬ АктуальнаяНастройка
	|ИЗ
	|	РегистрСведений.УдалитьОтветственныеЗаСверкуВГОПоОрганизациям КАК т
	|ГДЕ
	|	т.ПериодСценария В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(п.ПериодСценария) КАК ПериодСценария
	|			ИЗ
	|				РегистрСведений.УдалитьОтветственныеЗаСверкуВГОПоОрганизациям КАК п)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСценария,
	|	Сценарий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.Организация КАК Организация,
	|	т.Куратор КАК Куратор,
	|	т.Исполнитель КАК Исполнитель
	|ИЗ
	|	РегистрСведений.УдалитьОтветственныеЗаСверкуВГОПоОрганизациям КАК т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальнаяНастройка КАК АктуальнаяНастройка
	|		ПО т.ПериодСценария = АктуальнаяНастройка.ПериодСценария
	|			И т.Сценарий = АктуальнаяНастройка.Сценарий");
	
	РольИспольнитель = Константы.РольИсполнительВГО.Получить();
	РольКуратор = Константы.РольКураторВГО.Получить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.Исполнитель.Пустая() Тогда
			РегистрыСведений.ОтветственныеОрганизаций.ЗаписатьОтветственного(
				Выборка.Организация, РольИспольнитель, Выборка.Исполнитель);
		КонецЕсли;
		
		Если Не Выборка.Куратор.Пустая() Тогда
			РегистрыСведений.ОтветственныеОрганизаций.ЗаписатьОтветственного(
				Выборка.Организация, РольКуратор, Выборка.Куратор);
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Функция АдресаОтветственныхОрганизаций() Экспорт

	Запрос = Новый Запрос(ТекстЗапроса_АдресаОтветственныхВГО());
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Свернуть("Организация,АдресЭП");
	Результат.Индексы.Добавить("Организация");

	Возврат Результат;

КонецФункции

Функция ТекстЗапроса_АдресаОтветственныхВГО() Экспорт

	Возврат
	"ВЫБРАТЬ
	|	РольИсполнительВГО.Значение КАК Роль,
	|	ЛОЖЬ КАК Куратор
	|ПОМЕСТИТЬ втРоли
	|ИЗ
	|	Константа.РольИсполнительВГО КАК РольИсполнительВГО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РольКураторВГО.Значение,
	|	ИСТИНА
	|ИЗ
	|	Константа.РольКураторВГО КАК РольКураторВГО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтветственныеОрганизаций.Организация КАК Организация,
	|	втРоли.Куратор КАК Куратор,
	|	ОтветственныеОрганизаций.Пользователь КАК Пользователь,
	|	КИ.АдресЭП КАК АдресЭП
	|ИЗ
	|	РегистрСведений.ОтветственныеОрганизаций КАК ОтветственныеОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРоли КАК втРоли
	|		ПО ОтветственныеОрганизаций.Роль = втРоли.Роль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК КИ
	|		ПО ОтветственныеОрганизаций.Пользователь = КИ.Ссылка
	|			И (КИ.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailПользователя))
	|			И (КИ.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	КИ.АдресЭП <> """"";

КонецФункции

#КонецЕсли
