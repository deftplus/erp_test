#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Количество() > 0 Тогда
		
		Периоды = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ЭтотОбъект.ВыгрузитьКолонку("ПериодОтчета"));
		Валюты = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ЭтотОбъект.ВыгрузитьКолонку("Валюта"));
		
		//
		СтруктураКурса = ПолучитьСтруктуруКурсаПоПериодамИВалютам(Валюты, Периоды);
		Для каждого Движение Из ЭтотОбъект Цикл
			
			Движение.Сумма = Движение.Зарезервировано + Движение.Заявлено;
			
			СтрокиКурса = СтруктураКурса.НайтиСтроки(Новый Структура("Период, Валюта", Движение.ПериодОтчета,Движение.Валюта));
			Если СтрокиКурса.Количество() > 0 Тогда
				
				СтрокаКурса = СтрокиКурса[0];
				
				Курс = ?(ЗначениеЗаполнено(СтрокаКурса.Курс), СтрокаКурса.Курс, 1);
				Кратность = ?(ЗначениеЗаполнено(СтрокаКурса.Кратность), СтрокаКурса.Кратность, 1);
				
				КурсПлан = ?(ЗначениеЗаполнено(СтрокаКурса.ПлановыйКурс), СтрокаКурса.ПлановыйКурс, Курс);
				КратностьПлан = ?(ЗначениеЗаполнено(СтрокаКурса.ПлановаяКратность), СтрокаКурса.ПлановаяКратность, Кратность);
				
			Иначе
				Курс = 1;
				Кратность = 1;
				
				КурсПлан = 1;
				КратностьПлан = 1;
				
			КонецЕсли;
			
			Движение.СуммаУпр = Движение.Зарезервировано * КурсПлан / КратностьПлан + Движение.Заявлено * Курс / Кратность;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОперативноеПланированиеПовтИспУХ.АктуализироватьПоказателиБюджетированияРезервФакт()
		ИЛИ ЭтотОбъект.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//
	Предназначение = ЭтотОбъект[0].Предназначение;
	
	//
	Колонки = "ПериодОтчета, ЦФО,Проект,ПриходРасход,Валюта,СтатьяБюджета,Аналитика1,Аналитика2,Аналитика3,Аналитика4,Аналитика5,Аналитика6,Зарезервировано,Заявлено";
	ТаблицаПоказателей=ЭтотОбъект.ВыгрузитьКолонки(Колонки);
	ТаблицаПоказателей.Колонки.Добавить("Сценарий", Новый ОписаниеТипов("СправочникСсылка.Сценарии"));
	ТаблицаПоказателей.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(18,2));
	ТаблицаПоказателей.Колонки.Добавить("СуммаУпр", ОбщегоНазначения.ОписаниеТипаЧисло(18,2));
	
	Для Каждого Строка Из ЭтотОбъект Цикл
		СтрокаПоказателя = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоказателя, Строка);
		
		СтрокаПоказателя.Сумма = Строка.Зарезервировано + Строка.Заявлено;
		СтрокаПоказателя.СуммаУпр = СтрокаПоказателя.Сумма;
		
	КонецЦикла;
	
	Если ТаблицаПоказателей.Количество()>0 Тогда
		
		// 
		ТаблицаПоказателей.ЗаполнитьЗначения(Справочники.Сценарии.Резерв, "Сценарий");
		ТаблицаПоказателей.Колонки.ЦФО.Имя = "Организация";
		ТаблицаПоказателей.Колонки.СтатьяБюджета.Имя = ВстраиваниеОПКПереопределяемый.ПолучитьИмяРеквизитаСтатьяБюджета(Предназначение);
		
		//
		ВстраиваниеОПКПереопределяемый.ОбновитьПоказателиОтчетовПоОперативнымДанным(Предназначение, ТаблицаПоказателей);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает таблицу курсов, используемую для расчета СуммыУпр.
Функция ПолучитьСтруктуруКурсаПоПериодамИВалютам(Валюты, Периоды)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Валюта
	|ПОМЕСТИТЬ ВТ_Валюты
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	Валюты.Ссылка В(&СписокВалют)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Ссылка КАК Период,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.Периодичность КАК Периодичность
	|ПОМЕСТИТЬ ВТ_СписокПериодов
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ
	|	Периоды.Ссылка В(&СписокПериодов)
	|	И Периоды.Произвольный = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалют.Период КАК ДатаКурса,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВТ_КурсыВалютВсе
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Валюта В(&СписокВалют)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокПериодов.Период КАК Период,
	|	ВТ_КурсыВалютВсе.Валюта КАК Валюта,
	|	МАКСИМУМ(ВТ_КурсыВалютВсе.ДатаКурса) КАК ДатаКурса
	|ПОМЕСТИТЬ ВТ_ДатыКурсовВалют
	|ИЗ
	|	ВТ_СписокПериодов КАК ВТ_СписокПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыВалютВсе КАК ВТ_КурсыВалютВсе
	|		ПО ВТ_СписокПериодов.ДатаНачала >= ВТ_КурсыВалютВсе.ДатаКурса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокПериодов.Период,
	|	ВТ_КурсыВалютВсе.Валюта,
	|	ВТ_СписокПериодов.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодическиеКурсы.Валюта КАК Валюта,
	|	ПериодическиеКурсы.ПериодКурса КАК ПериодКурса,
	|	ПериодическиеКурсы.СреднийКурсЗаПериод КАК ПлановыйКурс,
	|	ПериодическиеКурсы.Кратность КАК ПлановаяКратность,
	|	ПериодическиеКурсы.ПериодКурса.Периодичность КАК Периодичность,
	|	ПериодическиеКурсы.ПериодКурса.ДатаНачала КАК ДатаКурса
	|ПОМЕСТИТЬ ВТ_ПлановыеКурсыВсе
	|ИЗ
	|	РегистрСведений.ПериодическиеКурсы КАК ПериодическиеКурсы
	|ГДЕ
	|	ПериодическиеКурсы.Сценарий = ЗНАЧЕНИЕ(Справочник.Сценарии.Резерв)
	|	И ПериодическиеКурсы.ПериодКурса.Произвольный = ЛОЖЬ
	|	И ПериодическиеКурсы.Валюта В(&СписокВалют)
	|	И ПериодическиеКурсы.ПериодКурса.Периодичность В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_СписокПериодов.Периодичность КАК Периодичность
	|			ИЗ
	|				ВТ_СписокПериодов КАК ВТ_СписокПериодов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокПериодов.Период КАК Период,
	|	ВТ_СписокПериодов.Периодичность КАК Периодичность,
	|	ВТ_ПлановыеКурсыВсе.Валюта КАК Валюта,
	|	МАКСИМУМ(ВТ_ПлановыеКурсыВсе.ДатаКурса) КАК ДатаКурса
	|ПОМЕСТИТЬ ВТ_ДатыПлановыхКурсов
	|ИЗ
	|	ВТ_СписокПериодов КАК ВТ_СписокПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеКурсыВсе КАК ВТ_ПлановыеКурсыВсе
	|		ПО ВТ_СписокПериодов.Периодичность = ВТ_ПлановыеКурсыВсе.Периодичность
	|			И ВТ_СписокПериодов.ДатаНачала >= ВТ_ПлановыеКурсыВсе.ДатаКурса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокПериодов.Период,
	|	ВТ_СписокПериодов.Периодичность,
	|	ВТ_ПлановыеКурсыВсе.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыПлановыхКурсов.Период КАК Период,
	|	ВТ_ДатыПлановыхКурсов.Валюта КАК Валюта,
	|	ВТ_ПлановыеКурсыВсе.ПлановыйКурс КАК ПлановыйКурс,
	|	ВТ_ПлановыеКурсыВсе.ПлановаяКратность КАК ПлановаяКратность
	|ПОМЕСТИТЬ ВТ_ПлановыеКурсы
	|ИЗ
	|	ВТ_ДатыПлановыхКурсов КАК ВТ_ДатыПлановыхКурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеКурсыВсе КАК ВТ_ПлановыеКурсыВсе
	|		ПО ВТ_ДатыПлановыхКурсов.Периодичность = ВТ_ПлановыеКурсыВсе.Периодичность
	|			И ВТ_ДатыПлановыхКурсов.Валюта = ВТ_ПлановыеКурсыВсе.Валюта
	|			И ВТ_ДатыПлановыхКурсов.ДатаКурса = ВТ_ПлановыеКурсыВсе.ДатаКурса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыКурсовВалют.Период КАК Период,
	|	ВТ_ДатыКурсовВалют.Валюта КАК Валюта,
	|	ВТ_КурсыВалютВсе.Курс КАК Курс,
	|	ВТ_КурсыВалютВсе.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВТ_КурсыВалют
	|ИЗ
	|	ВТ_ДатыКурсовВалют КАК ВТ_ДатыКурсовВалют
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыВалютВсе КАК ВТ_КурсыВалютВсе
	|		ПО ВТ_ДатыКурсовВалют.Валюта = ВТ_КурсыВалютВсе.Валюта
	|			И ВТ_ДатыКурсовВалют.ДатаКурса = ВТ_КурсыВалютВсе.ДатаКурса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокПериодов.Период КАК Период,
	|	ВТ_Валюты.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_ПериодВалюта
	|ИЗ
	|	ВТ_СписокПериодов КАК ВТ_СписокПериодов,
	|	ВТ_Валюты КАК ВТ_Валюты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодВалюта.Период КАК Период,
	|	ВТ_ПериодВалюта.Валюта КАК Валюта,
	|	ВТ_ПлановыеКурсы.ПлановыйКурс КАК ПлановыйКурс,
	|	ВТ_ПлановыеКурсы.ПлановаяКратность КАК ПлановаяКратность,
	|	ЕСТЬNULL(ВТ_КурсыВалют.Курс, 1) КАК Курс,
	|	ЕСТЬNULL(ВТ_КурсыВалют.Кратность, 1) КАК Кратность
	|ИЗ
	|	ВТ_ПериодВалюта КАК ВТ_ПериодВалюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеКурсы КАК ВТ_ПлановыеКурсы
	|		ПО ВТ_ПериодВалюта.Период = ВТ_ПлановыеКурсы.Период
	|			И ВТ_ПериодВалюта.Валюта = ВТ_ПлановыеКурсы.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыВалют КАК ВТ_КурсыВалют
	|		ПО ВТ_ПериодВалюта.Период = ВТ_КурсыВалют.Период
	|			И ВТ_ПериодВалюта.Валюта = ВТ_КурсыВалют.Валюта";
	
	Запрос.УстановитьПараметр("СписокВалют", Валюты);
	Запрос.УстановитьПараметр("СписокПериодов", Периоды);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("Период, Валюта");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли


