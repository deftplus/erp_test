#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы
// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ПрослеживаемыеТоварыВСоставеОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.7.259";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("52fd303f-a455-4d54-bc37-9f9acef84c93");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПрослеживаемыеТоварыВСоставеОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет данные регистра Прослеживаемые товары в составе ОС по данным документов Внутреннее потребление товаров';
									|en = 'Fills in the Traceable goods register data in fixed assets by the Inventory consumption — Non-operational activities document data'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ТоварыОрганизаций.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПрослеживаемыеТоварыВСоставеОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ТоварыОрганизаций.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

// Параметры:
//   Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра  = "РегистрНакопления.ПрослеживаемыеТоварыВСоставеОС";
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(СписокДокументов, ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|  Документ.Ссылка КАК Ссылка
	|ИЗ
	|  Документ.ВнутреннееПотреблениеТоваров КАК Документ
	|ГДЕ
	|  ИСТИНА В
	|    (ВЫБРАТЬ ПЕРВЫЕ 1
	|      ИСТИНА
	|    ИЗ
	|      Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТоварыВСоставеОС КАК ПрослеживаемыеТоварыВСоставеОС
	|        ПО ТаблицаВидыЗапасов.Ссылка = ПрослеживаемыеТоварыВСоставеОС.Регистратор
	|    ГДЕ
	|      ТаблицаВидыЗапасов.Ссылка = Документ.Ссылка
	|      И Документ.Проведен
	|      И ТаблицаВидыЗапасов.СтатьяРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|      И ТаблицаВидыЗапасов.НомерГТД.РНПТ
	|      И ТаблицаВидыЗапасов.КоличествоПоРНПТ > 0
	|      И ТИПЗНАЧЕНИЯ(ТаблицаВидыЗапасов.АналитикаРасходов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|      И ПрослеживаемыеТоварыВСоставеОС.Регистратор ЕСТЬ NULL
	|      И Документ.Дата >= &ДатаНачалаПрослеживаемости)
	|";

	Запрос.УстановитьПараметр("ДатаНачалаПрослеживаемости", Константы.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров.Получить());

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);

КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
  
  ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
  ДополнительныеПараметры.ОбновляемыеДанные = Параметры.ОбновляемыеДанные;
  
  Регистраторы = Новый Массив;
  Регистраторы.Добавить("Документ.ВнутреннееПотреблениеТоваров");
  
  Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
    Регистраторы,
    "РегистрНакопления.ПрослеживаемыеТоварыВСоставеОС",
    Параметры.Очередь,
    ДополнительныеПараметры);
  
КонецПроцедуры
#КонецОбласти

#КонецОбласти

#КонецЕсли
