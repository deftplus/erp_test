#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//++ НЕ УТКА

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Возвращаемое значение:
// 	см. МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете() Экспорт
	
	ПараметрыОтражения = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете();
	ПараметрыОтражения.ПутьКДаннымОбъектНастройки = "ГруппаФинансовогоУчета";
	ПараметрыОтражения.ПутьКДаннымНаправлениеДеятельности = "НаправлениеДеятельности";
	ПараметрыОтражения.ПутьКДаннымПодразделение = "Подразделение";
	ПараметрыОтражения.ПутьКДаннымМестоУчета = "Подразделение";
	ПараметрыОтражения.РесурсыУпр.Добавить("ОбесценениеУпр");
	ПараметрыОтражения.РесурсыРегл.Добавить("ОбесценениеРегл");
	
	МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

// Определяет источники уточнения счета, доступные в регистре и их свойства.
//
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник
//                               уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
//Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
//	
//	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиУточненияСчетаАмортизация(СвойстваИсточника);
//	
//КонецФункции

// Определяет источники подразделений регистра и их свойства.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
//Функция ИсточникиПодразделений() Экспорт
//
//	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиПодразделенийАмортизация();
//
//КонецФункции

// Определяет источники направлений регистра и их свойства.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
//Функция ИсточникиНаправлений() Экспорт
//
//	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиНаправлений();
//
//КонецФункции

// Определяет источники заполнения субконто.
//
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
//Функция ИсточникиСубконто() Экспорт
//
//	МассивСубконто = Новый Массив;
//	МассивСубконто.Добавить("ОсновноеСредство");
//	МассивСубконто.Добавить("СтатьяРасходов");
//
//	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконто, МассивСубконто);
//
//КонецФункции

// Определяет показатели в валюте регистра.
//
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
//Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт
//
//	ПоказателиВВалюте = Новый Соответствие;
//	Возврат ПоказателиВВалюте;
//
//КонецФункции

// Определяет показатели в валюте регистра.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
//Функция ПоказателиКоличества() Экспорт
//
//	ПоказателиКоличества = Новый Соответствие;
//	Возврат ПоказателиКоличества;
//
//КонецФункции

//-- НЕ УТКА

// Определяет показатели регистра.
//
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Амортизация", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "АмортизацияРегл", "ВалютаРегл"));//АмортизацияРегл = АмортизацияРегл + АмортизацияЦФ
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.ОбесценениеВНА.Имя;
	ИмяТаблицыИзменений = "ОбесценениеВНАИзменение"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	Возврат;
КонецПроцедуры

// Процедура регистрации данных для обработчика обновления ОбработатьДанныеДляПереходаНаВерсию.
// 
// Параметры:
//  Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	Возврат;	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	Возврат;
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#КонецЕсли
