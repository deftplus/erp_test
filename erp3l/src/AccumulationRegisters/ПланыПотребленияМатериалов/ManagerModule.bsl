#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список полуфабрикатов/продукции, потреблеющих заданный полуфабрикат.
//
// Параметры:
//  Полуфабрикат - Структура - параметры полуфабриката.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - данные о потребителях полуфабриката.
//
Функция ПотребителиПолуфабриката(Полуфабрикат) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланыПотребленияМатериалов.Сценарий КАК Сценарий,
		|	ПланыПотребленияМатериалов.Статус КАК Статус,
		|	ПланыПотребленияМатериалов.НоменклатураПродукции КАК Номенклатура,
		|	ПланыПотребленияМатериалов.ХарактеристикаПродукции КАК Характеристика,
		|	ПланыПотребленияМатериалов.ПодразделениеДиспетчер КАК Подразделение,
		|	ПланыПотребленияМатериалов.ПланПроизводства КАК ПланПроизводства,
		|	ПланыПотребленияМатериалов.СпецификацияПродукции КАК Спецификация,
		|	ПланыПотребленияМатериалов.НазначениеПродукции КАК Назначение,
		|	ПланыПотребленияМатериалов.ДатаПроизводства КАК Период
		|ИЗ
		|	РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
		|ГДЕ
		|	ПланыПотребленияМатериалов.Сценарий = &Сценарий
		|	И ПланыПотребленияМатериалов.Статус = &Статус
		|	И ПланыПотребленияМатериалов.Номенклатура = &Номенклатура
		|	И ПланыПотребленияМатериалов.Характеристика = &Характеристика
		|	И ПланыПотребленияМатериалов.Назначение = &Назначение
		|	И ПланыПотребленияМатериалов.ПодразделениеДиспетчер = &Подразделение
		|	И ПланыПотребленияМатериалов.ПланПроизводства = &ПланПроизводства
		|	И ПланыПотребленияМатериалов.Период = &ДатаВыпускаПолуфабриката
		|	И ПланыПотребленияМатериалов.ЭтоПолуфабрикат = ИСТИНА");
	
	Запрос.УстановитьПараметр("Сценарий", Полуфабрикат.Сценарий);
	Запрос.УстановитьПараметр("Статус", Полуфабрикат.Статус);
	Запрос.УстановитьПараметр("Номенклатура", Полуфабрикат.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Полуфабрикат.Характеристика);
	Запрос.УстановитьПараметр("Назначение", Полуфабрикат.Назначение);
	Запрос.УстановитьПараметр("Подразделение", Полуфабрикат.Подразделение);
	Запрос.УстановитьПараметр("ПланПроизводства", Полуфабрикат.ПланПроизводства);
	Запрос.УстановитьПараметр("ДатаВыпускаПолуфабриката", Полуфабрикат.ДатаВыпускаПолуфабриката);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ПодразделениеДиспетчер)
	|	И ЗначениеРазрешено(Сценарий)
	|	И ЗначениеРазрешено(ВидПлана)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ПланыПотребленияМатериалов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.3.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("dfe98c65-b54b-498d-8b22-a8a25fd4e5ff");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПланыПотребленияМатериалов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Изменяет регистратор движений - вместо документа ""План производства"" устанавливается ""Регистратор плана производства"".
	|Заполняет измерение ""Спецификация продукции"".
	|Заполняет измерение ""Вид плана"".
	|Заполняет ресурс ""К заказу"".
	|Отменяет движения в статусе ""Отменен""';
	|en = 'Changes the movements recorder - sets ""Production plan recorder"" instead of the ""Production plan"" document.
	|Fills in the ""Product BOM"" dimension.
	|Fills in the ""Plan profile"" dimension.
	|Fills in the ""To order"" resource.
	|Cancels movements in the ""Canceled"" status'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.РегистраторПланаПроизводства.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПланыПотребленияМатериалов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПланыПотребленияМатериалов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПланПроизводства.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланыПотребленияМатериалов.Регистратор КАК Ссылка
		|ИЗ
		|	РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
		|ГДЕ
		|	(ПланыПотребленияМатериалов.Регистратор ССЫЛКА Документ.ПланПроизводства
		|	И ПланыПотребленияМатериалов.Сценарий.ИспользоватьДляПланированияМатериалов)
		|	ИЛИ ПланыПотребленияМатериалов.ВидПлана = ЗНАЧЕНИЕ(Справочник.ВидыПланов.ПустаяСсылка)
		|	ИЛИ ПланыПотребленияМатериалов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Отменен)
		|	ИЛИ (ПланыПотребленияМатериалов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
		|	И ПланыПотребленияМатериалов.Количество <> 0
		|	И ПланыПотребленияМатериалов.КЗаказу = 0)");
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияМатериалов";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
		Параметры,
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"),
		ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияМатериалов";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
		Параметры.Очередь,
		,
		ПолноеИмяРегистра);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПланыПотребленияМатериалов.Период КАК Период,
		|	ПланыПотребленияМатериалов.Регистратор КАК Регистратор,
		|	ПланыПотребленияМатериалов.НомерСтроки КАК НомерСтроки,
		|	ПланыПотребленияМатериалов.Активность КАК Активность,
		|	ПланыПотребленияМатериалов.Сценарий КАК Сценарий,
		|	ПланыПотребленияМатериалов.Статус КАК Статус,
		|	ПланыПотребленияМатериалов.Номенклатура КАК Номенклатура,
		|	ПланыПотребленияМатериалов.Характеристика КАК Характеристика,
		|	ПланыПотребленияМатериалов.Назначение КАК Назначение,
		|	ПланыПотребленияМатериалов.ПодразделениеДиспетчер КАК ПодразделениеДиспетчер,
		|	ПланыПотребленияМатериалов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		|	ПланыПотребленияМатериалов.Склад КАК Склад,
		|	ПланыПотребленияМатериалов.ПланПроизводства КАК ПланПроизводства,
		|	ПланыПотребленияМатериалов.ДатаПроизводства КАК ДатаПроизводства,
		|	ВЫБОР
		|		КОГДА ПланыПотребленияМатериалов.СпецификацияПродукции <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ТОГДА ПланыПотребленияМатериалов.СпецификацияПродукции
		|		ИНАЧЕ ПланыПотребленияМатериалов.УдалитьСпецификация
		|	КОНЕЦ КАК СпецификацияПродукции,
		|	ПланыПотребленияМатериалов.НазначениеПродукции КАК НазначениеПродукции,
		|	ПланыПотребленияМатериалов.НоменклатураПродукции КАК НоменклатураПродукции,
		|	ПланыПотребленияМатериалов.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	ПланыПотребленияМатериалов.РазделительРасчета КАК РазделительРасчета,
		|	ПланыПотребленияМатериалов.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
		|	ПланыПотребленияМатериалов.УдалитьДатаВыпускаПолуфабриката КАК УдалитьДатаВыпускаПолуфабриката,
		|	ПланыПотребленияМатериалов.УдалитьСпецификацияПолуфабриката КАК УдалитьСпецификацияПолуфабриката,
		|	ПланыПотребленияМатериалов.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ПланПроизводстваДокумент.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
		|				И ПланыПотребленияМатериалов.Количество <> 0
		|				И ПланыПотребленияМатериалов.КЗаказу = 0
		|			ТОГДА ПланыПотребленияМатериалов.Количество
		|		ИНАЧЕ ПланыПотребленияМатериалов.КЗаказу
		|	КОНЕЦ КАК КЗаказу,
		|	ПланыПотребленияМатериалов.КоличествоНаЕдиницуПродукции КАК КоличествоНаЕдиницуПродукции,
		|	ПланыПотребленияМатериалов.СодержитРасчетноеКоличество КАК СодержитРасчетноеКоличество,
		|	ПланыПотребленияМатериалов.УдалитьСпецификация КАК УдалитьСпецификация,
		|	ПланПроизводстваДокумент.ВидПлана КАК ВидПлана
		|ИЗ
		|	РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПроизводства КАК ПланПроизводстваДокумент
		|		ПО ПланыПотребленияМатериалов.ПланПроизводства = ПланПроизводстваДокумент.Ссылка
		|ГДЕ
		|	ПланыПотребленияМатериалов.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистраторПланаПроизводства.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РегистраторПланаПроизводства КАК РегистраторПланаПроизводства
		|ГДЕ
		|	РегистраторПланаПроизводства.ПланПроизводства = &Регистратор
		|	И РегистраторПланаПроизводства.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДокументПланПроизводства.Статус КАК Статус
		|ИЗ
		|	Документ.ПланПроизводства КАК ДокументПланПроизводства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистраторПланаПроизводства КАК РегистраторПланаПроизводства
		|		ПО РегистраторПланаПроизводства.ПланПроизводства = ДокументПланПроизводства.Ссылка
		|ГДЕ
		|	(ДокументПланПроизводства.Ссылка = &Регистратор
		|			ИЛИ РегистраторПланаПроизводства.Ссылка = &Регистратор)");
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегистраторПланаПроизводства");
			Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПланПроизводства") Тогда
				ЭлементБлокировки.УстановитьЗначение("ПланПроизводства", Выборка.Регистратор);
			Иначе
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
			КонецЕсли;
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			Запрос.УстановитьПараметр("Регистратор", Выборка.Регистратор);
			МассивРезультатов = Запрос.ВыполнитьПакет(); 
			
			ВыборкаСтатус = МассивРезультатов[2].Выбрать();
			
			Если ВыборкаСтатус.Следующий() 
				И ВыборкаСтатус.Статус = Перечисления.СтатусыПланов.Отменен Тогда
				
				НаборЗаписейСтарый = РегистрыНакопления.ПланыПотребленияМатериалов.СоздатьНаборЗаписей();
				НаборЗаписейСтарый.Отбор.Регистратор.Установить(Выборка.Регистратор);
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейСтарый);
				
			ИначеЕсли Не МассивРезультатов[0].Пустой()
				И Не МассивРезультатов[1].Пустой() Тогда
				
				НаборЗаписейНовый = РегистрыНакопления.ПланыПотребленияМатериалов.СоздатьНаборЗаписей();
				НаборЗаписейНовый.Отбор.Регистратор.Установить(МассивРезультатов[1].Выгрузить()[0].Ссылка);
				НаборЗаписейНовый.Загрузить(МассивРезультатов[0].Выгрузить());
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНовый);
				
				НаборЗаписейСтарый = РегистрыНакопления.ПланыПотребленияМатериалов.СоздатьНаборЗаписей();
				НаборЗаписейСтарый.Отбор.Регистратор.Установить(Выборка.Регистратор);
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейСтарый);
				
			ИначеЕсли Не МассивРезультатов[0].Пустой() Тогда
				
				НаборЗаписейНовый = РегистрыНакопления.ПланыПотребленияМатериалов.СоздатьНаборЗаписей();
				НаборЗаписейНовый.Отбор.Регистратор.Установить(Выборка.Регистратор);
				НаборЗаписейНовый.Загрузить(МассивРезультатов[0].Выгрузить());
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНовый);
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор, ДополнительныеПараметры);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Регистратор);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
