#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//++ НЕ УТКА

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Возвращаемое значение:
// 	см. МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете() Экспорт
	
	ПараметрыОтражения = МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете();
	ПараметрыОтражения.ПутьКДаннымОбъектНастройки = "ГруппаФинансовогоУчета";
	ПараметрыОтражения.ПутьКДаннымНаправлениеДеятельности = "НаправлениеДеятельности";
	ПараметрыОтражения.ПутьКДаннымПодразделение = "Подразделение";
	ПараметрыОтражения.ПутьКДаннымМестоУчета = "Подразделение";
	ПараметрыОтражения.РесурсыУпр.Добавить("Стоимость");
	ПараметрыОтражения.РесурсыУпр.Добавить("ПриростСтоимости");
	ПараметрыОтражения.РесурсыРегл.Добавить("СтоимостьРегл");
	ПараметрыОтражения.РесурсыРегл.Добавить("СтоимостьЦФ");
	ПараметрыОтражения.РесурсыРегл.Добавить("ПриростСтоимостиРегл");
	
	МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	МеждународныйУчетПоДаннымОстаточныхФинансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции

// Определяет источники уточнения счета, доступные в регистре и их свойства.
//
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник
//                               уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиУточненияСчетаАмортизация(СвойстваИсточника); // Амортизация, т.к. для НИОКР амортизация в этом регистре.
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиПодразделенийСтоимость();

КонецФункции

// Определяет источники направлений регистра и их свойства.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт

	Возврат ВнеоборотныеАктивыСлужебный.ИсточникиНаправлений();

КонецФункции

// Определяет источники заполнения субконто.
//
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить("НематериальныйАктив");
	МассивСубконто.Добавить("СтатьяРасходов");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконто, МассивСубконто);

КонецФункции

// Определяет показатели в валюте регистра.
//
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	Возврат ПоказателиВВалюте;

КонецФункции

// Определяет показатели в валюте регистра.
//
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиКоличества() Экспорт

	ПоказателиКоличества = Новый Соответствие;
	Возврат ПоказателиКоличества;

КонецФункции

//-- НЕ УТКА

// Определяет показатели регистра.
//
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Стоимость", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьРегл", "ВалютаРегл"));//СтоимостьРегл = СтоимостьРегл + СтоимостьЦФ
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.СтоимостьНМА.Имя;
	ИмяТаблицыИзменений = "СтоимостьНМАИзменение"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.СтоимостьНМА.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.6.32";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("bd6bcdae-e2f1-45a4-ba63-6dfe2592bc4e");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СтоимостьНМА.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Стоимость НМА"":
	|- заполняет новые ресурсы ""Прирост стоимости (УУ)"", ""Прирост стоимости (БУ)""';
	|en = 'Updates ""Intangible assets cost"" register:
	|- populates new resources ""Cost growth (MA)"", ""Cost growth (AC)""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПереоценкаНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеНМА2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВводОстатковВнеоборотныхАктивов2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ИзменениеПараметровНМА2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПеремещениеНМА2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПереоценкаНМА2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПодготовкаКПередачеНМА2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СписаниеНМА2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

// Регистрирует данные к обработке при переходе на новую версию.
// 
// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.СтоимостьНМА";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаписиРегистра.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистра
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|			ПО ТаблицаНМА.Ссылка = ЗаписиРегистра.Регистратор
	|			И ТаблицаНМА.НематериальныйАктив = ЗаписиРегистра.НематериальныйАктив
	|	ГДЕ
	|		ЗаписиРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		И (ТаблицаНМА.РезервПереоценкиСтоимости - ТаблицаНМА.РезервПереоценкиАмортизации > 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиСтоимостиРегл - ТаблицаНМА.РезервПереоценкиАмортизацииРегл > 0)
	|
	|		И НЕ ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистраПроверка
	|			ГДЕ
	|				ЗаписиРегистраПроверка.Регистратор = ЗаписиРегистра.Регистратор
	|				И (ЗаписиРегистраПроверка.ПриростСтоимости <> 0
	|					ИЛИ ЗаписиРегистраПроверка.ПриростСтоимостиРегл <> 0))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаписиРегистра.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистра
	|	ГДЕ
	|		ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПереоценкаНМА2_4
	|
	|		И (ЗаписиРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ЗаписиРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеСтоимостиНМА)
	|				И (ЗаписиРегистра.СтоимостьРегл <> 0 ИЛИ ЗаписиРегистра.Стоимость <> 0)
	|
	|			ИЛИ ЗаписиРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ЗаписиРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА)
	|				И (ЗаписиРегистра.РезервПереоценкиСтоимости > 0 ИЛИ ЗаписиРегистра.РезервПереоценкиСтоимостиРегл > 0))
	|
	|		И НЕ ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистраПроверка
	|			ГДЕ
	|				ЗаписиРегистраПроверка.Регистратор = ЗаписиРегистра.Регистратор
	|				И (ЗаписиРегистраПроверка.ПриростСтоимости <> 0
	|					ИЛИ ЗаписиРегистраПроверка.ПриростСтоимостиРегл <> 0))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаписиРегистра.Регистратор КАК Регистратор
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаписиРегистра.Регистратор КАК Регистратор
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЗаписиРегистра.Регистратор КАК Регистратор,
	|				ЗаписиРегистра.НематериальныйАктив КАК НематериальныйАктив,
	|				ЗаписиРегистра.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|				ЗаписиРегистра.РезервПереоценкиСтоимостиРегл КАК РезервПереоценкиСтоимостиРегл
	|			ИЗ
	|				РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистра
	|			ГДЕ
	|				ЗаписиРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И (ЗаписиРегистра.РезервПереоценкиСтоимости <> 0
	|						ИЛИ ЗаписиРегистра.РезервПереоценкиСтоимостиРегл <> 0)
	|				И (ЗаписиРегистра.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПеремещениеНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.СписаниеНМА2_4)
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ
	|				ЗаписиРегистра.Регистратор КАК Регистратор,
	|				ЗаписиРегистра.НематериальныйАктив КАК НематериальныйАктив,
	|				-ЗаписиРегистра.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|				-ЗаписиРегистра.РезервПереоценкиАмортизацииРегл КАК РезервПереоценкиАмортизацииРегл
	|			ИЗ
	|				РегистрНакопления.АмортизацияНМА КАК ЗаписиРегистра
	|			ГДЕ
	|				ЗаписиРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И (ЗаписиРегистра.РезервПереоценкиАмортизации <> 0
	|						ИЛИ ЗаписиРегистра.РезервПереоценкиАмортизацииРегл <> 0)
	|				И (ЗаписиРегистра.Регистратор ССЫЛКА Документ.ИзменениеПараметровНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПеремещениеНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА2_4
	|						ИЛИ ЗаписиРегистра.Регистратор ССЫЛКА Документ.СписаниеНМА2_4)
	|
	|			) КАК ЗаписиРегистра
	|
	|		СГРУППИРОВАТЬ ПО
	|			ЗаписиРегистра.Регистратор,
	|			ЗаписиРегистра.НематериальныйАктив
	|
	|		ИМЕЮЩИЕ
	|			СУММА(ЗаписиРегистра.РезервПереоценкиСтоимости) > 0
	|				ИЛИ СУММА(ЗаписиРегистра.РезервПереоценкиСтоимостиРегл) > 0
	|
	|		) КАК ЗаписиРегистра
	|
	|	ГДЕ
	|		НЕ ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистраПроверка
	|			ГДЕ
	|				ЗаписиРегистраПроверка.Регистратор = ЗаписиРегистра.Регистратор
	|				И (ЗаписиРегистраПроверка.ПриростСтоимости <> 0
	|					ИЛИ ЗаписиРегистраПроверка.ПриростСтоимостиРегл <> 0))
	|
	|	) КАК ЗаписиРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ЗаписиРегистра
	|ГДЕ
	|	ЗаписиРегистра.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4
	|	И ЗаписиРегистра.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПустаяСсылка)
	|	И ЗаписиРегистра.Стоимость <> 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.СтоимостьНМА";
	ИмяРегистра = "СтоимостьНМА";
	МетаданныеРегистра = Метаданные.РегистрыНакопления.СтоимостьНМА;
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	// Обновление через получение данных из документа
	#Область ПростоеОбновление
	Для каждого ДанныеСтроки Из ОбновляемыеДанные Цикл
		
		Если ТипЗнч(ДанныеСтроки.Регистратор) <> Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4") Тогда
			Продолжить;
		КонецЕсли;
		
		ВнеоборотныеАктивы.ПолучитьДвиженияИЗаписатьПриОбновленииИБ(
			ИмяРегистра,
			ПолноеИмяРегистра,
			ДанныеСтроки.Регистратор,
			МетаданныеРегистра,
			Параметры);
			
	КонецЦикла;
	#КонецОбласти
	
	// Обновление через получение данных из регистров
	#Область СложноеОбновление
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбновляемыеДанные.Регистратор
	|ПОМЕСТИТЬ ОбновляемыеДанные
	|ИЗ
	|	&ОбновляемыеДанные КАК ОбновляемыеДанные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ОбновляемыеДанные.Регистратор) <> ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|	И ТИПЗНАЧЕНИЯ(ОбновляемыеДанные.Регистратор) <> ТИП(Документ.АмортизацияНМА2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервДооценки.Регистратор КАК Регистратор,
	|	РезервДооценки.НематериальныйАктив КАК НематериальныйАктив,
	|	РезервДооценки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	РезервДооценки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РезервДооценки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР
	|		КОГДА СУММА(РезервДооценки.Сумма) > 0
	|			ТОГДА СУММА(РезервДооценки.Сумма)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимости,
	|
	|	ВЫБОР
	|		КОГДА СУММА(РезервДооценки.СуммаРегл) > 0
	|			ТОГДА СУММА(РезервДооценки.СуммаРегл)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПриростСтоимостиРегл
	|
	|ПОМЕСТИТЬ втРезервДооценки
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьНМА.Регистратор КАК Регистратор,
	|		СтоимостьНМА.НематериальныйАктив КАК НематериальныйАктив,
	|		СтоимостьНМА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|		СтоимостьНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтоимостьНМА.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|		СтоимостьНМА.РезервПереоценкиСтоимости КАК Сумма,
	|		СтоимостьНМА.РезервПереоценкиСтоимостиРегл КАК СуммаРегл
	|	ИЗ
	|		РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|	ГДЕ
	|		СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (СтоимостьНМА.РезервПереоценкиСтоимости > 0
	|			ИЛИ СтоимостьНМА.РезервПереоценкиСтоимостиРегл > 0)
	|		И СтоимостьНМА.Регистратор В
	|				(ВЫБРАТЬ
	|					ОбновляемыеДанные.Регистратор
	|				ИЗ
	|					ОбновляемыеДанные КАК ОбновляемыеДанные)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизацияНМА.Регистратор,
	|		АмортизацияНМА.НематериальныйАктив,
	|		АмортизацияНМА.ГруппаФинансовогоУчета,
	|		АмортизацияНМА.НаправлениеДеятельности,
	|		АмортизацияНМА.ИдентификаторФинЗаписи,
	|		-АмортизацияНМА.РезервПереоценкиАмортизации,
	|		-АмортизацияНМА.РезервПереоценкиАмортизацииРегл
	|	ИЗ
	|		РегистрНакопления.АмортизацияНМА КАК АмортизацияНМА
	|	ГДЕ
	|		АмортизацияНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (АмортизацияНМА.РезервПереоценкиАмортизации > 0
	|			ИЛИ АмортизацияНМА.РезервПереоценкиАмортизацииРегл > 0)
	|		И АмортизацияНМА.Регистратор В
	|				(ВЫБРАТЬ
	|					ОбновляемыеДанные.Регистратор
	|				ИЗ
	|					ОбновляемыеДанные КАК ОбновляемыеДанные)) КАК РезервДооценки
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервДооценки.Регистратор,
	|	РезервДооценки.НематериальныйАктив,
	|	РезервДооценки.ГруппаФинансовогоУчета,
	|	РезервДооценки.НаправлениеДеятельности,
	|	РезервДооценки.ИдентификаторФинЗаписи
	|
	|ИМЕЮЩИЕ
	|	(СУММА(РезервДооценки.Сумма) > 0
	|		ИЛИ СУММА(РезервДооценки.СуммаРегл) > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ИзменениеПараметровНМА2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	втРезервДооценки.НематериальныйАктив      КАК НематериальныйАктив,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	втРезервДооценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	ДанныеДокумента.Организация               КАК КорОрганизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.НаправлениеДеятельностиФлаг
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|		ИНАЧЕ втРезервДооценки.НаправлениеДеятельности
	|	КОНЕЦ                                   КАК КорНаправлениеДеятельности,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ГруппаФинансовогоУчетаФлаг
	|			ТОГДА ДанныеДокумента.ГруппаФинансовогоУчета
	|		ИНАЧЕ втРезервДооценки.ГруппаФинансовогоУчета
	|	КОНЕЦ                                   КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ИзменениеПараметровСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ втТаблицаДвижений
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|ГДЕ
	|	ДанныеДокумента.ГруппаФинансовогоУчетаФлаг
	|		ИЛИ ДанныеДокумента.НаправлениеДеятельностиФлаг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	втРезервДооценки.НематериальныйАктив      КАК НематериальныйАктив,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ГруппаФинансовогоУчетаФлаг
	|			ТОГДА ДанныеДокумента.ГруппаФинансовогоУчета
	|		ИНАЧЕ втРезервДооценки.ГруппаФинансовогоУчета
	|	КОНЕЦ                                     КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.НаправлениеДеятельностиФлаг
	|			ТОГДА ДанныеДокумента.НаправлениеДеятельности
	|		ИНАЧЕ втРезервДооценки.НаправлениеДеятельности
	|	КОНЕЦ                                     КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	ДанныеДокумента.Организация               КАК КорОрганизация,
	|	втРезервДооценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи   КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ИзменениеПараметровСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|ГДЕ
	|	ДанныеДокумента.ГруппаФинансовогоУчетаФлаг
	|		ИЛИ ДанныеДокумента.НаправлениеДеятельностиФлаг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// ПеремещениеНМА2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	втРезервДооценки.НематериальныйАктив      КАК НематериальныйАктив,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	втРезервДооценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	ДанныеДокумента.ОрганизацияПолучатель     КАК КорОрганизация,
	|
	|	втРезервДооценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеСтоимостиНМАвДругуюОрганизацию) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеСтоимостиНМАвДругуюОрганизацию) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Организация <> ДанныеДокумента.ОрганизацияПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.ОрганизацияПолучатель     КАК Организация,
	|	втРезервДооценки.НематериальныйАктив         КАК НематериальныйАктив,
	|
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	втРезервДооценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	ДанныеДокумента.Организация               КАК КорОрганизация,
	|	втРезервДооценки.НаправлениеДеятельности  КАК КорНаправлениеДеятельности,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи   КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеСтоимостиНМАизДругойОрганизации) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеСтоимостиНМАизДругойОрганизации) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Организация <> ДанныеДокумента.ОрганизацияПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// ПодготовкаКПередачеНМА2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	втРезервДооценки.НематериальныйАктив         КАК НематериальныйАктив,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	втРезервДооценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезерваПереоценкиСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// СписаниеНМА2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                    КАК Регистратор,
	|	ДанныеДокумента.Дата                      КАК Период,
	|	ДанныеДокумента.Организация               КАК Организация,
	|	втРезервДооценки.НематериальныйАктив         КАК НематериальныйАктив,
	|	втРезервДооценки.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|	втРезервДооценки.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|
	|	втРезервДооценки.ПриростСтоимости         КАК ПриростСтоимости,
	|	втРезервДооценки.ПриростСтоимостиРегл     КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	втРезервДооценки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезерваПереоценкиСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втРезервДооценки КАК втРезервДооценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНМА2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = втРезервДооценки.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// ПереоценкаНМА2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	Строки.Регистратор                        КАК Регистратор,
	|	Строки.Период                             КАК Период,
	|	Строки.Организация                        КАК Организация,
	|	Строки.НематериальныйАктив                КАК НематериальныйАктив,
	|	Строки.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|
	|	Строки.Стоимость                          КАК ПриростСтоимости,
	|	Строки.СтоимостьРегл                      КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УвеличениеСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.Регистратор В (ВЫБРАТЬ ОбновляемыеДанные.Регистратор ИЗ ОбновляемыеДанные КАК ОбновляемыеДанные)
	|	И ТИПЗНАЧЕНИЯ(Строки.Регистратор) = ТИП(Документ.ПереоценкаНМА2_4)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеСтоимостиНМА)
	|	И (Строки.СтоимостьРегл <> 0 ИЛИ Строки.Стоимость <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	Строки.Регистратор                        КАК Регистратор,
	|	Строки.Период                             КАК Период,
	|	Строки.Организация                        КАК Организация,
	|	Строки.НематериальныйАктив                КАК НематериальныйАктив,
	|	Строки.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|
	|	Строки.Амортизация                        КАК ПриростСтоимости,
	|	Строки.АмортизацияРегл                    КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УвеличениеНакопленнойАмортизацииНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.Регистратор В (ВЫБРАТЬ ОбновляемыеДанные.Регистратор ИЗ ОбновляемыеДанные КАК ОбновляемыеДанные)
	|	И ТИПЗНАЧЕНИЯ(Строки.Регистратор) = ТИП(Документ.ПереоценкаНМА2_4)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	Строки.Регистратор                        КАК Регистратор,
	|	Строки.Период                             КАК Период,
	|	Строки.Организация                        КАК Организация,
	|	Строки.НематериальныйАктив                КАК НематериальныйАктив,
	|	Строки.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|
	|	Строки.РезервПереоценкиСтоимости          КАК ПриростСтоимости,
	|	Строки.РезервПереоценкиСтоимостиРегл      КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УменьшениеВеличиныДооценкиСтоимостиНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.Регистратор В (ВЫБРАТЬ ОбновляемыеДанные.Регистратор ИЗ ОбновляемыеДанные КАК ОбновляемыеДанные)
	|	И ТИПЗНАЧЕНИЯ(Строки.Регистратор) = ТИП(Документ.ПереоценкаНМА2_4)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА)
	|	И (Строки.РезервПереоценкиСтоимости > 0
	|			ИЛИ Строки.РезервПереоценкиСтоимостиРегл > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	Строки.Регистратор                        КАК Регистратор,
	|	Строки.Период                             КАК Период,
	|	Строки.Организация                        КАК Организация,
	|	Строки.НематериальныйАктив                КАК НематериальныйАктив,
	|	Строки.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|
	|	Строки.РезервПереоценкиАмортизации        КАК ПриростСтоимости,
	|	Строки.РезервПереоценкиАмортизацииРегл    КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорОрганизация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                              КАК КорГруппаФинансовогоУчета,
	|	
	|	Строки.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА) КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.Регистратор В (ВЫБРАТЬ ОбновляемыеДанные.Регистратор ИЗ ОбновляемыеДанные КАК ОбновляемыеДанные)
	|	И ТИПЗНАЧЕНИЯ(Строки.Регистратор) = ТИП(Документ.ПереоценкаНМА2_4)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА)
	|	И (Строки.РезервПереоценкиАмортизации <> 0
	|		ИЛИ Строки.РезервПереоценкиАмортизацииРегл <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО            КАК ВидДвижения,
	|	ОбновляемыеДанные.Регистратор  КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО            КАК Период,
	|	НЕОПРЕДЕЛЕНО            КАК Организация,
	|	НЕОПРЕДЕЛЕНО            КАК НематериальныйАктив,
	|	НЕОПРЕДЕЛЕНО            КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО            КАК НаправлениеДеятельности,
	|
	|	НЕОПРЕДЕЛЕНО            КАК ПриростСтоимости,
	|	НЕОПРЕДЕЛЕНО            КАК ПриростСтоимостиРегл,
	|
	|	НЕОПРЕДЕЛЕНО            КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО            КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО            КАК КорГруппаФинансовогоУчета,
	|	
	|	НЕОПРЕДЕЛЕНО            КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО            КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ОбновляемыеДанные КАК ОбновляемыеДанные
	|ГДЕ
	|	НЕ ОбновляемыеДанные.Регистратор В (ВЫБРАТЬ втТаблицаДвижений.Регистратор ИЗ втТаблицаДвижений)
	|	И ТИПЗНАЧЕНИЯ(ОбновляемыеДанные.Регистратор) <> ТИП(Документ.ПереоценкаНМА2_4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаДвижений.ВидДвижения                      КАК ВидДвижения,
	|	втТаблицаДвижений.Регистратор                      КАК Регистратор,
	|	втТаблицаДвижений.Период                           КАК Период,
	|	втТаблицаДвижений.Организация                      КАК Организация,
	|	втТаблицаДвижений.НематериальныйАктив              КАК НематериальныйАктив,
	|	втТаблицаДвижений.ГруппаФинансовогоУчета           КАК ГруппаФинансовогоУчета,
	|	втТаблицаДвижений.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|
	|	втТаблицаДвижений.ПриростСтоимости                 КАК ПриростСтоимости,
	|	втТаблицаДвижений.ПриростСтоимостиРегл             КАК ПриростСтоимостиРегл,
	|
	|	втТаблицаДвижений.КорОрганизация                   КАК КорОрганизация,
	|	втТаблицаДвижений.КорНаправлениеДеятельности       КАК КорНаправлениеДеятельности,
	|	втТаблицаДвижений.КорГруппаФинансовогоУчета        КАК КорГруппаФинансовогоУчета,
	|	
	|	втТаблицаДвижений.ИдентификаторФинЗаписи           КАК ИдентификаторФинЗаписи,
	|	втТаблицаДвижений.ХозяйственнаяОперация            КАК ХозяйственнаяОперация,
	|	втТаблицаДвижений.НастройкаХозяйственнойОперации   КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	втТаблицаДвижений КАК втТаблицаДвижений
	|
	|ИТОГИ ПО 
	|	Регистратор";	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбновляемыеДанные", ОбновляемыеДанные);
	
	Результат = Запрос.Выполнить();
	ВыборкаРегистратор = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистратор.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(ВыборкаРегистратор.Регистратор));
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаРегистратор.Регистратор);

			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаРегистратор.Регистратор);

			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления.СтоимостьНМА.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистратор.Регистратор);
			НаборЗаписей.Прочитать();
			
			Выборка = ВыборкаРегистратор.Выбрать();
			Пока Выборка.Следующий() Цикл
			
				Если НЕ ЗначениеЗаполнено(Выборка.Период) Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				
			КонецЦикла;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;

			ЗафиксироватьТранзакцию();
			
		Исключение

			ОтменитьТранзакцию();

			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать записи регистра ""Стоимость НМА"": %1 по причине: %2';
											|en = 'Cannot process ""Intangible assets cost"" entries: %1. Reason: %2'"),
										Строка(Выборка.Регистратор),
										ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
										
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение, 
				Выборка.Регистратор.Метаданные(), 
				Выборка.Регистратор, 
				ТекстСообщения);

		КонецПопытки;
		
	КонецЦикла;
	#КонецОбласти
	
	// Обновление через чтение существующих записей
	#Область ОбновлениеЧерезЧтениеСуществующихЗаписей
	
	ПорядокУчетаВНАВУпрУчете = Константы.УдалитьПорядокУчетаВНАВУпрУчете.Получить();
	
	Для Каждого Выборка Из ОбновляемыеДанные Цикл
		
		Если ТипЗнч(Выборка.Регистратор) <> Тип("ДокументСсылка.АмортизацияНМА2_4") Тогда
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьНМА.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления.СтоимостьНМА.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл
				
				Если НЕ ЗначениеЗаполнено(Запись.ПорядокУчетаУУ)
					И Запись.Стоимость <> 0 Тогда
					Запись.ПорядокУчетаУУ = ПорядокУчетаВНАВУпрУчете;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Регистратор);
			
		КонецПопытки;
		
	КонецЦикла;
	#КонецОбласти
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
