  &Вместо("ПередЗапускомПрограммы")
  Процедура ллл_ПередЗапускомПрограммы()
	
	// Привилегированный режим (установлен платформой).
	
	Если ТекущийРежимЗапуска() = Неопределено
	   И ДлительныеОперации.ЭтоЗапускБезВызоваПередЗапускомПрограммы() Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка основного языка программирования, установленного в конфигурации.
	ТекущийЯзыкВстроенногоЯзыка = Метаданные.СвойстваОбъектов.ВариантВстроенногоЯзыка["Русский"];
	Если Метаданные.ВариантВстроенногоЯзыка <> ТекущийЯзыкВстроенногоЯзыка Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Вариант встроенного языка конфигурации ""%1"" не поддерживается.
			           |Используйте вариант языка ""%2"".';
			           |en = 'The built-in configuration language option ""%1"" is not supported.
			           |Use language option ""%2"" instead.'"),
			Метаданные.ВариантВстроенногоЯзыка,
			Метаданные.СвойстваОбъектов.ВариантВстроенногоЯзыка["Русский"]);
	КонецЕсли;
	
	// Проверка настройки совместимости конфигурации с версией платформы.
	СистемнаяИнформация = Новый СистемнаяИнформация;
	МинимальнаяВерсияПлатформы = "8.3.14.1694";
	Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СистемнаяИнформация.ВерсияПриложения, МинимальнаяВерсияПлатформы) < 0 Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для запуска необходима версия платформы 1С:Предприятие %1 или выше.';
				|en = 'The application requires 1C:Enterprise version %1 or later.'"), МинимальнаяВерсияПлатформы);
	КонецЕсли;
	
	Режимы = Метаданные.СвойстваОбъектов.РежимСовместимости;
	ТекущийРежим = Метаданные.РежимСовместимости;
	
	ПоддерживаемаяВерсияПлатформы = "8.3.16";
	ВерсияПлатформы = ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СистемнаяИнформация.ВерсияПриложения);
	
	Если ТекущийРежим = Режимы.НеИспользовать Тогда
		ПоддерживаемыеВерсииПлатформы = СтрРазделить("8.3.14, 8.3.15, 8.3.16, 8.3.17, 8.3.18, 8.3.19, 8.3.20", ", ", Ложь);
		
		Если ПоддерживаемыеВерсииПлатформы.Найти(ВерсияПлатформы) <> Неопределено Тогда 
			НеПоддерживаемаяВерсияПлатформы = "";
		Иначе
			НеПоддерживаемаяВерсияПлатформы = ВерсияПлатформы;
		КонецЕсли;
	ИначеЕсли ТекущийРежим = Режимы.Версия8_1 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.1"
	ИначеЕсли ТекущийРежим = Режимы.Версия8_2_13 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.2.13"
	ИначеЕсли ТекущийРежим = Режимы.Версия8_2_16 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.2.16";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_1 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.1";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_2 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.2";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_3 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.3";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_4 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.4";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_5 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.5";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_6 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.6";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_7 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.7";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_8 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.8";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_9 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.9";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_10 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.10";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_11 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.11";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_12 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.12";
	ИначеЕсли ТекущийРежим = Режимы.Версия8_3_13 Тогда
		НеПоддерживаемаяВерсияПлатформы = "8.3.13";
	Иначе
		ТекущийРежимСтрокой = Строка(ТекущийРежим);
		
		Если СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_14")
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_15")
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_16") 
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_17") 
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_18")
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_19")
			Или СтрЗаканчиваетсяНа(ТекущийРежимСтрокой, "8_3_20")Тогда 
			
			НеПоддерживаемаяВерсияПлатформы = "";
		Иначе
			НеПоддерживаемаяВерсияПлатформы = ТекущийРежимСтрокой;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НеПоддерживаемаяВерсияПлатформы) Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Режим совместимости конфигурации с 1С:Предприятием версии %1 не поддерживается.
			           |Для запуска установите в конфигурации режим совместимости ""Не использовать"" при разработке на версии %2
			           |(или ""Версия %2"" при разработке на более старших версиях).';
			           |en = 'Configuration compatibility mode ""Version %1"" is not supported. 
			           |To start the application, set the compatibility mode to ""None"" (on 1C:Enterprise version %2)
			           | or to ""Version %2"" (on a later 1C:Enterprise version).'"),
			НеПоддерживаемаяВерсияПлатформы, ПоддерживаемаяВерсияПлатформы);
	КонецЕсли;
	
	// Проверка заполнения версии конфигурации.
	Если ПустаяСтрока(Метаданные.Версия) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено свойство конфигурации Версия.';
								|en = 'The Version configuration property is blank.'");
	Иначе
		Попытка
			НулеваяВерсия = ОбщегоНазначенияКлиентСервер.СравнитьВерсии(Метаданные.Версия, "0.0.0.0") = 0;
		Исключение
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не правильно заполнено свойство конфигурации Версия: ""%1"".
				           |Правильный формат, например: ""1.2.3.45"".';
				           |en = 'The Version configuration property has invalid value: %1.
				           |Use the following format: ""1.2.3.45"".'"),
				Метаданные.Версия);
		КонецПопытки;
		Если НулеваяВерсия Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не правильно заполнено свойство конфигурации Версия: ""%1"".
				           |Версия не может быть нулевой.';
				           |en = 'The Version configuration property has invalid value: %1.
				           |The version cannot be zero.'"),
				Метаданные.Версия);
		КонецЕсли;
	КонецЕсли;
	
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	Если Не ТекущийПользовательИБ.АутентификацияСтандартная
	   И Не ТекущийПользовательИБ.АутентификацияОС
	   И Не ТекущийПользовательИБ.АутентификацияOpenID Тогда
		ВызватьИсключение НСтр("ru = 'Вход в программу запрещен. Обратитесь к администратору.';
								|en = 'Signing-in denied. Contact the Administrator.'");
	КонецЕсли;
	
	Если Не Метаданные.ОсновныеРоли.Содержит(Метаданные.Роли.АдминистраторСистемы)
	 Или Не Метаданные.ОсновныеРоли.Содержит(Метаданные.Роли.ПолныеПрава) Тогда
		ВызватьИсключение
			НСтр("ru = 'В конфигурации в свойстве ОсновныеРоли не указаны
			           |стандартные роли АдминистраторСистемы и ПолныеПрава.';
			           |en = 'The DefaultRoles configuration property does not include
			           |the following standard roles: SystemAdministrator and FullAccess.'");
	КонецЕсли;
	
	// Проверка возможности выполнения обработчиков установки параметров сеанса для запуска программы.
	ПроверитьВозможностьЗапуска();
	
	Если Не ЗначениеЗаполнено(ПользователиИнформационнойБазы.ТекущийПользователь().Имя)
	   И (Не ОбщегоНазначения.РазделениеВключено()
	      Или Не ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных())
	   И ОбновлениеИнформационнойБазыСлужебный.ВерсияИБ("СтандартныеПодсистемы",
	       ОбщегоНазначения.РазделениеВключено()) = "0.0.0.0" Тогда
		
		ПользователиСлужебный.УстановитьНачальныеНастройки("");
	КонецЕсли;
	
	ИнтеграцияПодсистемБСП.ПередЗапускомПрограммы();
	
	СкорректироватьНачальнуюСтраницуНеразделенногоПользователя();
	ОбработатьОчередьСкопированныхНастроек();
	
КонецПроцедуры

