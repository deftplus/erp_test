
Функция СформироватьHTMLТекстОповещенияПОльзователяССсылками(знач ЗаготовкаТекста,ТаблицаСсылок=неопределено) экспорт
	
	СтруктураОтвета=Новый Структура();
	ЗаготовкаТекстаHTML=ЗаготовкаТекста;
	
	ОсновнойШаблон=	"<!DOCTYPE html><html><body> СЮДАПОДСТАВИТЬТЕКСТ </body></html>";
	
	
	
	Если не типЗнч(ТаблицаСсылок)=тип("ТаблицаЗначений") тогда
		СтруктураОтвета.Вставить("ТекстHTML",стрЗаменить(ОсновнойШаблон,"СЮДАПОДСТАВИТЬТЕКСТ",ЗаготовкаТекстаHTML));
		СтруктураОтвета.Вставить("Текст",ЗаготовкаТекстаHTML);
		возврат(СтруктураОтвета);
		
	иначе 
		
		
		попытка
		КоличествоСтрок=ТаблицаСсылок.Количество();
		для Счетчик=1 по КоличествоСтрок цикл
			ОбратныйСчетчик=КоличествоСтрок+1-Счетчик;
			строкаТаблицы=ТаблицаСсылок[ОбратныйСчетчик-1];
			ЗаменяемаяТекстоваяПоследовательность="%Ссылка"+стрЗаменить(строка(ОбратныйСчетчик),Символы.НПП,"");	
			ПредставлениеСсылкиHTML="<a href="+строкаТаблицы.HTMLПредставлениеСсылки+">"+Строка(строкаТаблицы.Ссылка)+"</a>";
			ПредставлениеСсылки=Строка(строкаТаблицы.Ссылка); 
			
			ЗаготовкаТекстаHTML=стрЗаменить(ЗаготовкаТекстаHTML,ЗаменяемаяТекстоваяПоследовательность,ПредставлениеСсылкиHTML);
			ЗаготовкаТекста=стрЗаменить(ЗаготовкаТекста,ЗаменяемаяТекстоваяПоследовательность,ПредставлениеСсылки);
			
		КонецЦикла;	
		
		
		ЗаготовкаТекстаHTML=стрЗаменить(ЗаготовкаТекстаHTML,Символы.ВК,"<br>");
		
		
		
		исключение
			

			
		КонецПопытки; 
			
		СтруктураОтвета.Вставить("ТекстHTML",стрЗаменить(ОсновнойШаблон,"СЮДАПОДСТАВИТЬТЕКСТ",ЗаготовкаТекстаHTML));
		СтруктураОтвета.Вставить("Текст",ЗаготовкаТекста);
		возврат(СтруктураОтвета);
	
						
		
					
	КонецЕсли;	
	
КонецФункции 



Процедура СделатьПаузу(Сек)
	scr = Новый COMОбъект("WScript.Shell");
	scr.Run("sleep "+СокрЛП(Число(Сек)),0,1);
КонецПроцедуры  




Функция ПроисходитСогласованиеЗаявки(Заявка)
	Если не типЗнч(Заявка)=тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") тогда возврат ложь; конецЕсли;
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	| РегистрСостоянийОбъектовСрезПоследних.СостояниеОбъекта КАК Состояние
| ИЗ
|	РегистрСведений.РегистрСостоянийОбъектов.СрезПоследних(, Объект=&Объект ) КАК РегистрСостоянийОбъектовСрезПоследних";
	Запрос.УстановитьПараметр("Объект",Заявка);
	Результат=Запрос.Выполнить();        
	ВЫборка=Результат.Выбрать();
	Если ВЫборка.Следующий() тогда
		
		Если ВЫборка.Состояние=Перечисления.Состояниясогласования.НаУтверждении или ВЫборка.Состояние=Перечисления.Состояниясогласования.Рассматривается тогда
			возврат(истина);
		иначе
			возврат(ложь);
		КонецЕсли;	
		
	иначе
		возврат(ложь);
	КонецЕсли;
	
	
	
КонецФункции



Процедура ОповещениеОСозданииЗаявкиНаОплату(Заявка,ДополнительныйТекст="") экспорт
	
	Ссылка=Заявка.ДокументОснование;
	
	
	
	
	КомуОтправлять=неопределено;
	Если ЗначениеЗаполнено(Ссылка.Автор) и не Ссылка.Автор.наименование="<Не указан>" тогда
				КомуОтправлять=Ссылка.Автор;			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка.Менеджер) и не ЗначениеЗаполнено(КомуОтправлять) и не Ссылка.Менеджер.наименование="<Не указан>" тогда
				КомуОтправлять=Ссылка.Менеджер;			
	КонецЕсли;	

	Автор=КомуОтправлять;
	
	Если не ЗначениеЗаполнено(Автор) тогда возврат; конецЕсли;
	
	
	Если значениеЗаполнено(ДополнительныйТекст) и прав(ДополнительныйТекст,1)<>Символы.ВК тогда
			
		ДополнительныйТекст=ДополнительныйТекст+Символы.ВК;	
		
	КонецЕсли;
	
	
	
	ТекстСообщения="";
	ТемаСообщения=""; 
	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	
	
	Если типЗнч(Ссылка)=тип("ДокументСсылка.ПриобретениеТоваровУслуг") тогда 
		ТемаСообщения="К поступлению по проформе " + Ссылка.ЗаказПоставщику.НомерПоДаннымПоставщика + " от " + 
		Формат(Ссылка.ЗаказПоставщику.ДатаПоДаннымПоставщика,"ДЛФ=Д") + " создана заявка на оплату";
		
		
		ТекстСообщения=ТемаСообщения+"#ТекстПроСогласование."+Символы.ВК+"Документы: "+Символы.ВК;
		ТекстСообщения=ТекстСообщения+"%Ссылка1"+Символы.ВК;
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Заявка);
		стр.Ссылка=Заявка;
		
		ТекстСообщения=ТекстСообщения+"%Ссылка2"+Символы.ВК;
		
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Ссылка);
		стр.Ссылка=Ссылка;
		
		
		Если ЗначениеЗаполнено(Ссылка.ДокументОснование) тогда
			 ТекстСообщения=ТекстСообщения+"%Ссылка3"+Символы.ВК;
			 стр=ТаблицаСсылок.Добавить();
			 стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Ссылка.ДокументОснование);
			 стр.Ссылка=Ссылка.ДокументОснование;

			 
			 
		 	Если ЗначениеЗаполнено(Ссылка.ДокументОснование.ДокументОснование) тогда
		 		ТекстСообщения=ТекстСообщения+"%Ссылка4"+Символы.ВК;
			 	стр=ТаблицаСсылок.Добавить();
			 	стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Ссылка.ДокументОснование.ДокументОснование);
			 	стр.Ссылка=Ссылка.ДокументОснование.ДокументОснование;
    		
			КонецЕсли;

		 КонецЕсли;
		 
			
		
	иначе	//на данный момент (июль 2022) иначе - это либо заказ поставщику, либо предзаказ
		
		ТемаСообщения="К инвойсу (проформе) " + Ссылка.НомерПоДаннымПоставщика + " от " + 
		Формат(Ссылка.ДатаПоДаннымПоставщика,"ДЛФ=Д") + " создана заявка на оплату";
		
	    ТекстСообщения=ТемаСообщения+"#ТекстПроСогласование."+ДополнительныйТекст+Символы.ВК+"Документы: "+Символы.ВК;
		ТекстСообщения=ТекстСообщения+"%Ссылка1"+Символы.ВК;
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Заявка);
		стр.Ссылка=Заявка;
		
		ТекстСообщения=ТекстСообщения+"%Ссылка2"+Символы.ВК;
		
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Ссылка);
		стр.Ссылка=Ссылка;
		
		
		Если ЗначениеЗаполнено(Ссылка.ДокументОснование) тогда
			 ТекстСообщения=ТекстСообщения+"%Ссылка3"+Символы.ВК;
			 стр=ТаблицаСсылок.Добавить();
			 стр.HTMLПредставлениеСсылки=ПолучитьНавигационнуюСсылку(Ссылка.ДокументОснование);
			 стр.Ссылка=Ссылка.ДокументОснование;
        КонецЕсли;
		
	КонецЕсли;

	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;
	
	
	//Подождем 2 секунды, чтобы процесс согласования, запущенный асинхронно, успел сделать записи в регистре состояний. 
	//СделатьПаузу(2);
	
	Если ПроисходитСогласованиеЗаявки(Заявка) тогда
		ТекстHTML=стрЗаменить(ТекстHTML,"#ТекстПроСогласование", " и запущен процесс согласования");
		ТекстБезHTML=стрЗаменить(ТекстБезHTML,"#ТекстПроСогласование", " и запущен процесс согласования");
	иначе	
		ТекстHTML=стрЗаменить(ТекстHTML,"#ТекстПроСогласование", "");
		ТекстБезHTML=стрЗаменить(ТекстБезHTML,"#ТекстПроСогласование", "");
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Автор) тогда 
	
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме, Автор, Справочники.ВидыСобытийОповещений.ОбработкаВыполнена, 
		Заявка.Ссылка, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, Автор, Справочники.ВидыСобытийОповещений.ОбработкаВыполнена, 
		Заявка.Ссылка, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
	КонецЕсли;
КонецПроцедуры




Процедура ОповеститьКазначействоОСозданияДокСписанияПоПеречислениюДенегОтАгентаПоОплатеАгентуПоДоставке(докСписания) экспорт
	
	Казначеи=л3_СерверПовтИсп.ЗначениеНетиповойКонстанты("Казначеи");
	Если не типЗнч(Казначеи)=тип("Массив") тогда
		МассивКазначеев=Новый Массив();	
		МассивКазначеев.Добавить(Казначеи);
	иначе
		МассивКазначеев=Казначеи;
	КонецЕсли;	
	

	  
  	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(докСписания);
	стр.Ссылка=ДокСписания;
	
	докЗаявка=докСписания.ЗаявкаНаРасходованиеДенежныхСредств;
	Если не ЗначениеЗаполнено(ДокЗаявка) тогда
		ДокЗаявка=ДокСписания.ДокументОснование;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДокЗаявка) тогда
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(докЗаявка);
	стр.Ссылка=докЗаявка;      
	иначе
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки="";
		стр.Ссылка="";  
	КонецЕсли;
	
	докПредзаказ=докЗаявка.ДокументОснование;
	
	Если ЗначениеЗаполнено(ДокПредзаказ) тогда
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(докПредзаказ);
		стр.Ссылка=докПредзаказ;
	иначе
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки="";
		стр.Ссылка="";	КонецЕсли;	
	
	ТемаСообщения="Требуется произвести оплату от агента по оплате агенту по доставке для инвойса (проформы) "+
	докПредзаказ.НомерПоДаннымПоставщика + " от " +Формат(ДокПредзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д");
	
	ТекстСообщения="Требуется произвести оплату от агента по оплате агенту по доставке по инвойсу (проформе) " +
	докПредзаказ.НомерПоДаннымПоставщика + " от " +Формат(ДокПредзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д")+Символы.ВК+"Документы:"+
	Символы.ВК+"%Ссылка1"+Символы.ВК+"%Ссылка2" +Символы.ВК+"%Ссылка3";
	
	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;

	  
	  
	для каждого Казначей из МассивКазначеев цикл
				   
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме, Казначей, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		ДокСписания, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, Казначей, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		ДокСписания, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
		  
	КонецЦикла;
	
	
КонецПроцедуры	 



Процедура ОтправитьСообщениеЛогистамОПеречисленииДенегОтАгентаПоОплатеАгентуПоДоставке(ДокСписания)  экспорт
	Логисты=л3_СерверПовтИсп.ЗначениеНетиповойКонстанты("Логисты");
	Если не типЗнч(Логисты)=тип("Массив") тогда
		МассивЛогистов=Новый Массив();	
		МассивЛогистов.Добавить(Логисты);
	иначе
		МассивЛогистов=Логисты;
	КонецЕсли;	              
	
	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(докСписания);
	стр.Ссылка=ДокСписания;
	
	докЗаявка=докСписания.ЗаявкаНаРасходованиеДенежныхСредств;
	Если не ЗначениеЗаполнено(ДокЗаявка) тогда
		ДокЗаявка=ДокСписания.ДокументОснование;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокЗаявка) тогда
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(докЗаявка);
	стр.Ссылка=докЗаявка;                  
	
	докПредзаказ=докЗаявка.ДокументОснование;
	
	Если ЗначениеЗаполнено(ДокПредзаказ) тогда
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(ДокПредзаказ);
		стр.Ссылка=ДокПредзаказ;
	иначе
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки="";
		стр.Ссылка="";
		
	КонецЕсли;	

	
	
	иначе
		
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки="";
		стр.Ссылка=""; 
		стр=ТаблицаСсылок.Добавить();
		стр.HTMLПредставлениеСсылки="";
		стр.Ссылка="";

	
	КонецЕсли;
	
	
	ТемаСообщения="Произведена оплата от агента по оплате агенту по доставке для инвойса (проформы) "+
	докПредзаказ.НомерПоДаннымПоставщика + " от " +Формат(ДокПредзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д");
	
	ТекстСообщения="Произведена оплата от агента по оплате агенту по доставке для инвойса (проформы) " +
	докПредзаказ.НомерПоДаннымПоставщика + " от " +Формат(ДокПредзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д")+Символы.ВК+"Документы:"+
	Символы.ВК+"%Ссылка1"+Символы.ВК+"%Ссылка2" +Символы.ВК+"%Ссылка3";
	
	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;
      
	  
	для каждого Логист из МассивЛогистов цикл
				   
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме, Логист, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		ДокСписания, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, Логист, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		ДокСписания, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
		  
	КонецЦикла;
		
КонецПроцедуры


Процедура  ОповеститьАвтораОПеречисленииДСПоПредзаказуВРамкахКороткойСхемы(Предзаказ)  экспорт
	КомуОтправлять=неопределено;
	Если ЗначениеЗаполнено(Предзаказ.Автор) и не Предзаказ.Автор.наименование="<Не указан>" тогда
				КомуОтправлять=Предзаказ.Автор;			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Предзаказ.Менеджер) и не ЗначениеЗаполнено(КомуОтправлять) и не Предзаказ.Менеджер.наименование="<Не указан>" тогда
				КомуОтправлять=Предзаказ.Менеджер;			
	КонецЕсли;	

	Автор=КомуОтправлять;
	
	Если не ЗначениеЗаполнено(Автор) тогда возврат; конецЕсли;
	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(Предзаказ);
	стр.Ссылка=Предзаказ;
	
	ТемаСообщения="К инвойсу (проформе) " + Предзаказ.НомерПоДаннымПоставщика + " от " + 
		Формат(Предзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д") + " зафксирована оплата";
		
	    ТекстСообщения=ТемаСообщения+"Документы: "+Символы.ВК;
		ТекстСообщения=ТекстСообщения+"%Ссылка1"+Символы.ВК;
		
	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;
	
	Если ЗначениеЗаполнено(Автор) тогда 
	
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме, Автор, Справочники.ВидыСобытийОповещений.ОбработкаВыполнена, 
		Предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, Автор, Справочники.ВидыСобытийОповещений.ОбработкаВыполнена, 
		предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
	КонецЕсли;

		
		
	
КонецПроцедуры


Процедура ОтправитьОповещениеЛогистамОГалочкахЗаводаИзготовителя(Предзаказ,ГотовоКОтгрузке, ДеньгиПолучены) экспорт
	  	Логисты=л3_СерверПовтИсп.ЗначениеНетиповойКонстанты("Логисты");
	Если не типЗнч(Логисты)=тип("Массив") тогда
		МассивЛогистов=Новый Массив();	
		МассивЛогистов.Добавить(Логисты);
	иначе
		МассивЛогистов=Логисты;
	КонецЕсли;	              
	
	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(Предзаказ);
	стр.Ссылка=Предзаказ;
	
		
	ТемаСообщения="Инвойс (проформа) "+
	Предзаказ.НомерПоДаннымПоставщика + " от " +Формат(Предзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д")+": "; 
	Если ГотовоКОтгрузке тогда
		ТемаСообщения=ТемаСообщения+"Готово к отгрузке. ";
		
	КонецЕсли;
	
	Если ДеньгиПолучены тогда
		ТемаСообщения=ТемаСообщения+"Денежные средства получены заводом изготовителем. ";
		
	КонецЕсли;
	
	
	
	ТекстСообщения=ТемаСообщения+Символы.ВК+"Документы:"+
	Символы.ВК+"%Ссылка1";
	
	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;
      
	  
	для каждого Логист из МассивЛогистов цикл
				   
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме, Логист, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		Предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, Логист, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		Предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
		  
	КонецЦикла;
	
	
	
КонецПроцедуры


Процедура ОповеститьАвтораОНеобходимостиДобавленияИнвойсов(Заявка,АгентПоОплате,АгентПоДоставке) экспорт
	
	Предзаказ=Заявка.ДокументОснование;
	Если не ЗначениеЗаполнено(Предзаказ) тогда
		возврат;
	КонецЕсли;	
	
	ТаблицаСсылок=Новый таблицаЗначений();
	ТаблицаСсылок.Колонки.Добавить("HTMLПредставлениеСсылки");
	ТаблицаСсылок.Колонки.Добавить("Ссылка");
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(Заявка);
	стр.Ссылка=Заявка;
	
	стр=ТаблицаСсылок.Добавить();
	стр.HTMLПредставлениеСсылки=получитьНавигационнуюСсылку(Заявка);
	стр.Ссылка=Предзаказ; 
	
	ТемаСообщения="Инвойс (проформа) "+
	Предзаказ.НомерПоДаннымПоставщика + " от " +Формат(Предзаказ.ДатаПоДаннымПоставщика,"ДЛФ=Д")+": необходимо приложить инвойсы к заявке на оплату.";
	
	ТекстСообщения=ТемасООБЩЕНИЯ+Символы.ВК+"Приложите инвойсы между "+строка(Предзаказ.Организация)+ " и " + строка(АгентПоОплате)+", а также между "+
	строка(АгентПоОплате)+ " и " + строка(АгентПоДоставке)+". "+Символы.ВК+"Документы: "+"%Ссылка1"+Символы.ВК+"%Ссылка2";
	
	СтруктураФорматированныхТекстовСообщений=ллл_МодульКазначействоОповещения.СформироватьHTMLТекстОповещенияПОльзователяССсылками(ТекстСообщения,ТаблицаСсылок);
    ТекстHTML=СтруктураФорматированныхТекстовСообщений.ТекстHTML;
	ТекстБезHTML=СтруктураФорматированныхТекстовСообщений.Текст;
      
	  
				   
	СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ВСистеме,Предзаказ.Автор, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		Предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения,		, 		, ТекстHTML, ,Неопределено);
		СобытияоповещенийСерверУх.СоздатьЗаписьСобытия(перечисления.СпособыОповещения.ЭлектроннаяПочта, ПредЗаказ.Автор, Справочники.ВидыСобытийОповещений.ПредписаниеИсполнителю, 
		Предзаказ, , ТекущаяДата(), , , ,,  ТемаСообщения, 		,		, ТекстБезHTML, ,Неопределено);
		  
КонецПроцедуры
	
	
	
	

Процедура ллл_ОчисткаОповещенийУчастникамПроцессаСогласованияПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Отказ тогда возврат; конецЕсли;
	Если Источник.Количество()=0  тогда возврат; конецЕсли;
	
	Заявка=Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка();
	записьрегистра=Источник[0];
    ДатаСобытия='00010101';
	Если Записьрегистра.СостояниеЭтапа=Перечисления.СостоянияЭтаповУниверсальныхПроцессов.Завершен и 
		ЗаписьРегистра.ЭтапПроцесса.ТипЭтапа=Перечисления.ТипыЭтаповУниверсальныхПроцессов.ЭтапСогласования  тогда
		ДатаСобытия=Записьрегистра.ДатаОкончания;
		Заявка=ЗаписьРегистра.ДокументПроцесса.КлючевойОбъектПроцесса;
	КонецЕсли;
	
	Запрос=Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОповещенияПользователей.Пользователь КАК Пользователь,
		|	ОповещенияПользователей.ДатаСоздания КАК ДатаСоздания,
		|	ОповещенияПользователей.КатегорияОповещений КАК КатегорияОповещений,
		|	ОповещенияПользователей.ВидОповещения КАК ВидОповещения,
		|	ОповещенияПользователей.ИдентификаторОповещения КАК ИдентификаторОповещения
		|ИЗ
		|	РегистрСведений.ОповещенияПользователей КАК ОповещенияПользователей
		|ГДЕ
		|	ОповещенияПользователей.Задача.СвязанныйОбъект = &СвязанныйОбъект И ОповещенияПользователей.ДатаСоздания < &ДатаСоздания";
	Запрос.УстановитьПараметр("СвязанныйОбъект",Заявка);
	Запрос.УстановитьПараметр("ДатаСоздания",ДатаСобытия);
	Результат = Запрос.Выполнить();


	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		нз=РегистрыСведений.ОповещенияПользователей.СоздатьНаборЗаписей();
		нз.Отбор.Пользователь.Установить(ВЫборка.Пользователь);
		нз.Отбор.ДатаСоздания.Установить(ВЫборка.ДатаСоздания);
		нз.Отбор.КатегорияОповещений.Установить(ВЫборка.КатегорияОповещений);
		нз.Отбор.ВидОповещения.Установить(ВЫборка.ВидОповещения);
		нз.Отбор.ИдентификаторОповещения.Установить(ВЫборка.ИдентификаторОповещения);
		нз.Прочитать();
		нз.Очистить();
		нз.Записать();
	КонецЦикла;
	
	
КонецПроцедуры
