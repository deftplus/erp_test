
Функция ВывестиОтчет(ТабличныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияВыполненияПроцессов.Пользователь,
	|	ИсторияВыполненияПроцессов.Комментарий,
	|	ИсторияВыполненияПроцессов.Событие КАК Событие,
	|	ИсторияВыполненияПроцессов.ЭтапПроцесса,
	|	ИсторияВыполненияПроцессов.ДокументПроцесса,
	|	ИсторияВыполненияПроцессов.Период КАК Период
	|ИЗ
	|	РегистрСведений.ИсторияВыполненияПроцессов КАК ИсторияВыполненияПроцессов
	|ГДЕ
	|	ИсторияВыполненияПроцессов.ДокументПроцесса.КлючевойОбъектПроцесса = &КлючевойОбъектПроцесса
	//|	И  ИсторияВыполненияПроцессов.ЭтапПроцесса.ТипЭтапа В (&ТипЭтапа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Событие УБЫВ";
		
	ТабличныйДокумент.Очистить();
	
	Запрос.УстановитьПараметр("КлючевойОбъектПроцесса" , КлючевойОбъектПроцесса);
	
	Макет = ПолучитьМакет("Макет");
	
	Если ТипЗнч(КлючевойОбъектПроцесса) = Тип("ДокументСсылка.НастраиваемыйОтчет") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ИначеЕсли ЗаявкиНаОперацииКлиентСервер.ЭтоЗаявкаНаОперацию(КлючевойОбъектПроцесса) Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок_Заявка");
	ИначеЕсли ТипЗнч(КлючевойОбъектПроцесса) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок_ДоговорКонтрагента");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок_Заявка");	
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.Заполнить(КлючевойОбъектПроцесса);
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	ОбластьДанных = Макет.ПолучитьОбласть("Данные");
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбластьДанных.Параметры.Заполнить(Выборка);
		Если Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ПроцессЗапущен Тогда
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ЭтапУтвержден;
		ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ЭтапСогласован Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ПометкаНовостиФлагСиний; 
		ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.УтверждениеОтчета Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ПометкаНовостиФлагЗеленый; 
	    ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ОтклонениеОтчета Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ПометкаНовостиФлагКрасный;
		ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ЭтапОтклонен Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ПометкаНовостиФлагКрасный;
	    ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ПроцессОстановлен Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.СостояниеОбменаДаннымиОшибка;
		ИначеЕсли	Выборка.Событие = Перечисления.ВидыОповещенийПользователейУХ.ВыбранСледующийЭтап Тогда 
			ОбластьДанных.Область(1,1,1,1).Картинка = БиблиотекаКартинок.ПометкаНовостиФлагСиний; 	
		КонецЕсли;	 
		
		ТабличныйДокумент.Вывести(ОбластьДанных);
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Подвал"));
	ТабличныйДокумент.ФиксацияСлева=0;
	ТабличныйДокумент.ФиксацияСверху=3;
	
КонецФункции

// Выводит отчет по комментариям для текущего ОбъектаПроцесса.
Функция ВывестиОтчетКомментарии(ТабличныйДокумент) Экспорт
	ДанныеРасшифровки = Неопределено;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетДокумента = ПолучитьМакет("МакетКомментарии");
	НастройкиКД =МакетДокумента.НастройкиПоУмолчанию;
	НастройкиКД.ПараметрыДанных.УстановитьЗначениеПараметра("КлючевойОбъектПроцесса", КлючевойОбъектПроцесса);
	МакетКомпоновки = КомпоновщикМакета.Выполнить(МакетДокумента, НастройкиКД, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	ТабличныйДокумент.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецФункции
