
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	Объект.ИмяФайла=ллл_РаботаСExcelКлиент.ВыбратьФайлExcel();
	
	ws=ллл_РаботаСExcelКлиент.ПолучитьАктивныйЛистЕксель(Объект.ИмяФайла);
	Если не типЗнч(ws)=тип("COMОбъект") тогда
		С=Новый СообщениеПользователю();
		С.Текст="Не удалось прочитать объект Excel";
		С.Поле="ИмяФайла";
		С.Сообщить();
		возврат;
	КонецЕсли;	
	
	МассивИменСтолбцов= ллл_РаботаСExcelКлиент.ПолучитьИменаСтолбцовExcel(ws);
	
	Если МассивИменСтолбцов.Количество()=0 тогда
		С=Новый СообщениеПользователю();
		С.Текст="Не удалось прочитать заголовки столбцов Excel";
		С.Поле="ИмяФайла";
		С.Сообщить();
		возврат;
	
	КонецЕсли;	
		
	//Счетчик=0;
	//для каждого эл из МассивИменСтолбцов цикл
	//	Счетчик=Счетчик+1;
	//	стр=Столбцы.Добавить();
	//	стр.НомерСтолбца=Счетчик;
	//	Если эл="" тогда
	//		стр.ИмяСтолбца="Не распознано";		
	//	иначе	
	//		стр.ИмяСтолбца=эл;
	//		
	//		ИмяСтолбцаВВерхнемРегистре=вРег(эл);
	//		ИмяСтолбцаВВерхнемрегистре=стрзаменить(ИмяСтолбцаВВерхнемРегистре,"№","НОМЕР");
	//		ИмяСтолбцаВВерхнемрегистре=стрзаменить(ИмяСтолбцаВВерхнемРегистре,"N ","НОМЕР ");
	//		ИмяСтолбцаВВерхнемрегистре=стрзаменить(ИмяСтолбцаВВерхнемРегистре,"   "," ");
	//		ИмяСтолбцаВВерхнемрегистре=стрзаменить(ИмяСтолбцаВВерхнемРегистре,"  "," ");
	//		
	//		
	//		
	//		
	//		
	//	КонецЕсли;
	//КонецЦикла; 
	
	
	ТекущаяСтрокаExcel=2;
	Если не ЗначениеЗаполнено(ws.Cells(ТекущаяСтрокаExcel,1).Value) тогда
		ТекущаяСтрокаExcel=3;	
		
	КонецЕсли;	
	
	СвойствоКодРС=СвойствоКодРС();
	
	пока ПрочитатьСтрокаExcel(ws,ТекущаяСтрокаExcel,СвойствоКодРС)
		
		//и ТекущаяСтрокаExcel<3000
		
		
		цикл	
		
		ТекущаяСтрокаExcel=ТекущаяСтрокаExcel+1;	
	КонецЦикла;	
	
	ОбработатьПРочитанноеНаСервере();
	
	
КонецПроцедуры                       

&НаСервере
Процедура ОбработатьПРочитанноеНаСервере()
	СвойствоКодРС=СвойствоКодРС();
	для каждого стр из Объект.ПрочитаноИРаспознано цикл
		ОбработатьСтроку(стр,СвойствоКодРС) ;		
	КонецЦикла;
	
КонецПроцедуры	



&НаСервереБезКонтекста
Функция СвойствоКодРС()
	возврат(ллл_ПоискЗначений.ПолучитьСвойствоКодРС());
КонецФункции	

&НаСерверебезКонтекста
Функция ВернутьДату(входящееЗначение)
	Если типЗнч(входящееЗначение)=тип("Дата") тогда
		возврат(ВходящееЗначение);
	КонецЕсли;	

	Если типЗнч(ВходящееЗначение)=тип("Строка") тогда
		
		СтруктураПроверкиНаДату=инт_JSONОбмен.ЭтоДата(входящееЗначение);	
		Если СтруктураПроверкиНаДату.ЭтоДата тогда
			возврат(СтруктураПроверкиНаДату.ЗначениеДаты);
		иначе
			возврат('00010101');
			
		КонецЕсли;	
	КонецЕсли;	
	
	возврат('00010101');
	
КонецФункции


&НаСерверебезКонтекста
Функция ВернутьЧисло(знач входящееЗначение)
	Если типЗнч(входящееЗначение)=тип("Число") тогда
		возврат(ВходящееЗначение);
	КонецЕсли;	

	Если типЗнч(ВходящееЗначение)=тип("Строка") тогда
		
		ВходящееЗначение=стрЗаменить(ВходящееЗначение,",",".");
		ВходящееЗначение=стрЗаменить(ВходящееЗначение," ","");
		СтруктураПроверкиНаЧисло=инт_JSONОбмен.ЭтоЧисло(входящееЗначение);	
		Если СтруктураПроверкиНаЧисло.ЭтоЧисло тогда
			возврат(СтруктураПроверкиНаЧисло.ЧисловоеЗначение);
		иначе
			возврат(0);
			
		КонецЕсли;	
	КонецЕсли;	
	
	возврат(0);
	
КонецФункции




&НаКлиенте
Функция ПрочитатьСтрокаExcel(ws,номерСтроки,СвойствоКодРС) 
	срокОплаты=ws.Cells(номерСтроки,1).Value;
	Если не значениеЗаполнено(СрокОплаты) тогда возврат ложь; конецЕсли;
	стр=Объект.ПрочитаноИРаспознано.Добавить(); 
	
	стр.СрокОплаты=ВернутьДату(СрокОплаты);	
	стр.НомерСтрокиExcel=номерСтроки;
	стр.КонтрагентExcel=ws.Cells(номерСтроки,2).Value;
	стр.НомерСчета=стрЗаменить(строка(ws.Cells(номерСтроки,3).Value),Символы.НПП,""); 
	стр.ДатаСчета=ВернутьДату(ws.Cells(номерСтроки,4).Value);
	
	Значение5=ВернутьЧисло(ws.Cells(номерСтроки,5).Value);
	Значение6=ВернутьЧисло(ws.Cells(номерСтроки,6).Value);
	
	стр.СуммаСчетаEUR=Значение5;	

	стр.СуммаСчетаUSD=Значение6;	

	
	стр.СуммаСчетаРуб=ВернутьЧисло(ws.Cells(номерСтроки,7).Value);                    
	
	стр.НомерНакладной=стрЗаменить(строка(ws.Cells(номерСтроки,8).Value),Символы.НПП,""); 

	стр.ДатаНакладной=ВернутьДату(ws.Cells(номерСтроки,9).Value); 
	
	стр.СуммаНакладной=ВернутьЧисло(ws.Cells(номерСтроки,10).Value); 
	
	стр.ДатаОплаты=ВернутьДату(ws.Cells(номерСтроки,11).Value);
	
//	ОбработатьСтроку(стр,СвойствоКодРС);
	возврат истина;
КонецФункции

 &НаСервере
 Процедура ОбработатьСтроку(стр,СвойствоКодРС)                                           
	 
	 КодКонтрагента=ПолучитьКодКонтрагентаИзСтрочкиСИменемИКодом(стр.КонтрагентExcel); 
	 Если ЗначениеЗаполнено(КодКонтрагента) тогда
		стр.СопоставленоКонтрагент=ллл_ПоискЗначений.НайтиКонтрагентаПоКодуРС(КодКонтрагента,СвойствоКодРС);		 
	 КонецЕсли;	                                                                                            
	 
	 //Если ЗначениеЗаполнено(стр.ДатаОплаты) тогда
		 Если ЗначениеЗаполнено(стр.НомерНакладной) тогда
			 
		 	стр.СопоставленоПТУ=ллл_ПоискЗначений.НайтиПТУ(стр.НомерНакладной,стр.ДатаНакладной,стр.СопоставленоКонтрагент);
			 
		 КонецЕсли;	  
		 
		 //Если не ЗначениеЗаполнено(стр.СопоставленоПТУ) тогда
			 
		 	стр.СопоставленоЗаказПОставщику=ллл_ПоискЗначений.НайтиЗаказПоставщику(стр.НомерСчета,стр.ДатаСчета,стр.СопоставленоКонтрагент);	 
			
			Если не Значениезаполнено(стр.СопоставленозаказПоставщику) и значениеЗаполнено(стр.СопоставленоПТУ) тогда
				стр.СопоставленоЗаказПоставщику=стр.СопоставленоПТУ.ЗаказПоставщику;	
				
			КонецЕсли;	
			 
		 //КонецЕсли;	 
		
		 
		 
	 //КонецЕсли;	 
	 
	 Если ЗначениеЗаполнено(стр.ДатаОплаты) и (значениезаполнено(стр.СопоставленоПТУ) или значениеЗаполнено(стр.СопоставленоЗаказПоставщику))
		 и (стр.СуммаСчетаРуб+стр.СуммаСчетаUSD + стр.СуммаСчетаEUR  )>0 тогда
		 
		стр.СоздаватьЗаявкуНаОплату=истина;
		стр.СоздаватьДокументСписания=истина;
	КонецЕсли;
	
	
	Если не ЗначениеЗаполнено(стр.ДатаОплаты) и (значениезаполнено(стр.СопоставленоПТУ) или значениеЗаполнено(стр.СопоставленоЗаказПоставщику))
		 и (стр.СуммаСчетаРуб+стр.СуммаСчетаUSD + стр.СуммаСчетаEUR  )>0 тогда
		 
		стр.СоздаватьЗаявкуНаОплату=истина;
		
	КонецЕсли;  
	
	
	Если стр.СоздаватьЗаявкуНаоплату тогда
		
		Если Значениезаполнено(стр.СопоставленоПТУ) и не ЗначениеЗаполнено(стр.СопоставленоПТУ.Договор) тогда
			стр.Ошибки="Не определен договор"; стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь; возврат;
		КонецЕсли;	
		
		Если Значениезаполнено(стр.СопоставленоЗаказПоставщику) и не ЗначениеЗаполнено(стр.СопоставленоЗаказПоставщику.Договор) тогда
			стр.Ошибки="Не определен договор";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
		КонецЕсли; 
		
		
		Если Значениезаполнено(стр.СопоставленоЗаказПоставщику) и не стр.СопоставленоЗаказПоставщику.Проведен тогда		
			
			стр.Ошибки="Документ не проведен";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
	
		КонецЕсли;	
		
		
		Если Значениезаполнено(стр.СопоставленоПТУ) и не стр.СопоставленоПТУ.Проведен тогда		
			
			стр.Ошибки="Документ не проведен";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
	
		КонецЕсли;
			
	КонецЕсли;

	
	
	

	 
 КонецПроцедуры  
 
 
 &НаСервереБезКонтекста
 Функция ПолучитьКодКонтрагентаИзСтрочкиСИменемИКодом(знач ВходящаяСтрока) 
	РазделенныйМассив=СтрРазделить(ВходящаяСтрока," ",ложь);
	ПоследняяПоследовательность=РазделенныйМассив[РазделенныйМассив.Количество()-1];
	
    СтруктураПроверкиНаЧисло=инт_jsonОбмен.ЭтоЧисло(ПоследняяПоследовательность);
	Если  СтруктураПроверкиНаЧисло.ЭтоЧисло тогда
		возврат(СтруктураПроверкиНаЧисло.ЧисловоеЗначение);
		
	иначе
		возврат(0);
		
	КонецЕсли;	
	
	
		
КонецФункции 

&НаКлиенте
Процедура ОбработатьРаспознанныеДанные(Команда)
	ОбработатьРаспознанныеДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьРаспознанныеДанныеНаСервере()
	_Объект=РеквизитФормыВЗначение("Объект");
	_Объект.ОбработатьРаспознанныеДанныеМодуль();
	ЗначениеВРеквизитФормы(_Объект,"Объект");
	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитаноИРаспознаноПриИзмененииНаСервере()
	стр=Объект.ПрочитаноИРаспознано.НайтиПоИдентификатору(Элементы.ПрочитаноИРаспознано.ТекущаяСтрока);
	Если ЗначениеЗаполнено(стр.ДатаОплаты) и (значениезаполнено(стр.СопоставленоПТУ) или значениеЗаполнено(стр.СопоставленоЗаказПоставщику))
		 и (стр.СуммаСчетаРуб+стр.СуммаСчетаUSD + стр.СуммаСчетаEUR  )>0 тогда
		 
		стр.СоздаватьЗаявкуНаОплату=истина;
		стр.СоздаватьДокументСписания=истина;
	КонецЕсли;
	
	
	Если не ЗначениеЗаполнено(стр.ДатаОплаты) и (значениезаполнено(стр.СопоставленоПТУ) или значениеЗаполнено(стр.СопоставленоЗаказПоставщику))
		 и (стр.СуммаСчетаРуб+стр.СуммаСчетаUSD + стр.СуммаСчетаEUR  )>0 тогда
		 
		стр.СоздаватьЗаявкуНаОплату=истина;  
		стр.СоздаватьДокументСписания=ложь;
		
	КонецЕсли;  
	
		Если стр.СоздаватьЗаявкуНаоплату тогда
		
		Если Значениезаполнено(стр.СопоставленоПТУ) и не ЗначениеЗаполнено(стр.СопоставленоПТУ.Договор) тогда
			стр.Ошибки="Не определен договор"; стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь; возврат;
		КонецЕсли;	
		
		Если Значениезаполнено(стр.СопоставленоЗаказПоставщику) и не ЗначениеЗаполнено(стр.СопоставленоЗаказПоставщику.Договор) тогда
			стр.Ошибки="Не определен договор";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
		КонецЕсли; 
		
		
		Если Значениезаполнено(стр.СопоставленоЗаказПоставщику) и не стр.СопоставленоЗаказПоставщику.Проведен тогда		
			
			стр.Ошибки="Документ не проведен";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
	
		КонецЕсли;	
		
		
		Если Значениезаполнено(стр.СопоставленоПТУ) и не стр.СопоставленоПТУ.Проведен тогда		
			
			стр.Ошибки="Документ не проведен";стр.СоздаватьЗаявкуНаоплату=ложь; стр.СоздаватьДокументСписания=ложь;          возврат;
	
		КонецЕсли;
			
	КонецЕсли;

	
	

КонецПроцедуры

&НаКлиенте
Процедура ПрочитаноИРаспознаноПриИзменении(Элемент)
	стр=Объект.ПрочитаноИРаспознано.НайтиПоИдентификатору(Элементы.ПрочитаноИРаспознано.ТекущаяСтрока);
	Если ЗначениеЗаполнено(стр.СопоставленоПТУ) и не ЗначениеЗаполнено(стр.СопоставленоЗаказПоставщику) тогда
		стр.СопоставленоЗаказПоставщику=ЗаказИзПТУ(стр.СопоставленоПТУ);
		
	КонецЕсли;
    ПрочитаноИРаспознаноПриИзмененииНаСервере();
КонецПроцедуры     

&НаСервере
Функция ЗаказИзПТУ(ПТУ)
	возврат(ПТУ.ЗаказПОставщику);
КонецФункции	

&НаСервере
Процедура ПрочитаноИРаспознаноСопоставленоПТУПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПрочитаноИРаспознаноСопоставленоПТУПриИзменении(Элемент)
	ПрочитаноИРаспознаноСопоставленоПТУПриИзмененииНаСервере();
КонецПроцедуры
